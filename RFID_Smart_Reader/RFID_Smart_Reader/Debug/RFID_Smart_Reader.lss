
RFID_Smart_Reader.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000152  00800100  0000f090  0000f124  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000f090  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000121  00800252  00800252  0000f276  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000f276  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000f2d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000e58  00000000  00000000  0000f310  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00037aa3  00000000  00000000  00010168  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000021bc  00000000  00000000  00047c0b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000fb72  00000000  00000000  00049dc7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00006834  00000000  00000000  0005993c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000188a4  00000000  00000000  00060170  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00030ef1  00000000  00000000  00078a14  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00001650  00000000  00000000  000a9905  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000053e5  00000000  00000000  000aaf55  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	86 c2       	rjmp	.+1292   	; 0x50e <__ctors_end>
       2:	00 00       	nop
       4:	a2 c2       	rjmp	.+1348   	; 0x54a <__bad_interrupt>
       6:	00 00       	nop
       8:	a0 c2       	rjmp	.+1344   	; 0x54a <__bad_interrupt>
       a:	00 00       	nop
       c:	9e c2       	rjmp	.+1340   	; 0x54a <__bad_interrupt>
       e:	00 00       	nop
      10:	9c c2       	rjmp	.+1336   	; 0x54a <__bad_interrupt>
      12:	00 00       	nop
      14:	9a c2       	rjmp	.+1332   	; 0x54a <__bad_interrupt>
      16:	00 00       	nop
      18:	98 c2       	rjmp	.+1328   	; 0x54a <__bad_interrupt>
      1a:	00 00       	nop
      1c:	96 c2       	rjmp	.+1324   	; 0x54a <__bad_interrupt>
      1e:	00 00       	nop
      20:	94 c2       	rjmp	.+1320   	; 0x54a <__bad_interrupt>
      22:	00 00       	nop
      24:	92 c2       	rjmp	.+1316   	; 0x54a <__bad_interrupt>
      26:	00 00       	nop
      28:	90 c2       	rjmp	.+1312   	; 0x54a <__bad_interrupt>
      2a:	00 00       	nop
      2c:	8e c2       	rjmp	.+1308   	; 0x54a <__bad_interrupt>
      2e:	00 00       	nop
      30:	8c c2       	rjmp	.+1304   	; 0x54a <__bad_interrupt>
      32:	00 00       	nop
      34:	8a c2       	rjmp	.+1300   	; 0x54a <__bad_interrupt>
      36:	00 00       	nop
      38:	88 c2       	rjmp	.+1296   	; 0x54a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	86 c2       	rjmp	.+1292   	; 0x54a <__bad_interrupt>
      3e:	00 00       	nop
      40:	84 c2       	rjmp	.+1288   	; 0x54a <__bad_interrupt>
      42:	00 00       	nop
      44:	82 c2       	rjmp	.+1284   	; 0x54a <__bad_interrupt>
      46:	00 00       	nop
      48:	0c 94 70 72 	jmp	0xe4e0	; 0xe4e0 <__vector_18>
      4c:	7e c2       	rjmp	.+1276   	; 0x54a <__bad_interrupt>
      4e:	00 00       	nop
      50:	7c c2       	rjmp	.+1272   	; 0x54a <__bad_interrupt>
      52:	00 00       	nop
      54:	7a c2       	rjmp	.+1268   	; 0x54a <__bad_interrupt>
      56:	00 00       	nop
      58:	78 c2       	rjmp	.+1264   	; 0x54a <__bad_interrupt>
      5a:	00 00       	nop
      5c:	76 c2       	rjmp	.+1260   	; 0x54a <__bad_interrupt>
      5e:	00 00       	nop
      60:	74 c2       	rjmp	.+1256   	; 0x54a <__bad_interrupt>
      62:	00 00       	nop
      64:	72 c2       	rjmp	.+1252   	; 0x54a <__bad_interrupt>
      66:	00 00       	nop
      68:	70 c2       	rjmp	.+1248   	; 0x54a <__bad_interrupt>
      6a:	00 00       	nop
      6c:	6e c2       	rjmp	.+1244   	; 0x54a <__bad_interrupt>
      6e:	00 00       	nop
      70:	6c c2       	rjmp	.+1240   	; 0x54a <__bad_interrupt>
      72:	00 00       	nop
      74:	6a c2       	rjmp	.+1236   	; 0x54a <__bad_interrupt>
      76:	00 00       	nop
      78:	68 c2       	rjmp	.+1232   	; 0x54a <__bad_interrupt>
      7a:	00 00       	nop
      7c:	66 c2       	rjmp	.+1228   	; 0x54a <__bad_interrupt>
      7e:	00 00       	nop
      80:	64 c2       	rjmp	.+1224   	; 0x54a <__bad_interrupt>
      82:	00 00       	nop
      84:	62 c2       	rjmp	.+1220   	; 0x54a <__bad_interrupt>
      86:	00 00       	nop
      88:	60 c2       	rjmp	.+1216   	; 0x54a <__bad_interrupt>
      8a:	00 00       	nop
      8c:	42 08       	sbc	r4, r2
      8e:	53 08       	sbc	r5, r3
      90:	a6 08       	sbc	r10, r6
      92:	b7 08       	sbc	r11, r7
      94:	89 0c       	add	r8, r9
      96:	a2 0c       	add	r10, r2
      98:	8d 0f       	add	r24, r29
      9a:	ef 0a       	sbc	r14, r31
      9c:	3e 0b       	sbc	r19, r30
      9e:	a0 09       	sbc	r26, r0
      a0:	28 0a       	sbc	r2, r24
      a2:	43 0a       	sbc	r4, r19
      a4:	d0 0b       	sbc	r29, r16
      a6:	7b 0f       	add	r23, r27
      a8:	4b 0a       	sbc	r4, r27
      aa:	4b 0a       	sbc	r4, r27
      ac:	c4 0d       	add	r28, r4
      ae:	aa 0c       	add	r10, r10
      b0:	b3 0c       	add	r11, r3
      b2:	bb 0c       	add	r11, r11
      b4:	c1 0c       	add	r12, r1
      b6:	c8 0c       	add	r12, r8
      b8:	d0 0c       	add	r13, r0
      ba:	e2 0c       	add	r14, r2
      bc:	d9 0c       	add	r13, r9
      be:	ff 0c       	add	r15, r15
      c0:	08 0d       	add	r16, r8
      c2:	ed 0c       	add	r14, r13
      c4:	83 0f       	add	r24, r19
      c6:	83 0f       	add	r24, r19
      c8:	83 0f       	add	r24, r19
      ca:	83 0f       	add	r24, r19
      cc:	83 0f       	add	r24, r19
      ce:	83 0f       	add	r24, r19
      d0:	1e 09       	sbc	r17, r14
      d2:	1e 09       	sbc	r17, r14
      d4:	45 09       	sbc	r20, r5
      d6:	4d 09       	sbc	r20, r13
      d8:	31 0a       	sbc	r3, r17
      da:	3a 0a       	sbc	r3, r26
      dc:	e5 0d       	add	r30, r5
      de:	55 09       	sbc	r21, r5
      e0:	5a 09       	sbc	r21, r10
      e2:	5f 09       	sbc	r21, r15
      e4:	6d 0c       	add	r6, r13
      e6:	76 0c       	add	r7, r6
      e8:	ed 0d       	add	r30, r13
      ea:	f5 0d       	add	r31, r5
      ec:	fd 0d       	add	r31, r13
      ee:	75 0e       	add	r7, r21
      f0:	dd 0d       	add	r29, r13
      f2:	17 0c       	add	r1, r7
      f4:	31 0c       	add	r3, r1
      f6:	c8 08       	sbc	r12, r8
      f8:	d5 0d       	add	r29, r5
      fa:	51 0c       	add	r5, r1
      fc:	41 0c       	add	r4, r1
      fe:	49 0c       	add	r4, r9
     100:	39 0c       	add	r3, r9
     102:	a5 0e       	add	r10, r21
     104:	b7 0e       	add	r11, r23
     106:	3d 08       	sbc	r3, r13
     108:	83 0f       	add	r24, r19
     10a:	d9 0e       	add	r13, r25
     10c:	c0 0e       	add	r12, r16
     10e:	93 08       	sbc	r9, r3
     110:	6c 09       	sbc	r22, r12
     112:	e1 0e       	add	r14, r17
     114:	71 09       	sbc	r23, r1
     116:	1a 0f       	add	r17, r26
     118:	27 0f       	add	r18, r23
     11a:	0c 09       	sbc	r16, r12
     11c:	76 09       	sbc	r23, r6
     11e:	84 09       	sbc	r24, r4
     120:	92 09       	sbc	r25, r2
     122:	e9 08       	sbc	r14, r9
     124:	64 09       	sbc	r22, r4
     126:	83 0f       	add	r24, r19
     128:	83 0f       	add	r24, r19
     12a:	83 0f       	add	r24, r19
     12c:	34 0f       	add	r19, r20
     12e:	34 0f       	add	r19, r20
     130:	cc 0e       	add	r12, r28
     132:	f0 09       	sbc	r31, r0
     134:	5e 0f       	add	r21, r30
     136:	f6 0c       	add	r15, r6
     138:	83 0f       	add	r24, r19
     13a:	83 0f       	add	r24, r19
     13c:	6b 0f       	add	r22, r27
     13e:	73 0f       	add	r23, r19
     140:	ae 0e       	add	r10, r30
     142:	83 0f       	add	r24, r19
     144:	83 0f       	add	r24, r19
     146:	83 0f       	add	r24, r19
     148:	83 0f       	add	r24, r19
     14a:	83 0f       	add	r24, r19
     14c:	19 0d       	add	r17, r9
     14e:	25 0d       	add	r18, r5
     150:	31 0d       	add	r19, r1
     152:	3d 0d       	add	r19, r13
     154:	49 0d       	add	r20, r9
     156:	55 0d       	add	r21, r5
     158:	60 0d       	add	r22, r0
     15a:	6b 0d       	add	r22, r11
     15c:	76 0d       	add	r23, r6
     15e:	81 0d       	add	r24, r1
     160:	8c 0d       	add	r24, r12
     162:	99 0d       	add	r25, r9
     164:	a6 0d       	add	r26, r6
     166:	b3 0d       	add	r27, r3
     168:	bf 0d       	add	r27, r15
     16a:	11 0d       	add	r17, r1
     16c:	b3 0f       	add	r27, r19
     16e:	c3 0f       	add	r28, r19
     170:	c3 0f       	add	r28, r19
     172:	c3 0f       	add	r28, r19
     174:	c3 0f       	add	r28, r19
     176:	c3 0f       	add	r28, r19
     178:	c3 0f       	add	r28, r19
     17a:	c3 0f       	add	r28, r19
     17c:	c3 0f       	add	r28, r19
     17e:	c3 0f       	add	r28, r19
     180:	c3 0f       	add	r28, r19
     182:	ba 0f       	add	r27, r26
     184:	ba 0f       	add	r27, r26
     186:	ba 0f       	add	r27, r26
     188:	ba 0f       	add	r27, r26
     18a:	ba 0f       	add	r27, r26
     18c:	ba 0f       	add	r27, r26
     18e:	c3 0f       	add	r28, r19
     190:	ba 0f       	add	r27, r26
     192:	ba 0f       	add	r27, r26
     194:	ba 0f       	add	r27, r26
     196:	ba 0f       	add	r27, r26
     198:	c3 0f       	add	r28, r19
     19a:	c3 0f       	add	r28, r19
     19c:	c3 0f       	add	r28, r19
     19e:	c3 0f       	add	r28, r19
     1a0:	c3 0f       	add	r28, r19
     1a2:	c3 0f       	add	r28, r19
     1a4:	c3 0f       	add	r28, r19
     1a6:	c3 0f       	add	r28, r19
     1a8:	c3 0f       	add	r28, r19
     1aa:	c3 0f       	add	r28, r19
     1ac:	c3 0f       	add	r28, r19
     1ae:	c3 0f       	add	r28, r19
     1b0:	c3 0f       	add	r28, r19
     1b2:	b3 0f       	add	r27, r19
     1b4:	b3 0f       	add	r27, r19
     1b6:	b3 0f       	add	r27, r19
     1b8:	c3 0f       	add	r28, r19
     1ba:	c3 0f       	add	r28, r19
     1bc:	c3 0f       	add	r28, r19
     1be:	c3 0f       	add	r28, r19
     1c0:	c3 0f       	add	r28, r19
     1c2:	c3 0f       	add	r28, r19
     1c4:	c3 0f       	add	r28, r19
     1c6:	c3 0f       	add	r28, r19
     1c8:	c3 0f       	add	r28, r19
     1ca:	c3 0f       	add	r28, r19
     1cc:	c3 0f       	add	r28, r19
     1ce:	c3 0f       	add	r28, r19
     1d0:	c3 0f       	add	r28, r19
     1d2:	c3 0f       	add	r28, r19
     1d4:	c3 0f       	add	r28, r19
     1d6:	c3 0f       	add	r28, r19
     1d8:	c3 0f       	add	r28, r19
     1da:	b3 0f       	add	r27, r19
     1dc:	c3 0f       	add	r28, r19
     1de:	c3 0f       	add	r28, r19
     1e0:	c3 0f       	add	r28, r19
     1e2:	c3 0f       	add	r28, r19
     1e4:	b3 0f       	add	r27, r19
     1e6:	c3 0f       	add	r28, r19
     1e8:	b3 0f       	add	r27, r19
     1ea:	c3 0f       	add	r28, r19
     1ec:	c3 0f       	add	r28, r19
     1ee:	c3 0f       	add	r28, r19
     1f0:	c3 0f       	add	r28, r19
     1f2:	c3 0f       	add	r28, r19
     1f4:	c3 0f       	add	r28, r19
     1f6:	c3 0f       	add	r28, r19
     1f8:	c3 0f       	add	r28, r19
     1fa:	c3 0f       	add	r28, r19
     1fc:	c3 0f       	add	r28, r19
     1fe:	c3 0f       	add	r28, r19
     200:	c3 0f       	add	r28, r19
     202:	c3 0f       	add	r28, r19
     204:	c3 0f       	add	r28, r19
     206:	c3 0f       	add	r28, r19
     208:	c3 0f       	add	r28, r19
     20a:	ba 0f       	add	r27, r26
     20c:	c3 0f       	add	r28, r19
     20e:	c3 0f       	add	r28, r19
     210:	c3 0f       	add	r28, r19
     212:	c3 0f       	add	r28, r19
     214:	c3 0f       	add	r28, r19
     216:	c3 0f       	add	r28, r19
     218:	c3 0f       	add	r28, r19
     21a:	c3 0f       	add	r28, r19
     21c:	c3 0f       	add	r28, r19
     21e:	c3 0f       	add	r28, r19
     220:	ba 0f       	add	r27, r26
     222:	ba 0f       	add	r27, r26
     224:	ba 0f       	add	r27, r26
     226:	ba 0f       	add	r27, r26
     228:	ba 0f       	add	r27, r26
     22a:	ba 0f       	add	r27, r26
     22c:	ba 0f       	add	r27, r26
     22e:	ba 0f       	add	r27, r26
     230:	ba 0f       	add	r27, r26
     232:	ba 0f       	add	r27, r26
     234:	ba 0f       	add	r27, r26
     236:	ba 0f       	add	r27, r26
     238:	ba 0f       	add	r27, r26
     23a:	ba 0f       	add	r27, r26
     23c:	14 17       	cp	r17, r20
     23e:	48 17       	cp	r20, r24
     240:	84 17       	cp	r24, r20
     242:	95 17       	cp	r25, r21
     244:	d9 1a       	sub	r13, r25
     246:	ed 1a       	sub	r14, r29
     248:	1a 18       	sub	r1, r10
     24a:	a8 16       	cp	r10, r24
     24c:	a8 16       	cp	r10, r24
     24e:	2e 18       	sub	r2, r14
     250:	11 18       	sub	r1, r1
     252:	a8 16       	cp	r10, r24
     254:	a1 18       	sub	r10, r1
     256:	62 1c       	adc	r6, r2
     258:	61 1a       	sub	r6, r17
     25a:	61 1a       	sub	r6, r17
     25c:	b3 1b       	sub	r27, r19
     25e:	f6 1a       	sub	r15, r22
     260:	ff 1a       	sub	r15, r31
     262:	07 1b       	sub	r16, r23
     264:	0d 1b       	sub	r16, r29
     266:	14 1b       	sub	r17, r20
     268:	1c 1b       	sub	r17, r28
     26a:	25 1b       	sub	r18, r21
     26c:	30 1b       	sub	r19, r16
     26e:	42 1b       	sub	r20, r18
     270:	4b 1b       	sub	r20, r27
     272:	a8 16       	cp	r10, r24
     274:	6a 1c       	adc	r6, r10
     276:	6a 1c       	adc	r6, r10
     278:	6a 1c       	adc	r6, r10
     27a:	6a 1c       	adc	r6, r10
     27c:	6a 1c       	adc	r6, r10
     27e:	fe 19       	sub	r31, r14
     280:	a8 16       	cp	r10, r24
     282:	a8 16       	cp	r10, r24
     284:	e7 17       	cp	r30, r23
     286:	f3 17       	cp	r31, r19
     288:	ff 17       	cp	r31, r31
     28a:	08 18       	sub	r0, r8
     28c:	a8 16       	cp	r10, r24
     28e:	1f 18       	sub	r1, r15
     290:	24 18       	sub	r2, r4
     292:	29 18       	sub	r2, r9
     294:	9e 19       	sub	r25, r14
     296:	e7 19       	sub	r30, r7
     298:	a8 16       	cp	r10, r24
     29a:	6a 1c       	adc	r6, r10
     29c:	a8 16       	cp	r10, r24
     29e:	a8 16       	cp	r10, r24
     2a0:	a8 16       	cp	r10, r24
     2a2:	4f 19       	sub	r20, r15
     2a4:	5c 19       	sub	r21, r12
     2a6:	b2 16       	cp	r11, r18
     2a8:	a8 16       	cp	r10, r24
     2aa:	91 19       	sub	r25, r1
     2ac:	77 19       	sub	r23, r7
     2ae:	84 19       	sub	r24, r4
     2b0:	69 19       	sub	r22, r9
     2b2:	c4 1b       	sub	r28, r20
     2b4:	e8 1b       	sub	r30, r24
     2b6:	74 1c       	adc	r7, r4
     2b8:	6a 1c       	adc	r6, r10
     2ba:	f3 1b       	sub	r31, r19
     2bc:	fb 1b       	sub	r31, r27
     2be:	a8 16       	cp	r10, r24
     2c0:	a8 16       	cp	r10, r24
     2c2:	a8 16       	cp	r10, r24
     2c4:	a8 16       	cp	r10, r24
     2c6:	a8 16       	cp	r10, r24
     2c8:	a8 16       	cp	r10, r24
     2ca:	d0 17       	cp	r29, r16
     2cc:	c6 16       	cp	r12, r22
     2ce:	e0 16       	cp	r14, r16
     2d0:	fa 16       	cp	r15, r26
     2d2:	b3 17       	cp	r27, r19
     2d4:	aa 17       	cp	r26, r26
     2d6:	6a 1c       	adc	r6, r10
     2d8:	6a 1c       	adc	r6, r10
     2da:	6a 1c       	adc	r6, r10
     2dc:	11 1c       	adc	r1, r1
     2de:	11 1c       	adc	r1, r1
     2e0:	04 1c       	adc	r0, r4
     2e2:	72 18       	sub	r7, r2
     2e4:	3b 1c       	adc	r3, r11
     2e6:	39 1b       	sub	r19, r25
     2e8:	6a 1c       	adc	r6, r10
     2ea:	6a 1c       	adc	r6, r10
     2ec:	48 1c       	adc	r4, r8
     2ee:	55 1c       	adc	r5, r5
     2f0:	d3 1b       	sub	r29, r19
     2f2:	6a 1c       	adc	r6, r10
     2f4:	6a 1c       	adc	r6, r10
     2f6:	6a 1c       	adc	r6, r10
     2f8:	6a 1c       	adc	r6, r10
     2fa:	6a 1c       	adc	r6, r10
     2fc:	66 1b       	sub	r22, r22
     2fe:	72 1b       	sub	r23, r18
     300:	7e 1b       	sub	r23, r30
     302:	8a 1b       	sub	r24, r26
     304:	96 1b       	sub	r25, r22
     306:	a8 16       	cp	r10, r24
     308:	a8 16       	cp	r10, r24
     30a:	a8 16       	cp	r10, r24
     30c:	a8 16       	cp	r10, r24
     30e:	a8 16       	cp	r10, r24
     310:	a8 16       	cp	r10, r24
     312:	a8 16       	cp	r10, r24
     314:	a8 16       	cp	r10, r24
     316:	a2 1b       	sub	r26, r18
     318:	ae 1b       	sub	r26, r30
     31a:	54 1b       	sub	r21, r20
     31c:	c4 1c       	adc	r12, r4
     31e:	69 1d       	adc	r22, r9
     320:	69 1d       	adc	r22, r9
     322:	69 1d       	adc	r22, r9
     324:	69 1d       	adc	r22, r9
     326:	69 1d       	adc	r22, r9
     328:	69 1d       	adc	r22, r9
     32a:	69 1d       	adc	r22, r9
     32c:	69 1d       	adc	r22, r9
     32e:	69 1d       	adc	r22, r9
     330:	69 1d       	adc	r22, r9
     332:	41 1d       	adc	r20, r1
     334:	41 1d       	adc	r20, r1
     336:	41 1d       	adc	r20, r1
     338:	41 1d       	adc	r20, r1
     33a:	41 1d       	adc	r20, r1
     33c:	41 1d       	adc	r20, r1
     33e:	69 1d       	adc	r22, r9
     340:	c9 1c       	adc	r12, r9
     342:	41 1d       	adc	r20, r1
     344:	41 1d       	adc	r20, r1
     346:	69 1d       	adc	r22, r9
     348:	69 1d       	adc	r22, r9
     34a:	69 1d       	adc	r22, r9
     34c:	69 1d       	adc	r22, r9
     34e:	69 1d       	adc	r22, r9
     350:	69 1d       	adc	r22, r9
     352:	69 1d       	adc	r22, r9
     354:	69 1d       	adc	r22, r9
     356:	69 1d       	adc	r22, r9
     358:	69 1d       	adc	r22, r9
     35a:	69 1d       	adc	r22, r9
     35c:	69 1d       	adc	r22, r9
     35e:	69 1d       	adc	r22, r9
     360:	69 1d       	adc	r22, r9
     362:	c4 1c       	adc	r12, r4
     364:	c4 1c       	adc	r12, r4
     366:	c4 1c       	adc	r12, r4
     368:	69 1d       	adc	r22, r9
     36a:	69 1d       	adc	r22, r9
     36c:	69 1d       	adc	r22, r9
     36e:	69 1d       	adc	r22, r9
     370:	69 1d       	adc	r22, r9
     372:	69 1d       	adc	r22, r9
     374:	69 1d       	adc	r22, r9
     376:	69 1d       	adc	r22, r9
     378:	69 1d       	adc	r22, r9
     37a:	69 1d       	adc	r22, r9
     37c:	69 1d       	adc	r22, r9
     37e:	69 1d       	adc	r22, r9
     380:	69 1d       	adc	r22, r9
     382:	69 1d       	adc	r22, r9
     384:	69 1d       	adc	r22, r9
     386:	69 1d       	adc	r22, r9
     388:	69 1d       	adc	r22, r9
     38a:	c4 1c       	adc	r12, r4
     38c:	69 1d       	adc	r22, r9
     38e:	69 1d       	adc	r22, r9
     390:	69 1d       	adc	r22, r9
     392:	69 1d       	adc	r22, r9
     394:	69 1d       	adc	r22, r9
     396:	69 1d       	adc	r22, r9
     398:	69 1d       	adc	r22, r9
     39a:	69 1d       	adc	r22, r9
     39c:	69 1d       	adc	r22, r9
     39e:	69 1d       	adc	r22, r9
     3a0:	69 1d       	adc	r22, r9
     3a2:	69 1d       	adc	r22, r9
     3a4:	69 1d       	adc	r22, r9
     3a6:	69 1d       	adc	r22, r9
     3a8:	69 1d       	adc	r22, r9
     3aa:	69 1d       	adc	r22, r9
     3ac:	69 1d       	adc	r22, r9
     3ae:	69 1d       	adc	r22, r9
     3b0:	69 1d       	adc	r22, r9
     3b2:	69 1d       	adc	r22, r9
     3b4:	69 1d       	adc	r22, r9
     3b6:	69 1d       	adc	r22, r9
     3b8:	69 1d       	adc	r22, r9
     3ba:	41 1d       	adc	r20, r1
     3bc:	69 1d       	adc	r22, r9
     3be:	69 1d       	adc	r22, r9
     3c0:	69 1d       	adc	r22, r9
     3c2:	69 1d       	adc	r22, r9
     3c4:	69 1d       	adc	r22, r9
     3c6:	69 1d       	adc	r22, r9
     3c8:	69 1d       	adc	r22, r9
     3ca:	69 1d       	adc	r22, r9
     3cc:	69 1d       	adc	r22, r9
     3ce:	69 1d       	adc	r22, r9
     3d0:	41 1d       	adc	r20, r1
     3d2:	41 1d       	adc	r20, r1
     3d4:	41 1d       	adc	r20, r1
     3d6:	41 1d       	adc	r20, r1
     3d8:	41 1d       	adc	r20, r1
     3da:	69 1d       	adc	r22, r9
     3dc:	69 1d       	adc	r22, r9
     3de:	69 1d       	adc	r22, r9
     3e0:	69 1d       	adc	r22, r9
     3e2:	69 1d       	adc	r22, r9
     3e4:	69 1d       	adc	r22, r9
     3e6:	69 1d       	adc	r22, r9
     3e8:	69 1d       	adc	r22, r9
     3ea:	41 1d       	adc	r20, r1
     3ec:	42 22       	and	r4, r18
     3ee:	bc 22       	and	r11, r28
     3f0:	3e 22       	and	r3, r30
     3f2:	9b 22       	and	r9, r27
     3f4:	c6 22       	and	r12, r22
     3f6:	c6 22       	and	r12, r22
     3f8:	c6 22       	and	r12, r22
     3fa:	3e 22       	and	r3, r30
     3fc:	7f 22       	and	r7, r31
     3fe:	c6 22       	and	r12, r22
     400:	9b 22       	and	r9, r27
     402:	a7 23       	and	r26, r23
     404:	41 24       	eor	r4, r1
     406:	a7 23       	and	r26, r23
     408:	dd 24       	eor	r13, r13
     40a:	a3 23       	and	r26, r19
     40c:	d3 24       	eor	r13, r3
     40e:	96 24       	eor	r9, r6
     410:	a3 23       	and	r26, r19
     412:	7a 24       	eor	r7, r10
     414:	7a 24       	eor	r7, r10
     416:	cc 25       	eor	r28, r12
     418:	df 25       	eor	r29, r15
     41a:	fe 25       	eor	r31, r14
     41c:	44 26       	eor	r4, r20
     41e:	5b 26       	eor	r5, r27
     420:	6e 26       	eor	r6, r30
     422:	94 26       	eor	r9, r20
     424:	c1 26       	eor	r12, r17
     426:	dd 4d       	sbci	r29, 0xDD	; 221
     428:	10 4e       	sbci	r17, 0xE0	; 224
     42a:	10 4e       	sbci	r17, 0xE0	; 224
     42c:	d2 4d       	sbci	r29, 0xD2	; 210
     42e:	ed 4d       	sbci	r30, 0xDD	; 221
     430:	ed 4d       	sbci	r30, 0xDD	; 221
     432:	ed 4d       	sbci	r30, 0xDD	; 221
     434:	10 4e       	sbci	r17, 0xE0	; 224
     436:	dd 4d       	sbci	r29, 0xDD	; 221
     438:	10 4e       	sbci	r17, 0xE0	; 224
     43a:	ed 4d       	sbci	r30, 0xDD	; 221
     43c:	dd 4d       	sbci	r29, 0xDD	; 221
     43e:	ed 4d       	sbci	r30, 0xDD	; 221
     440:	f8 4d       	sbci	r31, 0xD8	; 216
     442:	10 4e       	sbci	r17, 0xE0	; 224
     444:	10 4e       	sbci	r17, 0xE0	; 224
     446:	10 4e       	sbci	r17, 0xE0	; 224
     448:	10 4e       	sbci	r17, 0xE0	; 224
     44a:	10 4e       	sbci	r17, 0xE0	; 224
     44c:	10 4e       	sbci	r17, 0xE0	; 224
     44e:	10 4e       	sbci	r17, 0xE0	; 224
     450:	10 4e       	sbci	r17, 0xE0	; 224
     452:	10 4e       	sbci	r17, 0xE0	; 224
     454:	10 4e       	sbci	r17, 0xE0	; 224
     456:	10 4e       	sbci	r17, 0xE0	; 224
     458:	10 4e       	sbci	r17, 0xE0	; 224
     45a:	10 4e       	sbci	r17, 0xE0	; 224
     45c:	ed 4d       	sbci	r30, 0xDD	; 221
     45e:	10 4e       	sbci	r17, 0xE0	; 224
     460:	10 4e       	sbci	r17, 0xE0	; 224
     462:	d2 4d       	sbci	r29, 0xD2	; 210
     464:	10 4e       	sbci	r17, 0xE0	; 224
     466:	10 4e       	sbci	r17, 0xE0	; 224
     468:	d2 4d       	sbci	r29, 0xD2	; 210
     46a:	e8 4e       	sbci	r30, 0xE8	; 232
     46c:	18 4f       	sbci	r17, 0xF8	; 248
     46e:	e8 4e       	sbci	r30, 0xE8	; 232
     470:	b8 50       	subi	r27, 0x08	; 8
     472:	b8 50       	subi	r27, 0x08	; 8
     474:	b8 50       	subi	r27, 0x08	; 8
     476:	b8 50       	subi	r27, 0x08	; 8
     478:	b8 50       	subi	r27, 0x08	; 8
     47a:	b8 50       	subi	r27, 0x08	; 8
     47c:	b8 50       	subi	r27, 0x08	; 8
     47e:	b8 50       	subi	r27, 0x08	; 8
     480:	b8 50       	subi	r27, 0x08	; 8
     482:	b8 50       	subi	r27, 0x08	; 8
     484:	b8 50       	subi	r27, 0x08	; 8
     486:	b8 50       	subi	r27, 0x08	; 8
     488:	b8 50       	subi	r27, 0x08	; 8
     48a:	f7 4e       	sbci	r31, 0xE7	; 231
     48c:	e8 4e       	sbci	r30, 0xE8	; 232
     48e:	3b 4f       	sbci	r19, 0xFB	; 251
     490:	5d 4f       	sbci	r21, 0xFD	; 253
     492:	e8 4e       	sbci	r30, 0xE8	; 232
     494:	86 4f       	sbci	r24, 0xF6	; 246
     496:	9b 4f       	sbci	r25, 0xFB	; 251
     498:	e8 4e       	sbci	r30, 0xE8	; 232
     49a:	7e 57       	subi	r23, 0x7E	; 126
     49c:	c8 57       	subi	r28, 0x78	; 120
     49e:	c8 57       	subi	r28, 0x78	; 120
     4a0:	77 57       	subi	r23, 0x77	; 119
     4a2:	88 57       	subi	r24, 0x78	; 120
     4a4:	88 57       	subi	r24, 0x78	; 120
     4a6:	88 57       	subi	r24, 0x78	; 120
     4a8:	c8 57       	subi	r28, 0x78	; 120
     4aa:	7e 57       	subi	r23, 0x7E	; 126
     4ac:	c8 57       	subi	r28, 0x78	; 120
     4ae:	88 57       	subi	r24, 0x78	; 120
     4b0:	7e 57       	subi	r23, 0x7E	; 126
     4b2:	88 57       	subi	r24, 0x78	; 120
     4b4:	9a 57       	subi	r25, 0x7A	; 122
     4b6:	93 57       	subi	r25, 0x73	; 115
     4b8:	c8 57       	subi	r28, 0x78	; 120
     4ba:	c8 57       	subi	r28, 0x78	; 120
     4bc:	c8 57       	subi	r28, 0x78	; 120
     4be:	a8 57       	subi	r26, 0x78	; 120
     4c0:	b6 57       	subi	r27, 0x76	; 118
     4c2:	c8 57       	subi	r28, 0x78	; 120
     4c4:	c8 57       	subi	r28, 0x78	; 120
     4c6:	c8 57       	subi	r28, 0x78	; 120
     4c8:	c8 57       	subi	r28, 0x78	; 120
     4ca:	c8 57       	subi	r28, 0x78	; 120
     4cc:	c8 57       	subi	r28, 0x78	; 120
     4ce:	c8 57       	subi	r28, 0x78	; 120
     4d0:	88 57       	subi	r24, 0x78	; 120
     4d2:	c8 57       	subi	r28, 0x78	; 120
     4d4:	c8 57       	subi	r28, 0x78	; 120
     4d6:	77 57       	subi	r23, 0x77	; 119
     4d8:	c8 57       	subi	r28, 0x78	; 120
     4da:	c8 57       	subi	r28, 0x78	; 120
     4dc:	77 57       	subi	r23, 0x77	; 119
     4de:	33 58       	subi	r19, 0x83	; 131
     4e0:	b1 58       	subi	r27, 0x81	; 129
     4e2:	3a 58       	subi	r19, 0x8A	; 138
     4e4:	4b 5a       	subi	r20, 0xAB	; 171
     4e6:	4b 5a       	subi	r20, 0xAB	; 171
     4e8:	4b 5a       	subi	r20, 0xAB	; 171
     4ea:	4b 5a       	subi	r20, 0xAB	; 171
     4ec:	4b 5a       	subi	r20, 0xAB	; 171
     4ee:	4b 5a       	subi	r20, 0xAB	; 171
     4f0:	4b 5a       	subi	r20, 0xAB	; 171
     4f2:	4b 5a       	subi	r20, 0xAB	; 171
     4f4:	4b 5a       	subi	r20, 0xAB	; 171
     4f6:	4b 5a       	subi	r20, 0xAB	; 171
     4f8:	4b 5a       	subi	r20, 0xAB	; 171
     4fa:	4b 5a       	subi	r20, 0xAB	; 171
     4fc:	4b 5a       	subi	r20, 0xAB	; 171
     4fe:	41 58       	subi	r20, 0x81	; 129
     500:	4a 58       	subi	r20, 0x8A	; 138
     502:	e9 58       	subi	r30, 0x89	; 137
     504:	5f 58       	subi	r21, 0x8F	; 143
     506:	51 58       	subi	r21, 0x81	; 129
     508:	f5 58       	subi	r31, 0x85	; 133
     50a:	1f 59       	subi	r17, 0x9F	; 159
     50c:	58 58       	subi	r21, 0x88	; 136

0000050e <__ctors_end>:
     50e:	11 24       	eor	r1, r1
     510:	1f be       	out	0x3f, r1	; 63
     512:	cf ef       	ldi	r28, 0xFF	; 255
     514:	d0 e1       	ldi	r29, 0x10	; 16
     516:	de bf       	out	0x3e, r29	; 62
     518:	cd bf       	out	0x3d, r28	; 61

0000051a <__do_copy_data>:
     51a:	12 e0       	ldi	r17, 0x02	; 2
     51c:	a0 e0       	ldi	r26, 0x00	; 0
     51e:	b1 e0       	ldi	r27, 0x01	; 1
     520:	e0 e9       	ldi	r30, 0x90	; 144
     522:	f0 ef       	ldi	r31, 0xF0	; 240
     524:	00 e0       	ldi	r16, 0x00	; 0
     526:	0b bf       	out	0x3b, r16	; 59
     528:	02 c0       	rjmp	.+4      	; 0x52e <__do_copy_data+0x14>
     52a:	07 90       	elpm	r0, Z+
     52c:	0d 92       	st	X+, r0
     52e:	a2 35       	cpi	r26, 0x52	; 82
     530:	b1 07       	cpc	r27, r17
     532:	d9 f7       	brne	.-10     	; 0x52a <__do_copy_data+0x10>

00000534 <__do_clear_bss>:
     534:	23 e0       	ldi	r18, 0x03	; 3
     536:	a2 e5       	ldi	r26, 0x52	; 82
     538:	b2 e0       	ldi	r27, 0x02	; 2
     53a:	01 c0       	rjmp	.+2      	; 0x53e <.do_clear_bss_start>

0000053c <.do_clear_bss_loop>:
     53c:	1d 92       	st	X+, r1

0000053e <.do_clear_bss_start>:
     53e:	a3 37       	cpi	r26, 0x73	; 115
     540:	b2 07       	cpc	r27, r18
     542:	e1 f7       	brne	.-8      	; 0x53c <.do_clear_bss_loop>
     544:	03 d0       	rcall	.+6      	; 0x54c <main>
     546:	0c 94 46 78 	jmp	0xf08c	; 0xf08c <_exit>

0000054a <__bad_interrupt>:
     54a:	5a cd       	rjmp	.-1356   	; 0x0 <__vectors>

0000054c <main>:

/*TBD: Debug variable: To be removed after testing is done*/
static volatile u8 readError = 0;

int main(void)
{
     54c:	cf 93       	push	r28
     54e:	df 93       	push	r29
     550:	cd b7       	in	r28, 0x3d	; 61
     552:	de b7       	in	r29, 0x3e	; 62
     554:	cf 57       	subi	r28, 0x7F	; 127
     556:	d9 40       	sbci	r29, 0x09	; 9
     558:	0f b6       	in	r0, 0x3f	; 63
     55a:	f8 94       	cli
     55c:	de bf       	out	0x3e, r29	; 62
     55e:	0f be       	out	0x3f, r0	; 63
     560:	cd bf       	out	0x3d, r28	; 61
	TMR_Reader reader;
	TMR_Status read_status;
	int32_t readTagCount;
	TMR_TagReadData readData;
	
	cli();
     562:	f8 94       	cli
	TMR_SR_SerialTransportDummyInit(&reader.u.serialReader.transport, NULL, NULL); /*This will set the functions from implemented driver*/
     564:	40 e0       	ldi	r20, 0x00	; 0
     566:	50 e0       	ldi	r21, 0x00	; 0
     568:	60 e0       	ldi	r22, 0x00	; 0
     56a:	70 e0       	ldi	r23, 0x00	; 0
     56c:	ce 01       	movw	r24, r28
     56e:	8f 57       	subi	r24, 0x7F	; 127
     570:	9e 4f       	sbci	r25, 0xFE	; 254
     572:	0e 94 3d 6a 	call	0xd47a	; 0xd47a <TMR_SR_SerialTransportDummyInit>
	/*Region is right now hardcoded inside init function*/
	TMR_SR_SerialReader_init(&reader);
     576:	ce 01       	movw	r24, r28
     578:	01 96       	adiw	r24, 0x01	; 1
     57a:	0e 94 c7 20 	call	0x418e	; 0x418e <TMR_SR_SerialReader_init>
	TMR_connect(&reader); /*Enable UART between MCU and reader*/
     57e:	ce 01       	movw	r24, r28
     580:	01 96       	adiw	r24, 0x01	; 1
     582:	0e 94 36 12 	call	0x246c	; 0x246c <TMR_SR_connect>
 	(void)TMR_startReading(&reader); /* Set read flag: on*/
     586:	ce 01       	movw	r24, r28
     588:	01 96       	adiw	r24, 0x01	; 1
     58a:	0e 94 27 71 	call	0xe24e	; 0xe24e <TMR_startReading>
	
	
    while (1) 
    {
		read_status = TMR_read(&reader, 3000, &readTagCount);
     58e:	9e 01       	movw	r18, r28
     590:	2c 5d       	subi	r18, 0xDC	; 220
     592:	39 4f       	sbci	r19, 0xF9	; 249
     594:	48 eb       	ldi	r20, 0xB8	; 184
     596:	5b e0       	ldi	r21, 0x0B	; 11
     598:	60 e0       	ldi	r22, 0x00	; 0
     59a:	70 e0       	ldi	r23, 0x00	; 0
     59c:	ce 01       	movw	r24, r28
     59e:	01 96       	adiw	r24, 0x01	; 1
     5a0:	0e 94 f4 2d 	call	0x5be8	; 0x5be8 <TMR_SR_read>
		if(TMR_SUCCESS != read_status)
     5a4:	67 2b       	or	r22, r23
     5a6:	68 2b       	or	r22, r24
     5a8:	69 2b       	or	r22, r25
     5aa:	29 f0       	breq	.+10     	; 0x5b6 <main+0x6a>
		{
			readError++;
     5ac:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <__data_end>
     5b0:	8f 5f       	subi	r24, 0xFF	; 255
     5b2:	80 93 52 02 	sts	0x0252, r24	; 0x800252 <__data_end>
		}
		if(TMR_ERROR_NO_TAGS != TMR_hasMoreTags(&reader))
     5b6:	ce 01       	movw	r24, r28
     5b8:	01 96       	adiw	r24, 0x01	; 1
     5ba:	0e 94 90 1d 	call	0x3b20	; 0x3b20 <TMR_SR_hasMoreTags>
     5be:	68 30       	cpi	r22, 0x08	; 8
     5c0:	71 05       	cpc	r23, r1
     5c2:	81 05       	cpc	r24, r1
     5c4:	93 40       	sbci	r25, 0x03	; 3
     5c6:	19 f3       	breq	.-58     	; 0x58e <main+0x42>
		{
			TMR_getNextTag(&reader, &readData);
     5c8:	be 01       	movw	r22, r28
     5ca:	68 5d       	subi	r22, 0xD8	; 216
     5cc:	79 4f       	sbci	r23, 0xF9	; 249
     5ce:	ce 01       	movw	r24, r28
     5d0:	01 96       	adiw	r24, 0x01	; 1
     5d2:	0e 94 b1 1f 	call	0x3f62	; 0x3f62 <TMR_SR_getNextTag>
			asm("NOP");
     5d6:	00 00       	nop
     5d8:	da cf       	rjmp	.-76     	; 0x58e <main+0x42>

000005da <TMR_hexDottedQuad>:
 * @param bytes The array of four bytes to convert
 * @param buf The string to write to. Must be at least 12 bytes.
 */
void
TMR_hexDottedQuad(const uint8_t bytes[4], char buf[12])
{
     5da:	cf 93       	push	r28
     5dc:	df 93       	push	r29
     5de:	ec 01       	movw	r28, r24
     5e0:	db 01       	movw	r26, r22
  int i;

  for (i = 0; i < 4 ; i++)
     5e2:	20 e0       	ldi	r18, 0x00	; 0
     5e4:	30 e0       	ldi	r19, 0x00	; 0
     5e6:	18 c0       	rjmp	.+48     	; 0x618 <TMR_hexDottedQuad+0x3e>
  {
    *buf++ = hexchars[*bytes >> 4];
     5e8:	e8 81       	ld	r30, Y
     5ea:	e2 95       	swap	r30
     5ec:	ef 70       	andi	r30, 0x0F	; 15
     5ee:	f0 e0       	ldi	r31, 0x00	; 0
     5f0:	e0 5c       	subi	r30, 0xC0	; 192
     5f2:	fe 4f       	sbci	r31, 0xFE	; 254
     5f4:	80 81       	ld	r24, Z
     5f6:	8c 93       	st	X, r24
    *buf++ = hexchars[*bytes & 15];
     5f8:	e9 91       	ld	r30, Y+
     5fa:	ef 70       	andi	r30, 0x0F	; 15
     5fc:	f0 e0       	ldi	r31, 0x00	; 0
     5fe:	e0 5c       	subi	r30, 0xC0	; 192
     600:	fe 4f       	sbci	r31, 0xFE	; 254
     602:	80 81       	ld	r24, Z
     604:	11 96       	adiw	r26, 0x01	; 1
     606:	8c 93       	st	X, r24
     608:	11 97       	sbiw	r26, 0x01	; 1
    *buf++ = '.';
     60a:	8e e2       	ldi	r24, 0x2E	; 46
     60c:	12 96       	adiw	r26, 0x02	; 2
     60e:	8c 93       	st	X, r24
     610:	12 97       	sbiw	r26, 0x02	; 2
void
TMR_hexDottedQuad(const uint8_t bytes[4], char buf[12])
{
  int i;

  for (i = 0; i < 4 ; i++)
     612:	2f 5f       	subi	r18, 0xFF	; 255
     614:	3f 4f       	sbci	r19, 0xFF	; 255
  {
    *buf++ = hexchars[*bytes >> 4];
    *buf++ = hexchars[*bytes & 15];
    *buf++ = '.';
     616:	13 96       	adiw	r26, 0x03	; 3
void
TMR_hexDottedQuad(const uint8_t bytes[4], char buf[12])
{
  int i;

  for (i = 0; i < 4 ; i++)
     618:	24 30       	cpi	r18, 0x04	; 4
     61a:	31 05       	cpc	r19, r1
     61c:	2c f3       	brlt	.-54     	; 0x5e8 <TMR_hexDottedQuad+0xe>
    *buf++ = hexchars[*bytes >> 4];
    *buf++ = hexchars[*bytes & 15];
    *buf++ = '.';
    bytes++;
  }
  *--buf = '\0';
     61e:	11 97       	sbiw	r26, 0x01	; 1
     620:	1c 92       	st	X, r1
}
     622:	df 91       	pop	r29
     624:	cf 91       	pop	r28
     626:	08 95       	ret

00000628 <tmr_gettime>:

uint64_t tmr_gettime()
{
	/*This is not implemented yet*/
	return 0;
}
     628:	20 e0       	ldi	r18, 0x00	; 0
     62a:	30 e0       	ldi	r19, 0x00	; 0
     62c:	40 e0       	ldi	r20, 0x00	; 0
     62e:	50 e0       	ldi	r21, 0x00	; 0
     630:	60 e0       	ldi	r22, 0x00	; 0
     632:	70 e0       	ldi	r23, 0x00	; 0
     634:	80 e0       	ldi	r24, 0x00	; 0
     636:	90 e0       	ldi	r25, 0x00	; 0
     638:	08 95       	ret

0000063a <tmr_gettime_low>:
{
  /* Fill in with code that returns the low 32 bits of a millisecond
   * counter. The API will not otherwise interpret the counter value.
   */
  return 0;
}
     63a:	60 e0       	ldi	r22, 0x00	; 0
     63c:	70 e0       	ldi	r23, 0x00	; 0
     63e:	cb 01       	movw	r24, r22
     640:	08 95       	ret

00000642 <tmr_gettime_high>:
  /* Fill in with code that returns the hugh 32 bits of a millisecond
   * counter. The API will not otherwise interpret the counter value.
   * Returning 0 is acceptable here if you do not have a large enough counter.
   */
  return 0;
}
     642:	60 e0       	ldi	r22, 0x00	; 0
     644:	70 e0       	ldi	r23, 0x00	; 0
     646:	cb 01       	movw	r24, r22
     648:	08 95       	ret

0000064a <TMR_SR_cmdGetPerAntennaTime>:
#ifdef TMR_ENABLE_HF_LF
  isAddrByteExtended = false;
#endif /* TMR_ENABLE_HF_LF */

  return ret;
}
     64a:	8f 92       	push	r8
     64c:	9f 92       	push	r9
     64e:	af 92       	push	r10
     650:	bf 92       	push	r11
     652:	0f 93       	push	r16
     654:	1f 93       	push	r17
     656:	cf 93       	push	r28
     658:	df 93       	push	r29
     65a:	cd b7       	in	r28, 0x3d	; 61
     65c:	de b7       	in	r29, 0x3e	; 62
     65e:	da 95       	dec	r29
     660:	0f b6       	in	r0, 0x3f	; 63
     662:	f8 94       	cli
     664:	de bf       	out	0x3e, r29	; 62
     666:	0f be       	out	0x3f, r0	; 63
     668:	cd bf       	out	0x3d, r28	; 61
     66a:	8b 01       	movw	r16, r22
     66c:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
     670:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
     674:	41 e6       	ldi	r20, 0x61	; 97
     676:	4b 83       	std	Y+3, r20	; 0x03
     678:	2e 5f       	subi	r18, 0xFE	; 254
     67a:	3f 4f       	sbci	r19, 0xFF	; 255
     67c:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
     680:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
     684:	27 e0       	ldi	r18, 0x07	; 7
     686:	2c 83       	std	Y+4, r18	; 0x04
     688:	44 e0       	ldi	r20, 0x04	; 4
     68a:	be 01       	movw	r22, r28
     68c:	6f 5f       	subi	r22, 0xFF	; 255
     68e:	7f 4f       	sbci	r23, 0xFF	; 255
     690:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
     694:	4b 01       	movw	r8, r22
     696:	5c 01       	movw	r10, r24
     698:	67 2b       	or	r22, r23
     69a:	68 2b       	or	r22, r24
     69c:	69 2b       	or	r22, r25
     69e:	09 f0       	breq	.+2      	; 0x6a2 <TMR_SR_cmdGetPerAntennaTime+0x58>
     6a0:	4d c0       	rjmp	.+154    	; 0x73c <TMR_SR_cmdGetPerAntennaTime+0xf2>
     6a2:	61 e0       	ldi	r22, 0x01	; 1
     6a4:	70 e0       	ldi	r23, 0x00	; 0
     6a6:	3f c0       	rjmp	.+126    	; 0x726 <TMR_SR_cmdGetPerAntennaTime+0xdc>
     6a8:	d8 01       	movw	r26, r16
     6aa:	ed 91       	ld	r30, X+
     6ac:	fc 91       	ld	r31, X
     6ae:	87 2f       	mov	r24, r23
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	9c 01       	movw	r18, r24
     6b4:	22 0f       	add	r18, r18
     6b6:	33 1f       	adc	r19, r19
     6b8:	22 0f       	add	r18, r18
     6ba:	33 1f       	adc	r19, r19
     6bc:	28 0f       	add	r18, r24
     6be:	39 1f       	adc	r19, r25
     6c0:	e2 0f       	add	r30, r18
     6c2:	f3 1f       	adc	r31, r19
     6c4:	86 2f       	mov	r24, r22
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	dc 01       	movw	r26, r24
     6ca:	15 96       	adiw	r26, 0x05	; 5
     6cc:	41 e0       	ldi	r20, 0x01	; 1
     6ce:	50 e0       	ldi	r21, 0x00	; 0
     6d0:	4c 0f       	add	r20, r28
     6d2:	5d 1f       	adc	r21, r29
     6d4:	a4 0f       	add	r26, r20
     6d6:	b5 1f       	adc	r27, r21
     6d8:	4c 91       	ld	r20, X
     6da:	40 83       	st	Z, r20
     6dc:	d8 01       	movw	r26, r16
     6de:	4d 91       	ld	r20, X+
     6e0:	5c 91       	ld	r21, X
     6e2:	42 0f       	add	r20, r18
     6e4:	53 1f       	adc	r21, r19
     6e6:	fc 01       	movw	r30, r24
     6e8:	36 96       	adiw	r30, 0x06	; 6
     6ea:	21 e0       	ldi	r18, 0x01	; 1
     6ec:	30 e0       	ldi	r19, 0x00	; 0
     6ee:	2c 0f       	add	r18, r28
     6f0:	3d 1f       	adc	r19, r29
     6f2:	e2 0f       	add	r30, r18
     6f4:	f3 1f       	adc	r31, r19
     6f6:	20 81       	ld	r18, Z
     6f8:	30 e0       	ldi	r19, 0x00	; 0
     6fa:	32 2f       	mov	r19, r18
     6fc:	22 27       	eor	r18, r18
     6fe:	07 96       	adiw	r24, 0x07	; 7
     700:	e1 e0       	ldi	r30, 0x01	; 1
     702:	f0 e0       	ldi	r31, 0x00	; 0
     704:	ec 0f       	add	r30, r28
     706:	fd 1f       	adc	r31, r29
     708:	e8 0f       	add	r30, r24
     70a:	f9 1f       	adc	r31, r25
     70c:	80 81       	ld	r24, Z
     70e:	d9 01       	movw	r26, r18
     710:	a8 2b       	or	r26, r24
     712:	cd 01       	movw	r24, r26
     714:	a0 e0       	ldi	r26, 0x00	; 0
     716:	b0 e0       	ldi	r27, 0x00	; 0
     718:	fa 01       	movw	r30, r20
     71a:	81 83       	std	Z+1, r24	; 0x01
     71c:	92 83       	std	Z+2, r25	; 0x02
     71e:	a3 83       	std	Z+3, r26	; 0x03
     720:	b4 83       	std	Z+4, r27	; 0x04
     722:	6d 5f       	subi	r22, 0xFD	; 253
     724:	7f 5f       	subi	r23, 0xFF	; 255
     726:	8a 81       	ldd	r24, Y+2	; 0x02
     728:	68 17       	cp	r22, r24
     72a:	30 f4       	brcc	.+12     	; 0x738 <TMR_SR_cmdGetPerAntennaTime+0xee>
     72c:	d8 01       	movw	r26, r16
     72e:	12 96       	adiw	r26, 0x02	; 2
     730:	8c 91       	ld	r24, X
     732:	78 17       	cp	r23, r24
     734:	08 f4       	brcc	.+2      	; 0x738 <TMR_SR_cmdGetPerAntennaTime+0xee>
     736:	b8 cf       	rjmp	.-144    	; 0x6a8 <TMR_SR_cmdGetPerAntennaTime+0x5e>
     738:	f8 01       	movw	r30, r16
     73a:	73 83       	std	Z+3, r23	; 0x03
     73c:	c5 01       	movw	r24, r10
     73e:	b4 01       	movw	r22, r8
     740:	d3 95       	inc	r29
     742:	0f b6       	in	r0, 0x3f	; 63
     744:	f8 94       	cli
     746:	de bf       	out	0x3e, r29	; 62
     748:	0f be       	out	0x3f, r0	; 63
     74a:	cd bf       	out	0x3d, r28	; 61
     74c:	df 91       	pop	r29
     74e:	cf 91       	pop	r28
     750:	1f 91       	pop	r17
     752:	0f 91       	pop	r16
     754:	bf 90       	pop	r11
     756:	af 90       	pop	r10
     758:	9f 90       	pop	r9
     75a:	8f 90       	pop	r8
     75c:	08 95       	ret

0000075e <setAntennaList>:
     75e:	cf 92       	push	r12
     760:	df 92       	push	r13
     762:	ef 92       	push	r14
     764:	ff 92       	push	r15
     766:	0f 93       	push	r16
     768:	1f 93       	push	r17
     76a:	cf 93       	push	r28
     76c:	df 93       	push	r29
     76e:	cd b7       	in	r28, 0x3d	; 61
     770:	de b7       	in	r29, 0x3e	; 62
     772:	c0 54       	subi	r28, 0x40	; 64
     774:	d1 09       	sbc	r29, r1
     776:	0f b6       	in	r0, 0x3f	; 63
     778:	f8 94       	cli
     77a:	de bf       	out	0x3e, r29	; 62
     77c:	0f be       	out	0x3f, r0	; 63
     77e:	cd bf       	out	0x3d, r28	; 61
     780:	fc 01       	movw	r30, r24
     782:	ec 52       	subi	r30, 0x2C	; 44
     784:	fe 4f       	sbci	r31, 0xFE	; 254
     786:	a0 81       	ld	r26, Z
     788:	b1 81       	ldd	r27, Z+1	; 0x01
     78a:	00 e0       	ldi	r16, 0x00	; 0
     78c:	10 e0       	ldi	r17, 0x00	; 0
     78e:	40 e0       	ldi	r20, 0x00	; 0
     790:	50 e0       	ldi	r21, 0x00	; 0
     792:	34 c0       	rjmp	.+104    	; 0x7fc <setAntennaList+0x9e>
     794:	fb 01       	movw	r30, r22
     796:	e0 80       	ld	r14, Z
     798:	f1 80       	ldd	r15, Z+1	; 0x01
     79a:	f7 01       	movw	r30, r14
     79c:	e4 0f       	add	r30, r20
     79e:	f5 1f       	adc	r31, r21
     7a0:	e0 80       	ld	r14, Z
     7a2:	cd 90       	ld	r12, X+
     7a4:	dc 90       	ld	r13, X
     7a6:	11 97       	sbiw	r26, 0x01	; 1
     7a8:	f9 01       	movw	r30, r18
     7aa:	ee 0f       	add	r30, r30
     7ac:	ff 1f       	adc	r31, r31
     7ae:	e2 0f       	add	r30, r18
     7b0:	f3 1f       	adc	r31, r19
     7b2:	ec 0d       	add	r30, r12
     7b4:	fd 1d       	adc	r31, r13
     7b6:	f0 80       	ld	r15, Z
     7b8:	ef 10       	cpse	r14, r15
     7ba:	0b c0       	rjmp	.+22     	; 0x7d2 <setAntennaList+0x74>
     7bc:	f1 80       	ldd	r15, Z+1	; 0x01
     7be:	e1 e0       	ldi	r30, 0x01	; 1
     7c0:	f0 e0       	ldi	r31, 0x00	; 0
     7c2:	ec 0f       	add	r30, r28
     7c4:	fd 1f       	adc	r31, r29
     7c6:	e0 0f       	add	r30, r16
     7c8:	f1 1f       	adc	r31, r17
     7ca:	f0 82       	st	Z, r15
     7cc:	0f 5f       	subi	r16, 0xFF	; 255
     7ce:	1f 4f       	sbci	r17, 0xFF	; 255
     7d0:	0c c0       	rjmp	.+24     	; 0x7ea <setAntennaList+0x8c>
     7d2:	2f 5f       	subi	r18, 0xFF	; 255
     7d4:	3f 4f       	sbci	r19, 0xFF	; 255
     7d6:	02 c0       	rjmp	.+4      	; 0x7dc <setAntennaList+0x7e>
     7d8:	20 e0       	ldi	r18, 0x00	; 0
     7da:	30 e0       	ldi	r19, 0x00	; 0
     7dc:	13 96       	adiw	r26, 0x03	; 3
     7de:	ec 91       	ld	r30, X
     7e0:	13 97       	sbiw	r26, 0x03	; 3
     7e2:	f0 e0       	ldi	r31, 0x00	; 0
     7e4:	2e 17       	cp	r18, r30
     7e6:	3f 07       	cpc	r19, r31
     7e8:	a8 f2       	brcs	.-86     	; 0x794 <setAntennaList+0x36>
     7ea:	13 96       	adiw	r26, 0x03	; 3
     7ec:	ec 91       	ld	r30, X
     7ee:	13 97       	sbiw	r26, 0x03	; 3
     7f0:	f0 e0       	ldi	r31, 0x00	; 0
     7f2:	2e 17       	cp	r18, r30
     7f4:	3f 07       	cpc	r19, r31
     7f6:	79 f0       	breq	.+30     	; 0x816 <setAntennaList+0xb8>
     7f8:	4f 5f       	subi	r20, 0xFF	; 255
     7fa:	5f 4f       	sbci	r21, 0xFF	; 255
     7fc:	fb 01       	movw	r30, r22
     7fe:	24 81       	ldd	r18, Z+4	; 0x04
     800:	35 81       	ldd	r19, Z+5	; 0x05
     802:	42 17       	cp	r20, r18
     804:	53 07       	cpc	r21, r19
     806:	40 f3       	brcs	.-48     	; 0x7d8 <setAntennaList+0x7a>
     808:	ae 01       	movw	r20, r28
     80a:	4f 5f       	subi	r20, 0xFF	; 255
     80c:	5f 4f       	sbci	r21, 0xFF	; 255
     80e:	60 2f       	mov	r22, r16
     810:	0e 94 07 4a 	call	0x940e	; 0x940e <TMR_SR_cmdSetAntennaSearchList>
     814:	04 c0       	rjmp	.+8      	; 0x81e <setAntennaList+0xc0>
     816:	67 e0       	ldi	r22, 0x07	; 7
     818:	75 e0       	ldi	r23, 0x05	; 5
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	92 e0       	ldi	r25, 0x02	; 2
     81e:	c0 5c       	subi	r28, 0xC0	; 192
     820:	df 4f       	sbci	r29, 0xFF	; 255
     822:	0f b6       	in	r0, 0x3f	; 63
     824:	f8 94       	cli
     826:	de bf       	out	0x3e, r29	; 62
     828:	0f be       	out	0x3f, r0	; 63
     82a:	cd bf       	out	0x3d, r28	; 61
     82c:	df 91       	pop	r29
     82e:	cf 91       	pop	r28
     830:	1f 91       	pop	r17
     832:	0f 91       	pop	r16
     834:	ff 90       	pop	r15
     836:	ef 90       	pop	r14
     838:	df 90       	pop	r13
     83a:	cf 90       	pop	r12
     83c:	08 95       	ret

0000083e <setProtocol>:
     83e:	1f 93       	push	r17
     840:	cf 93       	push	r28
     842:	df 93       	push	r29
     844:	fc 01       	movw	r30, r24
     846:	ee 57       	subi	r30, 0x7E	; 126
     848:	fc 4f       	sbci	r31, 0xFC	; 252
     84a:	20 81       	ld	r18, Z
     84c:	26 17       	cp	r18, r22
     84e:	99 f0       	breq	.+38     	; 0x876 <setProtocol+0x38>
     850:	16 2f       	mov	r17, r22
     852:	ec 01       	movw	r28, r24
     854:	0e 94 d5 4b 	call	0x97aa	; 0x97aa <TMR_SR_cmdSetProtocol>
     858:	61 15       	cp	r22, r1
     85a:	71 05       	cpc	r23, r1
     85c:	81 05       	cpc	r24, r1
     85e:	91 05       	cpc	r25, r1
     860:	79 f4       	brne	.+30     	; 0x880 <setProtocol+0x42>
     862:	fe 01       	movw	r30, r28
     864:	ee 57       	subi	r30, 0x7E	; 126
     866:	fc 4f       	sbci	r31, 0xFC	; 252
     868:	10 83       	st	Z, r17
     86a:	1d ab       	std	Y+53, r17	; 0x35
     86c:	40 e0       	ldi	r20, 0x00	; 0
     86e:	30 e0       	ldi	r19, 0x00	; 0
     870:	20 e0       	ldi	r18, 0x00	; 0
     872:	90 e0       	ldi	r25, 0x00	; 0
     874:	08 c0       	rjmp	.+16     	; 0x886 <setProtocol+0x48>
     876:	40 e0       	ldi	r20, 0x00	; 0
     878:	30 e0       	ldi	r19, 0x00	; 0
     87a:	20 e0       	ldi	r18, 0x00	; 0
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	03 c0       	rjmp	.+6      	; 0x886 <setProtocol+0x48>
     880:	46 2f       	mov	r20, r22
     882:	37 2f       	mov	r19, r23
     884:	28 2f       	mov	r18, r24
     886:	64 2f       	mov	r22, r20
     888:	73 2f       	mov	r23, r19
     88a:	82 2f       	mov	r24, r18
     88c:	df 91       	pop	r29
     88e:	cf 91       	pop	r28
     890:	1f 91       	pop	r17
     892:	08 95       	ret

00000894 <getHardwareInfo>:
     894:	ef 92       	push	r14
     896:	ff 92       	push	r15
     898:	0f 93       	push	r16
     89a:	1f 93       	push	r17
     89c:	cf 93       	push	r28
     89e:	df 93       	push	r29
     8a0:	cd b7       	in	r28, 0x3d	; 61
     8a2:	de b7       	in	r29, 0x3e	; 62
     8a4:	cf 5f       	subi	r28, 0xFF	; 255
     8a6:	d1 09       	sbc	r29, r1
     8a8:	0f b6       	in	r0, 0x3f	; 63
     8aa:	f8 94       	cli
     8ac:	de bf       	out	0x3e, r29	; 62
     8ae:	0f be       	out	0x3f, r0	; 63
     8b0:	cd bf       	out	0x3d, r28	; 61
     8b2:	7b 01       	movw	r14, r22
     8b4:	8e 01       	movw	r16, r28
     8b6:	0f 5f       	subi	r16, 0xFF	; 255
     8b8:	1f 4f       	sbci	r17, 0xFF	; 255
     8ba:	b8 01       	movw	r22, r16
     8bc:	8f 58       	subi	r24, 0x8F	; 143
     8be:	9c 4f       	sbci	r25, 0xFC	; 252
     8c0:	8c de       	rcall	.-744    	; 0x5da <TMR_hexDottedQuad>
     8c2:	f8 01       	movw	r30, r16
     8c4:	01 90       	ld	r0, Z+
     8c6:	00 20       	and	r0, r0
     8c8:	e9 f7       	brne	.-6      	; 0x8c4 <getHardwareInfo+0x30>
     8ca:	31 97       	sbiw	r30, 0x01	; 1
     8cc:	af 01       	movw	r20, r30
     8ce:	40 1b       	sub	r20, r16
     8d0:	51 0b       	sbc	r21, r17
     8d2:	b8 01       	movw	r22, r16
     8d4:	c7 01       	movw	r24, r14
     8d6:	0e 94 ad 6a 	call	0xd55a	; 0xd55a <TMR_stringCopy>
     8da:	60 e0       	ldi	r22, 0x00	; 0
     8dc:	70 e0       	ldi	r23, 0x00	; 0
     8de:	cb 01       	movw	r24, r22
     8e0:	c1 50       	subi	r28, 0x01	; 1
     8e2:	df 4f       	sbci	r29, 0xFF	; 255
     8e4:	0f b6       	in	r0, 0x3f	; 63
     8e6:	f8 94       	cli
     8e8:	de bf       	out	0x3e, r29	; 62
     8ea:	0f be       	out	0x3f, r0	; 63
     8ec:	cd bf       	out	0x3d, r28	; 61
     8ee:	df 91       	pop	r29
     8f0:	cf 91       	pop	r28
     8f2:	1f 91       	pop	r17
     8f4:	0f 91       	pop	r16
     8f6:	ff 90       	pop	r15
     8f8:	ef 90       	pop	r14
     8fa:	08 95       	ret

000008fc <getSerialNumber>:
     8fc:	cf 92       	push	r12
     8fe:	df 92       	push	r13
     900:	ef 92       	push	r14
     902:	ff 92       	push	r15
     904:	0f 93       	push	r16
     906:	1f 93       	push	r17
     908:	cf 93       	push	r28
     90a:	df 93       	push	r29
     90c:	cd b7       	in	r28, 0x3d	; 61
     90e:	de b7       	in	r29, 0x3e	; 62
     910:	c1 54       	subi	r28, 0x41	; 65
     912:	d1 09       	sbc	r29, r1
     914:	0f b6       	in	r0, 0x3f	; 63
     916:	f8 94       	cli
     918:	de bf       	out	0x3e, r29	; 62
     91a:	0f be       	out	0x3f, r0	; 63
     91c:	cd bf       	out	0x3d, r28	; 61
     91e:	7b 01       	movw	r14, r22
     920:	20 e2       	ldi	r18, 0x20	; 32
     922:	29 a3       	std	Y+33, r18	; 0x21
     924:	8e 01       	movw	r16, r28
     926:	0f 5f       	subi	r16, 0xFF	; 255
     928:	1f 4f       	sbci	r17, 0xFF	; 255
     92a:	9e 01       	movw	r18, r28
     92c:	2f 5d       	subi	r18, 0xDF	; 223
     92e:	3f 4f       	sbci	r19, 0xFF	; 255
     930:	40 e4       	ldi	r20, 0x40	; 64
     932:	60 e0       	ldi	r22, 0x00	; 0
     934:	0e 94 34 38 	call	0x7068	; 0x7068 <TMR_SR_cmdGetHardwareVersion>
     938:	c6 2e       	mov	r12, r22
     93a:	d7 2e       	mov	r13, r23
     93c:	08 2f       	mov	r16, r24
     93e:	19 2f       	mov	r17, r25
     940:	29 a1       	ldd	r18, Y+33	; 0x21
     942:	21 11       	cpse	r18, r1
     944:	09 c0       	rjmp	.+18     	; 0x958 <getSerialNumber+0x5c>
     946:	d7 01       	movw	r26, r14
     948:	ed 91       	ld	r30, X+
     94a:	fc 91       	ld	r31, X
     94c:	10 82       	st	Z, r1
     94e:	60 e0       	ldi	r22, 0x00	; 0
     950:	70 e0       	ldi	r23, 0x00	; 0
     952:	80 e0       	ldi	r24, 0x00	; 0
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	33 c0       	rjmp	.+102    	; 0x9be <getSerialNumber+0xc2>
     958:	8c 81       	ldd	r24, Y+4	; 0x04
     95a:	48 2f       	mov	r20, r24
     95c:	50 e0       	ldi	r21, 0x00	; 0
     95e:	30 e0       	ldi	r19, 0x00	; 0
     960:	23 50       	subi	r18, 0x03	; 3
     962:	31 09       	sbc	r19, r1
     964:	24 17       	cp	r18, r20
     966:	35 07       	cpc	r19, r21
     968:	c4 f0       	brlt	.+48     	; 0x99a <getSerialNumber+0x9e>
     96a:	24 e0       	ldi	r18, 0x04	; 4
     96c:	30 e0       	ldi	r19, 0x00	; 0
     96e:	40 e0       	ldi	r20, 0x00	; 0
     970:	11 c0       	rjmp	.+34     	; 0x994 <getSerialNumber+0x98>
     972:	e1 e0       	ldi	r30, 0x01	; 1
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	ec 0f       	add	r30, r28
     978:	fd 1f       	adc	r31, r29
     97a:	e2 0f       	add	r30, r18
     97c:	f3 1f       	adc	r31, r19
     97e:	50 81       	ld	r21, Z
     980:	e2 e2       	ldi	r30, 0x22	; 34
     982:	f0 e0       	ldi	r31, 0x00	; 0
     984:	ec 0f       	add	r30, r28
     986:	fd 1f       	adc	r31, r29
     988:	e4 0f       	add	r30, r20
     98a:	f1 1d       	adc	r31, r1
     98c:	50 83       	st	Z, r21
     98e:	4f 5f       	subi	r20, 0xFF	; 255
     990:	2f 5f       	subi	r18, 0xFF	; 255
     992:	3f 4f       	sbci	r19, 0xFF	; 255
     994:	48 17       	cp	r20, r24
     996:	68 f3       	brcs	.-38     	; 0x972 <getSerialNumber+0x76>
     998:	07 c0       	rjmp	.+14     	; 0x9a8 <getSerialNumber+0xac>
     99a:	40 e0       	ldi	r20, 0x00	; 0
     99c:	68 94       	set
     99e:	cc 24       	eor	r12, r12
     9a0:	c1 f8       	bld	r12, 1
     9a2:	d1 2c       	mov	r13, r1
     9a4:	00 e0       	ldi	r16, 0x00	; 0
     9a6:	13 e0       	ldi	r17, 0x03	; 3
     9a8:	50 e0       	ldi	r21, 0x00	; 0
     9aa:	be 01       	movw	r22, r28
     9ac:	6e 5d       	subi	r22, 0xDE	; 222
     9ae:	7f 4f       	sbci	r23, 0xFF	; 255
     9b0:	c7 01       	movw	r24, r14
     9b2:	0e 94 ad 6a 	call	0xd55a	; 0xd55a <TMR_stringCopy>
     9b6:	6c 2d       	mov	r22, r12
     9b8:	7d 2d       	mov	r23, r13
     9ba:	80 2f       	mov	r24, r16
     9bc:	91 2f       	mov	r25, r17
     9be:	cf 5b       	subi	r28, 0xBF	; 191
     9c0:	df 4f       	sbci	r29, 0xFF	; 255
     9c2:	0f b6       	in	r0, 0x3f	; 63
     9c4:	f8 94       	cli
     9c6:	de bf       	out	0x3e, r29	; 62
     9c8:	0f be       	out	0x3f, r0	; 63
     9ca:	cd bf       	out	0x3d, r28	; 61
     9cc:	df 91       	pop	r29
     9ce:	cf 91       	pop	r28
     9d0:	1f 91       	pop	r17
     9d2:	0f 91       	pop	r16
     9d4:	ff 90       	pop	r15
     9d6:	ef 90       	pop	r14
     9d8:	df 90       	pop	r13
     9da:	cf 90       	pop	r12
     9dc:	08 95       	ret

000009de <prepEmbReadTagMultiple>:
     9de:	4f 92       	push	r4
     9e0:	5f 92       	push	r5
     9e2:	6f 92       	push	r6
     9e4:	7f 92       	push	r7
     9e6:	8f 92       	push	r8
     9e8:	9f 92       	push	r9
     9ea:	af 92       	push	r10
     9ec:	bf 92       	push	r11
     9ee:	cf 92       	push	r12
     9f0:	ef 92       	push	r14
     9f2:	ff 92       	push	r15
     9f4:	0f 93       	push	r16
     9f6:	1f 93       	push	r17
     9f8:	cf 93       	push	r28
     9fa:	df 93       	push	r29
     9fc:	cd b7       	in	r28, 0x3d	; 61
     9fe:	de b7       	in	r29, 0x3e	; 62
     a00:	2b 01       	movw	r4, r22
     a02:	3a 01       	movw	r6, r20
     a04:	0e 94 c2 3a 	call	0x7584	; 0x7584 <TMR_SR_msgSetupReadTagMultiple>
     a08:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
     a0c:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
     a10:	2f 5f       	subi	r18, 0xFF	; 255
     a12:	3f 4f       	sbci	r19, 0xFF	; 255
     a14:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
     a18:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
     a1c:	f3 01       	movw	r30, r6
     a1e:	20 81       	ld	r18, Z
     a20:	31 e0       	ldi	r19, 0x01	; 1
     a22:	32 0f       	add	r19, r18
     a24:	30 83       	st	Z, r19
     a26:	f2 01       	movw	r30, r4
     a28:	e2 0f       	add	r30, r18
     a2a:	f1 1d       	adc	r31, r1
     a2c:	21 e0       	ldi	r18, 0x01	; 1
     a2e:	20 83       	st	Z, r18
     a30:	f3 01       	movw	r30, r6
     a32:	20 81       	ld	r18, Z
     a34:	31 e0       	ldi	r19, 0x01	; 1
     a36:	32 0f       	add	r19, r18
     a38:	30 83       	st	Z, r19
     a3a:	ea 89       	ldd	r30, Y+18	; 0x12
     a3c:	fb 89       	ldd	r31, Y+19	; 0x13
     a3e:	20 83       	st	Z, r18
     a40:	df 91       	pop	r29
     a42:	cf 91       	pop	r28
     a44:	1f 91       	pop	r17
     a46:	0f 91       	pop	r16
     a48:	ff 90       	pop	r15
     a4a:	ef 90       	pop	r14
     a4c:	cf 90       	pop	r12
     a4e:	bf 90       	pop	r11
     a50:	af 90       	pop	r10
     a52:	9f 90       	pop	r9
     a54:	8f 90       	pop	r8
     a56:	7f 90       	pop	r7
     a58:	6f 90       	pop	r6
     a5a:	5f 90       	pop	r5
     a5c:	4f 90       	pop	r4
     a5e:	08 95       	ret

00000a60 <fillStaticTxRxMapData>:
     a60:	cf 93       	push	r28
     a62:	df 93       	push	r29
     a64:	ec 01       	movw	r28, r24
     a66:	50 e0       	ldi	r21, 0x00	; 0
     a68:	1d c0       	rjmp	.+58     	; 0xaa4 <fillStaticTxRxMapData+0x44>
     a6a:	25 2f       	mov	r18, r21
     a6c:	30 e0       	ldi	r19, 0x00	; 0
     a6e:	f9 01       	movw	r30, r18
     a70:	ee 0f       	add	r30, r30
     a72:	ff 1f       	adc	r31, r31
     a74:	db 01       	movw	r26, r22
     a76:	ae 0f       	add	r26, r30
     a78:	bf 1f       	adc	r27, r31
     a7a:	9c 91       	ld	r25, X
     a7c:	2e 0f       	add	r18, r30
     a7e:	3f 1f       	adc	r19, r31
     a80:	2c 0f       	add	r18, r28
     a82:	3d 1f       	adc	r19, r29
     a84:	f9 01       	movw	r30, r18
     a86:	eb 51       	subi	r30, 0x1B	; 27
     a88:	fe 4f       	sbci	r31, 0xFE	; 254
     a8a:	90 83       	st	Z, r25
     a8c:	31 96       	adiw	r30, 0x01	; 1
     a8e:	90 83       	st	Z, r25
     a90:	31 96       	adiw	r30, 0x01	; 1
     a92:	90 83       	st	Z, r25
     a94:	8c a9       	ldd	r24, Y+52	; 0x34
     a96:	81 11       	cpse	r24, r1
     a98:	04 c0       	rjmp	.+8      	; 0xaa2 <fillStaticTxRxMapData+0x42>
     a9a:	11 96       	adiw	r26, 0x01	; 1
     a9c:	8c 91       	ld	r24, X
     a9e:	81 11       	cpse	r24, r1
     aa0:	9c ab       	std	Y+52, r25	; 0x34
     aa2:	5f 5f       	subi	r21, 0xFF	; 255
     aa4:	54 17       	cp	r21, r20
     aa6:	08 f3       	brcs	.-62     	; 0xa6a <fillStaticTxRxMapData+0xa>
     aa8:	df 91       	pop	r29
     aaa:	cf 91       	pop	r28
     aac:	08 95       	ret

00000aae <updateTxRxMapData>:
     aae:	1f 93       	push	r17
     ab0:	cf 93       	push	r28
     ab2:	df 93       	push	r29
     ab4:	ec 01       	movw	r28, r24
     ab6:	14 2f       	mov	r17, r20
     ab8:	d3 df       	rcall	.-90     	; 0xa60 <fillStaticTxRxMapData>
     aba:	fe 01       	movw	r30, r28
     abc:	e9 59       	subi	r30, 0x99	; 153
     abe:	fc 4f       	sbci	r31, 0xFC	; 252
     ac0:	80 e4       	ldi	r24, 0x40	; 64
     ac2:	80 83       	st	Z, r24
     ac4:	31 96       	adiw	r30, 0x01	; 1
     ac6:	10 83       	st	Z, r17
     ac8:	ce 01       	movw	r24, r28
     aca:	8b 51       	subi	r24, 0x1B	; 27
     acc:	9e 4f       	sbci	r25, 0xFE	; 254
     ace:	33 97       	sbiw	r30, 0x03	; 3
     ad0:	91 83       	std	Z+1, r25	; 0x01
     ad2:	80 83       	st	Z, r24
     ad4:	de 01       	movw	r26, r28
     ad6:	ac 52       	subi	r26, 0x2C	; 44
     ad8:	be 4f       	sbci	r27, 0xFE	; 254
     ada:	ed 93       	st	X+, r30
     adc:	fc 93       	st	X, r31
     ade:	80 54       	subi	r24, 0x40	; 64
     ae0:	9f 4f       	sbci	r25, 0xFF	; 255
     ae2:	34 96       	adiw	r30, 0x04	; 4
     ae4:	91 83       	std	Z+1, r25	; 0x01
     ae6:	80 83       	st	Z, r24
     ae8:	20 e0       	ldi	r18, 0x00	; 0
     aea:	1e c0       	rjmp	.+60     	; 0xb28 <updateTxRxMapData+0x7a>
     aec:	fe 01       	movw	r30, r28
     aee:	e7 59       	subi	r30, 0x97	; 151
     af0:	fc 4f       	sbci	r31, 0xFC	; 252
     af2:	01 90       	ld	r0, Z+
     af4:	f0 81       	ld	r31, Z
     af6:	e0 2d       	mov	r30, r0
     af8:	82 2f       	mov	r24, r18
     afa:	90 e0       	ldi	r25, 0x00	; 0
     afc:	ac 01       	movw	r20, r24
     afe:	44 0f       	add	r20, r20
     b00:	55 1f       	adc	r21, r21
     b02:	84 0f       	add	r24, r20
     b04:	95 1f       	adc	r25, r21
     b06:	e8 0f       	add	r30, r24
     b08:	f9 1f       	adc	r31, r25
     b0a:	de 01       	movw	r26, r28
     b0c:	ab 59       	subi	r26, 0x9B	; 155
     b0e:	bc 4f       	sbci	r27, 0xFC	; 252
     b10:	4d 91       	ld	r20, X+
     b12:	5c 91       	ld	r21, X
     b14:	da 01       	movw	r26, r20
     b16:	a8 0f       	add	r26, r24
     b18:	b9 1f       	adc	r27, r25
     b1a:	8d 91       	ld	r24, X+
     b1c:	9d 91       	ld	r25, X+
     b1e:	ac 91       	ld	r26, X
     b20:	80 83       	st	Z, r24
     b22:	91 83       	std	Z+1, r25	; 0x01
     b24:	a2 83       	std	Z+2, r26	; 0x02
     b26:	2f 5f       	subi	r18, 0xFF	; 255
     b28:	21 17       	cp	r18, r17
     b2a:	00 f3       	brcs	.-64     	; 0xaec <updateTxRxMapData+0x3e>
     b2c:	fe 01       	movw	r30, r28
     b2e:	e9 59       	subi	r30, 0x99	; 153
     b30:	fc 4f       	sbci	r31, 0xFC	; 252
     b32:	80 81       	ld	r24, Z
     b34:	34 96       	adiw	r30, 0x04	; 4
     b36:	80 83       	st	Z, r24
     b38:	33 97       	sbiw	r30, 0x03	; 3
     b3a:	80 81       	ld	r24, Z
     b3c:	34 96       	adiw	r30, 0x04	; 4
     b3e:	80 83       	st	Z, r24
     b40:	ce 01       	movw	r24, r28
     b42:	87 59       	subi	r24, 0x97	; 151
     b44:	9c 4f       	sbci	r25, 0xFC	; 252
     b46:	ca 52       	subi	r28, 0x2A	; 42
     b48:	de 4f       	sbci	r29, 0xFE	; 254
     b4a:	99 83       	std	Y+1, r25	; 0x01
     b4c:	88 83       	st	Y, r24
     b4e:	60 e0       	ldi	r22, 0x00	; 0
     b50:	70 e0       	ldi	r23, 0x00	; 0
     b52:	cb 01       	movw	r24, r22
     b54:	df 91       	pop	r29
     b56:	cf 91       	pop	r28
     b58:	1f 91       	pop	r17
     b5a:	08 95       	ret

00000b5c <initTxRxMapFromPorts>:
     b5c:	0f 93       	push	r16
     b5e:	1f 93       	push	r17
     b60:	cf 93       	push	r28
     b62:	df 93       	push	r29
     b64:	cd b7       	in	r28, 0x3d	; 61
     b66:	de b7       	in	r29, 0x3e	; 62
     b68:	c1 58       	subi	r28, 0x81	; 129
     b6a:	d1 09       	sbc	r29, r1
     b6c:	0f b6       	in	r0, 0x3f	; 63
     b6e:	f8 94       	cli
     b70:	de bf       	out	0x3e, r29	; 62
     b72:	0f be       	out	0x3f, r0	; 63
     b74:	cd bf       	out	0x3d, r28	; 61
     b76:	8c 01       	movw	r16, r24
     b78:	80 e4       	ldi	r24, 0x40	; 64
     b7a:	cf 57       	subi	r28, 0x7F	; 127
     b7c:	df 4f       	sbci	r29, 0xFF	; 255
     b7e:	88 83       	st	Y, r24
     b80:	c1 58       	subi	r28, 0x81	; 129
     b82:	d0 40       	sbci	r29, 0x00	; 0
     b84:	ae 01       	movw	r20, r28
     b86:	4f 5f       	subi	r20, 0xFF	; 255
     b88:	5f 4f       	sbci	r21, 0xFF	; 255
     b8a:	be 01       	movw	r22, r28
     b8c:	6f 57       	subi	r22, 0x7F	; 127
     b8e:	7f 4f       	sbci	r23, 0xFF	; 255
     b90:	c8 01       	movw	r24, r16
     b92:	0e 94 0c 51 	call	0xa218	; 0xa218 <TMR_SR_cmdAntennaDetect>
     b96:	61 15       	cp	r22, r1
     b98:	71 05       	cpc	r23, r1
     b9a:	81 05       	cpc	r24, r1
     b9c:	91 05       	cpc	r25, r1
     b9e:	a1 f4       	brne	.+40     	; 0xbc8 <initTxRxMapFromPorts+0x6c>
     ba0:	cf 57       	subi	r28, 0x7F	; 127
     ba2:	df 4f       	sbci	r29, 0xFF	; 255
     ba4:	48 81       	ld	r20, Y
     ba6:	c1 58       	subi	r28, 0x81	; 129
     ba8:	d0 40       	sbci	r29, 0x00	; 0
     baa:	be 01       	movw	r22, r28
     bac:	6f 5f       	subi	r22, 0xFF	; 255
     bae:	7f 4f       	sbci	r23, 0xFF	; 255
     bb0:	c8 01       	movw	r24, r16
     bb2:	7d df       	rcall	.-262    	; 0xaae <updateTxRxMapData>
     bb4:	61 15       	cp	r22, r1
     bb6:	71 05       	cpc	r23, r1
     bb8:	81 05       	cpc	r24, r1
     bba:	91 05       	cpc	r25, r1
     bbc:	49 f4       	brne	.+18     	; 0xbd0 <initTxRxMapFromPorts+0x74>
     bbe:	40 e0       	ldi	r20, 0x00	; 0
     bc0:	30 e0       	ldi	r19, 0x00	; 0
     bc2:	20 e0       	ldi	r18, 0x00	; 0
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	07 c0       	rjmp	.+14     	; 0xbd6 <initTxRxMapFromPorts+0x7a>
     bc8:	46 2f       	mov	r20, r22
     bca:	37 2f       	mov	r19, r23
     bcc:	28 2f       	mov	r18, r24
     bce:	03 c0       	rjmp	.+6      	; 0xbd6 <initTxRxMapFromPorts+0x7a>
     bd0:	46 2f       	mov	r20, r22
     bd2:	37 2f       	mov	r19, r23
     bd4:	28 2f       	mov	r18, r24
     bd6:	64 2f       	mov	r22, r20
     bd8:	73 2f       	mov	r23, r19
     bda:	82 2f       	mov	r24, r18
     bdc:	cf 57       	subi	r28, 0x7F	; 127
     bde:	df 4f       	sbci	r29, 0xFF	; 255
     be0:	0f b6       	in	r0, 0x3f	; 63
     be2:	f8 94       	cli
     be4:	de bf       	out	0x3e, r29	; 62
     be6:	0f be       	out	0x3f, r0	; 63
     be8:	cd bf       	out	0x3d, r28	; 61
     bea:	df 91       	pop	r29
     bec:	cf 91       	pop	r28
     bee:	1f 91       	pop	r17
     bf0:	0f 91       	pop	r16
     bf2:	08 95       	ret

00000bf4 <TMR_SR_cmdSetPerAntennaTime>:
     bf4:	8f 92       	push	r8
     bf6:	9f 92       	push	r9
     bf8:	af 92       	push	r10
     bfa:	bf 92       	push	r11
     bfc:	df 92       	push	r13
     bfe:	ef 92       	push	r14
     c00:	ff 92       	push	r15
     c02:	0f 93       	push	r16
     c04:	1f 93       	push	r17
     c06:	cf 93       	push	r28
     c08:	df 93       	push	r29
     c0a:	cd b7       	in	r28, 0x3d	; 61
     c0c:	de b7       	in	r29, 0x3e	; 62
     c0e:	da 95       	dec	r29
     c10:	0f b6       	in	r0, 0x3f	; 63
     c12:	f8 94       	cli
     c14:	de bf       	out	0x3e, r29	; 62
     c16:	0f be       	out	0x3f, r0	; 63
     c18:	cd bf       	out	0x3d, r28	; 61
     c1a:	7c 01       	movw	r14, r24
     c1c:	8b 01       	movw	r16, r22
     c1e:	fc 01       	movw	r30, r24
     c20:	ec 52       	subi	r30, 0x2C	; 44
     c22:	fe 4f       	sbci	r31, 0xFE	; 254
     c24:	80 81       	ld	r24, Z
     c26:	91 81       	ldd	r25, Z+1	; 0x01
     c28:	89 2b       	or	r24, r25
     c2a:	51 f4       	brne	.+20     	; 0xc40 <TMR_SR_cmdSetPerAntennaTime+0x4c>
     c2c:	c7 01       	movw	r24, r14
     c2e:	96 df       	rcall	.-212    	; 0xb5c <initTxRxMapFromPorts>
     c30:	4b 01       	movw	r8, r22
     c32:	5c 01       	movw	r10, r24
     c34:	61 15       	cp	r22, r1
     c36:	71 05       	cpc	r23, r1
     c38:	81 05       	cpc	r24, r1
     c3a:	91 05       	cpc	r25, r1
     c3c:	09 f0       	breq	.+2      	; 0xc40 <TMR_SR_cmdSetPerAntennaTime+0x4c>
     c3e:	af c0       	rjmp	.+350    	; 0xd9e <TMR_SR_cmdSetPerAntennaTime+0x1aa>
     c40:	f7 01       	movw	r30, r14
     c42:	ec 52       	subi	r30, 0x2C	; 44
     c44:	fe 4f       	sbci	r31, 0xFE	; 254
     c46:	a0 81       	ld	r26, Z
     c48:	b1 81       	ldd	r27, Z+1	; 0x01
     c4a:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
     c4e:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
     c52:	21 e9       	ldi	r18, 0x91	; 145
     c54:	2b 83       	std	Y+3, r18	; 0x03
     c56:	02 96       	adiw	r24, 0x02	; 2
     c58:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
     c5c:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
     c60:	ea 5d       	subi	r30, 0xDA	; 218
     c62:	fb 4f       	sbci	r31, 0xFB	; 251
     c64:	90 81       	ld	r25, Z
     c66:	81 e0       	ldi	r24, 0x01	; 1
     c68:	89 27       	eor	r24, r25
     c6a:	20 e8       	ldi	r18, 0x80	; 128
     c6c:	82 9f       	mul	r24, r18
     c6e:	c0 01       	movw	r24, r0
     c70:	11 24       	eor	r1, r1
     c72:	87 60       	ori	r24, 0x07	; 7
     c74:	8c 83       	std	Y+4, r24	; 0x04
     c76:	d1 2c       	mov	r13, r1
     c78:	44 e0       	ldi	r20, 0x04	; 4
     c7a:	85 c0       	rjmp	.+266    	; 0xd86 <TMR_SR_cmdSetPerAntennaTime+0x192>
     c7c:	f8 01       	movw	r30, r16
     c7e:	20 81       	ld	r18, Z
     c80:	31 81       	ldd	r19, Z+1	; 0x01
     c82:	8d 2d       	mov	r24, r13
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	bc 01       	movw	r22, r24
     c88:	66 0f       	add	r22, r22
     c8a:	77 1f       	adc	r23, r23
     c8c:	66 0f       	add	r22, r22
     c8e:	77 1f       	adc	r23, r23
     c90:	68 0f       	add	r22, r24
     c92:	79 1f       	adc	r23, r25
     c94:	f9 01       	movw	r30, r18
     c96:	e6 0f       	add	r30, r22
     c98:	f7 1f       	adc	r31, r23
     c9a:	80 81       	ld	r24, Z
     c9c:	81 11       	cpse	r24, r1
     c9e:	30 c0       	rjmp	.+96     	; 0xd00 <TMR_SR_cmdSetPerAntennaTime+0x10c>
     ca0:	36 c0       	rjmp	.+108    	; 0xd0e <TMR_SR_cmdSetPerAntennaTime+0x11a>
     ca2:	f8 01       	movw	r30, r16
     ca4:	20 81       	ld	r18, Z
     ca6:	31 81       	ldd	r19, Z+1	; 0x01
     ca8:	f9 01       	movw	r30, r18
     caa:	e6 0f       	add	r30, r22
     cac:	f7 1f       	adc	r31, r23
     cae:	50 81       	ld	r21, Z
     cb0:	ed 91       	ld	r30, X+
     cb2:	fc 91       	ld	r31, X
     cb4:	11 97       	sbiw	r26, 0x01	; 1
     cb6:	28 2f       	mov	r18, r24
     cb8:	30 e0       	ldi	r19, 0x00	; 0
     cba:	59 01       	movw	r10, r18
     cbc:	aa 0c       	add	r10, r10
     cbe:	bb 1c       	adc	r11, r11
     cc0:	2a 0d       	add	r18, r10
     cc2:	3b 1d       	adc	r19, r11
     cc4:	e2 0f       	add	r30, r18
     cc6:	f3 1f       	adc	r31, r19
     cc8:	90 81       	ld	r25, Z
     cca:	59 13       	cpse	r21, r25
     ccc:	17 c0       	rjmp	.+46     	; 0xcfc <TMR_SR_cmdSetPerAntennaTime+0x108>
     cce:	e0 91 57 02 	lds	r30, 0x0257	; 0x800257 <totalMsgIdx>
     cd2:	f0 91 58 02 	lds	r31, 0x0258	; 0x800258 <totalMsgIdx+0x1>
     cd6:	31 96       	adiw	r30, 0x01	; 1
     cd8:	f0 93 58 02 	sts	0x0258, r31	; 0x800258 <totalMsgIdx+0x1>
     cdc:	e0 93 57 02 	sts	0x0257, r30	; 0x800257 <totalMsgIdx>
     ce0:	ed 91       	ld	r30, X+
     ce2:	fc 91       	ld	r31, X
     ce4:	11 97       	sbiw	r26, 0x01	; 1
     ce6:	e2 0f       	add	r30, r18
     ce8:	f3 1f       	adc	r31, r19
     cea:	91 81       	ldd	r25, Z+1	; 0x01
     cec:	e1 e0       	ldi	r30, 0x01	; 1
     cee:	f0 e0       	ldi	r31, 0x00	; 0
     cf0:	ec 0f       	add	r30, r28
     cf2:	fd 1f       	adc	r31, r29
     cf4:	e4 0f       	add	r30, r20
     cf6:	f1 1d       	adc	r31, r1
     cf8:	90 83       	st	Z, r25
     cfa:	4f 5f       	subi	r20, 0xFF	; 255
     cfc:	8f 5f       	subi	r24, 0xFF	; 255
     cfe:	01 c0       	rjmp	.+2      	; 0xd02 <TMR_SR_cmdSetPerAntennaTime+0x10e>
     d00:	80 e0       	ldi	r24, 0x00	; 0
     d02:	13 96       	adiw	r26, 0x03	; 3
     d04:	9c 91       	ld	r25, X
     d06:	13 97       	sbiw	r26, 0x03	; 3
     d08:	89 17       	cp	r24, r25
     d0a:	58 f2       	brcs	.-106    	; 0xca2 <TMR_SR_cmdSetPerAntennaTime+0xae>
     d0c:	11 c0       	rjmp	.+34     	; 0xd30 <TMR_SR_cmdSetPerAntennaTime+0x13c>
     d0e:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
     d12:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
     d16:	01 96       	adiw	r24, 0x01	; 1
     d18:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
     d1c:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
     d20:	e1 e0       	ldi	r30, 0x01	; 1
     d22:	f0 e0       	ldi	r31, 0x00	; 0
     d24:	ec 0f       	add	r30, r28
     d26:	fd 1f       	adc	r31, r29
     d28:	e4 0f       	add	r30, r20
     d2a:	f1 1d       	adc	r31, r1
     d2c:	10 82       	st	Z, r1
     d2e:	4f 5f       	subi	r20, 0xFF	; 255
     d30:	f8 01       	movw	r30, r16
     d32:	80 81       	ld	r24, Z
     d34:	91 81       	ldd	r25, Z+1	; 0x01
     d36:	fc 01       	movw	r30, r24
     d38:	e6 0f       	add	r30, r22
     d3a:	f7 1f       	adc	r31, r23
     d3c:	81 80       	ldd	r8, Z+1	; 0x01
     d3e:	92 80       	ldd	r9, Z+2	; 0x02
     d40:	a3 80       	ldd	r10, Z+3	; 0x03
     d42:	b4 80       	ldd	r11, Z+4	; 0x04
     d44:	ff ef       	ldi	r31, 0xFF	; 255
     d46:	8f 16       	cp	r8, r31
     d48:	9f 06       	cpc	r9, r31
     d4a:	a1 04       	cpc	r10, r1
     d4c:	b1 04       	cpc	r11, r1
     d4e:	5c f5       	brge	.+86     	; 0xda6 <TMR_SR_cmdSetPerAntennaTime+0x1b2>
     d50:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
     d54:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
     d58:	02 96       	adiw	r24, 0x02	; 2
     d5a:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
     d5e:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
     d62:	e1 e0       	ldi	r30, 0x01	; 1
     d64:	f0 e0       	ldi	r31, 0x00	; 0
     d66:	ec 0f       	add	r30, r28
     d68:	fd 1f       	adc	r31, r29
     d6a:	e4 0f       	add	r30, r20
     d6c:	f1 1d       	adc	r31, r1
     d6e:	90 82       	st	Z, r9
     d70:	81 e0       	ldi	r24, 0x01	; 1
     d72:	84 0f       	add	r24, r20
     d74:	e1 e0       	ldi	r30, 0x01	; 1
     d76:	f0 e0       	ldi	r31, 0x00	; 0
     d78:	ec 0f       	add	r30, r28
     d7a:	fd 1f       	adc	r31, r29
     d7c:	e8 0f       	add	r30, r24
     d7e:	f1 1d       	adc	r31, r1
     d80:	4e 5f       	subi	r20, 0xFE	; 254
     d82:	80 82       	st	Z, r8
     d84:	d3 94       	inc	r13
     d86:	f8 01       	movw	r30, r16
     d88:	83 81       	ldd	r24, Z+3	; 0x03
     d8a:	d8 16       	cp	r13, r24
     d8c:	08 f4       	brcc	.+2      	; 0xd90 <TMR_SR_cmdSetPerAntennaTime+0x19c>
     d8e:	76 cf       	rjmp	.-276    	; 0xc7c <TMR_SR_cmdSetPerAntennaTime+0x88>
     d90:	be 01       	movw	r22, r28
     d92:	6f 5f       	subi	r22, 0xFF	; 255
     d94:	7f 4f       	sbci	r23, 0xFF	; 255
     d96:	c7 01       	movw	r24, r14
     d98:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
     d9c:	08 c0       	rjmp	.+16     	; 0xdae <TMR_SR_cmdSetPerAntennaTime+0x1ba>
     d9e:	79 2d       	mov	r23, r9
     da0:	8a 2d       	mov	r24, r10
     da2:	9b 2d       	mov	r25, r11
     da4:	04 c0       	rjmp	.+8      	; 0xdae <TMR_SR_cmdSetPerAntennaTime+0x1ba>
     da6:	61 e0       	ldi	r22, 0x01	; 1
     da8:	70 e0       	ldi	r23, 0x00	; 0
     daa:	80 e0       	ldi	r24, 0x00	; 0
     dac:	93 e0       	ldi	r25, 0x03	; 3
     dae:	d3 95       	inc	r29
     db0:	0f b6       	in	r0, 0x3f	; 63
     db2:	f8 94       	cli
     db4:	de bf       	out	0x3e, r29	; 62
     db6:	0f be       	out	0x3f, r0	; 63
     db8:	cd bf       	out	0x3d, r28	; 61
     dba:	df 91       	pop	r29
     dbc:	cf 91       	pop	r28
     dbe:	1f 91       	pop	r17
     dc0:	0f 91       	pop	r16
     dc2:	ff 90       	pop	r15
     dc4:	ef 90       	pop	r14
     dc6:	df 90       	pop	r13
     dc8:	bf 90       	pop	r11
     dca:	af 90       	pop	r10
     dcc:	9f 90       	pop	r9
     dce:	8f 90       	pop	r8
     dd0:	08 95       	ret

00000dd2 <getPortValues>:
     dd2:	af 92       	push	r10
     dd4:	bf 92       	push	r11
     dd6:	cf 92       	push	r12
     dd8:	df 92       	push	r13
     dda:	ef 92       	push	r14
     ddc:	ff 92       	push	r15
     dde:	0f 93       	push	r16
     de0:	1f 93       	push	r17
     de2:	cf 93       	push	r28
     de4:	df 93       	push	r29
     de6:	cd b7       	in	r28, 0x3d	; 61
     de8:	de b7       	in	r29, 0x3e	; 62
     dea:	c1 5c       	subi	r28, 0xC1	; 193
     dec:	d1 40       	sbci	r29, 0x01	; 1
     dee:	0f b6       	in	r0, 0x3f	; 63
     df0:	f8 94       	cli
     df2:	de bf       	out	0x3e, r29	; 62
     df4:	0f be       	out	0x3f, r0	; 63
     df6:	cd bf       	out	0x3d, r28	; 61
     df8:	5c 01       	movw	r10, r24
     dfa:	7b 01       	movw	r14, r22
     dfc:	6a 01       	movw	r12, r20
     dfe:	fc 01       	movw	r30, r24
     e00:	ec 52       	subi	r30, 0x2C	; 44
     e02:	fe 4f       	sbci	r31, 0xFE	; 254
     e04:	80 81       	ld	r24, Z
     e06:	91 81       	ldd	r25, Z+1	; 0x01
     e08:	89 2b       	or	r24, r25
     e0a:	41 f4       	brne	.+16     	; 0xe1c <getPortValues+0x4a>
     e0c:	c5 01       	movw	r24, r10
     e0e:	a6 de       	rcall	.-692    	; 0xb5c <initTxRxMapFromPorts>
     e10:	61 15       	cp	r22, r1
     e12:	71 05       	cpc	r23, r1
     e14:	81 05       	cpc	r24, r1
     e16:	91 05       	cpc	r25, r1
     e18:	09 f0       	breq	.+2      	; 0xe1c <getPortValues+0x4a>
     e1a:	a9 c0       	rjmp	.+338    	; 0xf6e <getPortValues+0x19c>
     e1c:	f5 01       	movw	r30, r10
     e1e:	ec 52       	subi	r30, 0x2C	; 44
     e20:	fe 4f       	sbci	r31, 0xFE	; 254
     e22:	00 81       	ld	r16, Z
     e24:	11 81       	ldd	r17, Z+1	; 0x01
     e26:	80 e4       	ldi	r24, 0x40	; 64
     e28:	cf 53       	subi	r28, 0x3F	; 63
     e2a:	de 4f       	sbci	r29, 0xFE	; 254
     e2c:	88 83       	st	Y, r24
     e2e:	c1 5c       	subi	r28, 0xC1	; 193
     e30:	d1 40       	sbci	r29, 0x01	; 1
     e32:	e6 5c       	subi	r30, 0xC6	; 198
     e34:	fb 4f       	sbci	r31, 0xFB	; 251
     e36:	81 e0       	ldi	r24, 0x01	; 1
     e38:	8c 0d       	add	r24, r12
     e3a:	80 83       	st	Z, r24
     e3c:	ae 01       	movw	r20, r28
     e3e:	4f 5f       	subi	r20, 0xFF	; 255
     e40:	5f 4f       	sbci	r21, 0xFF	; 255
     e42:	be 01       	movw	r22, r28
     e44:	6f 53       	subi	r22, 0x3F	; 63
     e46:	7e 4f       	sbci	r23, 0xFE	; 254
     e48:	c5 01       	movw	r24, r10
     e4a:	0e 94 7a 51 	call	0xa2f4	; 0xa2f4 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime>
     e4e:	61 15       	cp	r22, r1
     e50:	71 05       	cpc	r23, r1
     e52:	81 05       	cpc	r24, r1
     e54:	91 05       	cpc	r25, r1
     e56:	09 f0       	breq	.+2      	; 0xe5a <getPortValues+0x88>
     e58:	8e c0       	rjmp	.+284    	; 0xf76 <getPortValues+0x1a4>
     e5a:	40 e0       	ldi	r20, 0x00	; 0
     e5c:	50 e0       	ldi	r21, 0x00	; 0
     e5e:	20 e0       	ldi	r18, 0x00	; 0
     e60:	30 e0       	ldi	r19, 0x00	; 0
     e62:	73 c0       	rjmp	.+230    	; 0xf4a <getPortValues+0x178>
     e64:	d7 01       	movw	r26, r14
     e66:	12 96       	adiw	r26, 0x02	; 2
     e68:	8c 91       	ld	r24, X
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	48 17       	cp	r20, r24
     e6e:	59 07       	cpc	r21, r25
     e70:	08 f1       	brcs	.+66     	; 0xeb4 <getPortValues+0xe2>
     e72:	69 c0       	rjmp	.+210    	; 0xf46 <getPortValues+0x174>
     e74:	f8 01       	movw	r30, r16
     e76:	a0 81       	ld	r26, Z
     e78:	b1 81       	ldd	r27, Z+1	; 0x01
     e7a:	fc 01       	movw	r30, r24
     e7c:	ee 0f       	add	r30, r30
     e7e:	ff 1f       	adc	r31, r31
     e80:	e8 0f       	add	r30, r24
     e82:	f9 1f       	adc	r31, r25
     e84:	ea 0f       	add	r30, r26
     e86:	fb 1f       	adc	r31, r27
     e88:	a1 81       	ldd	r26, Z+1	; 0x01
     e8a:	f9 01       	movw	r30, r18
     e8c:	ee 0f       	add	r30, r30
     e8e:	ff 1f       	adc	r31, r31
     e90:	ee 0f       	add	r30, r30
     e92:	ff 1f       	adc	r31, r31
     e94:	ee 0f       	add	r30, r30
     e96:	ff 1f       	adc	r31, r31
     e98:	e2 1b       	sub	r30, r18
     e9a:	f3 0b       	sbc	r31, r19
     e9c:	aa 24       	eor	r10, r10
     e9e:	a3 94       	inc	r10
     ea0:	b1 2c       	mov	r11, r1
     ea2:	ac 0e       	add	r10, r28
     ea4:	bd 1e       	adc	r11, r29
     ea6:	ea 0d       	add	r30, r10
     ea8:	fb 1d       	adc	r31, r11
     eaa:	e0 81       	ld	r30, Z
     eac:	ae 17       	cp	r26, r30
     eae:	39 f0       	breq	.+14     	; 0xebe <getPortValues+0xec>
     eb0:	01 96       	adiw	r24, 0x01	; 1
     eb2:	02 c0       	rjmp	.+4      	; 0xeb8 <getPortValues+0xe6>
     eb4:	80 e0       	ldi	r24, 0x00	; 0
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	86 17       	cp	r24, r22
     eba:	97 07       	cpc	r25, r23
     ebc:	d8 f2       	brcs	.-74     	; 0xe74 <getPortValues+0xa2>
     ebe:	86 17       	cp	r24, r22
     ec0:	97 07       	cpc	r25, r23
     ec2:	09 f4       	brne	.+2      	; 0xec6 <getPortValues+0xf4>
     ec4:	40 c0       	rjmp	.+128    	; 0xf46 <getPortValues+0x174>
     ec6:	d7 01       	movw	r26, r14
     ec8:	ad 90       	ld	r10, X+
     eca:	bc 90       	ld	r11, X
     ecc:	ba 01       	movw	r22, r20
     ece:	66 0f       	add	r22, r22
     ed0:	77 1f       	adc	r23, r23
     ed2:	66 0f       	add	r22, r22
     ed4:	77 1f       	adc	r23, r23
     ed6:	64 0f       	add	r22, r20
     ed8:	75 1f       	adc	r23, r21
     eda:	a6 0e       	add	r10, r22
     edc:	b7 1e       	adc	r11, r23
     ede:	d8 01       	movw	r26, r16
     ee0:	ed 91       	ld	r30, X+
     ee2:	fc 91       	ld	r31, X
     ee4:	dc 01       	movw	r26, r24
     ee6:	aa 0f       	add	r26, r26
     ee8:	bb 1f       	adc	r27, r27
     eea:	8a 0f       	add	r24, r26
     eec:	9b 1f       	adc	r25, r27
     eee:	e8 0f       	add	r30, r24
     ef0:	f9 1f       	adc	r31, r25
     ef2:	80 81       	ld	r24, Z
     ef4:	f5 01       	movw	r30, r10
     ef6:	80 83       	st	Z, r24
     ef8:	d7 01       	movw	r26, r14
     efa:	8d 91       	ld	r24, X+
     efc:	9c 91       	ld	r25, X
     efe:	68 0f       	add	r22, r24
     f00:	79 1f       	adc	r23, r25
     f02:	c9 01       	movw	r24, r18
     f04:	88 0f       	add	r24, r24
     f06:	99 1f       	adc	r25, r25
     f08:	88 0f       	add	r24, r24
     f0a:	99 1f       	adc	r25, r25
     f0c:	88 0f       	add	r24, r24
     f0e:	99 1f       	adc	r25, r25
     f10:	82 1b       	sub	r24, r18
     f12:	93 0b       	sbc	r25, r19
     f14:	01 96       	adiw	r24, 0x01	; 1
     f16:	e1 e0       	ldi	r30, 0x01	; 1
     f18:	f0 e0       	ldi	r31, 0x00	; 0
     f1a:	ec 0f       	add	r30, r28
     f1c:	fd 1f       	adc	r31, r29
     f1e:	8e 0f       	add	r24, r30
     f20:	9f 1f       	adc	r25, r31
     f22:	f6 01       	movw	r30, r12
     f24:	ee 0f       	add	r30, r30
     f26:	ff 1f       	adc	r31, r31
     f28:	e8 0f       	add	r30, r24
     f2a:	f9 1f       	adc	r31, r25
     f2c:	80 81       	ld	r24, Z
     f2e:	91 81       	ldd	r25, Z+1	; 0x01
     f30:	09 2e       	mov	r0, r25
     f32:	00 0c       	add	r0, r0
     f34:	aa 0b       	sbc	r26, r26
     f36:	bb 0b       	sbc	r27, r27
     f38:	fb 01       	movw	r30, r22
     f3a:	81 83       	std	Z+1, r24	; 0x01
     f3c:	92 83       	std	Z+2, r25	; 0x02
     f3e:	a3 83       	std	Z+3, r26	; 0x03
     f40:	b4 83       	std	Z+4, r27	; 0x04
     f42:	4f 5f       	subi	r20, 0xFF	; 255
     f44:	5f 4f       	sbci	r21, 0xFF	; 255
     f46:	2f 5f       	subi	r18, 0xFF	; 255
     f48:	3f 4f       	sbci	r19, 0xFF	; 255
     f4a:	cf 53       	subi	r28, 0x3F	; 63
     f4c:	de 4f       	sbci	r29, 0xFE	; 254
     f4e:	68 81       	ld	r22, Y
     f50:	c1 5c       	subi	r28, 0xC1	; 193
     f52:	d1 40       	sbci	r29, 0x01	; 1
     f54:	70 e0       	ldi	r23, 0x00	; 0
     f56:	26 17       	cp	r18, r22
     f58:	37 07       	cpc	r19, r23
     f5a:	08 f4       	brcc	.+2      	; 0xf5e <getPortValues+0x18c>
     f5c:	83 cf       	rjmp	.-250    	; 0xe64 <getPortValues+0x92>
     f5e:	d7 01       	movw	r26, r14
     f60:	13 96       	adiw	r26, 0x03	; 3
     f62:	4c 93       	st	X, r20
     f64:	40 e0       	ldi	r20, 0x00	; 0
     f66:	30 e0       	ldi	r19, 0x00	; 0
     f68:	20 e0       	ldi	r18, 0x00	; 0
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	07 c0       	rjmp	.+14     	; 0xf7c <getPortValues+0x1aa>
     f6e:	46 2f       	mov	r20, r22
     f70:	37 2f       	mov	r19, r23
     f72:	28 2f       	mov	r18, r24
     f74:	03 c0       	rjmp	.+6      	; 0xf7c <getPortValues+0x1aa>
     f76:	46 2f       	mov	r20, r22
     f78:	37 2f       	mov	r19, r23
     f7a:	28 2f       	mov	r18, r24
     f7c:	64 2f       	mov	r22, r20
     f7e:	73 2f       	mov	r23, r19
     f80:	82 2f       	mov	r24, r18
     f82:	cf 53       	subi	r28, 0x3F	; 63
     f84:	de 4f       	sbci	r29, 0xFE	; 254
     f86:	0f b6       	in	r0, 0x3f	; 63
     f88:	f8 94       	cli
     f8a:	de bf       	out	0x3e, r29	; 62
     f8c:	0f be       	out	0x3f, r0	; 63
     f8e:	cd bf       	out	0x3d, r28	; 61
     f90:	df 91       	pop	r29
     f92:	cf 91       	pop	r28
     f94:	1f 91       	pop	r17
     f96:	0f 91       	pop	r16
     f98:	ff 90       	pop	r15
     f9a:	ef 90       	pop	r14
     f9c:	df 90       	pop	r13
     f9e:	cf 90       	pop	r12
     fa0:	bf 90       	pop	r11
     fa2:	af 90       	pop	r10
     fa4:	08 95       	ret

00000fa6 <TMR_SR_paramGet>:
     fa6:	2f 92       	push	r2
     fa8:	3f 92       	push	r3
     faa:	4f 92       	push	r4
     fac:	5f 92       	push	r5
     fae:	6f 92       	push	r6
     fb0:	7f 92       	push	r7
     fb2:	8f 92       	push	r8
     fb4:	9f 92       	push	r9
     fb6:	af 92       	push	r10
     fb8:	bf 92       	push	r11
     fba:	cf 92       	push	r12
     fbc:	df 92       	push	r13
     fbe:	ef 92       	push	r14
     fc0:	ff 92       	push	r15
     fc2:	0f 93       	push	r16
     fc4:	1f 93       	push	r17
     fc6:	cf 93       	push	r28
     fc8:	df 93       	push	r29
     fca:	cd b7       	in	r28, 0x3d	; 61
     fcc:	de b7       	in	r29, 0x3e	; 62
     fce:	c4 5c       	subi	r28, 0xC4	; 196
     fd0:	d1 09       	sbc	r29, r1
     fd2:	0f b6       	in	r0, 0x3f	; 63
     fd4:	f8 94       	cli
     fd6:	de bf       	out	0x3e, r29	; 62
     fd8:	0f be       	out	0x3f, r0	; 63
     fda:	cd bf       	out	0x3d, r28	; 61
     fdc:	0f 2e       	mov	r0, r31
     fde:	f5 e0       	ldi	r31, 0x05	; 5
     fe0:	3f 2e       	mov	r3, r31
     fe2:	f0 2d       	mov	r31, r0
     fe4:	e6 2e       	mov	r14, r22
     fe6:	e6 94       	lsr	r14
     fe8:	e6 94       	lsr	r14
     fea:	e6 94       	lsr	r14
     fec:	e6 94       	lsr	r14
     fee:	e6 94       	lsr	r14
     ff0:	f1 2c       	mov	r15, r1
     ff2:	9c 01       	movw	r18, r24
     ff4:	20 58       	subi	r18, 0x80	; 128
     ff6:	3e 4f       	sbci	r19, 0xFE	; 254
     ff8:	d7 01       	movw	r26, r14
     ffa:	af 57       	subi	r26, 0x7F	; 127
     ffc:	bf 4f       	sbci	r27, 0xFF	; 255
     ffe:	aa 0f       	add	r26, r26
    1000:	bb 1f       	adc	r27, r27
    1002:	aa 0f       	add	r26, r26
    1004:	bb 1f       	adc	r27, r27
    1006:	a2 0f       	add	r26, r18
    1008:	b3 1f       	adc	r27, r19
    100a:	8d 90       	ld	r8, X+
    100c:	9d 90       	ld	r9, X+
    100e:	ad 90       	ld	r10, X+
    1010:	bc 90       	ld	r11, X
    1012:	06 2f       	mov	r16, r22
    1014:	0f 71       	andi	r16, 0x1F	; 31
    1016:	00 2e       	mov	r0, r16
    1018:	04 c0       	rjmp	.+8      	; 0x1022 <__DATA_REGION_LENGTH__+0x22>
    101a:	b6 94       	lsr	r11
    101c:	a7 94       	ror	r10
    101e:	97 94       	ror	r9
    1020:	87 94       	ror	r8
    1022:	0a 94       	dec	r0
    1024:	d2 f7       	brpl	.-12     	; 0x101a <__DATA_REGION_LENGTH__+0x1a>
    1026:	80 fe       	sbrs	r8, 0
    1028:	19 c0       	rjmp	.+50     	; 0x105c <__DATA_REGION_LENGTH__+0x5c>
    102a:	f7 01       	movw	r30, r14
    102c:	eb 57       	subi	r30, 0x7B	; 123
    102e:	ff 4f       	sbci	r31, 0xFF	; 255
    1030:	ee 0f       	add	r30, r30
    1032:	ff 1f       	adc	r31, r31
    1034:	ee 0f       	add	r30, r30
    1036:	ff 1f       	adc	r31, r31
    1038:	e2 0f       	add	r30, r18
    103a:	f3 1f       	adc	r31, r19
    103c:	80 80       	ld	r8, Z
    103e:	91 80       	ldd	r9, Z+1	; 0x01
    1040:	a2 80       	ldd	r10, Z+2	; 0x02
    1042:	b3 80       	ldd	r11, Z+3	; 0x03
    1044:	00 2e       	mov	r0, r16
    1046:	04 c0       	rjmp	.+8      	; 0x1050 <__DATA_REGION_LENGTH__+0x50>
    1048:	b6 94       	lsr	r11
    104a:	a7 94       	ror	r10
    104c:	97 94       	ror	r9
    104e:	87 94       	ror	r8
    1050:	0a 94       	dec	r0
    1052:	d2 f7       	brpl	.-12     	; 0x1048 <__DATA_REGION_LENGTH__+0x48>
    1054:	80 fc       	sbrc	r8, 0
    1056:	02 c0       	rjmp	.+4      	; 0x105c <__DATA_REGION_LENGTH__+0x5c>
    1058:	0c 94 38 10 	jmp	0x2070	; 0x2070 <__stack+0xf71>
    105c:	5a 01       	movw	r10, r20
    105e:	16 2f       	mov	r17, r22
    1060:	6c 01       	movw	r12, r24
    1062:	86 2f       	mov	r24, r22
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	fc 01       	movw	r30, r24
    1068:	31 97       	sbiw	r30, 0x01	; 1
    106a:	e0 37       	cpi	r30, 0x70	; 112
    106c:	f1 05       	cpc	r31, r1
    106e:	08 f0       	brcs	.+2      	; 0x1072 <__DATA_REGION_LENGTH__+0x72>
    1070:	4a c7       	rjmp	.+3732   	; 0x1f06 <__stack+0xe07>
    1072:	ea 5b       	subi	r30, 0xBA	; 186
    1074:	ff 4f       	sbci	r31, 0xFF	; 255
    1076:	0c 94 d3 74 	jmp	0xe9a6	; 0xe9a6 <__tablejump2__>
    107a:	6a e0       	ldi	r22, 0x0A	; 10
    107c:	41 2c       	mov	r4, r1
    107e:	51 2c       	mov	r5, r1
    1080:	32 01       	movw	r6, r4
    1082:	66 c7       	rjmp	.+3788   	; 0x1f50 <__stack+0xe51>
    1084:	f6 01       	movw	r30, r12
    1086:	e0 53       	subi	r30, 0x30	; 48
    1088:	fe 4f       	sbci	r31, 0xFE	; 254
    108a:	80 81       	ld	r24, Z
    108c:	91 81       	ldd	r25, Z+1	; 0x01
    108e:	a2 81       	ldd	r26, Z+2	; 0x02
    1090:	b3 81       	ldd	r27, Z+3	; 0x03
    1092:	fa 01       	movw	r30, r20
    1094:	80 83       	st	Z, r24
    1096:	91 83       	std	Z+1, r25	; 0x01
    1098:	a2 83       	std	Z+2, r26	; 0x02
    109a:	b3 83       	std	Z+3, r27	; 0x03
    109c:	60 e0       	ldi	r22, 0x00	; 0
    109e:	41 2c       	mov	r4, r1
    10a0:	51 2c       	mov	r5, r1
    10a2:	32 01       	movw	r6, r4
    10a4:	55 c7       	rjmp	.+3754   	; 0x1f50 <__stack+0xe51>
    10a6:	da 01       	movw	r26, r20
    10a8:	15 96       	adiw	r26, 0x05	; 5
    10aa:	1c 92       	st	X, r1
    10ac:	1e 92       	st	-X, r1
    10ae:	14 97       	sbiw	r26, 0x04	; 4
    10b0:	20 e0       	ldi	r18, 0x00	; 0
    10b2:	21 c0       	rjmp	.+66     	; 0x10f6 <__DATA_REGION_LENGTH__+0xf6>
    10b4:	d5 01       	movw	r26, r10
    10b6:	ed 91       	ld	r30, X+
    10b8:	fc 91       	ld	r31, X
    10ba:	88 0f       	add	r24, r24
    10bc:	99 1f       	adc	r25, r25
    10be:	88 0f       	add	r24, r24
    10c0:	99 1f       	adc	r25, r25
    10c2:	e8 0f       	add	r30, r24
    10c4:	f9 1f       	adc	r31, r25
    10c6:	d6 01       	movw	r26, r12
    10c8:	a6 53       	subi	r26, 0x36	; 54
    10ca:	ba 4f       	sbci	r27, 0xFA	; 250
    10cc:	4d 91       	ld	r20, X+
    10ce:	5c 91       	ld	r21, X
    10d0:	da 01       	movw	r26, r20
    10d2:	a8 0f       	add	r26, r24
    10d4:	b9 1f       	adc	r27, r25
    10d6:	8d 91       	ld	r24, X+
    10d8:	9d 91       	ld	r25, X+
    10da:	0d 90       	ld	r0, X+
    10dc:	bc 91       	ld	r27, X
    10de:	a0 2d       	mov	r26, r0
    10e0:	80 83       	st	Z, r24
    10e2:	91 83       	std	Z+1, r25	; 0x01
    10e4:	a2 83       	std	Z+2, r26	; 0x02
    10e6:	b3 83       	std	Z+3, r27	; 0x03
    10e8:	f5 01       	movw	r30, r10
    10ea:	84 81       	ldd	r24, Z+4	; 0x04
    10ec:	95 81       	ldd	r25, Z+5	; 0x05
    10ee:	01 96       	adiw	r24, 0x01	; 1
    10f0:	95 83       	std	Z+5, r25	; 0x05
    10f2:	84 83       	std	Z+4, r24	; 0x04
    10f4:	2f 5f       	subi	r18, 0xFF	; 255
    10f6:	82 2f       	mov	r24, r18
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	f6 01       	movw	r30, r12
    10fc:	e2 53       	subi	r30, 0x32	; 50
    10fe:	fa 4f       	sbci	r31, 0xFA	; 250
    1100:	40 81       	ld	r20, Z
    1102:	51 81       	ldd	r21, Z+1	; 0x01
    1104:	84 17       	cp	r24, r20
    1106:	95 07       	cpc	r25, r21
    1108:	08 f0       	brcs	.+2      	; 0x110c <__stack+0xd>
    110a:	0c c7       	rjmp	.+3608   	; 0x1f24 <__stack+0xe25>
    110c:	d5 01       	movw	r26, r10
    110e:	12 96       	adiw	r26, 0x02	; 2
    1110:	4d 91       	ld	r20, X+
    1112:	5c 91       	ld	r21, X
    1114:	13 97       	sbiw	r26, 0x03	; 3
    1116:	84 17       	cp	r24, r20
    1118:	95 07       	cpc	r25, r21
    111a:	60 f2       	brcs	.-104    	; 0x10b4 <__DATA_REGION_LENGTH__+0xb4>
    111c:	60 e0       	ldi	r22, 0x00	; 0
    111e:	41 2c       	mov	r4, r1
    1120:	51 2c       	mov	r5, r1
    1122:	32 01       	movw	r6, r4
    1124:	15 c7       	rjmp	.+3626   	; 0x1f50 <__stack+0xe51>
    1126:	b6 01       	movw	r22, r12
    1128:	6a 5c       	subi	r22, 0xCA	; 202
    112a:	7f 4f       	sbci	r23, 0xFF	; 255
    112c:	fb 01       	movw	r30, r22
    112e:	01 90       	ld	r0, Z+
    1130:	00 20       	and	r0, r0
    1132:	e9 f7       	brne	.-6      	; 0x112e <__stack+0x2f>
    1134:	31 97       	sbiw	r30, 0x01	; 1
    1136:	af 01       	movw	r20, r30
    1138:	46 1b       	sub	r20, r22
    113a:	57 0b       	sbc	r21, r23
    113c:	c5 01       	movw	r24, r10
    113e:	0e 94 ad 6a 	call	0xd55a	; 0xd55a <TMR_stringCopy>
    1142:	60 e0       	ldi	r22, 0x00	; 0
    1144:	41 2c       	mov	r4, r1
    1146:	51 2c       	mov	r5, r1
    1148:	32 01       	movw	r6, r4
    114a:	02 c7       	rjmp	.+3588   	; 0x1f50 <__stack+0xe51>
    114c:	f6 01       	movw	r30, r12
    114e:	e0 52       	subi	r30, 0x20	; 32
    1150:	fe 4f       	sbci	r31, 0xFE	; 254
    1152:	80 81       	ld	r24, Z
    1154:	91 81       	ldd	r25, Z+1	; 0x01
    1156:	a2 81       	ldd	r26, Z+2	; 0x02
    1158:	b3 81       	ldd	r27, Z+3	; 0x03
    115a:	fa 01       	movw	r30, r20
    115c:	80 83       	st	Z, r24
    115e:	91 83       	std	Z+1, r25	; 0x01
    1160:	a2 83       	std	Z+2, r26	; 0x02
    1162:	b3 83       	std	Z+3, r27	; 0x03
    1164:	60 e0       	ldi	r22, 0x00	; 0
    1166:	41 2c       	mov	r4, r1
    1168:	51 2c       	mov	r5, r1
    116a:	32 01       	movw	r6, r4
    116c:	f1 c6       	rjmp	.+3554   	; 0x1f50 <__stack+0xe51>
    116e:	f6 01       	movw	r30, r12
    1170:	e4 52       	subi	r30, 0x24	; 36
    1172:	fe 4f       	sbci	r31, 0xFE	; 254
    1174:	80 81       	ld	r24, Z
    1176:	91 81       	ldd	r25, Z+1	; 0x01
    1178:	a2 81       	ldd	r26, Z+2	; 0x02
    117a:	b3 81       	ldd	r27, Z+3	; 0x03
    117c:	fa 01       	movw	r30, r20
    117e:	80 83       	st	Z, r24
    1180:	91 83       	std	Z+1, r25	; 0x01
    1182:	a2 83       	std	Z+2, r26	; 0x02
    1184:	b3 83       	std	Z+3, r27	; 0x03
    1186:	60 e0       	ldi	r22, 0x00	; 0
    1188:	41 2c       	mov	r4, r1
    118a:	51 2c       	mov	r5, r1
    118c:	32 01       	movw	r6, r4
    118e:	e0 c6       	rjmp	.+3520   	; 0x1f50 <__stack+0xe51>
    1190:	f6 01       	movw	r30, r12
    1192:	ec 51       	subi	r30, 0x1C	; 28
    1194:	fe 4f       	sbci	r31, 0xFE	; 254
    1196:	80 81       	ld	r24, Z
    1198:	81 11       	cpse	r24, r1
    119a:	0c c0       	rjmp	.+24     	; 0x11b4 <__stack+0xb5>
    119c:	d6 01       	movw	r26, r12
    119e:	15 96       	adiw	r26, 0x05	; 5
    11a0:	8c 91       	ld	r24, X
    11a2:	88 23       	and	r24, r24
    11a4:	59 f0       	breq	.+22     	; 0x11bc <__stack+0xbd>
    11a6:	bf 01       	movw	r22, r30
    11a8:	c6 01       	movw	r24, r12
    11aa:	0e 94 38 56 	call	0xac70	; 0xac70 <TMR_SR_cmdGetRegion>
    11ae:	2b 01       	movw	r4, r22
    11b0:	3c 01       	movw	r6, r24
    11b2:	07 c0       	rjmp	.+14     	; 0x11c2 <__stack+0xc3>
    11b4:	41 2c       	mov	r4, r1
    11b6:	51 2c       	mov	r5, r1
    11b8:	32 01       	movw	r6, r4
    11ba:	03 c0       	rjmp	.+6      	; 0x11c2 <__stack+0xc3>
    11bc:	41 2c       	mov	r4, r1
    11be:	51 2c       	mov	r5, r1
    11c0:	32 01       	movw	r6, r4
    11c2:	f6 01       	movw	r30, r12
    11c4:	ec 51       	subi	r30, 0x1C	; 28
    11c6:	fe 4f       	sbci	r31, 0xFE	; 254
    11c8:	80 81       	ld	r24, Z
    11ca:	f5 01       	movw	r30, r10
    11cc:	80 83       	st	Z, r24
    11ce:	60 e0       	ldi	r22, 0x00	; 0
    11d0:	bf c6       	rjmp	.+3454   	; 0x1f50 <__stack+0xe51>
    11d2:	19 82       	std	Y+1, r1	; 0x01
    11d4:	1a 82       	std	Y+2, r1	; 0x02
    11d6:	1b 82       	std	Y+3, r1	; 0x03
    11d8:	1c 82       	std	Y+4, r1	; 0x04
    11da:	ae 01       	movw	r20, r28
    11dc:	4f 5f       	subi	r20, 0xFF	; 255
    11de:	5f 4f       	sbci	r21, 0xFF	; 255
    11e0:	6d e0       	ldi	r22, 0x0D	; 13
    11e2:	c6 01       	movw	r24, r12
    11e4:	0e 94 41 57 	call	0xae82	; 0xae82 <TMR_SR_cmdGetReaderConfiguration>
    11e8:	2b 01       	movw	r4, r22
    11ea:	3c 01       	movw	r6, r24
    11ec:	67 2b       	or	r22, r23
    11ee:	68 2b       	or	r22, r24
    11f0:	69 2b       	or	r22, r25
    11f2:	81 f4       	brne	.+32     	; 0x1214 <__stack+0x115>
    11f4:	89 81       	ldd	r24, Y+1	; 0x01
    11f6:	9a 81       	ldd	r25, Y+2	; 0x02
    11f8:	ab 81       	ldd	r26, Y+3	; 0x03
    11fa:	bc 81       	ldd	r27, Y+4	; 0x04
    11fc:	00 97       	sbiw	r24, 0x00	; 0
    11fe:	a1 05       	cpc	r26, r1
    1200:	b1 05       	cpc	r27, r1
    1202:	19 f4       	brne	.+6      	; 0x120a <__stack+0x10b>
    1204:	8f ef       	ldi	r24, 0xFF	; 255
    1206:	9f ef       	ldi	r25, 0xFF	; 255
    1208:	dc 01       	movw	r26, r24
    120a:	f5 01       	movw	r30, r10
    120c:	80 83       	st	Z, r24
    120e:	91 83       	std	Z+1, r25	; 0x01
    1210:	a2 83       	std	Z+2, r26	; 0x02
    1212:	b3 83       	std	Z+3, r27	; 0x03
    1214:	60 e0       	ldi	r22, 0x00	; 0
    1216:	9c c6       	rjmp	.+3384   	; 0x1f50 <__stack+0xe51>
    1218:	46 01       	movw	r8, r12
    121a:	f9 e3       	ldi	r31, 0x39	; 57
    121c:	8f 1a       	sub	r8, r31
    121e:	fa ef       	ldi	r31, 0xFA	; 250
    1220:	9f 0a       	sbc	r9, r31
    1222:	a4 01       	movw	r20, r8
    1224:	6c e0       	ldi	r22, 0x0C	; 12
    1226:	c6 01       	movw	r24, r12
    1228:	0e 94 41 57 	call	0xae82	; 0xae82 <TMR_SR_cmdGetReaderConfiguration>
    122c:	2b 01       	movw	r4, r22
    122e:	3c 01       	movw	r6, r24
    1230:	d4 01       	movw	r26, r8
    1232:	8c 91       	ld	r24, X
    1234:	f5 01       	movw	r30, r10
    1236:	80 83       	st	Z, r24
    1238:	60 e0       	ldi	r22, 0x00	; 0
    123a:	8a c6       	rjmp	.+3348   	; 0x1f50 <__stack+0xe51>
    123c:	be 01       	movw	r22, r28
    123e:	6f 5f       	subi	r22, 0xFF	; 255
    1240:	7f 4f       	sbci	r23, 0xFF	; 255
    1242:	c6 01       	movw	r24, r12
    1244:	0e 94 2c 53 	call	0xa658	; 0xa658 <TMR_SR_cmdGetReadTxPowerWithLimits>
    1248:	2b 01       	movw	r4, r22
    124a:	3c 01       	movw	r6, r24
    124c:	67 2b       	or	r22, r23
    124e:	68 2b       	or	r22, r24
    1250:	69 2b       	or	r22, r25
    1252:	c9 f4       	brne	.+50     	; 0x1286 <__stack+0x187>
    1254:	13 32       	cpi	r17, 0x23	; 35
    1256:	19 f0       	breq	.+6      	; 0x125e <__stack+0x15f>
    1258:	14 32       	cpi	r17, 0x24	; 36
    125a:	39 f0       	breq	.+14     	; 0x126a <__stack+0x16b>
    125c:	0c c0       	rjmp	.+24     	; 0x1276 <__stack+0x177>
    125e:	8b 81       	ldd	r24, Y+3	; 0x03
    1260:	9c 81       	ldd	r25, Y+4	; 0x04
    1262:	d5 01       	movw	r26, r10
    1264:	8d 93       	st	X+, r24
    1266:	9c 93       	st	X, r25
    1268:	0e c0       	rjmp	.+28     	; 0x1286 <__stack+0x187>
    126a:	8d 81       	ldd	r24, Y+5	; 0x05
    126c:	9e 81       	ldd	r25, Y+6	; 0x06
    126e:	f5 01       	movw	r30, r10
    1270:	91 83       	std	Z+1, r25	; 0x01
    1272:	80 83       	st	Z, r24
    1274:	08 c0       	rjmp	.+16     	; 0x1286 <__stack+0x187>
    1276:	0f 2e       	mov	r0, r31
    1278:	f9 e0       	ldi	r31, 0x09	; 9
    127a:	4f 2e       	mov	r4, r31
    127c:	51 2c       	mov	r5, r1
    127e:	61 2c       	mov	r6, r1
    1280:	f3 e0       	ldi	r31, 0x03	; 3
    1282:	7f 2e       	mov	r7, r31
    1284:	f0 2d       	mov	r31, r0
    1286:	60 e0       	ldi	r22, 0x00	; 0
    1288:	63 c6       	rjmp	.+3270   	; 0x1f50 <__stack+0xe51>
    128a:	ba 01       	movw	r22, r20
    128c:	c6 01       	movw	r24, r12
    128e:	0e 94 29 53 	call	0xa652	; 0xa652 <TMR_SR_cmdGetReadTxPower>
    1292:	2b 01       	movw	r4, r22
    1294:	3c 01       	movw	r6, r24
    1296:	60 e0       	ldi	r22, 0x00	; 0
    1298:	5b c6       	rjmp	.+3254   	; 0x1f50 <__stack+0xe51>
    129a:	ba 01       	movw	r22, r20
    129c:	c6 01       	movw	r24, r12
    129e:	0e 94 81 53 	call	0xa702	; 0xa702 <TMR_SR_cmdGetWriteTxPower>
    12a2:	2b 01       	movw	r4, r22
    12a4:	3c 01       	movw	r6, r24
    12a6:	60 e0       	ldi	r22, 0x00	; 0
    12a8:	53 c6       	rjmp	.+3238   	; 0x1f50 <__stack+0xe51>
    12aa:	66 e0       	ldi	r22, 0x06	; 6
    12ac:	41 2c       	mov	r4, r1
    12ae:	51 2c       	mov	r5, r1
    12b0:	32 01       	movw	r6, r4
    12b2:	4e c6       	rjmp	.+3228   	; 0x1f50 <__stack+0xe51>
    12b4:	60 e0       	ldi	r22, 0x00	; 0
    12b6:	41 2c       	mov	r4, r1
    12b8:	51 2c       	mov	r5, r1
    12ba:	32 01       	movw	r6, r4
    12bc:	49 c6       	rjmp	.+3218   	; 0x1f50 <__stack+0xe51>
    12be:	68 e0       	ldi	r22, 0x08	; 8
    12c0:	41 2c       	mov	r4, r1
    12c2:	51 2c       	mov	r5, r1
    12c4:	32 01       	movw	r6, r4
    12c6:	44 c6       	rjmp	.+3208   	; 0x1f50 <__stack+0xe51>
    12c8:	6b e0       	ldi	r22, 0x0B	; 11
    12ca:	c6 01       	movw	r24, r12
    12cc:	0e 94 41 57 	call	0xae82	; 0xae82 <TMR_SR_cmdGetReaderConfiguration>
    12d0:	2b 01       	movw	r4, r22
    12d2:	3c 01       	movw	r6, r24
    12d4:	60 e0       	ldi	r22, 0x00	; 0
    12d6:	3c c6       	rjmp	.+3192   	; 0x1f50 <__stack+0xe51>
    12d8:	62 e1       	ldi	r22, 0x12	; 18
    12da:	41 2c       	mov	r4, r1
    12dc:	51 2c       	mov	r5, r1
    12de:	32 01       	movw	r6, r4
    12e0:	37 c6       	rjmp	.+3182   	; 0x1f50 <__stack+0xe51>
    12e2:	63 e1       	ldi	r22, 0x13	; 19
    12e4:	41 2c       	mov	r4, r1
    12e6:	51 2c       	mov	r5, r1
    12e8:	32 01       	movw	r6, r4
    12ea:	32 c6       	rjmp	.+3172   	; 0x1f50 <__stack+0xe51>
    12ec:	f6 01       	movw	r30, r12
    12ee:	e8 5e       	subi	r30, 0xE8	; 232
    12f0:	f9 4f       	sbci	r31, 0xF9	; 249
    12f2:	90 81       	ld	r25, Z
    12f4:	81 e0       	ldi	r24, 0x01	; 1
    12f6:	93 ff       	sbrs	r25, 3
    12f8:	80 e0       	ldi	r24, 0x00	; 0
    12fa:	d5 01       	movw	r26, r10
    12fc:	8c 93       	st	X, r24
    12fe:	60 e0       	ldi	r22, 0x00	; 0
    1300:	41 2c       	mov	r4, r1
    1302:	51 2c       	mov	r5, r1
    1304:	32 01       	movw	r6, r4
    1306:	24 c6       	rjmp	.+3144   	; 0x1f50 <__stack+0xe51>
    1308:	f6 01       	movw	r30, r12
    130a:	e8 5e       	subi	r30, 0xE8	; 232
    130c:	f9 4f       	sbci	r31, 0xF9	; 249
    130e:	90 81       	ld	r25, Z
    1310:	81 e0       	ldi	r24, 0x01	; 1
    1312:	91 ff       	sbrs	r25, 1
    1314:	80 e0       	ldi	r24, 0x00	; 0
    1316:	f5 01       	movw	r30, r10
    1318:	80 83       	st	Z, r24
    131a:	60 e0       	ldi	r22, 0x00	; 0
    131c:	41 2c       	mov	r4, r1
    131e:	51 2c       	mov	r5, r1
    1320:	32 01       	movw	r6, r4
    1322:	16 c6       	rjmp	.+3116   	; 0x1f50 <__stack+0xe51>
    1324:	f6 01       	movw	r30, r12
    1326:	e8 5e       	subi	r30, 0xE8	; 232
    1328:	f9 4f       	sbci	r31, 0xF9	; 249
    132a:	90 81       	ld	r25, Z
    132c:	81 e0       	ldi	r24, 0x01	; 1
    132e:	92 ff       	sbrs	r25, 2
    1330:	80 e0       	ldi	r24, 0x00	; 0
    1332:	d5 01       	movw	r26, r10
    1334:	8c 93       	st	X, r24
    1336:	60 e0       	ldi	r22, 0x00	; 0
    1338:	41 2c       	mov	r4, r1
    133a:	51 2c       	mov	r5, r1
    133c:	32 01       	movw	r6, r4
    133e:	08 c6       	rjmp	.+3088   	; 0x1f50 <__stack+0xe51>
    1340:	a6 01       	movw	r20, r12
    1342:	4f 5f       	subi	r20, 0xFF	; 255
    1344:	59 4f       	sbci	r21, 0xF9	; 249
    1346:	63 e0       	ldi	r22, 0x03	; 3
    1348:	c6 01       	movw	r24, r12
    134a:	0e 94 41 57 	call	0xae82	; 0xae82 <TMR_SR_cmdGetReaderConfiguration>
    134e:	2b 01       	movw	r4, r22
    1350:	3c 01       	movw	r6, r24
    1352:	67 2b       	or	r22, r23
    1354:	68 2b       	or	r22, r24
    1356:	69 2b       	or	r22, r25
    1358:	09 f0       	breq	.+2      	; 0x135c <__stack+0x25d>
    135a:	e9 c5       	rjmp	.+3026   	; 0x1f2e <__stack+0xe2f>
    135c:	f5 01       	movw	r30, r10
    135e:	15 82       	std	Z+5, r1	; 0x05
    1360:	14 82       	std	Z+4, r1	; 0x04
    1362:	f6 01       	movw	r30, r12
    1364:	ef 5f       	subi	r30, 0xFF	; 255
    1366:	f9 4f       	sbci	r31, 0xF9	; 249
    1368:	80 81       	ld	r24, Z
    136a:	81 11       	cpse	r24, r1
    136c:	10 c0       	rjmp	.+32     	; 0x138e <__stack+0x28f>
    136e:	81 e0       	ldi	r24, 0x01	; 1
    1370:	90 e0       	ldi	r25, 0x00	; 0
    1372:	d5 01       	movw	r26, r10
    1374:	15 96       	adiw	r26, 0x05	; 5
    1376:	9c 93       	st	X, r25
    1378:	8e 93       	st	-X, r24
    137a:	14 97       	sbiw	r26, 0x04	; 4
    137c:	12 96       	adiw	r26, 0x02	; 2
    137e:	8d 91       	ld	r24, X+
    1380:	9c 91       	ld	r25, X
    1382:	13 97       	sbiw	r26, 0x03	; 3
    1384:	89 2b       	or	r24, r25
    1386:	19 f0       	breq	.+6      	; 0x138e <__stack+0x28f>
    1388:	ed 91       	ld	r30, X+
    138a:	fc 91       	ld	r31, X
    138c:	10 82       	st	Z, r1
    138e:	20 e0       	ldi	r18, 0x00	; 0
    1390:	23 c0       	rjmp	.+70     	; 0x13d8 <__stack+0x2d9>
    1392:	f6 01       	movw	r30, r12
    1394:	ef 5f       	subi	r30, 0xFF	; 255
    1396:	f9 4f       	sbci	r31, 0xF9	; 249
    1398:	80 81       	ld	r24, Z
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	02 2e       	mov	r0, r18
    139e:	02 c0       	rjmp	.+4      	; 0x13a4 <__stack+0x2a5>
    13a0:	95 95       	asr	r25
    13a2:	87 95       	ror	r24
    13a4:	0a 94       	dec	r0
    13a6:	e2 f7       	brpl	.-8      	; 0x13a0 <__stack+0x2a1>
    13a8:	80 ff       	sbrs	r24, 0
    13aa:	15 c0       	rjmp	.+42     	; 0x13d6 <__stack+0x2d7>
    13ac:	f5 01       	movw	r30, r10
    13ae:	84 81       	ldd	r24, Z+4	; 0x04
    13b0:	95 81       	ldd	r25, Z+5	; 0x05
    13b2:	ac 01       	movw	r20, r24
    13b4:	4f 5f       	subi	r20, 0xFF	; 255
    13b6:	5f 4f       	sbci	r21, 0xFF	; 255
    13b8:	55 83       	std	Z+5, r21	; 0x05
    13ba:	44 83       	std	Z+4, r20	; 0x04
    13bc:	62 81       	ldd	r22, Z+2	; 0x02
    13be:	73 81       	ldd	r23, Z+3	; 0x03
    13c0:	64 17       	cp	r22, r20
    13c2:	75 07       	cpc	r23, r21
    13c4:	40 f0       	brcs	.+16     	; 0x13d6 <__stack+0x2d7>
    13c6:	40 81       	ld	r20, Z
    13c8:	51 81       	ldd	r21, Z+1	; 0x01
    13ca:	fa 01       	movw	r30, r20
    13cc:	e8 0f       	add	r30, r24
    13ce:	f9 1f       	adc	r31, r25
    13d0:	31 e0       	ldi	r19, 0x01	; 1
    13d2:	32 0f       	add	r19, r18
    13d4:	30 83       	st	Z, r19
    13d6:	2f 5f       	subi	r18, 0xFF	; 255
    13d8:	24 30       	cpi	r18, 0x04	; 4
    13da:	d8 f2       	brcs	.-74     	; 0x1392 <__stack+0x293>
    13dc:	60 e0       	ldi	r22, 0x00	; 0
    13de:	b8 c5       	rjmp	.+2928   	; 0x1f50 <__stack+0xe51>
    13e0:	ae 01       	movw	r20, r28
    13e2:	4f 5f       	subi	r20, 0xFF	; 255
    13e4:	5f 4f       	sbci	r21, 0xFF	; 255
    13e6:	6e e1       	ldi	r22, 0x1E	; 30
    13e8:	c6 01       	movw	r24, r12
    13ea:	0e 94 41 57 	call	0xae82	; 0xae82 <TMR_SR_cmdGetReaderConfiguration>
    13ee:	2b 01       	movw	r4, r22
    13f0:	3c 01       	movw	r6, r24
    13f2:	67 2b       	or	r22, r23
    13f4:	68 2b       	or	r22, r24
    13f6:	69 2b       	or	r22, r25
    13f8:	49 f5       	brne	.+82     	; 0x144c <__stack+0x34d>
    13fa:	d5 01       	movw	r26, r10
    13fc:	15 96       	adiw	r26, 0x05	; 5
    13fe:	1c 92       	st	X, r1
    1400:	1e 92       	st	-X, r1
    1402:	14 97       	sbiw	r26, 0x04	; 4
    1404:	20 e0       	ldi	r18, 0x00	; 0
    1406:	20 c0       	rjmp	.+64     	; 0x1448 <__stack+0x349>
    1408:	89 81       	ldd	r24, Y+1	; 0x01
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	02 2e       	mov	r0, r18
    140e:	02 c0       	rjmp	.+4      	; 0x1414 <__stack+0x315>
    1410:	95 95       	asr	r25
    1412:	87 95       	ror	r24
    1414:	0a 94       	dec	r0
    1416:	e2 f7       	brpl	.-8      	; 0x1410 <__stack+0x311>
    1418:	80 ff       	sbrs	r24, 0
    141a:	15 c0       	rjmp	.+42     	; 0x1446 <__stack+0x347>
    141c:	f5 01       	movw	r30, r10
    141e:	84 81       	ldd	r24, Z+4	; 0x04
    1420:	95 81       	ldd	r25, Z+5	; 0x05
    1422:	ac 01       	movw	r20, r24
    1424:	4f 5f       	subi	r20, 0xFF	; 255
    1426:	5f 4f       	sbci	r21, 0xFF	; 255
    1428:	55 83       	std	Z+5, r21	; 0x05
    142a:	44 83       	std	Z+4, r20	; 0x04
    142c:	62 81       	ldd	r22, Z+2	; 0x02
    142e:	73 81       	ldd	r23, Z+3	; 0x03
    1430:	64 17       	cp	r22, r20
    1432:	75 07       	cpc	r23, r21
    1434:	40 f0       	brcs	.+16     	; 0x1446 <__stack+0x347>
    1436:	40 81       	ld	r20, Z
    1438:	51 81       	ldd	r21, Z+1	; 0x01
    143a:	fa 01       	movw	r30, r20
    143c:	e8 0f       	add	r30, r24
    143e:	f9 1f       	adc	r31, r25
    1440:	31 e0       	ldi	r19, 0x01	; 1
    1442:	32 0f       	add	r19, r18
    1444:	30 83       	st	Z, r19
    1446:	2f 5f       	subi	r18, 0xFF	; 255
    1448:	24 30       	cpi	r18, 0x04	; 4
    144a:	f0 f2       	brcs	.-68     	; 0x1408 <__stack+0x309>
    144c:	60 e0       	ldi	r22, 0x00	; 0
    144e:	80 c5       	rjmp	.+2816   	; 0x1f50 <__stack+0xe51>
    1450:	42 e0       	ldi	r20, 0x02	; 2
    1452:	50 e0       	ldi	r21, 0x00	; 0
    1454:	b5 01       	movw	r22, r10
    1456:	c6 01       	movw	r24, r12
    1458:	bc dc       	rcall	.-1672   	; 0xdd2 <getPortValues>
    145a:	2b 01       	movw	r4, r22
    145c:	3c 01       	movw	r6, r24
    145e:	60 e0       	ldi	r22, 0x00	; 0
    1460:	77 c5       	rjmp	.+2798   	; 0x1f50 <__stack+0xe51>
    1462:	40 e0       	ldi	r20, 0x00	; 0
    1464:	50 e0       	ldi	r21, 0x00	; 0
    1466:	b5 01       	movw	r22, r10
    1468:	c6 01       	movw	r24, r12
    146a:	b3 dc       	rcall	.-1690   	; 0xdd2 <getPortValues>
    146c:	2b 01       	movw	r4, r22
    146e:	3c 01       	movw	r6, r24
    1470:	60 e0       	ldi	r22, 0x00	; 0
    1472:	6e c5       	rjmp	.+2780   	; 0x1f50 <__stack+0xe51>
    1474:	41 e0       	ldi	r20, 0x01	; 1
    1476:	50 e0       	ldi	r21, 0x00	; 0
    1478:	b5 01       	movw	r22, r10
    147a:	c6 01       	movw	r24, r12
    147c:	aa dc       	rcall	.-1708   	; 0xdd2 <getPortValues>
    147e:	2b 01       	movw	r4, r22
    1480:	3c 01       	movw	r6, r24
    1482:	60 e0       	ldi	r22, 0x00	; 0
    1484:	65 c5       	rjmp	.+2762   	; 0x1f50 <__stack+0xe51>
    1486:	ba 01       	movw	r22, r20
    1488:	c6 01       	movw	r24, r12
    148a:	0e 94 58 52 	call	0xa4b0	; 0xa4b0 <TMR_SR_cmdGetAntennaReturnLoss>
    148e:	2b 01       	movw	r4, r22
    1490:	3c 01       	movw	r6, r24
    1492:	60 e0       	ldi	r22, 0x00	; 0
    1494:	5d c5       	rjmp	.+2746   	; 0x1f50 <__stack+0xe51>
    1496:	da 01       	movw	r26, r20
    1498:	15 96       	adiw	r26, 0x05	; 5
    149a:	1c 92       	st	X, r1
    149c:	1e 92       	st	-X, r1
    149e:	14 97       	sbiw	r26, 0x04	; 4
    14a0:	80 e1       	ldi	r24, 0x10	; 16
    14a2:	cf 57       	subi	r28, 0x7F	; 127
    14a4:	df 4f       	sbci	r29, 0xFF	; 255
    14a6:	88 83       	st	Y, r24
    14a8:	c1 58       	subi	r28, 0x81	; 129
    14aa:	d0 40       	sbci	r29, 0x00	; 0
    14ac:	ae 01       	movw	r20, r28
    14ae:	4f 5f       	subi	r20, 0xFF	; 255
    14b0:	5f 4f       	sbci	r21, 0xFF	; 255
    14b2:	be 01       	movw	r22, r28
    14b4:	6f 57       	subi	r22, 0x7F	; 127
    14b6:	7f 4f       	sbci	r23, 0xFF	; 255
    14b8:	c6 01       	movw	r24, r12
    14ba:	0e 94 90 54 	call	0xa920	; 0xa920 <TMR_SR_cmdGetGPIO>
    14be:	2b 01       	movw	r4, r22
    14c0:	3c 01       	movw	r6, r24
    14c2:	67 2b       	or	r22, r23
    14c4:	68 2b       	or	r22, r24
    14c6:	69 2b       	or	r22, r25
    14c8:	09 f0       	breq	.+2      	; 0x14cc <__stack+0x3cd>
    14ca:	84 c0       	rjmp	.+264    	; 0x15d4 <__stack+0x4d5>
    14cc:	81 e0       	ldi	r24, 0x01	; 1
    14ce:	10 31       	cpi	r17, 0x10	; 16
    14d0:	09 f0       	breq	.+2      	; 0x14d4 <__stack+0x3d5>
    14d2:	80 e0       	ldi	r24, 0x00	; 0
    14d4:	e8 2f       	mov	r30, r24
    14d6:	f0 e0       	ldi	r31, 0x00	; 0
    14d8:	cd 53       	subi	r28, 0x3D	; 61
    14da:	df 4f       	sbci	r29, 0xFF	; 255
    14dc:	f9 83       	std	Y+1, r31	; 0x01
    14de:	e8 83       	st	Y, r30
    14e0:	c3 5c       	subi	r28, 0xC3	; 195
    14e2:	d0 40       	sbci	r29, 0x00	; 0
    14e4:	f6 01       	movw	r30, r12
    14e6:	ed 57       	subi	r30, 0x7D	; 125
    14e8:	fc 4f       	sbci	r31, 0xFC	; 252
    14ea:	10 82       	st	Z, r1
    14ec:	88 24       	eor	r8, r8
    14ee:	83 94       	inc	r8
    14f0:	91 2c       	mov	r9, r1
    14f2:	26 c0       	rjmp	.+76     	; 0x1540 <__stack+0x441>
    14f4:	ae 01       	movw	r20, r28
    14f6:	4e 53       	subi	r20, 0x3E	; 62
    14f8:	5f 4f       	sbci	r21, 0xFF	; 255
    14fa:	68 2d       	mov	r22, r8
    14fc:	c6 01       	movw	r24, r12
    14fe:	0e 94 22 55 	call	0xaa44	; 0xaa44 <TMR_SR_cmdGetGPIODirection>
    1502:	2b 01       	movw	r4, r22
    1504:	3c 01       	movw	r6, r24
    1506:	67 2b       	or	r22, r23
    1508:	68 2b       	or	r22, r24
    150a:	69 2b       	or	r22, r25
    150c:	09 f0       	breq	.+2      	; 0x1510 <__stack+0x411>
    150e:	62 c0       	rjmp	.+196    	; 0x15d4 <__stack+0x4d5>
    1510:	ce 53       	subi	r28, 0x3E	; 62
    1512:	df 4f       	sbci	r29, 0xFF	; 255
    1514:	88 81       	ld	r24, Y
    1516:	c2 5c       	subi	r28, 0xC2	; 194
    1518:	d0 40       	sbci	r29, 0x00	; 0
    151a:	88 23       	and	r24, r24
    151c:	71 f0       	breq	.+28     	; 0x153a <__stack+0x43b>
    151e:	81 e0       	ldi	r24, 0x01	; 1
    1520:	90 e0       	ldi	r25, 0x00	; 0
    1522:	08 2c       	mov	r0, r8
    1524:	02 c0       	rjmp	.+4      	; 0x152a <__stack+0x42b>
    1526:	88 0f       	add	r24, r24
    1528:	99 1f       	adc	r25, r25
    152a:	0a 94       	dec	r0
    152c:	e2 f7       	brpl	.-8      	; 0x1526 <__stack+0x427>
    152e:	f6 01       	movw	r30, r12
    1530:	ed 57       	subi	r30, 0x7D	; 125
    1532:	fc 4f       	sbci	r31, 0xFC	; 252
    1534:	90 81       	ld	r25, Z
    1536:	89 2b       	or	r24, r25
    1538:	80 83       	st	Z, r24
    153a:	ff ef       	ldi	r31, 0xFF	; 255
    153c:	8f 1a       	sub	r8, r31
    153e:	9f 0a       	sbc	r9, r31
    1540:	cf 57       	subi	r28, 0x7F	; 127
    1542:	df 4f       	sbci	r29, 0xFF	; 255
    1544:	88 81       	ld	r24, Y
    1546:	c1 58       	subi	r28, 0x81	; 129
    1548:	d0 40       	sbci	r29, 0x00	; 0
    154a:	90 e0       	ldi	r25, 0x00	; 0
    154c:	88 15       	cp	r24, r8
    154e:	99 05       	cpc	r25, r9
    1550:	8c f6       	brge	.-94     	; 0x14f4 <__stack+0x3f5>
    1552:	21 e0       	ldi	r18, 0x01	; 1
    1554:	30 e0       	ldi	r19, 0x00	; 0
    1556:	33 c0       	rjmp	.+102    	; 0x15be <__stack+0x4bf>
    1558:	f6 01       	movw	r30, r12
    155a:	ed 57       	subi	r30, 0x7D	; 125
    155c:	fc 4f       	sbci	r31, 0xFC	; 252
    155e:	80 81       	ld	r24, Z
    1560:	08 2e       	mov	r0, r24
    1562:	00 0c       	add	r0, r0
    1564:	99 0b       	sbc	r25, r25
    1566:	02 2e       	mov	r0, r18
    1568:	02 c0       	rjmp	.+4      	; 0x156e <__stack+0x46f>
    156a:	95 95       	asr	r25
    156c:	87 95       	ror	r24
    156e:	0a 94       	dec	r0
    1570:	e2 f7       	brpl	.-8      	; 0x156a <__stack+0x46b>
    1572:	81 70       	andi	r24, 0x01	; 1
    1574:	99 27       	eor	r25, r25
    1576:	cd 53       	subi	r28, 0x3D	; 61
    1578:	df 4f       	sbci	r29, 0xFF	; 255
    157a:	48 81       	ld	r20, Y
    157c:	59 81       	ldd	r21, Y+1	; 0x01
    157e:	c3 5c       	subi	r28, 0xC3	; 195
    1580:	d0 40       	sbci	r29, 0x00	; 0
    1582:	48 17       	cp	r20, r24
    1584:	59 07       	cpc	r21, r25
    1586:	c9 f4       	brne	.+50     	; 0x15ba <__stack+0x4bb>
    1588:	d5 01       	movw	r26, r10
    158a:	14 96       	adiw	r26, 0x04	; 4
    158c:	8d 91       	ld	r24, X+
    158e:	9c 91       	ld	r25, X
    1590:	15 97       	sbiw	r26, 0x05	; 5
    1592:	ac 01       	movw	r20, r24
    1594:	4f 5f       	subi	r20, 0xFF	; 255
    1596:	5f 4f       	sbci	r21, 0xFF	; 255
    1598:	15 96       	adiw	r26, 0x05	; 5
    159a:	5c 93       	st	X, r21
    159c:	4e 93       	st	-X, r20
    159e:	14 97       	sbiw	r26, 0x04	; 4
    15a0:	12 96       	adiw	r26, 0x02	; 2
    15a2:	6d 91       	ld	r22, X+
    15a4:	7c 91       	ld	r23, X
    15a6:	13 97       	sbiw	r26, 0x03	; 3
    15a8:	64 17       	cp	r22, r20
    15aa:	75 07       	cpc	r23, r21
    15ac:	30 f0       	brcs	.+12     	; 0x15ba <__stack+0x4bb>
    15ae:	4d 91       	ld	r20, X+
    15b0:	5c 91       	ld	r21, X
    15b2:	fa 01       	movw	r30, r20
    15b4:	e8 0f       	add	r30, r24
    15b6:	f9 1f       	adc	r31, r25
    15b8:	20 83       	st	Z, r18
    15ba:	2f 5f       	subi	r18, 0xFF	; 255
    15bc:	3f 4f       	sbci	r19, 0xFF	; 255
    15be:	cf 57       	subi	r28, 0x7F	; 127
    15c0:	df 4f       	sbci	r29, 0xFF	; 255
    15c2:	88 81       	ld	r24, Y
    15c4:	c1 58       	subi	r28, 0x81	; 129
    15c6:	d0 40       	sbci	r29, 0x00	; 0
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	82 17       	cp	r24, r18
    15cc:	93 07       	cpc	r25, r19
    15ce:	24 f6       	brge	.-120    	; 0x1558 <__stack+0x459>
    15d0:	60 e0       	ldi	r22, 0x00	; 0
    15d2:	be c4       	rjmp	.+2428   	; 0x1f50 <__stack+0xe51>
    15d4:	64 2d       	mov	r22, r4
    15d6:	75 2d       	mov	r23, r5
    15d8:	86 2d       	mov	r24, r6
    15da:	97 2d       	mov	r25, r7
    15dc:	5e c5       	rjmp	.+2748   	; 0x209a <__stack+0xf9b>
    15de:	f6 01       	movw	r30, r12
    15e0:	ec 52       	subi	r30, 0x2C	; 44
    15e2:	fe 4f       	sbci	r31, 0xFE	; 254
    15e4:	80 81       	ld	r24, Z
    15e6:	91 81       	ldd	r25, Z+1	; 0x01
    15e8:	89 2b       	or	r24, r25
    15ea:	51 f4       	brne	.+20     	; 0x1600 <__stack+0x501>
    15ec:	c6 01       	movw	r24, r12
    15ee:	b6 da       	rcall	.-2708   	; 0xb5c <initTxRxMapFromPorts>
    15f0:	2b 01       	movw	r4, r22
    15f2:	3c 01       	movw	r6, r24
    15f4:	61 15       	cp	r22, r1
    15f6:	71 05       	cpc	r23, r1
    15f8:	81 05       	cpc	r24, r1
    15fa:	91 05       	cpc	r25, r1
    15fc:	09 f0       	breq	.+2      	; 0x1600 <__stack+0x501>
    15fe:	3d c5       	rjmp	.+2682   	; 0x207a <__stack+0xf7b>
    1600:	f5 01       	movw	r30, r10
    1602:	15 82       	std	Z+5, r1	; 0x05
    1604:	14 82       	std	Z+4, r1	; 0x04
    1606:	60 e0       	ldi	r22, 0x00	; 0
    1608:	2b c0       	rjmp	.+86     	; 0x1660 <__stack+0x561>
    160a:	d5 01       	movw	r26, r10
    160c:	14 96       	adiw	r26, 0x04	; 4
    160e:	2d 91       	ld	r18, X+
    1610:	3c 91       	ld	r19, X
    1612:	15 97       	sbiw	r26, 0x05	; 5
    1614:	c9 01       	movw	r24, r18
    1616:	01 96       	adiw	r24, 0x01	; 1
    1618:	15 96       	adiw	r26, 0x05	; 5
    161a:	9c 93       	st	X, r25
    161c:	8e 93       	st	-X, r24
    161e:	14 97       	sbiw	r26, 0x04	; 4
    1620:	12 96       	adiw	r26, 0x02	; 2
    1622:	4d 91       	ld	r20, X+
    1624:	5c 91       	ld	r21, X
    1626:	13 97       	sbiw	r26, 0x03	; 3
    1628:	48 17       	cp	r20, r24
    162a:	59 07       	cpc	r21, r25
    162c:	c0 f0       	brcs	.+48     	; 0x165e <__stack+0x55f>
    162e:	ed 91       	ld	r30, X+
    1630:	fc 91       	ld	r31, X
    1632:	e2 0f       	add	r30, r18
    1634:	f3 1f       	adc	r31, r19
    1636:	d6 01       	movw	r26, r12
    1638:	ac 52       	subi	r26, 0x2C	; 44
    163a:	be 4f       	sbci	r27, 0xFE	; 254
    163c:	0d 90       	ld	r0, X+
    163e:	bc 91       	ld	r27, X
    1640:	a0 2d       	mov	r26, r0
    1642:	2d 91       	ld	r18, X+
    1644:	3c 91       	ld	r19, X
    1646:	86 2f       	mov	r24, r22
    1648:	90 e0       	ldi	r25, 0x00	; 0
    164a:	ac 01       	movw	r20, r24
    164c:	44 0f       	add	r20, r20
    164e:	55 1f       	adc	r21, r21
    1650:	84 0f       	add	r24, r20
    1652:	95 1f       	adc	r25, r21
    1654:	d9 01       	movw	r26, r18
    1656:	a8 0f       	add	r26, r24
    1658:	b9 1f       	adc	r27, r25
    165a:	8c 91       	ld	r24, X
    165c:	80 83       	st	Z, r24
    165e:	6f 5f       	subi	r22, 0xFF	; 255
    1660:	f6 01       	movw	r30, r12
    1662:	ec 52       	subi	r30, 0x2C	; 44
    1664:	fe 4f       	sbci	r31, 0xFE	; 254
    1666:	01 90       	ld	r0, Z+
    1668:	f0 81       	ld	r31, Z
    166a:	e0 2d       	mov	r30, r0
    166c:	83 81       	ldd	r24, Z+3	; 0x03
    166e:	68 17       	cp	r22, r24
    1670:	60 f2       	brcs	.-104    	; 0x160a <__stack+0x50b>
    1672:	60 e0       	ldi	r22, 0x00	; 0
    1674:	41 2c       	mov	r4, r1
    1676:	51 2c       	mov	r5, r1
    1678:	32 01       	movw	r6, r4
    167a:	6a c4       	rjmp	.+2260   	; 0x1f50 <__stack+0xe51>
    167c:	fe 01       	movw	r30, r28
    167e:	ef 57       	subi	r30, 0x7F	; 127
    1680:	ff 4f       	sbci	r31, 0xFF	; 255
    1682:	81 e4       	ldi	r24, 0x41	; 65
    1684:	df 01       	movw	r26, r30
    1686:	1d 92       	st	X+, r1
    1688:	8a 95       	dec	r24
    168a:	e9 f7       	brne	.-6      	; 0x1686 <__stack+0x587>
    168c:	80 e4       	ldi	r24, 0x40	; 64
    168e:	ce 53       	subi	r28, 0x3E	; 62
    1690:	df 4f       	sbci	r29, 0xFF	; 255
    1692:	88 83       	st	Y, r24
    1694:	c2 5c       	subi	r28, 0xC2	; 194
    1696:	d0 40       	sbci	r29, 0x00	; 0
    1698:	ae 01       	movw	r20, r28
    169a:	4f 5f       	subi	r20, 0xFF	; 255
    169c:	5f 4f       	sbci	r21, 0xFF	; 255
    169e:	be 01       	movw	r22, r28
    16a0:	6e 53       	subi	r22, 0x3E	; 62
    16a2:	7f 4f       	sbci	r23, 0xFF	; 255
    16a4:	c6 01       	movw	r24, r12
    16a6:	0e 94 0c 51 	call	0xa218	; 0xa218 <TMR_SR_cmdAntennaDetect>
    16aa:	2b 01       	movw	r4, r22
    16ac:	3c 01       	movw	r6, r24
    16ae:	67 2b       	or	r22, r23
    16b0:	68 2b       	or	r22, r24
    16b2:	69 2b       	or	r22, r25
    16b4:	09 f0       	breq	.+2      	; 0x16b8 <__stack+0x5b9>
    16b6:	72 c0       	rjmp	.+228    	; 0x179c <__stack+0x69d>
    16b8:	80 e0       	ldi	r24, 0x00	; 0
    16ba:	14 c0       	rjmp	.+40     	; 0x16e4 <__stack+0x5e5>
    16bc:	e8 2f       	mov	r30, r24
    16be:	f0 e0       	ldi	r31, 0x00	; 0
    16c0:	ee 0f       	add	r30, r30
    16c2:	ff 1f       	adc	r31, r31
    16c4:	21 e0       	ldi	r18, 0x01	; 1
    16c6:	30 e0       	ldi	r19, 0x00	; 0
    16c8:	2c 0f       	add	r18, r28
    16ca:	3d 1f       	adc	r19, r29
    16cc:	e2 0f       	add	r30, r18
    16ce:	f3 1f       	adc	r31, r19
    16d0:	20 81       	ld	r18, Z
    16d2:	91 81       	ldd	r25, Z+1	; 0x01
    16d4:	e1 e8       	ldi	r30, 0x81	; 129
    16d6:	f0 e0       	ldi	r31, 0x00	; 0
    16d8:	ec 0f       	add	r30, r28
    16da:	fd 1f       	adc	r31, r29
    16dc:	e2 0f       	add	r30, r18
    16de:	f1 1d       	adc	r31, r1
    16e0:	90 83       	st	Z, r25
    16e2:	8f 5f       	subi	r24, 0xFF	; 255
    16e4:	ce 53       	subi	r28, 0x3E	; 62
    16e6:	df 4f       	sbci	r29, 0xFF	; 255
    16e8:	48 81       	ld	r20, Y
    16ea:	c2 5c       	subi	r28, 0xC2	; 194
    16ec:	d0 40       	sbci	r29, 0x00	; 0
    16ee:	84 17       	cp	r24, r20
    16f0:	28 f3       	brcs	.-54     	; 0x16bc <__stack+0x5bd>
    16f2:	f6 01       	movw	r30, r12
    16f4:	ec 52       	subi	r30, 0x2C	; 44
    16f6:	fe 4f       	sbci	r31, 0xFE	; 254
    16f8:	80 81       	ld	r24, Z
    16fa:	91 81       	ldd	r25, Z+1	; 0x01
    16fc:	89 2b       	or	r24, r25
    16fe:	29 f4       	brne	.+10     	; 0x170a <__stack+0x60b>
    1700:	be 01       	movw	r22, r28
    1702:	6f 5f       	subi	r22, 0xFF	; 255
    1704:	7f 4f       	sbci	r23, 0xFF	; 255
    1706:	c6 01       	movw	r24, r12
    1708:	d2 d9       	rcall	.-3164   	; 0xaae <updateTxRxMapData>
    170a:	d5 01       	movw	r26, r10
    170c:	15 96       	adiw	r26, 0x05	; 5
    170e:	1c 92       	st	X, r1
    1710:	1e 92       	st	-X, r1
    1712:	14 97       	sbiw	r26, 0x04	; 4
    1714:	20 e0       	ldi	r18, 0x00	; 0
    1716:	38 c0       	rjmp	.+112    	; 0x1788 <__stack+0x689>
    1718:	40 81       	ld	r20, Z
    171a:	51 81       	ldd	r21, Z+1	; 0x01
    171c:	82 2f       	mov	r24, r18
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	fc 01       	movw	r30, r24
    1722:	ee 0f       	add	r30, r30
    1724:	ff 1f       	adc	r31, r31
    1726:	8e 0f       	add	r24, r30
    1728:	9f 1f       	adc	r25, r31
    172a:	fa 01       	movw	r30, r20
    172c:	e8 0f       	add	r30, r24
    172e:	f9 1f       	adc	r31, r25
    1730:	40 81       	ld	r20, Z
    1732:	31 81       	ldd	r19, Z+1	; 0x01
    1734:	82 81       	ldd	r24, Z+2	; 0x02
    1736:	90 e0       	ldi	r25, 0x00	; 0
    1738:	e1 e8       	ldi	r30, 0x81	; 129
    173a:	f0 e0       	ldi	r31, 0x00	; 0
    173c:	ec 0f       	add	r30, r28
    173e:	fd 1f       	adc	r31, r29
    1740:	e3 0f       	add	r30, r19
    1742:	f1 1d       	adc	r31, r1
    1744:	30 81       	ld	r19, Z
    1746:	33 23       	and	r19, r19
    1748:	f1 f0       	breq	.+60     	; 0x1786 <__stack+0x687>
    174a:	e1 e8       	ldi	r30, 0x81	; 129
    174c:	f0 e0       	ldi	r31, 0x00	; 0
    174e:	ec 0f       	add	r30, r28
    1750:	fd 1f       	adc	r31, r29
    1752:	e8 0f       	add	r30, r24
    1754:	f9 1f       	adc	r31, r25
    1756:	80 81       	ld	r24, Z
    1758:	88 23       	and	r24, r24
    175a:	a9 f0       	breq	.+42     	; 0x1786 <__stack+0x687>
    175c:	f5 01       	movw	r30, r10
    175e:	84 81       	ldd	r24, Z+4	; 0x04
    1760:	95 81       	ldd	r25, Z+5	; 0x05
    1762:	bc 01       	movw	r22, r24
    1764:	6f 5f       	subi	r22, 0xFF	; 255
    1766:	7f 4f       	sbci	r23, 0xFF	; 255
    1768:	75 83       	std	Z+5, r23	; 0x05
    176a:	64 83       	std	Z+4, r22	; 0x04
    176c:	02 80       	ldd	r0, Z+2	; 0x02
    176e:	f3 81       	ldd	r31, Z+3	; 0x03
    1770:	e0 2d       	mov	r30, r0
    1772:	e6 17       	cp	r30, r22
    1774:	f7 07       	cpc	r31, r23
    1776:	38 f0       	brcs	.+14     	; 0x1786 <__stack+0x687>
    1778:	d5 01       	movw	r26, r10
    177a:	6d 91       	ld	r22, X+
    177c:	7c 91       	ld	r23, X
    177e:	fb 01       	movw	r30, r22
    1780:	e8 0f       	add	r30, r24
    1782:	f9 1f       	adc	r31, r25
    1784:	40 83       	st	Z, r20
    1786:	2f 5f       	subi	r18, 0xFF	; 255
    1788:	f6 01       	movw	r30, r12
    178a:	ec 52       	subi	r30, 0x2C	; 44
    178c:	fe 4f       	sbci	r31, 0xFE	; 254
    178e:	01 90       	ld	r0, Z+
    1790:	f0 81       	ld	r31, Z
    1792:	e0 2d       	mov	r30, r0
    1794:	83 81       	ldd	r24, Z+3	; 0x03
    1796:	28 17       	cp	r18, r24
    1798:	08 f4       	brcc	.+2      	; 0x179c <__stack+0x69d>
    179a:	be cf       	rjmp	.-132    	; 0x1718 <__stack+0x619>
    179c:	60 e0       	ldi	r22, 0x00	; 0
    179e:	d8 c3       	rjmp	.+1968   	; 0x1f50 <__stack+0xe51>
    17a0:	f6 01       	movw	r30, r12
    17a2:	ec 52       	subi	r30, 0x2C	; 44
    17a4:	fe 4f       	sbci	r31, 0xFE	; 254
    17a6:	80 81       	ld	r24, Z
    17a8:	91 81       	ldd	r25, Z+1	; 0x01
    17aa:	89 2b       	or	r24, r25
    17ac:	51 f4       	brne	.+20     	; 0x17c2 <__stack+0x6c3>
    17ae:	c6 01       	movw	r24, r12
    17b0:	d5 d9       	rcall	.-3158   	; 0xb5c <initTxRxMapFromPorts>
    17b2:	2b 01       	movw	r4, r22
    17b4:	3c 01       	movw	r6, r24
    17b6:	61 15       	cp	r22, r1
    17b8:	71 05       	cpc	r23, r1
    17ba:	81 05       	cpc	r24, r1
    17bc:	91 05       	cpc	r25, r1
    17be:	21 f0       	breq	.+8      	; 0x17c8 <__stack+0x6c9>
    17c0:	60 c4       	rjmp	.+2240   	; 0x2082 <__stack+0xf83>
    17c2:	41 2c       	mov	r4, r1
    17c4:	51 2c       	mov	r5, r1
    17c6:	32 01       	movw	r6, r4
    17c8:	f6 01       	movw	r30, r12
    17ca:	ec 52       	subi	r30, 0x2C	; 44
    17cc:	fe 4f       	sbci	r31, 0xFE	; 254
    17ce:	01 90       	ld	r0, Z+
    17d0:	f0 81       	ld	r31, Z
    17d2:	e0 2d       	mov	r30, r0
    17d4:	20 e0       	ldi	r18, 0x00	; 0
    17d6:	30 e0       	ldi	r19, 0x00	; 0
    17d8:	19 c0       	rjmp	.+50     	; 0x180c <__stack+0x70d>
    17da:	d5 01       	movw	r26, r10
    17dc:	4d 91       	ld	r20, X+
    17de:	5c 91       	ld	r21, X
    17e0:	c9 01       	movw	r24, r18
    17e2:	88 0f       	add	r24, r24
    17e4:	99 1f       	adc	r25, r25
    17e6:	82 0f       	add	r24, r18
    17e8:	93 1f       	adc	r25, r19
    17ea:	4a 01       	movw	r8, r20
    17ec:	88 0e       	add	r8, r24
    17ee:	99 1e       	adc	r9, r25
    17f0:	40 81       	ld	r20, Z
    17f2:	51 81       	ldd	r21, Z+1	; 0x01
    17f4:	84 0f       	add	r24, r20
    17f6:	95 1f       	adc	r25, r21
    17f8:	dc 01       	movw	r26, r24
    17fa:	4d 91       	ld	r20, X+
    17fc:	5d 91       	ld	r21, X+
    17fe:	6c 91       	ld	r22, X
    1800:	d4 01       	movw	r26, r8
    1802:	4d 93       	st	X+, r20
    1804:	5d 93       	st	X+, r21
    1806:	6c 93       	st	X, r22
    1808:	2f 5f       	subi	r18, 0xFF	; 255
    180a:	3f 4f       	sbci	r19, 0xFF	; 255
    180c:	43 81       	ldd	r20, Z+3	; 0x03
    180e:	84 2f       	mov	r24, r20
    1810:	90 e0       	ldi	r25, 0x00	; 0
    1812:	28 17       	cp	r18, r24
    1814:	39 07       	cpc	r19, r25
    1816:	38 f4       	brcc	.+14     	; 0x1826 <__stack+0x727>
    1818:	d5 01       	movw	r26, r10
    181a:	12 96       	adiw	r26, 0x02	; 2
    181c:	8c 91       	ld	r24, X
    181e:	90 e0       	ldi	r25, 0x00	; 0
    1820:	28 17       	cp	r18, r24
    1822:	39 07       	cpc	r19, r25
    1824:	d0 f2       	brcs	.-76     	; 0x17da <__stack+0x6db>
    1826:	f5 01       	movw	r30, r10
    1828:	43 83       	std	Z+3, r20	; 0x03
    182a:	60 e0       	ldi	r22, 0x00	; 0
    182c:	91 c3       	rjmp	.+1826   	; 0x1f50 <__stack+0xe51>
    182e:	da 01       	movw	r26, r20
    1830:	12 96       	adiw	r26, 0x02	; 2
    1832:	8c 91       	ld	r24, X
    1834:	12 97       	sbiw	r26, 0x02	; 2
    1836:	89 83       	std	Y+1, r24	; 0x01
    1838:	4d 91       	ld	r20, X+
    183a:	5c 91       	ld	r21, X
    183c:	be 01       	movw	r22, r28
    183e:	6f 5f       	subi	r22, 0xFF	; 255
    1840:	7f 4f       	sbci	r23, 0xFF	; 255
    1842:	c6 01       	movw	r24, r12
    1844:	0e 94 84 53 	call	0xa708	; 0xa708 <TMR_SR_cmdGetFrequencyHopTable>
    1848:	2b 01       	movw	r4, r22
    184a:	3c 01       	movw	r6, r24
    184c:	67 2b       	or	r22, r23
    184e:	68 2b       	or	r22, r24
    1850:	69 2b       	or	r22, r25
    1852:	29 f4       	brne	.+10     	; 0x185e <__stack+0x75f>
    1854:	89 81       	ldd	r24, Y+1	; 0x01
    1856:	90 e0       	ldi	r25, 0x00	; 0
    1858:	f5 01       	movw	r30, r10
    185a:	95 83       	std	Z+5, r25	; 0x05
    185c:	84 83       	std	Z+4, r24	; 0x04
    185e:	60 e0       	ldi	r22, 0x00	; 0
    1860:	77 c3       	rjmp	.+1774   	; 0x1f50 <__stack+0xe51>
    1862:	ba 01       	movw	r22, r20
    1864:	c6 01       	movw	r24, r12
    1866:	0e 94 87 54 	call	0xa90e	; 0xa90e <TMR_SR_cmdGetFrequencyHopTime>
    186a:	2b 01       	movw	r4, r22
    186c:	3c 01       	movw	r6, r24
    186e:	60 e0       	ldi	r22, 0x00	; 0
    1870:	6f c3       	rjmp	.+1758   	; 0x1f50 <__stack+0xe51>
    1872:	63 e4       	ldi	r22, 0x43	; 67
    1874:	c6 01       	movw	r24, r12
    1876:	0e 94 69 56 	call	0xacd2	; 0xacd2 <TMR_SR_cmdGetRegionConfiguration>
    187a:	2b 01       	movw	r4, r22
    187c:	3c 01       	movw	r6, r24
    187e:	60 e0       	ldi	r22, 0x00	; 0
    1880:	67 c3       	rjmp	.+1742   	; 0x1f50 <__stack+0xe51>
    1882:	62 e4       	ldi	r22, 0x42	; 66
    1884:	c6 01       	movw	r24, r12
    1886:	0e 94 69 56 	call	0xacd2	; 0xacd2 <TMR_SR_cmdGetRegionConfiguration>
    188a:	2b 01       	movw	r4, r22
    188c:	3c 01       	movw	r6, r24
    188e:	60 e0       	ldi	r22, 0x00	; 0
    1890:	5f c3       	rjmp	.+1726   	; 0x1f50 <__stack+0xe51>
    1892:	61 e4       	ldi	r22, 0x41	; 65
    1894:	c6 01       	movw	r24, r12
    1896:	0e 94 69 56 	call	0xacd2	; 0xacd2 <TMR_SR_cmdGetRegionConfiguration>
    189a:	2b 01       	movw	r4, r22
    189c:	3c 01       	movw	r6, r24
    189e:	60 e0       	ldi	r22, 0x00	; 0
    18a0:	57 c3       	rjmp	.+1710   	; 0x1f50 <__stack+0xe51>
    18a2:	60 e4       	ldi	r22, 0x40	; 64
    18a4:	c6 01       	movw	r24, r12
    18a6:	0e 94 69 56 	call	0xacd2	; 0xacd2 <TMR_SR_cmdGetRegionConfiguration>
    18aa:	2b 01       	movw	r4, r22
    18ac:	3c 01       	movw	r6, r24
    18ae:	61 15       	cp	r22, r1
    18b0:	71 05       	cpc	r23, r1
    18b2:	81 05       	cpc	r24, r1
    18b4:	91 05       	cpc	r25, r1
    18b6:	09 f4       	brne	.+2      	; 0x18ba <__stack+0x7bb>
    18b8:	3c c3       	rjmp	.+1656   	; 0x1f32 <__stack+0xe33>
    18ba:	89 2f       	mov	r24, r25
    18bc:	99 27       	eor	r25, r25
    18be:	aa 27       	eor	r26, r26
    18c0:	bb 27       	eor	r27, r27
    18c2:	02 97       	sbiw	r24, 0x02	; 2
    18c4:	a1 05       	cpc	r26, r1
    18c6:	b1 05       	cpc	r27, r1
    18c8:	09 f0       	breq	.+2      	; 0x18cc <__stack+0x7cd>
    18ca:	35 c3       	rjmp	.+1642   	; 0x1f36 <__stack+0xe37>
    18cc:	d5 01       	movw	r26, r10
    18ce:	1c 92       	st	X, r1
    18d0:	60 e0       	ldi	r22, 0x00	; 0
    18d2:	41 2c       	mov	r4, r1
    18d4:	51 2c       	mov	r5, r1
    18d6:	32 01       	movw	r6, r4
    18d8:	3b c3       	rjmp	.+1654   	; 0x1f50 <__stack+0xe51>
    18da:	f6 01       	movw	r30, r12
    18dc:	84 a9       	ldd	r24, Z+52	; 0x34
    18de:	da 01       	movw	r26, r20
    18e0:	8c 93       	st	X, r24
    18e2:	60 e0       	ldi	r22, 0x00	; 0
    18e4:	41 2c       	mov	r4, r1
    18e6:	51 2c       	mov	r5, r1
    18e8:	32 01       	movw	r6, r4
    18ea:	32 c3       	rjmp	.+1636   	; 0x1f50 <__stack+0xe51>
    18ec:	b6 01       	movw	r22, r12
    18ee:	6b 5c       	subi	r22, 0xCB	; 203
    18f0:	7f 4f       	sbci	r23, 0xFF	; 255
    18f2:	c6 01       	movw	r24, r12
    18f4:	0e 94 07 56 	call	0xac0e	; 0xac0e <TMR_SR_cmdGetCurrentProtocol>
    18f8:	2b 01       	movw	r4, r22
    18fa:	3c 01       	movw	r6, r24
    18fc:	67 2b       	or	r22, r23
    18fe:	68 2b       	or	r22, r24
    1900:	69 2b       	or	r22, r25
    1902:	09 f0       	breq	.+2      	; 0x1906 <__stack+0x807>
    1904:	1a c3       	rjmp	.+1588   	; 0x1f3a <__stack+0xe3b>
    1906:	f6 01       	movw	r30, r12
    1908:	85 a9       	ldd	r24, Z+53	; 0x35
    190a:	d5 01       	movw	r26, r10
    190c:	8c 93       	st	X, r24
    190e:	60 e0       	ldi	r22, 0x00	; 0
    1910:	1f c3       	rjmp	.+1598   	; 0x1f50 <__stack+0xe51>
    1912:	be 01       	movw	r22, r28
    1914:	6f 5f       	subi	r22, 0xFF	; 255
    1916:	7f 4f       	sbci	r23, 0xFF	; 255
    1918:	c6 01       	movw	r24, r12
    191a:	0e 94 df 56 	call	0xadbe	; 0xadbe <TMR_SR_cmdGetPowerMode>
    191e:	2b 01       	movw	r4, r22
    1920:	3c 01       	movw	r6, r24
    1922:	67 2b       	or	r22, r23
    1924:	68 2b       	or	r22, r24
    1926:	69 2b       	or	r22, r25
    1928:	29 f4       	brne	.+10     	; 0x1934 <__stack+0x835>
    192a:	89 81       	ldd	r24, Y+1	; 0x01
    192c:	f6 01       	movw	r30, r12
    192e:	ef 57       	subi	r30, 0x7F	; 127
    1930:	fc 4f       	sbci	r31, 0xFC	; 252
    1932:	80 83       	st	Z, r24
    1934:	f6 01       	movw	r30, r12
    1936:	ef 57       	subi	r30, 0x7F	; 127
    1938:	fc 4f       	sbci	r31, 0xFC	; 252
    193a:	80 81       	ld	r24, Z
    193c:	f5 01       	movw	r30, r10
    193e:	80 83       	st	Z, r24
    1940:	60 e0       	ldi	r22, 0x00	; 0
    1942:	06 c3       	rjmp	.+1548   	; 0x1f50 <__stack+0xe51>
    1944:	ba 01       	movw	r22, r20
    1946:	c6 01       	movw	r24, r12
    1948:	0e 94 10 57 	call	0xae20	; 0xae20 <TMR_SR_cmdGetUserMode>
    194c:	2b 01       	movw	r4, r22
    194e:	3c 01       	movw	r6, r24
    1950:	60 e0       	ldi	r22, 0x00	; 0
    1952:	fe c2       	rjmp	.+1532   	; 0x1f50 <__stack+0xe51>
    1954:	0f 2e       	mov	r0, r31
    1956:	f2 e1       	ldi	r31, 0x12	; 18
    1958:	2f 2e       	mov	r2, r31
    195a:	f0 2d       	mov	r31, r0
    195c:	60 e0       	ldi	r22, 0x00	; 0
    195e:	41 2c       	mov	r4, r1
    1960:	51 2c       	mov	r5, r1
    1962:	32 01       	movw	r6, r4
    1964:	f5 c2       	rjmp	.+1514   	; 0x1f50 <__stack+0xe51>
    1966:	68 94       	set
    1968:	22 24       	eor	r2, r2
    196a:	21 f8       	bld	r2, 1
    196c:	60 e0       	ldi	r22, 0x00	; 0
    196e:	41 2c       	mov	r4, r1
    1970:	51 2c       	mov	r5, r1
    1972:	32 01       	movw	r6, r4
    1974:	ed c2       	rjmp	.+1498   	; 0x1f50 <__stack+0xe51>
    1976:	21 2c       	mov	r2, r1
    1978:	60 e0       	ldi	r22, 0x00	; 0
    197a:	41 2c       	mov	r4, r1
    197c:	51 2c       	mov	r5, r1
    197e:	32 01       	movw	r6, r4
    1980:	e7 c2       	rjmp	.+1486   	; 0x1f50 <__stack+0xe51>
    1982:	22 24       	eor	r2, r2
    1984:	23 94       	inc	r2
    1986:	60 e0       	ldi	r22, 0x00	; 0
    1988:	41 2c       	mov	r4, r1
    198a:	51 2c       	mov	r5, r1
    198c:	32 01       	movw	r6, r4
    198e:	e0 c2       	rjmp	.+1472   	; 0x1f50 <__stack+0xe51>
    1990:	68 94       	set
    1992:	22 24       	eor	r2, r2
    1994:	24 f8       	bld	r2, 4
    1996:	60 e0       	ldi	r22, 0x00	; 0
    1998:	41 2c       	mov	r4, r1
    199a:	51 2c       	mov	r5, r1
    199c:	32 01       	movw	r6, r4
    199e:	d8 c2       	rjmp	.+1456   	; 0x1f50 <__stack+0xe51>
    19a0:	0f 2e       	mov	r0, r31
    19a2:	f1 e1       	ldi	r31, 0x11	; 17
    19a4:	2f 2e       	mov	r2, r31
    19a6:	f0 2d       	mov	r31, r0
    19a8:	60 e0       	ldi	r22, 0x00	; 0
    19aa:	41 2c       	mov	r4, r1
    19ac:	51 2c       	mov	r5, r1
    19ae:	32 01       	movw	r6, r4
    19b0:	cf c2       	rjmp	.+1438   	; 0x1f50 <__stack+0xe51>
    19b2:	0f 2e       	mov	r0, r31
    19b4:	f3 e1       	ldi	r31, 0x13	; 19
    19b6:	2f 2e       	mov	r2, r31
    19b8:	f0 2d       	mov	r31, r0
    19ba:	60 e0       	ldi	r22, 0x00	; 0
    19bc:	41 2c       	mov	r4, r1
    19be:	51 2c       	mov	r5, r1
    19c0:	32 01       	movw	r6, r4
    19c2:	c6 c2       	rjmp	.+1420   	; 0x1f50 <__stack+0xe51>
    19c4:	f6 01       	movw	r30, r12
    19c6:	e9 50       	subi	r30, 0x09	; 9
    19c8:	fa 4f       	sbci	r31, 0xFA	; 250
    19ca:	80 81       	ld	r24, Z
    19cc:	da 01       	movw	r26, r20
    19ce:	8c 93       	st	X, r24
    19d0:	60 e0       	ldi	r22, 0x00	; 0
    19d2:	41 2c       	mov	r4, r1
    19d4:	51 2c       	mov	r5, r1
    19d6:	32 01       	movw	r6, r4
    19d8:	bb c2       	rjmp	.+1398   	; 0x1f50 <__stack+0xe51>
    19da:	0f 2e       	mov	r0, r31
    19dc:	f4 e1       	ldi	r31, 0x14	; 20
    19de:	2f 2e       	mov	r2, r31
    19e0:	f0 2d       	mov	r31, r0
    19e2:	60 e0       	ldi	r22, 0x00	; 0
    19e4:	41 2c       	mov	r4, r1
    19e6:	51 2c       	mov	r5, r1
    19e8:	32 01       	movw	r6, r4
    19ea:	b2 c2       	rjmp	.+1380   	; 0x1f50 <__stack+0xe51>
    19ec:	0f 2e       	mov	r0, r31
    19ee:	f5 e1       	ldi	r31, 0x15	; 21
    19f0:	2f 2e       	mov	r2, r31
    19f2:	f0 2d       	mov	r31, r0
    19f4:	60 e0       	ldi	r22, 0x00	; 0
    19f6:	41 2c       	mov	r4, r1
    19f8:	51 2c       	mov	r5, r1
    19fa:	32 01       	movw	r6, r4
    19fc:	a9 c2       	rjmp	.+1362   	; 0x1f50 <__stack+0xe51>
    19fe:	0f 2e       	mov	r0, r31
    1a00:	f6 e1       	ldi	r31, 0x16	; 22
    1a02:	2f 2e       	mov	r2, r31
    1a04:	f0 2d       	mov	r31, r0
    1a06:	60 e0       	ldi	r22, 0x00	; 0
    1a08:	41 2c       	mov	r4, r1
    1a0a:	51 2c       	mov	r5, r1
    1a0c:	32 01       	movw	r6, r4
    1a0e:	a0 c2       	rjmp	.+1344   	; 0x1f50 <__stack+0xe51>
    1a10:	0f 2e       	mov	r0, r31
    1a12:	f7 e1       	ldi	r31, 0x17	; 23
    1a14:	2f 2e       	mov	r2, r31
    1a16:	f0 2d       	mov	r31, r0
    1a18:	60 e0       	ldi	r22, 0x00	; 0
    1a1a:	41 2c       	mov	r4, r1
    1a1c:	51 2c       	mov	r5, r1
    1a1e:	32 01       	movw	r6, r4
    1a20:	97 c2       	rjmp	.+1326   	; 0x1f50 <__stack+0xe51>
    1a22:	ba 01       	movw	r22, r20
    1a24:	c6 01       	movw	r24, r12
    1a26:	0e 94 9e 55 	call	0xab3c	; 0xab3c <TMR_SR_cmdGetProtocolList>
    1a2a:	2b 01       	movw	r4, r22
    1a2c:	3c 01       	movw	r6, r24
    1a2e:	60 e0       	ldi	r22, 0x00	; 0
    1a30:	8f c2       	rjmp	.+1310   	; 0x1f50 <__stack+0xe51>
    1a32:	0f 2e       	mov	r0, r31
    1a34:	f9 e0       	ldi	r31, 0x09	; 9
    1a36:	3f 2e       	mov	r3, r31
    1a38:	f0 2d       	mov	r31, r0
    1a3a:	68 94       	set
    1a3c:	22 24       	eor	r2, r2
    1a3e:	21 f8       	bld	r2, 1
    1a40:	60 e0       	ldi	r22, 0x00	; 0
    1a42:	41 2c       	mov	r4, r1
    1a44:	51 2c       	mov	r5, r1
    1a46:	32 01       	movw	r6, r4
    1a48:	83 c2       	rjmp	.+1286   	; 0x1f50 <__stack+0xe51>
    1a4a:	0f 2e       	mov	r0, r31
    1a4c:	fa e0       	ldi	r31, 0x0A	; 10
    1a4e:	3f 2e       	mov	r3, r31
    1a50:	f0 2d       	mov	r31, r0
    1a52:	68 94       	set
    1a54:	22 24       	eor	r2, r2
    1a56:	21 f8       	bld	r2, 1
    1a58:	60 e0       	ldi	r22, 0x00	; 0
    1a5a:	41 2c       	mov	r4, r1
    1a5c:	51 2c       	mov	r5, r1
    1a5e:	32 01       	movw	r6, r4
    1a60:	77 c2       	rjmp	.+1262   	; 0x1f50 <__stack+0xe51>
    1a62:	0f 2e       	mov	r0, r31
    1a64:	fb e0       	ldi	r31, 0x0B	; 11
    1a66:	3f 2e       	mov	r3, r31
    1a68:	f0 2d       	mov	r31, r0
    1a6a:	68 94       	set
    1a6c:	22 24       	eor	r2, r2
    1a6e:	21 f8       	bld	r2, 1
    1a70:	60 e0       	ldi	r22, 0x00	; 0
    1a72:	41 2c       	mov	r4, r1
    1a74:	51 2c       	mov	r5, r1
    1a76:	32 01       	movw	r6, r4
    1a78:	6b c2       	rjmp	.+1238   	; 0x1f50 <__stack+0xe51>
    1a7a:	0f 2e       	mov	r0, r31
    1a7c:	f4 e1       	ldi	r31, 0x14	; 20
    1a7e:	3f 2e       	mov	r3, r31
    1a80:	f0 2d       	mov	r31, r0
    1a82:	68 94       	set
    1a84:	22 24       	eor	r2, r2
    1a86:	21 f8       	bld	r2, 1
    1a88:	60 e0       	ldi	r22, 0x00	; 0
    1a8a:	41 2c       	mov	r4, r1
    1a8c:	51 2c       	mov	r5, r1
    1a8e:	32 01       	movw	r6, r4
    1a90:	5f c2       	rjmp	.+1214   	; 0x1f50 <__stack+0xe51>
    1a92:	0f 2e       	mov	r0, r31
    1a94:	f5 e1       	ldi	r31, 0x15	; 21
    1a96:	3f 2e       	mov	r3, r31
    1a98:	f0 2d       	mov	r31, r0
    1a9a:	68 94       	set
    1a9c:	22 24       	eor	r2, r2
    1a9e:	21 f8       	bld	r2, 1
    1aa0:	60 e0       	ldi	r22, 0x00	; 0
    1aa2:	41 2c       	mov	r4, r1
    1aa4:	51 2c       	mov	r5, r1
    1aa6:	32 01       	movw	r6, r4
    1aa8:	53 c2       	rjmp	.+1190   	; 0x1f50 <__stack+0xe51>
    1aaa:	0f 2e       	mov	r0, r31
    1aac:	f9 e0       	ldi	r31, 0x09	; 9
    1aae:	3f 2e       	mov	r3, r31
    1ab0:	f0 2d       	mov	r31, r0
    1ab2:	22 24       	eor	r2, r2
    1ab4:	23 94       	inc	r2
    1ab6:	60 e0       	ldi	r22, 0x00	; 0
    1ab8:	41 2c       	mov	r4, r1
    1aba:	51 2c       	mov	r5, r1
    1abc:	32 01       	movw	r6, r4
    1abe:	48 c2       	rjmp	.+1168   	; 0x1f50 <__stack+0xe51>
    1ac0:	0f 2e       	mov	r0, r31
    1ac2:	fa e0       	ldi	r31, 0x0A	; 10
    1ac4:	3f 2e       	mov	r3, r31
    1ac6:	f0 2d       	mov	r31, r0
    1ac8:	22 24       	eor	r2, r2
    1aca:	23 94       	inc	r2
    1acc:	60 e0       	ldi	r22, 0x00	; 0
    1ace:	41 2c       	mov	r4, r1
    1ad0:	51 2c       	mov	r5, r1
    1ad2:	32 01       	movw	r6, r4
    1ad4:	3d c2       	rjmp	.+1146   	; 0x1f50 <__stack+0xe51>
    1ad6:	0f 2e       	mov	r0, r31
    1ad8:	fb e0       	ldi	r31, 0x0B	; 11
    1ada:	3f 2e       	mov	r3, r31
    1adc:	f0 2d       	mov	r31, r0
    1ade:	22 24       	eor	r2, r2
    1ae0:	23 94       	inc	r2
    1ae2:	60 e0       	ldi	r22, 0x00	; 0
    1ae4:	41 2c       	mov	r4, r1
    1ae6:	51 2c       	mov	r5, r1
    1ae8:	32 01       	movw	r6, r4
    1aea:	32 c2       	rjmp	.+1124   	; 0x1f50 <__stack+0xe51>
    1aec:	0f 2e       	mov	r0, r31
    1aee:	f4 e1       	ldi	r31, 0x14	; 20
    1af0:	3f 2e       	mov	r3, r31
    1af2:	f0 2d       	mov	r31, r0
    1af4:	22 24       	eor	r2, r2
    1af6:	23 94       	inc	r2
    1af8:	60 e0       	ldi	r22, 0x00	; 0
    1afa:	41 2c       	mov	r4, r1
    1afc:	51 2c       	mov	r5, r1
    1afe:	32 01       	movw	r6, r4
    1b00:	27 c2       	rjmp	.+1102   	; 0x1f50 <__stack+0xe51>
    1b02:	0f 2e       	mov	r0, r31
    1b04:	f5 e1       	ldi	r31, 0x15	; 21
    1b06:	3f 2e       	mov	r3, r31
    1b08:	f0 2d       	mov	r31, r0
    1b0a:	22 24       	eor	r2, r2
    1b0c:	23 94       	inc	r2
    1b0e:	60 e0       	ldi	r22, 0x00	; 0
    1b10:	41 2c       	mov	r4, r1
    1b12:	51 2c       	mov	r5, r1
    1b14:	32 01       	movw	r6, r4
    1b16:	1c c2       	rjmp	.+1080   	; 0x1f50 <__stack+0xe51>
    1b18:	0f 2e       	mov	r0, r31
    1b1a:	f9 e0       	ldi	r31, 0x09	; 9
    1b1c:	3f 2e       	mov	r3, r31
    1b1e:	f0 2d       	mov	r31, r0
    1b20:	0f 2e       	mov	r0, r31
    1b22:	f3 e0       	ldi	r31, 0x03	; 3
    1b24:	2f 2e       	mov	r2, r31
    1b26:	f0 2d       	mov	r31, r0
    1b28:	60 e0       	ldi	r22, 0x00	; 0
    1b2a:	41 2c       	mov	r4, r1
    1b2c:	51 2c       	mov	r5, r1
    1b2e:	32 01       	movw	r6, r4
    1b30:	0f c2       	rjmp	.+1054   	; 0x1f50 <__stack+0xe51>
    1b32:	0f 2e       	mov	r0, r31
    1b34:	fb e0       	ldi	r31, 0x0B	; 11
    1b36:	3f 2e       	mov	r3, r31
    1b38:	f0 2d       	mov	r31, r0
    1b3a:	0f 2e       	mov	r0, r31
    1b3c:	f3 e0       	ldi	r31, 0x03	; 3
    1b3e:	2f 2e       	mov	r2, r31
    1b40:	f0 2d       	mov	r31, r0
    1b42:	60 e0       	ldi	r22, 0x00	; 0
    1b44:	41 2c       	mov	r4, r1
    1b46:	51 2c       	mov	r5, r1
    1b48:	32 01       	movw	r6, r4
    1b4a:	02 c2       	rjmp	.+1028   	; 0x1f50 <__stack+0xe51>
    1b4c:	0f 2e       	mov	r0, r31
    1b4e:	f4 e1       	ldi	r31, 0x14	; 20
    1b50:	3f 2e       	mov	r3, r31
    1b52:	f0 2d       	mov	r31, r0
    1b54:	0f 2e       	mov	r0, r31
    1b56:	f3 e0       	ldi	r31, 0x03	; 3
    1b58:	2f 2e       	mov	r2, r31
    1b5a:	f0 2d       	mov	r31, r0
    1b5c:	60 e0       	ldi	r22, 0x00	; 0
    1b5e:	41 2c       	mov	r4, r1
    1b60:	51 2c       	mov	r5, r1
    1b62:	32 01       	movw	r6, r4
    1b64:	f5 c1       	rjmp	.+1002   	; 0x1f50 <__stack+0xe51>
    1b66:	0f 2e       	mov	r0, r31
    1b68:	f4 e1       	ldi	r31, 0x14	; 20
    1b6a:	3f 2e       	mov	r3, r31
    1b6c:	f0 2d       	mov	r31, r0
    1b6e:	68 94       	set
    1b70:	22 24       	eor	r2, r2
    1b72:	22 f8       	bld	r2, 2
    1b74:	60 e0       	ldi	r22, 0x00	; 0
    1b76:	41 2c       	mov	r4, r1
    1b78:	51 2c       	mov	r5, r1
    1b7a:	32 01       	movw	r6, r4
    1b7c:	e9 c1       	rjmp	.+978    	; 0x1f50 <__stack+0xe51>
    1b7e:	61 e2       	ldi	r22, 0x21	; 33
    1b80:	41 2c       	mov	r4, r1
    1b82:	51 2c       	mov	r5, r1
    1b84:	32 01       	movw	r6, r4
    1b86:	e4 c1       	rjmp	.+968    	; 0x1f50 <__stack+0xe51>
    1b88:	f6 01       	movw	r30, r12
    1b8a:	e8 52       	subi	r30, 0x28	; 40
    1b8c:	fe 4f       	sbci	r31, 0xFE	; 254
    1b8e:	80 81       	ld	r24, Z
    1b90:	91 81       	ldd	r25, Z+1	; 0x01
    1b92:	a2 81       	ldd	r26, Z+2	; 0x02
    1b94:	b3 81       	ldd	r27, Z+3	; 0x03
    1b96:	fa 01       	movw	r30, r20
    1b98:	80 83       	st	Z, r24
    1b9a:	91 83       	std	Z+1, r25	; 0x01
    1b9c:	a2 83       	std	Z+2, r26	; 0x02
    1b9e:	b3 83       	std	Z+3, r27	; 0x03
    1ba0:	60 e0       	ldi	r22, 0x00	; 0
    1ba2:	41 2c       	mov	r4, r1
    1ba4:	51 2c       	mov	r5, r1
    1ba6:	32 01       	movw	r6, r4
    1ba8:	d3 c1       	rjmp	.+934    	; 0x1f50 <__stack+0xe51>
    1baa:	ba 01       	movw	r22, r20
    1bac:	c6 01       	movw	r24, r12
    1bae:	0e 94 27 61 	call	0xc24e	; 0xc24e <TMR_SR_cmdGetAvailableRegions>
    1bb2:	2b 01       	movw	r4, r22
    1bb4:	3c 01       	movw	r6, r24
    1bb6:	60 e0       	ldi	r22, 0x00	; 0
    1bb8:	cb c1       	rjmp	.+918    	; 0x1f50 <__stack+0xe51>
    1bba:	ba 01       	movw	r22, r20
    1bbc:	c6 01       	movw	r24, r12
    1bbe:	0e 94 91 60 	call	0xc122	; 0xc122 <TMR_SR_cmdGetAvailableProtocols>
    1bc2:	2b 01       	movw	r4, r22
    1bc4:	3c 01       	movw	r6, r24
    1bc6:	60 e0       	ldi	r22, 0x00	; 0
    1bc8:	c3 c1       	rjmp	.+902    	; 0x1f50 <__stack+0xe51>
    1bca:	ba 01       	movw	r22, r20
    1bcc:	c6 01       	movw	r24, r12
    1bce:	0e 94 7e 61 	call	0xc2fc	; 0xc2fc <TMR_SR_cmdGetTemperature>
    1bd2:	2b 01       	movw	r4, r22
    1bd4:	3c 01       	movw	r6, r24
    1bd6:	60 e0       	ldi	r22, 0x00	; 0
    1bd8:	bb c1       	rjmp	.+886    	; 0x1f50 <__stack+0xe51>
    1bda:	ba 01       	movw	r22, r20
    1bdc:	c6 01       	movw	r24, r12
    1bde:	0e 94 4a 04 	call	0x894	; 0x894 <getHardwareInfo>
    1be2:	2b 01       	movw	r4, r22
    1be4:	3c 01       	movw	r6, r24
    1be6:	60 e0       	ldi	r22, 0x00	; 0
    1be8:	b3 c1       	rjmp	.+870    	; 0x1f50 <__stack+0xe51>
    1bea:	ba 01       	movw	r22, r20
    1bec:	c6 01       	movw	r24, r12
    1bee:	0e 94 7e 04 	call	0x8fc	; 0x8fc <getSerialNumber>
    1bf2:	2b 01       	movw	r4, r22
    1bf4:	3c 01       	movw	r6, r24
    1bf6:	60 e0       	ldi	r22, 0x00	; 0
    1bf8:	ab c1       	rjmp	.+854    	; 0x1f50 <__stack+0xe51>
    1bfa:	f6 01       	movw	r30, r12
    1bfc:	ef 58       	subi	r30, 0x8F	; 143
    1bfe:	fc 4f       	sbci	r31, 0xFC	; 252
    1c00:	80 81       	ld	r24, Z
    1c02:	80 32       	cpi	r24, 0x20	; 32
    1c04:	11 f1       	breq	.+68     	; 0x1c4a <__stack+0xb4b>
    1c06:	28 f4       	brcc	.+10     	; 0x1c12 <__stack+0xb13>
    1c08:	88 31       	cpi	r24, 0x18	; 24
    1c0a:	61 f0       	breq	.+24     	; 0x1c24 <__stack+0xb25>
    1c0c:	89 31       	cpi	r24, 0x19	; 25
    1c0e:	69 f0       	breq	.+26     	; 0x1c2a <__stack+0xb2b>
    1c10:	4e c0       	rjmp	.+156    	; 0x1cae <__stack+0xbaf>
    1c12:	88 33       	cpi	r24, 0x38	; 56
    1c14:	49 f1       	breq	.+82     	; 0x1c68 <__stack+0xb69>
    1c16:	80 38       	cpi	r24, 0x80	; 128
    1c18:	09 f4       	brne	.+2      	; 0x1c1c <__stack+0xb1d>
    1c1a:	46 c0       	rjmp	.+140    	; 0x1ca8 <__stack+0xba9>
    1c1c:	80 33       	cpi	r24, 0x30	; 48
    1c1e:	09 f0       	breq	.+2      	; 0x1c22 <__stack+0xb23>
    1c20:	46 c0       	rjmp	.+140    	; 0x1cae <__stack+0xbaf>
    1c22:	48 c0       	rjmp	.+144    	; 0x1cb4 <__stack+0xbb5>
    1c24:	61 e5       	ldi	r22, 0x51	; 81
    1c26:	71 e0       	ldi	r23, 0x01	; 1
    1c28:	50 c0       	rjmp	.+160    	; 0x1cca <__stack+0xbcb>
    1c2a:	f6 01       	movw	r30, r12
    1c2c:	ec 58       	subi	r30, 0x8C	; 140
    1c2e:	fc 4f       	sbci	r31, 0xFC	; 252
    1c30:	80 81       	ld	r24, Z
    1c32:	82 30       	cpi	r24, 0x02	; 2
    1c34:	21 f0       	breq	.+8      	; 0x1c3e <__stack+0xb3f>
    1c36:	83 30       	cpi	r24, 0x03	; 3
    1c38:	09 f4       	brne	.+2      	; 0x1c3c <__stack+0xb3d>
    1c3a:	3f c0       	rjmp	.+126    	; 0x1cba <__stack+0xbbb>
    1c3c:	03 c0       	rjmp	.+6      	; 0x1c44 <__stack+0xb45>
    1c3e:	6c e8       	ldi	r22, 0x8C	; 140
    1c40:	71 e0       	ldi	r23, 0x01	; 1
    1c42:	43 c0       	rjmp	.+134    	; 0x1cca <__stack+0xbcb>
    1c44:	61 e5       	ldi	r22, 0x51	; 81
    1c46:	71 e0       	ldi	r23, 0x01	; 1
    1c48:	40 c0       	rjmp	.+128    	; 0x1cca <__stack+0xbcb>
    1c4a:	f6 01       	movw	r30, r12
    1c4c:	ec 58       	subi	r30, 0x8C	; 140
    1c4e:	fc 4f       	sbci	r31, 0xFC	; 252
    1c50:	80 81       	ld	r24, Z
    1c52:	82 30       	cpi	r24, 0x02	; 2
    1c54:	19 f0       	breq	.+6      	; 0x1c5c <__stack+0xb5d>
    1c56:	83 30       	cpi	r24, 0x03	; 3
    1c58:	99 f1       	breq	.+102    	; 0x1cc0 <__stack+0xbc1>
    1c5a:	03 c0       	rjmp	.+6      	; 0x1c62 <__stack+0xb63>
    1c5c:	64 e9       	ldi	r22, 0x94	; 148
    1c5e:	71 e0       	ldi	r23, 0x01	; 1
    1c60:	34 c0       	rjmp	.+104    	; 0x1cca <__stack+0xbcb>
    1c62:	62 ea       	ldi	r22, 0xA2	; 162
    1c64:	71 e0       	ldi	r23, 0x01	; 1
    1c66:	31 c0       	rjmp	.+98     	; 0x1cca <__stack+0xbcb>
    1c68:	f6 01       	movw	r30, r12
    1c6a:	ed 58       	subi	r30, 0x8D	; 141
    1c6c:	fc 4f       	sbci	r31, 0xFC	; 252
    1c6e:	80 81       	ld	r24, Z
    1c70:	82 30       	cpi	r24, 0x02	; 2
    1c72:	71 f0       	breq	.+28     	; 0x1c90 <__stack+0xb91>
    1c74:	28 f4       	brcc	.+10     	; 0x1c80 <__stack+0xb81>
    1c76:	88 23       	and	r24, r24
    1c78:	41 f0       	breq	.+16     	; 0x1c8a <__stack+0xb8b>
    1c7a:	81 30       	cpi	r24, 0x01	; 1
    1c7c:	21 f1       	breq	.+72     	; 0x1cc6 <__stack+0xbc7>
    1c7e:	11 c0       	rjmp	.+34     	; 0x1ca2 <__stack+0xba3>
    1c80:	83 30       	cpi	r24, 0x03	; 3
    1c82:	49 f0       	breq	.+18     	; 0x1c96 <__stack+0xb97>
    1c84:	84 30       	cpi	r24, 0x04	; 4
    1c86:	51 f0       	breq	.+20     	; 0x1c9c <__stack+0xb9d>
    1c88:	0c c0       	rjmp	.+24     	; 0x1ca2 <__stack+0xba3>
    1c8a:	6c ea       	ldi	r22, 0xAC	; 172
    1c8c:	71 e0       	ldi	r23, 0x01	; 1
    1c8e:	1d c0       	rjmp	.+58     	; 0x1cca <__stack+0xbcb>
    1c90:	67 ec       	ldi	r22, 0xC7	; 199
    1c92:	71 e0       	ldi	r23, 0x01	; 1
    1c94:	1a c0       	rjmp	.+52     	; 0x1cca <__stack+0xbcb>
    1c96:	6e eb       	ldi	r22, 0xBE	; 190
    1c98:	71 e0       	ldi	r23, 0x01	; 1
    1c9a:	17 c0       	rjmp	.+46     	; 0x1cca <__stack+0xbcb>
    1c9c:	65 eb       	ldi	r22, 0xB5	; 181
    1c9e:	71 e0       	ldi	r23, 0x01	; 1
    1ca0:	14 c0       	rjmp	.+40     	; 0x1cca <__stack+0xbcb>
    1ca2:	64 e8       	ldi	r22, 0x84	; 132
    1ca4:	71 e0       	ldi	r23, 0x01	; 1
    1ca6:	11 c0       	rjmp	.+34     	; 0x1cca <__stack+0xbcb>
    1ca8:	60 e8       	ldi	r22, 0x80	; 128
    1caa:	71 e0       	ldi	r23, 0x01	; 1
    1cac:	0e c0       	rjmp	.+28     	; 0x1cca <__stack+0xbcb>
    1cae:	64 e8       	ldi	r22, 0x84	; 132
    1cb0:	71 e0       	ldi	r23, 0x01	; 1
    1cb2:	0b c0       	rjmp	.+22     	; 0x1cca <__stack+0xbcb>
    1cb4:	6e e6       	ldi	r22, 0x6E	; 110
    1cb6:	71 e0       	ldi	r23, 0x01	; 1
    1cb8:	08 c0       	rjmp	.+16     	; 0x1cca <__stack+0xbcb>
    1cba:	65 e5       	ldi	r22, 0x55	; 85
    1cbc:	71 e0       	ldi	r23, 0x01	; 1
    1cbe:	05 c0       	rjmp	.+10     	; 0x1cca <__stack+0xbcb>
    1cc0:	6d e5       	ldi	r22, 0x5D	; 93
    1cc2:	71 e0       	ldi	r23, 0x01	; 1
    1cc4:	02 c0       	rjmp	.+4      	; 0x1cca <__stack+0xbcb>
    1cc6:	67 e7       	ldi	r22, 0x77	; 119
    1cc8:	71 e0       	ldi	r23, 0x01	; 1
    1cca:	fb 01       	movw	r30, r22
    1ccc:	01 90       	ld	r0, Z+
    1cce:	00 20       	and	r0, r0
    1cd0:	e9 f7       	brne	.-6      	; 0x1ccc <__stack+0xbcd>
    1cd2:	31 97       	sbiw	r30, 0x01	; 1
    1cd4:	af 01       	movw	r20, r30
    1cd6:	46 1b       	sub	r20, r22
    1cd8:	57 0b       	sbc	r21, r23
    1cda:	c5 01       	movw	r24, r10
    1cdc:	0e 94 ad 6a 	call	0xd55a	; 0xd55a <TMR_stringCopy>
    1ce0:	60 e0       	ldi	r22, 0x00	; 0
    1ce2:	41 2c       	mov	r4, r1
    1ce4:	51 2c       	mov	r5, r1
    1ce6:	32 01       	movw	r6, r4
    1ce8:	33 c1       	rjmp	.+614    	; 0x1f50 <__stack+0xe51>
    1cea:	be 01       	movw	r22, r28
    1cec:	6f 5f       	subi	r22, 0xFF	; 255
    1cee:	7f 4f       	sbci	r23, 0xFF	; 255
    1cf0:	46 01       	movw	r8, r12
    1cf2:	f3 e9       	ldi	r31, 0x93	; 147
    1cf4:	8f 1a       	sub	r8, r31
    1cf6:	fc ef       	ldi	r31, 0xFC	; 252
    1cf8:	9f 0a       	sbc	r9, r31
    1cfa:	c4 01       	movw	r24, r8
    1cfc:	0c 96       	adiw	r24, 0x0c	; 12
    1cfe:	0e 94 ed 02 	call	0x5da	; 0x5da <TMR_hexDottedQuad>
    1d02:	0f 2e       	mov	r0, r31
    1d04:	fd e2       	ldi	r31, 0x2D	; 45
    1d06:	7f 2e       	mov	r7, r31
    1d08:	f0 2d       	mov	r31, r0
    1d0a:	7c 86       	std	Y+12, r7	; 0x0c
    1d0c:	be 01       	movw	r22, r28
    1d0e:	63 5f       	subi	r22, 0xF3	; 243
    1d10:	7f 4f       	sbci	r23, 0xFF	; 255
    1d12:	c4 01       	movw	r24, r8
    1d14:	08 96       	adiw	r24, 0x08	; 8
    1d16:	0e 94 ed 02 	call	0x5da	; 0x5da <TMR_hexDottedQuad>
    1d1a:	78 8e       	std	Y+24, r7	; 0x18
    1d1c:	82 e4       	ldi	r24, 0x42	; 66
    1d1e:	89 8f       	std	Y+25, r24	; 0x19
    1d20:	8c e4       	ldi	r24, 0x4C	; 76
    1d22:	8a 8f       	std	Y+26, r24	; 0x1a
    1d24:	be 01       	movw	r22, r28
    1d26:	65 5e       	subi	r22, 0xE5	; 229
    1d28:	7f 4f       	sbci	r23, 0xFF	; 255
    1d2a:	c4 01       	movw	r24, r8
    1d2c:	0e 94 ed 02 	call	0x5da	; 0x5da <TMR_hexDottedQuad>
    1d30:	45 e2       	ldi	r20, 0x25	; 37
    1d32:	50 e0       	ldi	r21, 0x00	; 0
    1d34:	be 01       	movw	r22, r28
    1d36:	6f 5f       	subi	r22, 0xFF	; 255
    1d38:	7f 4f       	sbci	r23, 0xFF	; 255
    1d3a:	c5 01       	movw	r24, r10
    1d3c:	0e 94 ad 6a 	call	0xd55a	; 0xd55a <TMR_stringCopy>
    1d40:	60 e0       	ldi	r22, 0x00	; 0
    1d42:	41 2c       	mov	r4, r1
    1d44:	51 2c       	mov	r5, r1
    1d46:	32 01       	movw	r6, r4
    1d48:	03 c1       	rjmp	.+518    	; 0x1f50 <__stack+0xe51>
    1d4a:	60 e0       	ldi	r22, 0x00	; 0
    1d4c:	0f 2e       	mov	r0, r31
    1d4e:	f3 e0       	ldi	r31, 0x03	; 3
    1d50:	4f 2e       	mov	r4, r31
    1d52:	51 2c       	mov	r5, r1
    1d54:	61 2c       	mov	r6, r1
    1d56:	74 2c       	mov	r7, r4
    1d58:	f0 2d       	mov	r31, r0
    1d5a:	fa c0       	rjmp	.+500    	; 0x1f50 <__stack+0xe51>
    1d5c:	60 e0       	ldi	r22, 0x00	; 0
    1d5e:	0f 2e       	mov	r0, r31
    1d60:	f3 e0       	ldi	r31, 0x03	; 3
    1d62:	4f 2e       	mov	r4, r31
    1d64:	51 2c       	mov	r5, r1
    1d66:	61 2c       	mov	r6, r1
    1d68:	74 2c       	mov	r7, r4
    1d6a:	f0 2d       	mov	r31, r0
    1d6c:	f1 c0       	rjmp	.+482    	; 0x1f50 <__stack+0xe51>
    1d6e:	60 e0       	ldi	r22, 0x00	; 0
    1d70:	0f 2e       	mov	r0, r31
    1d72:	f3 e0       	ldi	r31, 0x03	; 3
    1d74:	4f 2e       	mov	r4, r31
    1d76:	51 2c       	mov	r5, r1
    1d78:	61 2c       	mov	r6, r1
    1d7a:	74 2c       	mov	r7, r4
    1d7c:	f0 2d       	mov	r31, r0
    1d7e:	e8 c0       	rjmp	.+464    	; 0x1f50 <__stack+0xe51>
    1d80:	f6 01       	movw	r30, r12
    1d82:	eb 5e       	subi	r30, 0xEB	; 235
    1d84:	f9 4f       	sbci	r31, 0xF9	; 249
    1d86:	60 81       	ld	r22, Z
    1d88:	71 81       	ldd	r23, Z+1	; 0x01
    1d8a:	c6 01       	movw	r24, r12
    1d8c:	0e 94 4d 65 	call	0xca9a	; 0xca9a <TMR_SR_cmdGetReaderStats>
    1d90:	2b 01       	movw	r4, r22
    1d92:	3c 01       	movw	r6, r24
    1d94:	60 e0       	ldi	r22, 0x00	; 0
    1d96:	dc c0       	rjmp	.+440    	; 0x1f50 <__stack+0xe51>
    1d98:	f6 01       	movw	r30, r12
    1d9a:	eb 5e       	subi	r30, 0xEB	; 235
    1d9c:	f9 4f       	sbci	r31, 0xF9	; 249
    1d9e:	80 81       	ld	r24, Z
    1da0:	91 81       	ldd	r25, Z+1	; 0x01
    1da2:	da 01       	movw	r26, r20
    1da4:	8d 93       	st	X+, r24
    1da6:	9c 93       	st	X, r25
    1da8:	60 e0       	ldi	r22, 0x00	; 0
    1daa:	41 2c       	mov	r4, r1
    1dac:	51 2c       	mov	r5, r1
    1dae:	32 01       	movw	r6, r4
    1db0:	cf c0       	rjmp	.+414    	; 0x1f50 <__stack+0xe51>
    1db2:	6b e0       	ldi	r22, 0x0B	; 11
    1db4:	c6 01       	movw	r24, r12
    1db6:	0e 94 af 61 	call	0xc35e	; 0xc35e <TMR_SR_cmdGetReaderStatistics>
    1dba:	2b 01       	movw	r4, r22
    1dbc:	3c 01       	movw	r6, r24
    1dbe:	60 e0       	ldi	r22, 0x00	; 0
    1dc0:	c7 c0       	rjmp	.+398    	; 0x1f50 <__stack+0xe51>
    1dc2:	a6 01       	movw	r20, r12
    1dc4:	4f 53       	subi	r20, 0x3F	; 63
    1dc6:	5a 4f       	sbci	r21, 0xFA	; 250
    1dc8:	62 e1       	ldi	r22, 0x12	; 18
    1dca:	c6 01       	movw	r24, r12
    1dcc:	0e 94 41 57 	call	0xae82	; 0xae82 <TMR_SR_cmdGetReaderConfiguration>
    1dd0:	2b 01       	movw	r4, r22
    1dd2:	3c 01       	movw	r6, r24
    1dd4:	61 15       	cp	r22, r1
    1dd6:	71 05       	cpc	r23, r1
    1dd8:	81 05       	cpc	r24, r1
    1dda:	91 05       	cpc	r25, r1
    1ddc:	09 f0       	breq	.+2      	; 0x1de0 <__stack+0xce1>
    1dde:	55 c1       	rjmp	.+682    	; 0x208a <__stack+0xf8b>
    1de0:	f6 01       	movw	r30, r12
    1de2:	ef 53       	subi	r30, 0x3F	; 63
    1de4:	fa 4f       	sbci	r31, 0xFA	; 250
    1de6:	80 81       	ld	r24, Z
    1de8:	91 81       	ldd	r25, Z+1	; 0x01
    1dea:	81 30       	cpi	r24, 0x01	; 1
    1dec:	91 05       	cpc	r25, r1
    1dee:	79 f0       	breq	.+30     	; 0x1e0e <__stack+0xd0f>
    1df0:	28 f0       	brcs	.+10     	; 0x1dfc <__stack+0xcfd>
    1df2:	82 30       	cpi	r24, 0x02	; 2
    1df4:	91 05       	cpc	r25, r1
    1df6:	29 f0       	breq	.+10     	; 0x1e02 <__stack+0xd03>
    1df8:	01 96       	adiw	r24, 0x01	; 1
    1dfa:	31 f4       	brne	.+12     	; 0x1e08 <__stack+0xd09>
    1dfc:	61 ed       	ldi	r22, 0xD1	; 209
    1dfe:	71 e0       	ldi	r23, 0x01	; 1
    1e00:	08 c0       	rjmp	.+16     	; 0x1e12 <__stack+0xd13>
    1e02:	63 ef       	ldi	r22, 0xF3	; 243
    1e04:	71 e0       	ldi	r23, 0x01	; 1
    1e06:	05 c0       	rjmp	.+10     	; 0x1e12 <__stack+0xd13>
    1e08:	64 e8       	ldi	r22, 0x84	; 132
    1e0a:	71 e0       	ldi	r23, 0x01	; 1
    1e0c:	02 c0       	rjmp	.+4      	; 0x1e12 <__stack+0xd13>
    1e0e:	61 ee       	ldi	r22, 0xE1	; 225
    1e10:	71 e0       	ldi	r23, 0x01	; 1
    1e12:	a1 14       	cp	r10, r1
    1e14:	b1 04       	cpc	r11, r1
    1e16:	09 f4       	brne	.+2      	; 0x1e1a <__stack+0xd1b>
    1e18:	92 c0       	rjmp	.+292    	; 0x1f3e <__stack+0xe3f>
    1e1a:	fb 01       	movw	r30, r22
    1e1c:	01 90       	ld	r0, Z+
    1e1e:	00 20       	and	r0, r0
    1e20:	e9 f7       	brne	.-6      	; 0x1e1c <__stack+0xd1d>
    1e22:	31 97       	sbiw	r30, 0x01	; 1
    1e24:	af 01       	movw	r20, r30
    1e26:	46 1b       	sub	r20, r22
    1e28:	57 0b       	sbc	r21, r23
    1e2a:	c5 01       	movw	r24, r10
    1e2c:	0e 94 ad 6a 	call	0xd55a	; 0xd55a <TMR_stringCopy>
    1e30:	60 e0       	ldi	r22, 0x00	; 0
    1e32:	8e c0       	rjmp	.+284    	; 0x1f50 <__stack+0xe51>
    1e34:	f6 01       	movw	r30, r12
    1e36:	ed 53       	subi	r30, 0x3D	; 61
    1e38:	fa 4f       	sbci	r31, 0xFA	; 250
    1e3a:	80 81       	ld	r24, Z
    1e3c:	91 81       	ldd	r25, Z+1	; 0x01
    1e3e:	fa 01       	movw	r30, r20
    1e40:	91 83       	std	Z+1, r25	; 0x01
    1e42:	80 83       	st	Z, r24
    1e44:	60 e0       	ldi	r22, 0x00	; 0
    1e46:	41 2c       	mov	r4, r1
    1e48:	51 2c       	mov	r5, r1
    1e4a:	32 01       	movw	r6, r4
    1e4c:	81 c0       	rjmp	.+258    	; 0x1f50 <__stack+0xe51>
    1e4e:	f6 01       	movw	r30, r12
    1e50:	eb 53       	subi	r30, 0x3B	; 59
    1e52:	fa 4f       	sbci	r31, 0xFA	; 250
    1e54:	80 81       	ld	r24, Z
    1e56:	91 81       	ldd	r25, Z+1	; 0x01
    1e58:	da 01       	movw	r26, r20
    1e5a:	8d 93       	st	X+, r24
    1e5c:	9c 93       	st	X, r25
    1e5e:	60 e0       	ldi	r22, 0x00	; 0
    1e60:	41 2c       	mov	r4, r1
    1e62:	51 2c       	mov	r5, r1
    1e64:	32 01       	movw	r6, r4
    1e66:	74 c0       	rjmp	.+232    	; 0x1f50 <__stack+0xe51>
    1e68:	ae 01       	movw	r20, r28
    1e6a:	4f 5f       	subi	r20, 0xFF	; 255
    1e6c:	5f 4f       	sbci	r21, 0xFF	; 255
    1e6e:	65 e0       	ldi	r22, 0x05	; 5
    1e70:	c6 01       	movw	r24, r12
    1e72:	0e 94 80 67 	call	0xcf00	; 0xcf00 <TMR_SR_cmdGetReaderWriteTimeOut>
    1e76:	2b 01       	movw	r4, r22
    1e78:	3c 01       	movw	r6, r24
    1e7a:	67 2b       	or	r22, r23
    1e7c:	68 2b       	or	r22, r24
    1e7e:	69 2b       	or	r22, r25
    1e80:	d9 f4       	brne	.+54     	; 0x1eb8 <__stack+0xdb9>
    1e82:	11 35       	cpi	r17, 0x51	; 81
    1e84:	19 f0       	breq	.+6      	; 0x1e8c <__stack+0xd8d>
    1e86:	12 35       	cpi	r17, 0x52	; 82
    1e88:	39 f0       	breq	.+14     	; 0x1e98 <__stack+0xd99>
    1e8a:	0c c0       	rjmp	.+24     	; 0x1ea4 <__stack+0xda5>
    1e8c:	8a 81       	ldd	r24, Y+2	; 0x02
    1e8e:	9b 81       	ldd	r25, Y+3	; 0x03
    1e90:	f5 01       	movw	r30, r10
    1e92:	91 83       	std	Z+1, r25	; 0x01
    1e94:	80 83       	st	Z, r24
    1e96:	0e c0       	rjmp	.+28     	; 0x1eb4 <__stack+0xdb5>
    1e98:	99 81       	ldd	r25, Y+1	; 0x01
    1e9a:	81 e0       	ldi	r24, 0x01	; 1
    1e9c:	89 27       	eor	r24, r25
    1e9e:	d5 01       	movw	r26, r10
    1ea0:	8c 93       	st	X, r24
    1ea2:	08 c0       	rjmp	.+16     	; 0x1eb4 <__stack+0xdb5>
    1ea4:	0f 2e       	mov	r0, r31
    1ea6:	f9 e0       	ldi	r31, 0x09	; 9
    1ea8:	4f 2e       	mov	r4, r31
    1eaa:	51 2c       	mov	r5, r1
    1eac:	61 2c       	mov	r6, r1
    1eae:	f3 e0       	ldi	r31, 0x03	; 3
    1eb0:	7f 2e       	mov	r7, r31
    1eb2:	f0 2d       	mov	r31, r0
    1eb4:	60 e0       	ldi	r22, 0x00	; 0
    1eb6:	4c c0       	rjmp	.+152    	; 0x1f50 <__stack+0xe51>
    1eb8:	60 e0       	ldi	r22, 0x00	; 0
    1eba:	4a c0       	rjmp	.+148    	; 0x1f50 <__stack+0xe51>
    1ebc:	f6 01       	movw	r30, r12
    1ebe:	e7 5e       	subi	r30, 0xE7	; 231
    1ec0:	f9 4f       	sbci	r31, 0xF9	; 249
    1ec2:	80 81       	ld	r24, Z
    1ec4:	91 81       	ldd	r25, Z+1	; 0x01
    1ec6:	fa 01       	movw	r30, r20
    1ec8:	91 83       	std	Z+1, r25	; 0x01
    1eca:	80 83       	st	Z, r24
    1ecc:	60 e0       	ldi	r22, 0x00	; 0
    1ece:	41 2c       	mov	r4, r1
    1ed0:	51 2c       	mov	r5, r1
    1ed2:	32 01       	movw	r6, r4
    1ed4:	3d c0       	rjmp	.+122    	; 0x1f50 <__stack+0xe51>
    1ed6:	ba 01       	movw	r22, r20
    1ed8:	c6 01       	movw	r24, r12
    1eda:	0e 94 8a 54 	call	0xa914	; 0xa914 <TMR_SR_cmdGetQuantizationStep>
    1ede:	2b 01       	movw	r4, r22
    1ee0:	3c 01       	movw	r6, r24
    1ee2:	60 e0       	ldi	r22, 0x00	; 0
    1ee4:	35 c0       	rjmp	.+106    	; 0x1f50 <__stack+0xe51>
    1ee6:	ba 01       	movw	r22, r20
    1ee8:	c6 01       	movw	r24, r12
    1eea:	0e 94 8d 54 	call	0xa91a	; 0xa91a <TMR_SR_cmdGetMinimumFrequency>
    1eee:	2b 01       	movw	r4, r22
    1ef0:	3c 01       	movw	r6, r24
    1ef2:	60 e0       	ldi	r22, 0x00	; 0
    1ef4:	2d c0       	rjmp	.+90     	; 0x1f50 <__stack+0xe51>
    1ef6:	ba 01       	movw	r22, r20
    1ef8:	c6 01       	movw	r24, r12
    1efa:	0e 94 25 03 	call	0x64a	; 0x64a <TMR_SR_cmdGetPerAntennaTime>
    1efe:	2b 01       	movw	r4, r22
    1f00:	3c 01       	movw	r6, r24
    1f02:	60 e0       	ldi	r22, 0x00	; 0
    1f04:	25 c0       	rjmp	.+74     	; 0x1f50 <__stack+0xe51>
    1f06:	60 e0       	ldi	r22, 0x00	; 0
    1f08:	0f 2e       	mov	r0, r31
    1f0a:	f9 e0       	ldi	r31, 0x09	; 9
    1f0c:	4f 2e       	mov	r4, r31
    1f0e:	51 2c       	mov	r5, r1
    1f10:	61 2c       	mov	r6, r1
    1f12:	f3 e0       	ldi	r31, 0x03	; 3
    1f14:	7f 2e       	mov	r7, r31
    1f16:	f0 2d       	mov	r31, r0
    1f18:	1b c0       	rjmp	.+54     	; 0x1f50 <__stack+0xe51>
    1f1a:	64 e0       	ldi	r22, 0x04	; 4
    1f1c:	41 2c       	mov	r4, r1
    1f1e:	51 2c       	mov	r5, r1
    1f20:	32 01       	movw	r6, r4
    1f22:	16 c0       	rjmp	.+44     	; 0x1f50 <__stack+0xe51>
    1f24:	60 e0       	ldi	r22, 0x00	; 0
    1f26:	41 2c       	mov	r4, r1
    1f28:	51 2c       	mov	r5, r1
    1f2a:	32 01       	movw	r6, r4
    1f2c:	11 c0       	rjmp	.+34     	; 0x1f50 <__stack+0xe51>
    1f2e:	60 e0       	ldi	r22, 0x00	; 0
    1f30:	0f c0       	rjmp	.+30     	; 0x1f50 <__stack+0xe51>
    1f32:	60 e0       	ldi	r22, 0x00	; 0
    1f34:	0d c0       	rjmp	.+26     	; 0x1f50 <__stack+0xe51>
    1f36:	60 e0       	ldi	r22, 0x00	; 0
    1f38:	0b c0       	rjmp	.+22     	; 0x1f50 <__stack+0xe51>
    1f3a:	60 e0       	ldi	r22, 0x00	; 0
    1f3c:	09 c0       	rjmp	.+18     	; 0x1f50 <__stack+0xe51>
    1f3e:	60 e0       	ldi	r22, 0x00	; 0
    1f40:	0f 2e       	mov	r0, r31
    1f42:	fe e0       	ldi	r31, 0x0E	; 14
    1f44:	4f 2e       	mov	r4, r31
    1f46:	51 2c       	mov	r5, r1
    1f48:	61 2c       	mov	r6, r1
    1f4a:	f3 e0       	ldi	r31, 0x03	; 3
    1f4c:	7f 2e       	mov	r7, r31
    1f4e:	f0 2d       	mov	r31, r0
    1f50:	81 2f       	mov	r24, r17
    1f52:	90 e0       	ldi	r25, 0x00	; 0
    1f54:	fc 01       	movw	r30, r24
    1f56:	37 97       	sbiw	r30, 0x07	; 7
    1f58:	e8 36       	cpi	r30, 0x68	; 104
    1f5a:	f1 05       	cpc	r31, r1
    1f5c:	a0 f4       	brcc	.+40     	; 0x1f86 <__stack+0xe87>
    1f5e:	ea 54       	subi	r30, 0x4A	; 74
    1f60:	ff 4f       	sbci	r31, 0xFF	; 255
    1f62:	0c 94 d3 74 	jmp	0xe9a6	; 0xe9a6 <__tablejump2__>
    1f66:	a5 01       	movw	r20, r10
    1f68:	c6 01       	movw	r24, r12
    1f6a:	0e 94 41 57 	call	0xae82	; 0xae82 <TMR_SR_cmdGetReaderConfiguration>
    1f6e:	2b 01       	movw	r4, r22
    1f70:	3c 01       	movw	r6, r24
    1f72:	09 c0       	rjmp	.+18     	; 0x1f86 <__stack+0xe87>
    1f74:	95 01       	movw	r18, r10
    1f76:	43 2d       	mov	r20, r3
    1f78:	52 2d       	mov	r21, r2
    1f7a:	63 2d       	mov	r22, r3
    1f7c:	c6 01       	movw	r24, r12
    1f7e:	0e 94 db 57 	call	0xafb6	; 0xafb6 <TMR_SR_cmdGetProtocolConfiguration>
    1f82:	2b 01       	movw	r4, r22
    1f84:	3c 01       	movw	r6, r24
    1f86:	f7 01       	movw	r30, r14
    1f88:	ef 57       	subi	r30, 0x7F	; 127
    1f8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f8c:	ee 0f       	add	r30, r30
    1f8e:	ff 1f       	adc	r31, r31
    1f90:	ee 0f       	add	r30, r30
    1f92:	ff 1f       	adc	r31, r31
    1f94:	c6 01       	movw	r24, r12
    1f96:	80 58       	subi	r24, 0x80	; 128
    1f98:	9e 4f       	sbci	r25, 0xFE	; 254
    1f9a:	e8 0f       	add	r30, r24
    1f9c:	f9 1f       	adc	r31, r25
    1f9e:	80 81       	ld	r24, Z
    1fa0:	91 81       	ldd	r25, Z+1	; 0x01
    1fa2:	a2 81       	ldd	r26, Z+2	; 0x02
    1fa4:	b3 81       	ldd	r27, Z+3	; 0x03
    1fa6:	00 2e       	mov	r0, r16
    1fa8:	04 c0       	rjmp	.+8      	; 0x1fb2 <__stack+0xeb3>
    1faa:	b6 95       	lsr	r27
    1fac:	a7 95       	ror	r26
    1fae:	97 95       	ror	r25
    1fb0:	87 95       	ror	r24
    1fb2:	0a 94       	dec	r0
    1fb4:	d2 f7       	brpl	.-12     	; 0x1faa <__stack+0xeab>
    1fb6:	80 fd       	sbrc	r24, 0
    1fb8:	6c c0       	rjmp	.+216    	; 0x2092 <__stack+0xf93>
    1fba:	41 14       	cp	r4, r1
    1fbc:	51 04       	cpc	r5, r1
    1fbe:	61 04       	cpc	r6, r1
    1fc0:	71 04       	cpc	r7, r1
    1fc2:	39 f0       	breq	.+14     	; 0x1fd2 <__stack+0xed3>
    1fc4:	f3 e1       	ldi	r31, 0x13	; 19
    1fc6:	4f 16       	cp	r4, r31
    1fc8:	51 04       	cpc	r5, r1
    1fca:	61 04       	cpc	r6, r1
    1fcc:	f3 e0       	ldi	r31, 0x03	; 3
    1fce:	7f 06       	cpc	r7, r31
    1fd0:	29 f5       	brne	.+74     	; 0x201c <__stack+0xf1d>
    1fd2:	41 e0       	ldi	r20, 0x01	; 1
    1fd4:	50 e0       	ldi	r21, 0x00	; 0
    1fd6:	60 e0       	ldi	r22, 0x00	; 0
    1fd8:	70 e0       	ldi	r23, 0x00	; 0
    1fda:	00 2e       	mov	r0, r16
    1fdc:	04 c0       	rjmp	.+8      	; 0x1fe6 <__stack+0xee7>
    1fde:	44 0f       	add	r20, r20
    1fe0:	55 1f       	adc	r21, r21
    1fe2:	66 1f       	adc	r22, r22
    1fe4:	77 1f       	adc	r23, r23
    1fe6:	0a 94       	dec	r0
    1fe8:	d2 f7       	brpl	.-12     	; 0x1fde <__stack+0xedf>
    1fea:	c7 01       	movw	r24, r14
    1fec:	8b 57       	subi	r24, 0x7B	; 123
    1fee:	9f 4f       	sbci	r25, 0xFF	; 255
    1ff0:	88 0f       	add	r24, r24
    1ff2:	99 1f       	adc	r25, r25
    1ff4:	88 0f       	add	r24, r24
    1ff6:	99 1f       	adc	r25, r25
    1ff8:	96 01       	movw	r18, r12
    1ffa:	20 58       	subi	r18, 0x80	; 128
    1ffc:	3e 4f       	sbci	r19, 0xFE	; 254
    1ffe:	f9 01       	movw	r30, r18
    2000:	e8 0f       	add	r30, r24
    2002:	f9 1f       	adc	r31, r25
    2004:	80 81       	ld	r24, Z
    2006:	91 81       	ldd	r25, Z+1	; 0x01
    2008:	a2 81       	ldd	r26, Z+2	; 0x02
    200a:	b3 81       	ldd	r27, Z+3	; 0x03
    200c:	48 2b       	or	r20, r24
    200e:	59 2b       	or	r21, r25
    2010:	6a 2b       	or	r22, r26
    2012:	7b 2b       	or	r23, r27
    2014:	40 83       	st	Z, r20
    2016:	51 83       	std	Z+1, r21	; 0x01
    2018:	62 83       	std	Z+2, r22	; 0x02
    201a:	73 83       	std	Z+3, r23	; 0x03
    201c:	81 e0       	ldi	r24, 0x01	; 1
    201e:	90 e0       	ldi	r25, 0x00	; 0
    2020:	a0 e0       	ldi	r26, 0x00	; 0
    2022:	b0 e0       	ldi	r27, 0x00	; 0
    2024:	04 c0       	rjmp	.+8      	; 0x202e <__stack+0xf2f>
    2026:	88 0f       	add	r24, r24
    2028:	99 1f       	adc	r25, r25
    202a:	aa 1f       	adc	r26, r26
    202c:	bb 1f       	adc	r27, r27
    202e:	0a 95       	dec	r16
    2030:	d2 f7       	brpl	.-12     	; 0x2026 <__stack+0xf27>
    2032:	20 e8       	ldi	r18, 0x80	; 128
    2034:	c2 1a       	sub	r12, r18
    2036:	2e ef       	ldi	r18, 0xFE	; 254
    2038:	d2 0a       	sbc	r13, r18
    203a:	31 e8       	ldi	r19, 0x81	; 129
    203c:	e3 0e       	add	r14, r19
    203e:	f1 1c       	adc	r15, r1
    2040:	ee 0c       	add	r14, r14
    2042:	ff 1c       	adc	r15, r15
    2044:	ee 0c       	add	r14, r14
    2046:	ff 1c       	adc	r15, r15
    2048:	f6 01       	movw	r30, r12
    204a:	ee 0d       	add	r30, r14
    204c:	ff 1d       	adc	r31, r15
    204e:	40 81       	ld	r20, Z
    2050:	51 81       	ldd	r21, Z+1	; 0x01
    2052:	62 81       	ldd	r22, Z+2	; 0x02
    2054:	73 81       	ldd	r23, Z+3	; 0x03
    2056:	84 2b       	or	r24, r20
    2058:	95 2b       	or	r25, r21
    205a:	a6 2b       	or	r26, r22
    205c:	b7 2b       	or	r27, r23
    205e:	80 83       	st	Z, r24
    2060:	91 83       	std	Z+1, r25	; 0x01
    2062:	a2 83       	std	Z+2, r26	; 0x02
    2064:	b3 83       	std	Z+3, r27	; 0x03
    2066:	64 2d       	mov	r22, r4
    2068:	75 2d       	mov	r23, r5
    206a:	86 2d       	mov	r24, r6
    206c:	97 2d       	mov	r25, r7
    206e:	15 c0       	rjmp	.+42     	; 0x209a <__stack+0xf9b>
    2070:	69 e0       	ldi	r22, 0x09	; 9
    2072:	70 e0       	ldi	r23, 0x00	; 0
    2074:	80 e0       	ldi	r24, 0x00	; 0
    2076:	93 e0       	ldi	r25, 0x03	; 3
    2078:	10 c0       	rjmp	.+32     	; 0x209a <__stack+0xf9b>
    207a:	75 2d       	mov	r23, r5
    207c:	86 2d       	mov	r24, r6
    207e:	97 2d       	mov	r25, r7
    2080:	0c c0       	rjmp	.+24     	; 0x209a <__stack+0xf9b>
    2082:	75 2d       	mov	r23, r5
    2084:	86 2d       	mov	r24, r6
    2086:	97 2d       	mov	r25, r7
    2088:	08 c0       	rjmp	.+16     	; 0x209a <__stack+0xf9b>
    208a:	75 2d       	mov	r23, r5
    208c:	86 2d       	mov	r24, r6
    208e:	97 2d       	mov	r25, r7
    2090:	04 c0       	rjmp	.+8      	; 0x209a <__stack+0xf9b>
    2092:	64 2d       	mov	r22, r4
    2094:	75 2d       	mov	r23, r5
    2096:	86 2d       	mov	r24, r6
    2098:	97 2d       	mov	r25, r7
    209a:	cc 53       	subi	r28, 0x3C	; 60
    209c:	df 4f       	sbci	r29, 0xFF	; 255
    209e:	0f b6       	in	r0, 0x3f	; 63
    20a0:	f8 94       	cli
    20a2:	de bf       	out	0x3e, r29	; 62
    20a4:	0f be       	out	0x3f, r0	; 63
    20a6:	cd bf       	out	0x3d, r28	; 61
    20a8:	df 91       	pop	r29
    20aa:	cf 91       	pop	r28
    20ac:	1f 91       	pop	r17
    20ae:	0f 91       	pop	r16
    20b0:	ff 90       	pop	r15
    20b2:	ef 90       	pop	r14
    20b4:	df 90       	pop	r13
    20b6:	cf 90       	pop	r12
    20b8:	bf 90       	pop	r11
    20ba:	af 90       	pop	r10
    20bc:	9f 90       	pop	r9
    20be:	8f 90       	pop	r8
    20c0:	7f 90       	pop	r7
    20c2:	6f 90       	pop	r6
    20c4:	5f 90       	pop	r5
    20c6:	4f 90       	pop	r4
    20c8:	3f 90       	pop	r3
    20ca:	2f 90       	pop	r2
    20cc:	08 95       	ret

000020ce <setPortValues>:
    20ce:	8f 92       	push	r8
    20d0:	9f 92       	push	r9
    20d2:	af 92       	push	r10
    20d4:	bf 92       	push	r11
    20d6:	cf 92       	push	r12
    20d8:	df 92       	push	r13
    20da:	ef 92       	push	r14
    20dc:	ff 92       	push	r15
    20de:	0f 93       	push	r16
    20e0:	1f 93       	push	r17
    20e2:	cf 93       	push	r28
    20e4:	df 93       	push	r29
    20e6:	cd b7       	in	r28, 0x3d	; 61
    20e8:	de b7       	in	r29, 0x3e	; 62
    20ea:	c0 5c       	subi	r28, 0xC0	; 192
    20ec:	d1 40       	sbci	r29, 0x01	; 1
    20ee:	0f b6       	in	r0, 0x3f	; 63
    20f0:	f8 94       	cli
    20f2:	de bf       	out	0x3e, r29	; 62
    20f4:	0f be       	out	0x3f, r0	; 63
    20f6:	cd bf       	out	0x3d, r28	; 61
    20f8:	6c 01       	movw	r12, r24
    20fa:	8b 01       	movw	r16, r22
    20fc:	7a 01       	movw	r14, r20
    20fe:	fc 01       	movw	r30, r24
    2100:	ec 52       	subi	r30, 0x2C	; 44
    2102:	fe 4f       	sbci	r31, 0xFE	; 254
    2104:	80 81       	ld	r24, Z
    2106:	91 81       	ldd	r25, Z+1	; 0x01
    2108:	89 2b       	or	r24, r25
    210a:	59 f4       	brne	.+22     	; 0x2122 <setPortValues+0x54>
    210c:	c6 01       	movw	r24, r12
    210e:	0e 94 ae 05 	call	0xb5c	; 0xb5c <initTxRxMapFromPorts>
    2112:	4b 01       	movw	r8, r22
    2114:	5c 01       	movw	r10, r24
    2116:	61 15       	cp	r22, r1
    2118:	71 05       	cpc	r23, r1
    211a:	81 05       	cpc	r24, r1
    211c:	91 05       	cpc	r25, r1
    211e:	09 f0       	breq	.+2      	; 0x2122 <setPortValues+0x54>
    2120:	89 c0       	rjmp	.+274    	; 0x2234 <setPortValues+0x166>
    2122:	f6 01       	movw	r30, r12
    2124:	ec 52       	subi	r30, 0x2C	; 44
    2126:	fe 4f       	sbci	r31, 0xFE	; 254
    2128:	a0 81       	ld	r26, Z
    212a:	b1 81       	ldd	r27, Z+1	; 0x01
    212c:	13 96       	adiw	r26, 0x03	; 3
    212e:	bc 90       	ld	r11, X
    2130:	13 97       	sbiw	r26, 0x03	; 3
    2132:	e6 5c       	subi	r30, 0xC6	; 198
    2134:	fb 4f       	sbci	r31, 0xFB	; 251
    2136:	81 e0       	ldi	r24, 0x01	; 1
    2138:	8e 0d       	add	r24, r14
    213a:	80 83       	st	Z, r24
    213c:	20 e0       	ldi	r18, 0x00	; 0
    213e:	30 e0       	ldi	r19, 0x00	; 0
    2140:	6a c0       	rjmp	.+212    	; 0x2216 <setPortValues+0x148>
    2142:	6d 91       	ld	r22, X+
    2144:	7c 91       	ld	r23, X
    2146:	11 97       	sbiw	r26, 0x01	; 1
    2148:	fc 01       	movw	r30, r24
    214a:	ee 0f       	add	r30, r30
    214c:	ff 1f       	adc	r31, r31
    214e:	e8 0f       	add	r30, r24
    2150:	f9 1f       	adc	r31, r25
    2152:	e6 0f       	add	r30, r22
    2154:	f7 1f       	adc	r31, r23
    2156:	a0 80       	ld	r10, Z
    2158:	f8 01       	movw	r30, r16
    215a:	60 81       	ld	r22, Z
    215c:	71 81       	ldd	r23, Z+1	; 0x01
    215e:	f9 01       	movw	r30, r18
    2160:	ee 0f       	add	r30, r30
    2162:	ff 1f       	adc	r31, r31
    2164:	ee 0f       	add	r30, r30
    2166:	ff 1f       	adc	r31, r31
    2168:	e2 0f       	add	r30, r18
    216a:	f3 1f       	adc	r31, r19
    216c:	e6 0f       	add	r30, r22
    216e:	f7 1f       	adc	r31, r23
    2170:	60 81       	ld	r22, Z
    2172:	a6 16       	cp	r10, r22
    2174:	49 f0       	breq	.+18     	; 0x2188 <setPortValues+0xba>
    2176:	01 96       	adiw	r24, 0x01	; 1
    2178:	02 c0       	rjmp	.+4      	; 0x217e <setPortValues+0xb0>
    217a:	80 e0       	ldi	r24, 0x00	; 0
    217c:	90 e0       	ldi	r25, 0x00	; 0
    217e:	4b 2d       	mov	r20, r11
    2180:	50 e0       	ldi	r21, 0x00	; 0
    2182:	84 17       	cp	r24, r20
    2184:	95 07       	cpc	r25, r21
    2186:	e8 f2       	brcs	.-70     	; 0x2142 <setPortValues+0x74>
    2188:	84 17       	cp	r24, r20
    218a:	95 07       	cpc	r25, r21
    218c:	09 f4       	brne	.+2      	; 0x2190 <setPortValues+0xc2>
    218e:	56 c0       	rjmp	.+172    	; 0x223c <setPortValues+0x16e>
    2190:	4d 91       	ld	r20, X+
    2192:	5c 91       	ld	r21, X
    2194:	11 97       	sbiw	r26, 0x01	; 1
    2196:	fc 01       	movw	r30, r24
    2198:	ee 0f       	add	r30, r30
    219a:	ff 1f       	adc	r31, r31
    219c:	e8 0f       	add	r30, r24
    219e:	f9 1f       	adc	r31, r25
    21a0:	e4 0f       	add	r30, r20
    21a2:	f5 1f       	adc	r31, r21
    21a4:	41 81       	ldd	r20, Z+1	; 0x01
    21a6:	f9 01       	movw	r30, r18
    21a8:	ee 0f       	add	r30, r30
    21aa:	ff 1f       	adc	r31, r31
    21ac:	ee 0f       	add	r30, r30
    21ae:	ff 1f       	adc	r31, r31
    21b0:	ee 0f       	add	r30, r30
    21b2:	ff 1f       	adc	r31, r31
    21b4:	e2 1b       	sub	r30, r18
    21b6:	f3 0b       	sbc	r31, r19
    21b8:	61 e0       	ldi	r22, 0x01	; 1
    21ba:	70 e0       	ldi	r23, 0x00	; 0
    21bc:	6c 0f       	add	r22, r28
    21be:	7d 1f       	adc	r23, r29
    21c0:	e6 0f       	add	r30, r22
    21c2:	f7 1f       	adc	r31, r23
    21c4:	40 83       	st	Z, r20
    21c6:	ac 01       	movw	r20, r24
    21c8:	44 0f       	add	r20, r20
    21ca:	55 1f       	adc	r21, r21
    21cc:	44 0f       	add	r20, r20
    21ce:	55 1f       	adc	r21, r21
    21d0:	44 0f       	add	r20, r20
    21d2:	55 1f       	adc	r21, r21
    21d4:	fa 01       	movw	r30, r20
    21d6:	e8 1b       	sub	r30, r24
    21d8:	f9 0b       	sbc	r31, r25
    21da:	cf 01       	movw	r24, r30
    21dc:	01 96       	adiw	r24, 0x01	; 1
    21de:	86 0f       	add	r24, r22
    21e0:	97 1f       	adc	r25, r23
    21e2:	a7 01       	movw	r20, r14
    21e4:	44 0f       	add	r20, r20
    21e6:	55 1f       	adc	r21, r21
    21e8:	84 0f       	add	r24, r20
    21ea:	95 1f       	adc	r25, r21
    21ec:	f8 01       	movw	r30, r16
    21ee:	40 81       	ld	r20, Z
    21f0:	51 81       	ldd	r21, Z+1	; 0x01
    21f2:	f9 01       	movw	r30, r18
    21f4:	ee 0f       	add	r30, r30
    21f6:	ff 1f       	adc	r31, r31
    21f8:	ee 0f       	add	r30, r30
    21fa:	ff 1f       	adc	r31, r31
    21fc:	e2 0f       	add	r30, r18
    21fe:	f3 1f       	adc	r31, r19
    2200:	e4 0f       	add	r30, r20
    2202:	f5 1f       	adc	r31, r21
    2204:	41 81       	ldd	r20, Z+1	; 0x01
    2206:	52 81       	ldd	r21, Z+2	; 0x02
    2208:	63 81       	ldd	r22, Z+3	; 0x03
    220a:	74 81       	ldd	r23, Z+4	; 0x04
    220c:	fc 01       	movw	r30, r24
    220e:	51 83       	std	Z+1, r21	; 0x01
    2210:	40 83       	st	Z, r20
    2212:	2f 5f       	subi	r18, 0xFF	; 255
    2214:	3f 4f       	sbci	r19, 0xFF	; 255
    2216:	f8 01       	movw	r30, r16
    2218:	63 81       	ldd	r22, Z+3	; 0x03
    221a:	86 2f       	mov	r24, r22
    221c:	90 e0       	ldi	r25, 0x00	; 0
    221e:	28 17       	cp	r18, r24
    2220:	39 07       	cpc	r19, r25
    2222:	08 f4       	brcc	.+2      	; 0x2226 <setPortValues+0x158>
    2224:	aa cf       	rjmp	.-172    	; 0x217a <setPortValues+0xac>
    2226:	ae 01       	movw	r20, r28
    2228:	4f 5f       	subi	r20, 0xFF	; 255
    222a:	5f 4f       	sbci	r21, 0xFF	; 255
    222c:	c6 01       	movw	r24, r12
    222e:	0e 94 71 4a 	call	0x94e2	; 0x94e2 <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime>
    2232:	08 c0       	rjmp	.+16     	; 0x2244 <setPortValues+0x176>
    2234:	79 2d       	mov	r23, r9
    2236:	8a 2d       	mov	r24, r10
    2238:	9b 2d       	mov	r25, r11
    223a:	04 c0       	rjmp	.+8      	; 0x2244 <setPortValues+0x176>
    223c:	64 e0       	ldi	r22, 0x04	; 4
    223e:	70 e0       	ldi	r23, 0x00	; 0
    2240:	80 e0       	ldi	r24, 0x00	; 0
    2242:	93 e0       	ldi	r25, 0x03	; 3
    2244:	c0 54       	subi	r28, 0x40	; 64
    2246:	de 4f       	sbci	r29, 0xFE	; 254
    2248:	0f b6       	in	r0, 0x3f	; 63
    224a:	f8 94       	cli
    224c:	de bf       	out	0x3e, r29	; 62
    224e:	0f be       	out	0x3f, r0	; 63
    2250:	cd bf       	out	0x3d, r28	; 61
    2252:	df 91       	pop	r29
    2254:	cf 91       	pop	r28
    2256:	1f 91       	pop	r17
    2258:	0f 91       	pop	r16
    225a:	ff 90       	pop	r15
    225c:	ef 90       	pop	r14
    225e:	df 90       	pop	r13
    2260:	cf 90       	pop	r12
    2262:	bf 90       	pop	r11
    2264:	af 90       	pop	r10
    2266:	9f 90       	pop	r9
    2268:	8f 90       	pop	r8
    226a:	08 95       	ret

0000226c <TMR_SR_boot>:
    226c:	cf 92       	push	r12
    226e:	df 92       	push	r13
    2270:	ef 92       	push	r14
    2272:	ff 92       	push	r15
    2274:	0f 93       	push	r16
    2276:	1f 93       	push	r17
    2278:	cf 93       	push	r28
    227a:	df 93       	push	r29
    227c:	ec 01       	movw	r28, r24
    227e:	fc 01       	movw	r30, r24
    2280:	e3 58       	subi	r30, 0x83	; 131
    2282:	fc 4f       	sbci	r31, 0xFC	; 252
    2284:	80 81       	ld	r24, Z
    2286:	91 81       	ldd	r25, Z+1	; 0x01
    2288:	a2 81       	ldd	r26, Z+2	; 0x02
    228a:	b3 81       	ldd	r27, Z+3	; 0x03
    228c:	89 2b       	or	r24, r25
    228e:	8a 2b       	or	r24, r26
    2290:	8b 2b       	or	r24, r27
    2292:	51 f4       	brne	.+20     	; 0x22a8 <TMR_SR_boot+0x3c>
    2294:	ce 01       	movw	r24, r28
    2296:	0e 94 c8 37 	call	0x6f90	; 0x6f90 <TMR_SR_cmdBootFirmware>
    229a:	8b 01       	movw	r16, r22
    229c:	9c 01       	movw	r18, r24
    229e:	67 2b       	or	r22, r23
    22a0:	68 2b       	or	r22, r24
    22a2:	69 2b       	or	r22, r25
    22a4:	21 f0       	breq	.+8      	; 0x22ae <TMR_SR_boot+0x42>
    22a6:	6f c0       	rjmp	.+222    	; 0x2386 <TMR_SR_boot+0x11a>
    22a8:	00 e0       	ldi	r16, 0x00	; 0
    22aa:	10 e0       	ldi	r17, 0x00	; 0
    22ac:	98 01       	movw	r18, r16
    22ae:	80 e1       	ldi	r24, 0x10	; 16
    22b0:	fe 01       	movw	r30, r28
    22b2:	ec 56       	subi	r30, 0x6C	; 108
    22b4:	fc 4f       	sbci	r31, 0xFC	; 252
    22b6:	df 01       	movw	r26, r30
    22b8:	1d 92       	st	X+, r1
    22ba:	8a 95       	dec	r24
    22bc:	e9 f7       	brne	.-6      	; 0x22b8 <TMR_SR_boot+0x4c>
    22be:	81 e0       	ldi	r24, 0x01	; 1
    22c0:	90 e0       	ldi	r25, 0x00	; 0
    22c2:	34 c0       	rjmp	.+104    	; 0x232c <TMR_SR_boot+0xc0>
    22c4:	fc 01       	movw	r30, r24
    22c6:	99 23       	and	r25, r25
    22c8:	0c f4       	brge	.+2      	; 0x22cc <TMR_SR_boot+0x60>
    22ca:	7f 96       	adiw	r30, 0x1f	; 31
    22cc:	f5 95       	asr	r31
    22ce:	e7 95       	ror	r30
    22d0:	f5 95       	asr	r31
    22d2:	e7 95       	ror	r30
    22d4:	f5 95       	asr	r31
    22d6:	e7 95       	ror	r30
    22d8:	f5 95       	asr	r31
    22da:	e7 95       	ror	r30
    22dc:	f5 95       	asr	r31
    22de:	e7 95       	ror	r30
    22e0:	dc 01       	movw	r26, r24
    22e2:	af 71       	andi	r26, 0x1F	; 31
    22e4:	bb 27       	eor	r27, r27
    22e6:	41 e0       	ldi	r20, 0x01	; 1
    22e8:	50 e0       	ldi	r21, 0x00	; 0
    22ea:	60 e0       	ldi	r22, 0x00	; 0
    22ec:	70 e0       	ldi	r23, 0x00	; 0
    22ee:	04 c0       	rjmp	.+8      	; 0x22f8 <TMR_SR_boot+0x8c>
    22f0:	44 0f       	add	r20, r20
    22f2:	55 1f       	adc	r21, r21
    22f4:	66 1f       	adc	r22, r22
    22f6:	77 1f       	adc	r23, r23
    22f8:	aa 95       	dec	r26
    22fa:	d2 f7       	brpl	.-12     	; 0x22f0 <TMR_SR_boot+0x84>
    22fc:	eb 57       	subi	r30, 0x7B	; 123
    22fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2300:	ee 0f       	add	r30, r30
    2302:	ff 1f       	adc	r31, r31
    2304:	ee 0f       	add	r30, r30
    2306:	ff 1f       	adc	r31, r31
    2308:	de 01       	movw	r26, r28
    230a:	a0 58       	subi	r26, 0x80	; 128
    230c:	be 4f       	sbci	r27, 0xFE	; 254
    230e:	ea 0f       	add	r30, r26
    2310:	fb 1f       	adc	r31, r27
    2312:	c0 80       	ld	r12, Z
    2314:	d1 80       	ldd	r13, Z+1	; 0x01
    2316:	e2 80       	ldd	r14, Z+2	; 0x02
    2318:	f3 80       	ldd	r15, Z+3	; 0x03
    231a:	4c 29       	or	r20, r12
    231c:	5d 29       	or	r21, r13
    231e:	6e 29       	or	r22, r14
    2320:	7f 29       	or	r23, r15
    2322:	40 83       	st	Z, r20
    2324:	51 83       	std	Z+1, r21	; 0x01
    2326:	62 83       	std	Z+2, r22	; 0x02
    2328:	73 83       	std	Z+3, r23	; 0x03
    232a:	01 96       	adiw	r24, 0x01	; 1
    232c:	81 37       	cpi	r24, 0x71	; 113
    232e:	91 05       	cpc	r25, r1
    2330:	4c f2       	brlt	.-110    	; 0x22c4 <TMR_SR_boot+0x58>
    2332:	80 e0       	ldi	r24, 0x00	; 0
    2334:	90 e0       	ldi	r25, 0x00	; 0
    2336:	1e c0       	rjmp	.+60     	; 0x2374 <TMR_SR_boot+0x108>
    2338:	dc 01       	movw	r26, r24
    233a:	ab 57       	subi	r26, 0x7B	; 123
    233c:	bf 4f       	sbci	r27, 0xFF	; 255
    233e:	aa 0f       	add	r26, r26
    2340:	bb 1f       	adc	r27, r27
    2342:	aa 0f       	add	r26, r26
    2344:	bb 1f       	adc	r27, r27
    2346:	ae 01       	movw	r20, r28
    2348:	40 58       	subi	r20, 0x80	; 128
    234a:	5e 4f       	sbci	r21, 0xFE	; 254
    234c:	a4 0f       	add	r26, r20
    234e:	b5 1f       	adc	r27, r21
    2350:	cd 90       	ld	r12, X+
    2352:	dd 90       	ld	r13, X+
    2354:	ed 90       	ld	r14, X+
    2356:	fc 90       	ld	r15, X
    2358:	fc 01       	movw	r30, r24
    235a:	ef 57       	subi	r30, 0x7F	; 127
    235c:	ff 4f       	sbci	r31, 0xFF	; 255
    235e:	ee 0f       	add	r30, r30
    2360:	ff 1f       	adc	r31, r31
    2362:	ee 0f       	add	r30, r30
    2364:	ff 1f       	adc	r31, r31
    2366:	e4 0f       	add	r30, r20
    2368:	f5 1f       	adc	r31, r21
    236a:	c0 82       	st	Z, r12
    236c:	d1 82       	std	Z+1, r13	; 0x01
    236e:	e2 82       	std	Z+2, r14	; 0x02
    2370:	f3 82       	std	Z+3, r15	; 0x03
    2372:	01 96       	adiw	r24, 0x01	; 1
    2374:	84 30       	cpi	r24, 0x04	; 4
    2376:	91 05       	cpc	r25, r1
    2378:	fc f2       	brlt	.-66     	; 0x2338 <TMR_SR_boot+0xcc>
    237a:	fe 01       	movw	r30, r28
    237c:	ee 57       	subi	r30, 0x7E	; 126
    237e:	fc 4f       	sbci	r31, 0xFC	; 252
    2380:	80 81       	ld	r24, Z
    2382:	8d ab       	std	Y+53, r24	; 0x35
    2384:	1c aa       	std	Y+52, r1	; 0x34
    2386:	c9 01       	movw	r24, r18
    2388:	b8 01       	movw	r22, r16
    238a:	df 91       	pop	r29
    238c:	cf 91       	pop	r28
    238e:	1f 91       	pop	r17
    2390:	0f 91       	pop	r16
    2392:	ff 90       	pop	r15
    2394:	ef 90       	pop	r14
    2396:	df 90       	pop	r13
    2398:	cf 90       	pop	r12
    239a:	08 95       	ret

0000239c <TMR_SR_getVersion>:
    239c:	0f 93       	push	r16
    239e:	1f 93       	push	r17
    23a0:	cf 93       	push	r28
    23a2:	df 93       	push	r29
    23a4:	ec 01       	movw	r28, r24
    23a6:	8c 01       	movw	r16, r24
    23a8:	00 58       	subi	r16, 0x80	; 128
    23aa:	1e 4f       	sbci	r17, 0xFE	; 254
    23ac:	d8 01       	movw	r26, r16
    23ae:	18 96       	adiw	r26, 0x08	; 8
    23b0:	ed 91       	ld	r30, X+
    23b2:	fc 91       	ld	r31, X
    23b4:	19 97       	sbiw	r26, 0x09	; 9
    23b6:	30 97       	sbiw	r30, 0x00	; 0
    23b8:	69 f0       	breq	.+26     	; 0x23d4 <TMR_SR_getVersion+0x38>
    23ba:	a0 5b       	subi	r26, 0xB0	; 176
    23bc:	bf 4f       	sbci	r27, 0xFF	; 255
    23be:	4d 91       	ld	r20, X+
    23c0:	5d 91       	ld	r21, X+
    23c2:	6d 91       	ld	r22, X+
    23c4:	7c 91       	ld	r23, X
    23c6:	c8 01       	movw	r24, r16
    23c8:	09 95       	icall
    23ca:	61 15       	cp	r22, r1
    23cc:	71 05       	cpc	r23, r1
    23ce:	81 05       	cpc	r24, r1
    23d0:	91 05       	cpc	r25, r1
    23d2:	c9 f5       	brne	.+114    	; 0x2446 <TMR_SR_getVersion+0xaa>
    23d4:	fe 01       	movw	r30, r28
    23d6:	e0 58       	subi	r30, 0x80	; 128
    23d8:	fe 4f       	sbci	r31, 0xFE	; 254
    23da:	04 84       	ldd	r0, Z+12	; 0x0c
    23dc:	f5 85       	ldd	r31, Z+13	; 0x0d
    23de:	e0 2d       	mov	r30, r0
    23e0:	c8 01       	movw	r24, r16
    23e2:	09 95       	icall
    23e4:	61 15       	cp	r22, r1
    23e6:	71 05       	cpc	r23, r1
    23e8:	81 05       	cpc	r24, r1
    23ea:	91 05       	cpc	r25, r1
    23ec:	01 f1       	breq	.+64     	; 0x242e <TMR_SR_getVersion+0x92>
    23ee:	62 30       	cpi	r22, 0x02	; 2
    23f0:	71 05       	cpc	r23, r1
    23f2:	81 05       	cpc	r24, r1
    23f4:	b3 e0       	ldi	r27, 0x03	; 3
    23f6:	9b 07       	cpc	r25, r27
    23f8:	51 f5       	brne	.+84     	; 0x244e <TMR_SR_getVersion+0xb2>
    23fa:	19 c0       	rjmp	.+50     	; 0x242e <TMR_SR_getVersion+0x92>
    23fc:	21 e0       	ldi	r18, 0x01	; 1
    23fe:	2d 83       	std	Y+5, r18	; 0x05
    2400:	46 2f       	mov	r20, r22
    2402:	37 2f       	mov	r19, r23
    2404:	28 2f       	mov	r18, r24
    2406:	2a c0       	rjmp	.+84     	; 0x245c <TMR_SR_getVersion+0xc0>
    2408:	67 30       	cpi	r22, 0x07	; 7
    240a:	71 05       	cpc	r23, r1
    240c:	81 05       	cpc	r24, r1
    240e:	21 e0       	ldi	r18, 0x01	; 1
    2410:	92 07       	cpc	r25, r18
    2412:	69 f0       	breq	.+26     	; 0x242e <TMR_SR_getVersion+0x92>
    2414:	61 30       	cpi	r22, 0x01	; 1
    2416:	71 05       	cpc	r23, r1
    2418:	81 05       	cpc	r24, r1
    241a:	a1 e0       	ldi	r26, 0x01	; 1
    241c:	9a 07       	cpc	r25, r26
    241e:	d9 f0       	breq	.+54     	; 0x2456 <TMR_SR_getVersion+0xba>
    2420:	81 e0       	ldi	r24, 0x01	; 1
    2422:	8d 83       	std	Y+5, r24	; 0x05
    2424:	41 e0       	ldi	r20, 0x01	; 1
    2426:	30 e0       	ldi	r19, 0x00	; 0
    2428:	20 e0       	ldi	r18, 0x00	; 0
    242a:	90 e0       	ldi	r25, 0x00	; 0
    242c:	17 c0       	rjmp	.+46     	; 0x245c <TMR_SR_getVersion+0xc0>
    242e:	be 01       	movw	r22, r28
    2430:	63 59       	subi	r22, 0x93	; 147
    2432:	7c 4f       	sbci	r23, 0xFC	; 252
    2434:	ce 01       	movw	r24, r28
    2436:	0e 94 7f 37 	call	0x6efe	; 0x6efe <TMR_SR_cmdVersion>
    243a:	61 15       	cp	r22, r1
    243c:	71 05       	cpc	r23, r1
    243e:	81 05       	cpc	r24, r1
    2440:	91 05       	cpc	r25, r1
    2442:	11 f7       	brne	.-60     	; 0x2408 <TMR_SR_getVersion+0x6c>
    2444:	db cf       	rjmp	.-74     	; 0x23fc <TMR_SR_getVersion+0x60>
    2446:	46 2f       	mov	r20, r22
    2448:	37 2f       	mov	r19, r23
    244a:	28 2f       	mov	r18, r24
    244c:	07 c0       	rjmp	.+14     	; 0x245c <TMR_SR_getVersion+0xc0>
    244e:	46 2f       	mov	r20, r22
    2450:	37 2f       	mov	r19, r23
    2452:	28 2f       	mov	r18, r24
    2454:	03 c0       	rjmp	.+6      	; 0x245c <TMR_SR_getVersion+0xc0>
    2456:	46 2f       	mov	r20, r22
    2458:	37 2f       	mov	r19, r23
    245a:	28 2f       	mov	r18, r24
    245c:	64 2f       	mov	r22, r20
    245e:	73 2f       	mov	r23, r19
    2460:	82 2f       	mov	r24, r18
    2462:	df 91       	pop	r29
    2464:	cf 91       	pop	r28
    2466:	1f 91       	pop	r17
    2468:	0f 91       	pop	r16
    246a:	08 95       	ret

0000246c <TMR_SR_connect>:
    246c:	cf 92       	push	r12
    246e:	df 92       	push	r13
    2470:	ef 92       	push	r14
    2472:	ff 92       	push	r15
    2474:	0f 93       	push	r16
    2476:	1f 93       	push	r17
    2478:	cf 93       	push	r28
    247a:	df 93       	push	r29
    247c:	ec 01       	movw	r28, r24
    247e:	8c 01       	movw	r16, r24
    2480:	00 58       	subi	r16, 0x80	; 128
    2482:	1e 4f       	sbci	r17, 0xFE	; 254
    2484:	8d 81       	ldd	r24, Y+5	; 0x05
    2486:	81 11       	cpse	r24, r1
    2488:	0c c0       	rjmp	.+24     	; 0x24a2 <TMR_SR_connect+0x36>
    248a:	f8 01       	movw	r30, r16
    248c:	02 80       	ldd	r0, Z+2	; 0x02
    248e:	f3 81       	ldd	r31, Z+3	; 0x03
    2490:	e0 2d       	mov	r30, r0
    2492:	c8 01       	movw	r24, r16
    2494:	09 95       	icall
    2496:	61 15       	cp	r22, r1
    2498:	71 05       	cpc	r23, r1
    249a:	81 05       	cpc	r24, r1
    249c:	91 05       	cpc	r25, r1
    249e:	09 f0       	breq	.+2      	; 0x24a2 <TMR_SR_connect+0x36>
    24a0:	49 c0       	rjmp	.+146    	; 0x2534 <TMR_SR_connect+0xc8>
    24a2:	ce 01       	movw	r24, r28
    24a4:	7b df       	rcall	.-266    	; 0x239c <TMR_SR_getVersion>
    24a6:	6b 01       	movw	r12, r22
    24a8:	7c 01       	movw	r14, r24
    24aa:	61 15       	cp	r22, r1
    24ac:	71 05       	cpc	r23, r1
    24ae:	81 05       	cpc	r24, r1
    24b0:	91 05       	cpc	r25, r1
    24b2:	89 f0       	breq	.+34     	; 0x24d6 <TMR_SR_connect+0x6a>
    24b4:	61 30       	cpi	r22, 0x01	; 1
    24b6:	71 05       	cpc	r23, r1
    24b8:	81 05       	cpc	r24, r1
    24ba:	91 05       	cpc	r25, r1
    24bc:	09 f4       	brne	.+2      	; 0x24c0 <TMR_SR_connect+0x54>
    24be:	3e c0       	rjmp	.+124    	; 0x253c <TMR_SR_connect+0xd0>
    24c0:	c0 58       	subi	r28, 0x80	; 128
    24c2:	de 4f       	sbci	r29, 0xFE	; 254
    24c4:	ea 85       	ldd	r30, Y+10	; 0x0a
    24c6:	fb 85       	ldd	r31, Y+11	; 0x0b
    24c8:	c8 01       	movw	r24, r16
    24ca:	09 95       	icall
    24cc:	4c 2d       	mov	r20, r12
    24ce:	3d 2d       	mov	r19, r13
    24d0:	2e 2d       	mov	r18, r14
    24d2:	9f 2d       	mov	r25, r15
    24d4:	3f c0       	rjmp	.+126    	; 0x2554 <TMR_SR_connect+0xe8>
    24d6:	fe 01       	movw	r30, r28
    24d8:	ef 58       	subi	r30, 0x8F	; 143
    24da:	fc 4f       	sbci	r31, 0xFC	; 252
    24dc:	80 81       	ld	r24, Z
    24de:	98 ee       	ldi	r25, 0xE8	; 232
    24e0:	98 0f       	add	r25, r24
    24e2:	92 30       	cpi	r25, 0x02	; 2
    24e4:	20 f0       	brcs	.+8      	; 0x24ee <TMR_SR_connect+0x82>
    24e6:	80 32       	cpi	r24, 0x20	; 32
    24e8:	11 f0       	breq	.+4      	; 0x24ee <TMR_SR_connect+0x82>
    24ea:	80 33       	cpi	r24, 0x30	; 48
    24ec:	29 f4       	brne	.+10     	; 0x24f8 <TMR_SR_connect+0x8c>
    24ee:	81 e0       	ldi	r24, 0x01	; 1
    24f0:	fe 01       	movw	r30, r28
    24f2:	e6 50       	subi	r30, 0x06	; 6
    24f4:	fa 4f       	sbci	r31, 0xFA	; 250
    24f6:	80 83       	st	Z, r24
    24f8:	ce 01       	movw	r24, r28
    24fa:	0e 94 43 6b 	call	0xd686	; 0xd686 <checkForAvailableFeatures>
    24fe:	fe 01       	movw	r30, r28
    2500:	e0 53       	subi	r30, 0x30	; 48
    2502:	fe 4f       	sbci	r31, 0xFE	; 254
    2504:	40 81       	ld	r20, Z
    2506:	51 81       	ldd	r21, Z+1	; 0x01
    2508:	62 81       	ldd	r22, Z+2	; 0x02
    250a:	73 81       	ldd	r23, Z+3	; 0x03
    250c:	ce 01       	movw	r24, r28
    250e:	ae de       	rcall	.-676    	; 0x226c <TMR_SR_boot>
    2510:	61 15       	cp	r22, r1
    2512:	71 05       	cpc	r23, r1
    2514:	81 05       	cpc	r24, r1
    2516:	91 05       	cpc	r25, r1
    2518:	b1 f0       	breq	.+44     	; 0x2546 <TMR_SR_connect+0xda>
    251a:	63 31       	cpi	r22, 0x13	; 19
    251c:	71 05       	cpc	r23, r1
    251e:	81 05       	cpc	r24, r1
    2520:	23 e0       	ldi	r18, 0x03	; 3
    2522:	92 07       	cpc	r25, r18
    2524:	a1 f4       	brne	.+40     	; 0x254e <TMR_SR_connect+0xe2>
    2526:	81 e0       	ldi	r24, 0x01	; 1
    2528:	8d 83       	std	Y+5, r24	; 0x05
    252a:	41 e0       	ldi	r20, 0x01	; 1
    252c:	30 e0       	ldi	r19, 0x00	; 0
    252e:	20 e0       	ldi	r18, 0x00	; 0
    2530:	90 e0       	ldi	r25, 0x00	; 0
    2532:	10 c0       	rjmp	.+32     	; 0x2554 <TMR_SR_connect+0xe8>
    2534:	46 2f       	mov	r20, r22
    2536:	37 2f       	mov	r19, r23
    2538:	28 2f       	mov	r18, r24
    253a:	0c c0       	rjmp	.+24     	; 0x2554 <TMR_SR_connect+0xe8>
    253c:	46 2f       	mov	r20, r22
    253e:	3d 2d       	mov	r19, r13
    2540:	2e 2d       	mov	r18, r14
    2542:	9f 2d       	mov	r25, r15
    2544:	07 c0       	rjmp	.+14     	; 0x2554 <TMR_SR_connect+0xe8>
    2546:	46 2f       	mov	r20, r22
    2548:	37 2f       	mov	r19, r23
    254a:	28 2f       	mov	r18, r24
    254c:	03 c0       	rjmp	.+6      	; 0x2554 <TMR_SR_connect+0xe8>
    254e:	46 2f       	mov	r20, r22
    2550:	37 2f       	mov	r19, r23
    2552:	28 2f       	mov	r18, r24
    2554:	64 2f       	mov	r22, r20
    2556:	73 2f       	mov	r23, r19
    2558:	82 2f       	mov	r24, r18
    255a:	df 91       	pop	r29
    255c:	cf 91       	pop	r28
    255e:	1f 91       	pop	r17
    2560:	0f 91       	pop	r16
    2562:	ff 90       	pop	r15
    2564:	ef 90       	pop	r14
    2566:	df 90       	pop	r13
    2568:	cf 90       	pop	r12
    256a:	08 95       	ret

0000256c <validateParams>:
    256c:	cf 92       	push	r12
    256e:	df 92       	push	r13
    2570:	ff 92       	push	r15
    2572:	0f 93       	push	r16
    2574:	1f 93       	push	r17
    2576:	cf 93       	push	r28
    2578:	df 93       	push	r29
    257a:	bc 01       	movw	r22, r24
    257c:	ec 01       	movw	r28, r24
    257e:	0e 81       	ldd	r16, Y+6	; 0x06
    2580:	1f 81       	ldd	r17, Y+7	; 0x07
    2582:	f8 01       	movw	r30, r16
    2584:	40 81       	ld	r20, Z
    2586:	51 81       	ldd	r21, Z+1	; 0x01
    2588:	91 e0       	ldi	r25, 0x01	; 1
    258a:	f1 2c       	mov	r15, r1
    258c:	5e c0       	rjmp	.+188    	; 0x264a <validateParams+0xde>
    258e:	e9 2f       	mov	r30, r25
    2590:	f0 e0       	ldi	r31, 0x00	; 0
    2592:	ee 0f       	add	r30, r30
    2594:	ff 1f       	adc	r31, r31
    2596:	e0 0f       	add	r30, r16
    2598:	f1 1f       	adc	r31, r17
    259a:	a0 81       	ld	r26, Z
    259c:	b1 81       	ldd	r27, Z+1	; 0x01
    259e:	ea 01       	movw	r28, r20
    25a0:	3c 85       	ldd	r19, Y+12	; 0x0c
    25a2:	1c 96       	adiw	r26, 0x0c	; 12
    25a4:	8c 91       	ld	r24, X
    25a6:	1c 97       	sbiw	r26, 0x0c	; 12
    25a8:	38 13       	cpse	r19, r24
    25aa:	54 c0       	rjmp	.+168    	; 0x2654 <validateParams+0xe8>
    25ac:	ef 85       	ldd	r30, Y+15	; 0x0f
    25ae:	f8 89       	ldd	r31, Y+16	; 0x10
    25b0:	30 97       	sbiw	r30, 0x00	; 0
    25b2:	21 f5       	brne	.+72     	; 0x25fc <validateParams+0x90>
    25b4:	1f 96       	adiw	r26, 0x0f	; 15
    25b6:	2d 91       	ld	r18, X+
    25b8:	3c 91       	ld	r19, X
    25ba:	50 97       	sbiw	r26, 0x10	; 16
    25bc:	23 2b       	or	r18, r19
    25be:	f1 f4       	brne	.+60     	; 0x25fc <validateParams+0x90>
    25c0:	cd 84       	ldd	r12, Y+13	; 0x0d
    25c2:	de 84       	ldd	r13, Y+14	; 0x0e
    25c4:	c1 14       	cp	r12, r1
    25c6:	d1 04       	cpc	r13, r1
    25c8:	41 f4       	brne	.+16     	; 0x25da <validateParams+0x6e>
    25ca:	1d 96       	adiw	r26, 0x0d	; 13
    25cc:	2d 91       	ld	r18, X+
    25ce:	3c 91       	ld	r19, X
    25d0:	1e 97       	sbiw	r26, 0x0e	; 14
    25d2:	23 2b       	or	r18, r19
    25d4:	11 f4       	brne	.+4      	; 0x25da <validateParams+0x6e>
    25d6:	f3 94       	inc	r15
    25d8:	11 c0       	rjmp	.+34     	; 0x25fc <validateParams+0x90>
    25da:	c1 14       	cp	r12, r1
    25dc:	d1 04       	cpc	r13, r1
    25de:	71 f0       	breq	.+28     	; 0x25fc <validateParams+0x90>
    25e0:	1d 96       	adiw	r26, 0x0d	; 13
    25e2:	2d 91       	ld	r18, X+
    25e4:	3c 91       	ld	r19, X
    25e6:	1e 97       	sbiw	r26, 0x0e	; 14
    25e8:	21 15       	cp	r18, r1
    25ea:	31 05       	cpc	r19, r1
    25ec:	39 f0       	breq	.+14     	; 0x25fc <validateParams+0x90>
    25ee:	e6 01       	movw	r28, r12
    25f0:	d8 80       	ld	r13, Y
    25f2:	e9 01       	movw	r28, r18
    25f4:	88 81       	ld	r24, Y
    25f6:	d8 12       	cpse	r13, r24
    25f8:	01 c0       	rjmp	.+2      	; 0x25fc <validateParams+0x90>
    25fa:	f3 94       	inc	r15
    25fc:	30 97       	sbiw	r30, 0x00	; 0
    25fe:	21 f1       	breq	.+72     	; 0x2648 <validateParams+0xdc>
    2600:	1f 96       	adiw	r26, 0x0f	; 15
    2602:	cd 91       	ld	r28, X+
    2604:	dc 91       	ld	r29, X
    2606:	50 97       	sbiw	r26, 0x10	; 16
    2608:	20 97       	sbiw	r28, 0x00	; 0
    260a:	f1 f0       	breq	.+60     	; 0x2648 <validateParams+0xdc>
    260c:	20 81       	ld	r18, Z
    260e:	88 81       	ld	r24, Y
    2610:	28 13       	cpse	r18, r24
    2612:	1a c0       	rjmp	.+52     	; 0x2648 <validateParams+0xdc>
    2614:	ea 01       	movw	r28, r20
    2616:	ed 85       	ldd	r30, Y+13	; 0x0d
    2618:	fe 85       	ldd	r31, Y+14	; 0x0e
    261a:	30 97       	sbiw	r30, 0x00	; 0
    261c:	41 f4       	brne	.+16     	; 0x262e <validateParams+0xc2>
    261e:	1d 96       	adiw	r26, 0x0d	; 13
    2620:	2d 91       	ld	r18, X+
    2622:	3c 91       	ld	r19, X
    2624:	1e 97       	sbiw	r26, 0x0e	; 14
    2626:	23 2b       	or	r18, r19
    2628:	11 f4       	brne	.+4      	; 0x262e <validateParams+0xc2>
    262a:	f3 94       	inc	r15
    262c:	0d c0       	rjmp	.+26     	; 0x2648 <validateParams+0xdc>
    262e:	30 97       	sbiw	r30, 0x00	; 0
    2630:	59 f0       	breq	.+22     	; 0x2648 <validateParams+0xdc>
    2632:	1d 96       	adiw	r26, 0x0d	; 13
    2634:	0d 90       	ld	r0, X+
    2636:	bc 91       	ld	r27, X
    2638:	a0 2d       	mov	r26, r0
    263a:	10 97       	sbiw	r26, 0x00	; 0
    263c:	29 f0       	breq	.+10     	; 0x2648 <validateParams+0xdc>
    263e:	20 81       	ld	r18, Z
    2640:	8c 91       	ld	r24, X
    2642:	28 13       	cpse	r18, r24
    2644:	01 c0       	rjmp	.+2      	; 0x2648 <validateParams+0xdc>
    2646:	f3 94       	inc	r15
    2648:	9f 5f       	subi	r25, 0xFF	; 255
    264a:	fb 01       	movw	r30, r22
    264c:	24 85       	ldd	r18, Z+12	; 0x0c
    264e:	92 17       	cp	r25, r18
    2650:	08 f4       	brcc	.+2      	; 0x2654 <validateParams+0xe8>
    2652:	9d cf       	rjmp	.-198    	; 0x258e <validateParams+0x22>
    2654:	4f 2d       	mov	r20, r15
    2656:	50 e0       	ldi	r21, 0x00	; 0
    2658:	82 2f       	mov	r24, r18
    265a:	90 e0       	ldi	r25, 0x00	; 0
    265c:	01 97       	sbiw	r24, 0x01	; 1
    265e:	48 17       	cp	r20, r24
    2660:	59 07       	cpc	r21, r25
    2662:	11 f0       	breq	.+4      	; 0x2668 <validateParams+0xfc>
    2664:	80 e0       	ldi	r24, 0x00	; 0
    2666:	01 c0       	rjmp	.+2      	; 0x266a <validateParams+0xfe>
    2668:	81 e0       	ldi	r24, 0x01	; 1
    266a:	df 91       	pop	r29
    266c:	cf 91       	pop	r28
    266e:	1f 91       	pop	r17
    2670:	0f 91       	pop	r16
    2672:	ff 90       	pop	r15
    2674:	df 90       	pop	r13
    2676:	cf 90       	pop	r12
    2678:	08 95       	ret

0000267a <setAntennaReadTimeHelper>:
    267a:	2f 92       	push	r2
    267c:	3f 92       	push	r3
    267e:	4f 92       	push	r4
    2680:	5f 92       	push	r5
    2682:	6f 92       	push	r6
    2684:	7f 92       	push	r7
    2686:	8f 92       	push	r8
    2688:	9f 92       	push	r9
    268a:	af 92       	push	r10
    268c:	bf 92       	push	r11
    268e:	cf 92       	push	r12
    2690:	df 92       	push	r13
    2692:	ef 92       	push	r14
    2694:	ff 92       	push	r15
    2696:	0f 93       	push	r16
    2698:	1f 93       	push	r17
    269a:	cf 93       	push	r28
    269c:	df 93       	push	r29
    269e:	cd b7       	in	r28, 0x3d	; 61
    26a0:	de b7       	in	r29, 0x3e	; 62
    26a2:	60 97       	sbiw	r28, 0x10	; 16
    26a4:	0f b6       	in	r0, 0x3f	; 63
    26a6:	f8 94       	cli
    26a8:	de bf       	out	0x3e, r29	; 62
    26aa:	0f be       	out	0x3f, r0	; 63
    26ac:	cd bf       	out	0x3d, r28	; 61
    26ae:	4c 01       	movw	r8, r24
    26b0:	1b 01       	movw	r2, r22
    26b2:	5e 83       	std	Y+6, r21	; 0x06
    26b4:	4d 83       	std	Y+5, r20	; 0x05
    26b6:	0f 83       	std	Y+7, r16	; 0x07
    26b8:	18 87       	std	Y+8, r17	; 0x08
    26ba:	29 87       	std	Y+9, r18	; 0x09
    26bc:	3a 87       	std	Y+10, r19	; 0x0a
    26be:	cb 86       	std	Y+11, r12	; 0x0b
    26c0:	dc 86       	std	Y+12, r13	; 0x0c
    26c2:	ed 86       	std	Y+13, r14	; 0x0d
    26c4:	fe 86       	std	Y+14, r15	; 0x0e
    26c6:	fc 01       	movw	r30, r24
    26c8:	ec 52       	subi	r30, 0x2C	; 44
    26ca:	fe 4f       	sbci	r31, 0xFE	; 254
    26cc:	80 81       	ld	r24, Z
    26ce:	91 81       	ldd	r25, Z+1	; 0x01
    26d0:	98 8b       	std	Y+16, r25	; 0x10
    26d2:	8f 87       	std	Y+15, r24	; 0x0f
    26d4:	db 01       	movw	r26, r22
    26d6:	8c 91       	ld	r24, X
    26d8:	81 30       	cpi	r24, 0x01	; 1
    26da:	79 f0       	breq	.+30     	; 0x26fa <setAntennaReadTimeHelper+0x80>
    26dc:	82 30       	cpi	r24, 0x02	; 2
    26de:	09 f4       	brne	.+2      	; 0x26e2 <setAntennaReadTimeHelper+0x68>
    26e0:	34 c1       	rjmp	.+616    	; 0x294a <setAntennaReadTimeHelper+0x2d0>
    26e2:	41 c1       	rjmp	.+642    	; 0x2966 <setAntennaReadTimeHelper+0x2ec>
    26e4:	f1 01       	movw	r30, r2
    26e6:	26 81       	ldd	r18, Z+6	; 0x06
    26e8:	37 81       	ldd	r19, Z+7	; 0x07
    26ea:	f9 01       	movw	r30, r18
    26ec:	e8 0f       	add	r30, r24
    26ee:	f9 1f       	adc	r31, r25
    26f0:	80 81       	ld	r24, Z
    26f2:	81 11       	cpse	r24, r1
    26f4:	5f 5f       	subi	r21, 0xFF	; 255
    26f6:	4f 5f       	subi	r20, 0xFF	; 255
    26f8:	02 c0       	rjmp	.+4      	; 0x26fe <setAntennaReadTimeHelper+0x84>
    26fa:	40 e0       	ldi	r20, 0x00	; 0
    26fc:	50 e0       	ldi	r21, 0x00	; 0
    26fe:	84 2f       	mov	r24, r20
    2700:	90 e0       	ldi	r25, 0x00	; 0
    2702:	d1 01       	movw	r26, r2
    2704:	1a 96       	adiw	r26, 0x0a	; 10
    2706:	2d 91       	ld	r18, X+
    2708:	3c 91       	ld	r19, X
    270a:	1b 97       	sbiw	r26, 0x0b	; 11
    270c:	82 17       	cp	r24, r18
    270e:	93 07       	cpc	r25, r19
    2710:	48 f3       	brcs	.-46     	; 0x26e4 <setAntennaReadTimeHelper+0x6a>
    2712:	85 2f       	mov	r24, r21
    2714:	90 e0       	ldi	r25, 0x00	; 0
    2716:	28 17       	cp	r18, r24
    2718:	39 07       	cpc	r19, r25
    271a:	09 f0       	breq	.+2      	; 0x271e <setAntennaReadTimeHelper+0xa4>
    271c:	2e c1       	rjmp	.+604    	; 0x297a <setAntennaReadTimeHelper+0x300>
    271e:	55 23       	and	r21, r21
    2720:	d9 f0       	breq	.+54     	; 0x2758 <setAntennaReadTimeHelper+0xde>
    2722:	45 2e       	mov	r4, r21
    2724:	51 2c       	mov	r5, r1
    2726:	61 2c       	mov	r6, r1
    2728:	71 2c       	mov	r7, r1
    272a:	6f 81       	ldd	r22, Y+7	; 0x07
    272c:	78 85       	ldd	r23, Y+8	; 0x08
    272e:	89 85       	ldd	r24, Y+9	; 0x09
    2730:	9a 85       	ldd	r25, Y+10	; 0x0a
    2732:	a3 01       	movw	r20, r6
    2734:	92 01       	movw	r18, r4
    2736:	0e 94 b1 74 	call	0xe962	; 0xe962 <__udivmodsi4>
    273a:	69 01       	movw	r12, r18
    273c:	7a 01       	movw	r14, r20
    273e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2740:	7c 85       	ldd	r23, Y+12	; 0x0c
    2742:	8d 85       	ldd	r24, Y+13	; 0x0d
    2744:	9e 85       	ldd	r25, Y+14	; 0x0e
    2746:	a3 01       	movw	r20, r6
    2748:	92 01       	movw	r18, r4
    274a:	0e 94 b1 74 	call	0xe962	; 0xe962 <__udivmodsi4>
    274e:	29 83       	std	Y+1, r18	; 0x01
    2750:	3a 83       	std	Y+2, r19	; 0x02
    2752:	4b 83       	std	Y+3, r20	; 0x03
    2754:	5c 83       	std	Y+4, r21	; 0x04
    2756:	07 c0       	rjmp	.+14     	; 0x2766 <setAntennaReadTimeHelper+0xec>
    2758:	19 82       	std	Y+1, r1	; 0x01
    275a:	1a 82       	std	Y+2, r1	; 0x02
    275c:	1b 82       	std	Y+3, r1	; 0x03
    275e:	1c 82       	std	Y+4, r1	; 0x04
    2760:	c1 2c       	mov	r12, r1
    2762:	d1 2c       	mov	r13, r1
    2764:	76 01       	movw	r14, r12
    2766:	50 e0       	ldi	r21, 0x00	; 0
    2768:	15 2f       	mov	r17, r21
    276a:	78 c0       	rjmp	.+240    	; 0x285c <setAntennaReadTimeHelper+0x1e2>
    276c:	d1 01       	movw	r26, r2
    276e:	16 96       	adiw	r26, 0x06	; 6
    2770:	ed 91       	ld	r30, X+
    2772:	fc 91       	ld	r31, X
    2774:	17 97       	sbiw	r26, 0x07	; 7
    2776:	e6 0f       	add	r30, r22
    2778:	f7 1f       	adc	r31, r23
    277a:	30 81       	ld	r19, Z
    277c:	ef 85       	ldd	r30, Y+15	; 0x0f
    277e:	f8 89       	ldd	r31, Y+16	; 0x10
    2780:	40 81       	ld	r20, Z
    2782:	51 81       	ldd	r21, Z+1	; 0x01
    2784:	82 2f       	mov	r24, r18
    2786:	90 e0       	ldi	r25, 0x00	; 0
    2788:	fc 01       	movw	r30, r24
    278a:	ee 0f       	add	r30, r30
    278c:	ff 1f       	adc	r31, r31
    278e:	8e 0f       	add	r24, r30
    2790:	9f 1f       	adc	r25, r31
    2792:	fa 01       	movw	r30, r20
    2794:	e8 0f       	add	r30, r24
    2796:	f9 1f       	adc	r31, r25
    2798:	80 81       	ld	r24, Z
    279a:	38 13       	cpse	r19, r24
    279c:	54 c0       	rjmp	.+168    	; 0x2846 <setAntennaReadTimeHelper+0x1cc>
    279e:	ad 81       	ldd	r26, Y+5	; 0x05
    27a0:	be 81       	ldd	r27, Y+6	; 0x06
    27a2:	4d 91       	ld	r20, X+
    27a4:	5c 91       	ld	r21, X
    27a6:	30 91 53 02 	lds	r19, 0x0253	; 0x800253 <idx.7338>
    27aa:	83 2f       	mov	r24, r19
    27ac:	90 e0       	ldi	r25, 0x00	; 0
    27ae:	5c 01       	movw	r10, r24
    27b0:	aa 0c       	add	r10, r10
    27b2:	bb 1c       	adc	r11, r11
    27b4:	aa 0c       	add	r10, r10
    27b6:	bb 1c       	adc	r11, r11
    27b8:	8a 0d       	add	r24, r10
    27ba:	9b 1d       	adc	r25, r11
    27bc:	48 0f       	add	r20, r24
    27be:	59 1f       	adc	r21, r25
    27c0:	e1 81       	ldd	r30, Z+1	; 0x01
    27c2:	da 01       	movw	r26, r20
    27c4:	ec 93       	st	X, r30
    27c6:	ed 81       	ldd	r30, Y+5	; 0x05
    27c8:	fe 81       	ldd	r31, Y+6	; 0x06
    27ca:	a0 80       	ld	r10, Z
    27cc:	b1 80       	ldd	r11, Z+1	; 0x01
    27ce:	3f 5f       	subi	r19, 0xFF	; 255
    27d0:	30 93 53 02 	sts	0x0253, r19	; 0x800253 <idx.7338>
    27d4:	f5 01       	movw	r30, r10
    27d6:	e8 0f       	add	r30, r24
    27d8:	f9 1f       	adc	r31, r25
    27da:	c1 82       	std	Z+1, r12	; 0x01
    27dc:	d2 82       	std	Z+2, r13	; 0x02
    27de:	e3 82       	std	Z+3, r14	; 0x03
    27e0:	f4 82       	std	Z+4, r15	; 0x04
    27e2:	f4 01       	movw	r30, r8
    27e4:	ea 58       	subi	r30, 0x8A	; 138
    27e6:	ff 4f       	sbci	r31, 0xFF	; 255
    27e8:	80 81       	ld	r24, Z
    27ea:	88 23       	and	r24, r24
    27ec:	61 f1       	breq	.+88     	; 0x2846 <setAntennaReadTimeHelper+0x1cc>
    27ee:	d4 01       	movw	r26, r8
    27f0:	1c 96       	adiw	r26, 0x0c	; 12
    27f2:	4d 90       	ld	r4, X+
    27f4:	5d 90       	ld	r5, X+
    27f6:	6d 90       	ld	r6, X+
    27f8:	7c 90       	ld	r7, X
    27fa:	1f 97       	sbiw	r26, 0x0f	; 15
    27fc:	45 28       	or	r4, r5
    27fe:	46 28       	or	r4, r6
    2800:	47 28       	or	r4, r7
    2802:	09 f1       	breq	.+66     	; 0x2846 <setAntennaReadTimeHelper+0x1cc>
    2804:	ad 81       	ldd	r26, Y+5	; 0x05
    2806:	be 81       	ldd	r27, Y+6	; 0x06
    2808:	ed 91       	ld	r30, X+
    280a:	fc 91       	ld	r31, X
    280c:	11 97       	sbiw	r26, 0x01	; 1
    280e:	83 2f       	mov	r24, r19
    2810:	90 e0       	ldi	r25, 0x00	; 0
    2812:	ac 01       	movw	r20, r24
    2814:	44 0f       	add	r20, r20
    2816:	55 1f       	adc	r21, r21
    2818:	44 0f       	add	r20, r20
    281a:	55 1f       	adc	r21, r21
    281c:	84 0f       	add	r24, r20
    281e:	95 1f       	adc	r25, r21
    2820:	e8 0f       	add	r30, r24
    2822:	f9 1f       	adc	r31, r25
    2824:	10 82       	st	Z, r1
    2826:	4d 91       	ld	r20, X+
    2828:	5c 91       	ld	r21, X
    282a:	3f 5f       	subi	r19, 0xFF	; 255
    282c:	30 93 53 02 	sts	0x0253, r19	; 0x800253 <idx.7338>
    2830:	fa 01       	movw	r30, r20
    2832:	e8 0f       	add	r30, r24
    2834:	f9 1f       	adc	r31, r25
    2836:	89 81       	ldd	r24, Y+1	; 0x01
    2838:	9a 81       	ldd	r25, Y+2	; 0x02
    283a:	ab 81       	ldd	r26, Y+3	; 0x03
    283c:	bc 81       	ldd	r27, Y+4	; 0x04
    283e:	81 83       	std	Z+1, r24	; 0x01
    2840:	92 83       	std	Z+2, r25	; 0x02
    2842:	a3 83       	std	Z+3, r26	; 0x03
    2844:	b4 83       	std	Z+4, r27	; 0x04
    2846:	2f 5f       	subi	r18, 0xFF	; 255
    2848:	01 c0       	rjmp	.+2      	; 0x284c <setAntennaReadTimeHelper+0x1d2>
    284a:	20 e0       	ldi	r18, 0x00	; 0
    284c:	af 85       	ldd	r26, Y+15	; 0x0f
    284e:	b8 89       	ldd	r27, Y+16	; 0x10
    2850:	13 96       	adiw	r26, 0x03	; 3
    2852:	8c 91       	ld	r24, X
    2854:	28 17       	cp	r18, r24
    2856:	08 f4       	brcc	.+2      	; 0x285a <setAntennaReadTimeHelper+0x1e0>
    2858:	89 cf       	rjmp	.-238    	; 0x276c <setAntennaReadTimeHelper+0xf2>
    285a:	1f 5f       	subi	r17, 0xFF	; 255
    285c:	61 2f       	mov	r22, r17
    285e:	70 e0       	ldi	r23, 0x00	; 0
    2860:	f1 01       	movw	r30, r2
    2862:	82 85       	ldd	r24, Z+10	; 0x0a
    2864:	93 85       	ldd	r25, Z+11	; 0x0b
    2866:	68 17       	cp	r22, r24
    2868:	79 07       	cpc	r23, r25
    286a:	78 f3       	brcs	.-34     	; 0x284a <setAntennaReadTimeHelper+0x1d0>
    286c:	40 e0       	ldi	r20, 0x00	; 0
    286e:	30 e0       	ldi	r19, 0x00	; 0
    2870:	20 e0       	ldi	r18, 0x00	; 0
    2872:	90 e0       	ldi	r25, 0x00	; 0
    2874:	7c c0       	rjmp	.+248    	; 0x296e <setAntennaReadTimeHelper+0x2f4>
    2876:	d1 01       	movw	r26, r2
    2878:	16 96       	adiw	r26, 0x06	; 6
    287a:	2d 91       	ld	r18, X+
    287c:	3c 91       	ld	r19, X
    287e:	17 97       	sbiw	r26, 0x07	; 7
    2880:	bf 85       	ldd	r27, Y+15	; 0x0f
    2882:	eb 2f       	mov	r30, r27
    2884:	f0 e0       	ldi	r31, 0x00	; 0
    2886:	ee 0f       	add	r30, r30
    2888:	ff 1f       	adc	r31, r31
    288a:	e2 0f       	add	r30, r18
    288c:	f3 1f       	adc	r31, r19
    288e:	a0 80       	ld	r10, Z
    2890:	b1 80       	ldd	r11, Z+1	; 0x01
    2892:	f1 01       	movw	r30, r2
    2894:	c1 80       	ldd	r12, Z+1	; 0x01
    2896:	d2 80       	ldd	r13, Z+2	; 0x02
    2898:	e3 80       	ldd	r14, Z+3	; 0x03
    289a:	f4 80       	ldd	r15, Z+4	; 0x04
    289c:	c1 14       	cp	r12, r1
    289e:	d1 04       	cpc	r13, r1
    28a0:	e1 04       	cpc	r14, r1
    28a2:	f1 04       	cpc	r15, r1
    28a4:	31 f1       	breq	.+76     	; 0x28f2 <setAntennaReadTimeHelper+0x278>
    28a6:	d5 01       	movw	r26, r10
    28a8:	11 96       	adiw	r26, 0x01	; 1
    28aa:	4d 90       	ld	r4, X+
    28ac:	5d 90       	ld	r5, X+
    28ae:	6d 90       	ld	r6, X+
    28b0:	7c 90       	ld	r7, X
    28b2:	14 97       	sbiw	r26, 0x04	; 4
    28b4:	2f 81       	ldd	r18, Y+7	; 0x07
    28b6:	38 85       	ldd	r19, Y+8	; 0x08
    28b8:	49 85       	ldd	r20, Y+9	; 0x09
    28ba:	5a 85       	ldd	r21, Y+10	; 0x0a
    28bc:	c3 01       	movw	r24, r6
    28be:	b2 01       	movw	r22, r4
    28c0:	0e 94 7b 74 	call	0xe8f6	; 0xe8f6 <__mulsi3>
    28c4:	a7 01       	movw	r20, r14
    28c6:	96 01       	movw	r18, r12
    28c8:	0e 94 b1 74 	call	0xe962	; 0xe962 <__udivmodsi4>
    28cc:	29 83       	std	Y+1, r18	; 0x01
    28ce:	3a 83       	std	Y+2, r19	; 0x02
    28d0:	4b 83       	std	Y+3, r20	; 0x03
    28d2:	5c 83       	std	Y+4, r21	; 0x04
    28d4:	2b 85       	ldd	r18, Y+11	; 0x0b
    28d6:	3c 85       	ldd	r19, Y+12	; 0x0c
    28d8:	4d 85       	ldd	r20, Y+13	; 0x0d
    28da:	5e 85       	ldd	r21, Y+14	; 0x0e
    28dc:	c3 01       	movw	r24, r6
    28de:	b2 01       	movw	r22, r4
    28e0:	0e 94 7b 74 	call	0xe8f6	; 0xe8f6 <__mulsi3>
    28e4:	a7 01       	movw	r20, r14
    28e6:	96 01       	movw	r18, r12
    28e8:	0e 94 b1 74 	call	0xe962	; 0xe962 <__udivmodsi4>
    28ec:	69 01       	movw	r12, r18
    28ee:	7a 01       	movw	r14, r20
    28f0:	1a c0       	rjmp	.+52     	; 0x2926 <setAntennaReadTimeHelper+0x2ac>
    28f2:	c8 2e       	mov	r12, r24
    28f4:	d1 2c       	mov	r13, r1
    28f6:	e1 2c       	mov	r14, r1
    28f8:	f1 2c       	mov	r15, r1
    28fa:	6f 81       	ldd	r22, Y+7	; 0x07
    28fc:	78 85       	ldd	r23, Y+8	; 0x08
    28fe:	89 85       	ldd	r24, Y+9	; 0x09
    2900:	9a 85       	ldd	r25, Y+10	; 0x0a
    2902:	a7 01       	movw	r20, r14
    2904:	96 01       	movw	r18, r12
    2906:	0e 94 b1 74 	call	0xe962	; 0xe962 <__udivmodsi4>
    290a:	29 83       	std	Y+1, r18	; 0x01
    290c:	3a 83       	std	Y+2, r19	; 0x02
    290e:	4b 83       	std	Y+3, r20	; 0x03
    2910:	5c 83       	std	Y+4, r21	; 0x04
    2912:	6b 85       	ldd	r22, Y+11	; 0x0b
    2914:	7c 85       	ldd	r23, Y+12	; 0x0c
    2916:	8d 85       	ldd	r24, Y+13	; 0x0d
    2918:	9e 85       	ldd	r25, Y+14	; 0x0e
    291a:	a7 01       	movw	r20, r14
    291c:	96 01       	movw	r18, r12
    291e:	0e 94 b1 74 	call	0xe962	; 0xe962 <__udivmodsi4>
    2922:	69 01       	movw	r12, r18
    2924:	7a 01       	movw	r14, r20
    2926:	09 81       	ldd	r16, Y+1	; 0x01
    2928:	1a 81       	ldd	r17, Y+2	; 0x02
    292a:	2b 81       	ldd	r18, Y+3	; 0x03
    292c:	3c 81       	ldd	r19, Y+4	; 0x04
    292e:	4d 81       	ldd	r20, Y+5	; 0x05
    2930:	5e 81       	ldd	r21, Y+6	; 0x06
    2932:	b5 01       	movw	r22, r10
    2934:	c4 01       	movw	r24, r8
    2936:	a1 de       	rcall	.-702    	; 0x267a <setAntennaReadTimeHelper>
    2938:	61 15       	cp	r22, r1
    293a:	71 05       	cpc	r23, r1
    293c:	81 05       	cpc	r24, r1
    293e:	91 05       	cpc	r25, r1
    2940:	09 f5       	brne	.+66     	; 0x2984 <setAntennaReadTimeHelper+0x30a>
    2942:	bf 85       	ldd	r27, Y+15	; 0x0f
    2944:	bf 5f       	subi	r27, 0xFF	; 255
    2946:	bf 87       	std	Y+15, r27	; 0x0f
    2948:	02 c0       	rjmp	.+4      	; 0x294e <setAntennaReadTimeHelper+0x2d4>
    294a:	e0 e0       	ldi	r30, 0x00	; 0
    294c:	ef 87       	std	Y+15, r30	; 0x0f
    294e:	d1 01       	movw	r26, r2
    2950:	1c 96       	adiw	r26, 0x0c	; 12
    2952:	8c 91       	ld	r24, X
    2954:	bf 85       	ldd	r27, Y+15	; 0x0f
    2956:	b8 17       	cp	r27, r24
    2958:	08 f4       	brcc	.+2      	; 0x295c <setAntennaReadTimeHelper+0x2e2>
    295a:	8d cf       	rjmp	.-230    	; 0x2876 <setAntennaReadTimeHelper+0x1fc>
    295c:	40 e0       	ldi	r20, 0x00	; 0
    295e:	30 e0       	ldi	r19, 0x00	; 0
    2960:	20 e0       	ldi	r18, 0x00	; 0
    2962:	90 e0       	ldi	r25, 0x00	; 0
    2964:	04 c0       	rjmp	.+8      	; 0x296e <setAntennaReadTimeHelper+0x2f4>
    2966:	41 e0       	ldi	r20, 0x01	; 1
    2968:	30 e0       	ldi	r19, 0x00	; 0
    296a:	20 e0       	ldi	r18, 0x00	; 0
    296c:	93 e0       	ldi	r25, 0x03	; 3
    296e:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <idx.7338>
    2972:	ed 81       	ldd	r30, Y+5	; 0x05
    2974:	fe 81       	ldd	r31, Y+6	; 0x06
    2976:	83 83       	std	Z+3, r24	; 0x03
    2978:	08 c0       	rjmp	.+16     	; 0x298a <setAntennaReadTimeHelper+0x310>
    297a:	47 e0       	ldi	r20, 0x07	; 7
    297c:	35 e0       	ldi	r19, 0x05	; 5
    297e:	20 e0       	ldi	r18, 0x00	; 0
    2980:	92 e0       	ldi	r25, 0x02	; 2
    2982:	03 c0       	rjmp	.+6      	; 0x298a <setAntennaReadTimeHelper+0x310>
    2984:	46 2f       	mov	r20, r22
    2986:	37 2f       	mov	r19, r23
    2988:	28 2f       	mov	r18, r24
    298a:	64 2f       	mov	r22, r20
    298c:	73 2f       	mov	r23, r19
    298e:	82 2f       	mov	r24, r18
    2990:	60 96       	adiw	r28, 0x10	; 16
    2992:	0f b6       	in	r0, 0x3f	; 63
    2994:	f8 94       	cli
    2996:	de bf       	out	0x3e, r29	; 62
    2998:	0f be       	out	0x3f, r0	; 63
    299a:	cd bf       	out	0x3d, r28	; 61
    299c:	df 91       	pop	r29
    299e:	cf 91       	pop	r28
    29a0:	1f 91       	pop	r17
    29a2:	0f 91       	pop	r16
    29a4:	ff 90       	pop	r15
    29a6:	ef 90       	pop	r14
    29a8:	df 90       	pop	r13
    29aa:	cf 90       	pop	r12
    29ac:	bf 90       	pop	r11
    29ae:	af 90       	pop	r10
    29b0:	9f 90       	pop	r9
    29b2:	8f 90       	pop	r8
    29b4:	7f 90       	pop	r7
    29b6:	6f 90       	pop	r6
    29b8:	5f 90       	pop	r5
    29ba:	4f 90       	pop	r4
    29bc:	3f 90       	pop	r3
    29be:	2f 90       	pop	r2
    29c0:	08 95       	ret

000029c2 <setAntennaReadTimeList>:
    29c2:	af 92       	push	r10
    29c4:	bf 92       	push	r11
    29c6:	cf 92       	push	r12
    29c8:	df 92       	push	r13
    29ca:	ef 92       	push	r14
    29cc:	ff 92       	push	r15
    29ce:	0f 93       	push	r16
    29d0:	1f 93       	push	r17
    29d2:	cf 93       	push	r28
    29d4:	df 93       	push	r29
    29d6:	cd b7       	in	r28, 0x3d	; 61
    29d8:	de b7       	in	r29, 0x3e	; 62
    29da:	c4 54       	subi	r28, 0x44	; 68
    29dc:	d1 40       	sbci	r29, 0x01	; 1
    29de:	0f b6       	in	r0, 0x3f	; 63
    29e0:	f8 94       	cli
    29e2:	de bf       	out	0x3e, r29	; 62
    29e4:	0f be       	out	0x3f, r0	; 63
    29e6:	cd bf       	out	0x3d, r28	; 61
    29e8:	5c 01       	movw	r10, r24
    29ea:	fc 01       	movw	r30, r24
    29ec:	ea 58       	subi	r30, 0x8A	; 138
    29ee:	ff 4f       	sbci	r31, 0xFF	; 255
    29f0:	80 81       	ld	r24, Z
    29f2:	88 23       	and	r24, r24
    29f4:	51 f0       	breq	.+20     	; 0x2a0a <setAntennaReadTimeList+0x48>
    29f6:	f5 01       	movw	r30, r10
    29f8:	00 85       	ldd	r16, Z+8	; 0x08
    29fa:	11 85       	ldd	r17, Z+9	; 0x09
    29fc:	22 85       	ldd	r18, Z+10	; 0x0a
    29fe:	33 85       	ldd	r19, Z+11	; 0x0b
    2a00:	c4 84       	ldd	r12, Z+12	; 0x0c
    2a02:	d5 84       	ldd	r13, Z+13	; 0x0d
    2a04:	e6 84       	ldd	r14, Z+14	; 0x0e
    2a06:	f7 84       	ldd	r15, Z+15	; 0x0f
    2a08:	08 c0       	rjmp	.+16     	; 0x2a1a <setAntennaReadTimeList+0x58>
    2a0a:	f5 01       	movw	r30, r10
    2a0c:	00 89       	ldd	r16, Z+16	; 0x10
    2a0e:	11 89       	ldd	r17, Z+17	; 0x11
    2a10:	22 89       	ldd	r18, Z+18	; 0x12
    2a12:	33 89       	ldd	r19, Z+19	; 0x13
    2a14:	c1 2c       	mov	r12, r1
    2a16:	d1 2c       	mov	r13, r1
    2a18:	76 01       	movw	r14, r12
    2a1a:	ce 01       	movw	r24, r28
    2a1c:	05 96       	adiw	r24, 0x05	; 5
    2a1e:	9a 83       	std	Y+2, r25	; 0x02
    2a20:	89 83       	std	Y+1, r24	; 0x01
    2a22:	80 e4       	ldi	r24, 0x40	; 64
    2a24:	8b 83       	std	Y+3, r24	; 0x03
    2a26:	f5 01       	movw	r30, r10
    2a28:	62 a9       	ldd	r22, Z+50	; 0x32
    2a2a:	73 a9       	ldd	r23, Z+51	; 0x33
    2a2c:	ae 01       	movw	r20, r28
    2a2e:	4f 5f       	subi	r20, 0xFF	; 255
    2a30:	5f 4f       	sbci	r21, 0xFF	; 255
    2a32:	c5 01       	movw	r24, r10
    2a34:	22 de       	rcall	.-956    	; 0x267a <setAntennaReadTimeHelper>
    2a36:	61 15       	cp	r22, r1
    2a38:	71 05       	cpc	r23, r1
    2a3a:	81 05       	cpc	r24, r1
    2a3c:	91 05       	cpc	r25, r1
    2a3e:	51 f4       	brne	.+20     	; 0x2a54 <setAntennaReadTimeList+0x92>
    2a40:	be 01       	movw	r22, r28
    2a42:	6f 5f       	subi	r22, 0xFF	; 255
    2a44:	7f 4f       	sbci	r23, 0xFF	; 255
    2a46:	c5 01       	movw	r24, r10
    2a48:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <TMR_SR_cmdSetPerAntennaTime>
    2a4c:	46 2f       	mov	r20, r22
    2a4e:	37 2f       	mov	r19, r23
    2a50:	28 2f       	mov	r18, r24
    2a52:	03 c0       	rjmp	.+6      	; 0x2a5a <setAntennaReadTimeList+0x98>
    2a54:	46 2f       	mov	r20, r22
    2a56:	37 2f       	mov	r19, r23
    2a58:	28 2f       	mov	r18, r24
    2a5a:	64 2f       	mov	r22, r20
    2a5c:	73 2f       	mov	r23, r19
    2a5e:	82 2f       	mov	r24, r18
    2a60:	cc 5b       	subi	r28, 0xBC	; 188
    2a62:	de 4f       	sbci	r29, 0xFE	; 254
    2a64:	0f b6       	in	r0, 0x3f	; 63
    2a66:	f8 94       	cli
    2a68:	de bf       	out	0x3e, r29	; 62
    2a6a:	0f be       	out	0x3f, r0	; 63
    2a6c:	cd bf       	out	0x3d, r28	; 61
    2a6e:	df 91       	pop	r29
    2a70:	cf 91       	pop	r28
    2a72:	1f 91       	pop	r17
    2a74:	0f 91       	pop	r16
    2a76:	ff 90       	pop	r15
    2a78:	ef 90       	pop	r14
    2a7a:	df 90       	pop	r13
    2a7c:	cf 90       	pop	r12
    2a7e:	bf 90       	pop	r11
    2a80:	af 90       	pop	r10
    2a82:	08 95       	ret

00002a84 <compareAntennas>:
    2a84:	cf 92       	push	r12
    2a86:	df 92       	push	r13
    2a88:	ff 92       	push	r15
    2a8a:	0f 93       	push	r16
    2a8c:	1f 93       	push	r17
    2a8e:	cf 93       	push	r28
    2a90:	df 93       	push	r29
    2a92:	ec 01       	movw	r28, r24
    2a94:	90 e0       	ldi	r25, 0x00	; 0
    2a96:	00 e0       	ldi	r16, 0x00	; 0
    2a98:	10 e0       	ldi	r17, 0x00	; 0
    2a9a:	44 c0       	rjmp	.+136    	; 0x2b24 <compareAntennas+0xa0>
    2a9c:	28 81       	ld	r18, Y
    2a9e:	39 81       	ldd	r19, Y+1	; 0x01
    2aa0:	f9 01       	movw	r30, r18
    2aa2:	a0 81       	ld	r26, Z
    2aa4:	b1 81       	ldd	r27, Z+1	; 0x01
    2aa6:	e9 2f       	mov	r30, r25
    2aa8:	f0 e0       	ldi	r31, 0x00	; 0
    2aaa:	ee 0f       	add	r30, r30
    2aac:	ff 1f       	adc	r31, r31
    2aae:	e2 0f       	add	r30, r18
    2ab0:	f3 1f       	adc	r31, r19
    2ab2:	60 81       	ld	r22, Z
    2ab4:	71 81       	ldd	r23, Z+1	; 0x01
    2ab6:	1a 96       	adiw	r26, 0x0a	; 10
    2ab8:	2d 91       	ld	r18, X+
    2aba:	3c 91       	ld	r19, X
    2abc:	1b 97       	sbiw	r26, 0x0b	; 11
    2abe:	21 15       	cp	r18, r1
    2ac0:	31 05       	cpc	r19, r1
    2ac2:	39 f1       	breq	.+78     	; 0x2b12 <compareAntennas+0x8e>
    2ac4:	fb 01       	movw	r30, r22
    2ac6:	42 85       	ldd	r20, Z+10	; 0x0a
    2ac8:	53 85       	ldd	r21, Z+11	; 0x0b
    2aca:	41 15       	cp	r20, r1
    2acc:	51 05       	cpc	r21, r1
    2ace:	09 f1       	breq	.+66     	; 0x2b12 <compareAntennas+0x8e>
    2ad0:	24 17       	cp	r18, r20
    2ad2:	35 07       	cpc	r19, r21
    2ad4:	31 f5       	brne	.+76     	; 0x2b22 <compareAntennas+0x9e>
    2ad6:	12 c0       	rjmp	.+36     	; 0x2afc <compareAntennas+0x78>
    2ad8:	16 96       	adiw	r26, 0x06	; 6
    2ada:	ed 91       	ld	r30, X+
    2adc:	fc 91       	ld	r31, X
    2ade:	17 97       	sbiw	r26, 0x07	; 7
    2ae0:	e4 0f       	add	r30, r20
    2ae2:	f5 1f       	adc	r31, r21
    2ae4:	f0 80       	ld	r15, Z
    2ae6:	fb 01       	movw	r30, r22
    2ae8:	c6 80       	ldd	r12, Z+6	; 0x06
    2aea:	d7 80       	ldd	r13, Z+7	; 0x07
    2aec:	f6 01       	movw	r30, r12
    2aee:	e4 0f       	add	r30, r20
    2af0:	f5 1f       	adc	r31, r21
    2af2:	e0 81       	ld	r30, Z
    2af4:	fe 12       	cpse	r15, r30
    2af6:	08 c0       	rjmp	.+16     	; 0x2b08 <compareAntennas+0x84>
    2af8:	8f 5f       	subi	r24, 0xFF	; 255
    2afa:	01 c0       	rjmp	.+2      	; 0x2afe <compareAntennas+0x7a>
    2afc:	80 e0       	ldi	r24, 0x00	; 0
    2afe:	48 2f       	mov	r20, r24
    2b00:	50 e0       	ldi	r21, 0x00	; 0
    2b02:	42 17       	cp	r20, r18
    2b04:	53 07       	cpc	r21, r19
    2b06:	40 f3       	brcs	.-48     	; 0x2ad8 <compareAntennas+0x54>
    2b08:	24 17       	cp	r18, r20
    2b0a:	35 07       	cpc	r19, r21
    2b0c:	51 f4       	brne	.+20     	; 0x2b22 <compareAntennas+0x9e>
    2b0e:	0f 5f       	subi	r16, 0xFF	; 255
    2b10:	08 c0       	rjmp	.+16     	; 0x2b22 <compareAntennas+0x9e>
    2b12:	23 2b       	or	r18, r19
    2b14:	59 f4       	brne	.+22     	; 0x2b2c <compareAntennas+0xa8>
    2b16:	fb 01       	movw	r30, r22
    2b18:	22 85       	ldd	r18, Z+10	; 0x0a
    2b1a:	33 85       	ldd	r19, Z+11	; 0x0b
    2b1c:	23 2b       	or	r18, r19
    2b1e:	31 f4       	brne	.+12     	; 0x2b2c <compareAntennas+0xa8>
    2b20:	1f 5f       	subi	r17, 0xFF	; 255
    2b22:	9f 5f       	subi	r25, 0xFF	; 255
    2b24:	8e 81       	ldd	r24, Y+6	; 0x06
    2b26:	98 17       	cp	r25, r24
    2b28:	08 f4       	brcc	.+2      	; 0x2b2c <compareAntennas+0xa8>
    2b2a:	b8 cf       	rjmp	.-144    	; 0x2a9c <compareAntennas+0x18>
    2b2c:	08 17       	cp	r16, r24
    2b2e:	21 f0       	breq	.+8      	; 0x2b38 <compareAntennas+0xb4>
    2b30:	18 17       	cp	r17, r24
    2b32:	21 f0       	breq	.+8      	; 0x2b3c <compareAntennas+0xb8>
    2b34:	80 e0       	ldi	r24, 0x00	; 0
    2b36:	03 c0       	rjmp	.+6      	; 0x2b3e <compareAntennas+0xba>
    2b38:	81 e0       	ldi	r24, 0x01	; 1
    2b3a:	01 c0       	rjmp	.+2      	; 0x2b3e <compareAntennas+0xba>
    2b3c:	81 e0       	ldi	r24, 0x01	; 1
    2b3e:	df 91       	pop	r29
    2b40:	cf 91       	pop	r28
    2b42:	1f 91       	pop	r17
    2b44:	0f 91       	pop	r16
    2b46:	ff 90       	pop	r15
    2b48:	df 90       	pop	r13
    2b4a:	cf 90       	pop	r12
    2b4c:	08 95       	ret

00002b4e <prepForSearch>:
    2b4e:	cf 92       	push	r12
    2b50:	df 92       	push	r13
    2b52:	ef 92       	push	r14
    2b54:	ff 92       	push	r15
    2b56:	0f 93       	push	r16
    2b58:	1f 93       	push	r17
    2b5a:	cf 93       	push	r28
    2b5c:	df 93       	push	r29
    2b5e:	8c 01       	movw	r16, r24
    2b60:	eb 01       	movw	r28, r22
    2b62:	fc 01       	movw	r30, r24
    2b64:	ec 52       	subi	r30, 0x2C	; 44
    2b66:	fe 4f       	sbci	r31, 0xFE	; 254
    2b68:	80 81       	ld	r24, Z
    2b6a:	91 81       	ldd	r25, Z+1	; 0x01
    2b6c:	89 2b       	or	r24, r25
    2b6e:	51 f4       	brne	.+20     	; 0x2b84 <prepForSearch+0x36>
    2b70:	c8 01       	movw	r24, r16
    2b72:	0e 94 ae 05 	call	0xb5c	; 0xb5c <initTxRxMapFromPorts>
    2b76:	6b 01       	movw	r12, r22
    2b78:	7c 01       	movw	r14, r24
    2b7a:	67 2b       	or	r22, r23
    2b7c:	68 2b       	or	r22, r24
    2b7e:	69 2b       	or	r22, r25
    2b80:	21 f0       	breq	.+8      	; 0x2b8a <prepForSearch+0x3c>
    2b82:	59 c0       	rjmp	.+178    	; 0x2c36 <prepForSearch+0xe8>
    2b84:	c1 2c       	mov	r12, r1
    2b86:	d1 2c       	mov	r13, r1
    2b88:	76 01       	movw	r14, r12
    2b8a:	88 81       	ld	r24, Y
    2b8c:	81 30       	cpi	r24, 0x01	; 1
    2b8e:	19 f0       	breq	.+6      	; 0x2b96 <prepForSearch+0x48>
    2b90:	82 30       	cpi	r24, 0x02	; 2
    2b92:	a9 f0       	breq	.+42     	; 0x2bbe <prepForSearch+0x70>
    2b94:	40 c0       	rjmp	.+128    	; 0x2c16 <prepForSearch+0xc8>
    2b96:	f8 01       	movw	r30, r16
    2b98:	e9 5e       	subi	r30, 0xE9	; 233
    2b9a:	f9 4f       	sbci	r31, 0xF9	; 249
    2b9c:	80 81       	ld	r24, Z
    2b9e:	81 11       	cpse	r24, r1
    2ba0:	4a c0       	rjmp	.+148    	; 0x2c36 <prepForSearch+0xe8>
    2ba2:	be 01       	movw	r22, r28
    2ba4:	6a 5f       	subi	r22, 0xFA	; 250
    2ba6:	7f 4f       	sbci	r23, 0xFF	; 255
    2ba8:	8a 85       	ldd	r24, Y+10	; 0x0a
    2baa:	9b 85       	ldd	r25, Y+11	; 0x0b
    2bac:	89 2b       	or	r24, r25
    2bae:	09 f4       	brne	.+2      	; 0x2bb2 <prepForSearch+0x64>
    2bb0:	42 c0       	rjmp	.+132    	; 0x2c36 <prepForSearch+0xe8>
    2bb2:	c8 01       	movw	r24, r16
    2bb4:	0e 94 af 03 	call	0x75e	; 0x75e <setAntennaList>
    2bb8:	6b 01       	movw	r12, r22
    2bba:	7c 01       	movw	r14, r24
    2bbc:	3c c0       	rjmp	.+120    	; 0x2c36 <prepForSearch+0xe8>
    2bbe:	ce 01       	movw	r24, r28
    2bc0:	d5 dc       	rcall	.-1622   	; 0x256c <validateParams>
    2bc2:	88 23       	and	r24, r24
    2bc4:	59 f0       	breq	.+22     	; 0x2bdc <prepForSearch+0x8e>
    2bc6:	f8 01       	movw	r30, r16
    2bc8:	e9 5e       	subi	r30, 0xE9	; 233
    2bca:	f9 4f       	sbci	r31, 0xF9	; 249
    2bcc:	80 81       	ld	r24, Z
    2bce:	81 11       	cpse	r24, r1
    2bd0:	32 c0       	rjmp	.+100    	; 0x2c36 <prepForSearch+0xe8>
    2bd2:	c8 01       	movw	r24, r16
    2bd4:	f6 de       	rcall	.-532    	; 0x29c2 <setAntennaReadTimeList>
    2bd6:	6b 01       	movw	r12, r22
    2bd8:	7c 01       	movw	r14, r24
    2bda:	2d c0       	rjmp	.+90     	; 0x2c36 <prepForSearch+0xe8>
    2bdc:	ce 01       	movw	r24, r28
    2bde:	06 96       	adiw	r24, 0x06	; 6
    2be0:	51 df       	rcall	.-350    	; 0x2a84 <compareAntennas>
    2be2:	88 23       	and	r24, r24
    2be4:	09 f1       	breq	.+66     	; 0x2c28 <prepForSearch+0xda>
    2be6:	ee 81       	ldd	r30, Y+6	; 0x06
    2be8:	ff 81       	ldd	r31, Y+7	; 0x07
    2bea:	01 90       	ld	r0, Z+
    2bec:	f0 81       	ld	r31, Z
    2bee:	e0 2d       	mov	r30, r0
    2bf0:	bf 01       	movw	r22, r30
    2bf2:	6a 5f       	subi	r22, 0xFA	; 250
    2bf4:	7f 4f       	sbci	r23, 0xFF	; 255
    2bf6:	d8 01       	movw	r26, r16
    2bf8:	a9 5e       	subi	r26, 0xE9	; 233
    2bfa:	b9 4f       	sbci	r27, 0xF9	; 249
    2bfc:	8c 91       	ld	r24, X
    2bfe:	81 11       	cpse	r24, r1
    2c00:	1a c0       	rjmp	.+52     	; 0x2c36 <prepForSearch+0xe8>
    2c02:	82 85       	ldd	r24, Z+10	; 0x0a
    2c04:	93 85       	ldd	r25, Z+11	; 0x0b
    2c06:	89 2b       	or	r24, r25
    2c08:	b1 f0       	breq	.+44     	; 0x2c36 <prepForSearch+0xe8>
    2c0a:	c8 01       	movw	r24, r16
    2c0c:	0e 94 af 03 	call	0x75e	; 0x75e <setAntennaList>
    2c10:	6b 01       	movw	r12, r22
    2c12:	7c 01       	movw	r14, r24
    2c14:	10 c0       	rjmp	.+32     	; 0x2c36 <prepForSearch+0xe8>
    2c16:	0f 2e       	mov	r0, r31
    2c18:	cc 24       	eor	r12, r12
    2c1a:	c3 94       	inc	r12
    2c1c:	d1 2c       	mov	r13, r1
    2c1e:	e1 2c       	mov	r14, r1
    2c20:	f3 e0       	ldi	r31, 0x03	; 3
    2c22:	ff 2e       	mov	r15, r31
    2c24:	f0 2d       	mov	r31, r0
    2c26:	07 c0       	rjmp	.+14     	; 0x2c36 <prepForSearch+0xe8>
    2c28:	0f 2e       	mov	r0, r31
    2c2a:	f3 e0       	ldi	r31, 0x03	; 3
    2c2c:	cf 2e       	mov	r12, r31
    2c2e:	d1 2c       	mov	r13, r1
    2c30:	e1 2c       	mov	r14, r1
    2c32:	fc 2c       	mov	r15, r12
    2c34:	f0 2d       	mov	r31, r0
    2c36:	c7 01       	movw	r24, r14
    2c38:	b6 01       	movw	r22, r12
    2c3a:	df 91       	pop	r29
    2c3c:	cf 91       	pop	r28
    2c3e:	1f 91       	pop	r17
    2c40:	0f 91       	pop	r16
    2c42:	ff 90       	pop	r15
    2c44:	ef 90       	pop	r14
    2c46:	df 90       	pop	r13
    2c48:	cf 90       	pop	r12
    2c4a:	08 95       	ret

00002c4c <TMR_SR_paramSet>:
    2c4c:	2f 92       	push	r2
    2c4e:	3f 92       	push	r3
    2c50:	4f 92       	push	r4
    2c52:	5f 92       	push	r5
    2c54:	6f 92       	push	r6
    2c56:	7f 92       	push	r7
    2c58:	8f 92       	push	r8
    2c5a:	9f 92       	push	r9
    2c5c:	af 92       	push	r10
    2c5e:	bf 92       	push	r11
    2c60:	cf 92       	push	r12
    2c62:	df 92       	push	r13
    2c64:	ef 92       	push	r14
    2c66:	ff 92       	push	r15
    2c68:	0f 93       	push	r16
    2c6a:	1f 93       	push	r17
    2c6c:	cf 93       	push	r28
    2c6e:	df 93       	push	r29
    2c70:	cd b7       	in	r28, 0x3d	; 61
    2c72:	de b7       	in	r29, 0x3e	; 62
    2c74:	a2 97       	sbiw	r28, 0x22	; 34
    2c76:	0f b6       	in	r0, 0x3f	; 63
    2c78:	f8 94       	cli
    2c7a:	de bf       	out	0x3e, r29	; 62
    2c7c:	0f be       	out	0x3f, r0	; 63
    2c7e:	cd bf       	out	0x3d, r28	; 61
    2c80:	6c 01       	movw	r12, r24
    2c82:	f6 2e       	mov	r15, r22
    2c84:	5a 01       	movw	r10, r20
    2c86:	0f 2e       	mov	r0, r31
    2c88:	f5 e0       	ldi	r31, 0x05	; 5
    2c8a:	ef 2e       	mov	r14, r31
    2c8c:	f0 2d       	mov	r31, r0
    2c8e:	06 2f       	mov	r16, r22
    2c90:	02 95       	swap	r16
    2c92:	06 95       	lsr	r16
    2c94:	07 70       	andi	r16, 0x07	; 7
    2c96:	10 e0       	ldi	r17, 0x00	; 0
    2c98:	80 58       	subi	r24, 0x80	; 128
    2c9a:	9e 4f       	sbci	r25, 0xFE	; 254
    2c9c:	f8 01       	movw	r30, r16
    2c9e:	ef 57       	subi	r30, 0x7F	; 127
    2ca0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ca2:	ee 0f       	add	r30, r30
    2ca4:	ff 1f       	adc	r31, r31
    2ca6:	ee 0f       	add	r30, r30
    2ca8:	ff 1f       	adc	r31, r31
    2caa:	e8 0f       	add	r30, r24
    2cac:	f9 1f       	adc	r31, r25
    2cae:	80 81       	ld	r24, Z
    2cb0:	91 81       	ldd	r25, Z+1	; 0x01
    2cb2:	a2 81       	ldd	r26, Z+2	; 0x02
    2cb4:	b3 81       	ldd	r27, Z+3	; 0x03
    2cb6:	26 2f       	mov	r18, r22
    2cb8:	2f 71       	andi	r18, 0x1F	; 31
    2cba:	92 2e       	mov	r9, r18
    2cbc:	04 c0       	rjmp	.+8      	; 0x2cc6 <TMR_SR_paramSet+0x7a>
    2cbe:	b6 95       	lsr	r27
    2cc0:	a7 95       	ror	r26
    2cc2:	97 95       	ror	r25
    2cc4:	87 95       	ror	r24
    2cc6:	2a 95       	dec	r18
    2cc8:	d2 f7       	brpl	.-12     	; 0x2cbe <TMR_SR_paramSet+0x72>
    2cca:	80 fd       	sbrc	r24, 0
    2ccc:	03 c0       	rjmp	.+6      	; 0x2cd4 <TMR_SR_paramSet+0x88>
    2cce:	c6 01       	movw	r24, r12
    2cd0:	0e 94 26 6d 	call	0xda4c	; 0xda4c <TMR_paramProbe>
    2cd4:	f8 01       	movw	r30, r16
    2cd6:	ef 57       	subi	r30, 0x7F	; 127
    2cd8:	ff 4f       	sbci	r31, 0xFF	; 255
    2cda:	ee 0f       	add	r30, r30
    2cdc:	ff 1f       	adc	r31, r31
    2cde:	ee 0f       	add	r30, r30
    2ce0:	ff 1f       	adc	r31, r31
    2ce2:	c6 01       	movw	r24, r12
    2ce4:	80 58       	subi	r24, 0x80	; 128
    2ce6:	9e 4f       	sbci	r25, 0xFE	; 254
    2ce8:	e8 0f       	add	r30, r24
    2cea:	f9 1f       	adc	r31, r25
    2cec:	80 81       	ld	r24, Z
    2cee:	91 81       	ldd	r25, Z+1	; 0x01
    2cf0:	a2 81       	ldd	r26, Z+2	; 0x02
    2cf2:	b3 81       	ldd	r27, Z+3	; 0x03
    2cf4:	09 2c       	mov	r0, r9
    2cf6:	04 c0       	rjmp	.+8      	; 0x2d00 <TMR_SR_paramSet+0xb4>
    2cf8:	b6 95       	lsr	r27
    2cfa:	a7 95       	ror	r26
    2cfc:	97 95       	ror	r25
    2cfe:	87 95       	ror	r24
    2d00:	0a 94       	dec	r0
    2d02:	d2 f7       	brpl	.-12     	; 0x2cf8 <TMR_SR_paramSet+0xac>
    2d04:	80 ff       	sbrs	r24, 0
    2d06:	18 c0       	rjmp	.+48     	; 0x2d38 <TMR_SR_paramSet+0xec>
    2d08:	0b 57       	subi	r16, 0x7B	; 123
    2d0a:	1f 4f       	sbci	r17, 0xFF	; 255
    2d0c:	00 0f       	add	r16, r16
    2d0e:	11 1f       	adc	r17, r17
    2d10:	00 0f       	add	r16, r16
    2d12:	11 1f       	adc	r17, r17
    2d14:	f6 01       	movw	r30, r12
    2d16:	e0 58       	subi	r30, 0x80	; 128
    2d18:	fe 4f       	sbci	r31, 0xFE	; 254
    2d1a:	e0 0f       	add	r30, r16
    2d1c:	f1 1f       	adc	r31, r17
    2d1e:	80 81       	ld	r24, Z
    2d20:	91 81       	ldd	r25, Z+1	; 0x01
    2d22:	a2 81       	ldd	r26, Z+2	; 0x02
    2d24:	b3 81       	ldd	r27, Z+3	; 0x03
    2d26:	04 c0       	rjmp	.+8      	; 0x2d30 <TMR_SR_paramSet+0xe4>
    2d28:	b6 95       	lsr	r27
    2d2a:	a7 95       	ror	r26
    2d2c:	97 95       	ror	r25
    2d2e:	87 95       	ror	r24
    2d30:	9a 94       	dec	r9
    2d32:	d2 f7       	brpl	.-12     	; 0x2d28 <TMR_SR_paramSet+0xdc>
    2d34:	80 ff       	sbrs	r24, 0
    2d36:	ad c6       	rjmp	.+3418   	; 0x3a92 <TMR_SR_paramSet+0xe46>
    2d38:	8f 2d       	mov	r24, r15
    2d3a:	90 e0       	ldi	r25, 0x00	; 0
    2d3c:	fc 01       	movw	r30, r24
    2d3e:	31 97       	sbiw	r30, 0x01	; 1
    2d40:	e0 37       	cpi	r30, 0x70	; 112
    2d42:	f1 05       	cpc	r31, r1
    2d44:	08 f0       	brcs	.+2      	; 0x2d48 <TMR_SR_paramSet+0xfc>
    2d46:	c6 c5       	rjmp	.+2956   	; 0x38d4 <TMR_SR_paramSet+0xc88>
    2d48:	e2 5e       	subi	r30, 0xE2	; 226
    2d4a:	fe 4f       	sbci	r31, 0xFE	; 254
    2d4c:	0c 94 d3 74 	jmp	0xe9a6	; 0xe9a6 <__tablejump2__>
    2d50:	60 e0       	ldi	r22, 0x00	; 0
    2d52:	0f 2e       	mov	r0, r31
    2d54:	f5 e0       	ldi	r31, 0x05	; 5
    2d56:	4f 2e       	mov	r4, r31
    2d58:	51 2c       	mov	r5, r1
    2d5a:	61 2c       	mov	r6, r1
    2d5c:	f3 e0       	ldi	r31, 0x03	; 3
    2d5e:	7f 2e       	mov	r7, r31
    2d60:	f0 2d       	mov	r31, r0
    2d62:	06 c6       	rjmp	.+3084   	; 0x3970 <TMR_SR_paramSet+0xd24>
    2d64:	d5 01       	movw	r26, r10
    2d66:	6c 91       	ld	r22, X
    2d68:	c6 01       	movw	r24, r12
    2d6a:	0e 94 9d 4c 	call	0x993a	; 0x993a <TMR_SR_cmdSetRegion>
    2d6e:	2b 01       	movw	r4, r22
    2d70:	3c 01       	movw	r6, r24
    2d72:	67 2b       	or	r22, r23
    2d74:	68 2b       	or	r22, r24
    2d76:	69 2b       	or	r22, r25
    2d78:	09 f0       	breq	.+2      	; 0x2d7c <TMR_SR_paramSet+0x130>
    2d7a:	bb c5       	rjmp	.+2934   	; 0x38f2 <TMR_SR_paramSet+0xca6>
    2d7c:	f5 01       	movw	r30, r10
    2d7e:	80 81       	ld	r24, Z
    2d80:	f6 01       	movw	r30, r12
    2d82:	ec 51       	subi	r30, 0x1C	; 28
    2d84:	fe 4f       	sbci	r31, 0xFE	; 254
    2d86:	80 83       	st	Z, r24
    2d88:	60 e0       	ldi	r22, 0x00	; 0
    2d8a:	f2 c5       	rjmp	.+3044   	; 0x3970 <TMR_SR_paramSet+0xd24>
    2d8c:	d5 01       	movw	r26, r10
    2d8e:	8c 91       	ld	r24, X
    2d90:	88 23       	and	r24, r24
    2d92:	59 f0       	breq	.+22     	; 0x2daa <TMR_SR_paramSet+0x15e>
    2d94:	f6 01       	movw	r30, r12
    2d96:	e8 5e       	subi	r30, 0xE8	; 232
    2d98:	f9 4f       	sbci	r31, 0xF9	; 249
    2d9a:	80 81       	ld	r24, Z
    2d9c:	88 60       	ori	r24, 0x08	; 8
    2d9e:	80 83       	st	Z, r24
    2da0:	60 e0       	ldi	r22, 0x00	; 0
    2da2:	41 2c       	mov	r4, r1
    2da4:	51 2c       	mov	r5, r1
    2da6:	32 01       	movw	r6, r4
    2da8:	e3 c5       	rjmp	.+3014   	; 0x3970 <TMR_SR_paramSet+0xd24>
    2daa:	f6 01       	movw	r30, r12
    2dac:	e8 5e       	subi	r30, 0xE8	; 232
    2dae:	f9 4f       	sbci	r31, 0xF9	; 249
    2db0:	80 81       	ld	r24, Z
    2db2:	87 7f       	andi	r24, 0xF7	; 247
    2db4:	80 83       	st	Z, r24
    2db6:	60 e0       	ldi	r22, 0x00	; 0
    2db8:	41 2c       	mov	r4, r1
    2dba:	51 2c       	mov	r5, r1
    2dbc:	32 01       	movw	r6, r4
    2dbe:	d8 c5       	rjmp	.+2992   	; 0x3970 <TMR_SR_paramSet+0xd24>
    2dc0:	f5 01       	movw	r30, r10
    2dc2:	80 81       	ld	r24, Z
    2dc4:	88 23       	and	r24, r24
    2dc6:	59 f0       	breq	.+22     	; 0x2dde <TMR_SR_paramSet+0x192>
    2dc8:	f6 01       	movw	r30, r12
    2dca:	e8 5e       	subi	r30, 0xE8	; 232
    2dcc:	f9 4f       	sbci	r31, 0xF9	; 249
    2dce:	80 81       	ld	r24, Z
    2dd0:	82 60       	ori	r24, 0x02	; 2
    2dd2:	80 83       	st	Z, r24
    2dd4:	60 e0       	ldi	r22, 0x00	; 0
    2dd6:	41 2c       	mov	r4, r1
    2dd8:	51 2c       	mov	r5, r1
    2dda:	32 01       	movw	r6, r4
    2ddc:	c9 c5       	rjmp	.+2962   	; 0x3970 <TMR_SR_paramSet+0xd24>
    2dde:	f6 01       	movw	r30, r12
    2de0:	e8 5e       	subi	r30, 0xE8	; 232
    2de2:	f9 4f       	sbci	r31, 0xF9	; 249
    2de4:	80 81       	ld	r24, Z
    2de6:	8d 7f       	andi	r24, 0xFD	; 253
    2de8:	80 83       	st	Z, r24
    2dea:	60 e0       	ldi	r22, 0x00	; 0
    2dec:	41 2c       	mov	r4, r1
    2dee:	51 2c       	mov	r5, r1
    2df0:	32 01       	movw	r6, r4
    2df2:	be c5       	rjmp	.+2940   	; 0x3970 <TMR_SR_paramSet+0xd24>
    2df4:	d5 01       	movw	r26, r10
    2df6:	8c 91       	ld	r24, X
    2df8:	88 23       	and	r24, r24
    2dfa:	59 f0       	breq	.+22     	; 0x2e12 <TMR_SR_paramSet+0x1c6>
    2dfc:	f6 01       	movw	r30, r12
    2dfe:	e8 5e       	subi	r30, 0xE8	; 232
    2e00:	f9 4f       	sbci	r31, 0xF9	; 249
    2e02:	80 81       	ld	r24, Z
    2e04:	84 60       	ori	r24, 0x04	; 4
    2e06:	80 83       	st	Z, r24
    2e08:	60 e0       	ldi	r22, 0x00	; 0
    2e0a:	41 2c       	mov	r4, r1
    2e0c:	51 2c       	mov	r5, r1
    2e0e:	32 01       	movw	r6, r4
    2e10:	af c5       	rjmp	.+2910   	; 0x3970 <TMR_SR_paramSet+0xd24>
    2e12:	f6 01       	movw	r30, r12
    2e14:	e8 5e       	subi	r30, 0xE8	; 232
    2e16:	f9 4f       	sbci	r31, 0xF9	; 249
    2e18:	80 81       	ld	r24, Z
    2e1a:	8b 7f       	andi	r24, 0xFB	; 251
    2e1c:	80 83       	st	Z, r24
    2e1e:	60 e0       	ldi	r22, 0x00	; 0
    2e20:	41 2c       	mov	r4, r1
    2e22:	51 2c       	mov	r5, r1
    2e24:	32 01       	movw	r6, r4
    2e26:	a4 c5       	rjmp	.+2888   	; 0x3970 <TMR_SR_paramSet+0xd24>
    2e28:	86 01       	movw	r16, r12
    2e2a:	00 58       	subi	r16, 0x80	; 128
    2e2c:	1e 4f       	sbci	r17, 0xFE	; 254
    2e2e:	f5 01       	movw	r30, r10
    2e30:	40 81       	ld	r20, Z
    2e32:	51 81       	ldd	r21, Z+1	; 0x01
    2e34:	62 81       	ldd	r22, Z+2	; 0x02
    2e36:	73 81       	ldd	r23, Z+3	; 0x03
    2e38:	f6 01       	movw	r30, r12
    2e3a:	e0 53       	subi	r30, 0x30	; 48
    2e3c:	fe 4f       	sbci	r31, 0xFE	; 254
    2e3e:	40 83       	st	Z, r20
    2e40:	51 83       	std	Z+1, r21	; 0x01
    2e42:	62 83       	std	Z+2, r22	; 0x02
    2e44:	73 83       	std	Z+3, r23	; 0x03
    2e46:	d6 01       	movw	r26, r12
    2e48:	15 96       	adiw	r26, 0x05	; 5
    2e4a:	8c 91       	ld	r24, X
    2e4c:	88 23       	and	r24, r24
    2e4e:	09 f4       	brne	.+2      	; 0x2e52 <TMR_SR_paramSet+0x206>
    2e50:	52 c5       	rjmp	.+2724   	; 0x38f6 <TMR_SR_paramSet+0xcaa>
    2e52:	f8 01       	movw	r30, r16
    2e54:	80 85       	ldd	r24, Z+8	; 0x08
    2e56:	91 85       	ldd	r25, Z+9	; 0x09
    2e58:	89 2b       	or	r24, r25
    2e5a:	09 f4       	brne	.+2      	; 0x2e5e <TMR_SR_paramSet+0x212>
    2e5c:	51 c5       	rjmp	.+2722   	; 0x3900 <TMR_SR_paramSet+0xcb4>
    2e5e:	c6 01       	movw	r24, r12
    2e60:	0e 94 0c 38 	call	0x7018	; 0x7018 <TMR_SR_cmdSetBaudRate>
    2e64:	2b 01       	movw	r4, r22
    2e66:	3c 01       	movw	r6, r24
    2e68:	67 2b       	or	r22, r23
    2e6a:	68 2b       	or	r22, r24
    2e6c:	69 2b       	or	r22, r25
    2e6e:	09 f0       	breq	.+2      	; 0x2e72 <TMR_SR_paramSet+0x226>
    2e70:	4c c5       	rjmp	.+2712   	; 0x390a <TMR_SR_paramSet+0xcbe>
    2e72:	f8 01       	movw	r30, r16
    2e74:	00 84       	ldd	r0, Z+8	; 0x08
    2e76:	f1 85       	ldd	r31, Z+9	; 0x09
    2e78:	e0 2d       	mov	r30, r0
    2e7a:	d6 01       	movw	r26, r12
    2e7c:	a0 53       	subi	r26, 0x30	; 48
    2e7e:	be 4f       	sbci	r27, 0xFE	; 254
    2e80:	4d 91       	ld	r20, X+
    2e82:	5d 91       	ld	r21, X+
    2e84:	6d 91       	ld	r22, X+
    2e86:	7c 91       	ld	r23, X
    2e88:	c8 01       	movw	r24, r16
    2e8a:	09 95       	icall
    2e8c:	60 e0       	ldi	r22, 0x00	; 0
    2e8e:	70 c5       	rjmp	.+2784   	; 0x3970 <TMR_SR_paramSet+0xd24>
    2e90:	f5 01       	movw	r30, r10
    2e92:	24 81       	ldd	r18, Z+4	; 0x04
    2e94:	35 81       	ldd	r19, Z+5	; 0x05
    2e96:	f6 01       	movw	r30, r12
    2e98:	e4 53       	subi	r30, 0x34	; 52
    2e9a:	fa 4f       	sbci	r31, 0xFA	; 250
    2e9c:	80 81       	ld	r24, Z
    2e9e:	91 81       	ldd	r25, Z+1	; 0x01
    2ea0:	82 17       	cp	r24, r18
    2ea2:	93 07       	cpc	r25, r19
    2ea4:	08 f4       	brcc	.+2      	; 0x2ea8 <TMR_SR_paramSet+0x25c>
    2ea6:	33 c5       	rjmp	.+2662   	; 0x390e <TMR_SR_paramSet+0xcc2>
    2ea8:	20 e0       	ldi	r18, 0x00	; 0
    2eaa:	1c c0       	rjmp	.+56     	; 0x2ee4 <TMR_SR_paramSet+0x298>
    2eac:	f6 01       	movw	r30, r12
    2eae:	e6 53       	subi	r30, 0x36	; 54
    2eb0:	fa 4f       	sbci	r31, 0xFA	; 250
    2eb2:	01 90       	ld	r0, Z+
    2eb4:	f0 81       	ld	r31, Z
    2eb6:	e0 2d       	mov	r30, r0
    2eb8:	88 0f       	add	r24, r24
    2eba:	99 1f       	adc	r25, r25
    2ebc:	88 0f       	add	r24, r24
    2ebe:	99 1f       	adc	r25, r25
    2ec0:	e8 0f       	add	r30, r24
    2ec2:	f9 1f       	adc	r31, r25
    2ec4:	d5 01       	movw	r26, r10
    2ec6:	4d 91       	ld	r20, X+
    2ec8:	5c 91       	ld	r21, X
    2eca:	da 01       	movw	r26, r20
    2ecc:	a8 0f       	add	r26, r24
    2ece:	b9 1f       	adc	r27, r25
    2ed0:	8d 91       	ld	r24, X+
    2ed2:	9d 91       	ld	r25, X+
    2ed4:	0d 90       	ld	r0, X+
    2ed6:	bc 91       	ld	r27, X
    2ed8:	a0 2d       	mov	r26, r0
    2eda:	80 83       	st	Z, r24
    2edc:	91 83       	std	Z+1, r25	; 0x01
    2ede:	a2 83       	std	Z+2, r26	; 0x02
    2ee0:	b3 83       	std	Z+3, r27	; 0x03
    2ee2:	2f 5f       	subi	r18, 0xFF	; 255
    2ee4:	82 2f       	mov	r24, r18
    2ee6:	90 e0       	ldi	r25, 0x00	; 0
    2ee8:	f5 01       	movw	r30, r10
    2eea:	44 81       	ldd	r20, Z+4	; 0x04
    2eec:	55 81       	ldd	r21, Z+5	; 0x05
    2eee:	84 17       	cp	r24, r20
    2ef0:	95 07       	cpc	r25, r21
    2ef2:	e0 f2       	brcs	.-72     	; 0x2eac <TMR_SR_paramSet+0x260>
    2ef4:	f6 01       	movw	r30, r12
    2ef6:	e2 53       	subi	r30, 0x32	; 50
    2ef8:	fa 4f       	sbci	r31, 0xFA	; 250
    2efa:	51 83       	std	Z+1, r21	; 0x01
    2efc:	40 83       	st	Z, r20
    2efe:	60 e0       	ldi	r22, 0x00	; 0
    2f00:	41 2c       	mov	r4, r1
    2f02:	51 2c       	mov	r5, r1
    2f04:	32 01       	movw	r6, r4
    2f06:	34 c5       	rjmp	.+2664   	; 0x3970 <TMR_SR_paramSet+0xd24>
    2f08:	f5 01       	movw	r30, r10
    2f0a:	80 81       	ld	r24, Z
    2f0c:	91 81       	ldd	r25, Z+1	; 0x01
    2f0e:	a2 81       	ldd	r26, Z+2	; 0x02
    2f10:	b3 81       	ldd	r27, Z+3	; 0x03
    2f12:	f6 01       	movw	r30, r12
    2f14:	e0 52       	subi	r30, 0x20	; 32
    2f16:	fe 4f       	sbci	r31, 0xFE	; 254
    2f18:	80 83       	st	Z, r24
    2f1a:	91 83       	std	Z+1, r25	; 0x01
    2f1c:	a2 83       	std	Z+2, r26	; 0x02
    2f1e:	b3 83       	std	Z+3, r27	; 0x03
    2f20:	60 e0       	ldi	r22, 0x00	; 0
    2f22:	41 2c       	mov	r4, r1
    2f24:	51 2c       	mov	r5, r1
    2f26:	32 01       	movw	r6, r4
    2f28:	23 c5       	rjmp	.+2630   	; 0x3970 <TMR_SR_paramSet+0xd24>
    2f2a:	f5 01       	movw	r30, r10
    2f2c:	80 81       	ld	r24, Z
    2f2e:	91 81       	ldd	r25, Z+1	; 0x01
    2f30:	a2 81       	ldd	r26, Z+2	; 0x02
    2f32:	b3 81       	ldd	r27, Z+3	; 0x03
    2f34:	f6 01       	movw	r30, r12
    2f36:	e4 52       	subi	r30, 0x24	; 36
    2f38:	fe 4f       	sbci	r31, 0xFE	; 254
    2f3a:	80 83       	st	Z, r24
    2f3c:	91 83       	std	Z+1, r25	; 0x01
    2f3e:	a2 83       	std	Z+2, r26	; 0x02
    2f40:	b3 83       	std	Z+3, r27	; 0x03
    2f42:	81 e0       	ldi	r24, 0x01	; 1
    2f44:	e3 51       	subi	r30, 0x13	; 19
    2f46:	fc 4f       	sbci	r31, 0xFC	; 252
    2f48:	80 83       	st	Z, r24
    2f4a:	60 e0       	ldi	r22, 0x00	; 0
    2f4c:	41 2c       	mov	r4, r1
    2f4e:	51 2c       	mov	r5, r1
    2f50:	32 01       	movw	r6, r4
    2f52:	0e c5       	rjmp	.+2588   	; 0x3970 <TMR_SR_paramSet+0xd24>
    2f54:	a5 01       	movw	r20, r10
    2f56:	6b e0       	ldi	r22, 0x0B	; 11
    2f58:	c6 01       	movw	r24, r12
    2f5a:	0e 94 ab 4d 	call	0x9b56	; 0x9b56 <TMR_SR_cmdSetReaderConfiguration>
    2f5e:	2b 01       	movw	r4, r22
    2f60:	3c 01       	movw	r6, r24
    2f62:	60 e0       	ldi	r22, 0x00	; 0
    2f64:	05 c5       	rjmp	.+2570   	; 0x3970 <TMR_SR_paramSet+0xd24>
    2f66:	f5 01       	movw	r30, r10
    2f68:	80 81       	ld	r24, Z
    2f6a:	91 81       	ldd	r25, Z+1	; 0x01
    2f6c:	a2 81       	ldd	r26, Z+2	; 0x02
    2f6e:	b3 81       	ldd	r27, Z+3	; 0x03
    2f70:	8f 3f       	cpi	r24, 0xFF	; 255
    2f72:	ff ef       	ldi	r31, 0xFF	; 255
    2f74:	9f 07       	cpc	r25, r31
    2f76:	af 07       	cpc	r26, r31
    2f78:	bf 07       	cpc	r27, r31
    2f7a:	19 f4       	brne	.+6      	; 0x2f82 <TMR_SR_paramSet+0x336>
    2f7c:	80 e0       	ldi	r24, 0x00	; 0
    2f7e:	90 e0       	ldi	r25, 0x00	; 0
    2f80:	dc 01       	movw	r26, r24
    2f82:	89 83       	std	Y+1, r24	; 0x01
    2f84:	9a 83       	std	Y+2, r25	; 0x02
    2f86:	ab 83       	std	Y+3, r26	; 0x03
    2f88:	bc 83       	std	Y+4, r27	; 0x04
    2f8a:	ae 01       	movw	r20, r28
    2f8c:	4f 5f       	subi	r20, 0xFF	; 255
    2f8e:	5f 4f       	sbci	r21, 0xFF	; 255
    2f90:	6d e0       	ldi	r22, 0x0D	; 13
    2f92:	c6 01       	movw	r24, r12
    2f94:	0e 94 ab 4d 	call	0x9b56	; 0x9b56 <TMR_SR_cmdSetReaderConfiguration>
    2f98:	2b 01       	movw	r4, r22
    2f9a:	3c 01       	movw	r6, r24
    2f9c:	60 e0       	ldi	r22, 0x00	; 0
    2f9e:	e8 c4       	rjmp	.+2512   	; 0x3970 <TMR_SR_paramSet+0xd24>
    2fa0:	a5 01       	movw	r20, r10
    2fa2:	6c e0       	ldi	r22, 0x0C	; 12
    2fa4:	c6 01       	movw	r24, r12
    2fa6:	0e 94 ab 4d 	call	0x9b56	; 0x9b56 <TMR_SR_cmdSetReaderConfiguration>
    2faa:	2b 01       	movw	r4, r22
    2fac:	3c 01       	movw	r6, r24
    2fae:	67 2b       	or	r22, r23
    2fb0:	68 2b       	or	r22, r24
    2fb2:	69 2b       	or	r22, r25
    2fb4:	09 f0       	breq	.+2      	; 0x2fb8 <TMR_SR_paramSet+0x36c>
    2fb6:	b5 c4       	rjmp	.+2410   	; 0x3922 <TMR_SR_paramSet+0xcd6>
    2fb8:	d5 01       	movw	r26, r10
    2fba:	8c 91       	ld	r24, X
    2fbc:	f6 01       	movw	r30, r12
    2fbe:	e9 53       	subi	r30, 0x39	; 57
    2fc0:	fa 4f       	sbci	r31, 0xFA	; 250
    2fc2:	80 83       	st	Z, r24
    2fc4:	81 e0       	ldi	r24, 0x01	; 1
    2fc6:	31 96       	adiw	r30, 0x01	; 1
    2fc8:	80 83       	st	Z, r24
    2fca:	60 e0       	ldi	r22, 0x00	; 0
    2fcc:	d1 c4       	rjmp	.+2466   	; 0x3970 <TMR_SR_paramSet+0xd24>
    2fce:	f5 01       	movw	r30, r10
    2fd0:	40 81       	ld	r20, Z
    2fd2:	51 81       	ldd	r21, Z+1	; 0x01
    2fd4:	62 81       	ldd	r22, Z+2	; 0x02
    2fd6:	73 81       	ldd	r23, Z+3	; 0x03
    2fd8:	c6 01       	movw	r24, r12
    2fda:	0e 94 4c 4b 	call	0x9698	; 0x9698 <TMR_SR_cmdSetReadTxPower>
    2fde:	2b 01       	movw	r4, r22
    2fe0:	3c 01       	movw	r6, r24
    2fe2:	60 e0       	ldi	r22, 0x00	; 0
    2fe4:	c5 c4       	rjmp	.+2442   	; 0x3970 <TMR_SR_paramSet+0xd24>
    2fe6:	d5 01       	movw	r26, r10
    2fe8:	4d 91       	ld	r20, X+
    2fea:	5d 91       	ld	r21, X+
    2fec:	6d 91       	ld	r22, X+
    2fee:	7c 91       	ld	r23, X
    2ff0:	c6 01       	movw	r24, r12
    2ff2:	0e 94 fc 4b 	call	0x97f8	; 0x97f8 <TMR_SR_cmdSetWriteTxPower>
    2ff6:	2b 01       	movw	r4, r22
    2ff8:	3c 01       	movw	r6, r24
    2ffa:	60 e0       	ldi	r22, 0x00	; 0
    2ffc:	b9 c4       	rjmp	.+2418   	; 0x3970 <TMR_SR_paramSet+0xd24>
    2ffe:	40 e0       	ldi	r20, 0x00	; 0
    3000:	50 e0       	ldi	r21, 0x00	; 0
    3002:	b5 01       	movw	r22, r10
    3004:	c6 01       	movw	r24, r12
    3006:	63 d8       	rcall	.-3898   	; 0x20ce <setPortValues>
    3008:	2b 01       	movw	r4, r22
    300a:	3c 01       	movw	r6, r24
    300c:	60 e0       	ldi	r22, 0x00	; 0
    300e:	b0 c4       	rjmp	.+2400   	; 0x3970 <TMR_SR_paramSet+0xd24>
    3010:	41 e0       	ldi	r20, 0x01	; 1
    3012:	50 e0       	ldi	r21, 0x00	; 0
    3014:	b5 01       	movw	r22, r10
    3016:	c6 01       	movw	r24, r12
    3018:	5a d8       	rcall	.-3916   	; 0x20ce <setPortValues>
    301a:	2b 01       	movw	r4, r22
    301c:	3c 01       	movw	r6, r24
    301e:	60 e0       	ldi	r22, 0x00	; 0
    3020:	a7 c4       	rjmp	.+2382   	; 0x3970 <TMR_SR_paramSet+0xd24>
    3022:	42 e0       	ldi	r20, 0x02	; 2
    3024:	50 e0       	ldi	r21, 0x00	; 0
    3026:	b5 01       	movw	r22, r10
    3028:	c6 01       	movw	r24, r12
    302a:	51 d8       	rcall	.-3934   	; 0x20ce <setPortValues>
    302c:	2b 01       	movw	r4, r22
    302e:	3c 01       	movw	r6, r24
    3030:	60 e0       	ldi	r22, 0x00	; 0
    3032:	9e c4       	rjmp	.+2364   	; 0x3970 <TMR_SR_paramSet+0xd24>
    3034:	64 e0       	ldi	r22, 0x04	; 4
    3036:	41 2c       	mov	r4, r1
    3038:	51 2c       	mov	r5, r1
    303a:	32 01       	movw	r6, r4
    303c:	99 c4       	rjmp	.+2354   	; 0x3970 <TMR_SR_paramSet+0xd24>
    303e:	66 e0       	ldi	r22, 0x06	; 6
    3040:	41 2c       	mov	r4, r1
    3042:	51 2c       	mov	r5, r1
    3044:	32 01       	movw	r6, r4
    3046:	94 c4       	rjmp	.+2344   	; 0x3970 <TMR_SR_paramSet+0xd24>
    3048:	60 e0       	ldi	r22, 0x00	; 0
    304a:	41 2c       	mov	r4, r1
    304c:	51 2c       	mov	r5, r1
    304e:	32 01       	movw	r6, r4
    3050:	8f c4       	rjmp	.+2334   	; 0x3970 <TMR_SR_paramSet+0xd24>
    3052:	68 e0       	ldi	r22, 0x08	; 8
    3054:	41 2c       	mov	r4, r1
    3056:	51 2c       	mov	r5, r1
    3058:	32 01       	movw	r6, r4
    305a:	8a c4       	rjmp	.+2324   	; 0x3970 <TMR_SR_paramSet+0xd24>
    305c:	f6 01       	movw	r30, r12
    305e:	ef 5f       	subi	r30, 0xFF	; 255
    3060:	f9 4f       	sbci	r31, 0xF9	; 249
    3062:	10 82       	st	Z, r1
    3064:	40 e0       	ldi	r20, 0x00	; 0
    3066:	50 e0       	ldi	r21, 0x00	; 0
    3068:	18 c0       	rjmp	.+48     	; 0x309a <TMR_SR_paramSet+0x44e>
    306a:	d5 01       	movw	r26, r10
    306c:	ed 91       	ld	r30, X+
    306e:	fc 91       	ld	r31, X
    3070:	e4 0f       	add	r30, r20
    3072:	f5 1f       	adc	r31, r21
    3074:	20 81       	ld	r18, Z
    3076:	30 e0       	ldi	r19, 0x00	; 0
    3078:	21 50       	subi	r18, 0x01	; 1
    307a:	31 09       	sbc	r19, r1
    307c:	81 e0       	ldi	r24, 0x01	; 1
    307e:	90 e0       	ldi	r25, 0x00	; 0
    3080:	02 c0       	rjmp	.+4      	; 0x3086 <TMR_SR_paramSet+0x43a>
    3082:	88 0f       	add	r24, r24
    3084:	99 1f       	adc	r25, r25
    3086:	2a 95       	dec	r18
    3088:	e2 f7       	brpl	.-8      	; 0x3082 <TMR_SR_paramSet+0x436>
    308a:	f6 01       	movw	r30, r12
    308c:	ef 5f       	subi	r30, 0xFF	; 255
    308e:	f9 4f       	sbci	r31, 0xF9	; 249
    3090:	90 81       	ld	r25, Z
    3092:	89 2b       	or	r24, r25
    3094:	80 83       	st	Z, r24
    3096:	4f 5f       	subi	r20, 0xFF	; 255
    3098:	5f 4f       	sbci	r21, 0xFF	; 255
    309a:	f5 01       	movw	r30, r10
    309c:	84 81       	ldd	r24, Z+4	; 0x04
    309e:	95 81       	ldd	r25, Z+5	; 0x05
    30a0:	48 17       	cp	r20, r24
    30a2:	59 07       	cpc	r21, r25
    30a4:	28 f4       	brcc	.+10     	; 0x30b0 <TMR_SR_paramSet+0x464>
    30a6:	82 81       	ldd	r24, Z+2	; 0x02
    30a8:	93 81       	ldd	r25, Z+3	; 0x03
    30aa:	48 17       	cp	r20, r24
    30ac:	59 07       	cpc	r21, r25
    30ae:	e8 f2       	brcs	.-70     	; 0x306a <TMR_SR_paramSet+0x41e>
    30b0:	a6 01       	movw	r20, r12
    30b2:	4f 5f       	subi	r20, 0xFF	; 255
    30b4:	59 4f       	sbci	r21, 0xF9	; 249
    30b6:	63 e0       	ldi	r22, 0x03	; 3
    30b8:	c6 01       	movw	r24, r12
    30ba:	0e 94 ab 4d 	call	0x9b56	; 0x9b56 <TMR_SR_cmdSetReaderConfiguration>
    30be:	2b 01       	movw	r4, r22
    30c0:	3c 01       	movw	r6, r24
    30c2:	67 2b       	or	r22, r23
    30c4:	68 2b       	or	r22, r24
    30c6:	69 2b       	or	r22, r25
    30c8:	09 f0       	breq	.+2      	; 0x30cc <TMR_SR_paramSet+0x480>
    30ca:	2d c4       	rjmp	.+2138   	; 0x3926 <TMR_SR_paramSet+0xcda>
    30cc:	81 e0       	ldi	r24, 0x01	; 1
    30ce:	f6 01       	movw	r30, r12
    30d0:	ee 50       	subi	r30, 0x0E	; 14
    30d2:	fa 4f       	sbci	r31, 0xFA	; 250
    30d4:	80 83       	st	Z, r24
    30d6:	c6 01       	movw	r24, r12
    30d8:	0e 94 ae 05 	call	0xb5c	; 0xb5c <initTxRxMapFromPorts>
    30dc:	2b 01       	movw	r4, r22
    30de:	3c 01       	movw	r6, r24
    30e0:	60 e0       	ldi	r22, 0x00	; 0
    30e2:	46 c4       	rjmp	.+2188   	; 0x3970 <TMR_SR_paramSet+0xd24>
    30e4:	19 82       	std	Y+1, r1	; 0x01
    30e6:	40 e0       	ldi	r20, 0x00	; 0
    30e8:	50 e0       	ldi	r21, 0x00	; 0
    30ea:	15 c0       	rjmp	.+42     	; 0x3116 <TMR_SR_paramSet+0x4ca>
    30ec:	d5 01       	movw	r26, r10
    30ee:	ed 91       	ld	r30, X+
    30f0:	fc 91       	ld	r31, X
    30f2:	e4 0f       	add	r30, r20
    30f4:	f5 1f       	adc	r31, r21
    30f6:	20 81       	ld	r18, Z
    30f8:	30 e0       	ldi	r19, 0x00	; 0
    30fa:	21 50       	subi	r18, 0x01	; 1
    30fc:	31 09       	sbc	r19, r1
    30fe:	81 e0       	ldi	r24, 0x01	; 1
    3100:	90 e0       	ldi	r25, 0x00	; 0
    3102:	02 c0       	rjmp	.+4      	; 0x3108 <TMR_SR_paramSet+0x4bc>
    3104:	88 0f       	add	r24, r24
    3106:	99 1f       	adc	r25, r25
    3108:	2a 95       	dec	r18
    310a:	e2 f7       	brpl	.-8      	; 0x3104 <TMR_SR_paramSet+0x4b8>
    310c:	99 81       	ldd	r25, Y+1	; 0x01
    310e:	89 2b       	or	r24, r25
    3110:	89 83       	std	Y+1, r24	; 0x01
    3112:	4f 5f       	subi	r20, 0xFF	; 255
    3114:	5f 4f       	sbci	r21, 0xFF	; 255
    3116:	f5 01       	movw	r30, r10
    3118:	84 81       	ldd	r24, Z+4	; 0x04
    311a:	95 81       	ldd	r25, Z+5	; 0x05
    311c:	48 17       	cp	r20, r24
    311e:	59 07       	cpc	r21, r25
    3120:	28 f4       	brcc	.+10     	; 0x312c <TMR_SR_paramSet+0x4e0>
    3122:	82 81       	ldd	r24, Z+2	; 0x02
    3124:	93 81       	ldd	r25, Z+3	; 0x03
    3126:	48 17       	cp	r20, r24
    3128:	59 07       	cpc	r21, r25
    312a:	00 f3       	brcs	.-64     	; 0x30ec <TMR_SR_paramSet+0x4a0>
    312c:	ae 01       	movw	r20, r28
    312e:	4f 5f       	subi	r20, 0xFF	; 255
    3130:	5f 4f       	sbci	r21, 0xFF	; 255
    3132:	6e e1       	ldi	r22, 0x1E	; 30
    3134:	c6 01       	movw	r24, r12
    3136:	0e 94 ab 4d 	call	0x9b56	; 0x9b56 <TMR_SR_cmdSetReaderConfiguration>
    313a:	2b 01       	movw	r4, r22
    313c:	3c 01       	movw	r6, r24
    313e:	60 e0       	ldi	r22, 0x00	; 0
    3140:	17 c4       	rjmp	.+2094   	; 0x3970 <TMR_SR_paramSet+0xd24>
    3142:	f6 01       	movw	r30, r12
    3144:	ec 52       	subi	r30, 0x2C	; 44
    3146:	fe 4f       	sbci	r31, 0xFE	; 254
    3148:	80 81       	ld	r24, Z
    314a:	91 81       	ldd	r25, Z+1	; 0x01
    314c:	89 2b       	or	r24, r25
    314e:	59 f4       	brne	.+22     	; 0x3166 <TMR_SR_paramSet+0x51a>
    3150:	c6 01       	movw	r24, r12
    3152:	0e 94 ae 05 	call	0xb5c	; 0xb5c <initTxRxMapFromPorts>
    3156:	2b 01       	movw	r4, r22
    3158:	3c 01       	movw	r6, r24
    315a:	61 15       	cp	r22, r1
    315c:	71 05       	cpc	r23, r1
    315e:	81 05       	cpc	r24, r1
    3160:	91 05       	cpc	r25, r1
    3162:	21 f0       	breq	.+8      	; 0x316c <TMR_SR_paramSet+0x520>
    3164:	9b c4       	rjmp	.+2358   	; 0x3a9c <TMR_SR_paramSet+0xe50>
    3166:	41 2c       	mov	r4, r1
    3168:	51 2c       	mov	r5, r1
    316a:	32 01       	movw	r6, r4
    316c:	f6 01       	movw	r30, r12
    316e:	ec 52       	subi	r30, 0x2C	; 44
    3170:	fe 4f       	sbci	r31, 0xFE	; 254
    3172:	80 81       	ld	r24, Z
    3174:	91 81       	ldd	r25, Z+1	; 0x01
    3176:	98 a3       	std	Y+32, r25	; 0x20
    3178:	8f 8f       	std	Y+31, r24	; 0x1f
    317a:	d5 01       	movw	r26, r10
    317c:	13 96       	adiw	r26, 0x03	; 3
    317e:	2c 90       	ld	r2, X
    3180:	fc 01       	movw	r30, r24
    3182:	83 80       	ldd	r8, Z+3	; 0x03
    3184:	82 14       	cp	r8, r2
    3186:	08 f4       	brcc	.+2      	; 0x318a <TMR_SR_paramSet+0x53e>
    3188:	d0 c3       	rjmp	.+1952   	; 0x392a <TMR_SR_paramSet+0xcde>
    318a:	20 e0       	ldi	r18, 0x00	; 0
    318c:	30 e0       	ldi	r19, 0x00	; 0
    318e:	91 2c       	mov	r9, r1
    3190:	56 c0       	rjmp	.+172    	; 0x323e <TMR_SR_paramSet+0x5f2>
    3192:	d5 01       	movw	r26, r10
    3194:	6d 91       	ld	r22, X+
    3196:	7c 91       	ld	r23, X
    3198:	f9 01       	movw	r30, r18
    319a:	ee 0f       	add	r30, r30
    319c:	ff 1f       	adc	r31, r31
    319e:	e2 0f       	add	r30, r18
    31a0:	f3 1f       	adc	r31, r19
    31a2:	e6 0f       	add	r30, r22
    31a4:	f7 1f       	adc	r31, r23
    31a6:	91 80       	ldd	r9, Z+1	; 0x01
    31a8:	af 8d       	ldd	r26, Y+31	; 0x1f
    31aa:	b8 a1       	ldd	r27, Y+32	; 0x20
    31ac:	6d 91       	ld	r22, X+
    31ae:	7c 91       	ld	r23, X
    31b0:	dc 01       	movw	r26, r24
    31b2:	aa 0f       	add	r26, r26
    31b4:	bb 1f       	adc	r27, r27
    31b6:	a8 0f       	add	r26, r24
    31b8:	b9 1f       	adc	r27, r25
    31ba:	a6 0f       	add	r26, r22
    31bc:	b7 1f       	adc	r27, r23
    31be:	6c 91       	ld	r22, X
    31c0:	96 12       	cpse	r9, r22
    31c2:	03 c0       	rjmp	.+6      	; 0x31ca <TMR_SR_paramSet+0x57e>
    31c4:	62 81       	ldd	r22, Z+2	; 0x02
    31c6:	96 16       	cp	r9, r22
    31c8:	49 f0       	breq	.+18     	; 0x31dc <TMR_SR_paramSet+0x590>
    31ca:	01 96       	adiw	r24, 0x01	; 1
    31cc:	02 c0       	rjmp	.+4      	; 0x31d2 <TMR_SR_paramSet+0x586>
    31ce:	80 e0       	ldi	r24, 0x00	; 0
    31d0:	90 e0       	ldi	r25, 0x00	; 0
    31d2:	48 2d       	mov	r20, r8
    31d4:	50 e0       	ldi	r21, 0x00	; 0
    31d6:	84 17       	cp	r24, r20
    31d8:	95 07       	cpc	r25, r21
    31da:	d8 f2       	brcs	.-74     	; 0x3192 <TMR_SR_paramSet+0x546>
    31dc:	84 17       	cp	r24, r20
    31de:	95 07       	cpc	r25, r21
    31e0:	09 f4       	brne	.+2      	; 0x31e4 <TMR_SR_paramSet+0x598>
    31e2:	60 c4       	rjmp	.+2240   	; 0x3aa4 <TMR_SR_paramSet+0xe58>
    31e4:	f9 01       	movw	r30, r18
    31e6:	31 96       	adiw	r30, 0x01	; 1
    31e8:	fa a3       	std	Y+34, r31	; 0x22
    31ea:	e9 a3       	std	Y+33, r30	; 0x21
    31ec:	af 01       	movw	r20, r30
    31ee:	1f c0       	rjmp	.+62     	; 0x322e <TMR_SR_paramSet+0x5e2>
    31f0:	d5 01       	movw	r26, r10
    31f2:	6d 91       	ld	r22, X+
    31f4:	7c 91       	ld	r23, X
    31f6:	f9 01       	movw	r30, r18
    31f8:	ee 0f       	add	r30, r30
    31fa:	ff 1f       	adc	r31, r31
    31fc:	e2 0f       	add	r30, r18
    31fe:	f3 1f       	adc	r31, r19
    3200:	e6 0f       	add	r30, r22
    3202:	f7 1f       	adc	r31, r23
    3204:	90 80       	ld	r9, Z
    3206:	ca 01       	movw	r24, r20
    3208:	88 0f       	add	r24, r24
    320a:	99 1f       	adc	r25, r25
    320c:	84 0f       	add	r24, r20
    320e:	95 1f       	adc	r25, r21
    3210:	db 01       	movw	r26, r22
    3212:	a8 0f       	add	r26, r24
    3214:	b9 1f       	adc	r27, r25
    3216:	8c 91       	ld	r24, X
    3218:	98 16       	cp	r9, r24
    321a:	09 f4       	brne	.+2      	; 0x321e <TMR_SR_paramSet+0x5d2>
    321c:	48 c4       	rjmp	.+2192   	; 0x3aae <TMR_SR_paramSet+0xe62>
    321e:	91 81       	ldd	r25, Z+1	; 0x01
    3220:	11 96       	adiw	r26, 0x01	; 1
    3222:	8c 91       	ld	r24, X
    3224:	98 17       	cp	r25, r24
    3226:	09 f4       	brne	.+2      	; 0x322a <TMR_SR_paramSet+0x5de>
    3228:	47 c4       	rjmp	.+2190   	; 0x3ab8 <TMR_SR_paramSet+0xe6c>
    322a:	4f 5f       	subi	r20, 0xFF	; 255
    322c:	5f 4f       	sbci	r21, 0xFF	; 255
    322e:	40 17       	cp	r20, r16
    3230:	51 07       	cpc	r21, r17
    3232:	f0 f2       	brcs	.-68     	; 0x31f0 <TMR_SR_paramSet+0x5a4>
    3234:	99 24       	eor	r9, r9
    3236:	93 94       	inc	r9
    3238:	92 0e       	add	r9, r18
    323a:	29 a1       	ldd	r18, Y+33	; 0x21
    323c:	3a a1       	ldd	r19, Y+34	; 0x22
    323e:	02 2d       	mov	r16, r2
    3240:	10 e0       	ldi	r17, 0x00	; 0
    3242:	20 17       	cp	r18, r16
    3244:	31 07       	cpc	r19, r17
    3246:	18 f2       	brcs	.-122    	; 0x31ce <TMR_SR_paramSet+0x582>
    3248:	40 e0       	ldi	r20, 0x00	; 0
    324a:	50 e0       	ldi	r21, 0x00	; 0
    324c:	19 c0       	rjmp	.+50     	; 0x3280 <TMR_SR_paramSet+0x634>
    324e:	af 8d       	ldd	r26, Y+31	; 0x1f
    3250:	b8 a1       	ldd	r27, Y+32	; 0x20
    3252:	ed 91       	ld	r30, X+
    3254:	fc 91       	ld	r31, X
    3256:	9a 01       	movw	r18, r20
    3258:	22 0f       	add	r18, r18
    325a:	33 1f       	adc	r19, r19
    325c:	24 0f       	add	r18, r20
    325e:	35 1f       	adc	r19, r21
    3260:	e2 0f       	add	r30, r18
    3262:	f3 1f       	adc	r31, r19
    3264:	d5 01       	movw	r26, r10
    3266:	6d 91       	ld	r22, X+
    3268:	7c 91       	ld	r23, X
    326a:	db 01       	movw	r26, r22
    326c:	a2 0f       	add	r26, r18
    326e:	b3 1f       	adc	r27, r19
    3270:	8d 91       	ld	r24, X+
    3272:	9d 91       	ld	r25, X+
    3274:	ac 91       	ld	r26, X
    3276:	80 83       	st	Z, r24
    3278:	91 83       	std	Z+1, r25	; 0x01
    327a:	a2 83       	std	Z+2, r26	; 0x02
    327c:	4f 5f       	subi	r20, 0xFF	; 255
    327e:	5f 4f       	sbci	r21, 0xFF	; 255
    3280:	29 2d       	mov	r18, r9
    3282:	30 e0       	ldi	r19, 0x00	; 0
    3284:	42 17       	cp	r20, r18
    3286:	53 07       	cpc	r21, r19
    3288:	10 f3       	brcs	.-60     	; 0x324e <TMR_SR_paramSet+0x602>
    328a:	ef 8d       	ldd	r30, Y+31	; 0x1f
    328c:	f8 a1       	ldd	r31, Y+32	; 0x20
    328e:	93 82       	std	Z+3, r9	; 0x03
    3290:	81 e0       	ldi	r24, 0x01	; 1
    3292:	f6 01       	movw	r30, r12
    3294:	ee 50       	subi	r30, 0x0E	; 14
    3296:	fa 4f       	sbci	r31, 0xFA	; 250
    3298:	80 83       	st	Z, r24
    329a:	60 e0       	ldi	r22, 0x00	; 0
    329c:	69 c3       	rjmp	.+1746   	; 0x3970 <TMR_SR_paramSet+0xd24>
    329e:	d5 01       	movw	r26, r10
    32a0:	4d 91       	ld	r20, X+
    32a2:	5c 91       	ld	r21, X
    32a4:	11 97       	sbiw	r26, 0x01	; 1
    32a6:	14 96       	adiw	r26, 0x04	; 4
    32a8:	6c 91       	ld	r22, X
    32aa:	c6 01       	movw	r24, r12
    32ac:	0e 94 ff 4b 	call	0x97fe	; 0x97fe <TMR_SR_cmdSetFrequencyHopTable>
    32b0:	2b 01       	movw	r4, r22
    32b2:	3c 01       	movw	r6, r24
    32b4:	60 e0       	ldi	r22, 0x00	; 0
    32b6:	5c c3       	rjmp	.+1720   	; 0x3970 <TMR_SR_paramSet+0xd24>
    32b8:	f5 01       	movw	r30, r10
    32ba:	40 81       	ld	r20, Z
    32bc:	51 81       	ldd	r21, Z+1	; 0x01
    32be:	62 81       	ldd	r22, Z+2	; 0x02
    32c0:	73 81       	ldd	r23, Z+3	; 0x03
    32c2:	21 e0       	ldi	r18, 0x01	; 1
    32c4:	c6 01       	movw	r24, r12
    32c6:	0e 94 72 4c 	call	0x98e4	; 0x98e4 <TMR_SR_cmdSetFrequencyHopTableOption>
    32ca:	2b 01       	movw	r4, r22
    32cc:	3c 01       	movw	r6, r24
    32ce:	60 e0       	ldi	r22, 0x00	; 0
    32d0:	4f c3       	rjmp	.+1694   	; 0x3970 <TMR_SR_paramSet+0xd24>
    32d2:	d5 01       	movw	r26, r10
    32d4:	4d 91       	ld	r20, X+
    32d6:	5c 91       	ld	r21, X
    32d8:	f6 01       	movw	r30, r12
    32da:	ec 51       	subi	r30, 0x1C	; 28
    32dc:	fe 4f       	sbci	r31, 0xFE	; 254
    32de:	60 81       	ld	r22, Z
    32e0:	c6 01       	movw	r24, r12
    32e2:	0e 94 26 4d 	call	0x9a4c	; 0x9a4c <TMR_SR_cmdSetRegionDwellTime>
    32e6:	2b 01       	movw	r4, r22
    32e8:	3c 01       	movw	r6, r24
    32ea:	60 e0       	ldi	r22, 0x00	; 0
    32ec:	41 c3       	rjmp	.+1666   	; 0x3970 <TMR_SR_paramSet+0xd24>
    32ee:	f5 01       	movw	r30, r10
    32f0:	40 81       	ld	r20, Z
    32f2:	f6 01       	movw	r30, r12
    32f4:	ec 51       	subi	r30, 0x1C	; 28
    32f6:	fe 4f       	sbci	r31, 0xFE	; 254
    32f8:	60 81       	ld	r22, Z
    32fa:	c6 01       	movw	r24, r12
    32fc:	0e 94 23 4d 	call	0x9a46	; 0x9a46 <TMR_SR_cmdSetRegionDwellTimeEnable>
    3300:	2b 01       	movw	r4, r22
    3302:	3c 01       	movw	r6, r24
    3304:	60 e0       	ldi	r22, 0x00	; 0
    3306:	34 c3       	rjmp	.+1640   	; 0x3970 <TMR_SR_paramSet+0xd24>
    3308:	d5 01       	movw	r26, r10
    330a:	4c 91       	ld	r20, X
    330c:	f6 01       	movw	r30, r12
    330e:	ec 51       	subi	r30, 0x1C	; 28
    3310:	fe 4f       	sbci	r31, 0xFE	; 254
    3312:	60 81       	ld	r22, Z
    3314:	c6 01       	movw	r24, r12
    3316:	0e 94 52 4d 	call	0x9aa4	; 0x9aa4 <TMR_SR_cmdSetRegionLbtThreshold>
    331a:	2b 01       	movw	r4, r22
    331c:	3c 01       	movw	r6, r24
    331e:	60 e0       	ldi	r22, 0x00	; 0
    3320:	27 c3       	rjmp	.+1614   	; 0x3970 <TMR_SR_paramSet+0xd24>
    3322:	f5 01       	movw	r30, r10
    3324:	40 81       	ld	r20, Z
    3326:	f6 01       	movw	r30, r12
    3328:	ec 51       	subi	r30, 0x1C	; 28
    332a:	fe 4f       	sbci	r31, 0xFE	; 254
    332c:	60 81       	ld	r22, Z
    332e:	c6 01       	movw	r24, r12
    3330:	0e 94 7d 4d 	call	0x9afa	; 0x9afa <TMR_SR_cmdSetRegionLbt>
    3334:	2b 01       	movw	r4, r22
    3336:	3c 01       	movw	r6, r24
    3338:	60 e0       	ldi	r22, 0x00	; 0
    333a:	1a c3       	rjmp	.+1588   	; 0x3970 <TMR_SR_paramSet+0xd24>
    333c:	f6 01       	movw	r30, r12
    333e:	ec 52       	subi	r30, 0x2C	; 44
    3340:	fe 4f       	sbci	r31, 0xFE	; 254
    3342:	80 81       	ld	r24, Z
    3344:	91 81       	ldd	r25, Z+1	; 0x01
    3346:	89 2b       	or	r24, r25
    3348:	59 f4       	brne	.+22     	; 0x3360 <TMR_SR_paramSet+0x714>
    334a:	c6 01       	movw	r24, r12
    334c:	0e 94 ae 05 	call	0xb5c	; 0xb5c <initTxRxMapFromPorts>
    3350:	8b 01       	movw	r16, r22
    3352:	9c 01       	movw	r18, r24
    3354:	61 15       	cp	r22, r1
    3356:	71 05       	cpc	r23, r1
    3358:	81 05       	cpc	r24, r1
    335a:	91 05       	cpc	r25, r1
    335c:	09 f0       	breq	.+2      	; 0x3360 <TMR_SR_paramSet+0x714>
    335e:	b1 c3       	rjmp	.+1890   	; 0x3ac2 <TMR_SR_paramSet+0xe76>
    3360:	f6 01       	movw	r30, r12
    3362:	ec 52       	subi	r30, 0x2C	; 44
    3364:	fe 4f       	sbci	r31, 0xFE	; 254
    3366:	a0 81       	ld	r26, Z
    3368:	b1 81       	ldd	r27, Z+1	; 0x01
    336a:	f5 01       	movw	r30, r10
    336c:	60 81       	ld	r22, Z
    336e:	80 e0       	ldi	r24, 0x00	; 0
    3370:	19 c0       	rjmp	.+50     	; 0x33a4 <TMR_SR_paramSet+0x758>
    3372:	ed 91       	ld	r30, X+
    3374:	fc 91       	ld	r31, X
    3376:	11 97       	sbiw	r26, 0x01	; 1
    3378:	28 2f       	mov	r18, r24
    337a:	30 e0       	ldi	r19, 0x00	; 0
    337c:	a9 01       	movw	r20, r18
    337e:	44 0f       	add	r20, r20
    3380:	55 1f       	adc	r21, r21
    3382:	24 0f       	add	r18, r20
    3384:	35 1f       	adc	r19, r21
    3386:	e2 0f       	add	r30, r18
    3388:	f3 1f       	adc	r31, r19
    338a:	90 81       	ld	r25, Z
    338c:	69 13       	cpse	r22, r25
    338e:	09 c0       	rjmp	.+18     	; 0x33a2 <TMR_SR_paramSet+0x756>
    3390:	f6 01       	movw	r30, r12
    3392:	64 ab       	std	Z+52, r22	; 0x34
    3394:	8d 91       	ld	r24, X+
    3396:	9c 91       	ld	r25, X
    3398:	fc 01       	movw	r30, r24
    339a:	e2 0f       	add	r30, r18
    339c:	f3 1f       	adc	r31, r19
    339e:	61 81       	ldd	r22, Z+1	; 0x01
    33a0:	0b c0       	rjmp	.+22     	; 0x33b8 <TMR_SR_paramSet+0x76c>
    33a2:	8f 5f       	subi	r24, 0xFF	; 255
    33a4:	13 96       	adiw	r26, 0x03	; 3
    33a6:	9c 91       	ld	r25, X
    33a8:	13 97       	sbiw	r26, 0x03	; 3
    33aa:	89 17       	cp	r24, r25
    33ac:	28 f4       	brcc	.+10     	; 0x33b8 <TMR_SR_paramSet+0x76c>
    33ae:	12 96       	adiw	r26, 0x02	; 2
    33b0:	9c 91       	ld	r25, X
    33b2:	12 97       	sbiw	r26, 0x02	; 2
    33b4:	89 17       	cp	r24, r25
    33b6:	e8 f2       	brcs	.-70     	; 0x3372 <TMR_SR_paramSet+0x726>
    33b8:	66 23       	and	r22, r22
    33ba:	09 f4       	brne	.+2      	; 0x33be <TMR_SR_paramSet+0x772>
    33bc:	c0 c2       	rjmp	.+1408   	; 0x393e <TMR_SR_paramSet+0xcf2>
    33be:	40 e0       	ldi	r20, 0x00	; 0
    33c0:	c6 01       	movw	r24, r12
    33c2:	0e 94 d2 49 	call	0x93a4	; 0x93a4 <TMR_SR_cmdSetTxRxPorts>
    33c6:	2b 01       	movw	r4, r22
    33c8:	3c 01       	movw	r6, r24
    33ca:	60 e0       	ldi	r22, 0x00	; 0
    33cc:	d1 c2       	rjmp	.+1442   	; 0x3970 <TMR_SR_paramSet+0xd24>
    33ce:	d5 01       	movw	r26, r10
    33d0:	6c 91       	ld	r22, X
    33d2:	c6 01       	movw	r24, r12
    33d4:	0e 94 1f 04 	call	0x83e	; 0x83e <setProtocol>
    33d8:	2b 01       	movw	r4, r22
    33da:	3c 01       	movw	r6, r24
    33dc:	67 2b       	or	r22, r23
    33de:	68 2b       	or	r22, r24
    33e0:	69 2b       	or	r22, r25
    33e2:	09 f0       	breq	.+2      	; 0x33e6 <TMR_SR_paramSet+0x79a>
    33e4:	b6 c2       	rjmp	.+1388   	; 0x3952 <TMR_SR_paramSet+0xd06>
    33e6:	f5 01       	movw	r30, r10
    33e8:	80 81       	ld	r24, Z
    33ea:	d6 01       	movw	r26, r12
    33ec:	d5 96       	adiw	r26, 0x35	; 53
    33ee:	8c 93       	st	X, r24
    33f0:	f6 01       	movw	r30, r12
    33f2:	ee 5d       	subi	r30, 0xDE	; 222
    33f4:	f9 4f       	sbci	r31, 0xF9	; 249
    33f6:	10 82       	st	Z, r1
    33f8:	60 e0       	ldi	r22, 0x00	; 0
    33fa:	ba c2       	rjmp	.+1396   	; 0x3970 <TMR_SR_paramSet+0xd24>
    33fc:	8e e1       	ldi	r24, 0x1E	; 30
    33fe:	f5 01       	movw	r30, r10
    3400:	de 01       	movw	r26, r28
    3402:	11 96       	adiw	r26, 0x01	; 1
    3404:	01 90       	ld	r0, Z+
    3406:	0d 92       	st	X+, r0
    3408:	8a 95       	dec	r24
    340a:	e1 f7       	brne	.-8      	; 0x3404 <TMR_SR_paramSet+0x7b8>
    340c:	f6 01       	movw	r30, r12
    340e:	e9 5e       	subi	r30, 0xE9	; 233
    3410:	f9 4f       	sbci	r31, 0xF9	; 249
    3412:	10 82       	st	Z, r1
    3414:	ea 59       	subi	r30, 0x9A	; 154
    3416:	f2 40       	sbci	r31, 0x02	; 2
    3418:	00 81       	ld	r16, Z
    341a:	11 81       	ldd	r17, Z+1	; 0x01
    341c:	22 81       	ldd	r18, Z+2	; 0x02
    341e:	33 81       	ldd	r19, Z+3	; 0x03
    3420:	e9 5a       	subi	r30, 0xA9	; 169
    3422:	f1 40       	sbci	r31, 0x01	; 1
    3424:	40 81       	ld	r20, Z
    3426:	51 81       	ldd	r21, Z+1	; 0x01
    3428:	be 01       	movw	r22, r28
    342a:	6f 5f       	subi	r22, 0xFF	; 255
    342c:	7f 4f       	sbci	r23, 0xFF	; 255
    342e:	c6 01       	movw	r24, r12
    3430:	0e 94 cf 6a 	call	0xd59e	; 0xd59e <validateReadPlan>
    3434:	2b 01       	movw	r4, r22
    3436:	3c 01       	movw	r6, r24
    3438:	61 15       	cp	r22, r1
    343a:	71 05       	cpc	r23, r1
    343c:	81 05       	cpc	r24, r1
    343e:	91 05       	cpc	r25, r1
    3440:	a1 f5       	brne	.+104    	; 0x34aa <TMR_SR_paramSet+0x85e>
    3442:	f5 01       	movw	r30, r10
    3444:	80 81       	ld	r24, Z
    3446:	81 30       	cpi	r24, 0x01	; 1
    3448:	21 f5       	brne	.+72     	; 0x3492 <TMR_SR_paramSet+0x846>
    344a:	f6 01       	movw	r30, r12
    344c:	ee 5d       	subi	r30, 0xDE	; 222
    344e:	f9 4f       	sbci	r31, 0xF9	; 249
    3450:	80 81       	ld	r24, Z
    3452:	81 11       	cpse	r24, r1
    3454:	0d c0       	rjmp	.+26     	; 0x3470 <TMR_SR_paramSet+0x824>
    3456:	d5 01       	movw	r26, r10
    3458:	1c 96       	adiw	r26, 0x0c	; 12
    345a:	6c 91       	ld	r22, X
    345c:	c6 01       	movw	r24, r12
    345e:	0e 94 1f 04 	call	0x83e	; 0x83e <setProtocol>
    3462:	8b 01       	movw	r16, r22
    3464:	9c 01       	movw	r18, r24
    3466:	61 15       	cp	r22, r1
    3468:	71 05       	cpc	r23, r1
    346a:	81 05       	cpc	r24, r1
    346c:	91 05       	cpc	r25, r1
    346e:	09 f5       	brne	.+66     	; 0x34b2 <TMR_SR_paramSet+0x866>
    3470:	be 01       	movw	r22, r28
    3472:	6f 5f       	subi	r22, 0xFF	; 255
    3474:	7f 4f       	sbci	r23, 0xFF	; 255
    3476:	c6 01       	movw	r24, r12
    3478:	6a db       	rcall	.-2348   	; 0x2b4e <prepForSearch>
    347a:	2b 01       	movw	r4, r22
    347c:	3c 01       	movw	r6, r24
    347e:	61 15       	cp	r22, r1
    3480:	71 05       	cpc	r23, r1
    3482:	81 05       	cpc	r24, r1
    3484:	91 05       	cpc	r25, r1
    3486:	c9 f4       	brne	.+50     	; 0x34ba <TMR_SR_paramSet+0x86e>
    3488:	81 e0       	ldi	r24, 0x01	; 1
    348a:	f6 01       	movw	r30, r12
    348c:	e9 5e       	subi	r30, 0xE9	; 233
    348e:	f9 4f       	sbci	r31, 0xF9	; 249
    3490:	80 83       	st	Z, r24
    3492:	f6 01       	movw	r30, r12
    3494:	a2 a9       	ldd	r26, Z+50	; 0x32
    3496:	b3 a9       	ldd	r27, Z+51	; 0x33
    3498:	8e e1       	ldi	r24, 0x1E	; 30
    349a:	fe 01       	movw	r30, r28
    349c:	31 96       	adiw	r30, 0x01	; 1
    349e:	01 90       	ld	r0, Z+
    34a0:	0d 92       	st	X+, r0
    34a2:	8a 95       	dec	r24
    34a4:	e1 f7       	brne	.-8      	; 0x349e <TMR_SR_paramSet+0x852>
    34a6:	60 e0       	ldi	r22, 0x00	; 0
    34a8:	63 c2       	rjmp	.+1222   	; 0x3970 <TMR_SR_paramSet+0xd24>
    34aa:	75 2d       	mov	r23, r5
    34ac:	86 2d       	mov	r24, r6
    34ae:	97 2d       	mov	r25, r7
    34b0:	1e c3       	rjmp	.+1596   	; 0x3aee <TMR_SR_paramSet+0xea2>
    34b2:	71 2f       	mov	r23, r17
    34b4:	82 2f       	mov	r24, r18
    34b6:	93 2f       	mov	r25, r19
    34b8:	1a c3       	rjmp	.+1588   	; 0x3aee <TMR_SR_paramSet+0xea2>
    34ba:	75 2d       	mov	r23, r5
    34bc:	86 2d       	mov	r24, r6
    34be:	97 2d       	mov	r25, r7
    34c0:	16 c3       	rjmp	.+1580   	; 0x3aee <TMR_SR_paramSet+0xea2>
    34c2:	f0 e1       	ldi	r31, 0x10	; 16
    34c4:	ff 12       	cpse	r15, r31
    34c6:	03 c0       	rjmp	.+6      	; 0x34ce <TMR_SR_paramSet+0x882>
    34c8:	81 2c       	mov	r8, r1
    34ca:	91 2c       	mov	r9, r1
    34cc:	05 c0       	rjmp	.+10     	; 0x34d8 <TMR_SR_paramSet+0x88c>
    34ce:	0f 2e       	mov	r0, r31
    34d0:	fe e1       	ldi	r31, 0x1E	; 30
    34d2:	8f 2e       	mov	r8, r31
    34d4:	91 2c       	mov	r9, r1
    34d6:	f0 2d       	mov	r31, r0
    34d8:	20 e0       	ldi	r18, 0x00	; 0
    34da:	30 e0       	ldi	r19, 0x00	; 0
    34dc:	26 c0       	rjmp	.+76     	; 0x352a <TMR_SR_paramSet+0x8de>
    34de:	80 e1       	ldi	r24, 0x10	; 16
    34e0:	f8 12       	cpse	r15, r24
    34e2:	10 c0       	rjmp	.+32     	; 0x3504 <TMR_SR_paramSet+0x8b8>
    34e4:	d5 01       	movw	r26, r10
    34e6:	8d 91       	ld	r24, X+
    34e8:	9c 91       	ld	r25, X
    34ea:	e8 0f       	add	r30, r24
    34ec:	f9 1f       	adc	r31, r25
    34ee:	81 e0       	ldi	r24, 0x01	; 1
    34f0:	90 e0       	ldi	r25, 0x00	; 0
    34f2:	00 80       	ld	r0, Z
    34f4:	02 c0       	rjmp	.+4      	; 0x34fa <TMR_SR_paramSet+0x8ae>
    34f6:	88 0f       	add	r24, r24
    34f8:	99 1f       	adc	r25, r25
    34fa:	0a 94       	dec	r0
    34fc:	e2 f7       	brpl	.-8      	; 0x34f6 <TMR_SR_paramSet+0x8aa>
    34fe:	88 2a       	or	r8, r24
    3500:	99 2a       	or	r9, r25
    3502:	11 c0       	rjmp	.+34     	; 0x3526 <TMR_SR_paramSet+0x8da>
    3504:	d5 01       	movw	r26, r10
    3506:	8d 91       	ld	r24, X+
    3508:	9c 91       	ld	r25, X
    350a:	e8 0f       	add	r30, r24
    350c:	f9 1f       	adc	r31, r25
    350e:	81 e0       	ldi	r24, 0x01	; 1
    3510:	90 e0       	ldi	r25, 0x00	; 0
    3512:	00 80       	ld	r0, Z
    3514:	02 c0       	rjmp	.+4      	; 0x351a <TMR_SR_paramSet+0x8ce>
    3516:	88 0f       	add	r24, r24
    3518:	99 1f       	adc	r25, r25
    351a:	0a 94       	dec	r0
    351c:	e2 f7       	brpl	.-8      	; 0x3516 <TMR_SR_paramSet+0x8ca>
    351e:	80 95       	com	r24
    3520:	90 95       	com	r25
    3522:	88 22       	and	r8, r24
    3524:	99 22       	and	r9, r25
    3526:	2f 5f       	subi	r18, 0xFF	; 255
    3528:	3f 4f       	sbci	r19, 0xFF	; 255
    352a:	f5 01       	movw	r30, r10
    352c:	84 81       	ldd	r24, Z+4	; 0x04
    352e:	95 81       	ldd	r25, Z+5	; 0x05
    3530:	f9 01       	movw	r30, r18
    3532:	28 17       	cp	r18, r24
    3534:	39 07       	cpc	r19, r25
    3536:	80 f5       	brcc	.+96     	; 0x3598 <TMR_SR_paramSet+0x94c>
    3538:	d5 01       	movw	r26, r10
    353a:	12 96       	adiw	r26, 0x02	; 2
    353c:	8d 91       	ld	r24, X+
    353e:	9c 91       	ld	r25, X
    3540:	13 97       	sbiw	r26, 0x03	; 3
    3542:	28 17       	cp	r18, r24
    3544:	39 07       	cpc	r19, r25
    3546:	58 f2       	brcs	.-106    	; 0x34de <TMR_SR_paramSet+0x892>
    3548:	00 e0       	ldi	r16, 0x00	; 0
    354a:	10 e0       	ldi	r17, 0x00	; 0
    354c:	41 2c       	mov	r4, r1
    354e:	51 2c       	mov	r5, r1
    3550:	32 01       	movw	r6, r4
    3552:	27 c0       	rjmp	.+78     	; 0x35a2 <TMR_SR_paramSet+0x956>
    3554:	d5 01       	movw	r26, r10
    3556:	ed 91       	ld	r30, X+
    3558:	fc 91       	ld	r31, X
    355a:	e0 0f       	add	r30, r16
    355c:	f1 1f       	adc	r31, r17
    355e:	60 81       	ld	r22, Z
    3560:	81 e0       	ldi	r24, 0x01	; 1
    3562:	90 e0       	ldi	r25, 0x00	; 0
    3564:	06 2e       	mov	r0, r22
    3566:	02 c0       	rjmp	.+4      	; 0x356c <TMR_SR_paramSet+0x920>
    3568:	88 0f       	add	r24, r24
    356a:	99 1f       	adc	r25, r25
    356c:	0a 94       	dec	r0
    356e:	e2 f7       	brpl	.-8      	; 0x3568 <TMR_SR_paramSet+0x91c>
    3570:	88 21       	and	r24, r8
    3572:	99 21       	and	r25, r9
    3574:	41 e0       	ldi	r20, 0x01	; 1
    3576:	89 2b       	or	r24, r25
    3578:	09 f4       	brne	.+2      	; 0x357c <TMR_SR_paramSet+0x930>
    357a:	40 e0       	ldi	r20, 0x00	; 0
    357c:	c6 01       	movw	r24, r12
    357e:	0e 94 64 55 	call	0xaac8	; 0xaac8 <TMR_SR_cmdSetGPIODirection>
    3582:	2b 01       	movw	r4, r22
    3584:	3c 01       	movw	r6, r24
    3586:	61 15       	cp	r22, r1
    3588:	71 05       	cpc	r23, r1
    358a:	81 05       	cpc	r24, r1
    358c:	91 05       	cpc	r25, r1
    358e:	09 f0       	breq	.+2      	; 0x3592 <TMR_SR_paramSet+0x946>
    3590:	9c c2       	rjmp	.+1336   	; 0x3aca <TMR_SR_paramSet+0xe7e>
    3592:	0f 5f       	subi	r16, 0xFF	; 255
    3594:	1f 4f       	sbci	r17, 0xFF	; 255
    3596:	05 c0       	rjmp	.+10     	; 0x35a2 <TMR_SR_paramSet+0x956>
    3598:	00 e0       	ldi	r16, 0x00	; 0
    359a:	10 e0       	ldi	r17, 0x00	; 0
    359c:	41 2c       	mov	r4, r1
    359e:	51 2c       	mov	r5, r1
    35a0:	32 01       	movw	r6, r4
    35a2:	f5 01       	movw	r30, r10
    35a4:	84 81       	ldd	r24, Z+4	; 0x04
    35a6:	95 81       	ldd	r25, Z+5	; 0x05
    35a8:	08 17       	cp	r16, r24
    35aa:	19 07       	cpc	r17, r25
    35ac:	98 f2       	brcs	.-90     	; 0x3554 <TMR_SR_paramSet+0x908>
    35ae:	60 e0       	ldi	r22, 0x00	; 0
    35b0:	df c1       	rjmp	.+958    	; 0x3970 <TMR_SR_paramSet+0xd24>
    35b2:	d5 01       	movw	r26, r10
    35b4:	6c 91       	ld	r22, X
    35b6:	c6 01       	movw	r24, r12
    35b8:	0e 94 a5 4d 	call	0x9b4a	; 0x9b4a <TMR_SR_cmdSetPowerMode>
    35bc:	2b 01       	movw	r4, r22
    35be:	3c 01       	movw	r6, r24
    35c0:	67 2b       	or	r22, r23
    35c2:	68 2b       	or	r22, r24
    35c4:	69 2b       	or	r22, r25
    35c6:	09 f0       	breq	.+2      	; 0x35ca <TMR_SR_paramSet+0x97e>
    35c8:	c6 c1       	rjmp	.+908    	; 0x3956 <TMR_SR_paramSet+0xd0a>
    35ca:	f5 01       	movw	r30, r10
    35cc:	80 81       	ld	r24, Z
    35ce:	f6 01       	movw	r30, r12
    35d0:	ef 57       	subi	r30, 0x7F	; 127
    35d2:	fc 4f       	sbci	r31, 0xFC	; 252
    35d4:	80 83       	st	Z, r24
    35d6:	60 e0       	ldi	r22, 0x00	; 0
    35d8:	cb c1       	rjmp	.+918    	; 0x3970 <TMR_SR_paramSet+0xd24>
    35da:	d5 01       	movw	r26, r10
    35dc:	6c 91       	ld	r22, X
    35de:	c6 01       	movw	r24, r12
    35e0:	0e 94 a8 4d 	call	0x9b50	; 0x9b50 <TMR_SR_cmdSetUserMode>
    35e4:	2b 01       	movw	r4, r22
    35e6:	3c 01       	movw	r6, r24
    35e8:	60 e0       	ldi	r22, 0x00	; 0
    35ea:	c2 c1       	rjmp	.+900    	; 0x3970 <TMR_SR_paramSet+0xd24>
    35ec:	0f 2e       	mov	r0, r31
    35ee:	f2 e1       	ldi	r31, 0x12	; 18
    35f0:	3f 2e       	mov	r3, r31
    35f2:	f0 2d       	mov	r31, r0
    35f4:	60 e0       	ldi	r22, 0x00	; 0
    35f6:	41 2c       	mov	r4, r1
    35f8:	51 2c       	mov	r5, r1
    35fa:	32 01       	movw	r6, r4
    35fc:	b9 c1       	rjmp	.+882    	; 0x3970 <TMR_SR_paramSet+0xd24>
    35fe:	68 94       	set
    3600:	33 24       	eor	r3, r3
    3602:	31 f8       	bld	r3, 1
    3604:	60 e0       	ldi	r22, 0x00	; 0
    3606:	41 2c       	mov	r4, r1
    3608:	51 2c       	mov	r5, r1
    360a:	32 01       	movw	r6, r4
    360c:	b1 c1       	rjmp	.+866    	; 0x3970 <TMR_SR_paramSet+0xd24>
    360e:	31 2c       	mov	r3, r1
    3610:	60 e0       	ldi	r22, 0x00	; 0
    3612:	41 2c       	mov	r4, r1
    3614:	51 2c       	mov	r5, r1
    3616:	32 01       	movw	r6, r4
    3618:	ab c1       	rjmp	.+854    	; 0x3970 <TMR_SR_paramSet+0xd24>
    361a:	33 24       	eor	r3, r3
    361c:	33 94       	inc	r3
    361e:	60 e0       	ldi	r22, 0x00	; 0
    3620:	41 2c       	mov	r4, r1
    3622:	51 2c       	mov	r5, r1
    3624:	32 01       	movw	r6, r4
    3626:	a4 c1       	rjmp	.+840    	; 0x3970 <TMR_SR_paramSet+0xd24>
    3628:	68 94       	set
    362a:	33 24       	eor	r3, r3
    362c:	34 f8       	bld	r3, 4
    362e:	60 e0       	ldi	r22, 0x00	; 0
    3630:	41 2c       	mov	r4, r1
    3632:	51 2c       	mov	r5, r1
    3634:	32 01       	movw	r6, r4
    3636:	9c c1       	rjmp	.+824    	; 0x3970 <TMR_SR_paramSet+0xd24>
    3638:	0f 2e       	mov	r0, r31
    363a:	f1 e1       	ldi	r31, 0x11	; 17
    363c:	3f 2e       	mov	r3, r31
    363e:	f0 2d       	mov	r31, r0
    3640:	60 e0       	ldi	r22, 0x00	; 0
    3642:	41 2c       	mov	r4, r1
    3644:	51 2c       	mov	r5, r1
    3646:	32 01       	movw	r6, r4
    3648:	93 c1       	rjmp	.+806    	; 0x3970 <TMR_SR_paramSet+0xd24>
    364a:	f5 01       	movw	r30, r10
    364c:	80 81       	ld	r24, Z
    364e:	f6 01       	movw	r30, r12
    3650:	e9 50       	subi	r30, 0x09	; 9
    3652:	fa 4f       	sbci	r31, 0xFA	; 250
    3654:	80 83       	st	Z, r24
    3656:	60 e0       	ldi	r22, 0x00	; 0
    3658:	41 2c       	mov	r4, r1
    365a:	51 2c       	mov	r5, r1
    365c:	32 01       	movw	r6, r4
    365e:	88 c1       	rjmp	.+784    	; 0x3970 <TMR_SR_paramSet+0xd24>
    3660:	0f 2e       	mov	r0, r31
    3662:	f3 e1       	ldi	r31, 0x13	; 19
    3664:	3f 2e       	mov	r3, r31
    3666:	f0 2d       	mov	r31, r0
    3668:	60 e0       	ldi	r22, 0x00	; 0
    366a:	41 2c       	mov	r4, r1
    366c:	51 2c       	mov	r5, r1
    366e:	32 01       	movw	r6, r4
    3670:	7f c1       	rjmp	.+766    	; 0x3970 <TMR_SR_paramSet+0xd24>
    3672:	0f 2e       	mov	r0, r31
    3674:	f5 e1       	ldi	r31, 0x15	; 21
    3676:	3f 2e       	mov	r3, r31
    3678:	f0 2d       	mov	r31, r0
    367a:	60 e0       	ldi	r22, 0x00	; 0
    367c:	41 2c       	mov	r4, r1
    367e:	51 2c       	mov	r5, r1
    3680:	32 01       	movw	r6, r4
    3682:	76 c1       	rjmp	.+748    	; 0x3970 <TMR_SR_paramSet+0xd24>
    3684:	0f 2e       	mov	r0, r31
    3686:	f6 e1       	ldi	r31, 0x16	; 22
    3688:	3f 2e       	mov	r3, r31
    368a:	f0 2d       	mov	r31, r0
    368c:	60 e0       	ldi	r22, 0x00	; 0
    368e:	41 2c       	mov	r4, r1
    3690:	51 2c       	mov	r5, r1
    3692:	32 01       	movw	r6, r4
    3694:	6d c1       	rjmp	.+730    	; 0x3970 <TMR_SR_paramSet+0xd24>
    3696:	0f 2e       	mov	r0, r31
    3698:	f7 e1       	ldi	r31, 0x17	; 23
    369a:	3f 2e       	mov	r3, r31
    369c:	f0 2d       	mov	r31, r0
    369e:	60 e0       	ldi	r22, 0x00	; 0
    36a0:	41 2c       	mov	r4, r1
    36a2:	51 2c       	mov	r5, r1
    36a4:	32 01       	movw	r6, r4
    36a6:	64 c1       	rjmp	.+712    	; 0x3970 <TMR_SR_paramSet+0xd24>
    36a8:	b5 01       	movw	r22, r10
    36aa:	c6 01       	movw	r24, r12
    36ac:	0e 94 4f 4b 	call	0x969e	; 0x969e <TMR_SR_cmdSetProtocolList>
    36b0:	2b 01       	movw	r4, r22
    36b2:	3c 01       	movw	r6, r24
    36b4:	67 2b       	or	r22, r23
    36b6:	68 2b       	or	r22, r24
    36b8:	69 2b       	or	r22, r25
    36ba:	09 f0       	breq	.+2      	; 0x36be <TMR_SR_paramSet+0xa72>
    36bc:	4e c1       	rjmp	.+668    	; 0x395a <TMR_SR_paramSet+0xd0e>
    36be:	81 e0       	ldi	r24, 0x01	; 1
    36c0:	f6 01       	movw	r30, r12
    36c2:	ee 5d       	subi	r30, 0xDE	; 222
    36c4:	f9 4f       	sbci	r31, 0xF9	; 249
    36c6:	80 83       	st	Z, r24
    36c8:	60 e0       	ldi	r22, 0x00	; 0
    36ca:	52 c1       	rjmp	.+676    	; 0x3970 <TMR_SR_paramSet+0xd24>
    36cc:	0f 2e       	mov	r0, r31
    36ce:	f9 e0       	ldi	r31, 0x09	; 9
    36d0:	ef 2e       	mov	r14, r31
    36d2:	f0 2d       	mov	r31, r0
    36d4:	68 94       	set
    36d6:	33 24       	eor	r3, r3
    36d8:	31 f8       	bld	r3, 1
    36da:	60 e0       	ldi	r22, 0x00	; 0
    36dc:	41 2c       	mov	r4, r1
    36de:	51 2c       	mov	r5, r1
    36e0:	32 01       	movw	r6, r4
    36e2:	46 c1       	rjmp	.+652    	; 0x3970 <TMR_SR_paramSet+0xd24>
    36e4:	0f 2e       	mov	r0, r31
    36e6:	fa e0       	ldi	r31, 0x0A	; 10
    36e8:	ef 2e       	mov	r14, r31
    36ea:	f0 2d       	mov	r31, r0
    36ec:	68 94       	set
    36ee:	33 24       	eor	r3, r3
    36f0:	31 f8       	bld	r3, 1
    36f2:	60 e0       	ldi	r22, 0x00	; 0
    36f4:	41 2c       	mov	r4, r1
    36f6:	51 2c       	mov	r5, r1
    36f8:	32 01       	movw	r6, r4
    36fa:	3a c1       	rjmp	.+628    	; 0x3970 <TMR_SR_paramSet+0xd24>
    36fc:	0f 2e       	mov	r0, r31
    36fe:	fb e0       	ldi	r31, 0x0B	; 11
    3700:	ef 2e       	mov	r14, r31
    3702:	f0 2d       	mov	r31, r0
    3704:	68 94       	set
    3706:	33 24       	eor	r3, r3
    3708:	31 f8       	bld	r3, 1
    370a:	60 e0       	ldi	r22, 0x00	; 0
    370c:	41 2c       	mov	r4, r1
    370e:	51 2c       	mov	r5, r1
    3710:	32 01       	movw	r6, r4
    3712:	2e c1       	rjmp	.+604    	; 0x3970 <TMR_SR_paramSet+0xd24>
    3714:	0f 2e       	mov	r0, r31
    3716:	f4 e1       	ldi	r31, 0x14	; 20
    3718:	ef 2e       	mov	r14, r31
    371a:	f0 2d       	mov	r31, r0
    371c:	68 94       	set
    371e:	33 24       	eor	r3, r3
    3720:	31 f8       	bld	r3, 1
    3722:	60 e0       	ldi	r22, 0x00	; 0
    3724:	41 2c       	mov	r4, r1
    3726:	51 2c       	mov	r5, r1
    3728:	32 01       	movw	r6, r4
    372a:	22 c1       	rjmp	.+580    	; 0x3970 <TMR_SR_paramSet+0xd24>
    372c:	0f 2e       	mov	r0, r31
    372e:	f5 e1       	ldi	r31, 0x15	; 21
    3730:	ef 2e       	mov	r14, r31
    3732:	f0 2d       	mov	r31, r0
    3734:	68 94       	set
    3736:	33 24       	eor	r3, r3
    3738:	31 f8       	bld	r3, 1
    373a:	60 e0       	ldi	r22, 0x00	; 0
    373c:	41 2c       	mov	r4, r1
    373e:	51 2c       	mov	r5, r1
    3740:	32 01       	movw	r6, r4
    3742:	16 c1       	rjmp	.+556    	; 0x3970 <TMR_SR_paramSet+0xd24>
    3744:	0f 2e       	mov	r0, r31
    3746:	f4 e1       	ldi	r31, 0x14	; 20
    3748:	ef 2e       	mov	r14, r31
    374a:	f0 2d       	mov	r31, r0
    374c:	68 94       	set
    374e:	33 24       	eor	r3, r3
    3750:	32 f8       	bld	r3, 2
    3752:	60 e0       	ldi	r22, 0x00	; 0
    3754:	41 2c       	mov	r4, r1
    3756:	51 2c       	mov	r5, r1
    3758:	32 01       	movw	r6, r4
    375a:	0a c1       	rjmp	.+532    	; 0x3970 <TMR_SR_paramSet+0xd24>
    375c:	61 e2       	ldi	r22, 0x21	; 33
    375e:	41 2c       	mov	r4, r1
    3760:	51 2c       	mov	r5, r1
    3762:	32 01       	movw	r6, r4
    3764:	05 c1       	rjmp	.+522    	; 0x3970 <TMR_SR_paramSet+0xd24>
    3766:	f5 01       	movw	r30, r10
    3768:	80 81       	ld	r24, Z
    376a:	91 81       	ldd	r25, Z+1	; 0x01
    376c:	a2 81       	ldd	r26, Z+2	; 0x02
    376e:	b3 81       	ldd	r27, Z+3	; 0x03
    3770:	f6 01       	movw	r30, r12
    3772:	e8 52       	subi	r30, 0x28	; 40
    3774:	fe 4f       	sbci	r31, 0xFE	; 254
    3776:	80 83       	st	Z, r24
    3778:	91 83       	std	Z+1, r25	; 0x01
    377a:	a2 83       	std	Z+2, r26	; 0x02
    377c:	b3 83       	std	Z+3, r27	; 0x03
    377e:	60 e0       	ldi	r22, 0x00	; 0
    3780:	41 2c       	mov	r4, r1
    3782:	51 2c       	mov	r5, r1
    3784:	32 01       	movw	r6, r4
    3786:	f4 c0       	rjmp	.+488    	; 0x3970 <TMR_SR_paramSet+0xd24>
    3788:	d5 01       	movw	r26, r10
    378a:	14 96       	adiw	r26, 0x04	; 4
    378c:	2d 91       	ld	r18, X+
    378e:	3c 91       	ld	r19, X
    3790:	15 97       	sbiw	r26, 0x05	; 5
    3792:	4d 91       	ld	r20, X+
    3794:	5c 91       	ld	r21, X
    3796:	61 e0       	ldi	r22, 0x01	; 1
    3798:	c6 01       	movw	r24, r12
    379a:	0e 94 1f 4e 	call	0x9c3e	; 0x9c3e <TMR_SR_cmdSetProtocolLicenseKey>
    379e:	2b 01       	movw	r4, r22
    37a0:	3c 01       	movw	r6, r24
    37a2:	60 e0       	ldi	r22, 0x00	; 0
    37a4:	e5 c0       	rjmp	.+458    	; 0x3970 <TMR_SR_paramSet+0xd24>
    37a6:	a1 14       	cp	r10, r1
    37a8:	b1 04       	cpc	r11, r1
    37aa:	09 f4       	brne	.+2      	; 0x37ae <TMR_SR_paramSet+0xb62>
    37ac:	d8 c0       	rjmp	.+432    	; 0x395e <TMR_SR_paramSet+0xd12>
    37ae:	d5 01       	movw	r26, r10
    37b0:	11 96       	adiw	r26, 0x01	; 1
    37b2:	ed 91       	ld	r30, X+
    37b4:	fc 91       	ld	r31, X
    37b6:	12 97       	sbiw	r26, 0x02	; 2
    37b8:	24 81       	ldd	r18, Z+4	; 0x04
    37ba:	35 81       	ldd	r19, Z+5	; 0x05
    37bc:	40 81       	ld	r20, Z
    37be:	51 81       	ldd	r21, Z+1	; 0x01
    37c0:	6c 91       	ld	r22, X
    37c2:	c6 01       	movw	r24, r12
    37c4:	0e 94 1f 4e 	call	0x9c3e	; 0x9c3e <TMR_SR_cmdSetProtocolLicenseKey>
    37c8:	2b 01       	movw	r4, r22
    37ca:	3c 01       	movw	r6, r24
    37cc:	60 e0       	ldi	r22, 0x00	; 0
    37ce:	d0 c0       	rjmp	.+416    	; 0x3970 <TMR_SR_paramSet+0xd24>
    37d0:	f5 01       	movw	r30, r10
    37d2:	40 81       	ld	r20, Z
    37d4:	61 81       	ldd	r22, Z+1	; 0x01
    37d6:	21 e0       	ldi	r18, 0x01	; 1
    37d8:	c6 01       	movw	r24, r12
    37da:	0e 94 2d 5d 	call	0xba5a	; 0xba5a <TMR_SR_cmdSetUserProfile>
    37de:	2b 01       	movw	r4, r22
    37e0:	3c 01       	movw	r6, r24
    37e2:	60 e0       	ldi	r22, 0x00	; 0
    37e4:	c5 c0       	rjmp	.+394    	; 0x3970 <TMR_SR_paramSet+0xd24>
    37e6:	6b e0       	ldi	r22, 0x0B	; 11
    37e8:	c6 01       	movw	r24, r12
    37ea:	0e 94 19 63 	call	0xc632	; 0xc632 <TMR_SR_cmdResetReaderStatistics>
    37ee:	2b 01       	movw	r4, r22
    37f0:	3c 01       	movw	r6, r24
    37f2:	60 e0       	ldi	r22, 0x00	; 0
    37f4:	bd c0       	rjmp	.+378    	; 0x3970 <TMR_SR_paramSet+0xd24>
    37f6:	61 ec       	ldi	r22, 0xC1	; 193
    37f8:	7f e0       	ldi	r23, 0x0F	; 15
    37fa:	c6 01       	movw	r24, r12
    37fc:	0e 94 e5 66 	call	0xcdca	; 0xcdca <TMR_SR_cmdResetReaderStats>
    3800:	2b 01       	movw	r4, r22
    3802:	3c 01       	movw	r6, r24
    3804:	60 e0       	ldi	r22, 0x00	; 0
    3806:	b4 c0       	rjmp	.+360    	; 0x3970 <TMR_SR_paramSet+0xd24>
    3808:	d5 01       	movw	r26, r10
    380a:	8d 91       	ld	r24, X+
    380c:	9c 91       	ld	r25, X
    380e:	f6 01       	movw	r30, r12
    3810:	eb 5e       	subi	r30, 0xEB	; 235
    3812:	f9 4f       	sbci	r31, 0xF9	; 249
    3814:	91 83       	std	Z+1, r25	; 0x01
    3816:	80 83       	st	Z, r24
    3818:	60 e0       	ldi	r22, 0x00	; 0
    381a:	41 2c       	mov	r4, r1
    381c:	51 2c       	mov	r5, r1
    381e:	32 01       	movw	r6, r4
    3820:	a7 c0       	rjmp	.+334    	; 0x3970 <TMR_SR_paramSet+0xd24>
    3822:	ae 01       	movw	r20, r28
    3824:	4f 5f       	subi	r20, 0xFF	; 255
    3826:	5f 4f       	sbci	r21, 0xFF	; 255
    3828:	65 e0       	ldi	r22, 0x05	; 5
    382a:	c6 01       	movw	r24, r12
    382c:	0e 94 80 67 	call	0xcf00	; 0xcf00 <TMR_SR_cmdGetReaderWriteTimeOut>
    3830:	2b 01       	movw	r4, r22
    3832:	3c 01       	movw	r6, r24
    3834:	67 2b       	or	r22, r23
    3836:	68 2b       	or	r22, r24
    3838:	69 2b       	or	r22, r25
    383a:	d9 f4       	brne	.+54     	; 0x3872 <TMR_SR_paramSet+0xc26>
    383c:	b1 e5       	ldi	r27, 0x51	; 81
    383e:	fb 16       	cp	r15, r27
    3840:	21 f0       	breq	.+8      	; 0x384a <TMR_SR_paramSet+0xbfe>
    3842:	e2 e5       	ldi	r30, 0x52	; 82
    3844:	fe 16       	cp	r15, r30
    3846:	39 f0       	breq	.+14     	; 0x3856 <TMR_SR_paramSet+0xc0a>
    3848:	0b c0       	rjmp	.+22     	; 0x3860 <TMR_SR_paramSet+0xc14>
    384a:	d5 01       	movw	r26, r10
    384c:	8d 91       	ld	r24, X+
    384e:	9c 91       	ld	r25, X
    3850:	9b 83       	std	Y+3, r25	; 0x03
    3852:	8a 83       	std	Y+2, r24	; 0x02
    3854:	05 c0       	rjmp	.+10     	; 0x3860 <TMR_SR_paramSet+0xc14>
    3856:	f5 01       	movw	r30, r10
    3858:	90 81       	ld	r25, Z
    385a:	81 e0       	ldi	r24, 0x01	; 1
    385c:	89 27       	eor	r24, r25
    385e:	89 83       	std	Y+1, r24	; 0x01
    3860:	ae 01       	movw	r20, r28
    3862:	4f 5f       	subi	r20, 0xFF	; 255
    3864:	5f 4f       	sbci	r21, 0xFF	; 255
    3866:	65 e0       	ldi	r22, 0x05	; 5
    3868:	c6 01       	movw	r24, r12
    386a:	0e 94 cc 67 	call	0xcf98	; 0xcf98 <TMR_SR_cmdSetReaderWriteTimeOut>
    386e:	2b 01       	movw	r4, r22
    3870:	3c 01       	movw	r6, r24
    3872:	60 e0       	ldi	r22, 0x00	; 0
    3874:	7d c0       	rjmp	.+250    	; 0x3970 <TMR_SR_paramSet+0xd24>
    3876:	d5 01       	movw	r26, r10
    3878:	8d 91       	ld	r24, X+
    387a:	9c 91       	ld	r25, X
    387c:	f6 01       	movw	r30, r12
    387e:	e7 5e       	subi	r30, 0xE7	; 231
    3880:	f9 4f       	sbci	r31, 0xF9	; 249
    3882:	91 83       	std	Z+1, r25	; 0x01
    3884:	80 83       	st	Z, r24
    3886:	60 e0       	ldi	r22, 0x00	; 0
    3888:	41 2c       	mov	r4, r1
    388a:	51 2c       	mov	r5, r1
    388c:	32 01       	movw	r6, r4
    388e:	70 c0       	rjmp	.+224    	; 0x3970 <TMR_SR_paramSet+0xd24>
    3890:	f5 01       	movw	r30, r10
    3892:	40 81       	ld	r20, Z
    3894:	51 81       	ldd	r21, Z+1	; 0x01
    3896:	62 81       	ldd	r22, Z+2	; 0x02
    3898:	73 81       	ldd	r23, Z+3	; 0x03
    389a:	22 e0       	ldi	r18, 0x02	; 2
    389c:	c6 01       	movw	r24, r12
    389e:	0e 94 72 4c 	call	0x98e4	; 0x98e4 <TMR_SR_cmdSetFrequencyHopTableOption>
    38a2:	2b 01       	movw	r4, r22
    38a4:	3c 01       	movw	r6, r24
    38a6:	60 e0       	ldi	r22, 0x00	; 0
    38a8:	63 c0       	rjmp	.+198    	; 0x3970 <TMR_SR_paramSet+0xd24>
    38aa:	d5 01       	movw	r26, r10
    38ac:	4d 91       	ld	r20, X+
    38ae:	5d 91       	ld	r21, X+
    38b0:	6d 91       	ld	r22, X+
    38b2:	7c 91       	ld	r23, X
    38b4:	23 e0       	ldi	r18, 0x03	; 3
    38b6:	c6 01       	movw	r24, r12
    38b8:	0e 94 72 4c 	call	0x98e4	; 0x98e4 <TMR_SR_cmdSetFrequencyHopTableOption>
    38bc:	2b 01       	movw	r4, r22
    38be:	3c 01       	movw	r6, r24
    38c0:	60 e0       	ldi	r22, 0x00	; 0
    38c2:	56 c0       	rjmp	.+172    	; 0x3970 <TMR_SR_paramSet+0xd24>
    38c4:	b5 01       	movw	r22, r10
    38c6:	c6 01       	movw	r24, r12
    38c8:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <TMR_SR_cmdSetPerAntennaTime>
    38cc:	2b 01       	movw	r4, r22
    38ce:	3c 01       	movw	r6, r24
    38d0:	60 e0       	ldi	r22, 0x00	; 0
    38d2:	4e c0       	rjmp	.+156    	; 0x3970 <TMR_SR_paramSet+0xd24>
    38d4:	60 e0       	ldi	r22, 0x00	; 0
    38d6:	0f 2e       	mov	r0, r31
    38d8:	f9 e0       	ldi	r31, 0x09	; 9
    38da:	4f 2e       	mov	r4, r31
    38dc:	51 2c       	mov	r5, r1
    38de:	61 2c       	mov	r6, r1
    38e0:	f3 e0       	ldi	r31, 0x03	; 3
    38e2:	7f 2e       	mov	r7, r31
    38e4:	f0 2d       	mov	r31, r0
    38e6:	44 c0       	rjmp	.+136    	; 0x3970 <TMR_SR_paramSet+0xd24>
    38e8:	6a e0       	ldi	r22, 0x0A	; 10
    38ea:	41 2c       	mov	r4, r1
    38ec:	51 2c       	mov	r5, r1
    38ee:	32 01       	movw	r6, r4
    38f0:	3f c0       	rjmp	.+126    	; 0x3970 <TMR_SR_paramSet+0xd24>
    38f2:	60 e0       	ldi	r22, 0x00	; 0
    38f4:	3d c0       	rjmp	.+122    	; 0x3970 <TMR_SR_paramSet+0xd24>
    38f6:	60 e0       	ldi	r22, 0x00	; 0
    38f8:	41 2c       	mov	r4, r1
    38fa:	51 2c       	mov	r5, r1
    38fc:	32 01       	movw	r6, r4
    38fe:	38 c0       	rjmp	.+112    	; 0x3970 <TMR_SR_paramSet+0xd24>
    3900:	60 e0       	ldi	r22, 0x00	; 0
    3902:	41 2c       	mov	r4, r1
    3904:	51 2c       	mov	r5, r1
    3906:	32 01       	movw	r6, r4
    3908:	33 c0       	rjmp	.+102    	; 0x3970 <TMR_SR_paramSet+0xd24>
    390a:	60 e0       	ldi	r22, 0x00	; 0
    390c:	31 c0       	rjmp	.+98     	; 0x3970 <TMR_SR_paramSet+0xd24>
    390e:	60 e0       	ldi	r22, 0x00	; 0
    3910:	0f 2e       	mov	r0, r31
    3912:	f6 e0       	ldi	r31, 0x06	; 6
    3914:	4f 2e       	mov	r4, r31
    3916:	51 2c       	mov	r5, r1
    3918:	61 2c       	mov	r6, r1
    391a:	f3 e0       	ldi	r31, 0x03	; 3
    391c:	7f 2e       	mov	r7, r31
    391e:	f0 2d       	mov	r31, r0
    3920:	27 c0       	rjmp	.+78     	; 0x3970 <TMR_SR_paramSet+0xd24>
    3922:	60 e0       	ldi	r22, 0x00	; 0
    3924:	25 c0       	rjmp	.+74     	; 0x3970 <TMR_SR_paramSet+0xd24>
    3926:	60 e0       	ldi	r22, 0x00	; 0
    3928:	23 c0       	rjmp	.+70     	; 0x3970 <TMR_SR_paramSet+0xd24>
    392a:	60 e0       	ldi	r22, 0x00	; 0
    392c:	0f 2e       	mov	r0, r31
    392e:	f6 e0       	ldi	r31, 0x06	; 6
    3930:	4f 2e       	mov	r4, r31
    3932:	51 2c       	mov	r5, r1
    3934:	61 2c       	mov	r6, r1
    3936:	f3 e0       	ldi	r31, 0x03	; 3
    3938:	7f 2e       	mov	r7, r31
    393a:	f0 2d       	mov	r31, r0
    393c:	19 c0       	rjmp	.+50     	; 0x3970 <TMR_SR_paramSet+0xd24>
    393e:	60 e0       	ldi	r22, 0x00	; 0
    3940:	0f 2e       	mov	r0, r31
    3942:	f4 e0       	ldi	r31, 0x04	; 4
    3944:	4f 2e       	mov	r4, r31
    3946:	51 2c       	mov	r5, r1
    3948:	61 2c       	mov	r6, r1
    394a:	f3 e0       	ldi	r31, 0x03	; 3
    394c:	7f 2e       	mov	r7, r31
    394e:	f0 2d       	mov	r31, r0
    3950:	0f c0       	rjmp	.+30     	; 0x3970 <TMR_SR_paramSet+0xd24>
    3952:	60 e0       	ldi	r22, 0x00	; 0
    3954:	0d c0       	rjmp	.+26     	; 0x3970 <TMR_SR_paramSet+0xd24>
    3956:	60 e0       	ldi	r22, 0x00	; 0
    3958:	0b c0       	rjmp	.+22     	; 0x3970 <TMR_SR_paramSet+0xd24>
    395a:	60 e0       	ldi	r22, 0x00	; 0
    395c:	09 c0       	rjmp	.+18     	; 0x3970 <TMR_SR_paramSet+0xd24>
    395e:	60 e0       	ldi	r22, 0x00	; 0
    3960:	0f 2e       	mov	r0, r31
    3962:	44 24       	eor	r4, r4
    3964:	43 94       	inc	r4
    3966:	51 2c       	mov	r5, r1
    3968:	61 2c       	mov	r6, r1
    396a:	f3 e0       	ldi	r31, 0x03	; 3
    396c:	7f 2e       	mov	r7, r31
    396e:	f0 2d       	mov	r31, r0
    3970:	8f 2d       	mov	r24, r15
    3972:	90 e0       	ldi	r25, 0x00	; 0
    3974:	fc 01       	movw	r30, r24
    3976:	37 97       	sbiw	r30, 0x07	; 7
    3978:	e8 36       	cpi	r30, 0x68	; 104
    397a:	f1 05       	cpc	r31, r1
    397c:	08 f0       	brcs	.+2      	; 0x3980 <TMR_SR_paramSet+0xd34>
    397e:	a9 c0       	rjmp	.+338    	; 0x3ad2 <TMR_SR_paramSet+0xe86>
    3980:	e2 57       	subi	r30, 0x72	; 114
    3982:	fe 4f       	sbci	r31, 0xFE	; 254
    3984:	0c 94 d3 74 	jmp	0xe9a6	; 0xe9a6 <__tablejump2__>
    3988:	a5 01       	movw	r20, r10
    398a:	c6 01       	movw	r24, r12
    398c:	0e 94 ab 4d 	call	0x9b56	; 0x9b56 <TMR_SR_cmdSetReaderConfiguration>
    3990:	ae c0       	rjmp	.+348    	; 0x3aee <TMR_SR_paramSet+0xea2>
    3992:	a1 14       	cp	r10, r1
    3994:	b1 04       	cpc	r11, r1
    3996:	49 f4       	brne	.+18     	; 0x39aa <TMR_SR_paramSet+0xd5e>
    3998:	f6 01       	movw	r30, r12
    399a:	e7 50       	subi	r30, 0x07	; 7
    399c:	fa 4f       	sbci	r31, 0xFA	; 250
    399e:	10 82       	st	Z, r1
    39a0:	64 2d       	mov	r22, r4
    39a2:	75 2d       	mov	r23, r5
    39a4:	86 2d       	mov	r24, r6
    39a6:	97 2d       	mov	r25, r7
    39a8:	a2 c0       	rjmp	.+324    	; 0x3aee <TMR_SR_paramSet+0xea2>
    39aa:	f5 01       	movw	r30, r10
    39ac:	80 81       	ld	r24, Z
    39ae:	91 81       	ldd	r25, Z+1	; 0x01
    39b0:	a2 81       	ldd	r26, Z+2	; 0x02
    39b2:	b3 81       	ldd	r27, Z+3	; 0x03
    39b4:	8f 3f       	cpi	r24, 0xFF	; 255
    39b6:	ff ef       	ldi	r31, 0xFF	; 255
    39b8:	9f 07       	cpc	r25, r31
    39ba:	af 07       	cpc	r26, r31
    39bc:	bf 07       	cpc	r27, r31
    39be:	0c f4       	brge	.+2      	; 0x39c2 <TMR_SR_paramSet+0xd76>
    39c0:	8d c0       	rjmp	.+282    	; 0x3adc <TMR_SR_paramSet+0xe90>
    39c2:	f5 01       	movw	r30, r10
    39c4:	44 81       	ldd	r20, Z+4	; 0x04
    39c6:	55 81       	ldd	r21, Z+5	; 0x05
    39c8:	66 81       	ldd	r22, Z+6	; 0x06
    39ca:	77 81       	ldd	r23, Z+7	; 0x07
    39cc:	4f 3f       	cpi	r20, 0xFF	; 255
    39ce:	ff ef       	ldi	r31, 0xFF	; 255
    39d0:	5f 07       	cpc	r21, r31
    39d2:	6f 07       	cpc	r22, r31
    39d4:	7f 07       	cpc	r23, r31
    39d6:	0c f4       	brge	.+2      	; 0x39da <TMR_SR_paramSet+0xd8e>
    39d8:	86 c0       	rjmp	.+268    	; 0x3ae6 <TMR_SR_paramSet+0xe9a>
    39da:	8f 3f       	cpi	r24, 0xFF	; 255
    39dc:	9f 4f       	sbci	r25, 0xFF	; 255
    39de:	af 4f       	sbci	r26, 0xFF	; 255
    39e0:	bf 4f       	sbci	r27, 0xFF	; 255
    39e2:	79 f4       	brne	.+30     	; 0x3a02 <TMR_SR_paramSet+0xdb6>
    39e4:	4f 3f       	cpi	r20, 0xFF	; 255
    39e6:	5f 4f       	sbci	r21, 0xFF	; 255
    39e8:	6f 4f       	sbci	r22, 0xFF	; 255
    39ea:	7f 4f       	sbci	r23, 0xFF	; 255
    39ec:	51 f4       	brne	.+20     	; 0x3a02 <TMR_SR_paramSet+0xdb6>
    39ee:	f6 01       	movw	r30, r12
    39f0:	e7 50       	subi	r30, 0x07	; 7
    39f2:	fa 4f       	sbci	r31, 0xFA	; 250
    39f4:	81 e0       	ldi	r24, 0x01	; 1
    39f6:	80 83       	st	Z, r24
    39f8:	64 2d       	mov	r22, r4
    39fa:	75 2d       	mov	r23, r5
    39fc:	86 2d       	mov	r24, r6
    39fe:	97 2d       	mov	r25, r7
    3a00:	76 c0       	rjmp	.+236    	; 0x3aee <TMR_SR_paramSet+0xea2>
    3a02:	9e 01       	movw	r18, r28
    3a04:	2f 5f       	subi	r18, 0xFF	; 255
    3a06:	3f 4f       	sbci	r19, 0xFF	; 255
    3a08:	4e 2d       	mov	r20, r14
    3a0a:	53 2d       	mov	r21, r3
    3a0c:	6e 2d       	mov	r22, r14
    3a0e:	c6 01       	movw	r24, r12
    3a10:	0e 94 db 57 	call	0xafb6	; 0xafb6 <TMR_SR_cmdGetProtocolConfiguration>
    3a14:	8b 01       	movw	r16, r22
    3a16:	9c 01       	movw	r18, r24
    3a18:	61 15       	cp	r22, r1
    3a1a:	71 05       	cpc	r23, r1
    3a1c:	81 05       	cpc	r24, r1
    3a1e:	91 05       	cpc	r25, r1
    3a20:	61 f5       	brne	.+88     	; 0x3a7a <TMR_SR_paramSet+0xe2e>
    3a22:	81 e0       	ldi	r24, 0x01	; 1
    3a24:	f6 01       	movw	r30, r12
    3a26:	e7 50       	subi	r30, 0x07	; 7
    3a28:	fa 4f       	sbci	r31, 0xFA	; 250
    3a2a:	80 83       	st	Z, r24
    3a2c:	f5 01       	movw	r30, r10
    3a2e:	80 81       	ld	r24, Z
    3a30:	91 81       	ldd	r25, Z+1	; 0x01
    3a32:	a2 81       	ldd	r26, Z+2	; 0x02
    3a34:	b3 81       	ldd	r27, Z+3	; 0x03
    3a36:	8f 3f       	cpi	r24, 0xFF	; 255
    3a38:	9f 4f       	sbci	r25, 0xFF	; 255
    3a3a:	af 4f       	sbci	r26, 0xFF	; 255
    3a3c:	bf 4f       	sbci	r27, 0xFF	; 255
    3a3e:	49 f4       	brne	.+18     	; 0x3a52 <TMR_SR_paramSet+0xe06>
    3a40:	89 81       	ldd	r24, Y+1	; 0x01
    3a42:	9a 81       	ldd	r25, Y+2	; 0x02
    3a44:	ab 81       	ldd	r26, Y+3	; 0x03
    3a46:	bc 81       	ldd	r27, Y+4	; 0x04
    3a48:	f5 01       	movw	r30, r10
    3a4a:	80 83       	st	Z, r24
    3a4c:	91 83       	std	Z+1, r25	; 0x01
    3a4e:	a2 83       	std	Z+2, r26	; 0x02
    3a50:	b3 83       	std	Z+3, r27	; 0x03
    3a52:	f5 01       	movw	r30, r10
    3a54:	84 81       	ldd	r24, Z+4	; 0x04
    3a56:	95 81       	ldd	r25, Z+5	; 0x05
    3a58:	a6 81       	ldd	r26, Z+6	; 0x06
    3a5a:	b7 81       	ldd	r27, Z+7	; 0x07
    3a5c:	8f 3f       	cpi	r24, 0xFF	; 255
    3a5e:	9f 4f       	sbci	r25, 0xFF	; 255
    3a60:	af 4f       	sbci	r26, 0xFF	; 255
    3a62:	bf 4f       	sbci	r27, 0xFF	; 255
    3a64:	71 f4       	brne	.+28     	; 0x3a82 <TMR_SR_paramSet+0xe36>
    3a66:	8d 81       	ldd	r24, Y+5	; 0x05
    3a68:	9e 81       	ldd	r25, Y+6	; 0x06
    3a6a:	af 81       	ldd	r26, Y+7	; 0x07
    3a6c:	b8 85       	ldd	r27, Y+8	; 0x08
    3a6e:	f5 01       	movw	r30, r10
    3a70:	84 83       	std	Z+4, r24	; 0x04
    3a72:	95 83       	std	Z+5, r25	; 0x05
    3a74:	a6 83       	std	Z+6, r26	; 0x06
    3a76:	b7 83       	std	Z+7, r27	; 0x07
    3a78:	04 c0       	rjmp	.+8      	; 0x3a82 <TMR_SR_paramSet+0xe36>
    3a7a:	71 2f       	mov	r23, r17
    3a7c:	82 2f       	mov	r24, r18
    3a7e:	93 2f       	mov	r25, r19
    3a80:	36 c0       	rjmp	.+108    	; 0x3aee <TMR_SR_paramSet+0xea2>
    3a82:	95 01       	movw	r18, r10
    3a84:	4e 2d       	mov	r20, r14
    3a86:	53 2d       	mov	r21, r3
    3a88:	6e 2d       	mov	r22, r14
    3a8a:	c6 01       	movw	r24, r12
    3a8c:	0e 94 b2 4e 	call	0x9d64	; 0x9d64 <TMR_SR_cmdSetProtocolConfiguration>
    3a90:	2e c0       	rjmp	.+92     	; 0x3aee <TMR_SR_paramSet+0xea2>
    3a92:	69 e0       	ldi	r22, 0x09	; 9
    3a94:	70 e0       	ldi	r23, 0x00	; 0
    3a96:	80 e0       	ldi	r24, 0x00	; 0
    3a98:	93 e0       	ldi	r25, 0x03	; 3
    3a9a:	29 c0       	rjmp	.+82     	; 0x3aee <TMR_SR_paramSet+0xea2>
    3a9c:	75 2d       	mov	r23, r5
    3a9e:	86 2d       	mov	r24, r6
    3aa0:	97 2d       	mov	r25, r7
    3aa2:	25 c0       	rjmp	.+74     	; 0x3aee <TMR_SR_paramSet+0xea2>
    3aa4:	64 e0       	ldi	r22, 0x04	; 4
    3aa6:	70 e0       	ldi	r23, 0x00	; 0
    3aa8:	80 e0       	ldi	r24, 0x00	; 0
    3aaa:	93 e0       	ldi	r25, 0x03	; 3
    3aac:	20 c0       	rjmp	.+64     	; 0x3aee <TMR_SR_paramSet+0xea2>
    3aae:	67 e0       	ldi	r22, 0x07	; 7
    3ab0:	75 e0       	ldi	r23, 0x05	; 5
    3ab2:	80 e0       	ldi	r24, 0x00	; 0
    3ab4:	92 e0       	ldi	r25, 0x02	; 2
    3ab6:	1b c0       	rjmp	.+54     	; 0x3aee <TMR_SR_paramSet+0xea2>
    3ab8:	67 e0       	ldi	r22, 0x07	; 7
    3aba:	75 e0       	ldi	r23, 0x05	; 5
    3abc:	80 e0       	ldi	r24, 0x00	; 0
    3abe:	92 e0       	ldi	r25, 0x02	; 2
    3ac0:	16 c0       	rjmp	.+44     	; 0x3aee <TMR_SR_paramSet+0xea2>
    3ac2:	71 2f       	mov	r23, r17
    3ac4:	82 2f       	mov	r24, r18
    3ac6:	93 2f       	mov	r25, r19
    3ac8:	12 c0       	rjmp	.+36     	; 0x3aee <TMR_SR_paramSet+0xea2>
    3aca:	75 2d       	mov	r23, r5
    3acc:	86 2d       	mov	r24, r6
    3ace:	97 2d       	mov	r25, r7
    3ad0:	0e c0       	rjmp	.+28     	; 0x3aee <TMR_SR_paramSet+0xea2>
    3ad2:	64 2d       	mov	r22, r4
    3ad4:	75 2d       	mov	r23, r5
    3ad6:	86 2d       	mov	r24, r6
    3ad8:	97 2d       	mov	r25, r7
    3ada:	09 c0       	rjmp	.+18     	; 0x3aee <TMR_SR_paramSet+0xea2>
    3adc:	6e e0       	ldi	r22, 0x0E	; 14
    3ade:	70 e0       	ldi	r23, 0x00	; 0
    3ae0:	80 e0       	ldi	r24, 0x00	; 0
    3ae2:	93 e0       	ldi	r25, 0x03	; 3
    3ae4:	04 c0       	rjmp	.+8      	; 0x3aee <TMR_SR_paramSet+0xea2>
    3ae6:	6e e0       	ldi	r22, 0x0E	; 14
    3ae8:	70 e0       	ldi	r23, 0x00	; 0
    3aea:	80 e0       	ldi	r24, 0x00	; 0
    3aec:	93 e0       	ldi	r25, 0x03	; 3
    3aee:	a2 96       	adiw	r28, 0x22	; 34
    3af0:	0f b6       	in	r0, 0x3f	; 63
    3af2:	f8 94       	cli
    3af4:	de bf       	out	0x3e, r29	; 62
    3af6:	0f be       	out	0x3f, r0	; 63
    3af8:	cd bf       	out	0x3d, r28	; 61
    3afa:	df 91       	pop	r29
    3afc:	cf 91       	pop	r28
    3afe:	1f 91       	pop	r17
    3b00:	0f 91       	pop	r16
    3b02:	ff 90       	pop	r15
    3b04:	ef 90       	pop	r14
    3b06:	df 90       	pop	r13
    3b08:	cf 90       	pop	r12
    3b0a:	bf 90       	pop	r11
    3b0c:	af 90       	pop	r10
    3b0e:	9f 90       	pop	r9
    3b10:	8f 90       	pop	r8
    3b12:	7f 90       	pop	r7
    3b14:	6f 90       	pop	r6
    3b16:	5f 90       	pop	r5
    3b18:	4f 90       	pop	r4
    3b1a:	3f 90       	pop	r3
    3b1c:	2f 90       	pop	r2
    3b1e:	08 95       	ret

00003b20 <TMR_SR_hasMoreTags>:
    3b20:	af 92       	push	r10
    3b22:	bf 92       	push	r11
    3b24:	cf 92       	push	r12
    3b26:	df 92       	push	r13
    3b28:	ef 92       	push	r14
    3b2a:	ff 92       	push	r15
    3b2c:	0f 93       	push	r16
    3b2e:	1f 93       	push	r17
    3b30:	cf 93       	push	r28
    3b32:	df 93       	push	r29
    3b34:	fc 01       	movw	r30, r24
    3b36:	ea 58       	subi	r30, 0x8A	; 138
    3b38:	ff 4f       	sbci	r31, 0xFF	; 255
    3b3a:	20 81       	ld	r18, Z
    3b3c:	22 23       	and	r18, r18
    3b3e:	09 f4       	brne	.+2      	; 0x3b42 <TMR_SR_hasMoreTags+0x22>
    3b40:	b8 c1       	rjmp	.+880    	; 0x3eb2 <TMR_SR_hasMoreTags+0x392>
    3b42:	e7 5b       	subi	r30, 0xB7	; 183
    3b44:	fb 4f       	sbci	r31, 0xFB	; 251
    3b46:	20 81       	ld	r18, Z
    3b48:	21 11       	cpse	r18, r1
    3b4a:	b3 c1       	rjmp	.+870    	; 0x3eb2 <TMR_SR_hasMoreTags+0x392>
    3b4c:	ec 01       	movw	r28, r24
    3b4e:	5c 01       	movw	r10, r24
    3b50:	82 e4       	ldi	r24, 0x42	; 66
    3b52:	a8 1a       	sub	r10, r24
    3b54:	8c ef       	ldi	r24, 0xFC	; 252
    3b56:	b8 0a       	sbc	r11, r24
    3b58:	e7 50       	subi	r30, 0x07	; 7
    3b5a:	f1 40       	sbci	r31, 0x01	; 1
    3b5c:	00 81       	ld	r16, Z
    3b5e:	11 81       	ldd	r17, Z+1	; 0x01
    3b60:	22 81       	ldd	r18, Z+2	; 0x02
    3b62:	33 81       	ldd	r19, Z+3	; 0x03
    3b64:	42 e2       	ldi	r20, 0x22	; 34
    3b66:	b5 01       	movw	r22, r10
    3b68:	ce 01       	movw	r24, r28
    3b6a:	0e 94 81 33 	call	0x6702	; 0x6702 <TMR_SR_receiveMessage>
    3b6e:	6b 01       	movw	r12, r22
    3b70:	7c 01       	movw	r14, r24
    3b72:	67 2b       	or	r22, r23
    3b74:	68 2b       	or	r22, r24
    3b76:	69 2b       	or	r22, r25
    3b78:	09 f4       	brne	.+2      	; 0x3b7c <TMR_SR_hasMoreTags+0x5c>
    3b7a:	48 c0       	rjmp	.+144    	; 0x3c0c <TMR_SR_hasMoreTags+0xec>
    3b7c:	91 e0       	ldi	r25, 0x01	; 1
    3b7e:	c9 16       	cp	r12, r25
    3b80:	96 e0       	ldi	r25, 0x06	; 6
    3b82:	d9 06       	cpc	r13, r25
    3b84:	e1 04       	cpc	r14, r1
    3b86:	92 e0       	ldi	r25, 0x02	; 2
    3b88:	f9 06       	cpc	r15, r25
    3b8a:	09 f4       	brne	.+2      	; 0x3b8e <TMR_SR_hasMoreTags+0x6e>
    3b8c:	3f c0       	rjmp	.+126    	; 0x3c0c <TMR_SR_hasMoreTags+0xec>
    3b8e:	fe 01       	movw	r30, r28
    3b90:	ed 53       	subi	r30, 0x3D	; 61
    3b92:	fc 4f       	sbci	r31, 0xFC	; 252
    3b94:	80 81       	ld	r24, Z
    3b96:	84 30       	cpi	r24, 0x04	; 4
    3b98:	21 f4       	brne	.+8      	; 0x3ba2 <TMR_SR_hasMoreTags+0x82>
    3b9a:	33 97       	sbiw	r30, 0x03	; 3
    3b9c:	80 81       	ld	r24, Z
    3b9e:	8f 32       	cpi	r24, 0x2F	; 47
    3ba0:	a9 f1       	breq	.+106    	; 0x3c0c <TMR_SR_hasMoreTags+0xec>
    3ba2:	fe 01       	movw	r30, r28
    3ba4:	ef 50       	subi	r30, 0x0F	; 15
    3ba6:	fa 4f       	sbci	r31, 0xFA	; 250
    3ba8:	10 82       	st	Z, r1
    3baa:	e7 52       	subi	r30, 0x27	; 39
    3bac:	f2 40       	sbci	r31, 0x02	; 2
    3bae:	40 81       	ld	r20, Z
    3bb0:	50 e0       	ldi	r21, 0x00	; 0
    3bb2:	60 e0       	ldi	r22, 0x00	; 0
    3bb4:	70 e0       	ldi	r23, 0x00	; 0
    3bb6:	74 2f       	mov	r23, r20
    3bb8:	66 27       	eor	r22, r22
    3bba:	55 27       	eor	r21, r21
    3bbc:	44 27       	eor	r20, r20
    3bbe:	31 96       	adiw	r30, 0x01	; 1
    3bc0:	80 81       	ld	r24, Z
    3bc2:	90 e0       	ldi	r25, 0x00	; 0
    3bc4:	a0 e0       	ldi	r26, 0x00	; 0
    3bc6:	b0 e0       	ldi	r27, 0x00	; 0
    3bc8:	dc 01       	movw	r26, r24
    3bca:	99 27       	eor	r25, r25
    3bcc:	88 27       	eor	r24, r24
    3bce:	48 2b       	or	r20, r24
    3bd0:	59 2b       	or	r21, r25
    3bd2:	6a 2b       	or	r22, r26
    3bd4:	7b 2b       	or	r23, r27
    3bd6:	31 96       	adiw	r30, 0x01	; 1
    3bd8:	80 81       	ld	r24, Z
    3bda:	90 e0       	ldi	r25, 0x00	; 0
    3bdc:	a0 e0       	ldi	r26, 0x00	; 0
    3bde:	b0 e0       	ldi	r27, 0x00	; 0
    3be0:	ba 2f       	mov	r27, r26
    3be2:	a9 2f       	mov	r26, r25
    3be4:	98 2f       	mov	r25, r24
    3be6:	88 27       	eor	r24, r24
    3be8:	48 2b       	or	r20, r24
    3bea:	59 2b       	or	r21, r25
    3bec:	6a 2b       	or	r22, r26
    3bee:	7b 2b       	or	r23, r27
    3bf0:	31 96       	adiw	r30, 0x01	; 1
    3bf2:	80 81       	ld	r24, Z
    3bf4:	48 2b       	or	r20, r24
    3bf6:	c4 55       	subi	r28, 0x54	; 84
    3bf8:	dc 4f       	sbci	r29, 0xFC	; 252
    3bfa:	48 83       	st	Y, r20
    3bfc:	59 83       	std	Y+1, r21	; 0x01
    3bfe:	6a 83       	std	Y+2, r22	; 0x02
    3c00:	7b 83       	std	Y+3, r23	; 0x03
    3c02:	6c 2d       	mov	r22, r12
    3c04:	7d 2d       	mov	r23, r13
    3c06:	8e 2d       	mov	r24, r14
    3c08:	9f 2d       	mov	r25, r15
    3c0a:	a0 c1       	rjmp	.+832    	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3c0c:	c1 14       	cp	r12, r1
    3c0e:	d1 04       	cpc	r13, r1
    3c10:	e1 04       	cpc	r14, r1
    3c12:	f1 04       	cpc	r15, r1
    3c14:	39 f4       	brne	.+14     	; 0x3c24 <TMR_SR_hasMoreTags+0x104>
    3c16:	fe 01       	movw	r30, r28
    3c18:	e1 54       	subi	r30, 0x41	; 65
    3c1a:	fc 4f       	sbci	r31, 0xFC	; 252
    3c1c:	80 81       	ld	r24, Z
    3c1e:	88 23       	and	r24, r24
    3c20:	09 f4       	brne	.+2      	; 0x3c24 <TMR_SR_hasMoreTags+0x104>
    3c22:	5a c1       	rjmp	.+692    	; 0x3ed8 <TMR_SR_hasMoreTags+0x3b8>
    3c24:	fe 01       	movw	r30, r28
    3c26:	e0 54       	subi	r30, 0x40	; 64
    3c28:	fc 4f       	sbci	r31, 0xFC	; 252
    3c2a:	80 81       	ld	r24, Z
    3c2c:	8f 32       	cpi	r24, 0x2F	; 47
    3c2e:	11 f0       	breq	.+4      	; 0x3c34 <TMR_SR_hasMoreTags+0x114>
    3c30:	82 32       	cpi	r24, 0x22	; 34
    3c32:	49 f4       	brne	.+18     	; 0x3c46 <TMR_SR_hasMoreTags+0x126>
    3c34:	91 e0       	ldi	r25, 0x01	; 1
    3c36:	c9 16       	cp	r12, r25
    3c38:	96 e0       	ldi	r25, 0x06	; 6
    3c3a:	d9 06       	cpc	r13, r25
    3c3c:	e1 04       	cpc	r14, r1
    3c3e:	92 e0       	ldi	r25, 0x02	; 2
    3c40:	f9 06       	cpc	r15, r25
    3c42:	09 f4       	brne	.+2      	; 0x3c46 <TMR_SR_hasMoreTags+0x126>
    3c44:	4e c1       	rjmp	.+668    	; 0x3ee2 <TMR_SR_hasMoreTags+0x3c2>
    3c46:	8f 32       	cpi	r24, 0x2F	; 47
    3c48:	69 f5       	brne	.+90     	; 0x3ca4 <TMR_SR_hasMoreTags+0x184>
    3c4a:	fe 01       	movw	r30, r28
    3c4c:	ed 53       	subi	r30, 0x3D	; 61
    3c4e:	fc 4f       	sbci	r31, 0xFC	; 252
    3c50:	80 81       	ld	r24, Z
    3c52:	82 30       	cpi	r24, 0x02	; 2
    3c54:	61 f4       	brne	.+24     	; 0x3c6e <TMR_SR_hasMoreTags+0x14e>
    3c56:	e8 5c       	subi	r30, 0xC8	; 200
    3c58:	fd 4f       	sbci	r31, 0xFD	; 253
    3c5a:	81 e0       	ldi	r24, 0x01	; 1
    3c5c:	80 83       	st	Z, r24
    3c5e:	cf 50       	subi	r28, 0x0F	; 15
    3c60:	da 4f       	sbci	r29, 0xFA	; 250
    3c62:	18 82       	st	Y, r1
    3c64:	6f e0       	ldi	r22, 0x0F	; 15
    3c66:	70 e0       	ldi	r23, 0x00	; 0
    3c68:	80 e0       	ldi	r24, 0x00	; 0
    3c6a:	93 e0       	ldi	r25, 0x03	; 3
    3c6c:	6f c1       	rjmp	.+734    	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3c6e:	83 30       	cpi	r24, 0x03	; 3
    3c70:	09 f4       	brne	.+2      	; 0x3c74 <TMR_SR_hasMoreTags+0x154>
    3c72:	3c c1       	rjmp	.+632    	; 0x3eec <TMR_SR_hasMoreTags+0x3cc>
    3c74:	84 30       	cpi	r24, 0x04	; 4
    3c76:	09 f0       	breq	.+2      	; 0x3c7a <TMR_SR_hasMoreTags+0x15a>
    3c78:	3e c1       	rjmp	.+636    	; 0x3ef6 <TMR_SR_hasMoreTags+0x3d6>
    3c7a:	fe 01       	movw	r30, r28
    3c7c:	e1 54       	subi	r30, 0x41	; 65
    3c7e:	fc 4f       	sbci	r31, 0xFC	; 252
    3c80:	40 81       	ld	r20, Z
    3c82:	50 e0       	ldi	r21, 0x00	; 0
    3c84:	4b 5f       	subi	r20, 0xFB	; 251
    3c86:	5f 4f       	sbci	r21, 0xFF	; 255
    3c88:	b5 01       	movw	r22, r10
    3c8a:	ce 01       	movw	r24, r28
    3c8c:	85 58       	subi	r24, 0x85	; 133
    3c8e:	9f 4f       	sbci	r25, 0xFF	; 255
    3c90:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    3c94:	c6 58       	subi	r28, 0x86	; 134
    3c96:	df 4f       	sbci	r29, 0xFF	; 255
    3c98:	18 82       	st	Y, r1
    3c9a:	68 e0       	ldi	r22, 0x08	; 8
    3c9c:	70 e0       	ldi	r23, 0x00	; 0
    3c9e:	80 e0       	ldi	r24, 0x00	; 0
    3ca0:	93 e0       	ldi	r25, 0x03	; 3
    3ca2:	54 c1       	rjmp	.+680    	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3ca4:	82 32       	cpi	r24, 0x22	; 34
    3ca6:	09 f0       	breq	.+2      	; 0x3caa <TMR_SR_hasMoreTags+0x18a>
    3ca8:	5d c0       	rjmp	.+186    	; 0x3d64 <TMR_SR_hasMoreTags+0x244>
    3caa:	fe 01       	movw	r30, r28
    3cac:	e1 54       	subi	r30, 0x41	; 65
    3cae:	fc 4f       	sbci	r31, 0xFC	; 252
    3cb0:	80 81       	ld	r24, Z
    3cb2:	87 30       	cpi	r24, 0x07	; 7
    3cb4:	09 f0       	breq	.+2      	; 0x3cb8 <TMR_SR_hasMoreTags+0x198>
    3cb6:	5d c0       	rjmp	.+186    	; 0x3d72 <TMR_SR_hasMoreTags+0x252>
    3cb8:	32 96       	adiw	r30, 0x02	; 2
    3cba:	80 81       	ld	r24, Z
    3cbc:	81 11       	cpse	r24, r1
    3cbe:	59 c0       	rjmp	.+178    	; 0x3d72 <TMR_SR_hasMoreTags+0x252>
    3cc0:	31 96       	adiw	r30, 0x01	; 1
    3cc2:	80 81       	ld	r24, Z
    3cc4:	81 11       	cpse	r24, r1
    3cc6:	55 c0       	rjmp	.+170    	; 0x3d72 <TMR_SR_hasMoreTags+0x252>
    3cc8:	31 96       	adiw	r30, 0x01	; 1
    3cca:	20 81       	ld	r18, Z
    3ccc:	31 96       	adiw	r30, 0x01	; 1
    3cce:	80 81       	ld	r24, Z
    3cd0:	90 e0       	ldi	r25, 0x00	; 0
    3cd2:	98 2f       	mov	r25, r24
    3cd4:	88 27       	eor	r24, r24
    3cd6:	31 96       	adiw	r30, 0x01	; 1
    3cd8:	30 81       	ld	r19, Z
    3cda:	83 2b       	or	r24, r19
    3cdc:	20 ff       	sbrs	r18, 0
    3cde:	10 c1       	rjmp	.+544    	; 0x3f00 <TMR_SR_hasMoreTags+0x3e0>
    3ce0:	e9 5c       	subi	r30, 0xC9	; 201
    3ce2:	fd 4f       	sbci	r31, 0xFD	; 253
    3ce4:	20 81       	ld	r18, Z
    3ce6:	22 23       	and	r18, r18
    3ce8:	09 f4       	brne	.+2      	; 0x3cec <TMR_SR_hasMoreTags+0x1cc>
    3cea:	0f c1       	rjmp	.+542    	; 0x3f0a <TMR_SR_hasMoreTags+0x3ea>
    3cec:	86 ff       	sbrs	r24, 6
    3cee:	12 c1       	rjmp	.+548    	; 0x3f14 <TMR_SR_hasMoreTags+0x3f4>
    3cf0:	e6 53       	subi	r30, 0x36	; 54
    3cf2:	f2 40       	sbci	r31, 0x02	; 2
    3cf4:	80 81       	ld	r24, Z
    3cf6:	90 e0       	ldi	r25, 0x00	; 0
    3cf8:	a0 e0       	ldi	r26, 0x00	; 0
    3cfa:	b0 e0       	ldi	r27, 0x00	; 0
    3cfc:	78 2f       	mov	r23, r24
    3cfe:	66 27       	eor	r22, r22
    3d00:	55 27       	eor	r21, r21
    3d02:	44 27       	eor	r20, r20
    3d04:	31 96       	adiw	r30, 0x01	; 1
    3d06:	80 81       	ld	r24, Z
    3d08:	90 e0       	ldi	r25, 0x00	; 0
    3d0a:	a0 e0       	ldi	r26, 0x00	; 0
    3d0c:	b0 e0       	ldi	r27, 0x00	; 0
    3d0e:	dc 01       	movw	r26, r24
    3d10:	99 27       	eor	r25, r25
    3d12:	88 27       	eor	r24, r24
    3d14:	84 2b       	or	r24, r20
    3d16:	95 2b       	or	r25, r21
    3d18:	a6 2b       	or	r26, r22
    3d1a:	b7 2b       	or	r27, r23
    3d1c:	31 96       	adiw	r30, 0x01	; 1
    3d1e:	40 81       	ld	r20, Z
    3d20:	50 e0       	ldi	r21, 0x00	; 0
    3d22:	60 e0       	ldi	r22, 0x00	; 0
    3d24:	70 e0       	ldi	r23, 0x00	; 0
    3d26:	76 2f       	mov	r23, r22
    3d28:	65 2f       	mov	r22, r21
    3d2a:	54 2f       	mov	r21, r20
    3d2c:	44 27       	eor	r20, r20
    3d2e:	84 2b       	or	r24, r20
    3d30:	95 2b       	or	r25, r21
    3d32:	a6 2b       	or	r26, r22
    3d34:	b7 2b       	or	r27, r23
    3d36:	31 96       	adiw	r30, 0x01	; 1
    3d38:	20 81       	ld	r18, Z
    3d3a:	82 2b       	or	r24, r18
    3d3c:	ec 5c       	subi	r30, 0xCC	; 204
    3d3e:	fd 4f       	sbci	r31, 0xFD	; 253
    3d40:	40 81       	ld	r20, Z
    3d42:	51 81       	ldd	r21, Z+1	; 0x01
    3d44:	62 81       	ldd	r22, Z+2	; 0x02
    3d46:	73 81       	ldd	r23, Z+3	; 0x03
    3d48:	84 17       	cp	r24, r20
    3d4a:	95 07       	cpc	r25, r21
    3d4c:	a6 07       	cpc	r26, r22
    3d4e:	b7 07       	cpc	r27, r23
    3d50:	08 f4       	brcc	.+2      	; 0x3d54 <TMR_SR_hasMoreTags+0x234>
    3d52:	e5 c0       	rjmp	.+458    	; 0x3f1e <TMR_SR_hasMoreTags+0x3fe>
    3d54:	ce 01       	movw	r24, r28
    3d56:	0e 94 3e 67 	call	0xce7c	; 0xce7c <TMR_SR_cmdStopReading>
    3d5a:	68 e0       	ldi	r22, 0x08	; 8
    3d5c:	70 e0       	ldi	r23, 0x00	; 0
    3d5e:	80 e0       	ldi	r24, 0x00	; 0
    3d60:	93 e0       	ldi	r25, 0x03	; 3
    3d62:	f4 c0       	rjmp	.+488    	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3d64:	fe 01       	movw	r30, r28
    3d66:	e1 54       	subi	r30, 0x41	; 65
    3d68:	fc 4f       	sbci	r31, 0xFC	; 252
    3d6a:	80 81       	ld	r24, Z
    3d6c:	86 30       	cpi	r24, 0x06	; 6
    3d6e:	08 f4       	brcc	.+2      	; 0x3d72 <TMR_SR_hasMoreTags+0x252>
    3d70:	db c0       	rjmp	.+438    	; 0x3f28 <TMR_SR_hasMoreTags+0x408>
    3d72:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <isMultiSelectEnabled>
    3d76:	81 11       	cpse	r24, r1
    3d78:	07 c0       	rjmp	.+14     	; 0x3d88 <TMR_SR_hasMoreTags+0x268>
    3d7a:	fe 01       	movw	r30, r28
    3d7c:	e3 5f       	subi	r30, 0xF3	; 243
    3d7e:	f9 4f       	sbci	r31, 0xF9	; 249
    3d80:	80 81       	ld	r24, Z
    3d82:	81 11       	cpse	r24, r1
    3d84:	03 c0       	rjmp	.+6      	; 0x3d8c <TMR_SR_hasMoreTags+0x26c>
    3d86:	03 c0       	rjmp	.+6      	; 0x3d8e <TMR_SR_hasMoreTags+0x26e>
    3d88:	81 e0       	ldi	r24, 0x01	; 1
    3d8a:	01 c0       	rjmp	.+2      	; 0x3d8e <TMR_SR_hasMoreTags+0x26e>
    3d8c:	81 e0       	ldi	r24, 0x01	; 1
    3d8e:	e8 2f       	mov	r30, r24
    3d90:	f0 e0       	ldi	r31, 0x00	; 0
    3d92:	35 96       	adiw	r30, 0x05	; 5
    3d94:	ea 0d       	add	r30, r10
    3d96:	fb 1d       	adc	r31, r11
    3d98:	90 81       	ld	r25, Z
    3d9a:	94 ff       	sbrs	r25, 4
    3d9c:	03 c0       	rjmp	.+6      	; 0x3da4 <TMR_SR_hasMoreTags+0x284>
    3d9e:	1a e0       	ldi	r17, 0x0A	; 10
    3da0:	18 0f       	add	r17, r24
    3da2:	02 c0       	rjmp	.+4      	; 0x3da8 <TMR_SR_hasMoreTags+0x288>
    3da4:	18 e0       	ldi	r17, 0x08	; 8
    3da6:	18 0f       	add	r17, r24
    3da8:	f5 01       	movw	r30, r10
    3daa:	e1 0f       	add	r30, r17
    3dac:	f1 1d       	adc	r31, r1
    3dae:	80 81       	ld	r24, Z
    3db0:	81 30       	cpi	r24, 0x01	; 1
    3db2:	91 f0       	breq	.+36     	; 0x3dd8 <TMR_SR_hasMoreTags+0x2b8>
    3db4:	10 f1       	brcs	.+68     	; 0x3dfa <TMR_SR_hasMoreTags+0x2da>
    3db6:	82 30       	cpi	r24, 0x02	; 2
    3db8:	09 f0       	breq	.+2      	; 0x3dbc <TMR_SR_hasMoreTags+0x29c>
    3dba:	bb c0       	rjmp	.+374    	; 0x3f32 <TMR_SR_hasMoreTags+0x412>
    3dbc:	fe 01       	movw	r30, r28
    3dbe:	e8 58       	subi	r30, 0x88	; 136
    3dc0:	ff 4f       	sbci	r31, 0xFF	; 255
    3dc2:	81 e0       	ldi	r24, 0x01	; 1
    3dc4:	80 83       	st	Z, r24
    3dc6:	c2 54       	subi	r28, 0x42	; 66
    3dc8:	db 4f       	sbci	r29, 0xFB	; 251
    3dca:	89 e0       	ldi	r24, 0x09	; 9
    3dcc:	88 83       	st	Y, r24
    3dce:	60 e0       	ldi	r22, 0x00	; 0
    3dd0:	70 e0       	ldi	r23, 0x00	; 0
    3dd2:	80 e0       	ldi	r24, 0x00	; 0
    3dd4:	90 e0       	ldi	r25, 0x00	; 0
    3dd6:	ba c0       	rjmp	.+372    	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3dd8:	fe 01       	movw	r30, r28
    3dda:	e8 58       	subi	r30, 0x88	; 136
    3ddc:	ff 4f       	sbci	r31, 0xFF	; 255
    3dde:	10 82       	st	Z, r1
    3de0:	e9 5b       	subi	r30, 0xB9	; 185
    3de2:	fb 4f       	sbci	r31, 0xFB	; 251
    3de4:	81 e0       	ldi	r24, 0x01	; 1
    3de6:	80 83       	st	Z, r24
    3de8:	c2 54       	subi	r28, 0x42	; 66
    3dea:	db 4f       	sbci	r29, 0xFB	; 251
    3dec:	8b e0       	ldi	r24, 0x0B	; 11
    3dee:	88 83       	st	Y, r24
    3df0:	60 e0       	ldi	r22, 0x00	; 0
    3df2:	70 e0       	ldi	r23, 0x00	; 0
    3df4:	80 e0       	ldi	r24, 0x00	; 0
    3df6:	90 e0       	ldi	r25, 0x00	; 0
    3df8:	a9 c0       	rjmp	.+338    	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3dfa:	fe 01       	movw	r30, r28
    3dfc:	ef 50       	subi	r30, 0x0F	; 15
    3dfe:	fa 4f       	sbci	r31, 0xFA	; 250
    3e00:	10 82       	st	Z, r1
    3e02:	e5 53       	subi	r30, 0x35	; 53
    3e04:	f2 40       	sbci	r31, 0x02	; 2
    3e06:	11 82       	std	Z+1, r1	; 0x01
    3e08:	10 82       	st	Z, r1
    3e0a:	e7 5c       	subi	r30, 0xC7	; 199
    3e0c:	fd 4f       	sbci	r31, 0xFD	; 253
    3e0e:	80 81       	ld	r24, Z
    3e10:	82 30       	cpi	r24, 0x02	; 2
    3e12:	91 f0       	breq	.+36     	; 0x3e38 <TMR_SR_hasMoreTags+0x318>
    3e14:	af 01       	movw	r20, r30
    3e16:	62 e1       	ldi	r22, 0x12	; 18
    3e18:	ce 01       	movw	r24, r28
    3e1a:	0e 94 8c 6b 	call	0xd718	; 0xd718 <TMR_paramSet>
    3e1e:	6b 01       	movw	r12, r22
    3e20:	7c 01       	movw	r14, r24
    3e22:	61 15       	cp	r22, r1
    3e24:	71 05       	cpc	r23, r1
    3e26:	81 05       	cpc	r24, r1
    3e28:	91 05       	cpc	r25, r1
    3e2a:	09 f0       	breq	.+2      	; 0x3e2e <TMR_SR_hasMoreTags+0x30e>
    3e2c:	87 c0       	rjmp	.+270    	; 0x3f3c <TMR_SR_hasMoreTags+0x41c>
    3e2e:	82 e0       	ldi	r24, 0x02	; 2
    3e30:	fe 01       	movw	r30, r28
    3e32:	eb 50       	subi	r30, 0x0B	; 11
    3e34:	fa 4f       	sbci	r31, 0xFA	; 250
    3e36:	80 83       	st	Z, r24
    3e38:	ea a9       	ldd	r30, Y+50	; 0x32
    3e3a:	fb a9       	ldd	r31, Y+51	; 0x33
    3e3c:	87 85       	ldd	r24, Z+15	; 0x0f
    3e3e:	90 89       	ldd	r25, Z+16	; 0x10
    3e40:	89 2b       	or	r24, r25
    3e42:	61 f1       	breq	.+88     	; 0x3e9c <TMR_SR_hasMoreTags+0x37c>
    3e44:	89 e0       	ldi	r24, 0x09	; 9
    3e46:	81 0f       	add	r24, r17
    3e48:	95 01       	movw	r18, r10
    3e4a:	28 0f       	add	r18, r24
    3e4c:	31 1d       	adc	r19, r1
    3e4e:	f9 01       	movw	r30, r18
    3e50:	32 97       	sbiw	r30, 0x02	; 2
    3e52:	80 81       	ld	r24, Z
    3e54:	90 e0       	ldi	r25, 0x00	; 0
    3e56:	98 2f       	mov	r25, r24
    3e58:	88 27       	eor	r24, r24
    3e5a:	31 96       	adiw	r30, 0x01	; 1
    3e5c:	20 81       	ld	r18, Z
    3e5e:	82 2b       	or	r24, r18
    3e60:	fe 01       	movw	r30, r28
    3e62:	ed 53       	subi	r30, 0x3D	; 61
    3e64:	fa 4f       	sbci	r31, 0xFA	; 250
    3e66:	20 81       	ld	r18, Z
    3e68:	31 81       	ldd	r19, Z+1	; 0x01
    3e6a:	82 0f       	add	r24, r18
    3e6c:	93 1f       	adc	r25, r19
    3e6e:	91 83       	std	Z+1, r25	; 0x01
    3e70:	80 83       	st	Z, r24
    3e72:	8b e0       	ldi	r24, 0x0B	; 11
    3e74:	81 0f       	add	r24, r17
    3e76:	a8 0e       	add	r10, r24
    3e78:	b1 1c       	adc	r11, r1
    3e7a:	f5 01       	movw	r30, r10
    3e7c:	32 97       	sbiw	r30, 0x02	; 2
    3e7e:	80 81       	ld	r24, Z
    3e80:	90 e0       	ldi	r25, 0x00	; 0
    3e82:	98 2f       	mov	r25, r24
    3e84:	88 27       	eor	r24, r24
    3e86:	31 96       	adiw	r30, 0x01	; 1
    3e88:	20 81       	ld	r18, Z
    3e8a:	82 2b       	or	r24, r18
    3e8c:	cb 53       	subi	r28, 0x3B	; 59
    3e8e:	da 4f       	sbci	r29, 0xFA	; 250
    3e90:	28 81       	ld	r18, Y
    3e92:	39 81       	ldd	r19, Y+1	; 0x01
    3e94:	82 0f       	add	r24, r18
    3e96:	93 1f       	adc	r25, r19
    3e98:	99 83       	std	Y+1, r25	; 0x01
    3e9a:	88 83       	st	Y, r24
    3e9c:	c1 14       	cp	r12, r1
    3e9e:	d1 04       	cpc	r13, r1
    3ea0:	e1 04       	cpc	r14, r1
    3ea2:	f1 04       	cpc	r15, r1
    3ea4:	09 f0       	breq	.+2      	; 0x3ea8 <TMR_SR_hasMoreTags+0x388>
    3ea6:	4e c0       	rjmp	.+156    	; 0x3f44 <TMR_SR_hasMoreTags+0x424>
    3ea8:	68 e0       	ldi	r22, 0x08	; 8
    3eaa:	70 e0       	ldi	r23, 0x00	; 0
    3eac:	80 e0       	ldi	r24, 0x00	; 0
    3eae:	93 e0       	ldi	r25, 0x03	; 3
    3eb0:	4d c0       	rjmp	.+154    	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3eb2:	fc 01       	movw	r30, r24
    3eb4:	e4 54       	subi	r30, 0x44	; 68
    3eb6:	fc 4f       	sbci	r31, 0xFC	; 252
    3eb8:	80 81       	ld	r24, Z
    3eba:	91 81       	ldd	r25, Z+1	; 0x01
    3ebc:	18 16       	cp	r1, r24
    3ebe:	19 06       	cpc	r1, r25
    3ec0:	2c f4       	brge	.+10     	; 0x3ecc <TMR_SR_hasMoreTags+0x3ac>
    3ec2:	20 e0       	ldi	r18, 0x00	; 0
    3ec4:	70 e0       	ldi	r23, 0x00	; 0
    3ec6:	80 e0       	ldi	r24, 0x00	; 0
    3ec8:	90 e0       	ldi	r25, 0x00	; 0
    3eca:	04 c0       	rjmp	.+8      	; 0x3ed4 <TMR_SR_hasMoreTags+0x3b4>
    3ecc:	28 e0       	ldi	r18, 0x08	; 8
    3ece:	70 e0       	ldi	r23, 0x00	; 0
    3ed0:	80 e0       	ldi	r24, 0x00	; 0
    3ed2:	93 e0       	ldi	r25, 0x03	; 3
    3ed4:	62 2f       	mov	r22, r18
    3ed6:	3a c0       	rjmp	.+116    	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3ed8:	60 e0       	ldi	r22, 0x00	; 0
    3eda:	74 e0       	ldi	r23, 0x04	; 4
    3edc:	80 e0       	ldi	r24, 0x00	; 0
    3ede:	92 e0       	ldi	r25, 0x02	; 2
    3ee0:	35 c0       	rjmp	.+106    	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3ee2:	6c 2d       	mov	r22, r12
    3ee4:	7d 2d       	mov	r23, r13
    3ee6:	8e 2d       	mov	r24, r14
    3ee8:	9f 2d       	mov	r25, r15
    3eea:	30 c0       	rjmp	.+96     	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3eec:	64 e0       	ldi	r22, 0x04	; 4
    3eee:	76 e0       	ldi	r23, 0x06	; 6
    3ef0:	80 e0       	ldi	r24, 0x00	; 0
    3ef2:	92 e0       	ldi	r25, 0x02	; 2
    3ef4:	2b c0       	rjmp	.+86     	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3ef6:	68 e0       	ldi	r22, 0x08	; 8
    3ef8:	70 e0       	ldi	r23, 0x00	; 0
    3efa:	80 e0       	ldi	r24, 0x00	; 0
    3efc:	93 e0       	ldi	r25, 0x03	; 3
    3efe:	26 c0       	rjmp	.+76     	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3f00:	68 e0       	ldi	r22, 0x08	; 8
    3f02:	70 e0       	ldi	r23, 0x00	; 0
    3f04:	80 e0       	ldi	r24, 0x00	; 0
    3f06:	93 e0       	ldi	r25, 0x03	; 3
    3f08:	21 c0       	rjmp	.+66     	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3f0a:	68 e0       	ldi	r22, 0x08	; 8
    3f0c:	70 e0       	ldi	r23, 0x00	; 0
    3f0e:	80 e0       	ldi	r24, 0x00	; 0
    3f10:	93 e0       	ldi	r25, 0x03	; 3
    3f12:	1c c0       	rjmp	.+56     	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3f14:	68 e0       	ldi	r22, 0x08	; 8
    3f16:	70 e0       	ldi	r23, 0x00	; 0
    3f18:	80 e0       	ldi	r24, 0x00	; 0
    3f1a:	93 e0       	ldi	r25, 0x03	; 3
    3f1c:	17 c0       	rjmp	.+46     	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3f1e:	68 e0       	ldi	r22, 0x08	; 8
    3f20:	70 e0       	ldi	r23, 0x00	; 0
    3f22:	80 e0       	ldi	r24, 0x00	; 0
    3f24:	93 e0       	ldi	r25, 0x03	; 3
    3f26:	12 c0       	rjmp	.+36     	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3f28:	64 e0       	ldi	r22, 0x04	; 4
    3f2a:	70 e0       	ldi	r23, 0x00	; 0
    3f2c:	80 e0       	ldi	r24, 0x00	; 0
    3f2e:	91 e0       	ldi	r25, 0x01	; 1
    3f30:	0d c0       	rjmp	.+26     	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3f32:	64 e0       	ldi	r22, 0x04	; 4
    3f34:	70 e0       	ldi	r23, 0x00	; 0
    3f36:	80 e0       	ldi	r24, 0x00	; 0
    3f38:	91 e0       	ldi	r25, 0x01	; 1
    3f3a:	08 c0       	rjmp	.+16     	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3f3c:	7d 2d       	mov	r23, r13
    3f3e:	8e 2d       	mov	r24, r14
    3f40:	9f 2d       	mov	r25, r15
    3f42:	04 c0       	rjmp	.+8      	; 0x3f4c <TMR_SR_hasMoreTags+0x42c>
    3f44:	6c 2d       	mov	r22, r12
    3f46:	7d 2d       	mov	r23, r13
    3f48:	8e 2d       	mov	r24, r14
    3f4a:	9f 2d       	mov	r25, r15
    3f4c:	df 91       	pop	r29
    3f4e:	cf 91       	pop	r28
    3f50:	1f 91       	pop	r17
    3f52:	0f 91       	pop	r16
    3f54:	ff 90       	pop	r15
    3f56:	ef 90       	pop	r14
    3f58:	df 90       	pop	r13
    3f5a:	cf 90       	pop	r12
    3f5c:	bf 90       	pop	r11
    3f5e:	af 90       	pop	r10
    3f60:	08 95       	ret

00003f62 <TMR_SR_getNextTag>:
    3f62:	4f 92       	push	r4
    3f64:	5f 92       	push	r5
    3f66:	6f 92       	push	r6
    3f68:	7f 92       	push	r7
    3f6a:	af 92       	push	r10
    3f6c:	bf 92       	push	r11
    3f6e:	cf 92       	push	r12
    3f70:	df 92       	push	r13
    3f72:	ef 92       	push	r14
    3f74:	ff 92       	push	r15
    3f76:	0f 93       	push	r16
    3f78:	1f 93       	push	r17
    3f7a:	cf 93       	push	r28
    3f7c:	df 93       	push	r29
    3f7e:	1f 92       	push	r1
    3f80:	cd b7       	in	r28, 0x3d	; 61
    3f82:	de b7       	in	r29, 0x3e	; 62
    3f84:	6c 01       	movw	r12, r24
    3f86:	20 e8       	ldi	r18, 0x80	; 128
    3f88:	c2 1a       	sub	r12, r18
    3f8a:	2e ef       	ldi	r18, 0xFE	; 254
    3f8c:	d2 0a       	sbc	r13, r18
    3f8e:	8c 01       	movw	r16, r24
    3f90:	02 54       	subi	r16, 0x42	; 66
    3f92:	1c 4f       	sbci	r17, 0xFC	; 252
    3f94:	fc 01       	movw	r30, r24
    3f96:	e4 54       	subi	r30, 0x44	; 68
    3f98:	fc 4f       	sbci	r31, 0xFC	; 252
    3f9a:	20 81       	ld	r18, Z
    3f9c:	31 81       	ldd	r19, Z+1	; 0x01
    3f9e:	23 2b       	or	r18, r19
    3fa0:	09 f4       	brne	.+2      	; 0x3fa4 <TMR_SR_getNextTag+0x42>
    3fa2:	d1 c0       	rjmp	.+418    	; 0x4146 <TMR_SR_getNextTag+0x1e4>
    3fa4:	5b 01       	movw	r10, r22
    3fa6:	7c 01       	movw	r14, r24
    3fa8:	ed 5f       	subi	r30, 0xFD	; 253
    3faa:	fe 4f       	sbci	r31, 0xFE	; 254
    3fac:	80 81       	ld	r24, Z
    3fae:	81 11       	cpse	r24, r1
    3fb0:	50 c0       	rjmp	.+160    	; 0x4052 <TMR_SR_getNextTag+0xf0>
    3fb2:	e9 54       	subi	r30, 0x49	; 73
    3fb4:	f4 40       	sbci	r31, 0x04	; 4
    3fb6:	80 81       	ld	r24, Z
    3fb8:	88 23       	and	r24, r24
    3fba:	59 f0       	breq	.+22     	; 0x3fd2 <TMR_SR_getNextTag+0x70>
    3fbc:	c7 01       	movw	r24, r14
    3fbe:	b0 dd       	rcall	.-1184   	; 0x3b20 <TMR_SR_hasMoreTags>
    3fc0:	2b 01       	movw	r4, r22
    3fc2:	3c 01       	movw	r6, r24
    3fc4:	61 15       	cp	r22, r1
    3fc6:	71 05       	cpc	r23, r1
    3fc8:	81 05       	cpc	r24, r1
    3fca:	91 05       	cpc	r25, r1
    3fcc:	09 f4       	brne	.+2      	; 0x3fd0 <TMR_SR_getNextTag+0x6e>
    3fce:	41 c0       	rjmp	.+130    	; 0x4052 <TMR_SR_getNextTag+0xf0>
    3fd0:	bf c0       	rjmp	.+382    	; 0x4150 <TMR_SR_getNextTag+0x1ee>
    3fd2:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    3fd6:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    3fda:	01 96       	adiw	r24, 0x01	; 1
    3fdc:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    3fe0:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    3fe4:	89 e2       	ldi	r24, 0x29	; 41
    3fe6:	f8 01       	movw	r30, r16
    3fe8:	82 83       	std	Z+2, r24	; 0x02
    3fea:	f7 01       	movw	r30, r14
    3fec:	e7 5e       	subi	r30, 0xE7	; 231
    3fee:	f9 4f       	sbci	r31, 0xF9	; 249
    3ff0:	20 81       	ld	r18, Z
    3ff2:	31 81       	ldd	r19, Z+1	; 0x01
    3ff4:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    3ff8:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    3ffc:	02 96       	adiw	r24, 0x02	; 2
    3ffe:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    4002:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    4006:	f8 01       	movw	r30, r16
    4008:	33 83       	std	Z+3, r19	; 0x03
    400a:	24 83       	std	Z+4, r18	; 0x04
    400c:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    4010:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    4014:	01 96       	adiw	r24, 0x01	; 1
    4016:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    401a:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    401e:	86 e0       	ldi	r24, 0x06	; 6
    4020:	89 83       	std	Y+1, r24	; 0x01
    4022:	15 82       	std	Z+5, r1	; 0x05
    4024:	46 e0       	ldi	r20, 0x06	; 6
    4026:	b8 01       	movw	r22, r16
    4028:	c7 01       	movw	r24, r14
    402a:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    402e:	2b 01       	movw	r4, r22
    4030:	3c 01       	movw	r6, r24
    4032:	61 15       	cp	r22, r1
    4034:	71 05       	cpc	r23, r1
    4036:	81 05       	cpc	r24, r1
    4038:	91 05       	cpc	r25, r1
    403a:	09 f0       	breq	.+2      	; 0x403e <TMR_SR_getNextTag+0xdc>
    403c:	8d c0       	rjmp	.+282    	; 0x4158 <TMR_SR_getNextTag+0x1f6>
    403e:	f7 01       	movw	r30, r14
    4040:	ea 53       	subi	r30, 0x3A	; 58
    4042:	fc 4f       	sbci	r31, 0xFC	; 252
    4044:	80 81       	ld	r24, Z
    4046:	e7 50       	subi	r30, 0x07	; 7
    4048:	ff 4f       	sbci	r31, 0xFF	; 255
    404a:	80 83       	st	Z, r24
    404c:	89 e0       	ldi	r24, 0x09	; 9
    404e:	31 97       	sbiw	r30, 0x01	; 1
    4050:	80 83       	st	Z, r24
    4052:	f7 01       	movw	r30, r14
    4054:	e2 54       	subi	r30, 0x42	; 66
    4056:	fb 4f       	sbci	r31, 0xFB	; 251
    4058:	80 81       	ld	r24, Z
    405a:	89 83       	std	Y+1, r24	; 0x01
    405c:	32 96       	adiw	r30, 0x02	; 2
    405e:	90 81       	ld	r25, Z
    4060:	92 32       	cpi	r25, 0x22	; 34
    4062:	b1 f5       	brne	.+108    	; 0x40d0 <TMR_SR_getNextTag+0x16e>
    4064:	90 91 5f 02 	lds	r25, 0x025F	; 0x80025f <isMultiSelectEnabled>
    4068:	99 23       	and	r25, r25
    406a:	21 f0       	breq	.+8      	; 0x4074 <TMR_SR_getNextTag+0x112>
    406c:	8f 5f       	subi	r24, 0xFF	; 255
    406e:	89 83       	std	Y+1, r24	; 0x01
    4070:	e1 e0       	ldi	r30, 0x01	; 1
    4072:	01 c0       	rjmp	.+2      	; 0x4076 <TMR_SR_getNextTag+0x114>
    4074:	e0 e0       	ldi	r30, 0x00	; 0
    4076:	d7 01       	movw	r26, r14
    4078:	aa 58       	subi	r26, 0x8A	; 138
    407a:	bf 4f       	sbci	r27, 0xFF	; 255
    407c:	8c 91       	ld	r24, X
    407e:	88 23       	and	r24, r24
    4080:	21 f0       	breq	.+8      	; 0x408a <TMR_SR_getNextTag+0x128>
    4082:	ae 2f       	mov	r26, r30
    4084:	b0 e0       	ldi	r27, 0x00	; 0
    4086:	18 96       	adiw	r26, 0x08	; 8
    4088:	03 c0       	rjmp	.+6      	; 0x4090 <TMR_SR_getNextTag+0x12e>
    408a:	ae 2f       	mov	r26, r30
    408c:	b0 e0       	ldi	r27, 0x00	; 0
    408e:	15 96       	adiw	r26, 0x05	; 5
    4090:	a0 0f       	add	r26, r16
    4092:	b1 1f       	adc	r27, r17
    4094:	4c 91       	ld	r20, X
    4096:	50 e0       	ldi	r21, 0x00	; 0
    4098:	54 2f       	mov	r21, r20
    409a:	44 27       	eor	r20, r20
    409c:	88 23       	and	r24, r24
    409e:	19 f0       	breq	.+6      	; 0x40a6 <TMR_SR_getNextTag+0x144>
    40a0:	f0 e0       	ldi	r31, 0x00	; 0
    40a2:	39 96       	adiw	r30, 0x09	; 9
    40a4:	02 c0       	rjmp	.+4      	; 0x40aa <TMR_SR_getNextTag+0x148>
    40a6:	f0 e0       	ldi	r31, 0x00	; 0
    40a8:	36 96       	adiw	r30, 0x06	; 6
    40aa:	e0 0f       	add	r30, r16
    40ac:	f1 1f       	adc	r31, r17
    40ae:	80 81       	ld	r24, Z
    40b0:	48 2b       	or	r20, r24
    40b2:	9e 01       	movw	r18, r28
    40b4:	2f 5f       	subi	r18, 0xFF	; 255
    40b6:	3f 4f       	sbci	r19, 0xFF	; 255
    40b8:	b5 01       	movw	r22, r10
    40ba:	c7 01       	movw	r24, r14
    40bc:	0e 94 db 46 	call	0x8db6	; 0x8db6 <TMR_SR_parseMetadataFromMessage>
    40c0:	2b 01       	movw	r4, r22
    40c2:	3c 01       	movw	r6, r24
    40c4:	61 15       	cp	r22, r1
    40c6:	71 05       	cpc	r23, r1
    40c8:	81 05       	cpc	r24, r1
    40ca:	91 05       	cpc	r25, r1
    40cc:	09 f0       	breq	.+2      	; 0x40d0 <TMR_SR_getNextTag+0x16e>
    40ce:	48 c0       	rjmp	.+144    	; 0x4160 <TMR_SR_getNextTag+0x1fe>
    40d0:	89 81       	ldd	r24, Y+1	; 0x01
    40d2:	f7 01       	movw	r30, r14
    40d4:	e2 54       	subi	r30, 0x42	; 66
    40d6:	fb 4f       	sbci	r31, 0xFB	; 251
    40d8:	80 83       	st	Z, r24
    40da:	b6 01       	movw	r22, r12
    40dc:	c5 01       	movw	r24, r10
    40de:	0e 94 48 48 	call	0x9090	; 0x9090 <TMR_SR_postprocessReaderSpecificMetadata>
    40e2:	f7 01       	movw	r30, r14
    40e4:	e1 54       	subi	r30, 0x41	; 65
    40e6:	fb 4f       	sbci	r31, 0xFB	; 251
    40e8:	80 81       	ld	r24, Z
    40ea:	81 50       	subi	r24, 0x01	; 1
    40ec:	80 83       	st	Z, r24
    40ee:	e9 54       	subi	r30, 0x49	; 73
    40f0:	f4 40       	sbci	r31, 0x04	; 4
    40f2:	80 81       	ld	r24, Z
    40f4:	81 11       	cpse	r24, r1
    40f6:	1d c0       	rjmp	.+58     	; 0x4132 <TMR_SR_getNextTag+0x1d0>
    40f8:	ea 5b       	subi	r30, 0xBA	; 186
    40fa:	fc 4f       	sbci	r31, 0xFC	; 252
    40fc:	80 81       	ld	r24, Z
    40fe:	91 81       	ldd	r25, Z+1	; 0x01
    4100:	01 97       	sbiw	r24, 0x01	; 1
    4102:	91 83       	std	Z+1, r25	; 0x01
    4104:	80 83       	st	Z, r24
    4106:	89 2b       	or	r24, r25
    4108:	51 f4       	brne	.+20     	; 0x411e <TMR_SR_getNextTag+0x1bc>
    410a:	c7 01       	movw	r24, r14
    410c:	0e 94 b8 43 	call	0x8770	; 0x8770 <TMR_SR_cmdClearTagBuffer>
    4110:	2b 01       	movw	r4, r22
    4112:	3c 01       	movw	r6, r24
    4114:	61 15       	cp	r22, r1
    4116:	71 05       	cpc	r23, r1
    4118:	81 05       	cpc	r24, r1
    411a:	91 05       	cpc	r25, r1
    411c:	29 f5       	brne	.+74     	; 0x4168 <TMR_SR_getNextTag+0x206>
    411e:	f7 01       	movw	r30, r14
    4120:	e4 54       	subi	r30, 0x44	; 68
    4122:	fc 4f       	sbci	r31, 0xFC	; 252
    4124:	80 81       	ld	r24, Z
    4126:	91 81       	ldd	r25, Z+1	; 0x01
    4128:	89 2b       	or	r24, r25
    412a:	19 f4       	brne	.+6      	; 0x4132 <TMR_SR_getNextTag+0x1d0>
    412c:	e4 5c       	subi	r30, 0xC4	; 196
    412e:	fd 4f       	sbci	r31, 0xFD	; 253
    4130:	10 82       	st	Z, r1
    4132:	f5 01       	movw	r30, r10
    4134:	ea 5a       	subi	r30, 0xAA	; 170
    4136:	fc 4f       	sbci	r31, 0xFC	; 252
    4138:	f1 82       	std	Z+1, r15	; 0x01
    413a:	e0 82       	st	Z, r14
    413c:	60 e0       	ldi	r22, 0x00	; 0
    413e:	70 e0       	ldi	r23, 0x00	; 0
    4140:	80 e0       	ldi	r24, 0x00	; 0
    4142:	90 e0       	ldi	r25, 0x00	; 0
    4144:	14 c0       	rjmp	.+40     	; 0x416e <TMR_SR_getNextTag+0x20c>
    4146:	68 e0       	ldi	r22, 0x08	; 8
    4148:	70 e0       	ldi	r23, 0x00	; 0
    414a:	80 e0       	ldi	r24, 0x00	; 0
    414c:	93 e0       	ldi	r25, 0x03	; 3
    414e:	0f c0       	rjmp	.+30     	; 0x416e <TMR_SR_getNextTag+0x20c>
    4150:	75 2d       	mov	r23, r5
    4152:	86 2d       	mov	r24, r6
    4154:	97 2d       	mov	r25, r7
    4156:	0b c0       	rjmp	.+22     	; 0x416e <TMR_SR_getNextTag+0x20c>
    4158:	75 2d       	mov	r23, r5
    415a:	86 2d       	mov	r24, r6
    415c:	97 2d       	mov	r25, r7
    415e:	07 c0       	rjmp	.+14     	; 0x416e <TMR_SR_getNextTag+0x20c>
    4160:	75 2d       	mov	r23, r5
    4162:	86 2d       	mov	r24, r6
    4164:	97 2d       	mov	r25, r7
    4166:	03 c0       	rjmp	.+6      	; 0x416e <TMR_SR_getNextTag+0x20c>
    4168:	75 2d       	mov	r23, r5
    416a:	86 2d       	mov	r24, r6
    416c:	97 2d       	mov	r25, r7
    416e:	0f 90       	pop	r0
    4170:	df 91       	pop	r29
    4172:	cf 91       	pop	r28
    4174:	1f 91       	pop	r17
    4176:	0f 91       	pop	r16
    4178:	ff 90       	pop	r15
    417a:	ef 90       	pop	r14
    417c:	df 90       	pop	r13
    417e:	cf 90       	pop	r12
    4180:	bf 90       	pop	r11
    4182:	af 90       	pop	r10
    4184:	7f 90       	pop	r7
    4186:	6f 90       	pop	r6
    4188:	5f 90       	pop	r5
    418a:	4f 90       	pop	r4
    418c:	08 95       	ret

0000418e <TMR_SR_SerialReader_init>:
    418e:	0f 93       	push	r16
    4190:	1f 93       	push	r17
    4192:	cf 93       	push	r28
    4194:	df 93       	push	r29
    4196:	cd b7       	in	r28, 0x3d	; 61
    4198:	de b7       	in	r29, 0x3e	; 62
    419a:	a0 97       	sbiw	r28, 0x20	; 32
    419c:	0f b6       	in	r0, 0x3f	; 63
    419e:	f8 94       	cli
    41a0:	de bf       	out	0x3e, r29	; 62
    41a2:	0f be       	out	0x3f, r0	; 63
    41a4:	cd bf       	out	0x3d, r28	; 61
    41a6:	22 e0       	ldi	r18, 0x02	; 2
    41a8:	dc 01       	movw	r26, r24
    41aa:	14 96       	adiw	r26, 0x04	; 4
    41ac:	2c 93       	st	X, r18
    41ae:	fc 01       	movw	r30, r24
    41b0:	e0 5e       	subi	r30, 0xE0	; 224
    41b2:	f9 4f       	sbci	r31, 0xF9	; 249
    41b4:	4e e3       	ldi	r20, 0x3E	; 62
    41b6:	57 e6       	ldi	r21, 0x67	; 103
    41b8:	51 83       	std	Z+1, r21	; 0x01
    41ba:	40 83       	st	Z, r20
    41bc:	32 97       	sbiw	r30, 0x02	; 2
    41be:	46 e2       	ldi	r20, 0x26	; 38
    41c0:	56 e1       	ldi	r21, 0x16	; 22
    41c2:	51 83       	std	Z+1, r21	; 0x01
    41c4:	40 83       	st	Z, r20
    41c6:	32 97       	sbiw	r30, 0x02	; 2
    41c8:	43 ed       	ldi	r20, 0xD3	; 211
    41ca:	57 e0       	ldi	r21, 0x07	; 7
    41cc:	51 83       	std	Z+1, r21	; 0x01
    41ce:	40 83       	st	Z, r20
    41d0:	e8 59       	subi	r30, 0x98	; 152
    41d2:	f2 40       	sbci	r31, 0x02	; 2
    41d4:	30 e1       	ldi	r19, 0x10	; 16
    41d6:	df 01       	movw	r26, r30
    41d8:	1d 92       	st	X+, r1
    41da:	3a 95       	dec	r19
    41dc:	e9 f7       	brne	.-6      	; 0x41d8 <TMR_SR_SerialReader_init+0x4a>
    41de:	e4 5b       	subi	r30, 0xB4	; 180
    41e0:	f1 40       	sbci	r31, 0x01	; 1
    41e2:	40 e0       	ldi	r20, 0x00	; 0
    41e4:	52 ec       	ldi	r21, 0xC2	; 194
    41e6:	61 e0       	ldi	r22, 0x01	; 1
    41e8:	70 e0       	ldi	r23, 0x00	; 0
    41ea:	40 83       	st	Z, r20
    41ec:	51 83       	std	Z+1, r21	; 0x01
    41ee:	62 83       	std	Z+2, r22	; 0x02
    41f0:	73 83       	std	Z+3, r23	; 0x03
    41f2:	ee 54       	subi	r30, 0x4E	; 78
    41f4:	fe 4f       	sbci	r31, 0xFE	; 254
    41f6:	10 82       	st	Z, r1
    41f8:	71 97       	sbiw	r30, 0x11	; 17
    41fa:	3f ef       	ldi	r19, 0xFF	; 255
    41fc:	30 83       	st	Z, r19
    41fe:	70 96       	adiw	r30, 0x10	; 16
    4200:	35 e0       	ldi	r19, 0x05	; 5
    4202:	30 83       	st	Z, r19
    4204:	e5 5a       	subi	r30, 0xA5	; 165
    4206:	f1 40       	sbci	r31, 0x01	; 1
    4208:	48 e8       	ldi	r20, 0x88	; 136
    420a:	53 e1       	ldi	r21, 0x13	; 19
    420c:	60 e0       	ldi	r22, 0x00	; 0
    420e:	70 e0       	ldi	r23, 0x00	; 0
    4210:	40 83       	st	Z, r20
    4212:	51 83       	std	Z+1, r21	; 0x01
    4214:	62 83       	std	Z+2, r22	; 0x02
    4216:	73 83       	std	Z+3, r23	; 0x03
    4218:	34 96       	adiw	r30, 0x04	; 4
    421a:	48 ee       	ldi	r20, 0xE8	; 232
    421c:	53 e0       	ldi	r21, 0x03	; 3
    421e:	60 e0       	ldi	r22, 0x00	; 0
    4220:	70 e0       	ldi	r23, 0x00	; 0
    4222:	40 83       	st	Z, r20
    4224:	51 83       	std	Z+1, r21	; 0x01
    4226:	62 83       	std	Z+2, r22	; 0x02
    4228:	73 83       	std	Z+3, r23	; 0x03
    422a:	34 96       	adiw	r30, 0x04	; 4
    422c:	20 83       	st	Z, r18
    422e:	e8 52       	subi	r30, 0x28	; 40
    4230:	fe 4f       	sbci	r31, 0xFE	; 254
    4232:	11 82       	std	Z+1, r1	; 0x01
    4234:	10 82       	st	Z, r1
    4236:	ed 5f       	subi	r30, 0xFD	; 253
    4238:	fe 4f       	sbci	r31, 0xFE	; 254
    423a:	10 82       	st	Z, r1
    423c:	e7 50       	subi	r30, 0x07	; 7
    423e:	f1 40       	sbci	r31, 0x01	; 1
    4240:	10 82       	st	Z, r1
    4242:	11 82       	std	Z+1, r1	; 0x01
    4244:	12 82       	std	Z+2, r1	; 0x02
    4246:	13 82       	std	Z+3, r1	; 0x03
    4248:	e4 5c       	subi	r30, 0xC4	; 196
    424a:	fd 4f       	sbci	r31, 0xFD	; 253
    424c:	10 82       	st	Z, r1
    424e:	ec 51       	subi	r30, 0x1C	; 28
    4250:	f4 40       	sbci	r31, 0x04	; 4
    4252:	10 82       	st	Z, r1
    4254:	11 82       	std	Z+1, r1	; 0x01
    4256:	12 82       	std	Z+2, r1	; 0x02
    4258:	13 82       	std	Z+3, r1	; 0x03
    425a:	e3 5e       	subi	r30, 0xE3	; 227
    425c:	fb 4f       	sbci	r31, 0xFB	; 251
    425e:	20 83       	st	Z, r18
    4260:	32 96       	adiw	r30, 0x02	; 2
    4262:	10 82       	st	Z, r1
    4264:	31 96       	adiw	r30, 0x01	; 1
    4266:	10 82       	st	Z, r1
    4268:	31 96       	adiw	r30, 0x01	; 1
    426a:	10 82       	st	Z, r1
    426c:	36 97       	sbiw	r30, 0x06	; 6
    426e:	21 e0       	ldi	r18, 0x01	; 1
    4270:	20 83       	st	Z, r18
    4272:	f0 97       	sbiw	r30, 0x30	; 48
    4274:	11 82       	std	Z+1, r1	; 0x01
    4276:	10 82       	st	Z, r1
    4278:	32 96       	adiw	r30, 0x02	; 2
    427a:	11 82       	std	Z+1, r1	; 0x01
    427c:	10 82       	st	Z, r1
    427e:	32 96       	adiw	r30, 0x02	; 2
    4280:	20 83       	st	Z, r18
    4282:	31 96       	adiw	r30, 0x01	; 1
    4284:	10 82       	st	Z, r1
    4286:	31 96       	adiw	r30, 0x01	; 1
    4288:	10 82       	st	Z, r1
    428a:	9c 01       	movw	r18, r24
    428c:	20 53       	subi	r18, 0x30	; 48
    428e:	3a 4f       	sbci	r19, 0xFA	; 250
    4290:	31 96       	adiw	r30, 0x01	; 1
    4292:	31 83       	std	Z+1, r19	; 0x01
    4294:	20 83       	st	Z, r18
    4296:	32 96       	adiw	r30, 0x02	; 2
    4298:	48 e0       	ldi	r20, 0x08	; 8
    429a:	50 e0       	ldi	r21, 0x00	; 0
    429c:	51 83       	std	Z+1, r21	; 0x01
    429e:	40 83       	st	Z, r20
    42a0:	22 50       	subi	r18, 0x02	; 2
    42a2:	31 09       	sbc	r19, r1
    42a4:	f9 01       	movw	r30, r18
    42a6:	11 82       	std	Z+1, r1	; 0x01
    42a8:	10 82       	st	Z, r1
    42aa:	b2 96       	adiw	r30, 0x22	; 34
    42ac:	10 82       	st	Z, r1
    42ae:	31 96       	adiw	r30, 0x01	; 1
    42b0:	10 82       	st	Z, r1
    42b2:	e5 54       	subi	r30, 0x45	; 69
    42b4:	f2 40       	sbci	r31, 0x02	; 2
    42b6:	10 82       	st	Z, r1
    42b8:	11 82       	std	Z+1, r1	; 0x01
    42ba:	12 82       	std	Z+2, r1	; 0x02
    42bc:	13 82       	std	Z+3, r1	; 0x03
    42be:	e8 5d       	subi	r30, 0xD8	; 216
    42c0:	f1 40       	sbci	r31, 0x01	; 1
    42c2:	11 82       	std	Z+1, r1	; 0x01
    42c4:	10 82       	st	Z, r1
    42c6:	32 96       	adiw	r30, 0x02	; 2
    42c8:	11 82       	std	Z+1, r1	; 0x01
    42ca:	10 82       	st	Z, r1
    42cc:	e4 5e       	subi	r30, 0xE4	; 228
    42ce:	fb 4f       	sbci	r31, 0xFB	; 251
    42d0:	10 82       	st	Z, r1
    42d2:	38 96       	adiw	r30, 0x08	; 8
    42d4:	10 82       	st	Z, r1
    42d6:	60 e2       	ldi	r22, 0x20	; 32
    42d8:	e0 e2       	ldi	r30, 0x20	; 32
    42da:	f1 e0       	ldi	r31, 0x01	; 1
    42dc:	de 01       	movw	r26, r28
    42de:	11 96       	adiw	r26, 0x01	; 1
    42e0:	01 90       	ld	r0, Z+
    42e2:	0d 92       	st	X+, r0
    42e4:	6a 95       	dec	r22
    42e6:	e1 f7       	brne	.-8      	; 0x42e0 <TMR_SR_SerialReader_init+0x152>
    42e8:	d9 01       	movw	r26, r18
    42ea:	4d 93       	st	X+, r20
    42ec:	5c 93       	st	X, r21
    42ee:	40 e0       	ldi	r20, 0x00	; 0
    42f0:	50 e0       	ldi	r21, 0x00	; 0
    42f2:	1d c0       	rjmp	.+58     	; 0x432e <TMR_SR_SerialReader_init+0x1a0>
    42f4:	fc 01       	movw	r30, r24
    42f6:	e6 53       	subi	r30, 0x36	; 54
    42f8:	fa 4f       	sbci	r31, 0xFA	; 250
    42fa:	01 90       	ld	r0, Z+
    42fc:	f0 81       	ld	r31, Z
    42fe:	e0 2d       	mov	r30, r0
    4300:	9a 01       	movw	r18, r20
    4302:	22 0f       	add	r18, r18
    4304:	33 1f       	adc	r19, r19
    4306:	22 0f       	add	r18, r18
    4308:	33 1f       	adc	r19, r19
    430a:	e2 0f       	add	r30, r18
    430c:	f3 1f       	adc	r31, r19
    430e:	a1 e0       	ldi	r26, 0x01	; 1
    4310:	b0 e0       	ldi	r27, 0x00	; 0
    4312:	ac 0f       	add	r26, r28
    4314:	bd 1f       	adc	r27, r29
    4316:	a2 0f       	add	r26, r18
    4318:	b3 1f       	adc	r27, r19
    431a:	0d 91       	ld	r16, X+
    431c:	1d 91       	ld	r17, X+
    431e:	2d 91       	ld	r18, X+
    4320:	3c 91       	ld	r19, X
    4322:	00 83       	st	Z, r16
    4324:	11 83       	std	Z+1, r17	; 0x01
    4326:	22 83       	std	Z+2, r18	; 0x02
    4328:	33 83       	std	Z+3, r19	; 0x03
    432a:	4f 5f       	subi	r20, 0xFF	; 255
    432c:	5f 4f       	sbci	r21, 0xFF	; 255
    432e:	48 30       	cpi	r20, 0x08	; 8
    4330:	51 05       	cpc	r21, r1
    4332:	04 f3       	brlt	.-64     	; 0x42f4 <TMR_SR_SerialReader_init+0x166>
    4334:	0e 94 99 6c 	call	0xd932	; 0xd932 <TMR_reader_init_internal>
    4338:	a0 96       	adiw	r28, 0x20	; 32
    433a:	0f b6       	in	r0, 0x3f	; 63
    433c:	f8 94       	cli
    433e:	de bf       	out	0x3e, r29	; 62
    4340:	0f be       	out	0x3f, r0	; 63
    4342:	cd bf       	out	0x3d, r28	; 61
    4344:	df 91       	pop	r29
    4346:	cf 91       	pop	r28
    4348:	1f 91       	pop	r17
    434a:	0f 91       	pop	r16
    434c:	08 95       	ret

0000434e <getReadExtParams>:
    434e:	9f 92       	push	r9
    4350:	af 92       	push	r10
    4352:	bf 92       	push	r11
    4354:	cf 92       	push	r12
    4356:	df 92       	push	r13
    4358:	ef 92       	push	r14
    435a:	ff 92       	push	r15
    435c:	0f 93       	push	r16
    435e:	1f 93       	push	r17
    4360:	cf 93       	push	r28
    4362:	df 93       	push	r29
    4364:	cd b7       	in	r28, 0x3d	; 61
    4366:	de b7       	in	r29, 0x3e	; 62
    4368:	28 97       	sbiw	r28, 0x08	; 8
    436a:	0f b6       	in	r0, 0x3f	; 63
    436c:	f8 94       	cli
    436e:	de bf       	out	0x3e, r29	; 62
    4370:	0f be       	out	0x3f, r0	; 63
    4372:	cd bf       	out	0x3d, r28	; 61
    4374:	fc 01       	movw	r30, r24
    4376:	8b 01       	movw	r16, r22
    4378:	90 80       	ld	r9, Z
    437a:	a1 80       	ldd	r10, Z+1	; 0x01
    437c:	b2 80       	ldd	r11, Z+2	; 0x02
    437e:	c3 80       	ldd	r12, Z+3	; 0x03
    4380:	d4 80       	ldd	r13, Z+4	; 0x04
    4382:	e5 80       	ldd	r14, Z+5	; 0x05
    4384:	f6 80       	ldd	r15, Z+6	; 0x06
    4386:	b7 81       	ldd	r27, Z+7	; 0x07
    4388:	29 2d       	mov	r18, r9
    438a:	3a 2d       	mov	r19, r10
    438c:	4b 2d       	mov	r20, r11
    438e:	5c 2d       	mov	r21, r12
    4390:	6d 2d       	mov	r22, r13
    4392:	7e 2d       	mov	r23, r14
    4394:	8f 2d       	mov	r24, r15
    4396:	9b 2f       	mov	r25, r27
    4398:	a0 e2       	ldi	r26, 0x20	; 32
    439a:	0e 94 2f 75 	call	0xea5e	; 0xea5e <__cmpdi2_s8>
    439e:	81 f0       	breq	.+32     	; 0x43c0 <getReadExtParams+0x72>
    43a0:	20 38       	cpi	r18, 0x80	; 128
    43a2:	31 05       	cpc	r19, r1
    43a4:	41 05       	cpc	r20, r1
    43a6:	51 05       	cpc	r21, r1
    43a8:	61 05       	cpc	r22, r1
    43aa:	71 05       	cpc	r23, r1
    43ac:	81 05       	cpc	r24, r1
    43ae:	91 05       	cpc	r25, r1
    43b0:	09 f4       	brne	.+2      	; 0x43b4 <getReadExtParams+0x66>
    43b2:	f1 c0       	rjmp	.+482    	; 0x4596 <getReadExtParams+0x248>
    43b4:	a0 e1       	ldi	r26, 0x10	; 16
    43b6:	0e 94 2f 75 	call	0xea5e	; 0xea5e <__cmpdi2_s8>
    43ba:	09 f0       	breq	.+2      	; 0x43be <getReadExtParams+0x70>
    43bc:	0d c1       	rjmp	.+538    	; 0x45d8 <getReadExtParams+0x28a>
    43be:	eb c0       	rjmp	.+470    	; 0x4596 <getReadExtParams+0x248>
    43c0:	88 e0       	ldi	r24, 0x08	; 8
    43c2:	7b 96       	adiw	r30, 0x1b	; 27
    43c4:	de 01       	movw	r26, r28
    43c6:	11 96       	adiw	r26, 0x01	; 1
    43c8:	01 90       	ld	r0, Z+
    43ca:	0d 92       	st	X+, r0
    43cc:	8a 95       	dec	r24
    43ce:	e1 f7       	brne	.-8      	; 0x43c8 <getReadExtParams+0x7a>
    43d0:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    43d4:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    43d8:	01 96       	adiw	r24, 0x01	; 1
    43da:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    43de:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    43e2:	f8 01       	movw	r30, r16
    43e4:	20 81       	ld	r18, Z
    43e6:	31 81       	ldd	r19, Z+1	; 0x01
    43e8:	84 81       	ldd	r24, Z+4	; 0x04
    43ea:	95 81       	ldd	r25, Z+5	; 0x05
    43ec:	ac 01       	movw	r20, r24
    43ee:	4f 5f       	subi	r20, 0xFF	; 255
    43f0:	5f 4f       	sbci	r21, 0xFF	; 255
    43f2:	55 83       	std	Z+5, r21	; 0x05
    43f4:	44 83       	std	Z+4, r20	; 0x04
    43f6:	d9 01       	movw	r26, r18
    43f8:	a8 0f       	add	r26, r24
    43fa:	b9 1f       	adc	r27, r25
    43fc:	fd 80       	ldd	r15, Y+5	; 0x05
    43fe:	fc 92       	st	X, r15
    4400:	29 81       	ldd	r18, Y+1	; 0x01
    4402:	3a 81       	ldd	r19, Y+2	; 0x02
    4404:	4b 81       	ldd	r20, Y+3	; 0x03
    4406:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    440a:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    440e:	03 96       	adiw	r24, 0x03	; 3
    4410:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    4414:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    4418:	60 81       	ld	r22, Z
    441a:	71 81       	ldd	r23, Z+1	; 0x01
    441c:	84 81       	ldd	r24, Z+4	; 0x04
    441e:	95 81       	ldd	r25, Z+5	; 0x05
    4420:	dc 01       	movw	r26, r24
    4422:	11 96       	adiw	r26, 0x01	; 1
    4424:	b5 83       	std	Z+5, r27	; 0x05
    4426:	a4 83       	std	Z+4, r26	; 0x04
    4428:	db 01       	movw	r26, r22
    442a:	a8 0f       	add	r26, r24
    442c:	b9 1f       	adc	r27, r25
    442e:	4c 93       	st	X, r20
    4430:	40 81       	ld	r20, Z
    4432:	51 81       	ldd	r21, Z+1	; 0x01
    4434:	84 81       	ldd	r24, Z+4	; 0x04
    4436:	95 81       	ldd	r25, Z+5	; 0x05
    4438:	bc 01       	movw	r22, r24
    443a:	6f 5f       	subi	r22, 0xFF	; 255
    443c:	7f 4f       	sbci	r23, 0xFF	; 255
    443e:	75 83       	std	Z+5, r23	; 0x05
    4440:	64 83       	std	Z+4, r22	; 0x04
    4442:	da 01       	movw	r26, r20
    4444:	a8 0f       	add	r26, r24
    4446:	b9 1f       	adc	r27, r25
    4448:	3c 93       	st	X, r19
    444a:	40 81       	ld	r20, Z
    444c:	51 81       	ldd	r21, Z+1	; 0x01
    444e:	84 81       	ldd	r24, Z+4	; 0x04
    4450:	95 81       	ldd	r25, Z+5	; 0x05
    4452:	bc 01       	movw	r22, r24
    4454:	6f 5f       	subi	r22, 0xFF	; 255
    4456:	7f 4f       	sbci	r23, 0xFF	; 255
    4458:	75 83       	std	Z+5, r23	; 0x05
    445a:	64 83       	std	Z+4, r22	; 0x04
    445c:	da 01       	movw	r26, r20
    445e:	a8 0f       	add	r26, r24
    4460:	b9 1f       	adc	r27, r25
    4462:	2c 93       	st	X, r18
    4464:	8f 2d       	mov	r24, r15
    4466:	90 e0       	ldi	r25, 0x00	; 0
    4468:	fc 01       	movw	r30, r24
    446a:	31 97       	sbiw	r30, 0x01	; 1
    446c:	eb 30       	cpi	r30, 0x0B	; 11
    446e:	f1 05       	cpc	r31, r1
    4470:	08 f0       	brcs	.+2      	; 0x4474 <getReadExtParams+0x126>
    4472:	8c c0       	rjmp	.+280    	; 0x458c <getReadExtParams+0x23e>
    4474:	ea 50       	subi	r30, 0x0A	; 10
    4476:	fe 4f       	sbci	r31, 0xFE	; 254
    4478:	0c 94 d3 74 	jmp	0xe9a6	; 0xe9a6 <__tablejump2__>
    447c:	60 e0       	ldi	r22, 0x00	; 0
    447e:	70 e0       	ldi	r23, 0x00	; 0
    4480:	cb 01       	movw	r24, r22
    4482:	ae c0       	rjmp	.+348    	; 0x45e0 <getReadExtParams+0x292>
    4484:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    4488:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    448c:	01 96       	adiw	r24, 0x01	; 1
    448e:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    4492:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    4496:	d8 01       	movw	r26, r16
    4498:	2d 91       	ld	r18, X+
    449a:	3c 91       	ld	r19, X
    449c:	11 97       	sbiw	r26, 0x01	; 1
    449e:	14 96       	adiw	r26, 0x04	; 4
    44a0:	8d 91       	ld	r24, X+
    44a2:	9c 91       	ld	r25, X
    44a4:	15 97       	sbiw	r26, 0x05	; 5
    44a6:	ac 01       	movw	r20, r24
    44a8:	4f 5f       	subi	r20, 0xFF	; 255
    44aa:	5f 4f       	sbci	r21, 0xFF	; 255
    44ac:	15 96       	adiw	r26, 0x05	; 5
    44ae:	5c 93       	st	X, r21
    44b0:	4e 93       	st	-X, r20
    44b2:	14 97       	sbiw	r26, 0x04	; 4
    44b4:	f9 01       	movw	r30, r18
    44b6:	e8 0f       	add	r30, r24
    44b8:	f9 1f       	adc	r31, r25
    44ba:	2e 81       	ldd	r18, Y+6	; 0x06
    44bc:	20 83       	st	Z, r18
    44be:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    44c2:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    44c6:	01 96       	adiw	r24, 0x01	; 1
    44c8:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    44cc:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    44d0:	2d 91       	ld	r18, X+
    44d2:	3c 91       	ld	r19, X
    44d4:	11 97       	sbiw	r26, 0x01	; 1
    44d6:	14 96       	adiw	r26, 0x04	; 4
    44d8:	8d 91       	ld	r24, X+
    44da:	9c 91       	ld	r25, X
    44dc:	15 97       	sbiw	r26, 0x05	; 5
    44de:	ac 01       	movw	r20, r24
    44e0:	4f 5f       	subi	r20, 0xFF	; 255
    44e2:	5f 4f       	sbci	r21, 0xFF	; 255
    44e4:	15 96       	adiw	r26, 0x05	; 5
    44e6:	5c 93       	st	X, r21
    44e8:	4e 93       	st	-X, r20
    44ea:	14 97       	sbiw	r26, 0x04	; 4
    44ec:	f9 01       	movw	r30, r18
    44ee:	e8 0f       	add	r30, r24
    44f0:	f9 1f       	adc	r31, r25
    44f2:	2f 81       	ldd	r18, Y+7	; 0x07
    44f4:	20 83       	st	Z, r18
    44f6:	60 e0       	ldi	r22, 0x00	; 0
    44f8:	70 e0       	ldi	r23, 0x00	; 0
    44fa:	cb 01       	movw	r24, r22
    44fc:	71 c0       	rjmp	.+226    	; 0x45e0 <getReadExtParams+0x292>
    44fe:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    4502:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    4506:	01 96       	adiw	r24, 0x01	; 1
    4508:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    450c:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    4510:	f8 01       	movw	r30, r16
    4512:	20 81       	ld	r18, Z
    4514:	31 81       	ldd	r19, Z+1	; 0x01
    4516:	84 81       	ldd	r24, Z+4	; 0x04
    4518:	95 81       	ldd	r25, Z+5	; 0x05
    451a:	ac 01       	movw	r20, r24
    451c:	4f 5f       	subi	r20, 0xFF	; 255
    451e:	5f 4f       	sbci	r21, 0xFF	; 255
    4520:	55 83       	std	Z+5, r21	; 0x05
    4522:	44 83       	std	Z+4, r20	; 0x04
    4524:	f9 01       	movw	r30, r18
    4526:	e8 0f       	add	r30, r24
    4528:	f9 1f       	adc	r31, r25
    452a:	2e 81       	ldd	r18, Y+6	; 0x06
    452c:	20 83       	st	Z, r18
    452e:	60 e0       	ldi	r22, 0x00	; 0
    4530:	70 e0       	ldi	r23, 0x00	; 0
    4532:	cb 01       	movw	r24, r22
    4534:	55 c0       	rjmp	.+170    	; 0x45e0 <getReadExtParams+0x292>
    4536:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    453a:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    453e:	01 96       	adiw	r24, 0x01	; 1
    4540:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    4544:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    4548:	d8 01       	movw	r26, r16
    454a:	2d 91       	ld	r18, X+
    454c:	3c 91       	ld	r19, X
    454e:	11 97       	sbiw	r26, 0x01	; 1
    4550:	14 96       	adiw	r26, 0x04	; 4
    4552:	8d 91       	ld	r24, X+
    4554:	9c 91       	ld	r25, X
    4556:	15 97       	sbiw	r26, 0x05	; 5
    4558:	ac 01       	movw	r20, r24
    455a:	4f 5f       	subi	r20, 0xFF	; 255
    455c:	5f 4f       	sbci	r21, 0xFF	; 255
    455e:	15 96       	adiw	r26, 0x05	; 5
    4560:	5c 93       	st	X, r21
    4562:	4e 93       	st	-X, r20
    4564:	14 97       	sbiw	r26, 0x04	; 4
    4566:	f9 01       	movw	r30, r18
    4568:	e8 0f       	add	r30, r24
    456a:	f9 1f       	adc	r31, r25
    456c:	28 85       	ldd	r18, Y+8	; 0x08
    456e:	20 83       	st	Z, r18
    4570:	60 e0       	ldi	r22, 0x00	; 0
    4572:	70 e0       	ldi	r23, 0x00	; 0
    4574:	cb 01       	movw	r24, r22
    4576:	34 c0       	rjmp	.+104    	; 0x45e0 <getReadExtParams+0x292>
    4578:	f8 01       	movw	r30, r16
    457a:	84 81       	ldd	r24, Z+4	; 0x04
    457c:	95 81       	ldd	r25, Z+5	; 0x05
    457e:	03 97       	sbiw	r24, 0x03	; 3
    4580:	95 83       	std	Z+5, r25	; 0x05
    4582:	84 83       	std	Z+4, r24	; 0x04
    4584:	60 e0       	ldi	r22, 0x00	; 0
    4586:	70 e0       	ldi	r23, 0x00	; 0
    4588:	cb 01       	movw	r24, r22
    458a:	2a c0       	rjmp	.+84     	; 0x45e0 <getReadExtParams+0x292>
    458c:	61 e0       	ldi	r22, 0x01	; 1
    458e:	70 e0       	ldi	r23, 0x00	; 0
    4590:	80 e0       	ldi	r24, 0x00	; 0
    4592:	93 e0       	ldi	r25, 0x03	; 3
    4594:	25 c0       	rjmp	.+74     	; 0x45e0 <getReadExtParams+0x292>
    4596:	23 8d       	ldd	r18, Z+27	; 0x1b
    4598:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    459c:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    45a0:	01 96       	adiw	r24, 0x01	; 1
    45a2:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    45a6:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    45aa:	d8 01       	movw	r26, r16
    45ac:	4d 91       	ld	r20, X+
    45ae:	5c 91       	ld	r21, X
    45b0:	11 97       	sbiw	r26, 0x01	; 1
    45b2:	14 96       	adiw	r26, 0x04	; 4
    45b4:	8d 91       	ld	r24, X+
    45b6:	9c 91       	ld	r25, X
    45b8:	15 97       	sbiw	r26, 0x05	; 5
    45ba:	bc 01       	movw	r22, r24
    45bc:	6f 5f       	subi	r22, 0xFF	; 255
    45be:	7f 4f       	sbci	r23, 0xFF	; 255
    45c0:	15 96       	adiw	r26, 0x05	; 5
    45c2:	7c 93       	st	X, r23
    45c4:	6e 93       	st	-X, r22
    45c6:	14 97       	sbiw	r26, 0x04	; 4
    45c8:	fa 01       	movw	r30, r20
    45ca:	e8 0f       	add	r30, r24
    45cc:	f9 1f       	adc	r31, r25
    45ce:	20 83       	st	Z, r18
    45d0:	60 e0       	ldi	r22, 0x00	; 0
    45d2:	70 e0       	ldi	r23, 0x00	; 0
    45d4:	cb 01       	movw	r24, r22
    45d6:	04 c0       	rjmp	.+8      	; 0x45e0 <getReadExtParams+0x292>
    45d8:	61 e0       	ldi	r22, 0x01	; 1
    45da:	70 e0       	ldi	r23, 0x00	; 0
    45dc:	80 e0       	ldi	r24, 0x00	; 0
    45de:	93 e0       	ldi	r25, 0x03	; 3
    45e0:	28 96       	adiw	r28, 0x08	; 8
    45e2:	0f b6       	in	r0, 0x3f	; 63
    45e4:	f8 94       	cli
    45e6:	de bf       	out	0x3e, r29	; 62
    45e8:	0f be       	out	0x3f, r0	; 63
    45ea:	cd bf       	out	0x3d, r28	; 61
    45ec:	df 91       	pop	r29
    45ee:	cf 91       	pop	r28
    45f0:	1f 91       	pop	r17
    45f2:	0f 91       	pop	r16
    45f4:	ff 90       	pop	r15
    45f6:	ef 90       	pop	r14
    45f8:	df 90       	pop	r13
    45fa:	cf 90       	pop	r12
    45fc:	bf 90       	pop	r11
    45fe:	af 90       	pop	r10
    4600:	9f 90       	pop	r9
    4602:	08 95       	ret

00004604 <getWriteExtParams>:
    4604:	9f 92       	push	r9
    4606:	af 92       	push	r10
    4608:	bf 92       	push	r11
    460a:	cf 92       	push	r12
    460c:	df 92       	push	r13
    460e:	ef 92       	push	r14
    4610:	ff 92       	push	r15
    4612:	0f 93       	push	r16
    4614:	1f 93       	push	r17
    4616:	cf 93       	push	r28
    4618:	df 93       	push	r29
    461a:	cd b7       	in	r28, 0x3d	; 61
    461c:	de b7       	in	r29, 0x3e	; 62
    461e:	2f 97       	sbiw	r28, 0x0f	; 15
    4620:	0f b6       	in	r0, 0x3f	; 63
    4622:	f8 94       	cli
    4624:	de bf       	out	0x3e, r29	; 62
    4626:	0f be       	out	0x3f, r0	; 63
    4628:	cd bf       	out	0x3d, r28	; 61
    462a:	fc 01       	movw	r30, r24
    462c:	8b 01       	movw	r16, r22
    462e:	90 80       	ld	r9, Z
    4630:	a1 80       	ldd	r10, Z+1	; 0x01
    4632:	b2 80       	ldd	r11, Z+2	; 0x02
    4634:	c3 80       	ldd	r12, Z+3	; 0x03
    4636:	d4 80       	ldd	r13, Z+4	; 0x04
    4638:	e5 80       	ldd	r14, Z+5	; 0x05
    463a:	f6 80       	ldd	r15, Z+6	; 0x06
    463c:	b7 81       	ldd	r27, Z+7	; 0x07
    463e:	29 2d       	mov	r18, r9
    4640:	3a 2d       	mov	r19, r10
    4642:	4b 2d       	mov	r20, r11
    4644:	5c 2d       	mov	r21, r12
    4646:	6d 2d       	mov	r22, r13
    4648:	7e 2d       	mov	r23, r14
    464a:	8f 2d       	mov	r24, r15
    464c:	9b 2f       	mov	r25, r27
    464e:	a0 e2       	ldi	r26, 0x20	; 32
    4650:	0e 94 2f 75 	call	0xea5e	; 0xea5e <__cmpdi2_s8>
    4654:	59 f0       	breq	.+22     	; 0x466c <getWriteExtParams+0x68>
    4656:	20 38       	cpi	r18, 0x80	; 128
    4658:	31 05       	cpc	r19, r1
    465a:	41 05       	cpc	r20, r1
    465c:	51 05       	cpc	r21, r1
    465e:	61 05       	cpc	r22, r1
    4660:	71 05       	cpc	r23, r1
    4662:	81 05       	cpc	r24, r1
    4664:	91 05       	cpc	r25, r1
    4666:	09 f4       	brne	.+2      	; 0x466a <getWriteExtParams+0x66>
    4668:	b1 c1       	rjmp	.+866    	; 0x49cc <getWriteExtParams+0x3c8>
    466a:	d1 c1       	rjmp	.+930    	; 0x4a0e <getWriteExtParams+0x40a>
    466c:	8f e0       	ldi	r24, 0x0F	; 15
    466e:	7b 96       	adiw	r30, 0x1b	; 27
    4670:	de 01       	movw	r26, r28
    4672:	11 96       	adiw	r26, 0x01	; 1
    4674:	01 90       	ld	r0, Z+
    4676:	0d 92       	st	X+, r0
    4678:	8a 95       	dec	r24
    467a:	e1 f7       	brne	.-8      	; 0x4674 <getWriteExtParams+0x70>
    467c:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    4680:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    4684:	01 96       	adiw	r24, 0x01	; 1
    4686:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    468a:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    468e:	f8 01       	movw	r30, r16
    4690:	20 81       	ld	r18, Z
    4692:	31 81       	ldd	r19, Z+1	; 0x01
    4694:	84 81       	ldd	r24, Z+4	; 0x04
    4696:	95 81       	ldd	r25, Z+5	; 0x05
    4698:	ac 01       	movw	r20, r24
    469a:	4f 5f       	subi	r20, 0xFF	; 255
    469c:	5f 4f       	sbci	r21, 0xFF	; 255
    469e:	55 83       	std	Z+5, r21	; 0x05
    46a0:	44 83       	std	Z+4, r20	; 0x04
    46a2:	f9 01       	movw	r30, r18
    46a4:	e8 0f       	add	r30, r24
    46a6:	f9 1f       	adc	r31, r25
    46a8:	29 85       	ldd	r18, Y+9	; 0x09
    46aa:	20 83       	st	Z, r18
    46ac:	39 81       	ldd	r19, Y+1	; 0x01
    46ae:	4a 81       	ldd	r20, Y+2	; 0x02
    46b0:	5b 81       	ldd	r21, Y+3	; 0x03
    46b2:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    46b6:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    46ba:	03 96       	adiw	r24, 0x03	; 3
    46bc:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    46c0:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    46c4:	d8 01       	movw	r26, r16
    46c6:	6d 91       	ld	r22, X+
    46c8:	7c 91       	ld	r23, X
    46ca:	11 97       	sbiw	r26, 0x01	; 1
    46cc:	14 96       	adiw	r26, 0x04	; 4
    46ce:	8d 91       	ld	r24, X+
    46d0:	9c 91       	ld	r25, X
    46d2:	15 97       	sbiw	r26, 0x05	; 5
    46d4:	fc 01       	movw	r30, r24
    46d6:	31 96       	adiw	r30, 0x01	; 1
    46d8:	15 96       	adiw	r26, 0x05	; 5
    46da:	fc 93       	st	X, r31
    46dc:	ee 93       	st	-X, r30
    46de:	14 97       	sbiw	r26, 0x04	; 4
    46e0:	fb 01       	movw	r30, r22
    46e2:	e8 0f       	add	r30, r24
    46e4:	f9 1f       	adc	r31, r25
    46e6:	50 83       	st	Z, r21
    46e8:	6d 91       	ld	r22, X+
    46ea:	7c 91       	ld	r23, X
    46ec:	11 97       	sbiw	r26, 0x01	; 1
    46ee:	14 96       	adiw	r26, 0x04	; 4
    46f0:	8d 91       	ld	r24, X+
    46f2:	9c 91       	ld	r25, X
    46f4:	15 97       	sbiw	r26, 0x05	; 5
    46f6:	fc 01       	movw	r30, r24
    46f8:	31 96       	adiw	r30, 0x01	; 1
    46fa:	15 96       	adiw	r26, 0x05	; 5
    46fc:	fc 93       	st	X, r31
    46fe:	ee 93       	st	-X, r30
    4700:	14 97       	sbiw	r26, 0x04	; 4
    4702:	fb 01       	movw	r30, r22
    4704:	e8 0f       	add	r30, r24
    4706:	f9 1f       	adc	r31, r25
    4708:	40 83       	st	Z, r20
    470a:	4d 91       	ld	r20, X+
    470c:	5c 91       	ld	r21, X
    470e:	11 97       	sbiw	r26, 0x01	; 1
    4710:	14 96       	adiw	r26, 0x04	; 4
    4712:	8d 91       	ld	r24, X+
    4714:	9c 91       	ld	r25, X
    4716:	15 97       	sbiw	r26, 0x05	; 5
    4718:	bc 01       	movw	r22, r24
    471a:	6f 5f       	subi	r22, 0xFF	; 255
    471c:	7f 4f       	sbci	r23, 0xFF	; 255
    471e:	15 96       	adiw	r26, 0x05	; 5
    4720:	7c 93       	st	X, r23
    4722:	6e 93       	st	-X, r22
    4724:	14 97       	sbiw	r26, 0x04	; 4
    4726:	fa 01       	movw	r30, r20
    4728:	e8 0f       	add	r30, r24
    472a:	f9 1f       	adc	r31, r25
    472c:	30 83       	st	Z, r19
    472e:	82 2f       	mov	r24, r18
    4730:	90 e0       	ldi	r25, 0x00	; 0
    4732:	fc 01       	movw	r30, r24
    4734:	31 97       	sbiw	r30, 0x01	; 1
    4736:	ea 30       	cpi	r30, 0x0A	; 10
    4738:	f1 05       	cpc	r31, r1
    473a:	08 f0       	brcs	.+2      	; 0x473e <getWriteExtParams+0x13a>
    473c:	3e c1       	rjmp	.+636    	; 0x49ba <getWriteExtParams+0x3b6>
    473e:	ef 5f       	subi	r30, 0xFF	; 255
    4740:	fd 4f       	sbci	r31, 0xFD	; 253
    4742:	0c 94 d3 74 	jmp	0xe9a6	; 0xe9a6 <__tablejump2__>
    4746:	60 e0       	ldi	r22, 0x00	; 0
    4748:	70 e0       	ldi	r23, 0x00	; 0
    474a:	cb 01       	movw	r24, r22
    474c:	64 c1       	rjmp	.+712    	; 0x4a16 <getWriteExtParams+0x412>
    474e:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    4752:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    4756:	01 96       	adiw	r24, 0x01	; 1
    4758:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    475c:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    4760:	f8 01       	movw	r30, r16
    4762:	40 81       	ld	r20, Z
    4764:	51 81       	ldd	r21, Z+1	; 0x01
    4766:	84 81       	ldd	r24, Z+4	; 0x04
    4768:	95 81       	ldd	r25, Z+5	; 0x05
    476a:	bc 01       	movw	r22, r24
    476c:	6f 5f       	subi	r22, 0xFF	; 255
    476e:	7f 4f       	sbci	r23, 0xFF	; 255
    4770:	75 83       	std	Z+5, r23	; 0x05
    4772:	64 83       	std	Z+4, r22	; 0x04
    4774:	fa 01       	movw	r30, r20
    4776:	e8 0f       	add	r30, r24
    4778:	f9 1f       	adc	r31, r25
    477a:	3a 85       	ldd	r19, Y+10	; 0x0a
    477c:	30 83       	st	Z, r19
    477e:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    4782:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    4786:	01 96       	adiw	r24, 0x01	; 1
    4788:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    478c:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    4790:	d8 01       	movw	r26, r16
    4792:	4d 91       	ld	r20, X+
    4794:	5c 91       	ld	r21, X
    4796:	11 97       	sbiw	r26, 0x01	; 1
    4798:	14 96       	adiw	r26, 0x04	; 4
    479a:	8d 91       	ld	r24, X+
    479c:	9c 91       	ld	r25, X
    479e:	15 97       	sbiw	r26, 0x05	; 5
    47a0:	bc 01       	movw	r22, r24
    47a2:	6f 5f       	subi	r22, 0xFF	; 255
    47a4:	7f 4f       	sbci	r23, 0xFF	; 255
    47a6:	15 96       	adiw	r26, 0x05	; 5
    47a8:	7c 93       	st	X, r23
    47aa:	6e 93       	st	-X, r22
    47ac:	14 97       	sbiw	r26, 0x04	; 4
    47ae:	fa 01       	movw	r30, r20
    47b0:	e8 0f       	add	r30, r24
    47b2:	f9 1f       	adc	r31, r25
    47b4:	3b 85       	ldd	r19, Y+11	; 0x0b
    47b6:	30 83       	st	Z, r19
    47b8:	23 30       	cpi	r18, 0x03	; 3
    47ba:	09 f0       	breq	.+2      	; 0x47be <getWriteExtParams+0x1ba>
    47bc:	03 c1       	rjmp	.+518    	; 0x49c4 <getWriteExtParams+0x3c0>
    47be:	2d 81       	ldd	r18, Y+5	; 0x05
    47c0:	3e 81       	ldd	r19, Y+6	; 0x06
    47c2:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    47c6:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    47ca:	02 96       	adiw	r24, 0x02	; 2
    47cc:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    47d0:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    47d4:	4d 91       	ld	r20, X+
    47d6:	5c 91       	ld	r21, X
    47d8:	11 97       	sbiw	r26, 0x01	; 1
    47da:	14 96       	adiw	r26, 0x04	; 4
    47dc:	8d 91       	ld	r24, X+
    47de:	9c 91       	ld	r25, X
    47e0:	15 97       	sbiw	r26, 0x05	; 5
    47e2:	bc 01       	movw	r22, r24
    47e4:	6f 5f       	subi	r22, 0xFF	; 255
    47e6:	7f 4f       	sbci	r23, 0xFF	; 255
    47e8:	15 96       	adiw	r26, 0x05	; 5
    47ea:	7c 93       	st	X, r23
    47ec:	6e 93       	st	-X, r22
    47ee:	14 97       	sbiw	r26, 0x04	; 4
    47f0:	fa 01       	movw	r30, r20
    47f2:	e8 0f       	add	r30, r24
    47f4:	f9 1f       	adc	r31, r25
    47f6:	30 83       	st	Z, r19
    47f8:	4d 91       	ld	r20, X+
    47fa:	5c 91       	ld	r21, X
    47fc:	11 97       	sbiw	r26, 0x01	; 1
    47fe:	14 96       	adiw	r26, 0x04	; 4
    4800:	8d 91       	ld	r24, X+
    4802:	9c 91       	ld	r25, X
    4804:	15 97       	sbiw	r26, 0x05	; 5
    4806:	bc 01       	movw	r22, r24
    4808:	6f 5f       	subi	r22, 0xFF	; 255
    480a:	7f 4f       	sbci	r23, 0xFF	; 255
    480c:	15 96       	adiw	r26, 0x05	; 5
    480e:	7c 93       	st	X, r23
    4810:	6e 93       	st	-X, r22
    4812:	14 97       	sbiw	r26, 0x04	; 4
    4814:	fa 01       	movw	r30, r20
    4816:	e8 0f       	add	r30, r24
    4818:	f9 1f       	adc	r31, r25
    481a:	20 83       	st	Z, r18
    481c:	2f 81       	ldd	r18, Y+7	; 0x07
    481e:	38 85       	ldd	r19, Y+8	; 0x08
    4820:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    4824:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    4828:	02 96       	adiw	r24, 0x02	; 2
    482a:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    482e:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    4832:	4d 91       	ld	r20, X+
    4834:	5c 91       	ld	r21, X
    4836:	11 97       	sbiw	r26, 0x01	; 1
    4838:	14 96       	adiw	r26, 0x04	; 4
    483a:	8d 91       	ld	r24, X+
    483c:	9c 91       	ld	r25, X
    483e:	15 97       	sbiw	r26, 0x05	; 5
    4840:	bc 01       	movw	r22, r24
    4842:	6f 5f       	subi	r22, 0xFF	; 255
    4844:	7f 4f       	sbci	r23, 0xFF	; 255
    4846:	15 96       	adiw	r26, 0x05	; 5
    4848:	7c 93       	st	X, r23
    484a:	6e 93       	st	-X, r22
    484c:	14 97       	sbiw	r26, 0x04	; 4
    484e:	fa 01       	movw	r30, r20
    4850:	e8 0f       	add	r30, r24
    4852:	f9 1f       	adc	r31, r25
    4854:	30 83       	st	Z, r19
    4856:	4d 91       	ld	r20, X+
    4858:	5c 91       	ld	r21, X
    485a:	11 97       	sbiw	r26, 0x01	; 1
    485c:	14 96       	adiw	r26, 0x04	; 4
    485e:	8d 91       	ld	r24, X+
    4860:	9c 91       	ld	r25, X
    4862:	15 97       	sbiw	r26, 0x05	; 5
    4864:	bc 01       	movw	r22, r24
    4866:	6f 5f       	subi	r22, 0xFF	; 255
    4868:	7f 4f       	sbci	r23, 0xFF	; 255
    486a:	15 96       	adiw	r26, 0x05	; 5
    486c:	7c 93       	st	X, r23
    486e:	6e 93       	st	-X, r22
    4870:	14 97       	sbiw	r26, 0x04	; 4
    4872:	fa 01       	movw	r30, r20
    4874:	e8 0f       	add	r30, r24
    4876:	f9 1f       	adc	r31, r25
    4878:	20 83       	st	Z, r18
    487a:	60 e0       	ldi	r22, 0x00	; 0
    487c:	70 e0       	ldi	r23, 0x00	; 0
    487e:	cb 01       	movw	r24, r22
    4880:	ca c0       	rjmp	.+404    	; 0x4a16 <getWriteExtParams+0x412>
    4882:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    4886:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    488a:	01 96       	adiw	r24, 0x01	; 1
    488c:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    4890:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    4894:	f8 01       	movw	r30, r16
    4896:	20 81       	ld	r18, Z
    4898:	31 81       	ldd	r19, Z+1	; 0x01
    489a:	84 81       	ldd	r24, Z+4	; 0x04
    489c:	95 81       	ldd	r25, Z+5	; 0x05
    489e:	ac 01       	movw	r20, r24
    48a0:	4f 5f       	subi	r20, 0xFF	; 255
    48a2:	5f 4f       	sbci	r21, 0xFF	; 255
    48a4:	55 83       	std	Z+5, r21	; 0x05
    48a6:	44 83       	std	Z+4, r20	; 0x04
    48a8:	f9 01       	movw	r30, r18
    48aa:	e8 0f       	add	r30, r24
    48ac:	f9 1f       	adc	r31, r25
    48ae:	2c 85       	ldd	r18, Y+12	; 0x0c
    48b0:	20 83       	st	Z, r18
    48b2:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    48b6:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    48ba:	01 96       	adiw	r24, 0x01	; 1
    48bc:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    48c0:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    48c4:	d8 01       	movw	r26, r16
    48c6:	2d 91       	ld	r18, X+
    48c8:	3c 91       	ld	r19, X
    48ca:	11 97       	sbiw	r26, 0x01	; 1
    48cc:	14 96       	adiw	r26, 0x04	; 4
    48ce:	8d 91       	ld	r24, X+
    48d0:	9c 91       	ld	r25, X
    48d2:	15 97       	sbiw	r26, 0x05	; 5
    48d4:	ac 01       	movw	r20, r24
    48d6:	4f 5f       	subi	r20, 0xFF	; 255
    48d8:	5f 4f       	sbci	r21, 0xFF	; 255
    48da:	15 96       	adiw	r26, 0x05	; 5
    48dc:	5c 93       	st	X, r21
    48de:	4e 93       	st	-X, r20
    48e0:	14 97       	sbiw	r26, 0x04	; 4
    48e2:	f9 01       	movw	r30, r18
    48e4:	e8 0f       	add	r30, r24
    48e6:	f9 1f       	adc	r31, r25
    48e8:	2d 85       	ldd	r18, Y+13	; 0x0d
    48ea:	20 83       	st	Z, r18
    48ec:	60 e0       	ldi	r22, 0x00	; 0
    48ee:	70 e0       	ldi	r23, 0x00	; 0
    48f0:	cb 01       	movw	r24, r22
    48f2:	91 c0       	rjmp	.+290    	; 0x4a16 <getWriteExtParams+0x412>
    48f4:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    48f8:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    48fc:	01 96       	adiw	r24, 0x01	; 1
    48fe:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    4902:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    4906:	f8 01       	movw	r30, r16
    4908:	20 81       	ld	r18, Z
    490a:	31 81       	ldd	r19, Z+1	; 0x01
    490c:	84 81       	ldd	r24, Z+4	; 0x04
    490e:	95 81       	ldd	r25, Z+5	; 0x05
    4910:	ac 01       	movw	r20, r24
    4912:	4f 5f       	subi	r20, 0xFF	; 255
    4914:	5f 4f       	sbci	r21, 0xFF	; 255
    4916:	55 83       	std	Z+5, r21	; 0x05
    4918:	44 83       	std	Z+4, r20	; 0x04
    491a:	f9 01       	movw	r30, r18
    491c:	e8 0f       	add	r30, r24
    491e:	f9 1f       	adc	r31, r25
    4920:	2a 85       	ldd	r18, Y+10	; 0x0a
    4922:	20 83       	st	Z, r18
    4924:	60 e0       	ldi	r22, 0x00	; 0
    4926:	70 e0       	ldi	r23, 0x00	; 0
    4928:	cb 01       	movw	r24, r22
    492a:	75 c0       	rjmp	.+234    	; 0x4a16 <getWriteExtParams+0x412>
    492c:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    4930:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    4934:	01 96       	adiw	r24, 0x01	; 1
    4936:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    493a:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    493e:	d8 01       	movw	r26, r16
    4940:	2d 91       	ld	r18, X+
    4942:	3c 91       	ld	r19, X
    4944:	11 97       	sbiw	r26, 0x01	; 1
    4946:	14 96       	adiw	r26, 0x04	; 4
    4948:	8d 91       	ld	r24, X+
    494a:	9c 91       	ld	r25, X
    494c:	15 97       	sbiw	r26, 0x05	; 5
    494e:	ac 01       	movw	r20, r24
    4950:	4f 5f       	subi	r20, 0xFF	; 255
    4952:	5f 4f       	sbci	r21, 0xFF	; 255
    4954:	15 96       	adiw	r26, 0x05	; 5
    4956:	5c 93       	st	X, r21
    4958:	4e 93       	st	-X, r20
    495a:	14 97       	sbiw	r26, 0x04	; 4
    495c:	f9 01       	movw	r30, r18
    495e:	e8 0f       	add	r30, r24
    4960:	f9 1f       	adc	r31, r25
    4962:	2e 85       	ldd	r18, Y+14	; 0x0e
    4964:	20 83       	st	Z, r18
    4966:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    496a:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    496e:	01 96       	adiw	r24, 0x01	; 1
    4970:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    4974:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    4978:	2d 91       	ld	r18, X+
    497a:	3c 91       	ld	r19, X
    497c:	11 97       	sbiw	r26, 0x01	; 1
    497e:	14 96       	adiw	r26, 0x04	; 4
    4980:	8d 91       	ld	r24, X+
    4982:	9c 91       	ld	r25, X
    4984:	15 97       	sbiw	r26, 0x05	; 5
    4986:	ac 01       	movw	r20, r24
    4988:	4f 5f       	subi	r20, 0xFF	; 255
    498a:	5f 4f       	sbci	r21, 0xFF	; 255
    498c:	15 96       	adiw	r26, 0x05	; 5
    498e:	5c 93       	st	X, r21
    4990:	4e 93       	st	-X, r20
    4992:	14 97       	sbiw	r26, 0x04	; 4
    4994:	f9 01       	movw	r30, r18
    4996:	e8 0f       	add	r30, r24
    4998:	f9 1f       	adc	r31, r25
    499a:	2f 85       	ldd	r18, Y+15	; 0x0f
    499c:	20 83       	st	Z, r18
    499e:	60 e0       	ldi	r22, 0x00	; 0
    49a0:	70 e0       	ldi	r23, 0x00	; 0
    49a2:	cb 01       	movw	r24, r22
    49a4:	38 c0       	rjmp	.+112    	; 0x4a16 <getWriteExtParams+0x412>
    49a6:	f8 01       	movw	r30, r16
    49a8:	84 81       	ldd	r24, Z+4	; 0x04
    49aa:	95 81       	ldd	r25, Z+5	; 0x05
    49ac:	03 97       	sbiw	r24, 0x03	; 3
    49ae:	95 83       	std	Z+5, r25	; 0x05
    49b0:	84 83       	std	Z+4, r24	; 0x04
    49b2:	60 e0       	ldi	r22, 0x00	; 0
    49b4:	70 e0       	ldi	r23, 0x00	; 0
    49b6:	cb 01       	movw	r24, r22
    49b8:	2e c0       	rjmp	.+92     	; 0x4a16 <getWriteExtParams+0x412>
    49ba:	61 e0       	ldi	r22, 0x01	; 1
    49bc:	70 e0       	ldi	r23, 0x00	; 0
    49be:	80 e0       	ldi	r24, 0x00	; 0
    49c0:	93 e0       	ldi	r25, 0x03	; 3
    49c2:	29 c0       	rjmp	.+82     	; 0x4a16 <getWriteExtParams+0x412>
    49c4:	60 e0       	ldi	r22, 0x00	; 0
    49c6:	70 e0       	ldi	r23, 0x00	; 0
    49c8:	cb 01       	movw	r24, r22
    49ca:	25 c0       	rjmp	.+74     	; 0x4a16 <getWriteExtParams+0x412>
    49cc:	23 8d       	ldd	r18, Z+27	; 0x1b
    49ce:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    49d2:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    49d6:	01 96       	adiw	r24, 0x01	; 1
    49d8:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    49dc:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    49e0:	d8 01       	movw	r26, r16
    49e2:	4d 91       	ld	r20, X+
    49e4:	5c 91       	ld	r21, X
    49e6:	11 97       	sbiw	r26, 0x01	; 1
    49e8:	14 96       	adiw	r26, 0x04	; 4
    49ea:	8d 91       	ld	r24, X+
    49ec:	9c 91       	ld	r25, X
    49ee:	15 97       	sbiw	r26, 0x05	; 5
    49f0:	bc 01       	movw	r22, r24
    49f2:	6f 5f       	subi	r22, 0xFF	; 255
    49f4:	7f 4f       	sbci	r23, 0xFF	; 255
    49f6:	15 96       	adiw	r26, 0x05	; 5
    49f8:	7c 93       	st	X, r23
    49fa:	6e 93       	st	-X, r22
    49fc:	14 97       	sbiw	r26, 0x04	; 4
    49fe:	fa 01       	movw	r30, r20
    4a00:	e8 0f       	add	r30, r24
    4a02:	f9 1f       	adc	r31, r25
    4a04:	20 83       	st	Z, r18
    4a06:	60 e0       	ldi	r22, 0x00	; 0
    4a08:	70 e0       	ldi	r23, 0x00	; 0
    4a0a:	cb 01       	movw	r24, r22
    4a0c:	04 c0       	rjmp	.+8      	; 0x4a16 <getWriteExtParams+0x412>
    4a0e:	61 e0       	ldi	r22, 0x01	; 1
    4a10:	70 e0       	ldi	r23, 0x00	; 0
    4a12:	80 e0       	ldi	r24, 0x00	; 0
    4a14:	93 e0       	ldi	r25, 0x03	; 3
    4a16:	2f 96       	adiw	r28, 0x0f	; 15
    4a18:	0f b6       	in	r0, 0x3f	; 63
    4a1a:	f8 94       	cli
    4a1c:	de bf       	out	0x3e, r29	; 62
    4a1e:	0f be       	out	0x3f, r0	; 63
    4a20:	cd bf       	out	0x3d, r28	; 61
    4a22:	df 91       	pop	r29
    4a24:	cf 91       	pop	r28
    4a26:	1f 91       	pop	r17
    4a28:	0f 91       	pop	r16
    4a2a:	ff 90       	pop	r15
    4a2c:	ef 90       	pop	r14
    4a2e:	df 90       	pop	r13
    4a30:	cf 90       	pop	r12
    4a32:	bf 90       	pop	r11
    4a34:	af 90       	pop	r10
    4a36:	9f 90       	pop	r9
    4a38:	08 95       	ret

00004a3a <isTagTypeFilterAvail>:
    4a3a:	dc 01       	movw	r26, r24
    4a3c:	89 2b       	or	r24, r25
    4a3e:	19 f1       	breq	.+70     	; 0x4a86 <isTagTypeFilterAvail+0x4c>
    4a40:	8c 91       	ld	r24, X
    4a42:	83 30       	cpi	r24, 0x03	; 3
    4a44:	a1 f0       	breq	.+40     	; 0x4a6e <isTagTypeFilterAvail+0x34>
    4a46:	82 30       	cpi	r24, 0x02	; 2
    4a48:	01 f1       	breq	.+64     	; 0x4a8a <isTagTypeFilterAvail+0x50>
    4a4a:	80 e0       	ldi	r24, 0x00	; 0
    4a4c:	08 95       	ret
    4a4e:	11 96       	adiw	r26, 0x01	; 1
    4a50:	ed 91       	ld	r30, X+
    4a52:	fc 91       	ld	r31, X
    4a54:	12 97       	sbiw	r26, 0x02	; 2
    4a56:	22 0f       	add	r18, r18
    4a58:	33 1f       	adc	r19, r19
    4a5a:	e2 0f       	add	r30, r18
    4a5c:	f3 1f       	adc	r31, r19
    4a5e:	01 90       	ld	r0, Z+
    4a60:	f0 81       	ld	r31, Z
    4a62:	e0 2d       	mov	r30, r0
    4a64:	90 81       	ld	r25, Z
    4a66:	92 30       	cpi	r25, 0x02	; 2
    4a68:	91 f0       	breq	.+36     	; 0x4a8e <isTagTypeFilterAvail+0x54>
    4a6a:	8f 5f       	subi	r24, 0xFF	; 255
    4a6c:	01 c0       	rjmp	.+2      	; 0x4a70 <isTagTypeFilterAvail+0x36>
    4a6e:	80 e0       	ldi	r24, 0x00	; 0
    4a70:	28 2f       	mov	r18, r24
    4a72:	30 e0       	ldi	r19, 0x00	; 0
    4a74:	15 96       	adiw	r26, 0x05	; 5
    4a76:	4d 91       	ld	r20, X+
    4a78:	5c 91       	ld	r21, X
    4a7a:	16 97       	sbiw	r26, 0x06	; 6
    4a7c:	24 17       	cp	r18, r20
    4a7e:	35 07       	cpc	r19, r21
    4a80:	30 f3       	brcs	.-52     	; 0x4a4e <isTagTypeFilterAvail+0x14>
    4a82:	80 e0       	ldi	r24, 0x00	; 0
    4a84:	08 95       	ret
    4a86:	80 e0       	ldi	r24, 0x00	; 0
    4a88:	08 95       	ret
    4a8a:	81 e0       	ldi	r24, 0x01	; 1
    4a8c:	08 95       	ret
    4a8e:	81 e0       	ldi	r24, 0x01	; 1
    4a90:	08 95       	ret

00004a92 <TMR_SR_addTagOp>:
/**
 * Internal method used for adding the tagop
 **/ 
TMR_Status
TMR_SR_addTagOp(struct TMR_Reader *reader, TMR_TagOp *tagop,TMR_ReadPlan *rp, uint8_t *msg, uint8_t *j, uint32_t readTimeMs, uint8_t *byte )
{
    4a92:	2f 92       	push	r2
    4a94:	3f 92       	push	r3
    4a96:	4f 92       	push	r4
    4a98:	5f 92       	push	r5
    4a9a:	6f 92       	push	r6
    4a9c:	7f 92       	push	r7
    4a9e:	8f 92       	push	r8
    4aa0:	9f 92       	push	r9
    4aa2:	af 92       	push	r10
    4aa4:	bf 92       	push	r11
    4aa6:	cf 92       	push	r12
    4aa8:	df 92       	push	r13
    4aaa:	ef 92       	push	r14
    4aac:	ff 92       	push	r15
    4aae:	0f 93       	push	r16
    4ab0:	1f 93       	push	r17
    4ab2:	cf 93       	push	r28
    4ab4:	df 93       	push	r29
    4ab6:	cd b7       	in	r28, 0x3d	; 61
    4ab8:	de b7       	in	r29, 0x3e	; 62
    4aba:	c8 51       	subi	r28, 0x18	; 24
    4abc:	d1 40       	sbci	r29, 0x01	; 1
    4abe:	0f b6       	in	r0, 0x3f	; 63
    4ac0:	f8 94       	cli
    4ac2:	de bf       	out	0x3e, r29	; 62
    4ac4:	0f be       	out	0x3f, r0	; 63
    4ac6:	cd bf       	out	0x3d, r28	; 61
    4ac8:	3c 01       	movw	r6, r24
    4aca:	c3 5f       	subi	r28, 0xF3	; 243
    4acc:	de 4f       	sbci	r29, 0xFE	; 254
    4ace:	79 83       	std	Y+1, r23	; 0x01
    4ad0:	68 83       	st	Y, r22
    4ad2:	cd 50       	subi	r28, 0x0D	; 13
    4ad4:	d1 40       	sbci	r29, 0x01	; 1
    4ad6:	1a 01       	movw	r2, r20
    4ad8:	29 01       	movw	r4, r18
    4ada:	c1 5f       	subi	r28, 0xF1	; 241
    4adc:	de 4f       	sbci	r29, 0xFE	; 254
    4ade:	19 83       	std	Y+1, r17	; 0x01
    4ae0:	08 83       	st	Y, r16
    4ae2:	cf 50       	subi	r28, 0x0F	; 15
    4ae4:	d1 40       	sbci	r29, 0x01	; 1
    4ae6:	cd 5e       	subi	r28, 0xED	; 237
    4ae8:	de 4f       	sbci	r29, 0xFE	; 254
    4aea:	c8 82       	st	Y, r12
    4aec:	d9 82       	std	Y+1, r13	; 0x01
    4aee:	ea 82       	std	Y+2, r14	; 0x02
    4af0:	fb 82       	std	Y+3, r15	; 0x03
    4af2:	c3 51       	subi	r28, 0x13	; 19
    4af4:	d1 40       	sbci	r29, 0x01	; 1
    4af6:	cf 5e       	subi	r28, 0xEF	; 239
    4af8:	de 4f       	sbci	r29, 0xFE	; 254
    4afa:	b9 82       	std	Y+1, r11	; 0x01
    4afc:	a8 82       	st	Y, r10
    4afe:	c1 51       	subi	r28, 0x11	; 17
    4b00:	d1 40       	sbci	r29, 0x01	; 1
  bool customTagOp = false;
  TMR_SR_SerialReader *sr;
  sr = &reader->u.serialReader;
#endif /* TMR_ENABLE_UHF */

  i = *j; lenbyte = *byte;
    4b02:	d8 01       	movw	r26, r16
    4b04:	8c 91       	ld	r24, X
    4b06:	89 83       	std	Y+1, r24	; 0x01
    4b08:	f5 01       	movw	r30, r10
    4b0a:	80 81       	ld	r24, Z
    4b0c:	8a 83       	std	Y+2, r24	; 0x02

#ifdef TMR_ENABLE_UHF
  if(TMR_TAG_PROTOCOL_GEN2 == sr->currentProtocol)
    4b0e:	f3 01       	movw	r30, r6
    4b10:	ee 57       	subi	r30, 0x7E	; 126
    4b12:	fc 4f       	sbci	r31, 0xFC	; 252
    4b14:	80 81       	ld	r24, Z
    4b16:	85 30       	cpi	r24, 0x05	; 5
    4b18:	09 f0       	breq	.+2      	; 0x4b1c <TMR_SR_addTagOp+0x8a>
    4b1a:	57 c3       	rjmp	.+1710   	; 0x51ca <TMR_SR_addTagOp+0x738>
  {
  switch(tagop->type)
    4b1c:	db 01       	movw	r26, r22
    4b1e:	8c 91       	ld	r24, X
    4b20:	88 30       	cpi	r24, 0x08	; 8
    4b22:	08 f0       	brcs	.+2      	; 0x4b26 <TMR_SR_addTagOp+0x94>
    4b24:	4a c1       	rjmp	.+660    	; 0x4dba <TMR_SR_addTagOp+0x328>
    case TMR_TAGOP_GEN2_KILL:
    case TMR_TAGOP_GEN2_BLOCKWRITE:
    case TMR_TAGOP_GEN2_BLOCKPERMALOCK:
    case TMR_TAGOP_GEN2_BLOCKERASE:
    {
      ret = prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_CONFIGURED_LIST
    4b26:	ea 5a       	subi	r30, 0xAA	; 170
    4b28:	f1 40       	sbci	r31, 0x01	; 1
    4b2a:	80 80       	ld	r8, Z
    4b2c:	91 80       	ldd	r9, Z+1	; 0x01
    4b2e:	a2 80       	ldd	r10, Z+2	; 0x02
    4b30:	b3 80       	ldd	r11, Z+3	; 0x03
    4b32:	fa 01       	movw	r30, r20
    4b34:	c4 84       	ldd	r12, Z+12	; 0x0c
                                   | TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND|TMR_SR_SEARCH_FLAG_LARGE_TAG_POPULATION_SUPPORT),
                                   rp->u.simple.filter, rp->u.simple.protocol, sr->gen2AccessPassword, &lenbyte);
    4b36:	e5 84       	ldd	r14, Z+13	; 0x0d
    4b38:	f6 84       	ldd	r15, Z+14	; 0x0e
    case TMR_TAGOP_GEN2_KILL:
    case TMR_TAGOP_GEN2_BLOCKWRITE:
    case TMR_TAGOP_GEN2_BLOCKPERMALOCK:
    case TMR_TAGOP_GEN2_BLOCKERASE:
    {
      ret = prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_CONFIGURED_LIST
    4b3a:	ce 01       	movw	r24, r28
    4b3c:	02 96       	adiw	r24, 0x02	; 2
    4b3e:	9f 93       	push	r25
    4b40:	8f 93       	push	r24
    4b42:	07 e1       	ldi	r16, 0x17	; 23
    4b44:	10 e0       	ldi	r17, 0x00	; 0
    4b46:	cd 5e       	subi	r28, 0xED	; 237
    4b48:	de 4f       	sbci	r29, 0xFE	; 254
    4b4a:	28 81       	ld	r18, Y
    4b4c:	39 81       	ldd	r19, Y+1	; 0x01
    4b4e:	c3 51       	subi	r28, 0x13	; 19
    4b50:	d1 40       	sbci	r29, 0x01	; 1
    4b52:	ae 01       	movw	r20, r28
    4b54:	4f 5f       	subi	r20, 0xFF	; 255
    4b56:	5f 4f       	sbci	r21, 0xFF	; 255
    4b58:	b2 01       	movw	r22, r4
    4b5a:	c3 01       	movw	r24, r6
    4b5c:	0e 94 ef 04 	call	0x9de	; 0x9de <prepEmbReadTagMultiple>
    4b60:	c7 5f       	subi	r28, 0xF7	; 247
    4b62:	de 4f       	sbci	r29, 0xFE	; 254
    4b64:	68 83       	st	Y, r22
    4b66:	79 83       	std	Y+1, r23	; 0x01
    4b68:	8a 83       	std	Y+2, r24	; 0x02
    4b6a:	9b 83       	std	Y+3, r25	; 0x03
    4b6c:	c9 50       	subi	r28, 0x09	; 9
    4b6e:	d1 40       	sbci	r29, 0x01	; 1
                                   | TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND|TMR_SR_SEARCH_FLAG_LARGE_TAG_POPULATION_SUPPORT),
                                   rp->u.simple.filter, rp->u.simple.protocol, sr->gen2AccessPassword, &lenbyte);
      switch (tagop->type)
    4b70:	c3 5f       	subi	r28, 0xF3	; 243
    4b72:	de 4f       	sbci	r29, 0xFE	; 254
    4b74:	a8 81       	ld	r26, Y
    4b76:	b9 81       	ldd	r27, Y+1	; 0x01
    4b78:	cd 50       	subi	r28, 0x0D	; 13
    4b7a:	d1 40       	sbci	r29, 0x01	; 1
    4b7c:	ec 91       	ld	r30, X
    4b7e:	0f 90       	pop	r0
    4b80:	0f 90       	pop	r0
    4b82:	8e 2f       	mov	r24, r30
    4b84:	90 e0       	ldi	r25, 0x00	; 0
    4b86:	88 30       	cpi	r24, 0x08	; 8
    4b88:	91 05       	cpc	r25, r1
    4b8a:	08 f0       	brcs	.+2      	; 0x4b8e <TMR_SR_addTagOp+0xfc>
    4b8c:	20 c1       	rjmp	.+576    	; 0x4dce <TMR_SR_addTagOp+0x33c>
    4b8e:	fc 01       	movw	r30, r24
    4b90:	e5 5f       	subi	r30, 0xF5	; 245
    4b92:	fd 4f       	sbci	r31, 0xFD	; 253
    4b94:	0c 94 d3 74 	jmp	0xe9a6	; 0xe9a6 <__tablejump2__>
      {
        case (TMR_TAGOP_GEN2_WRITETAG):
        {
          TMR_TagOp_GEN2_WriteTag *args;
          args = &rp->u.simple.tagop->u.gen2.u.writeTag;
    4b98:	d1 01       	movw	r26, r2
    4b9a:	1f 96       	adiw	r26, 0x0f	; 15
    4b9c:	ed 91       	ld	r30, X+
    4b9e:	fc 91       	ld	r31, X
    4ba0:	50 97       	sbiw	r26, 0x10	; 16

          TMR_SR_msgAddGEN2WriteTagEPC(msg,&i, 0, args->epcptr->epc, args->epcptr->epcByteCount);
    4ba2:	21 81       	ldd	r18, Z+1	; 0x01
    4ba4:	32 81       	ldd	r19, Z+2	; 0x02
    4ba6:	f9 01       	movw	r30, r18
    4ba8:	07 ad       	ldd	r16, Z+63	; 0x3f
    4baa:	40 e0       	ldi	r20, 0x00	; 0
    4bac:	50 e0       	ldi	r21, 0x00	; 0
    4bae:	be 01       	movw	r22, r28
    4bb0:	6f 5f       	subi	r22, 0xFF	; 255
    4bb2:	7f 4f       	sbci	r23, 0xFF	; 255
    4bb4:	c2 01       	movw	r24, r4
    4bb6:	0e 94 68 3d 	call	0x7ad0	; 0x7ad0 <TMR_SR_msgAddGEN2WriteTagEPC>
{
 
  TMR_Status ret = TMR_SUCCESS;
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4bba:	80 e0       	ldi	r24, 0x00	; 0
        {
          TMR_TagOp_GEN2_WriteTag *args;
          args = &rp->u.simple.tagop->u.gen2.u.writeTag;

          TMR_SR_msgAddGEN2WriteTagEPC(msg,&i, 0, args->epcptr->epc, args->epcptr->epcByteCount);
          break;
    4bbc:	09 c1       	rjmp	.+530    	; 0x4dd0 <TMR_SR_addTagOp+0x33e>
        }
        case TMR_TAGOP_GEN2_READDATA:
        {
          TMR_TagOp_GEN2_ReadData *args;
          args = &rp->u.simple.tagop->u.gen2.u.readData;
    4bbe:	d1 01       	movw	r26, r2
    4bc0:	1f 96       	adiw	r26, 0x0f	; 15
    4bc2:	ed 91       	ld	r30, X+
    4bc4:	fc 91       	ld	r31, X
    4bc6:	50 97       	sbiw	r26, 0x10	; 16

          /**
           * If user wants to read all the memory bank data,
           * In that case args.bank value should be greater than 3
           **/
          if ((uint8_t)args->bank > 3)
    4bc8:	81 81       	ldd	r24, Z+1	; 0x01
    4bca:	84 30       	cpi	r24, 0x04	; 4
    4bcc:	28 f0       	brcs	.+10     	; 0x4bd8 <TMR_SR_addTagOp+0x146>
          {
            /* enable the gen2AllMemoryBankEnabled option */
            sr->gen2AllMemoryBankEnabled = true;
    4bce:	81 e0       	ldi	r24, 0x01	; 1
    4bd0:	d3 01       	movw	r26, r6
    4bd2:	a8 50       	subi	r26, 0x08	; 8
    4bd4:	ba 4f       	sbci	r27, 0xFA	; 250
    4bd6:	8c 93       	st	X, r24
          }

          TMR_SR_msgAddGEN2DataRead(msg, &i, 2000, args->bank, args->wordAddress, args->len, 0x00, false);
    4bd8:	e2 80       	ldd	r14, Z+2	; 0x02
    4bda:	f3 80       	ldd	r15, Z+3	; 0x03
    4bdc:	04 81       	ldd	r16, Z+4	; 0x04
    4bde:	15 81       	ldd	r17, Z+5	; 0x05
    4be0:	81 2c       	mov	r8, r1
    4be2:	a1 2c       	mov	r10, r1
    4be4:	c6 80       	ldd	r12, Z+6	; 0x06
    4be6:	21 81       	ldd	r18, Z+1	; 0x01
    4be8:	40 ed       	ldi	r20, 0xD0	; 208
    4bea:	57 e0       	ldi	r21, 0x07	; 7
    4bec:	be 01       	movw	r22, r28
    4bee:	6f 5f       	subi	r22, 0xFF	; 255
    4bf0:	7f 4f       	sbci	r23, 0xFF	; 255
    4bf2:	c2 01       	movw	r24, r4
    4bf4:	0e 94 c0 3d 	call	0x7b80	; 0x7b80 <TMR_SR_msgAddGEN2DataRead>
{
 
  TMR_Status ret = TMR_SUCCESS;
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4bf8:	80 e0       	ldi	r24, 0x00	; 0
            /* enable the gen2AllMemoryBankEnabled option */
            sr->gen2AllMemoryBankEnabled = true;
          }

          TMR_SR_msgAddGEN2DataRead(msg, &i, 2000, args->bank, args->wordAddress, args->len, 0x00, false);
          break;
    4bfa:	ea c0       	rjmp	.+468    	; 0x4dd0 <TMR_SR_addTagOp+0x33e>
        case TMR_TAGOP_GEN2_WRITEDATA:
        {
          TMR_TagOp_GEN2_WriteData *args;
          int idx ;

          args = &rp->u.simple.tagop->u.gen2.u.writeData;
    4bfc:	f1 01       	movw	r30, r2
    4bfe:	a7 84       	ldd	r10, Z+15	; 0x0f
    4c00:	b0 88       	ldd	r11, Z+16	; 0x10

          TMR_SR_msgAddGEN2DataWrite(msg, &i, 0, args->bank, args->wordAddress, false);
    4c02:	d5 01       	movw	r26, r10
    4c04:	12 96       	adiw	r26, 0x02	; 2
    4c06:	ed 90       	ld	r14, X+
    4c08:	fd 90       	ld	r15, X+
    4c0a:	0d 91       	ld	r16, X+
    4c0c:	1c 91       	ld	r17, X
    4c0e:	15 97       	sbiw	r26, 0x05	; 5
    4c10:	c1 2c       	mov	r12, r1
    4c12:	11 96       	adiw	r26, 0x01	; 1
    4c14:	2c 91       	ld	r18, X
    4c16:	40 e0       	ldi	r20, 0x00	; 0
    4c18:	50 e0       	ldi	r21, 0x00	; 0
    4c1a:	be 01       	movw	r22, r28
    4c1c:	6f 5f       	subi	r22, 0xFF	; 255
    4c1e:	7f 4f       	sbci	r23, 0xFF	; 255
    4c20:	c2 01       	movw	r24, r4
    4c22:	0e 94 69 3e 	call	0x7cd2	; 0x7cd2 <TMR_SR_msgAddGEN2DataWrite>

          for(idx = 0 ; idx< args->data.len; idx++)
    4c26:	40 e0       	ldi	r20, 0x00	; 0
    4c28:	50 e0       	ldi	r21, 0x00	; 0
    4c2a:	24 c0       	rjmp	.+72     	; 0x4c74 <TMR_SR_addTagOp+0x1e2>
          {
            msg[i++]= (args->data.list[idx]>>8) & 0xFF;
    4c2c:	89 81       	ldd	r24, Y+1	; 0x01
    4c2e:	21 e0       	ldi	r18, 0x01	; 1
    4c30:	28 0f       	add	r18, r24
    4c32:	b2 01       	movw	r22, r4
    4c34:	68 0f       	add	r22, r24
    4c36:	71 1d       	adc	r23, r1
    4c38:	d5 01       	movw	r26, r10
    4c3a:	16 96       	adiw	r26, 0x06	; 6
    4c3c:	ed 91       	ld	r30, X+
    4c3e:	fc 91       	ld	r31, X
    4c40:	17 97       	sbiw	r26, 0x07	; 7
    4c42:	ca 01       	movw	r24, r20
    4c44:	88 0f       	add	r24, r24
    4c46:	99 1f       	adc	r25, r25
    4c48:	e8 0f       	add	r30, r24
    4c4a:	f9 1f       	adc	r31, r25
    4c4c:	31 81       	ldd	r19, Z+1	; 0x01
    4c4e:	fb 01       	movw	r30, r22
    4c50:	30 83       	st	Z, r19
            msg[i++]= (args->data.list[idx]>>0) & 0xFF;
    4c52:	31 e0       	ldi	r19, 0x01	; 1
    4c54:	32 0f       	add	r19, r18
    4c56:	39 83       	std	Y+1, r19	; 0x01
    4c58:	f2 01       	movw	r30, r4
    4c5a:	e2 0f       	add	r30, r18
    4c5c:	f1 1d       	adc	r31, r1
    4c5e:	16 96       	adiw	r26, 0x06	; 6
    4c60:	2d 91       	ld	r18, X+
    4c62:	3c 91       	ld	r19, X
    4c64:	17 97       	sbiw	r26, 0x07	; 7
    4c66:	d9 01       	movw	r26, r18
    4c68:	a8 0f       	add	r26, r24
    4c6a:	b9 1f       	adc	r27, r25
    4c6c:	8c 91       	ld	r24, X
    4c6e:	80 83       	st	Z, r24

          args = &rp->u.simple.tagop->u.gen2.u.writeData;

          TMR_SR_msgAddGEN2DataWrite(msg, &i, 0, args->bank, args->wordAddress, false);

          for(idx = 0 ; idx< args->data.len; idx++)
    4c70:	4f 5f       	subi	r20, 0xFF	; 255
    4c72:	5f 4f       	sbci	r21, 0xFF	; 255
    4c74:	d5 01       	movw	r26, r10
    4c76:	1a 96       	adiw	r26, 0x0a	; 10
    4c78:	8d 91       	ld	r24, X+
    4c7a:	9c 91       	ld	r25, X
    4c7c:	1b 97       	sbiw	r26, 0x0b	; 11
    4c7e:	48 17       	cp	r20, r24
    4c80:	59 07       	cpc	r21, r25
    4c82:	a0 f2       	brcs	.-88     	; 0x4c2c <TMR_SR_addTagOp+0x19a>
{
 
  TMR_Status ret = TMR_SUCCESS;
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4c84:	80 e0       	ldi	r24, 0x00	; 0
    4c86:	a4 c0       	rjmp	.+328    	; 0x4dd0 <TMR_SR_addTagOp+0x33e>
          break;
        }
        case TMR_TAGOP_GEN2_LOCK:
        {
          TMR_TagOp_GEN2_Lock *args;
          args = &rp->u.simple.tagop->u.gen2.u.lock;
    4c88:	d1 01       	movw	r26, r2
    4c8a:	1f 96       	adiw	r26, 0x0f	; 15
    4c8c:	ed 91       	ld	r30, X+
    4c8e:	fc 91       	ld	r31, X
    4c90:	50 97       	sbiw	r26, 0x10	; 16

          TMR_SR_msgAddGEN2LockTag(msg, &i, 0, args->mask, args->action, args->accessPassword);
    4c92:	c5 80       	ldd	r12, Z+5	; 0x05
    4c94:	d6 80       	ldd	r13, Z+6	; 0x06
    4c96:	e7 80       	ldd	r14, Z+7	; 0x07
    4c98:	f0 84       	ldd	r15, Z+8	; 0x08
    4c9a:	03 81       	ldd	r16, Z+3	; 0x03
    4c9c:	14 81       	ldd	r17, Z+4	; 0x04
    4c9e:	21 81       	ldd	r18, Z+1	; 0x01
    4ca0:	32 81       	ldd	r19, Z+2	; 0x02
    4ca2:	40 e0       	ldi	r20, 0x00	; 0
    4ca4:	50 e0       	ldi	r21, 0x00	; 0
    4ca6:	be 01       	movw	r22, r28
    4ca8:	6f 5f       	subi	r22, 0xFF	; 255
    4caa:	7f 4f       	sbci	r23, 0xFF	; 255
    4cac:	c2 01       	movw	r24, r4
    4cae:	0e 94 12 3f 	call	0x7e24	; 0x7e24 <TMR_SR_msgAddGEN2LockTag>
{
 
  TMR_Status ret = TMR_SUCCESS;
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4cb2:	80 e0       	ldi	r24, 0x00	; 0
        {
          TMR_TagOp_GEN2_Lock *args;
          args = &rp->u.simple.tagop->u.gen2.u.lock;

          TMR_SR_msgAddGEN2LockTag(msg, &i, 0, args->mask, args->action, args->accessPassword);
          break;
    4cb4:	8d c0       	rjmp	.+282    	; 0x4dd0 <TMR_SR_addTagOp+0x33e>
        }
        case TMR_TAGOP_GEN2_KILL:
        {
          TMR_TagOp_GEN2_Kill *args;
          args = &rp->u.simple.tagop->u.gen2.u.kill;
    4cb6:	d1 01       	movw	r26, r2
    4cb8:	1f 96       	adiw	r26, 0x0f	; 15
    4cba:	ed 91       	ld	r30, X+
    4cbc:	fc 91       	ld	r31, X
    4cbe:	50 97       	sbiw	r26, 0x10	; 16

          TMR_SR_msgAddGEN2KillTag(msg, &i, 0, args->password);
    4cc0:	01 81       	ldd	r16, Z+1	; 0x01
    4cc2:	12 81       	ldd	r17, Z+2	; 0x02
    4cc4:	23 81       	ldd	r18, Z+3	; 0x03
    4cc6:	34 81       	ldd	r19, Z+4	; 0x04
    4cc8:	40 e0       	ldi	r20, 0x00	; 0
    4cca:	50 e0       	ldi	r21, 0x00	; 0
    4ccc:	be 01       	movw	r22, r28
    4cce:	6f 5f       	subi	r22, 0xFF	; 255
    4cd0:	7f 4f       	sbci	r23, 0xFF	; 255
    4cd2:	c2 01       	movw	r24, r4
    4cd4:	0e 94 a3 3f 	call	0x7f46	; 0x7f46 <TMR_SR_msgAddGEN2KillTag>
{
 
  TMR_Status ret = TMR_SUCCESS;
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4cd8:	80 e0       	ldi	r24, 0x00	; 0
        {
          TMR_TagOp_GEN2_Kill *args;
          args = &rp->u.simple.tagop->u.gen2.u.kill;

          TMR_SR_msgAddGEN2KillTag(msg, &i, 0, args->password);
          break;
    4cda:	7a c0       	rjmp	.+244    	; 0x4dd0 <TMR_SR_addTagOp+0x33e>
        }
        case TMR_TAGOP_GEN2_BLOCKWRITE:
        {
          TMR_TagOp_GEN2_BlockWrite *args;
          args = &rp->u.simple.tagop->u.gen2.u.blockWrite;
    4cdc:	d1 01       	movw	r26, r2
    4cde:	1f 96       	adiw	r26, 0x0f	; 15
    4ce0:	ed 91       	ld	r30, X+
    4ce2:	fc 91       	ld	r31, X
    4ce4:	50 97       	sbiw	r26, 0x10	; 16

         TMR_SR_msgAddGEN2BlockWrite(msg, &i, 0, args->bank, args->wordPtr, args->data.len, args->data.list, 0, NULL);
    4ce6:	a2 84       	ldd	r10, Z+10	; 0x0a
    4ce8:	b3 84       	ldd	r11, Z+11	; 0x0b
    4cea:	86 80       	ldd	r8, Z+6	; 0x06
    4cec:	97 80       	ldd	r9, Z+7	; 0x07
    4cee:	c1 2c       	mov	r12, r1
    4cf0:	d1 2c       	mov	r13, r1
    4cf2:	e2 80       	ldd	r14, Z+2	; 0x02
    4cf4:	f3 80       	ldd	r15, Z+3	; 0x03
    4cf6:	04 81       	ldd	r16, Z+4	; 0x04
    4cf8:	15 81       	ldd	r17, Z+5	; 0x05
    4cfa:	1f 92       	push	r1
    4cfc:	1f 92       	push	r1
    4cfe:	1f 92       	push	r1
    4d00:	1f 92       	push	r1
    4d02:	1f 92       	push	r1
    4d04:	1f 92       	push	r1
    4d06:	21 81       	ldd	r18, Z+1	; 0x01
    4d08:	40 e0       	ldi	r20, 0x00	; 0
    4d0a:	50 e0       	ldi	r21, 0x00	; 0
    4d0c:	be 01       	movw	r22, r28
    4d0e:	6f 5f       	subi	r22, 0xFF	; 255
    4d10:	7f 4f       	sbci	r23, 0xFF	; 255
    4d12:	c2 01       	movw	r24, r4
    4d14:	0e 94 0b 40 	call	0x8016	; 0x8016 <TMR_SR_msgAddGEN2BlockWrite>
         break;
    4d18:	0f 90       	pop	r0
    4d1a:	0f 90       	pop	r0
    4d1c:	0f 90       	pop	r0
    4d1e:	0f 90       	pop	r0
    4d20:	0f 90       	pop	r0
    4d22:	0f 90       	pop	r0
{
 
  TMR_Status ret = TMR_SUCCESS;
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4d24:	80 e0       	ldi	r24, 0x00	; 0
        {
          TMR_TagOp_GEN2_BlockWrite *args;
          args = &rp->u.simple.tagop->u.gen2.u.blockWrite;

         TMR_SR_msgAddGEN2BlockWrite(msg, &i, 0, args->bank, args->wordPtr, args->data.len, args->data.list, 0, NULL);
         break;
    4d26:	54 c0       	rjmp	.+168    	; 0x4dd0 <TMR_SR_addTagOp+0x33e>
        }
        case TMR_TAGOP_GEN2_BLOCKPERMALOCK:
        {
          TMR_TagOp_GEN2_BlockPermaLock *args;
          args = &rp->u.simple.tagop->u.gen2.u.blockPermaLock;
    4d28:	d1 01       	movw	r26, r2
    4d2a:	1f 96       	adiw	r26, 0x0f	; 15
    4d2c:	ed 91       	ld	r30, X+
    4d2e:	fc 91       	ld	r31, X
    4d30:	50 97       	sbiw	r26, 0x10	; 16

          TMR_SR_msgAddGEN2BlockPermaLock(msg, &i, 0,args->readLock, args->bank, args->blockPtr, args->mask.len, 
    4d32:	83 85       	ldd	r24, Z+11	; 0x0b
    4d34:	94 85       	ldd	r25, Z+12	; 0x0c
    4d36:	01 81       	ldd	r16, Z+1	; 0x01
    4d38:	a3 80       	ldd	r10, Z+3	; 0x03
    4d3a:	b4 80       	ldd	r11, Z+4	; 0x04
    4d3c:	c5 80       	ldd	r12, Z+5	; 0x05
    4d3e:	d6 80       	ldd	r13, Z+6	; 0x06
    4d40:	10 e0       	ldi	r17, 0x00	; 0
    4d42:	20 e0       	ldi	r18, 0x00	; 0
    4d44:	30 e0       	ldi	r19, 0x00	; 0
    4d46:	1f 92       	push	r1
    4d48:	1f 92       	push	r1
    4d4a:	1f 92       	push	r1
    4d4c:	1f 92       	push	r1
    4d4e:	1f 92       	push	r1
    4d50:	1f 92       	push	r1
    4d52:	40 85       	ldd	r20, Z+8	; 0x08
    4d54:	4f 93       	push	r20
    4d56:	47 81       	ldd	r20, Z+7	; 0x07
    4d58:	4f 93       	push	r20
    4d5a:	1f 92       	push	r1
    4d5c:	1f 92       	push	r1
    4d5e:	9f 93       	push	r25
    4d60:	8f 93       	push	r24
    4d62:	e2 80       	ldd	r14, Z+2	; 0x02
    4d64:	40 e0       	ldi	r20, 0x00	; 0
    4d66:	50 e0       	ldi	r21, 0x00	; 0
    4d68:	be 01       	movw	r22, r28
    4d6a:	6f 5f       	subi	r22, 0xFF	; 255
    4d6c:	7f 4f       	sbci	r23, 0xFF	; 255
    4d6e:	c2 01       	movw	r24, r4
    4d70:	0e 94 87 41 	call	0x830e	; 0x830e <TMR_SR_msgAddGEN2BlockPermaLock>
            args->mask.list, 0, NULL);
           break;
    4d74:	0f b6       	in	r0, 0x3f	; 63
    4d76:	f8 94       	cli
    4d78:	de bf       	out	0x3e, r29	; 62
    4d7a:	0f be       	out	0x3f, r0	; 63
    4d7c:	cd bf       	out	0x3d, r28	; 61
{
 
  TMR_Status ret = TMR_SUCCESS;
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4d7e:	80 e0       	ldi	r24, 0x00	; 0
          TMR_TagOp_GEN2_BlockPermaLock *args;
          args = &rp->u.simple.tagop->u.gen2.u.blockPermaLock;

          TMR_SR_msgAddGEN2BlockPermaLock(msg, &i, 0,args->readLock, args->bank, args->blockPtr, args->mask.len, 
            args->mask.list, 0, NULL);
           break;
    4d80:	27 c0       	rjmp	.+78     	; 0x4dd0 <TMR_SR_addTagOp+0x33e>
        }
        case TMR_TAGOP_GEN2_BLOCKERASE:
        {
          TMR_TagOp_GEN2_BlockErase *args;
          args = &rp->u.simple.tagop->u.gen2.u.blockErase;
    4d82:	d1 01       	movw	r26, r2
    4d84:	1f 96       	adiw	r26, 0x0f	; 15
    4d86:	ed 91       	ld	r30, X+
    4d88:	fc 91       	ld	r31, X
    4d8a:	50 97       	sbiw	r26, 0x10	; 16

          TMR_SR_msgAddGEN2BlockErase(msg, &i, 0, args->wordPtr, args->bank, args->wordCount, 0, NULL);
    4d8c:	02 81       	ldd	r16, Z+2	; 0x02
    4d8e:	13 81       	ldd	r17, Z+3	; 0x03
    4d90:	24 81       	ldd	r18, Z+4	; 0x04
    4d92:	35 81       	ldd	r19, Z+5	; 0x05
    4d94:	1f 92       	push	r1
    4d96:	1f 92       	push	r1
    4d98:	81 2c       	mov	r8, r1
    4d9a:	91 2c       	mov	r9, r1
    4d9c:	54 01       	movw	r10, r8
    4d9e:	c6 80       	ldd	r12, Z+6	; 0x06
    4da0:	e1 80       	ldd	r14, Z+1	; 0x01
    4da2:	40 e0       	ldi	r20, 0x00	; 0
    4da4:	50 e0       	ldi	r21, 0x00	; 0
    4da6:	be 01       	movw	r22, r28
    4da8:	6f 5f       	subi	r22, 0xFF	; 255
    4daa:	7f 4f       	sbci	r23, 0xFF	; 255
    4dac:	c2 01       	movw	r24, r4
    4dae:	0e 94 e8 42 	call	0x85d0	; 0x85d0 <TMR_SR_msgAddGEN2BlockErase>
          break;
    4db2:	0f 90       	pop	r0
    4db4:	0f 90       	pop	r0
{
 
  TMR_Status ret = TMR_SUCCESS;
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4db6:	80 e0       	ldi	r24, 0x00	; 0
        {
          TMR_TagOp_GEN2_BlockErase *args;
          args = &rp->u.simple.tagop->u.gen2.u.blockErase;

          TMR_SR_msgAddGEN2BlockErase(msg, &i, 0, args->wordPtr, args->bank, args->wordCount, 0, NULL);
          break;
    4db8:	0b c0       	rjmp	.+22     	; 0x4dd0 <TMR_SR_addTagOp+0x33e>
          break;
      }
      break;
    }
    default:
      customTagOp = true;
    4dba:	81 e0       	ldi	r24, 0x01	; 1
 **/ 
TMR_Status
TMR_SR_addTagOp(struct TMR_Reader *reader, TMR_TagOp *tagop,TMR_ReadPlan *rp, uint8_t *msg, uint8_t *j, uint32_t readTimeMs, uint8_t *byte )
{
 
  TMR_Status ret = TMR_SUCCESS;
    4dbc:	c7 5f       	subi	r28, 0xF7	; 247
    4dbe:	de 4f       	sbci	r29, 0xFE	; 254
    4dc0:	18 82       	st	Y, r1
    4dc2:	19 82       	std	Y+1, r1	; 0x01
    4dc4:	1a 82       	std	Y+2, r1	; 0x02
    4dc6:	1b 82       	std	Y+3, r1	; 0x03
    4dc8:	c9 50       	subi	r28, 0x09	; 9
    4dca:	d1 40       	sbci	r29, 0x01	; 1
    4dcc:	01 c0       	rjmp	.+2      	; 0x4dd0 <TMR_SR_addTagOp+0x33e>
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4dce:	80 e0       	ldi	r24, 0x00	; 0
    default:
      customTagOp = true;
      break;
  }

  if(customTagOp)
    4dd0:	88 23       	and	r24, r24
    4dd2:	09 f4       	brne	.+2      	; 0x4dd6 <TMR_SR_addTagOp+0x344>
    4dd4:	86 c3       	rjmp	.+1804   	; 0x54e2 <TMR_SR_addTagOp+0xa50>
  {
    switch (tagop->type)
    4dd6:	c3 5f       	subi	r28, 0xF3	; 243
    4dd8:	de 4f       	sbci	r29, 0xFE	; 254
    4dda:	e8 81       	ld	r30, Y
    4ddc:	f9 81       	ldd	r31, Y+1	; 0x01
    4dde:	cd 50       	subi	r28, 0x0D	; 13
    4de0:	d1 40       	sbci	r29, 0x01	; 1
    4de2:	80 81       	ld	r24, Z
    4de4:	8a 31       	cpi	r24, 0x1A	; 26
    4de6:	21 f0       	breq	.+8      	; 0x4df0 <TMR_SR_addTagOp+0x35e>
    4de8:	87 34       	cpi	r24, 0x47	; 71
    4dea:	09 f4       	brne	.+2      	; 0x4dee <TMR_SR_addTagOp+0x35c>
    4dec:	9b c0       	rjmp	.+310    	; 0x4f24 <TMR_SR_addTagOp+0x492>
    4dee:	9e c3       	rjmp	.+1852   	; 0x552c <TMR_SR_addTagOp+0xa9a>
        TMR_TagOp_GEN2_SecureReadData *args;
        uint8_t accessPassword[4];
        int index = 0;

        /* Enable the Secure ReadData option */
        isSecureAccessEnabled = true;
    4df0:	81 e0       	ldi	r24, 0x01	; 1
    4df2:	80 93 5d 02 	sts	0x025D, r24	; 0x80025d <isSecureAccessEnabled>

        args = &rp->u.simple.tagop->u.gen2.u.secureReadData;
    4df6:	d1 01       	movw	r26, r2
    4df8:	1f 96       	adiw	r26, 0x0f	; 15
    4dfa:	0d 90       	ld	r0, X+
    4dfc:	bc 91       	ld	r27, X
    4dfe:	a0 2d       	mov	r26, r0
    4e00:	c3 5f       	subi	r28, 0xF3	; 243
    4e02:	de 4f       	sbci	r29, 0xFE	; 254
    4e04:	b9 83       	std	Y+1, r27	; 0x01
    4e06:	a8 83       	st	Y, r26
    4e08:	cd 50       	subi	r28, 0x0D	; 13
    4e0a:	d1 40       	sbci	r29, 0x01	; 1
        if (args->passwordType == TMR_SECURE_GEN2_LOOKUP_TABLE_PASSWORD)
    4e0c:	18 96       	adiw	r26, 0x08	; 8
    4e0e:	8c 91       	ld	r24, X
    4e10:	18 97       	sbiw	r26, 0x08	; 8
    4e12:	82 30       	cpi	r24, 0x02	; 2
    4e14:	89 f5       	brne	.+98     	; 0x4e78 <TMR_SR_addTagOp+0x3e6>
        {
          /* Do this in case of look up table */
          accessPassword[index++] = args->password.secureAddressLength;
    4e16:	94 96       	adiw	r26, 0x24	; 36
    4e18:	8c 90       	ld	r8, X
    4e1a:	94 97       	sbiw	r26, 0x24	; 36
          accessPassword[index++] = args->password.secureAddressOffset;
    4e1c:	95 96       	adiw	r26, 0x25	; 37
    4e1e:	9c 91       	ld	r25, X
    4e20:	95 97       	sbiw	r26, 0x25	; 37
          accessPassword[index++] = (args->password.secureFlashOffset >> 8);
    4e22:	96 96       	adiw	r26, 0x26	; 38
    4e24:	2c 91       	ld	r18, X
    4e26:	96 97       	sbiw	r26, 0x26	; 38
    4e28:	97 96       	adiw	r26, 0x27	; 39
    4e2a:	4c 91       	ld	r20, X
          accessPassword[index++] = (args->password.secureFlashOffset & 0xFF);

          sr->gen2AccessPassword = (uint32_t)accessPassword[0] << 24 |
    4e2c:	91 2c       	mov	r9, r1
    4e2e:	a1 2c       	mov	r10, r1
    4e30:	b1 2c       	mov	r11, r1
    4e32:	b8 2c       	mov	r11, r8
    4e34:	aa 24       	eor	r10, r10
    4e36:	99 24       	eor	r9, r9
    4e38:	88 24       	eor	r8, r8
            (uint32_t)accessPassword[1] << 16 |
    4e3a:	89 2f       	mov	r24, r25
    4e3c:	90 e0       	ldi	r25, 0x00	; 0
    4e3e:	a0 e0       	ldi	r26, 0x00	; 0
    4e40:	b0 e0       	ldi	r27, 0x00	; 0
    4e42:	dc 01       	movw	r26, r24
    4e44:	99 27       	eor	r25, r25
    4e46:	88 27       	eor	r24, r24
          accessPassword[index++] = args->password.secureAddressLength;
          accessPassword[index++] = args->password.secureAddressOffset;
          accessPassword[index++] = (args->password.secureFlashOffset >> 8);
          accessPassword[index++] = (args->password.secureFlashOffset & 0xFF);

          sr->gen2AccessPassword = (uint32_t)accessPassword[0] << 24 |
    4e48:	88 29       	or	r24, r8
    4e4a:	99 29       	or	r25, r9
    4e4c:	aa 29       	or	r26, r10
    4e4e:	bb 29       	or	r27, r11
            (uint32_t)accessPassword[1] << 16 |
            (uint32_t)accessPassword[2] << 8  |
    4e50:	50 e0       	ldi	r21, 0x00	; 0
    4e52:	60 e0       	ldi	r22, 0x00	; 0
    4e54:	70 e0       	ldi	r23, 0x00	; 0
    4e56:	76 2f       	mov	r23, r22
    4e58:	65 2f       	mov	r22, r21
    4e5a:	54 2f       	mov	r21, r20
    4e5c:	44 27       	eor	r20, r20
          accessPassword[index++] = args->password.secureAddressOffset;
          accessPassword[index++] = (args->password.secureFlashOffset >> 8);
          accessPassword[index++] = (args->password.secureFlashOffset & 0xFF);

          sr->gen2AccessPassword = (uint32_t)accessPassword[0] << 24 |
            (uint32_t)accessPassword[1] << 16 |
    4e5e:	84 2b       	or	r24, r20
    4e60:	95 2b       	or	r25, r21
    4e62:	a6 2b       	or	r26, r22
    4e64:	b7 2b       	or	r27, r23
            (uint32_t)accessPassword[2] << 8  |
    4e66:	82 2b       	or	r24, r18
          accessPassword[index++] = args->password.secureAddressLength;
          accessPassword[index++] = args->password.secureAddressOffset;
          accessPassword[index++] = (args->password.secureFlashOffset >> 8);
          accessPassword[index++] = (args->password.secureFlashOffset & 0xFF);

          sr->gen2AccessPassword = (uint32_t)accessPassword[0] << 24 |
    4e68:	f3 01       	movw	r30, r6
    4e6a:	e8 52       	subi	r30, 0x28	; 40
    4e6c:	fe 4f       	sbci	r31, 0xFE	; 254
    4e6e:	80 83       	st	Z, r24
    4e70:	91 83       	std	Z+1, r25	; 0x01
    4e72:	a2 83       	std	Z+2, r26	; 0x02
    4e74:	b3 83       	std	Z+3, r27	; 0x03
    4e76:	11 c0       	rjmp	.+34     	; 0x4e9a <TMR_SR_addTagOp+0x408>
            (uint32_t)accessPassword[3];
        }
        else
        {
          /* Do this in case of Gen2 password */
          sr->gen2AccessPassword = args->password.gen2PassWord.u.gen2Password;
    4e78:	c3 5f       	subi	r28, 0xF3	; 243
    4e7a:	de 4f       	sbci	r29, 0xFE	; 254
    4e7c:	e8 81       	ld	r30, Y
    4e7e:	f9 81       	ldd	r31, Y+1	; 0x01
    4e80:	cd 50       	subi	r28, 0x0D	; 13
    4e82:	d1 40       	sbci	r29, 0x01	; 1
    4e84:	82 85       	ldd	r24, Z+10	; 0x0a
    4e86:	93 85       	ldd	r25, Z+11	; 0x0b
    4e88:	a4 85       	ldd	r26, Z+12	; 0x0c
    4e8a:	b5 85       	ldd	r27, Z+13	; 0x0d
    4e8c:	f3 01       	movw	r30, r6
    4e8e:	e8 52       	subi	r30, 0x28	; 40
    4e90:	fe 4f       	sbci	r31, 0xFE	; 254
    4e92:	80 83       	st	Z, r24
    4e94:	91 83       	std	Z+1, r25	; 0x01
    4e96:	a2 83       	std	Z+2, r26	; 0x02
    4e98:	b3 83       	std	Z+3, r27	; 0x03
        }

        ret = prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_CONFIGURED_LIST
    4e9a:	f3 01       	movw	r30, r6
    4e9c:	e8 52       	subi	r30, 0x28	; 40
    4e9e:	fe 4f       	sbci	r31, 0xFE	; 254
    4ea0:	80 80       	ld	r8, Z
    4ea2:	91 80       	ldd	r9, Z+1	; 0x01
    4ea4:	a2 80       	ldd	r10, Z+2	; 0x02
    4ea6:	b3 80       	ldd	r11, Z+3	; 0x03
    4ea8:	d1 01       	movw	r26, r2
    4eaa:	1c 96       	adiw	r26, 0x0c	; 12
    4eac:	cc 90       	ld	r12, X
    4eae:	1c 97       	sbiw	r26, 0x0c	; 12
            | TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND | TMR_SR_SEARCH_FLAG_LARGE_TAG_POPULATION_SUPPORT),
            rp->u.simple.filter, rp->u.simple.protocol, sr->gen2AccessPassword, &lenbyte);
    4eb0:	1d 96       	adiw	r26, 0x0d	; 13
    4eb2:	ed 90       	ld	r14, X+
    4eb4:	fc 90       	ld	r15, X
    4eb6:	1e 97       	sbiw	r26, 0x0e	; 14
        {
          /* Do this in case of Gen2 password */
          sr->gen2AccessPassword = args->password.gen2PassWord.u.gen2Password;
        }

        ret = prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_CONFIGURED_LIST
    4eb8:	ce 01       	movw	r24, r28
    4eba:	02 96       	adiw	r24, 0x02	; 2
    4ebc:	9f 93       	push	r25
    4ebe:	8f 93       	push	r24
    4ec0:	07 e1       	ldi	r16, 0x17	; 23
    4ec2:	10 e0       	ldi	r17, 0x00	; 0
    4ec4:	cd 5e       	subi	r28, 0xED	; 237
    4ec6:	de 4f       	sbci	r29, 0xFE	; 254
    4ec8:	28 81       	ld	r18, Y
    4eca:	39 81       	ldd	r19, Y+1	; 0x01
    4ecc:	c3 51       	subi	r28, 0x13	; 19
    4ece:	d1 40       	sbci	r29, 0x01	; 1
    4ed0:	ae 01       	movw	r20, r28
    4ed2:	4f 5f       	subi	r20, 0xFF	; 255
    4ed4:	5f 4f       	sbci	r21, 0xFF	; 255
    4ed6:	b2 01       	movw	r22, r4
    4ed8:	c3 01       	movw	r24, r6
    4eda:	0e 94 ef 04 	call	0x9de	; 0x9de <prepEmbReadTagMultiple>
    4ede:	c7 5f       	subi	r28, 0xF7	; 247
    4ee0:	de 4f       	sbci	r29, 0xFE	; 254
    4ee2:	68 83       	st	Y, r22
    4ee4:	79 83       	std	Y+1, r23	; 0x01
    4ee6:	8a 83       	std	Y+2, r24	; 0x02
    4ee8:	9b 83       	std	Y+3, r25	; 0x03
    4eea:	c9 50       	subi	r28, 0x09	; 9
    4eec:	d1 40       	sbci	r29, 0x01	; 1
            | TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND | TMR_SR_SEARCH_FLAG_LARGE_TAG_POPULATION_SUPPORT),
            rp->u.simple.filter, rp->u.simple.protocol, sr->gen2AccessPassword, &lenbyte);

        TMR_SR_msgAddGEN2DataRead(msg, &i, 2000, args->readData.bank, args->readData.wordAddress,
            args->readData.len,args->type, false);
    4eee:	c3 5f       	subi	r28, 0xF3	; 243
    4ef0:	de 4f       	sbci	r29, 0xFE	; 254
    4ef2:	e8 81       	ld	r30, Y
    4ef4:	f9 81       	ldd	r31, Y+1	; 0x01
    4ef6:	cd 50       	subi	r28, 0x0D	; 13
    4ef8:	d1 40       	sbci	r29, 0x01	; 1
    4efa:	a7 80       	ldd	r10, Z+7	; 0x07

        ret = prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_CONFIGURED_LIST
            | TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND | TMR_SR_SEARCH_FLAG_LARGE_TAG_POPULATION_SUPPORT),
            rp->u.simple.filter, rp->u.simple.protocol, sr->gen2AccessPassword, &lenbyte);

        TMR_SR_msgAddGEN2DataRead(msg, &i, 2000, args->readData.bank, args->readData.wordAddress,
    4efc:	e2 80       	ldd	r14, Z+2	; 0x02
    4efe:	f3 80       	ldd	r15, Z+3	; 0x03
    4f00:	04 81       	ldd	r16, Z+4	; 0x04
    4f02:	15 81       	ldd	r17, Z+5	; 0x05
    4f04:	81 2c       	mov	r8, r1
    4f06:	c6 80       	ldd	r12, Z+6	; 0x06
    4f08:	21 81       	ldd	r18, Z+1	; 0x01
    4f0a:	40 ed       	ldi	r20, 0xD0	; 208
    4f0c:	57 e0       	ldi	r21, 0x07	; 7
    4f0e:	be 01       	movw	r22, r28
    4f10:	6f 5f       	subi	r22, 0xFF	; 255
    4f12:	7f 4f       	sbci	r23, 0xFF	; 255
    4f14:	c2 01       	movw	r24, r4
    4f16:	0e 94 c0 3d 	call	0x7b80	; 0x7b80 <TMR_SR_msgAddGEN2DataRead>
            args->readData.len,args->type, false);

				isSecureAccessEnabled = false;
    4f1a:	10 92 5d 02 	sts	0x025D, r1	; 0x80025d <isSecureAccessEnabled>
    4f1e:	0f 90       	pop	r0
    4f20:	0f 90       	pop	r0
    4f22:	df c2       	rjmp	.+1470   	; 0x54e2 <TMR_SR_addTagOp+0xa50>
        break;
      }
#endif /* TMR_ENABLE_GEN2_CUSTOM_TAGOPS */
    case TMR_TAGOP_LIST:
      {
        if(tagop->u.list.len == 1)
    4f24:	c3 5f       	subi	r28, 0xF3	; 243
    4f26:	de 4f       	sbci	r29, 0xFE	; 254
    4f28:	a8 81       	ld	r26, Y
    4f2a:	b9 81       	ldd	r27, Y+1	; 0x01
    4f2c:	cd 50       	subi	r28, 0x0D	; 13
    4f2e:	d1 40       	sbci	r29, 0x01	; 1
    4f30:	13 96       	adiw	r26, 0x03	; 3
    4f32:	8d 91       	ld	r24, X+
    4f34:	9c 91       	ld	r25, X
    4f36:	14 97       	sbiw	r26, 0x04	; 4
    4f38:	81 30       	cpi	r24, 0x01	; 1
    4f3a:	91 05       	cpc	r25, r1
    4f3c:	f9 f4       	brne	.+62     	; 0x4f7c <TMR_SR_addTagOp+0x4ea>
        {
          TMR_TagOp *op;
          op = tagop->u.list.list[0];
    4f3e:	11 96       	adiw	r26, 0x01	; 1
    4f40:	ed 91       	ld	r30, X+
    4f42:	fc 91       	ld	r31, X
    4f44:	12 97       	sbiw	r26, 0x02	; 2
    4f46:	60 81       	ld	r22, Z
    4f48:	71 81       	ldd	r23, Z+1	; 0x01
          return TMR_SR_addTagOp(reader, op, rp, msg, j, readTimeMs, byte);
    4f4a:	cf 5e       	subi	r28, 0xEF	; 239
    4f4c:	de 4f       	sbci	r29, 0xFE	; 254
    4f4e:	a8 80       	ld	r10, Y
    4f50:	b9 80       	ldd	r11, Y+1	; 0x01
    4f52:	c1 51       	subi	r28, 0x11	; 17
    4f54:	d1 40       	sbci	r29, 0x01	; 1
    4f56:	cd 5e       	subi	r28, 0xED	; 237
    4f58:	de 4f       	sbci	r29, 0xFE	; 254
    4f5a:	c8 80       	ld	r12, Y
    4f5c:	d9 80       	ldd	r13, Y+1	; 0x01
    4f5e:	ea 80       	ldd	r14, Y+2	; 0x02
    4f60:	fb 80       	ldd	r15, Y+3	; 0x03
    4f62:	c3 51       	subi	r28, 0x13	; 19
    4f64:	d1 40       	sbci	r29, 0x01	; 1
    4f66:	c1 5f       	subi	r28, 0xF1	; 241
    4f68:	de 4f       	sbci	r29, 0xFE	; 254
    4f6a:	08 81       	ld	r16, Y
    4f6c:	19 81       	ldd	r17, Y+1	; 0x01
    4f6e:	cf 50       	subi	r28, 0x0F	; 15
    4f70:	d1 40       	sbci	r29, 0x01	; 1
    4f72:	92 01       	movw	r18, r4
    4f74:	a1 01       	movw	r20, r2
    4f76:	c3 01       	movw	r24, r6
    4f78:	8c dd       	rcall	.-1256   	; 0x4a92 <TMR_SR_addTagOp>
    4f7a:	f0 c2       	rjmp	.+1504   	; 0x555c <TMR_SR_addTagOp+0xaca>
        }
        else if (tagop->u.list.len == 2)
    4f7c:	02 97       	sbiw	r24, 0x02	; 2
    4f7e:	09 f0       	breq	.+2      	; 0x4f82 <TMR_SR_addTagOp+0x4f0>
    4f80:	da c2       	rjmp	.+1460   	; 0x5536 <TMR_SR_addTagOp+0xaa4>
        {
          if (TMR_TAGOP_GEN2_READDATA == tagop->u.list.list[1]->type)
    4f82:	c3 5f       	subi	r28, 0xF3	; 243
    4f84:	de 4f       	sbci	r29, 0xFE	; 254
    4f86:	a8 81       	ld	r26, Y
    4f88:	b9 81       	ldd	r27, Y+1	; 0x01
    4f8a:	cd 50       	subi	r28, 0x0D	; 13
    4f8c:	d1 40       	sbci	r29, 0x01	; 1
    4f8e:	11 96       	adiw	r26, 0x01	; 1
    4f90:	ed 91       	ld	r30, X+
    4f92:	fc 91       	ld	r31, X
    4f94:	12 97       	sbiw	r26, 0x02	; 2
    4f96:	a2 81       	ldd	r26, Z+2	; 0x02
    4f98:	b3 81       	ldd	r27, Z+3	; 0x03
    4f9a:	8c 91       	ld	r24, X
    4f9c:	81 30       	cpi	r24, 0x01	; 1
    4f9e:	09 f0       	breq	.+2      	; 0x4fa2 <TMR_SR_addTagOp+0x510>
    4fa0:	cf c2       	rjmp	.+1438   	; 0x5540 <TMR_SR_addTagOp+0xaae>
          {
            if((TMR_TAGOP_GEN2_WRITEDATA == tagop->u.list.list[0]->type) || (TMR_TAGOP_GEN2_WRITETAG == tagop->u.list.list[0]->type))
    4fa2:	01 90       	ld	r0, Z+
    4fa4:	f0 81       	ld	r31, Z
    4fa6:	e0 2d       	mov	r30, r0
    4fa8:	80 81       	ld	r24, Z
    4faa:	82 30       	cpi	r24, 0x02	; 2
    4fac:	11 f0       	breq	.+4      	; 0x4fb2 <TMR_SR_addTagOp+0x520>
    4fae:	81 11       	cpse	r24, r1
    4fb0:	cc c2       	rjmp	.+1432   	; 0x554a <TMR_SR_addTagOp+0xab8>
            {
              TMR_TagOp_GEN2_ReadData readData;
              TMR_TagOp *readOp, *writeOp;
              
              reader->isReadAfterWrite = true;
    4fb2:	f3 01       	movw	r30, r6
    4fb4:	e3 5f       	subi	r30, 0xF3	; 243
    4fb6:	f9 4f       	sbci	r31, 0xF9	; 249
    4fb8:	81 e0       	ldi	r24, 0x01	; 1
    4fba:	80 83       	st	Z, r24
              writeOp = tagop->u.list.list[0];
    4fbc:	c3 5f       	subi	r28, 0xF3	; 243
    4fbe:	de 4f       	sbci	r29, 0xFE	; 254
    4fc0:	a8 81       	ld	r26, Y
    4fc2:	b9 81       	ldd	r27, Y+1	; 0x01
    4fc4:	cd 50       	subi	r28, 0x0D	; 13
    4fc6:	d1 40       	sbci	r29, 0x01	; 1
    4fc8:	11 96       	adiw	r26, 0x01	; 1
    4fca:	ed 91       	ld	r30, X+
    4fcc:	fc 91       	ld	r31, X
    4fce:	12 97       	sbiw	r26, 0x02	; 2
    4fd0:	80 81       	ld	r24, Z
    4fd2:	91 81       	ldd	r25, Z+1	; 0x01
    4fd4:	c9 5e       	subi	r28, 0xE9	; 233
    4fd6:	de 4f       	sbci	r29, 0xFE	; 254
    4fd8:	99 83       	std	Y+1, r25	; 0x01
    4fda:	88 83       	st	Y, r24
    4fdc:	c7 51       	subi	r28, 0x17	; 23
    4fde:	d1 40       	sbci	r29, 0x01	; 1
              readOp = tagop->u.list.list[1];
    4fe0:	02 80       	ldd	r0, Z+2	; 0x02
    4fe2:	f3 81       	ldd	r31, Z+3	; 0x03
    4fe4:	e0 2d       	mov	r30, r0
              readData = readOp->u.gen2.u.readData;
    4fe6:	86 e0       	ldi	r24, 0x06	; 6
    4fe8:	31 96       	adiw	r30, 0x01	; 1
    4fea:	de 01       	movw	r26, r28
    4fec:	ae 5f       	subi	r26, 0xFE	; 254
    4fee:	be 4f       	sbci	r27, 0xFE	; 254
    4ff0:	01 90       	ld	r0, Z+
    4ff2:	0d 92       	st	X+, r0
    4ff4:	8a 95       	dec	r24
    4ff6:	e1 f7       	brne	.-8      	; 0x4ff0 <TMR_SR_addTagOp+0x55e>

              prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_CONFIGURED_LIST
                                      | TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND|TMR_SR_SEARCH_FLAG_LARGE_TAG_POPULATION_SUPPORT),
                                      rp->u.simple.filter, rp->u.simple.protocol, sr->gen2AccessPassword, &lenbyte);
    4ff8:	d1 01       	movw	r26, r2
    4ffa:	1d 96       	adiw	r26, 0x0d	; 13
    4ffc:	ed 90       	ld	r14, X+
    4ffe:	fc 90       	ld	r15, X
    5000:	1e 97       	sbiw	r26, 0x0e	; 14
              reader->isReadAfterWrite = true;
              writeOp = tagop->u.list.list[0];
              readOp = tagop->u.list.list[1];
              readData = readOp->u.gen2.u.readData;

              prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_CONFIGURED_LIST
    5002:	f3 01       	movw	r30, r6
    5004:	e8 52       	subi	r30, 0x28	; 40
    5006:	fe 4f       	sbci	r31, 0xFE	; 254
    5008:	80 80       	ld	r8, Z
    500a:	91 80       	ldd	r9, Z+1	; 0x01
    500c:	a2 80       	ldd	r10, Z+2	; 0x02
    500e:	b3 80       	ldd	r11, Z+3	; 0x03
    5010:	ce 01       	movw	r24, r28
    5012:	02 96       	adiw	r24, 0x02	; 2
    5014:	9f 93       	push	r25
    5016:	8f 93       	push	r24
    5018:	1c 96       	adiw	r26, 0x0c	; 12
    501a:	cc 90       	ld	r12, X
    501c:	07 e1       	ldi	r16, 0x17	; 23
    501e:	10 e0       	ldi	r17, 0x00	; 0
    5020:	cd 5e       	subi	r28, 0xED	; 237
    5022:	de 4f       	sbci	r29, 0xFE	; 254
    5024:	28 81       	ld	r18, Y
    5026:	39 81       	ldd	r19, Y+1	; 0x01
    5028:	c3 51       	subi	r28, 0x13	; 19
    502a:	d1 40       	sbci	r29, 0x01	; 1
    502c:	ae 01       	movw	r20, r28
    502e:	4f 5f       	subi	r20, 0xFF	; 255
    5030:	5f 4f       	sbci	r21, 0xFF	; 255
    5032:	b2 01       	movw	r22, r4
    5034:	c3 01       	movw	r24, r6
    5036:	0e 94 ef 04 	call	0x9de	; 0x9de <prepEmbReadTagMultiple>
                                      | TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND|TMR_SR_SEARCH_FLAG_LARGE_TAG_POPULATION_SUPPORT),
                                      rp->u.simple.filter, rp->u.simple.protocol, sr->gen2AccessPassword, &lenbyte);

              switch (tagop->u.list.list[0]->type)
    503a:	c3 5f       	subi	r28, 0xF3	; 243
    503c:	de 4f       	sbci	r29, 0xFE	; 254
    503e:	a8 81       	ld	r26, Y
    5040:	b9 81       	ldd	r27, Y+1	; 0x01
    5042:	cd 50       	subi	r28, 0x0D	; 13
    5044:	d1 40       	sbci	r29, 0x01	; 1
    5046:	11 96       	adiw	r26, 0x01	; 1
    5048:	ed 91       	ld	r30, X+
    504a:	fc 91       	ld	r31, X
    504c:	12 97       	sbiw	r26, 0x02	; 2
    504e:	01 90       	ld	r0, Z+
    5050:	f0 81       	ld	r31, Z
    5052:	e0 2d       	mov	r30, r0
    5054:	80 81       	ld	r24, Z
    5056:	0f 90       	pop	r0
    5058:	0f 90       	pop	r0
    505a:	88 23       	and	r24, r24
    505c:	09 f4       	brne	.+2      	; 0x5060 <TMR_SR_addTagOp+0x5ce>
    505e:	45 c0       	rjmp	.+138    	; 0x50ea <TMR_SR_addTagOp+0x658>
    5060:	82 30       	cpi	r24, 0x02	; 2
    5062:	09 f0       	breq	.+2      	; 0x5066 <TMR_SR_addTagOp+0x5d4>
    5064:	52 c0       	rjmp	.+164    	; 0x510a <TMR_SR_addTagOp+0x678>
                case TMR_TAGOP_GEN2_WRITEDATA:
                {
                  TMR_TagOp_GEN2_WriteData writeData;
                  int idx;

                  writeData = writeOp->u.gen2.u.writeData;
    5066:	8b e0       	ldi	r24, 0x0B	; 11
    5068:	c9 5e       	subi	r28, 0xE9	; 233
    506a:	de 4f       	sbci	r29, 0xFE	; 254
    506c:	e8 81       	ld	r30, Y
    506e:	f9 81       	ldd	r31, Y+1	; 0x01
    5070:	c7 51       	subi	r28, 0x17	; 23
    5072:	d1 40       	sbci	r29, 0x01	; 1
    5074:	31 96       	adiw	r30, 0x01	; 1
    5076:	de 01       	movw	r26, r28
    5078:	13 96       	adiw	r26, 0x03	; 3
    507a:	01 90       	ld	r0, Z+
    507c:	0d 92       	st	X+, r0
    507e:	8a 95       	dec	r24
    5080:	e1 f7       	brne	.-8      	; 0x507a <TMR_SR_addTagOp+0x5e8>
                  TMR_SR_msgAddGEN2DataWrite(msg, &i, (uint16_t)readTimeMs, writeData.bank, writeData.wordAddress, false);
    5082:	ec 80       	ldd	r14, Y+4	; 0x04
    5084:	fd 80       	ldd	r15, Y+5	; 0x05
    5086:	0e 81       	ldd	r16, Y+6	; 0x06
    5088:	1f 81       	ldd	r17, Y+7	; 0x07
    508a:	c1 2c       	mov	r12, r1
    508c:	2b 81       	ldd	r18, Y+3	; 0x03
    508e:	cd 5e       	subi	r28, 0xED	; 237
    5090:	de 4f       	sbci	r29, 0xFE	; 254
    5092:	48 81       	ld	r20, Y
    5094:	59 81       	ldd	r21, Y+1	; 0x01
    5096:	c3 51       	subi	r28, 0x13	; 19
    5098:	d1 40       	sbci	r29, 0x01	; 1
    509a:	be 01       	movw	r22, r28
    509c:	6f 5f       	subi	r22, 0xFF	; 255
    509e:	7f 4f       	sbci	r23, 0xFF	; 255
    50a0:	c2 01       	movw	r24, r4
    50a2:	0e 94 69 3e 	call	0x7cd2	; 0x7cd2 <TMR_SR_msgAddGEN2DataWrite>

                  for(idx = 0 ; idx< writeData.data.len; idx++)
    50a6:	20 e0       	ldi	r18, 0x00	; 0
    50a8:	30 e0       	ldi	r19, 0x00	; 0
    50aa:	19 c0       	rjmp	.+50     	; 0x50de <TMR_SR_addTagOp+0x64c>
                  {
                    msg[i++]= (writeData.data.list[idx]>>8) & 0xFF;
    50ac:	89 81       	ldd	r24, Y+1	; 0x01
    50ae:	41 e0       	ldi	r20, 0x01	; 1
    50b0:	48 0f       	add	r20, r24
    50b2:	d2 01       	movw	r26, r4
    50b4:	a8 0f       	add	r26, r24
    50b6:	b1 1d       	adc	r27, r1
    50b8:	e8 85       	ldd	r30, Y+8	; 0x08
    50ba:	f9 85       	ldd	r31, Y+9	; 0x09
    50bc:	c9 01       	movw	r24, r18
    50be:	88 0f       	add	r24, r24
    50c0:	99 1f       	adc	r25, r25
    50c2:	e8 0f       	add	r30, r24
    50c4:	f9 1f       	adc	r31, r25
    50c6:	81 81       	ldd	r24, Z+1	; 0x01
    50c8:	8c 93       	st	X, r24
                    msg[i++]= (writeData.data.list[idx]>>0) & 0xFF;
    50ca:	81 e0       	ldi	r24, 0x01	; 1
    50cc:	84 0f       	add	r24, r20
    50ce:	89 83       	std	Y+1, r24	; 0x01
    50d0:	d2 01       	movw	r26, r4
    50d2:	a4 0f       	add	r26, r20
    50d4:	b1 1d       	adc	r27, r1
    50d6:	80 81       	ld	r24, Z
    50d8:	8c 93       	st	X, r24
                  int idx;

                  writeData = writeOp->u.gen2.u.writeData;
                  TMR_SR_msgAddGEN2DataWrite(msg, &i, (uint16_t)readTimeMs, writeData.bank, writeData.wordAddress, false);

                  for(idx = 0 ; idx< writeData.data.len; idx++)
    50da:	2f 5f       	subi	r18, 0xFF	; 255
    50dc:	3f 4f       	sbci	r19, 0xFF	; 255
    50de:	8c 85       	ldd	r24, Y+12	; 0x0c
    50e0:	9d 85       	ldd	r25, Y+13	; 0x0d
    50e2:	28 17       	cp	r18, r24
    50e4:	39 07       	cpc	r19, r25
    50e6:	10 f3       	brcs	.-60     	; 0x50ac <TMR_SR_addTagOp+0x61a>
    50e8:	10 c0       	rjmp	.+32     	; 0x510a <TMR_SR_addTagOp+0x678>
                case TMR_TAGOP_GEN2_WRITETAG:
                {
                  TMR_TagOp_GEN2_WriteTag writeTag;
                  writeOp = tagop->u.list.list[0];

                  writeTag = writeOp->u.gen2.u.writeTag;
    50ea:	21 81       	ldd	r18, Z+1	; 0x01
    50ec:	32 81       	ldd	r19, Z+2	; 0x02
                  TMR_SR_msgAddGEN2WriteTagEPC(msg, &i, (uint16_t)readTimeMs, writeTag.epcptr->epc, writeTag.epcptr->epcByteCount);
    50ee:	f9 01       	movw	r30, r18
    50f0:	07 ad       	ldd	r16, Z+63	; 0x3f
    50f2:	cd 5e       	subi	r28, 0xED	; 237
    50f4:	de 4f       	sbci	r29, 0xFE	; 254
    50f6:	48 81       	ld	r20, Y
    50f8:	59 81       	ldd	r21, Y+1	; 0x01
    50fa:	c3 51       	subi	r28, 0x13	; 19
    50fc:	d1 40       	sbci	r29, 0x01	; 1
    50fe:	be 01       	movw	r22, r28
    5100:	6f 5f       	subi	r22, 0xFF	; 255
    5102:	7f 4f       	sbci	r23, 0xFF	; 255
    5104:	c2 01       	movw	r24, r4
    5106:	0e 94 68 3d 	call	0x7ad0	; 0x7ad0 <TMR_SR_msgAddGEN2WriteTagEPC>
                break;
                default:
                  break;
              }

              SETU8(msg, i, readData.bank);
    510a:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    510e:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    5112:	01 96       	adiw	r24, 0x01	; 1
    5114:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    5118:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    511c:	89 81       	ldd	r24, Y+1	; 0x01
    511e:	21 e0       	ldi	r18, 0x01	; 1
    5120:	28 0f       	add	r18, r24
    5122:	f2 01       	movw	r30, r4
    5124:	e8 0f       	add	r30, r24
    5126:	f1 1d       	adc	r31, r1
    5128:	ce 5f       	subi	r28, 0xFE	; 254
    512a:	de 4f       	sbci	r29, 0xFE	; 254
    512c:	88 81       	ld	r24, Y
    512e:	c2 50       	subi	r28, 0x02	; 2
    5130:	d1 40       	sbci	r29, 0x01	; 1
    5132:	80 83       	st	Z, r24
              SETU32(msg, i, readData.wordAddress);
    5134:	cd 5f       	subi	r28, 0xFD	; 253
    5136:	de 4f       	sbci	r29, 0xFE	; 254
    5138:	38 81       	ld	r19, Y
    513a:	c3 50       	subi	r28, 0x03	; 3
    513c:	d1 40       	sbci	r29, 0x01	; 1
    513e:	cc 5f       	subi	r28, 0xFC	; 252
    5140:	de 4f       	sbci	r29, 0xFE	; 254
    5142:	48 81       	ld	r20, Y
    5144:	c4 50       	subi	r28, 0x04	; 4
    5146:	d1 40       	sbci	r29, 0x01	; 1
    5148:	cb 5f       	subi	r28, 0xFB	; 251
    514a:	de 4f       	sbci	r29, 0xFE	; 254
    514c:	58 81       	ld	r21, Y
    514e:	c5 50       	subi	r28, 0x05	; 5
    5150:	d1 40       	sbci	r29, 0x01	; 1
    5152:	ca 5f       	subi	r28, 0xFA	; 250
    5154:	de 4f       	sbci	r29, 0xFE	; 254
    5156:	68 81       	ld	r22, Y
    5158:	c6 50       	subi	r28, 0x06	; 6
    515a:	d1 40       	sbci	r29, 0x01	; 1
    515c:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    5160:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    5164:	04 96       	adiw	r24, 0x04	; 4
    5166:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    516a:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    516e:	81 e0       	ldi	r24, 0x01	; 1
    5170:	82 0f       	add	r24, r18
    5172:	f2 01       	movw	r30, r4
    5174:	e2 0f       	add	r30, r18
    5176:	f1 1d       	adc	r31, r1
    5178:	60 83       	st	Z, r22
    517a:	91 e0       	ldi	r25, 0x01	; 1
    517c:	98 0f       	add	r25, r24
    517e:	f2 01       	movw	r30, r4
    5180:	e8 0f       	add	r30, r24
    5182:	f1 1d       	adc	r31, r1
    5184:	50 83       	st	Z, r21
    5186:	81 e0       	ldi	r24, 0x01	; 1
    5188:	89 0f       	add	r24, r25
    518a:	f2 01       	movw	r30, r4
    518c:	e9 0f       	add	r30, r25
    518e:	f1 1d       	adc	r31, r1
    5190:	40 83       	st	Z, r20
    5192:	21 e0       	ldi	r18, 0x01	; 1
    5194:	28 0f       	add	r18, r24
    5196:	f2 01       	movw	r30, r4
    5198:	e8 0f       	add	r30, r24
    519a:	f1 1d       	adc	r31, r1
    519c:	30 83       	st	Z, r19
              SETU8(msg, i, readData.len);
    519e:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    51a2:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    51a6:	01 96       	adiw	r24, 0x01	; 1
    51a8:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    51ac:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    51b0:	81 e0       	ldi	r24, 0x01	; 1
    51b2:	82 0f       	add	r24, r18
    51b4:	89 83       	std	Y+1, r24	; 0x01
    51b6:	f2 01       	movw	r30, r4
    51b8:	e2 0f       	add	r30, r18
    51ba:	f1 1d       	adc	r31, r1
    51bc:	c9 5f       	subi	r28, 0xF9	; 249
    51be:	de 4f       	sbci	r29, 0xFE	; 254
    51c0:	88 81       	ld	r24, Y
    51c2:	c7 50       	subi	r28, 0x07	; 7
    51c4:	d1 40       	sbci	r29, 0x01	; 1
    51c6:	80 83       	st	Z, r24
    51c8:	8c c1       	rjmp	.+792    	; 0x54e2 <TMR_SR_addTagOp+0xa50>
  }
  else
#endif /* TMR_ENABLE_UHF */
  {
#ifdef TMR_ENABLE_HF_LF
    ret = prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND),
    51ca:	da 01       	movw	r26, r20
    51cc:	1c 96       	adiw	r26, 0x0c	; 12
    51ce:	cc 90       	ld	r12, X
    51d0:	1c 97       	sbiw	r26, 0x0c	; 12
                                   rp->u.simple.filter, rp->u.simple.protocol, 0, &lenbyte);
    51d2:	1d 96       	adiw	r26, 0x0d	; 13
    51d4:	ed 90       	ld	r14, X+
    51d6:	fc 90       	ld	r15, X
    51d8:	1e 97       	sbiw	r26, 0x0e	; 14
  }
  else
#endif /* TMR_ENABLE_UHF */
  {
#ifdef TMR_ENABLE_HF_LF
    ret = prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND),
    51da:	ce 01       	movw	r24, r28
    51dc:	02 96       	adiw	r24, 0x02	; 2
    51de:	9f 93       	push	r25
    51e0:	8f 93       	push	r24
    51e2:	81 2c       	mov	r8, r1
    51e4:	91 2c       	mov	r9, r1
    51e6:	54 01       	movw	r10, r8
    51e8:	04 e0       	ldi	r16, 0x04	; 4
    51ea:	10 e0       	ldi	r17, 0x00	; 0
    51ec:	cd 5e       	subi	r28, 0xED	; 237
    51ee:	de 4f       	sbci	r29, 0xFE	; 254
    51f0:	28 81       	ld	r18, Y
    51f2:	39 81       	ldd	r19, Y+1	; 0x01
    51f4:	c3 51       	subi	r28, 0x13	; 19
    51f6:	d1 40       	sbci	r29, 0x01	; 1
    51f8:	ae 01       	movw	r20, r28
    51fa:	4f 5f       	subi	r20, 0xFF	; 255
    51fc:	5f 4f       	sbci	r21, 0xFF	; 255
    51fe:	b2 01       	movw	r22, r4
    5200:	c3 01       	movw	r24, r6
    5202:	0e 94 ef 04 	call	0x9de	; 0x9de <prepEmbReadTagMultiple>
                                   rp->u.simple.filter, rp->u.simple.protocol, 0, &lenbyte);

    //Check for address byte extension flag.
    isAddrByteExtended = reader->featureFlags & TMR_READER_FEATURES_FLAG_ADDR_BYTE_EXTENSION;
    5206:	f3 01       	movw	r30, r6
    5208:	e5 5e       	subi	r30, 0xE5	; 229
    520a:	f9 4f       	sbci	r31, 0xF9	; 249
    520c:	90 81       	ld	r25, Z
    520e:	81 e0       	ldi	r24, 0x01	; 1
    5210:	0f 90       	pop	r0
    5212:	0f 90       	pop	r0
    5214:	90 ff       	sbrs	r25, 0
    5216:	80 e0       	ldi	r24, 0x00	; 0
    5218:	80 93 59 02 	sts	0x0259, r24	; 0x800259 <isAddrByteExtended>

    switch(tagop->type)
    521c:	c3 5f       	subi	r28, 0xF3	; 243
    521e:	de 4f       	sbci	r29, 0xFE	; 254
    5220:	e8 81       	ld	r30, Y
    5222:	f9 81       	ldd	r31, Y+1	; 0x01
    5224:	cd 50       	subi	r28, 0x0D	; 13
    5226:	d1 40       	sbci	r29, 0x01	; 1
    5228:	80 81       	ld	r24, Z
    522a:	88 34       	cpi	r24, 0x48	; 72
    522c:	09 f4       	brne	.+2      	; 0x5230 <TMR_SR_addTagOp+0x79e>
    522e:	9c c0       	rjmp	.+312    	; 0x5368 <TMR_SR_addTagOp+0x8d6>
    5230:	89 34       	cpi	r24, 0x49	; 73
    5232:	09 f0       	breq	.+2      	; 0x5236 <TMR_SR_addTagOp+0x7a4>
    5234:	8f c1       	rjmp	.+798    	; 0x5554 <TMR_SR_addTagOp+0xac2>
    {
      case TMR_TAGOP_READ_MEMORY:
        {
          uint8_t optbyte = i + 3;
    5236:	89 81       	ldd	r24, Y+1	; 0x01
    5238:	8d 5f       	subi	r24, 0xFD	; 253
    523a:	c8 5f       	subi	r28, 0xF8	; 248
    523c:	de 4f       	sbci	r29, 0xFE	; 254
    523e:	88 83       	st	Y, r24
    5240:	c8 50       	subi	r28, 0x08	; 8
    5242:	d1 40       	sbci	r29, 0x01	; 1
#if TMR_ENABLE_EXTENDED_TAGOPS
          uint8_t extParamsData[255];
          TMR_uint8List tagOpExtParams;
#endif /* TMR_ENABLE_EXTENDED_TAGOPS */

          args = &rp->u.simple.tagop->u.extTagOp;
    5244:	d1 01       	movw	r26, r2
    5246:	1f 96       	adiw	r26, 0x0f	; 15
    5248:	6d 90       	ld	r6, X+
    524a:	7c 90       	ld	r7, X
    524c:	50 97       	sbiw	r26, 0x10	; 16
    524e:	c3 01       	movw	r24, r6
    5250:	01 96       	adiw	r24, 0x01	; 1
          readMemType = args->readMem.memType;
    5252:	f3 01       	movw	r30, r6
    5254:	23 85       	ldd	r18, Z+11	; 0x0b

#if TMR_ENABLE_EXTENDED_TAGOPS
          //Reset extended params buffer length.
          tagOpExtParams.len = 0;
    5256:	ca 5f       	subi	r28, 0xFA	; 250
    5258:	de 4f       	sbci	r29, 0xFE	; 254
    525a:	19 82       	std	Y+1, r1	; 0x01
    525c:	18 82       	st	Y, r1
    525e:	c6 50       	subi	r28, 0x06	; 6
    5260:	d1 40       	sbci	r29, 0x01	; 1

          if (TMR_TAGOP_EXT_TAG_MEMORY == args->readMem.memType)
    5262:	25 32       	cpi	r18, 0x25	; 37
    5264:	39 f5       	brne	.+78     	; 0x52b4 <TMR_SR_addTagOp+0x822>
          {
            readMemType = TMR_TAGOP_TAG_MEMORY;

            //Initialize extended params buffer.
            tagOpExtParams.list = extParamsData;
    5266:	9e 01       	movw	r18, r28
    5268:	2d 5f       	subi	r18, 0xFD	; 253
    526a:	3f 4f       	sbci	r19, 0xFF	; 255
    526c:	ce 5f       	subi	r28, 0xFE	; 254
    526e:	de 4f       	sbci	r29, 0xFE	; 254
    5270:	39 83       	std	Y+1, r19	; 0x01
    5272:	28 83       	st	Y, r18
    5274:	c2 50       	subi	r28, 0x02	; 2
    5276:	d1 40       	sbci	r29, 0x01	; 1
            tagOpExtParams.max = sizeof(extParamsData) / sizeof(extParamsData[0]);
    5278:	2f ef       	ldi	r18, 0xFF	; 255
    527a:	30 e0       	ldi	r19, 0x00	; 0
    527c:	cc 5f       	subi	r28, 0xFC	; 252
    527e:	de 4f       	sbci	r29, 0xFE	; 254
    5280:	39 83       	std	Y+1, r19	; 0x01
    5282:	28 83       	st	Y, r18
    5284:	c4 50       	subi	r28, 0x04	; 4
    5286:	d1 40       	sbci	r29, 0x01	; 1

            //Get the extended params for memory read.
            ret = getReadExtParams(args, &tagOpExtParams);
    5288:	be 01       	movw	r22, r28
    528a:	6e 5f       	subi	r22, 0xFE	; 254
    528c:	7e 4f       	sbci	r23, 0xFE	; 254
    528e:	5f d8       	rcall	.-3906   	; 0x434e <getReadExtParams>
    5290:	4b 01       	movw	r8, r22
    5292:	5c 01       	movw	r10, r24
            if (TMR_SUCCESS != ret)
    5294:	61 15       	cp	r22, r1
    5296:	71 05       	cpc	r23, r1
    5298:	81 05       	cpc	r24, r1
    529a:	91 05       	cpc	r25, r1
    529c:	09 f0       	breq	.+2      	; 0x52a0 <TMR_SR_addTagOp+0x80e>
    529e:	5b c0       	rjmp	.+182    	; 0x5356 <TMR_SR_addTagOp+0x8c4>
            {
              return ret;
            }

              //Validate filter. Tag-Type filter is mandatory.
            if (!isTagTypeFilterAvail(rp->u.simple.filter))
    52a0:	d1 01       	movw	r26, r2
    52a2:	1d 96       	adiw	r26, 0x0d	; 13
    52a4:	8d 91       	ld	r24, X+
    52a6:	9c 91       	ld	r25, X
    52a8:	1e 97       	sbiw	r26, 0x0e	; 14
    52aa:	c7 db       	rcall	.-2162   	; 0x4a3a <isTagTypeFilterAvail>
    52ac:	88 23       	and	r24, r24
    52ae:	09 f4       	brne	.+2      	; 0x52b2 <TMR_SR_addTagOp+0x820>
    52b0:	56 c0       	rjmp	.+172    	; 0x535e <TMR_SR_addTagOp+0x8cc>
          //Reset extended params buffer length.
          tagOpExtParams.len = 0;

          if (TMR_TAGOP_EXT_TAG_MEMORY == args->readMem.memType)
          {
            readMemType = TMR_TAGOP_TAG_MEMORY;
    52b2:	21 e2       	ldi	r18, 0x21	; 33
              return TMR_ERROR_INVALID;
            }
          }
#endif /* TMR_ENABLE_EXTENDED_TAGOPS */

          TMR_SR_msgAddReadMemory(msg, &i, (uint16_t)readTimeMs, readMemType, args->readMem.address, args->readMem.len, false);
    52b4:	f3 01       	movw	r30, r6
    52b6:	e4 84       	ldd	r14, Z+12	; 0x0c
    52b8:	f5 84       	ldd	r15, Z+13	; 0x0d
    52ba:	06 85       	ldd	r16, Z+14	; 0x0e
    52bc:	17 85       	ldd	r17, Z+15	; 0x0f
    52be:	a1 2c       	mov	r10, r1
    52c0:	c0 88       	ldd	r12, Z+16	; 0x10
    52c2:	cd 5e       	subi	r28, 0xED	; 237
    52c4:	de 4f       	sbci	r29, 0xFE	; 254
    52c6:	48 81       	ld	r20, Y
    52c8:	59 81       	ldd	r21, Y+1	; 0x01
    52ca:	c3 51       	subi	r28, 0x13	; 19
    52cc:	d1 40       	sbci	r29, 0x01	; 1
    52ce:	be 01       	movw	r22, r28
    52d0:	6f 5f       	subi	r22, 0xFF	; 255
    52d2:	7f 4f       	sbci	r23, 0xFF	; 255
    52d4:	c2 01       	movw	r24, r4
    52d6:	0e 94 33 69 	call	0xd266	; 0xd266 <TMR_SR_msgAddReadMemory>

          //Assemble access password.
          TMR_SR_msgAddAccessPassword(msg,  &i, &optbyte, rp->u.simple.tagop->u.extTagOp.accessPassword);
    52da:	d1 01       	movw	r26, r2
    52dc:	1f 96       	adiw	r26, 0x0f	; 15
    52de:	ed 91       	ld	r30, X+
    52e0:	fc 91       	ld	r31, X
    52e2:	50 97       	sbiw	r26, 0x10	; 16
    52e4:	21 85       	ldd	r18, Z+9	; 0x09
    52e6:	32 85       	ldd	r19, Z+10	; 0x0a
    52e8:	ae 01       	movw	r20, r28
    52ea:	48 5f       	subi	r20, 0xF8	; 248
    52ec:	5e 4f       	sbci	r21, 0xFE	; 254
    52ee:	be 01       	movw	r22, r28
    52f0:	6f 5f       	subi	r22, 0xFF	; 255
    52f2:	7f 4f       	sbci	r23, 0xFF	; 255
    52f4:	c2 01       	movw	r24, r4
    52f6:	0e 94 04 68 	call	0xd008	; 0xd008 <TMR_SR_msgAddAccessPassword>

#if TMR_ENABLE_EXTENDED_TAGOPS
          //Assemble extended params.
          ret = TMR_SR_msgAddExtendedParams(msg, &i, &optbyte, &tagOpExtParams);
    52fa:	9e 01       	movw	r18, r28
    52fc:	2e 5f       	subi	r18, 0xFE	; 254
    52fe:	3e 4f       	sbci	r19, 0xFE	; 254
    5300:	ae 01       	movw	r20, r28
    5302:	48 5f       	subi	r20, 0xF8	; 248
    5304:	5e 4f       	sbci	r21, 0xFE	; 254
    5306:	be 01       	movw	r22, r28
    5308:	6f 5f       	subi	r22, 0xFF	; 255
    530a:	7f 4f       	sbci	r23, 0xFF	; 255
    530c:	c2 01       	movw	r24, r4
    530e:	0e 94 3c 68 	call	0xd078	; 0xd078 <TMR_SR_msgAddExtendedParams>
    5312:	c7 5f       	subi	r28, 0xF7	; 247
    5314:	de 4f       	sbci	r29, 0xFE	; 254
    5316:	68 83       	st	Y, r22
    5318:	79 83       	std	Y+1, r23	; 0x01
    531a:	8a 83       	std	Y+2, r24	; 0x02
    531c:	9b 83       	std	Y+3, r25	; 0x03
    531e:	c9 50       	subi	r28, 0x09	; 9
    5320:	d1 40       	sbci	r29, 0x01	; 1
          if (TMR_SUCCESS != ret)
    5322:	67 2b       	or	r22, r23
    5324:	68 2b       	or	r22, r24
    5326:	69 2b       	or	r22, r25
    5328:	09 f4       	brne	.+2      	; 0x532c <TMR_SR_addTagOp+0x89a>
    532a:	d9 c0       	rjmp	.+434    	; 0x54de <TMR_SR_addTagOp+0xa4c>
          {
            return ret;
    532c:	c7 5f       	subi	r28, 0xF7	; 247
    532e:	de 4f       	sbci	r29, 0xFE	; 254
    5330:	68 81       	ld	r22, Y
    5332:	c9 50       	subi	r28, 0x09	; 9
    5334:	d1 40       	sbci	r29, 0x01	; 1
    5336:	c6 5f       	subi	r28, 0xF6	; 246
    5338:	de 4f       	sbci	r29, 0xFE	; 254
    533a:	78 81       	ld	r23, Y
    533c:	ca 50       	subi	r28, 0x0A	; 10
    533e:	d1 40       	sbci	r29, 0x01	; 1
    5340:	c5 5f       	subi	r28, 0xF5	; 245
    5342:	de 4f       	sbci	r29, 0xFE	; 254
    5344:	88 81       	ld	r24, Y
    5346:	cb 50       	subi	r28, 0x0B	; 11
    5348:	d1 40       	sbci	r29, 0x01	; 1
    534a:	c4 5f       	subi	r28, 0xF4	; 244
    534c:	de 4f       	sbci	r29, 0xFE	; 254
    534e:	98 81       	ld	r25, Y
    5350:	cc 50       	subi	r28, 0x0C	; 12
    5352:	d1 40       	sbci	r29, 0x01	; 1
    5354:	03 c1       	rjmp	.+518    	; 0x555c <TMR_SR_addTagOp+0xaca>

            //Get the extended params for memory read.
            ret = getReadExtParams(args, &tagOpExtParams);
            if (TMR_SUCCESS != ret)
            {
              return ret;
    5356:	79 2d       	mov	r23, r9
    5358:	8a 2d       	mov	r24, r10
    535a:	9b 2d       	mov	r25, r11
    535c:	ff c0       	rjmp	.+510    	; 0x555c <TMR_SR_addTagOp+0xaca>
            }

              //Validate filter. Tag-Type filter is mandatory.
            if (!isTagTypeFilterAvail(rp->u.simple.filter))
            {
              return TMR_ERROR_INVALID;
    535e:	61 e0       	ldi	r22, 0x01	; 1
    5360:	70 e0       	ldi	r23, 0x00	; 0
    5362:	80 e0       	ldi	r24, 0x00	; 0
    5364:	93 e0       	ldi	r25, 0x03	; 3
    5366:	fa c0       	rjmp	.+500    	; 0x555c <TMR_SR_addTagOp+0xaca>
          break;
        }
      case TMR_TAGOP_WRITE_MEMORY:
        {
          uint16_t len;
          uint8_t optbyte = i + 3;
    5368:	89 81       	ldd	r24, Y+1	; 0x01
    536a:	8d 5f       	subi	r24, 0xFD	; 253
    536c:	c8 5f       	subi	r28, 0xF8	; 248
    536e:	de 4f       	sbci	r29, 0xFE	; 254
    5370:	88 83       	st	Y, r24
    5372:	c8 50       	subi	r28, 0x08	; 8
    5374:	d1 40       	sbci	r29, 0x01	; 1
#if TMR_ENABLE_EXTENDED_TAGOPS
          uint8_t extParamsData[255];
          TMR_uint8List tagOpExtParams;
#endif /* TMR_ENABLE_EXTENDED_TAGOPS */

          args = &rp->u.simple.tagop->u.extTagOp;
    5376:	f1 01       	movw	r30, r2
    5378:	67 84       	ldd	r6, Z+15	; 0x0f
    537a:	70 88       	ldd	r7, Z+16	; 0x10
    537c:	c3 01       	movw	r24, r6
    537e:	01 96       	adiw	r24, 0x01	; 1
          writeMemType = args->writeMem.memType;
    5380:	d3 01       	movw	r26, r6
    5382:	51 96       	adiw	r26, 0x11	; 17
    5384:	2c 91       	ld	r18, X

#if TMR_ENABLE_EXTENDED_TAGOPS
          //Reset extended params buffer length.
          tagOpExtParams.len = 0;
    5386:	ca 5f       	subi	r28, 0xFA	; 250
    5388:	de 4f       	sbci	r29, 0xFE	; 254
    538a:	19 82       	std	Y+1, r1	; 0x01
    538c:	18 82       	st	Y, r1
    538e:	c6 50       	subi	r28, 0x06	; 6
    5390:	d1 40       	sbci	r29, 0x01	; 1

          if (TMR_TAGOP_EXT_TAG_MEMORY == args->writeMem.memType)
    5392:	25 32       	cpi	r18, 0x25	; 37
    5394:	29 f5       	brne	.+74     	; 0x53e0 <TMR_SR_addTagOp+0x94e>
          {
            writeMemType = TMR_TAGOP_TAG_MEMORY;

            //Initialize extended params buffer.
            tagOpExtParams.list = extParamsData;
    5396:	9e 01       	movw	r18, r28
    5398:	2d 5f       	subi	r18, 0xFD	; 253
    539a:	3f 4f       	sbci	r19, 0xFF	; 255
    539c:	ce 5f       	subi	r28, 0xFE	; 254
    539e:	de 4f       	sbci	r29, 0xFE	; 254
    53a0:	39 83       	std	Y+1, r19	; 0x01
    53a2:	28 83       	st	Y, r18
    53a4:	c2 50       	subi	r28, 0x02	; 2
    53a6:	d1 40       	sbci	r29, 0x01	; 1
            tagOpExtParams.max = sizeof(extParamsData) / sizeof(extParamsData[0]);
    53a8:	2f ef       	ldi	r18, 0xFF	; 255
    53aa:	30 e0       	ldi	r19, 0x00	; 0
    53ac:	cc 5f       	subi	r28, 0xFC	; 252
    53ae:	de 4f       	sbci	r29, 0xFE	; 254
    53b0:	39 83       	std	Y+1, r19	; 0x01
    53b2:	28 83       	st	Y, r18
    53b4:	c4 50       	subi	r28, 0x04	; 4
    53b6:	d1 40       	sbci	r29, 0x01	; 1

            //Get the extended params for memory write.
            ret = getWriteExtParams(args, &tagOpExtParams);
    53b8:	be 01       	movw	r22, r28
    53ba:	6e 5f       	subi	r22, 0xFE	; 254
    53bc:	7e 4f       	sbci	r23, 0xFE	; 254
    53be:	22 d9       	rcall	.-3516   	; 0x4604 <getWriteExtParams>
    53c0:	4b 01       	movw	r8, r22
    53c2:	5c 01       	movw	r10, r24
            if (TMR_SUCCESS != ret)
    53c4:	61 15       	cp	r22, r1
    53c6:	71 05       	cpc	r23, r1
    53c8:	81 05       	cpc	r24, r1
    53ca:	91 05       	cpc	r25, r1
    53cc:	09 f0       	breq	.+2      	; 0x53d0 <TMR_SR_addTagOp+0x93e>
            {
              return ret;
            }

            //Validate filter. Tag-Type filter is mandatory.
            if (!isTagTypeFilterAvail(rp->u.simple.filter))
    53ce:	69 c0       	rjmp	.+210    	; 0x54a2 <TMR_SR_addTagOp+0xa10>
    53d0:	f1 01       	movw	r30, r2
    53d2:	85 85       	ldd	r24, Z+13	; 0x0d
    53d4:	96 85       	ldd	r25, Z+14	; 0x0e
    53d6:	31 db       	rcall	.-2462   	; 0x4a3a <isTagTypeFilterAvail>
    53d8:	88 23       	and	r24, r24
    53da:	09 f4       	brne	.+2      	; 0x53de <TMR_SR_addTagOp+0x94c>
    53dc:	66 c0       	rjmp	.+204    	; 0x54aa <TMR_SR_addTagOp+0xa18>
          //Reset extended params buffer length.
          tagOpExtParams.len = 0;

          if (TMR_TAGOP_EXT_TAG_MEMORY == args->writeMem.memType)
          {
            writeMemType = TMR_TAGOP_TAG_MEMORY;
    53de:	21 e2       	ldi	r18, 0x21	; 33
              return TMR_ERROR_INVALID;
            }
          }
#endif /* TMR_ENABLE_EXTENDED_TAGOPS */

          TMR_SR_msgAddWriteMemory(msg, &i, (uint16_t)readTimeMs, writeMemType, args->writeMem.address);
    53e0:	d3 01       	movw	r26, r6
    53e2:	52 96       	adiw	r26, 0x12	; 18
    53e4:	ed 90       	ld	r14, X+
    53e6:	fd 90       	ld	r15, X+
    53e8:	0d 91       	ld	r16, X+
    53ea:	1c 91       	ld	r17, X
    53ec:	55 97       	sbiw	r26, 0x15	; 21
    53ee:	cd 5e       	subi	r28, 0xED	; 237
    53f0:	de 4f       	sbci	r29, 0xFE	; 254
    53f2:	48 81       	ld	r20, Y
    53f4:	59 81       	ldd	r21, Y+1	; 0x01
    53f6:	c3 51       	subi	r28, 0x13	; 19
    53f8:	d1 40       	sbci	r29, 0x01	; 1
    53fa:	be 01       	movw	r22, r28
    53fc:	6f 5f       	subi	r22, 0xFF	; 255
    53fe:	7f 4f       	sbci	r23, 0xFF	; 255
    5400:	c2 01       	movw	r24, r4
    5402:	0e 94 97 68 	call	0xd12e	; 0xd12e <TMR_SR_msgAddWriteMemory>

          //Assemble access password.
          TMR_SR_msgAddAccessPassword(msg,  &i, &optbyte, rp->u.simple.tagop->u.extTagOp.accessPassword);
    5406:	d1 01       	movw	r26, r2
    5408:	1f 96       	adiw	r26, 0x0f	; 15
    540a:	ed 91       	ld	r30, X+
    540c:	fc 91       	ld	r31, X
    540e:	50 97       	sbiw	r26, 0x10	; 16
    5410:	21 85       	ldd	r18, Z+9	; 0x09
    5412:	32 85       	ldd	r19, Z+10	; 0x0a
    5414:	ae 01       	movw	r20, r28
    5416:	48 5f       	subi	r20, 0xF8	; 248
    5418:	5e 4f       	sbci	r21, 0xFE	; 254
    541a:	be 01       	movw	r22, r28
    541c:	6f 5f       	subi	r22, 0xFF	; 255
    541e:	7f 4f       	sbci	r23, 0xFF	; 255
    5420:	c2 01       	movw	r24, r4
    5422:	0e 94 04 68 	call	0xd008	; 0xd008 <TMR_SR_msgAddAccessPassword>

#if TMR_ENABLE_EXTENDED_TAGOPS
          //Assemble extended params.
          ret = TMR_SR_msgAddExtendedParams(msg, &i, &optbyte, &tagOpExtParams);
    5426:	9e 01       	movw	r18, r28
    5428:	2e 5f       	subi	r18, 0xFE	; 254
    542a:	3e 4f       	sbci	r19, 0xFE	; 254
    542c:	ae 01       	movw	r20, r28
    542e:	48 5f       	subi	r20, 0xF8	; 248
    5430:	5e 4f       	sbci	r21, 0xFE	; 254
    5432:	be 01       	movw	r22, r28
    5434:	6f 5f       	subi	r22, 0xFF	; 255
    5436:	7f 4f       	sbci	r23, 0xFF	; 255
    5438:	c2 01       	movw	r24, r4
    543a:	0e 94 3c 68 	call	0xd078	; 0xd078 <TMR_SR_msgAddExtendedParams>
    543e:	c7 5f       	subi	r28, 0xF7	; 247
    5440:	de 4f       	sbci	r29, 0xFE	; 254
    5442:	68 83       	st	Y, r22
    5444:	79 83       	std	Y+1, r23	; 0x01
    5446:	8a 83       	std	Y+2, r24	; 0x02
    5448:	9b 83       	std	Y+3, r25	; 0x03
    544a:	c9 50       	subi	r28, 0x09	; 9
    544c:	d1 40       	sbci	r29, 0x01	; 1
          if (TMR_SUCCESS != ret)
    544e:	67 2b       	or	r22, r23
    5450:	68 2b       	or	r22, r24
    5452:	69 2b       	or	r22, r25
    5454:	79 f5       	brne	.+94     	; 0x54b4 <TMR_SR_addTagOp+0xa22>
    5456:	80 e0       	ldi	r24, 0x00	; 0
    5458:	90 e0       	ldi	r25, 0x00	; 0
    545a:	1a c0       	rjmp	.+52     	; 0x5490 <TMR_SR_addTagOp+0x9fe>
          }
#endif /* TMR_ENABLE_EXTENDED_TAGOPS */

          for (len = 0; len < args->writeMem.data.len; len++)
          {
            SETU8(msg, i, args->writeMem.data.list[len]);
    545c:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    5460:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    5464:	2f 5f       	subi	r18, 0xFF	; 255
    5466:	3f 4f       	sbci	r19, 0xFF	; 255
    5468:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    546c:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    5470:	29 81       	ldd	r18, Y+1	; 0x01
    5472:	31 e0       	ldi	r19, 0x01	; 1
    5474:	32 0f       	add	r19, r18
    5476:	39 83       	std	Y+1, r19	; 0x01
    5478:	d2 01       	movw	r26, r4
    547a:	a2 0f       	add	r26, r18
    547c:	b1 1d       	adc	r27, r1
    547e:	f3 01       	movw	r30, r6
    5480:	26 89       	ldd	r18, Z+22	; 0x16
    5482:	37 89       	ldd	r19, Z+23	; 0x17
    5484:	f9 01       	movw	r30, r18
    5486:	e8 0f       	add	r30, r24
    5488:	f9 1f       	adc	r31, r25
    548a:	20 81       	ld	r18, Z
    548c:	2c 93       	st	X, r18
          {
            return ret;
          }
#endif /* TMR_ENABLE_EXTENDED_TAGOPS */

          for (len = 0; len < args->writeMem.data.len; len++)
    548e:	01 96       	adiw	r24, 0x01	; 1
    5490:	d3 01       	movw	r26, r6
    5492:	5a 96       	adiw	r26, 0x1a	; 26
    5494:	2d 91       	ld	r18, X+
    5496:	3c 91       	ld	r19, X
    5498:	5b 97       	sbiw	r26, 0x1b	; 27
    549a:	82 17       	cp	r24, r18
    549c:	93 07       	cpc	r25, r19
    549e:	f0 f2       	brcs	.-68     	; 0x545c <TMR_SR_addTagOp+0x9ca>
    54a0:	1e c0       	rjmp	.+60     	; 0x54de <TMR_SR_addTagOp+0xa4c>

            //Get the extended params for memory write.
            ret = getWriteExtParams(args, &tagOpExtParams);
            if (TMR_SUCCESS != ret)
            {
              return ret;
    54a2:	79 2d       	mov	r23, r9
    54a4:	8a 2d       	mov	r24, r10
    54a6:	9b 2d       	mov	r25, r11
    54a8:	59 c0       	rjmp	.+178    	; 0x555c <TMR_SR_addTagOp+0xaca>
            }

            //Validate filter. Tag-Type filter is mandatory.
            if (!isTagTypeFilterAvail(rp->u.simple.filter))
            {
              return TMR_ERROR_INVALID;
    54aa:	61 e0       	ldi	r22, 0x01	; 1
    54ac:	70 e0       	ldi	r23, 0x00	; 0
    54ae:	80 e0       	ldi	r24, 0x00	; 0
    54b0:	93 e0       	ldi	r25, 0x03	; 3
    54b2:	54 c0       	rjmp	.+168    	; 0x555c <TMR_SR_addTagOp+0xaca>
#if TMR_ENABLE_EXTENDED_TAGOPS
          //Assemble extended params.
          ret = TMR_SR_msgAddExtendedParams(msg, &i, &optbyte, &tagOpExtParams);
          if (TMR_SUCCESS != ret)
          {
            return ret;
    54b4:	c7 5f       	subi	r28, 0xF7	; 247
    54b6:	de 4f       	sbci	r29, 0xFE	; 254
    54b8:	68 81       	ld	r22, Y
    54ba:	c9 50       	subi	r28, 0x09	; 9
    54bc:	d1 40       	sbci	r29, 0x01	; 1
    54be:	c6 5f       	subi	r28, 0xF6	; 246
    54c0:	de 4f       	sbci	r29, 0xFE	; 254
    54c2:	78 81       	ld	r23, Y
    54c4:	ca 50       	subi	r28, 0x0A	; 10
    54c6:	d1 40       	sbci	r29, 0x01	; 1
    54c8:	c5 5f       	subi	r28, 0xF5	; 245
    54ca:	de 4f       	sbci	r29, 0xFE	; 254
    54cc:	88 81       	ld	r24, Y
    54ce:	cb 50       	subi	r28, 0x0B	; 11
    54d0:	d1 40       	sbci	r29, 0x01	; 1
    54d2:	c4 5f       	subi	r28, 0xF4	; 244
    54d4:	de 4f       	sbci	r29, 0xFE	; 254
    54d6:	98 81       	ld	r25, Y
    54d8:	cc 50       	subi	r28, 0x0C	; 12
    54da:	d1 40       	sbci	r29, 0x01	; 1
    54dc:	3f c0       	rjmp	.+126    	; 0x555c <TMR_SR_addTagOp+0xaca>
          break;
        }
      default:
        return TMR_ERROR_INVALID; /* Unknown tagop - internal error */
    }
    isAddrByteExtended = false;
    54de:	10 92 59 02 	sts	0x0259, r1	; 0x800259 <isAddrByteExtended>
#endif /* TMR_ENABLE_HF_LF */
  }

  *j = i;
    54e2:	89 81       	ldd	r24, Y+1	; 0x01
    54e4:	c1 5f       	subi	r28, 0xF1	; 241
    54e6:	de 4f       	sbci	r29, 0xFE	; 254
    54e8:	e8 81       	ld	r30, Y
    54ea:	f9 81       	ldd	r31, Y+1	; 0x01
    54ec:	cf 50       	subi	r28, 0x0F	; 15
    54ee:	d1 40       	sbci	r29, 0x01	; 1
    54f0:	80 83       	st	Z, r24
  *byte = lenbyte;
    54f2:	8a 81       	ldd	r24, Y+2	; 0x02
    54f4:	cf 5e       	subi	r28, 0xEF	; 239
    54f6:	de 4f       	sbci	r29, 0xFE	; 254
    54f8:	a8 81       	ld	r26, Y
    54fa:	b9 81       	ldd	r27, Y+1	; 0x01
    54fc:	c1 51       	subi	r28, 0x11	; 17
    54fe:	d1 40       	sbci	r29, 0x01	; 1
    5500:	8c 93       	st	X, r24
  return ret;
    5502:	c7 5f       	subi	r28, 0xF7	; 247
    5504:	de 4f       	sbci	r29, 0xFE	; 254
    5506:	68 81       	ld	r22, Y
    5508:	c9 50       	subi	r28, 0x09	; 9
    550a:	d1 40       	sbci	r29, 0x01	; 1
    550c:	c6 5f       	subi	r28, 0xF6	; 246
    550e:	de 4f       	sbci	r29, 0xFE	; 254
    5510:	78 81       	ld	r23, Y
    5512:	ca 50       	subi	r28, 0x0A	; 10
    5514:	d1 40       	sbci	r29, 0x01	; 1
    5516:	c5 5f       	subi	r28, 0xF5	; 245
    5518:	de 4f       	sbci	r29, 0xFE	; 254
    551a:	88 81       	ld	r24, Y
    551c:	cb 50       	subi	r28, 0x0B	; 11
    551e:	d1 40       	sbci	r29, 0x01	; 1
    5520:	c4 5f       	subi	r28, 0xF4	; 244
    5522:	de 4f       	sbci	r29, 0xFE	; 254
    5524:	98 81       	ld	r25, Y
    5526:	cc 50       	subi	r28, 0x0C	; 12
    5528:	d1 40       	sbci	r29, 0x01	; 1
    552a:	18 c0       	rjmp	.+48     	; 0x555c <TMR_SR_addTagOp+0xaca>
        {
        return TMR_ERROR_UNIMPLEMENTED_FEATURE;
        }
      }
    default:
      return TMR_ERROR_INVALID; /* Unknown tagop - internal error */
    552c:	61 e0       	ldi	r22, 0x01	; 1
    552e:	70 e0       	ldi	r23, 0x00	; 0
    5530:	80 e0       	ldi	r24, 0x00	; 0
    5532:	93 e0       	ldi	r25, 0x03	; 3
    5534:	13 c0       	rjmp	.+38     	; 0x555c <TMR_SR_addTagOp+0xaca>
          }
          break;
        }
        else
        {
        return TMR_ERROR_UNIMPLEMENTED_FEATURE;
    5536:	69 e0       	ldi	r22, 0x09	; 9
    5538:	71 e0       	ldi	r23, 0x01	; 1
    553a:	80 e0       	ldi	r24, 0x00	; 0
    553c:	92 e0       	ldi	r25, 0x02	; 2
    553e:	0e c0       	rjmp	.+28     	; 0x555c <TMR_SR_addTagOp+0xaca>
              return TMR_ERROR_UNIMPLEMENTED_FEATURE;
            }
          }
          else
          {
            return TMR_ERROR_UNIMPLEMENTED_FEATURE;
    5540:	69 e0       	ldi	r22, 0x09	; 9
    5542:	71 e0       	ldi	r23, 0x01	; 1
    5544:	80 e0       	ldi	r24, 0x00	; 0
    5546:	92 e0       	ldi	r25, 0x02	; 2
    5548:	09 c0       	rjmp	.+18     	; 0x555c <TMR_SR_addTagOp+0xaca>
              SETU32(msg, i, readData.wordAddress);
              SETU8(msg, i, readData.len);
            }
            else
            {
              return TMR_ERROR_UNIMPLEMENTED_FEATURE;
    554a:	69 e0       	ldi	r22, 0x09	; 9
    554c:	71 e0       	ldi	r23, 0x01	; 1
    554e:	80 e0       	ldi	r24, 0x00	; 0
    5550:	92 e0       	ldi	r25, 0x02	; 2
    5552:	04 c0       	rjmp	.+8      	; 0x555c <TMR_SR_addTagOp+0xaca>
            SETU8(msg, i, args->writeMem.data.list[len]);
          }
          break;
        }
      default:
        return TMR_ERROR_INVALID; /* Unknown tagop - internal error */
    5554:	61 e0       	ldi	r22, 0x01	; 1
    5556:	70 e0       	ldi	r23, 0x00	; 0
    5558:	80 e0       	ldi	r24, 0x00	; 0
    555a:	93 e0       	ldi	r25, 0x03	; 3

  *j = i;
  *byte = lenbyte;
  return ret;

}
    555c:	c8 5e       	subi	r28, 0xE8	; 232
    555e:	de 4f       	sbci	r29, 0xFE	; 254
    5560:	0f b6       	in	r0, 0x3f	; 63
    5562:	f8 94       	cli
    5564:	de bf       	out	0x3e, r29	; 62
    5566:	0f be       	out	0x3f, r0	; 63
    5568:	cd bf       	out	0x3d, r28	; 61
    556a:	df 91       	pop	r29
    556c:	cf 91       	pop	r28
    556e:	1f 91       	pop	r17
    5570:	0f 91       	pop	r16
    5572:	ff 90       	pop	r15
    5574:	ef 90       	pop	r14
    5576:	df 90       	pop	r13
    5578:	cf 90       	pop	r12
    557a:	bf 90       	pop	r11
    557c:	af 90       	pop	r10
    557e:	9f 90       	pop	r9
    5580:	8f 90       	pop	r8
    5582:	7f 90       	pop	r7
    5584:	6f 90       	pop	r6
    5586:	5f 90       	pop	r5
    5588:	4f 90       	pop	r4
    558a:	3f 90       	pop	r3
    558c:	2f 90       	pop	r2
    558e:	08 95       	ret

00005590 <TMR_SR_read_internal>:
}

static TMR_Status
TMR_SR_read_internal(struct TMR_Reader *reader, uint32_t timeoutMs,
                     int32_t *tagCount, TMR_ReadPlan *rp)
{
    5590:	2f 92       	push	r2
    5592:	3f 92       	push	r3
    5594:	4f 92       	push	r4
    5596:	5f 92       	push	r5
    5598:	6f 92       	push	r6
    559a:	7f 92       	push	r7
    559c:	8f 92       	push	r8
    559e:	9f 92       	push	r9
    55a0:	af 92       	push	r10
    55a2:	bf 92       	push	r11
    55a4:	cf 92       	push	r12
    55a6:	df 92       	push	r13
    55a8:	ef 92       	push	r14
    55aa:	ff 92       	push	r15
    55ac:	0f 93       	push	r16
    55ae:	1f 93       	push	r17
    55b0:	cf 93       	push	r28
    55b2:	df 93       	push	r29
    55b4:	cd b7       	in	r28, 0x3d	; 61
    55b6:	de b7       	in	r29, 0x3e	; 62
    55b8:	c8 53       	subi	r28, 0x38	; 56
    55ba:	d1 40       	sbci	r29, 0x01	; 1
    55bc:	0f b6       	in	r0, 0x3f	; 63
    55be:	f8 94       	cli
    55c0:	de bf       	out	0x3e, r29	; 62
    55c2:	0f be       	out	0x3f, r0	; 63
    55c4:	cd bf       	out	0x3d, r28	; 61
    55c6:	d9 01       	movw	r26, r18
  TMR_Status ret = TMR_SUCCESS;
  TMR_SR_SerialReader *sr;
  TMR_SR_MultipleStatus multipleStatus = {0};
    55c8:	9e 01       	movw	r18, r28
    55ca:	2f 5f       	subi	r18, 0xFF	; 255
    55cc:	3f 4f       	sbci	r19, 0xFF	; 255
    55ce:	79 01       	movw	r14, r18
    55d0:	26 e0       	ldi	r18, 0x06	; 6
    55d2:	f7 01       	movw	r30, r14
    55d4:	11 92       	st	Z+, r1
    55d6:	2a 95       	dec	r18
    55d8:	e9 f7       	brne	.-6      	; 0x55d4 <TMR_SR_read_internal+0x44>
#endif /* TMR_ENABLE_BACKGROUND_READS */
  sr = &reader->u.serialReader;

  /* The ontime passed in TMR_read() function through codelet is being collected in 'timeoutMs' variable.
   * Here assigning this value to onTime variable of readParams structure. Which will be ussed in setAntennaReadTimeList() function.*/
  reader->readParams.onTime = timeoutMs;
    55da:	fc 01       	movw	r30, r24
    55dc:	40 8b       	std	Z+16, r20	; 0x10
    55de:	51 8b       	std	Z+17, r21	; 0x11
    55e0:	62 8b       	std	Z+18, r22	; 0x12
    55e2:	73 8b       	std	Z+19, r23	; 0x13

#ifdef TMR_ENABLE_HF_LF
  if (reader->isProtocolDynamicSwitching)
    55e4:	ee 5d       	subi	r30, 0xDE	; 222
    55e6:	f9 4f       	sbci	r31, 0xF9	; 249
    55e8:	30 81       	ld	r19, Z
    55ea:	33 23       	and	r19, r19
    55ec:	99 f0       	breq	.+38     	; 0x5614 <TMR_SR_read_internal+0x84>
  {
    /* Dynamic protocol switching is supported only for M3e.
     * Sync read and multi RP does not support dynamic switching.
     */
    if ((TMR_READ_PLAN_TYPE_MULTI == rp->type) ||
    55ee:	f8 01       	movw	r30, r16
    55f0:	20 81       	ld	r18, Z
    55f2:	22 30       	cpi	r18, 0x02	; 2
    55f4:	31 f0       	breq	.+12     	; 0x5602 <TMR_SR_read_internal+0x72>
        (!reader->continuousReading))
    55f6:	fc 01       	movw	r30, r24
    55f8:	ea 58       	subi	r30, 0x8A	; 138
    55fa:	ff 4f       	sbci	r31, 0xFF	; 255
    55fc:	20 81       	ld	r18, Z
  if (reader->isProtocolDynamicSwitching)
  {
    /* Dynamic protocol switching is supported only for M3e.
     * Sync read and multi RP does not support dynamic switching.
     */
    if ((TMR_READ_PLAN_TYPE_MULTI == rp->type) ||
    55fe:	21 11       	cpse	r18, r1
    5600:	09 c0       	rjmp	.+18     	; 0x5614 <TMR_SR_read_internal+0x84>
        (!reader->continuousReading))
    {
      reader->isProtocolDynamicSwitching = false;
    5602:	fc 01       	movw	r30, r24
    5604:	ee 5d       	subi	r30, 0xDE	; 222
    5606:	f9 4f       	sbci	r31, 0xF9	; 249
    5608:	10 82       	st	Z, r1
      return TMR_ERROR_UNSUPPORTED;
    560a:	63 e0       	ldi	r22, 0x03	; 3
    560c:	70 e0       	ldi	r23, 0x00	; 0
    560e:	80 e0       	ldi	r24, 0x00	; 0
    5610:	93 e0       	ldi	r25, 0x03	; 3
    5612:	d0 c2       	rjmp	.+1440   	; 0x5bb4 <TMR_SR_read_internal+0x624>
    5614:	48 01       	movw	r8, r16
    5616:	c9 5c       	subi	r28, 0xC9	; 201
    5618:	de 4f       	sbci	r29, 0xFE	; 254
    561a:	b9 83       	std	Y+1, r27	; 0x01
    561c:	a8 83       	st	Y, r26
    561e:	c7 53       	subi	r28, 0x37	; 55
    5620:	d1 40       	sbci	r29, 0x01	; 1
    5622:	1a 01       	movw	r2, r20
    5624:	2b 01       	movw	r4, r22
    5626:	3c 01       	movw	r6, r24
    }
  }
#endif /* TMR_ENABLE_HF_LF */

#ifndef TMR_ENABLE_GEN2_ONLY
  if (TMR_READ_PLAN_TYPE_MULTI == rp->type)
    5628:	d8 01       	movw	r26, r16
    562a:	8c 91       	ld	r24, X
    562c:	82 30       	cpi	r24, 0x02	; 2
    562e:	09 f0       	breq	.+2      	; 0x5632 <TMR_SR_read_internal+0xa2>
    5630:	e5 c0       	rjmp	.+458    	; 0x57fc <TMR_SR_read_internal+0x26c>
    TMR_TagProtocolList *protocolList = &p;
    TMR_TagFilter *filters[TMR_MAX_SERIAL_MULTIPROTOCOL_LENGTH];
    TMR_TagProtocol protocols[TMR_MAX_SERIAL_MULTIPROTOCOL_LENGTH];


    if (TMR_MAX_SERIAL_MULTIPROTOCOL_LENGTH < rp->u.multi.planCount)
    5632:	1c 96       	adiw	r26, 0x0c	; 12
    5634:	8c 91       	ld	r24, X
    5636:	81 32       	cpi	r24, 0x21	; 33
    5638:	08 f0       	brcs	.+2      	; 0x563c <TMR_SR_read_internal+0xac>
    563a:	d6 c0       	rjmp	.+428    	; 0x57e8 <TMR_SR_read_internal+0x258>
    {
      return TMR_ERROR_TOO_BIG ;
    }

    protocolList->len = rp->u.multi.planCount;
    563c:	ca 5c       	subi	r28, 0xCA	; 202
    563e:	de 4f       	sbci	r29, 0xFE	; 254
    5640:	88 83       	st	Y, r24
    5642:	c6 53       	subi	r28, 0x36	; 54
    5644:	d1 40       	sbci	r29, 0x01	; 1
    protocolList->max = rp->u.multi.planCount;
    5646:	cb 5c       	subi	r28, 0xCB	; 203
    5648:	de 4f       	sbci	r29, 0xFE	; 254
    564a:	88 83       	st	Y, r24
    564c:	c5 53       	subi	r28, 0x35	; 53
    564e:	d1 40       	sbci	r29, 0x01	; 1


    protocolList->list = protocols;
    5650:	ce 01       	movw	r24, r28
    5652:	8d 5e       	subi	r24, 0xED	; 237
    5654:	9e 4f       	sbci	r25, 0xFE	; 254
    5656:	cd 5c       	subi	r28, 0xCD	; 205
    5658:	de 4f       	sbci	r29, 0xFE	; 254
    565a:	99 83       	std	Y+1, r25	; 0x01
    565c:	88 83       	st	Y, r24
    565e:	c3 53       	subi	r28, 0x33	; 51
    5660:	d1 40       	sbci	r29, 0x01	; 1

    for (i = 0; i < rp->u.multi.planCount; i++)
    5662:	20 e0       	ldi	r18, 0x00	; 0
    5664:	30 e0       	ldi	r19, 0x00	; 0
    5666:	2c c0       	rjmp	.+88     	; 0x56c0 <TMR_SR_read_internal+0x130>
    {
      protocolList->list[i] = rp->u.multi.plans[i]->u.simple.protocol;
    5668:	cd 5c       	subi	r28, 0xCD	; 205
    566a:	de 4f       	sbci	r29, 0xFE	; 254
    566c:	e8 81       	ld	r30, Y
    566e:	f9 81       	ldd	r31, Y+1	; 0x01
    5670:	c3 53       	subi	r28, 0x33	; 51
    5672:	d1 40       	sbci	r29, 0x01	; 1
    5674:	bf 01       	movw	r22, r30
    5676:	62 0f       	add	r22, r18
    5678:	73 1f       	adc	r23, r19
    567a:	f4 01       	movw	r30, r8
    567c:	a6 81       	ldd	r26, Z+6	; 0x06
    567e:	b7 81       	ldd	r27, Z+7	; 0x07
    5680:	c9 01       	movw	r24, r18
    5682:	88 0f       	add	r24, r24
    5684:	99 1f       	adc	r25, r25
    5686:	a8 0f       	add	r26, r24
    5688:	b9 1f       	adc	r27, r25
    568a:	0d 90       	ld	r0, X+
    568c:	bc 91       	ld	r27, X
    568e:	a0 2d       	mov	r26, r0
    5690:	1c 96       	adiw	r26, 0x0c	; 12
    5692:	4c 91       	ld	r20, X
    5694:	db 01       	movw	r26, r22
    5696:	4c 93       	st	X, r20
      filters[i]= rp->u.multi.plans[i]->u.simple.filter; 
    5698:	06 80       	ldd	r0, Z+6	; 0x06
    569a:	f7 81       	ldd	r31, Z+7	; 0x07
    569c:	e0 2d       	mov	r30, r0
    569e:	e8 0f       	add	r30, r24
    56a0:	f9 1f       	adc	r31, r25
    56a2:	01 90       	ld	r0, Z+
    56a4:	f0 81       	ld	r31, Z
    56a6:	e0 2d       	mov	r30, r0
    56a8:	45 85       	ldd	r20, Z+13	; 0x0d
    56aa:	56 85       	ldd	r21, Z+14	; 0x0e
    56ac:	e1 e0       	ldi	r30, 0x01	; 1
    56ae:	f0 e0       	ldi	r31, 0x00	; 0
    56b0:	ec 0f       	add	r30, r28
    56b2:	fd 1f       	adc	r31, r29
    56b4:	e8 0f       	add	r30, r24
    56b6:	f9 1f       	adc	r31, r25
    56b8:	53 8b       	std	Z+19, r21	; 0x13
    56ba:	42 8b       	std	Z+18, r20	; 0x12
    protocolList->max = rp->u.multi.planCount;


    protocolList->list = protocols;

    for (i = 0; i < rp->u.multi.planCount; i++)
    56bc:	2f 5f       	subi	r18, 0xFF	; 255
    56be:	3f 4f       	sbci	r19, 0xFF	; 255
    56c0:	f4 01       	movw	r30, r8
    56c2:	84 85       	ldd	r24, Z+12	; 0x0c
    56c4:	48 2f       	mov	r20, r24
    56c6:	50 e0       	ldi	r21, 0x00	; 0
    56c8:	24 17       	cp	r18, r20
    56ca:	35 07       	cpc	r19, r21
    56cc:	6c f2       	brlt	.-102    	; 0x5668 <TMR_SR_read_internal+0xd8>
    {
      protocolList->list[i] = rp->u.multi.plans[i]->u.simple.protocol;
      filters[i]= rp->u.multi.plans[i]->u.simple.filter; 
    }
    
    if (((0 < rp->u.multi.planCount) &&
    56ce:	88 23       	and	r24, r24
    56d0:	49 f0       	breq	.+18     	; 0x56e4 <TMR_SR_read_internal+0x154>
         (rp->u.multi.plans[0]->type == TMR_READ_PLAN_TYPE_SIMPLE))
    56d2:	06 80       	ldd	r0, Z+6	; 0x06
    56d4:	f7 81       	ldd	r31, Z+7	; 0x07
    56d6:	e0 2d       	mov	r30, r0
    56d8:	01 90       	ld	r0, Z+
    56da:	f0 81       	ld	r31, Z
    56dc:	e0 2d       	mov	r30, r0
    56de:	80 81       	ld	r24, Z
    {
      protocolList->list[i] = rp->u.multi.plans[i]->u.simple.protocol;
      filters[i]= rp->u.multi.plans[i]->u.simple.filter; 
    }
    
    if (((0 < rp->u.multi.planCount) &&
    56e0:	81 30       	cpi	r24, 0x01	; 1
    56e2:	39 f0       	breq	.+14     	; 0x56f2 <TMR_SR_read_internal+0x162>
         (rp->u.multi.plans[0]->type == TMR_READ_PLAN_TYPE_SIMPLE))
         || (true == reader->continuousReading))
    56e4:	f3 01       	movw	r30, r6
    56e6:	ea 58       	subi	r30, 0x8A	; 138
    56e8:	ff 4f       	sbci	r31, 0xFF	; 255
    56ea:	80 81       	ld	r24, Z
    56ec:	88 23       	and	r24, r24
    56ee:	09 f4       	brne	.+2      	; 0x56f2 <TMR_SR_read_internal+0x162>
    56f0:	85 c0       	rjmp	.+266    	; 0x57fc <TMR_SR_read_internal+0x26c>
    {
      ret = prepForSearch(reader, rp);
    56f2:	b4 01       	movw	r22, r8
    56f4:	c3 01       	movw	r24, r6
    56f6:	0e 94 a7 15 	call	0x2b4e	; 0x2b4e <prepForSearch>
    56fa:	6b 01       	movw	r12, r22
    56fc:	7c 01       	movw	r14, r24
      if (TMR_SUCCESS == ret)
    56fe:	61 15       	cp	r22, r1
    5700:	71 05       	cpc	r23, r1
    5702:	81 05       	cpc	r24, r1
    5704:	91 05       	cpc	r25, r1
    5706:	09 f0       	breq	.+2      	; 0x570a <TMR_SR_read_internal+0x17a>
    5708:	69 c0       	rjmp	.+210    	; 0x57dc <TMR_SR_read_internal+0x24c>
        /* At this point antenna list is already set,
         * which is one time configuration.
         * Make the variable true to not set antenna list again,
         * until next paramset of the read plan.
         */
        reader->isAntennaSet = true;
    570a:	81 e0       	ldi	r24, 0x01	; 1
    570c:	f3 01       	movw	r30, r6
    570e:	e9 5e       	subi	r30, 0xE9	; 233
    5710:	f9 4f       	sbci	r31, 0xF9	; 249
    5712:	80 83       	st	Z, r24

        /* Cache search timeout for later call to streaming receive */
        sr->searchTimeoutMs = timeoutMs;
    5714:	ef 55       	subi	r30, 0x5F	; 95
    5716:	f2 40       	sbci	r31, 0x02	; 2
    5718:	20 82       	st	Z, r2
    571a:	31 82       	std	Z+1, r3	; 0x01
    571c:	42 82       	std	Z+2, r4	; 0x02
    571e:	53 82       	std	Z+3, r5	; 0x03

        /**
         * take the time stamp only in case of sync read,
         * async read does not depend on this
         */
        if (!reader->continuousReading)
    5720:	e2 54       	subi	r30, 0x42	; 66
    5722:	f3 40       	sbci	r31, 0x03	; 3
    5724:	80 81       	ld	r24, Z
    5726:	81 11       	cpse	r24, r1
    5728:	25 c0       	rjmp	.+74     	; 0x5774 <TMR_SR_read_internal+0x1e4>
        {
          /* Cache the read time so it can be put in tag read data later */
          tm_gettime_consistent(&starttimeHigh, &starttimeLow);
    572a:	be 01       	movw	r22, r28
    572c:	65 5f       	subi	r22, 0xF5	; 245
    572e:	7f 4f       	sbci	r23, 0xFF	; 255
    5730:	ce 01       	movw	r24, r28
    5732:	0f 96       	adiw	r24, 0x0f	; 15
    5734:	0e 94 68 6a 	call	0xd4d0	; 0xd4d0 <tm_gettime_consistent>
          sr->readTimeHigh = starttimeHigh;
    5738:	4f 85       	ldd	r20, Y+15	; 0x0f
    573a:	58 89       	ldd	r21, Y+16	; 0x10
    573c:	69 89       	ldd	r22, Y+17	; 0x11
    573e:	7a 89       	ldd	r23, Y+18	; 0x12
    5740:	f3 01       	movw	r30, r6
    5742:	e8 55       	subi	r30, 0x58	; 88
    5744:	fc 4f       	sbci	r31, 0xFC	; 252
    5746:	40 83       	st	Z, r20
    5748:	51 83       	std	Z+1, r21	; 0x01
    574a:	62 83       	std	Z+2, r22	; 0x02
    574c:	73 83       	std	Z+3, r23	; 0x03
          sr->readTimeLow = starttimeLow;
    574e:	8b 85       	ldd	r24, Y+11	; 0x0b
    5750:	9c 85       	ldd	r25, Y+12	; 0x0c
    5752:	ad 85       	ldd	r26, Y+13	; 0x0d
    5754:	be 85       	ldd	r27, Y+14	; 0x0e
    5756:	34 97       	sbiw	r30, 0x04	; 4
    5758:	80 83       	st	Z, r24
    575a:	91 83       	std	Z+1, r25	; 0x01
    575c:	a2 83       	std	Z+2, r26	; 0x02
    575e:	b3 83       	std	Z+3, r27	; 0x03
          sr->lastSentTagTimestampHigh = starttimeHigh;
    5760:	3c 96       	adiw	r30, 0x0c	; 12
    5762:	40 83       	st	Z, r20
    5764:	51 83       	std	Z+1, r21	; 0x01
    5766:	62 83       	std	Z+2, r22	; 0x02
    5768:	73 83       	std	Z+3, r23	; 0x03
          sr->lastSentTagTimestampLow = starttimeLow;
    576a:	34 96       	adiw	r30, 0x04	; 4
    576c:	80 83       	st	Z, r24
    576e:	91 83       	std	Z+1, r25	; 0x01
    5770:	a2 83       	std	Z+2, r26	; 0x02
    5772:	b3 83       	std	Z+3, r27	; 0x03
        }

        ret = TMR_SR_cmdMultipleProtocolSearch(reader, TMR_SR_OPCODE_READ_TAG_ID_MULTIPLE,
    5774:	f3 01       	movw	r30, r6
    5776:	e7 5e       	subi	r30, 0xE7	; 231
    5778:	f9 4f       	sbci	r31, 0xF9	; 249
    577a:	20 81       	ld	r18, Z
    577c:	31 81       	ldd	r19, Z+1	; 0x01
    577e:	ae 01       	movw	r20, r28
    5780:	49 5f       	subi	r20, 0xF9	; 249
    5782:	5f 4f       	sbci	r21, 0xFF	; 255
    5784:	5a 01       	movw	r10, r20
    5786:	61 01       	movw	r12, r2
    5788:	ce 01       	movw	r24, r28
    578a:	43 96       	adiw	r24, 0x13	; 19
    578c:	7c 01       	movw	r14, r24
    578e:	03 e0       	ldi	r16, 0x03	; 3
    5790:	10 e0       	ldi	r17, 0x00	; 0
    5792:	44 5d       	subi	r20, 0xD4	; 212
    5794:	5e 4f       	sbci	r21, 0xFE	; 254
    5796:	62 e2       	ldi	r22, 0x22	; 34
    5798:	c3 01       	movw	r24, r6
    579a:	0e 94 71 5f 	call	0xbee2	; 0xbee2 <TMR_SR_cmdMultipleProtocolSearch>
    579e:	26 2f       	mov	r18, r22
    57a0:	37 2f       	mov	r19, r23
                                                 protocolList, reader->userMetadataFlag,
                                                 TMR_SR_SEARCH_FLAG_CONFIGURED_LIST,
                                                 filters, (uint16_t)timeoutMs, &count);

        if (NULL != tagCount)
    57a2:	c9 5c       	subi	r28, 0xC9	; 201
    57a4:	de 4f       	sbci	r29, 0xFE	; 254
    57a6:	a8 81       	ld	r26, Y
    57a8:	b9 81       	ldd	r27, Y+1	; 0x01
    57aa:	c7 53       	subi	r28, 0x37	; 55
    57ac:	d1 40       	sbci	r29, 0x01	; 1
    57ae:	10 97       	sbiw	r26, 0x00	; 0
    57b0:	01 f1       	breq	.+64     	; 0x57f2 <TMR_SR_read_internal+0x262>
        {
          *tagCount += count;
    57b2:	cd 90       	ld	r12, X+
    57b4:	dd 90       	ld	r13, X+
    57b6:	ed 90       	ld	r14, X+
    57b8:	fc 90       	ld	r15, X
    57ba:	13 97       	sbiw	r26, 0x03	; 3
    57bc:	4f 81       	ldd	r20, Y+7	; 0x07
    57be:	58 85       	ldd	r21, Y+8	; 0x08
    57c0:	69 85       	ldd	r22, Y+9	; 0x09
    57c2:	7a 85       	ldd	r23, Y+10	; 0x0a
    57c4:	4c 0d       	add	r20, r12
    57c6:	5d 1d       	adc	r21, r13
    57c8:	6e 1d       	adc	r22, r14
    57ca:	7f 1d       	adc	r23, r15
    57cc:	fd 01       	movw	r30, r26
    57ce:	40 83       	st	Z, r20
    57d0:	51 83       	std	Z+1, r21	; 0x01
    57d2:	62 83       	std	Z+2, r22	; 0x02
    57d4:	73 83       	std	Z+3, r23	; 0x03
        }
        return ret;
    57d6:	62 2f       	mov	r22, r18
    57d8:	73 2f       	mov	r23, r19
    57da:	ec c1       	rjmp	.+984    	; 0x5bb4 <TMR_SR_read_internal+0x624>
        reader->continuousReading = false;
      }
      else
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */
      {
        if (TMR_SUCCESS != ret)
    57dc:	61 15       	cp	r22, r1
    57de:	71 05       	cpc	r23, r1
    57e0:	81 05       	cpc	r24, r1
    57e2:	91 05       	cpc	r25, r1
    57e4:	59 f0       	breq	.+22     	; 0x57fc <TMR_SR_read_internal+0x26c>
    57e6:	06 c0       	rjmp	.+12     	; 0x57f4 <TMR_SR_read_internal+0x264>
    TMR_TagProtocol protocols[TMR_MAX_SERIAL_MULTIPROTOCOL_LENGTH];


    if (TMR_MAX_SERIAL_MULTIPROTOCOL_LENGTH < rp->u.multi.planCount)
    {
      return TMR_ERROR_TOO_BIG ;
    57e8:	66 e0       	ldi	r22, 0x06	; 6
    57ea:	70 e0       	ldi	r23, 0x00	; 0
    57ec:	80 e0       	ldi	r24, 0x00	; 0
    57ee:	93 e0       	ldi	r25, 0x03	; 3
    57f0:	e1 c1       	rjmp	.+962    	; 0x5bb4 <TMR_SR_read_internal+0x624>
    57f2:	e0 c1       	rjmp	.+960    	; 0x5bb4 <TMR_SR_read_internal+0x624>
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */
      {
        if (TMR_SUCCESS != ret)
        {
          /* But if this is an actual error, just throw it. */
          return ret;
    57f4:	7d 2d       	mov	r23, r13
    57f6:	8e 2d       	mov	r24, r14
    57f8:	9f 2d       	mov	r25, r15
    57fa:	dc c1       	rjmp	.+952    	; 0x5bb4 <TMR_SR_read_internal+0x624>

#if TMR_ENABLE_PSEUDO_ASYNC_READ
  if (TMR_READ_PLAN_TYPE_SIMPLE == rp->type)
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */
  {
    reader->triggerRead = rp->u.simple.triggerRead.enable;
    57fc:	d4 01       	movw	r26, r8
    57fe:	57 96       	adiw	r26, 0x17	; 23
    5800:	8c 91       	ld	r24, X
    5802:	57 97       	sbiw	r26, 0x17	; 23
    5804:	f3 01       	movw	r30, r6
    5806:	e7 58       	subi	r30, 0x87	; 135
    5808:	ff 4f       	sbci	r31, 0xFF	; 255
    580a:	80 83       	st	Z, r24
#ifdef TMR_ENABLE_UHF
    reader->fastSearch = rp->u.simple.useFastSearch;
    580c:	51 96       	adiw	r26, 0x11	; 17
    580e:	8c 91       	ld	r24, X
    5810:	51 97       	sbiw	r26, 0x11	; 17
    5812:	ed 56       	subi	r30, 0x6D	; 109
    5814:	fa 4f       	sbci	r31, 0xFA	; 250
    5816:	80 83       	st	Z, r24
#endif /* TMR_ENABLE_UHF */

    //Update stopNTrigger status and number of tag count to read.
    reader->isStopNTags = rp->u.simple.stopOnCount.stopNTriggerStatus;
    5818:	52 96       	adiw	r26, 0x12	; 18
    581a:	8c 91       	ld	r24, X
    581c:	52 97       	sbiw	r26, 0x12	; 18
    581e:	70 97       	sbiw	r30, 0x10	; 16
    5820:	80 83       	st	Z, r24
    reader->numberOfTagsToRead = rp->u.simple.stopOnCount.noOfTags;
    5822:	53 96       	adiw	r26, 0x13	; 19
    5824:	8d 91       	ld	r24, X+
    5826:	9d 91       	ld	r25, X+
    5828:	0d 90       	ld	r0, X+
    582a:	bc 91       	ld	r27, X
    582c:	a0 2d       	mov	r26, r0
    582e:	31 96       	adiw	r30, 0x01	; 1
    5830:	80 83       	st	Z, r24
    5832:	91 83       	std	Z+1, r25	; 0x01
    5834:	a2 83       	std	Z+2, r26	; 0x02
    5836:	b3 83       	std	Z+3, r27	; 0x03
  }
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */
#endif /* TMR_ENABLE_GEN2_ONLY */

  /* Set antenna list only if it is not set already. */
  if (reader->isAntennaSet == false)
    5838:	7a 96       	adiw	r30, 0x1a	; 26
    583a:	80 81       	ld	r24, Z
    583c:	81 11       	cpse	r24, r1
    583e:	0c c0       	rjmp	.+24     	; 0x5858 <TMR_SR_read_internal+0x2c8>
  {
    /* At this point we're guaranteed to have a simple read plan */
    ret = prepForSearch(reader, rp);
    5840:	b4 01       	movw	r22, r8
    5842:	c3 01       	movw	r24, r6
    5844:	0e 94 a7 15 	call	0x2b4e	; 0x2b4e <prepForSearch>
    5848:	6b 01       	movw	r12, r22
    584a:	7c 01       	movw	r14, r24
    if (TMR_SUCCESS != ret)
    584c:	61 15       	cp	r22, r1
    584e:	71 05       	cpc	r23, r1
    5850:	81 05       	cpc	r24, r1
    5852:	91 05       	cpc	r25, r1
    5854:	09 f0       	breq	.+2      	; 0x5858 <TMR_SR_read_internal+0x2c8>
    5856:	98 c1       	rjmp	.+816    	; 0x5b88 <TMR_SR_read_internal+0x5f8>
    }
  }

#ifndef TMR_ENABLE_GEN2_ONLY
  /* Set protocol only for Sync read, as Async read contains protocol in 0x2F command */
  if (!reader->continuousReading)
    5858:	f3 01       	movw	r30, r6
    585a:	ea 58       	subi	r30, 0x8A	; 138
    585c:	ff 4f       	sbci	r31, 0xFF	; 255
    585e:	80 81       	ld	r24, Z
    5860:	81 11       	cpse	r24, r1
    5862:	0d c0       	rjmp	.+26     	; 0x587e <TMR_SR_read_internal+0x2ee>
  {
    /* Set protocol to that specified by the read plan. */
    ret = setProtocol(reader, rp->u.simple.protocol);
    5864:	f4 01       	movw	r30, r8
    5866:	64 85       	ldd	r22, Z+12	; 0x0c
    5868:	c3 01       	movw	r24, r6
    586a:	0e 94 1f 04 	call	0x83e	; 0x83e <setProtocol>
    586e:	6b 01       	movw	r12, r22
    5870:	7c 01       	movw	r14, r24
    if (TMR_SUCCESS != ret)
    5872:	61 15       	cp	r22, r1
    5874:	71 05       	cpc	r23, r1
    5876:	81 05       	cpc	r24, r1
    5878:	91 05       	cpc	r25, r1
    587a:	09 f0       	breq	.+2      	; 0x587e <TMR_SR_read_internal+0x2ee>
    587c:	89 c1       	rjmp	.+786    	; 0x5b90 <TMR_SR_read_internal+0x600>
    }
  }
#endif /* TMR_ENABLE_GEN2_ONLY */

  /* Cache the read time so it can be put in tag read data later */
  tm_gettime_consistent(&starttimeHigh, &starttimeLow);
    587e:	be 01       	movw	r22, r28
    5880:	65 5f       	subi	r22, 0xF5	; 245
    5882:	7f 4f       	sbci	r23, 0xFF	; 255
    5884:	ce 01       	movw	r24, r28
    5886:	0f 96       	adiw	r24, 0x0f	; 15
    5888:	0e 94 68 6a 	call	0xd4d0	; 0xd4d0 <tm_gettime_consistent>
  sr->readTimeHigh = starttimeHigh;
    588c:	4f 85       	ldd	r20, Y+15	; 0x0f
    588e:	58 89       	ldd	r21, Y+16	; 0x10
    5890:	69 89       	ldd	r22, Y+17	; 0x11
    5892:	7a 89       	ldd	r23, Y+18	; 0x12
    5894:	f3 01       	movw	r30, r6
    5896:	e8 55       	subi	r30, 0x58	; 88
    5898:	fc 4f       	sbci	r31, 0xFC	; 252
    589a:	40 83       	st	Z, r20
    589c:	51 83       	std	Z+1, r21	; 0x01
    589e:	62 83       	std	Z+2, r22	; 0x02
    58a0:	73 83       	std	Z+3, r23	; 0x03
  sr->readTimeLow = starttimeLow;
    58a2:	8b 85       	ldd	r24, Y+11	; 0x0b
    58a4:	9c 85       	ldd	r25, Y+12	; 0x0c
    58a6:	ad 85       	ldd	r26, Y+13	; 0x0d
    58a8:	be 85       	ldd	r27, Y+14	; 0x0e
    58aa:	34 97       	sbiw	r30, 0x04	; 4
    58ac:	80 83       	st	Z, r24
    58ae:	91 83       	std	Z+1, r25	; 0x01
    58b0:	a2 83       	std	Z+2, r26	; 0x02
    58b2:	b3 83       	std	Z+3, r27	; 0x03
  sr->lastSentTagTimestampHigh = starttimeHigh;
    58b4:	3c 96       	adiw	r30, 0x0c	; 12
    58b6:	40 83       	st	Z, r20
    58b8:	51 83       	std	Z+1, r21	; 0x01
    58ba:	62 83       	std	Z+2, r22	; 0x02
    58bc:	73 83       	std	Z+3, r23	; 0x03
  sr->lastSentTagTimestampLow = starttimeLow;
    58be:	34 96       	adiw	r30, 0x04	; 4
    58c0:	80 83       	st	Z, r24
    58c2:	91 83       	std	Z+1, r25	; 0x01
    58c4:	a2 83       	std	Z+2, r26	; 0x02
    58c6:	b3 83       	std	Z+3, r27	; 0x03

  /* Cache search timeout for later call to streaming receive */
  sr->searchTimeoutMs = timeoutMs;
    58c8:	34 96       	adiw	r30, 0x04	; 4
    58ca:	20 82       	st	Z, r2
    58cc:	31 82       	std	Z+1, r3	; 0x01
    58ce:	42 82       	std	Z+2, r4	; 0x02
    58d0:	53 82       	std	Z+3, r5	; 0x03
#if TMR_ENABLE_PSEUDO_ASYNC_READ
    prevElapsed = elapsed;    /* Update previous read(22h) elapsed time value */
    readTimeMs = timeoutMs - elapsed;
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */

    if (NULL == rp->u.simple.tagop)
    58d2:	d4 01       	movw	r26, r8
    58d4:	1f 96       	adiw	r26, 0x0f	; 15
    58d6:	6d 91       	ld	r22, X+
    58d8:	7c 91       	ld	r23, X
    58da:	50 97       	sbiw	r26, 0x10	; 16
    58dc:	61 15       	cp	r22, r1
    58de:	71 05       	cpc	r23, r1
    58e0:	09 f0       	breq	.+2      	; 0x58e4 <TMR_SR_read_internal+0x354>
    58e2:	46 c0       	rjmp	.+140    	; 0x5970 <TMR_SR_read_internal+0x3e0>
    {
      if(reader->continuousReading)
    58e4:	e2 54       	subi	r30, 0x42	; 66
    58e6:	f3 40       	sbci	r31, 0x03	; 3
    58e8:	80 81       	ld	r24, Z
    58ea:	88 23       	and	r24, r24
    58ec:	69 f1       	breq	.+90     	; 0x5948 <TMR_SR_read_internal+0x3b8>
        TMR_TagProtocolList p;
        TMR_TagProtocolList *protocolList = &p;
        TMR_TagFilter *filters[1];
        TMR_TagProtocol protocols[1];
        
        protocolList->len = 1;
    58ee:	81 e0       	ldi	r24, 0x01	; 1
    58f0:	8e 8b       	std	Y+22, r24	; 0x16
        protocolList->max = 1;
    58f2:	8d 8b       	std	Y+21, r24	; 0x15
        protocolList->list = protocols;
    58f4:	fe 01       	movw	r30, r28
    58f6:	ed 5c       	subi	r30, 0xCD	; 205
    58f8:	fe 4f       	sbci	r31, 0xFE	; 254
    58fa:	fc 8b       	std	Y+20, r31	; 0x14
    58fc:	eb 8b       	std	Y+19, r30	; 0x13

        protocolList->list[0] = rp->u.simple.protocol;
    58fe:	1c 96       	adiw	r26, 0x0c	; 12
    5900:	8c 91       	ld	r24, X
    5902:	1c 97       	sbiw	r26, 0x0c	; 12
    5904:	80 83       	st	Z, r24
        filters[0]= rp->u.simple.filter;
    5906:	1d 96       	adiw	r26, 0x0d	; 13
    5908:	8d 91       	ld	r24, X+
    590a:	9c 91       	ld	r25, X
    590c:	1e 97       	sbiw	r26, 0x0e	; 14
    590e:	cd 5e       	subi	r28, 0xED	; 237
    5910:	de 4f       	sbci	r29, 0xFE	; 254
    5912:	99 83       	std	Y+1, r25	; 0x01
    5914:	88 83       	st	Y, r24
    5916:	c3 51       	subi	r28, 0x13	; 19
    5918:	d1 40       	sbci	r29, 0x01	; 1

        ret = TMR_SR_cmdMultipleProtocolSearch(reader,
    591a:	f3 01       	movw	r30, r6
    591c:	e7 5e       	subi	r30, 0xE7	; 231
    591e:	f9 4f       	sbci	r31, 0xF9	; 249
    5920:	20 81       	ld	r18, Z
    5922:	31 81       	ldd	r19, Z+1	; 0x01
    5924:	fe 01       	movw	r30, r28
    5926:	37 96       	adiw	r30, 0x07	; 7
    5928:	5f 01       	movw	r10, r30
    592a:	61 01       	movw	r12, r2
    592c:	ae 01       	movw	r20, r28
    592e:	4d 5e       	subi	r20, 0xED	; 237
    5930:	5e 4f       	sbci	r21, 0xFE	; 254
    5932:	7a 01       	movw	r14, r20
    5934:	03 e0       	ldi	r16, 0x03	; 3
    5936:	10 e0       	ldi	r17, 0x00	; 0
    5938:	5a 95       	dec	r21
    593a:	62 e2       	ldi	r22, 0x22	; 34
    593c:	c3 01       	movw	r24, r6
    593e:	0e 94 71 5f 	call	0xbee2	; 0xbee2 <TMR_SR_cmdMultipleProtocolSearch>
    5942:	4b 01       	movw	r8, r22
    5944:	5c 01       	movw	r10, r24
    5946:	71 c0       	rjmp	.+226    	; 0x5a2a <TMR_SR_read_internal+0x49a>
                            filters,
                            (uint16_t)timeoutMs, &count);
      }
      else
      {
        ret = TMR_SR_cmdReadTagMultiple(reader,(uint16_t)readTimeMs,
    5948:	d4 01       	movw	r26, r8
    594a:	1c 96       	adiw	r26, 0x0c	; 12
    594c:	0c 91       	ld	r16, X
    594e:	1c 97       	sbiw	r26, 0x0c	; 12
                            TMR_SR_SEARCH_FLAG_CONFIGURED_LIST, 
                            rp->u.simple.filter, rp->u.simple.protocol, &count);
    5950:	1d 96       	adiw	r26, 0x0d	; 13
    5952:	2d 91       	ld	r18, X+
    5954:	3c 91       	ld	r19, X
    5956:	1e 97       	sbiw	r26, 0x0e	; 14
                            filters,
                            (uint16_t)timeoutMs, &count);
      }
      else
      {
        ret = TMR_SR_cmdReadTagMultiple(reader,(uint16_t)readTimeMs,
    5958:	fe 01       	movw	r30, r28
    595a:	37 96       	adiw	r30, 0x07	; 7
    595c:	7f 01       	movw	r14, r30
    595e:	43 e0       	ldi	r20, 0x03	; 3
    5960:	50 e0       	ldi	r21, 0x00	; 0
    5962:	b1 01       	movw	r22, r2
    5964:	c3 01       	movw	r24, r6
    5966:	0e 94 ef 3a 	call	0x75de	; 0x75de <TMR_SR_cmdReadTagMultiple>
    596a:	4b 01       	movw	r8, r22
    596c:	5c 01       	movw	r10, r24
    596e:	5d c0       	rjmp	.+186    	; 0x5a2a <TMR_SR_read_internal+0x49a>
      /* Since this is embedded tagop, removing elapsed time based on
       * continuous reading should not be done 
       */
      readTimeMs = timeoutMs - elapsed_tagop;
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */
      i = 2;
    5970:	82 e0       	ldi	r24, 0x02	; 2
    5972:	cd 5c       	subi	r28, 0xCD	; 205
    5974:	de 4f       	sbci	r29, 0xFE	; 254
    5976:	88 83       	st	Y, r24
    5978:	c3 53       	subi	r28, 0x33	; 51
    597a:	d1 40       	sbci	r29, 0x01	; 1
     
      /**
       * add the tag operation
       **/
      ret = TMR_SR_addTagOp(reader, rp->u.simple.tagop, rp, msg, &i, readTimeMs, &lenbyte);
    597c:	9e 01       	movw	r18, r28
    597e:	2d 5e       	subi	r18, 0xED	; 237
    5980:	3e 4f       	sbci	r19, 0xFE	; 254
    5982:	59 01       	movw	r10, r18
    5984:	72 01       	movw	r14, r4
    5986:	61 01       	movw	r12, r2
    5988:	8e 01       	movw	r16, r28
    598a:	0d 5c       	subi	r16, 0xCD	; 205
    598c:	1e 4f       	sbci	r17, 0xFE	; 254
    598e:	3a 95       	dec	r19
    5990:	a4 01       	movw	r20, r8
    5992:	c3 01       	movw	r24, r6
    5994:	7e d8       	rcall	.-3844   	; 0x4a92 <TMR_SR_addTagOp>
    5996:	4b 01       	movw	r8, r22
    5998:	5c 01       	movw	r10, r24
      if (TMR_SUCCESS != ret)
    599a:	61 15       	cp	r22, r1
    599c:	71 05       	cpc	r23, r1
    599e:	81 05       	cpc	r24, r1
    59a0:	91 05       	cpc	r25, r1
    59a2:	21 f0       	breq	.+8      	; 0x59ac <TMR_SR_read_internal+0x41c>
      {
        return ret;
    59a4:	79 2d       	mov	r23, r9
    59a6:	8a 2d       	mov	r24, r10
    59a8:	9b 2d       	mov	r25, r11
    59aa:	04 c1       	rjmp	.+520    	; 0x5bb4 <TMR_SR_read_internal+0x624>
      }

      msg[lenbyte] = i - (lenbyte + 2); /* Install length of subcommand */
    59ac:	cd 5e       	subi	r28, 0xED	; 237
    59ae:	de 4f       	sbci	r29, 0xFE	; 254
    59b0:	98 81       	ld	r25, Y
    59b2:	c3 51       	subi	r28, 0x13	; 19
    59b4:	d1 40       	sbci	r29, 0x01	; 1
    59b6:	cd 5c       	subi	r28, 0xCD	; 205
    59b8:	de 4f       	sbci	r29, 0xFE	; 254
    59ba:	88 81       	ld	r24, Y
    59bc:	c3 53       	subi	r28, 0x33	; 51
    59be:	d1 40       	sbci	r29, 0x01	; 1
    59c0:	e3 e1       	ldi	r30, 0x13	; 19
    59c2:	f0 e0       	ldi	r31, 0x00	; 0
    59c4:	ec 0f       	add	r30, r28
    59c6:	fd 1f       	adc	r31, r29
    59c8:	e9 0f       	add	r30, r25
    59ca:	f1 1d       	adc	r31, r1
    59cc:	38 2f       	mov	r19, r24
    59ce:	39 1b       	sub	r19, r25
    59d0:	93 2f       	mov	r25, r19
    59d2:	92 50       	subi	r25, 0x02	; 2
    59d4:	90 83       	st	Z, r25
      msg[1] = i - 3; /* Install length */
    59d6:	83 50       	subi	r24, 0x03	; 3
    59d8:	8c 8b       	std	Y+20, r24	; 0x14
      ret = TMR_SR_executeEmbeddedRead(reader, msg, (uint16_t)timeoutMs, &multipleStatus);
    59da:	9e 01       	movw	r18, r28
    59dc:	2f 5f       	subi	r18, 0xFF	; 255
    59de:	3f 4f       	sbci	r19, 0xFF	; 255
    59e0:	a1 01       	movw	r20, r2
    59e2:	be 01       	movw	r22, r28
    59e4:	6d 5e       	subi	r22, 0xED	; 237
    59e6:	7f 4f       	sbci	r23, 0xFF	; 255
    59e8:	c3 01       	movw	r24, r6
    59ea:	0e 94 09 3c 	call	0x7812	; 0x7812 <TMR_SR_executeEmbeddedRead>
    59ee:	4b 01       	movw	r8, r22
    59f0:	5c 01       	movw	r10, r24
      count = multipleStatus.tagsFound;
    59f2:	89 81       	ldd	r24, Y+1	; 0x01
    59f4:	9a 81       	ldd	r25, Y+2	; 0x02
    59f6:	a0 e0       	ldi	r26, 0x00	; 0
    59f8:	b0 e0       	ldi	r27, 0x00	; 0
    59fa:	8f 83       	std	Y+7, r24	; 0x07
    59fc:	98 87       	std	Y+8, r25	; 0x08
    59fe:	a9 87       	std	Y+9, r26	; 0x09
    5a00:	ba 87       	std	Y+10, r27	; 0x0a


      /* Update embedded tagop success/failure count */
      reader->u.serialReader.tagopSuccessCount += multipleStatus.successCount;
    5a02:	8b 81       	ldd	r24, Y+3	; 0x03
    5a04:	9c 81       	ldd	r25, Y+4	; 0x04
    5a06:	f3 01       	movw	r30, r6
    5a08:	ed 53       	subi	r30, 0x3D	; 61
    5a0a:	fa 4f       	sbci	r31, 0xFA	; 250
    5a0c:	20 81       	ld	r18, Z
    5a0e:	31 81       	ldd	r19, Z+1	; 0x01
    5a10:	82 0f       	add	r24, r18
    5a12:	93 1f       	adc	r25, r19
    5a14:	91 83       	std	Z+1, r25	; 0x01
    5a16:	80 83       	st	Z, r24
      reader->u.serialReader.tagopFailureCount += multipleStatus.failureCount;
    5a18:	8d 81       	ldd	r24, Y+5	; 0x05
    5a1a:	9e 81       	ldd	r25, Y+6	; 0x06
    5a1c:	32 96       	adiw	r30, 0x02	; 2
    5a1e:	20 81       	ld	r18, Z
    5a20:	31 81       	ldd	r19, Z+1	; 0x01
    5a22:	82 0f       	add	r24, r18
    5a24:	93 1f       	adc	r25, r19
    5a26:	91 83       	std	Z+1, r25	; 0x01
    5a28:	80 83       	st	Z, r24
    }

    // Error Handling
    if (TMR_ERROR_NO_TAGS_FOUND == ret)
    5a2a:	81 14       	cp	r8, r1
    5a2c:	44 e0       	ldi	r20, 0x04	; 4
    5a2e:	94 06       	cpc	r9, r20
    5a30:	a1 04       	cpc	r10, r1
    5a32:	42 e0       	ldi	r20, 0x02	; 2
    5a34:	b4 06       	cpc	r11, r20
    5a36:	41 f4       	brne	.+16     	; 0x5a48 <TMR_SR_read_internal+0x4b8>
    {
      count = 0;
    5a38:	1f 82       	std	Y+7, r1	; 0x07
    5a3a:	18 86       	std	Y+8, r1	; 0x08
    5a3c:	19 86       	std	Y+9, r1	; 0x09
    5a3e:	1a 86       	std	Y+10, r1	; 0x0a
      ret = TMR_SUCCESS;
    5a40:	81 2c       	mov	r8, r1
    5a42:	91 2c       	mov	r9, r1
    5a44:	54 01       	movw	r10, r8
    5a46:	5b c0       	rjmp	.+182    	; 0x5afe <TMR_SR_read_internal+0x56e>
    }
    else if ((TMR_ERROR_TM_ASSERT_FAILED == ret) || (TMR_ERROR_TIMEOUT == ret))
    5a48:	51 e0       	ldi	r21, 0x01	; 1
    5a4a:	85 16       	cp	r8, r21
    5a4c:	5f e7       	ldi	r21, 0x7F	; 127
    5a4e:	95 06       	cpc	r9, r21
    5a50:	a1 04       	cpc	r10, r1
    5a52:	52 e0       	ldi	r21, 0x02	; 2
    5a54:	b5 06       	cpc	r11, r21
    5a56:	09 f4       	brne	.+2      	; 0x5a5a <TMR_SR_read_internal+0x4ca>
    5a58:	9f c0       	rjmp	.+318    	; 0x5b98 <TMR_SR_read_internal+0x608>
    5a5a:	81 e0       	ldi	r24, 0x01	; 1
    5a5c:	88 16       	cp	r8, r24
    5a5e:	91 04       	cpc	r9, r1
    5a60:	a1 04       	cpc	r10, r1
    5a62:	b8 06       	cpc	r11, r24
    5a64:	09 f4       	brne	.+2      	; 0x5a68 <TMR_SR_read_internal+0x4d8>
    5a66:	9d c0       	rjmp	.+314    	; 0x5ba2 <TMR_SR_read_internal+0x612>
        return ret1;
      }
    }
#endif /* TMR_ENABLE_BACKGROUND_READS */
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */
    else if (TMR_SUCCESS != ret)
    5a68:	81 14       	cp	r8, r1
    5a6a:	91 04       	cpc	r9, r1
    5a6c:	a1 04       	cpc	r10, r1
    5a6e:	b1 04       	cpc	r11, r1
    5a70:	09 f4       	brne	.+2      	; 0x5a74 <TMR_SR_read_internal+0x4e4>
    5a72:	45 c0       	rjmp	.+138    	; 0x5afe <TMR_SR_read_internal+0x56e>
    {
      uint16_t remainingTagsCount;
      TMR_Status ret1;
      reader->isStopNTags = false;
    5a74:	f3 01       	movw	r30, r6
    5a76:	e4 50       	subi	r30, 0x04	; 4
    5a78:	fa 4f       	sbci	r31, 0xFA	; 250
    5a7a:	10 82       	st	Z, r1

      /* Check for the tag count (in case of module error)*/
      ret1 = TMR_SR_cmdGetTagsRemaining(reader, &remainingTagsCount);
    5a7c:	be 01       	movw	r22, r28
    5a7e:	6d 5e       	subi	r22, 0xED	; 237
    5a80:	7f 4f       	sbci	r23, 0xFF	; 255
    5a82:	c3 01       	movw	r24, r6
    5a84:	0e 94 d1 43 	call	0x87a2	; 0x87a2 <TMR_SR_cmdGetTagsRemaining>
    5a88:	6b 01       	movw	r12, r22
    5a8a:	7c 01       	movw	r14, r24
      if (TMR_SUCCESS != ret1)
    5a8c:	61 15       	cp	r22, r1
    5a8e:	71 05       	cpc	r23, r1
    5a90:	81 05       	cpc	r24, r1
    5a92:	91 05       	cpc	r25, r1
    5a94:	59 f5       	brne	.+86     	; 0x5aec <TMR_SR_read_internal+0x55c>
      {
        return ret1;
      }
      sr->tagsRemaining += remainingTagsCount;
    5a96:	4b 89       	ldd	r20, Y+19	; 0x13
    5a98:	5c 89       	ldd	r21, Y+20	; 0x14
    5a9a:	f3 01       	movw	r30, r6
    5a9c:	e4 54       	subi	r30, 0x44	; 68
    5a9e:	fc 4f       	sbci	r31, 0xFC	; 252
    5aa0:	20 81       	ld	r18, Z
    5aa2:	31 81       	ldd	r19, Z+1	; 0x01
    5aa4:	24 0f       	add	r18, r20
    5aa6:	35 1f       	adc	r19, r21
    5aa8:	31 83       	std	Z+1, r19	; 0x01
    5aaa:	20 83       	st	Z, r18
      if (NULL != tagCount)
    5aac:	c9 5c       	subi	r28, 0xC9	; 201
    5aae:	de 4f       	sbci	r29, 0xFE	; 254
    5ab0:	a8 81       	ld	r26, Y
    5ab2:	b9 81       	ldd	r27, Y+1	; 0x01
    5ab4:	c7 53       	subi	r28, 0x37	; 55
    5ab6:	d1 40       	sbci	r29, 0x01	; 1
    5ab8:	10 97       	sbiw	r26, 0x00	; 0
    5aba:	e1 f0       	breq	.+56     	; 0x5af4 <TMR_SR_read_internal+0x564>
      {
        *tagCount += remainingTagsCount;
    5abc:	8d 91       	ld	r24, X+
    5abe:	9d 91       	ld	r25, X+
    5ac0:	0d 90       	ld	r0, X+
    5ac2:	bc 91       	ld	r27, X
    5ac4:	a0 2d       	mov	r26, r0
    5ac6:	84 0f       	add	r24, r20
    5ac8:	95 1f       	adc	r25, r21
    5aca:	a1 1d       	adc	r26, r1
    5acc:	b1 1d       	adc	r27, r1
    5ace:	c9 5c       	subi	r28, 0xC9	; 201
    5ad0:	de 4f       	sbci	r29, 0xFE	; 254
    5ad2:	e8 81       	ld	r30, Y
    5ad4:	f9 81       	ldd	r31, Y+1	; 0x01
    5ad6:	c7 53       	subi	r28, 0x37	; 55
    5ad8:	d1 40       	sbci	r29, 0x01	; 1
    5ada:	80 83       	st	Z, r24
    5adc:	91 83       	std	Z+1, r25	; 0x01
    5ade:	a2 83       	std	Z+2, r26	; 0x02
    5ae0:	b3 83       	std	Z+3, r27	; 0x03
      }
      return ret;
    5ae2:	68 2d       	mov	r22, r8
    5ae4:	79 2d       	mov	r23, r9
    5ae6:	8a 2d       	mov	r24, r10
    5ae8:	9b 2d       	mov	r25, r11
    5aea:	64 c0       	rjmp	.+200    	; 0x5bb4 <TMR_SR_read_internal+0x624>

      /* Check for the tag count (in case of module error)*/
      ret1 = TMR_SR_cmdGetTagsRemaining(reader, &remainingTagsCount);
      if (TMR_SUCCESS != ret1)
      {
        return ret1;
    5aec:	7d 2d       	mov	r23, r13
    5aee:	8e 2d       	mov	r24, r14
    5af0:	9f 2d       	mov	r25, r15
    5af2:	60 c0       	rjmp	.+192    	; 0x5bb4 <TMR_SR_read_internal+0x624>
      sr->tagsRemaining += remainingTagsCount;
      if (NULL != tagCount)
      {
        *tagCount += remainingTagsCount;
      }
      return ret;
    5af4:	68 2d       	mov	r22, r8
    5af6:	79 2d       	mov	r23, r9
    5af8:	8a 2d       	mov	r24, r10
    5afa:	9b 2d       	mov	r25, r11
    5afc:	5b c0       	rjmp	.+182    	; 0x5bb4 <TMR_SR_read_internal+0x624>
    }

    sr->tagsRemaining += count;
    5afe:	8f 81       	ldd	r24, Y+7	; 0x07
    5b00:	98 85       	ldd	r25, Y+8	; 0x08
    5b02:	a9 85       	ldd	r26, Y+9	; 0x09
    5b04:	ba 85       	ldd	r27, Y+10	; 0x0a
    5b06:	f3 01       	movw	r30, r6
    5b08:	e4 54       	subi	r30, 0x44	; 68
    5b0a:	fc 4f       	sbci	r31, 0xFC	; 252
    5b0c:	20 81       	ld	r18, Z
    5b0e:	31 81       	ldd	r19, Z+1	; 0x01
    5b10:	28 0f       	add	r18, r24
    5b12:	39 1f       	adc	r19, r25
    5b14:	31 83       	std	Z+1, r19	; 0x01
    5b16:	20 83       	st	Z, r18
    if (NULL != tagCount)
    5b18:	c9 5c       	subi	r28, 0xC9	; 201
    5b1a:	de 4f       	sbci	r29, 0xFE	; 254
    5b1c:	28 81       	ld	r18, Y
    5b1e:	39 81       	ldd	r19, Y+1	; 0x01
    5b20:	c7 53       	subi	r28, 0x37	; 55
    5b22:	d1 40       	sbci	r29, 0x01	; 1
    5b24:	21 15       	cp	r18, r1
    5b26:	31 05       	cpc	r19, r1
    5b28:	69 f0       	breq	.+26     	; 0x5b44 <TMR_SR_read_internal+0x5b4>
    {
      *tagCount += count;
    5b2a:	f9 01       	movw	r30, r18
    5b2c:	40 81       	ld	r20, Z
    5b2e:	51 81       	ldd	r21, Z+1	; 0x01
    5b30:	62 81       	ldd	r22, Z+2	; 0x02
    5b32:	73 81       	ldd	r23, Z+3	; 0x03
    5b34:	84 0f       	add	r24, r20
    5b36:	95 1f       	adc	r25, r21
    5b38:	a6 1f       	adc	r26, r22
    5b3a:	b7 1f       	adc	r27, r23
    5b3c:	80 83       	st	Z, r24
    5b3e:	91 83       	std	Z+1, r25	; 0x01
    5b40:	a2 83       	std	Z+2, r26	; 0x02
    5b42:	b3 83       	std	Z+3, r27	; 0x03
    }

    if (reader->continuousReading)
    5b44:	f3 01       	movw	r30, r6
    5b46:	ea 58       	subi	r30, 0x8A	; 138
    5b48:	ff 4f       	sbci	r31, 0xFF	; 255
    5b4a:	90 81       	ld	r25, Z
    5b4c:	99 23       	and	r25, r25
    5b4e:	39 f0       	breq	.+14     	; 0x5b5e <TMR_SR_read_internal+0x5ce>
    {
      sr->tagsRemaining = 1;
    5b50:	ea 5b       	subi	r30, 0xBA	; 186
    5b52:	fc 4f       	sbci	r31, 0xFC	; 252
    5b54:	21 e0       	ldi	r18, 0x01	; 1
    5b56:	30 e0       	ldi	r19, 0x00	; 0
    5b58:	31 83       	std	Z+1, r19	; 0x01
    5b5a:	20 83       	st	Z, r18
    5b5c:	0a c0       	rjmp	.+20     	; 0x5b72 <TMR_SR_read_internal+0x5e2>
#if TMR_ENABLE_PSEUDO_ASYNC_READ
      break;
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */
    }
    else if (reader->isStopNTags)
    5b5e:	f3 01       	movw	r30, r6
    5b60:	e4 50       	subi	r30, 0x04	; 4
    5b62:	fa 4f       	sbci	r31, 0xFA	; 250
    5b64:	80 81       	ld	r24, Z
    5b66:	88 23       	and	r24, r24
    5b68:	21 f0       	breq	.+8      	; 0x5b72 <TMR_SR_read_internal+0x5e2>
    {
      /** 
       * No need to loop back for stop N tags
       **/
#ifdef TMR_ENABLE_UHF
      isMultiSelectEnabled = false;
    5b6a:	10 92 5f 02 	sts	0x025F, r1	; 0x80025f <isMultiSelectEnabled>
      isEmbeddedTagopEnabled = false;
    5b6e:	10 92 5e 02 	sts	0x025E, r1	; 0x80025e <isEmbeddedTagopEnabled>
#endif
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */

#ifdef TMR_ENABLE_UHF
#if (!TMR_ENABLE_PSEUDO_ASYNC_READ)
    if (!reader->continuousReading)
    5b72:	91 11       	cpse	r25, r1
    5b74:	1b c0       	rjmp	.+54     	; 0x5bac <TMR_SR_read_internal+0x61c>
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */
    {
      isMultiSelectEnabled = false;
    5b76:	10 92 5f 02 	sts	0x025F, r1	; 0x80025f <isMultiSelectEnabled>
      isEmbeddedTagopEnabled = false;
    5b7a:	10 92 5e 02 	sts	0x025E, r1	; 0x80025e <isEmbeddedTagopEnabled>
    }
  }
#endif /* TMR_ENABLE_BACKGROUND_READS */
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */

  return ret;
    5b7e:	68 2d       	mov	r22, r8
    5b80:	79 2d       	mov	r23, r9
    5b82:	8a 2d       	mov	r24, r10
    5b84:	9b 2d       	mov	r25, r11
    5b86:	16 c0       	rjmp	.+44     	; 0x5bb4 <TMR_SR_read_internal+0x624>
  {
    /* At this point we're guaranteed to have a simple read plan */
    ret = prepForSearch(reader, rp);
    if (TMR_SUCCESS != ret)
    {
      return ret;
    5b88:	7d 2d       	mov	r23, r13
    5b8a:	8e 2d       	mov	r24, r14
    5b8c:	9f 2d       	mov	r25, r15
    5b8e:	12 c0       	rjmp	.+36     	; 0x5bb4 <TMR_SR_read_internal+0x624>
  {
    /* Set protocol to that specified by the read plan. */
    ret = setProtocol(reader, rp->u.simple.protocol);
    if (TMR_SUCCESS != ret)
    {
      return ret;
    5b90:	7d 2d       	mov	r23, r13
    5b92:	8e 2d       	mov	r24, r14
    5b94:	9f 2d       	mov	r25, r15
    5b96:	0e c0       	rjmp	.+28     	; 0x5bb4 <TMR_SR_read_internal+0x624>
      count = 0;
      ret = TMR_SUCCESS;
    }
    else if ((TMR_ERROR_TM_ASSERT_FAILED == ret) || (TMR_ERROR_TIMEOUT == ret))
	{
	  return ret;
    5b98:	68 2d       	mov	r22, r8
    5b9a:	79 2d       	mov	r23, r9
    5b9c:	8a 2d       	mov	r24, r10
    5b9e:	9b 2d       	mov	r25, r11
    5ba0:	09 c0       	rjmp	.+18     	; 0x5bb4 <TMR_SR_read_internal+0x624>
    5ba2:	68 2d       	mov	r22, r8
    5ba4:	79 2d       	mov	r23, r9
    5ba6:	8a 2d       	mov	r24, r10
    5ba8:	9b 2d       	mov	r25, r11
    5baa:	04 c0       	rjmp	.+8      	; 0x5bb4 <TMR_SR_read_internal+0x624>
    }
  }
#endif /* TMR_ENABLE_BACKGROUND_READS */
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */

  return ret;
    5bac:	68 2d       	mov	r22, r8
    5bae:	79 2d       	mov	r23, r9
    5bb0:	8a 2d       	mov	r24, r10
    5bb2:	9b 2d       	mov	r25, r11
}
    5bb4:	c8 5c       	subi	r28, 0xC8	; 200
    5bb6:	de 4f       	sbci	r29, 0xFE	; 254
    5bb8:	0f b6       	in	r0, 0x3f	; 63
    5bba:	f8 94       	cli
    5bbc:	de bf       	out	0x3e, r29	; 62
    5bbe:	0f be       	out	0x3f, r0	; 63
    5bc0:	cd bf       	out	0x3d, r28	; 61
    5bc2:	df 91       	pop	r29
    5bc4:	cf 91       	pop	r28
    5bc6:	1f 91       	pop	r17
    5bc8:	0f 91       	pop	r16
    5bca:	ff 90       	pop	r15
    5bcc:	ef 90       	pop	r14
    5bce:	df 90       	pop	r13
    5bd0:	cf 90       	pop	r12
    5bd2:	bf 90       	pop	r11
    5bd4:	af 90       	pop	r10
    5bd6:	9f 90       	pop	r9
    5bd8:	8f 90       	pop	r8
    5bda:	7f 90       	pop	r7
    5bdc:	6f 90       	pop	r6
    5bde:	5f 90       	pop	r5
    5be0:	4f 90       	pop	r4
    5be2:	3f 90       	pop	r3
    5be4:	2f 90       	pop	r2
    5be6:	08 95       	ret

00005be8 <TMR_SR_read>:

TMR_Status
TMR_SR_read(struct TMR_Reader *reader, uint32_t timeoutMs, int32_t *tagCount)
{
    5be8:	cf 92       	push	r12
    5bea:	df 92       	push	r13
    5bec:	ef 92       	push	r14
    5bee:	ff 92       	push	r15
    5bf0:	0f 93       	push	r16
    5bf2:	1f 93       	push	r17
    5bf4:	cf 93       	push	r28
    5bf6:	df 93       	push	r29
  TMR_Status ret;
  TMR_ReadPlan *rp;

  if(timeoutMs > TMR_MAX_VALUE)
    5bf8:	41 15       	cp	r20, r1
    5bfa:	51 05       	cpc	r21, r1
    5bfc:	e1 e0       	ldi	r30, 0x01	; 1
    5bfe:	6e 07       	cpc	r22, r30
    5c00:	71 05       	cpc	r23, r1
    5c02:	78 f5       	brcc	.+94     	; 0x5c62 <TMR_SR_read+0x7a>
  {
    return TMR_ERROR_INVALID_VALUE;
  }
  reader->u.serialReader.tagsRemaining = 0;
    5c04:	fc 01       	movw	r30, r24
    5c06:	e4 54       	subi	r30, 0x44	; 68
    5c08:	fc 4f       	sbci	r31, 0xFC	; 252
    5c0a:	11 82       	std	Z+1, r1	; 0x01
    5c0c:	10 82       	st	Z, r1

  /* Reset tagop result count. */
  reader->u.serialReader.tagopSuccessCount = 0;
    5c0e:	e9 5f       	subi	r30, 0xF9	; 249
    5c10:	fd 4f       	sbci	r31, 0xFD	; 253
    5c12:	11 82       	std	Z+1, r1	; 0x01
    5c14:	10 82       	st	Z, r1
  reader->u.serialReader.tagopFailureCount = 0;
    5c16:	32 96       	adiw	r30, 0x02	; 2
    5c18:	11 82       	std	Z+1, r1	; 0x01
    5c1a:	10 82       	st	Z, r1

  rp = reader->readParams.readPlan;
    5c1c:	fc 01       	movw	r30, r24
    5c1e:	02 a9       	ldd	r16, Z+50	; 0x32
    5c20:	13 a9       	ldd	r17, Z+51	; 0x33

  if (tagCount)
    5c22:	21 15       	cp	r18, r1
    5c24:	31 05       	cpc	r19, r1
    5c26:	29 f0       	breq	.+10     	; 0x5c32 <TMR_SR_read+0x4a>
  {
    *tagCount = 0;
    5c28:	f9 01       	movw	r30, r18
    5c2a:	10 82       	st	Z, r1
    5c2c:	11 82       	std	Z+1, r1	; 0x01
    5c2e:	12 82       	std	Z+2, r1	; 0x02
    5c30:	13 82       	std	Z+3, r1	; 0x03
    5c32:	ec 01       	movw	r28, r24
  }
  
  ret = TMR_SR_read_internal(reader, timeoutMs, tagCount, rp);
    5c34:	ad dc       	rcall	.-1702   	; 0x5590 <TMR_SR_read_internal>
    5c36:	6b 01       	movw	r12, r22
    5c38:	7c 01       	movw	r14, r24
  if (ret != TMR_SUCCESS)
    5c3a:	61 15       	cp	r22, r1
    5c3c:	71 05       	cpc	r23, r1
    5c3e:	81 05       	cpc	r24, r1
    5c40:	91 05       	cpc	r25, r1
    5c42:	a1 f4       	brne	.+40     	; 0x5c6c <TMR_SR_read+0x84>
  {
	  return ret;
  }
  if (reader->continuousReading)
    5c44:	fe 01       	movw	r30, r28
    5c46:	ea 58       	subi	r30, 0x8A	; 138
    5c48:	ff 4f       	sbci	r31, 0xFF	; 255
    5c4a:	80 81       	ld	r24, Z
    5c4c:	88 23       	and	r24, r24
    5c4e:	91 f0       	breq	.+36     	; 0x5c74 <TMR_SR_read+0x8c>
	reader->hasContinuousReadStarted = true;
    5c50:	c5 58       	subi	r28, 0x85	; 133
    5c52:	de 4f       	sbci	r29, 0xFE	; 254
    5c54:	81 e0       	ldi	r24, 0x01	; 1
    5c56:	88 83       	st	Y, r24
  return ret;
    5c58:	6c 2d       	mov	r22, r12
    5c5a:	7d 2d       	mov	r23, r13
    5c5c:	8e 2d       	mov	r24, r14
    5c5e:	9f 2d       	mov	r25, r15
    5c60:	0d c0       	rjmp	.+26     	; 0x5c7c <TMR_SR_read+0x94>
  TMR_Status ret;
  TMR_ReadPlan *rp;

  if(timeoutMs > TMR_MAX_VALUE)
  {
    return TMR_ERROR_INVALID_VALUE;
    5c62:	67 e1       	ldi	r22, 0x17	; 23
    5c64:	70 e0       	ldi	r23, 0x00	; 0
    5c66:	80 e0       	ldi	r24, 0x00	; 0
    5c68:	93 e0       	ldi	r25, 0x03	; 3
    5c6a:	08 c0       	rjmp	.+16     	; 0x5c7c <TMR_SR_read+0x94>
  }
  
  ret = TMR_SR_read_internal(reader, timeoutMs, tagCount, rp);
  if (ret != TMR_SUCCESS)
  {
	  return ret;
    5c6c:	7d 2d       	mov	r23, r13
    5c6e:	8e 2d       	mov	r24, r14
    5c70:	9f 2d       	mov	r25, r15
    5c72:	04 c0       	rjmp	.+8      	; 0x5c7c <TMR_SR_read+0x94>
  }
  if (reader->continuousReading)
	reader->hasContinuousReadStarted = true;
  return ret;
    5c74:	6c 2d       	mov	r22, r12
    5c76:	7d 2d       	mov	r23, r13
    5c78:	8e 2d       	mov	r24, r14
    5c7a:	9f 2d       	mov	r25, r15
}
    5c7c:	df 91       	pop	r29
    5c7e:	cf 91       	pop	r28
    5c80:	1f 91       	pop	r17
    5c82:	0f 91       	pop	r16
    5c84:	ff 90       	pop	r15
    5c86:	ef 90       	pop	r14
    5c88:	df 90       	pop	r13
    5c8a:	cf 90       	pop	r12
    5c8c:	08 95       	ret

00005c8e <tm_crc>:
      i += dataLength;
    }
  }

  return TMR_SUCCESS;
}
    5c8e:	dc 01       	movw	r26, r24
    5c90:	40 e0       	ldi	r20, 0x00	; 0
    5c92:	50 e0       	ldi	r21, 0x00	; 0
    5c94:	8f ef       	ldi	r24, 0xFF	; 255
    5c96:	9f ef       	ldi	r25, 0xFF	; 255
    5c98:	34 c0       	rjmp	.+104    	; 0x5d02 <tm_crc+0x74>
    5c9a:	9c 01       	movw	r18, r24
    5c9c:	22 95       	swap	r18
    5c9e:	32 95       	swap	r19
    5ca0:	30 7f       	andi	r19, 0xF0	; 240
    5ca2:	32 27       	eor	r19, r18
    5ca4:	20 7f       	andi	r18, 0xF0	; 240
    5ca6:	32 27       	eor	r19, r18
    5ca8:	fd 01       	movw	r30, r26
    5caa:	e4 0f       	add	r30, r20
    5cac:	f5 1f       	adc	r31, r21
    5cae:	70 81       	ld	r23, Z
    5cb0:	e7 2f       	mov	r30, r23
    5cb2:	e2 95       	swap	r30
    5cb4:	ef 70       	andi	r30, 0x0F	; 15
    5cb6:	2e 2b       	or	r18, r30
    5cb8:	fc 01       	movw	r30, r24
    5cba:	ef 2f       	mov	r30, r31
    5cbc:	ff 27       	eor	r31, r31
    5cbe:	e2 95       	swap	r30
    5cc0:	ef 70       	andi	r30, 0x0F	; 15
    5cc2:	ee 0f       	add	r30, r30
    5cc4:	ff 1f       	adc	r31, r31
    5cc6:	e0 50       	subi	r30, 0x00	; 0
    5cc8:	ff 4f       	sbci	r31, 0xFF	; 255
    5cca:	80 81       	ld	r24, Z
    5ccc:	91 81       	ldd	r25, Z+1	; 0x01
    5cce:	28 27       	eor	r18, r24
    5cd0:	39 27       	eor	r19, r25
    5cd2:	c9 01       	movw	r24, r18
    5cd4:	82 95       	swap	r24
    5cd6:	92 95       	swap	r25
    5cd8:	90 7f       	andi	r25, 0xF0	; 240
    5cda:	98 27       	eor	r25, r24
    5cdc:	80 7f       	andi	r24, 0xF0	; 240
    5cde:	98 27       	eor	r25, r24
    5ce0:	7f 70       	andi	r23, 0x0F	; 15
    5ce2:	87 2b       	or	r24, r23
    5ce4:	f9 01       	movw	r30, r18
    5ce6:	ef 2f       	mov	r30, r31
    5ce8:	ff 27       	eor	r31, r31
    5cea:	e2 95       	swap	r30
    5cec:	ef 70       	andi	r30, 0x0F	; 15
    5cee:	ee 0f       	add	r30, r30
    5cf0:	ff 1f       	adc	r31, r31
    5cf2:	e0 50       	subi	r30, 0x00	; 0
    5cf4:	ff 4f       	sbci	r31, 0xFF	; 255
    5cf6:	20 81       	ld	r18, Z
    5cf8:	31 81       	ldd	r19, Z+1	; 0x01
    5cfa:	82 27       	eor	r24, r18
    5cfc:	93 27       	eor	r25, r19
    5cfe:	4f 5f       	subi	r20, 0xFF	; 255
    5d00:	5f 4f       	sbci	r21, 0xFF	; 255
    5d02:	26 2f       	mov	r18, r22
    5d04:	30 e0       	ldi	r19, 0x00	; 0
    5d06:	42 17       	cp	r20, r18
    5d08:	53 07       	cpc	r21, r19
    5d0a:	3c f2       	brlt	.-114    	; 0x5c9a <tm_crc+0xc>
    5d0c:	08 95       	ret

00005d0e <filterbytes>:
    5d0e:	2f 92       	push	r2
    5d10:	3f 92       	push	r3
    5d12:	4f 92       	push	r4
    5d14:	5f 92       	push	r5
    5d16:	6f 92       	push	r6
    5d18:	7f 92       	push	r7
    5d1a:	8f 92       	push	r8
    5d1c:	9f 92       	push	r9
    5d1e:	af 92       	push	r10
    5d20:	bf 92       	push	r11
    5d22:	cf 92       	push	r12
    5d24:	df 92       	push	r13
    5d26:	ef 92       	push	r14
    5d28:	ff 92       	push	r15
    5d2a:	0f 93       	push	r16
    5d2c:	1f 93       	push	r17
    5d2e:	cf 93       	push	r28
    5d30:	df 93       	push	r29
    5d32:	00 d0       	rcall	.+0      	; 0x5d34 <filterbytes+0x26>
    5d34:	00 d0       	rcall	.+0      	; 0x5d36 <filterbytes+0x28>
    5d36:	00 d0       	rcall	.+0      	; 0x5d38 <filterbytes+0x2a>
    5d38:	cd b7       	in	r28, 0x3d	; 61
    5d3a:	de b7       	in	r29, 0x3e	; 62
    5d3c:	90 91 5d 02 	lds	r25, 0x025D	; 0x80025d <isSecureAccessEnabled>
    5d40:	99 23       	and	r25, r25
    5d42:	19 f0       	breq	.+6      	; 0x5d4a <filterbytes+0x3c>
    5d44:	90 e4       	ldi	r25, 0x40	; 64
    5d46:	da 01       	movw	r26, r20
    5d48:	9c 93       	st	X, r25
    5d4a:	61 15       	cp	r22, r1
    5d4c:	71 05       	cpc	r23, r1
    5d4e:	31 f4       	brne	.+12     	; 0x5d5c <filterbytes+0x4e>
    5d50:	c1 14       	cp	r12, r1
    5d52:	d1 04       	cpc	r13, r1
    5d54:	e1 04       	cpc	r14, r1
    5d56:	f1 04       	cpc	r15, r1
    5d58:	09 f4       	brne	.+2      	; 0x5d5c <filterbytes+0x4e>
    5d5a:	69 c3       	rjmp	.+1746   	; 0x642e <filterbytes+0x720>
    5d5c:	c9 82       	std	Y+1, r12	; 0x01
    5d5e:	da 82       	std	Y+2, r13	; 0x02
    5d60:	eb 82       	std	Y+3, r14	; 0x03
    5d62:	fc 82       	std	Y+4, r15	; 0x04
    5d64:	38 01       	movw	r6, r16
    5d66:	49 01       	movw	r8, r18
    5d68:	da 01       	movw	r26, r20
    5d6a:	7e 83       	std	Y+6, r23	; 0x06
    5d6c:	6d 83       	std	Y+5, r22	; 0x05
    5d6e:	b8 2e       	mov	r11, r24
    5d70:	e5 e0       	ldi	r30, 0x05	; 5
    5d72:	8e 13       	cpse	r24, r30
    5d74:	77 c2       	rjmp	.+1262   	; 0x6264 <filterbytes+0x556>
    5d76:	aa 20       	and	r10, r10
    5d78:	d9 f1       	breq	.+118    	; 0x5df0 <filterbytes+0xe2>
    5d7a:	61 15       	cp	r22, r1
    5d7c:	71 05       	cpc	r23, r1
    5d7e:	39 f0       	breq	.+14     	; 0x5d8e <filterbytes+0x80>
    5d80:	fb 01       	movw	r30, r22
    5d82:	80 81       	ld	r24, Z
    5d84:	81 30       	cpi	r24, 0x01	; 1
    5d86:	19 f4       	brne	.+6      	; 0x5d8e <filterbytes+0x80>
    5d88:	82 81       	ldd	r24, Z+2	; 0x02
    5d8a:	86 30       	cpi	r24, 0x06	; 6
    5d8c:	89 f1       	breq	.+98     	; 0x5df0 <filterbytes+0xe2>
    5d8e:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    5d92:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    5d96:	04 96       	adiw	r24, 0x04	; 4
    5d98:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    5d9c:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    5da0:	f4 01       	movw	r30, r8
    5da2:	80 81       	ld	r24, Z
    5da4:	91 e0       	ldi	r25, 0x01	; 1
    5da6:	98 0f       	add	r25, r24
    5da8:	90 83       	st	Z, r25
    5daa:	f3 01       	movw	r30, r6
    5dac:	e8 0f       	add	r30, r24
    5dae:	f1 1d       	adc	r31, r1
    5db0:	2c 81       	ldd	r18, Y+4	; 0x04
    5db2:	20 83       	st	Z, r18
    5db4:	f4 01       	movw	r30, r8
    5db6:	80 81       	ld	r24, Z
    5db8:	91 e0       	ldi	r25, 0x01	; 1
    5dba:	98 0f       	add	r25, r24
    5dbc:	90 83       	st	Z, r25
    5dbe:	f3 01       	movw	r30, r6
    5dc0:	e8 0f       	add	r30, r24
    5dc2:	f1 1d       	adc	r31, r1
    5dc4:	2b 81       	ldd	r18, Y+3	; 0x03
    5dc6:	20 83       	st	Z, r18
    5dc8:	f4 01       	movw	r30, r8
    5dca:	80 81       	ld	r24, Z
    5dcc:	91 e0       	ldi	r25, 0x01	; 1
    5dce:	98 0f       	add	r25, r24
    5dd0:	90 83       	st	Z, r25
    5dd2:	f3 01       	movw	r30, r6
    5dd4:	e8 0f       	add	r30, r24
    5dd6:	f1 1d       	adc	r31, r1
    5dd8:	2a 81       	ldd	r18, Y+2	; 0x02
    5dda:	20 83       	st	Z, r18
    5ddc:	f4 01       	movw	r30, r8
    5dde:	80 81       	ld	r24, Z
    5de0:	91 e0       	ldi	r25, 0x01	; 1
    5de2:	98 0f       	add	r25, r24
    5de4:	90 83       	st	Z, r25
    5de6:	f3 01       	movw	r30, r6
    5de8:	e8 0f       	add	r30, r24
    5dea:	f1 1d       	adc	r31, r1
    5dec:	29 81       	ldd	r18, Y+1	; 0x01
    5dee:	20 83       	st	Z, r18
    5df0:	8d 81       	ldd	r24, Y+5	; 0x05
    5df2:	9e 81       	ldd	r25, Y+6	; 0x06
    5df4:	89 2b       	or	r24, r25
    5df6:	09 f0       	breq	.+2      	; 0x5dfa <filterbytes+0xec>
    5df8:	42 c0       	rjmp	.+132    	; 0x5e7e <filterbytes+0x170>
    5dfa:	8c 91       	ld	r24, X
    5dfc:	85 60       	ori	r24, 0x05	; 5
    5dfe:	8c 93       	st	X, r24
    5e00:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <isMultiSelectEnabled>
    5e04:	88 23       	and	r24, r24
    5e06:	09 f4       	brne	.+2      	; 0x5e0a <filterbytes+0xfc>
    5e08:	17 c3       	rjmp	.+1582   	; 0x6438 <filterbytes+0x72a>
    5e0a:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    5e0e:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    5e12:	01 96       	adiw	r24, 0x01	; 1
    5e14:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    5e18:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    5e1c:	d4 01       	movw	r26, r8
    5e1e:	8c 91       	ld	r24, X
    5e20:	91 e0       	ldi	r25, 0x01	; 1
    5e22:	98 0f       	add	r25, r24
    5e24:	9c 93       	st	X, r25
    5e26:	f3 01       	movw	r30, r6
    5e28:	e8 0f       	add	r30, r24
    5e2a:	f1 1d       	adc	r31, r1
    5e2c:	84 e0       	ldi	r24, 0x04	; 4
    5e2e:	80 83       	st	Z, r24
    5e30:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    5e34:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    5e38:	01 96       	adiw	r24, 0x01	; 1
    5e3a:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    5e3e:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    5e42:	8c 91       	ld	r24, X
    5e44:	91 e0       	ldi	r25, 0x01	; 1
    5e46:	98 0f       	add	r25, r24
    5e48:	9c 93       	st	X, r25
    5e4a:	f3 01       	movw	r30, r6
    5e4c:	e8 0f       	add	r30, r24
    5e4e:	f1 1d       	adc	r31, r1
    5e50:	10 82       	st	Z, r1
    5e52:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    5e56:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    5e5a:	01 96       	adiw	r24, 0x01	; 1
    5e5c:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    5e60:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    5e64:	8c 91       	ld	r24, X
    5e66:	91 e0       	ldi	r25, 0x01	; 1
    5e68:	98 0f       	add	r25, r24
    5e6a:	9c 93       	st	X, r25
    5e6c:	f3 01       	movw	r30, r6
    5e6e:	e8 0f       	add	r30, r24
    5e70:	f1 1d       	adc	r31, r1
    5e72:	10 82       	st	Z, r1
    5e74:	60 e0       	ldi	r22, 0x00	; 0
    5e76:	70 e0       	ldi	r23, 0x00	; 0
    5e78:	80 e0       	ldi	r24, 0x00	; 0
    5e7a:	90 e0       	ldi	r25, 0x00	; 0
    5e7c:	03 c3       	rjmp	.+1542   	; 0x6484 <filterbytes+0x776>
    5e7e:	ed 81       	ldd	r30, Y+5	; 0x05
    5e80:	fe 81       	ldd	r31, Y+6	; 0x06
    5e82:	80 81       	ld	r24, Z
    5e84:	81 30       	cpi	r24, 0x01	; 1
    5e86:	09 f0       	breq	.+2      	; 0x5e8a <filterbytes+0x17c>
    5e88:	1b c1       	rjmp	.+566    	; 0x60c0 <filterbytes+0x3b2>
    5e8a:	82 81       	ldd	r24, Z+2	; 0x02
    5e8c:	81 30       	cpi	r24, 0x01	; 1
    5e8e:	21 f4       	brne	.+8      	; 0x5e98 <filterbytes+0x18a>
    5e90:	8c 91       	ld	r24, X
    5e92:	84 60       	ori	r24, 0x04	; 4
    5e94:	8c 93       	st	X, r24
    5e96:	03 c0       	rjmp	.+6      	; 0x5e9e <filterbytes+0x190>
    5e98:	9c 91       	ld	r25, X
    5e9a:	89 2b       	or	r24, r25
    5e9c:	8c 93       	st	X, r24
    5e9e:	ed 81       	ldd	r30, Y+5	; 0x05
    5ea0:	fe 81       	ldd	r31, Y+6	; 0x06
    5ea2:	82 81       	ldd	r24, Z+2	; 0x02
    5ea4:	86 30       	cpi	r24, 0x06	; 6
    5ea6:	e9 f4       	brne	.+58     	; 0x5ee2 <filterbytes+0x1d4>
    5ea8:	27 81       	ldd	r18, Z+7	; 0x07
    5eaa:	30 85       	ldd	r19, Z+8	; 0x08
    5eac:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    5eb0:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    5eb4:	02 96       	adiw	r24, 0x02	; 2
    5eb6:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    5eba:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    5ebe:	d4 01       	movw	r26, r8
    5ec0:	8c 91       	ld	r24, X
    5ec2:	91 e0       	ldi	r25, 0x01	; 1
    5ec4:	98 0f       	add	r25, r24
    5ec6:	9c 93       	st	X, r25
    5ec8:	f3 01       	movw	r30, r6
    5eca:	e8 0f       	add	r30, r24
    5ecc:	f1 1d       	adc	r31, r1
    5ece:	30 83       	st	Z, r19
    5ed0:	8c 91       	ld	r24, X
    5ed2:	91 e0       	ldi	r25, 0x01	; 1
    5ed4:	98 0f       	add	r25, r24
    5ed6:	9c 93       	st	X, r25
    5ed8:	f3 01       	movw	r30, r6
    5eda:	e8 0f       	add	r30, r24
    5edc:	f1 1d       	adc	r31, r1
    5ede:	20 83       	st	Z, r18
    5ee0:	a8 c0       	rjmp	.+336    	; 0x6032 <filterbytes+0x324>
    5ee2:	ed 81       	ldd	r30, Y+5	; 0x05
    5ee4:	fe 81       	ldd	r31, Y+6	; 0x06
    5ee6:	81 81       	ldd	r24, Z+1	; 0x01
    5ee8:	88 23       	and	r24, r24
    5eea:	19 f0       	breq	.+6      	; 0x5ef2 <filterbytes+0x1e4>
    5eec:	8c 91       	ld	r24, X
    5eee:	88 60       	ori	r24, 0x08	; 8
    5ef0:	8c 93       	st	X, r24
    5ef2:	ed 81       	ldd	r30, Y+5	; 0x05
    5ef4:	fe 81       	ldd	r31, Y+6	; 0x06
    5ef6:	87 81       	ldd	r24, Z+7	; 0x07
    5ef8:	90 85       	ldd	r25, Z+8	; 0x08
    5efa:	8f 3f       	cpi	r24, 0xFF	; 255
    5efc:	91 05       	cpc	r25, r1
    5efe:	21 f0       	breq	.+8      	; 0x5f08 <filterbytes+0x1fa>
    5f00:	18 f0       	brcs	.+6      	; 0x5f08 <filterbytes+0x1fa>
    5f02:	8c 91       	ld	r24, X
    5f04:	80 62       	ori	r24, 0x20	; 32
    5f06:	8c 93       	st	X, r24
    5f08:	ad 81       	ldd	r26, Y+5	; 0x05
    5f0a:	be 81       	ldd	r27, Y+6	; 0x06
    5f0c:	13 96       	adiw	r26, 0x03	; 3
    5f0e:	2c 91       	ld	r18, X
    5f10:	13 97       	sbiw	r26, 0x03	; 3
    5f12:	14 96       	adiw	r26, 0x04	; 4
    5f14:	3c 91       	ld	r19, X
    5f16:	14 97       	sbiw	r26, 0x04	; 4
    5f18:	15 96       	adiw	r26, 0x05	; 5
    5f1a:	4c 91       	ld	r20, X
    5f1c:	15 97       	sbiw	r26, 0x05	; 5
    5f1e:	16 96       	adiw	r26, 0x06	; 6
    5f20:	5c 91       	ld	r21, X
    5f22:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    5f26:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    5f2a:	04 96       	adiw	r24, 0x04	; 4
    5f2c:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    5f30:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    5f34:	f4 01       	movw	r30, r8
    5f36:	80 81       	ld	r24, Z
    5f38:	91 e0       	ldi	r25, 0x01	; 1
    5f3a:	98 0f       	add	r25, r24
    5f3c:	90 83       	st	Z, r25
    5f3e:	f3 01       	movw	r30, r6
    5f40:	e8 0f       	add	r30, r24
    5f42:	f1 1d       	adc	r31, r1
    5f44:	50 83       	st	Z, r21
    5f46:	d4 01       	movw	r26, r8
    5f48:	8c 91       	ld	r24, X
    5f4a:	91 e0       	ldi	r25, 0x01	; 1
    5f4c:	98 0f       	add	r25, r24
    5f4e:	9c 93       	st	X, r25
    5f50:	f3 01       	movw	r30, r6
    5f52:	e8 0f       	add	r30, r24
    5f54:	f1 1d       	adc	r31, r1
    5f56:	40 83       	st	Z, r20
    5f58:	8c 91       	ld	r24, X
    5f5a:	91 e0       	ldi	r25, 0x01	; 1
    5f5c:	98 0f       	add	r25, r24
    5f5e:	9c 93       	st	X, r25
    5f60:	f3 01       	movw	r30, r6
    5f62:	e8 0f       	add	r30, r24
    5f64:	f1 1d       	adc	r31, r1
    5f66:	30 83       	st	Z, r19
    5f68:	8c 91       	ld	r24, X
    5f6a:	91 e0       	ldi	r25, 0x01	; 1
    5f6c:	98 0f       	add	r25, r24
    5f6e:	9c 93       	st	X, r25
    5f70:	f3 01       	movw	r30, r6
    5f72:	e8 0f       	add	r30, r24
    5f74:	f1 1d       	adc	r31, r1
    5f76:	20 83       	st	Z, r18
    5f78:	ed 81       	ldd	r30, Y+5	; 0x05
    5f7a:	fe 81       	ldd	r31, Y+6	; 0x06
    5f7c:	87 81       	ldd	r24, Z+7	; 0x07
    5f7e:	90 85       	ldd	r25, Z+8	; 0x08
    5f80:	8f 3f       	cpi	r24, 0xFF	; 255
    5f82:	91 05       	cpc	r25, r1
    5f84:	b1 f0       	breq	.+44     	; 0x5fb2 <filterbytes+0x2a4>
    5f86:	a8 f0       	brcs	.+42     	; 0x5fb2 <filterbytes+0x2a4>
    5f88:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    5f8c:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    5f90:	01 96       	adiw	r24, 0x01	; 1
    5f92:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    5f96:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    5f9a:	8c 91       	ld	r24, X
    5f9c:	91 e0       	ldi	r25, 0x01	; 1
    5f9e:	98 0f       	add	r25, r24
    5fa0:	9c 93       	st	X, r25
    5fa2:	f3 01       	movw	r30, r6
    5fa4:	e8 0f       	add	r30, r24
    5fa6:	f1 1d       	adc	r31, r1
    5fa8:	ad 81       	ldd	r26, Y+5	; 0x05
    5faa:	be 81       	ldd	r27, Y+6	; 0x06
    5fac:	18 96       	adiw	r26, 0x08	; 8
    5fae:	8c 91       	ld	r24, X
    5fb0:	80 83       	st	Z, r24
    5fb2:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    5fb6:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    5fba:	01 96       	adiw	r24, 0x01	; 1
    5fbc:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    5fc0:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    5fc4:	f4 01       	movw	r30, r8
    5fc6:	80 81       	ld	r24, Z
    5fc8:	91 e0       	ldi	r25, 0x01	; 1
    5fca:	98 0f       	add	r25, r24
    5fcc:	90 83       	st	Z, r25
    5fce:	f3 01       	movw	r30, r6
    5fd0:	e8 0f       	add	r30, r24
    5fd2:	f1 1d       	adc	r31, r1
    5fd4:	ad 81       	ldd	r26, Y+5	; 0x05
    5fd6:	be 81       	ldd	r27, Y+6	; 0x06
    5fd8:	17 96       	adiw	r26, 0x07	; 7
    5fda:	8c 91       	ld	r24, X
    5fdc:	80 83       	st	Z, r24
    5fde:	00 e0       	ldi	r16, 0x00	; 0
    5fe0:	10 e0       	ldi	r17, 0x00	; 0
    5fe2:	1c c0       	rjmp	.+56     	; 0x601c <filterbytes+0x30e>
    5fe4:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    5fe8:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    5fec:	01 96       	adiw	r24, 0x01	; 1
    5fee:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    5ff2:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    5ff6:	f4 01       	movw	r30, r8
    5ff8:	80 81       	ld	r24, Z
    5ffa:	91 e0       	ldi	r25, 0x01	; 1
    5ffc:	98 0f       	add	r25, r24
    5ffe:	90 83       	st	Z, r25
    6000:	d3 01       	movw	r26, r6
    6002:	a8 0f       	add	r26, r24
    6004:	b1 1d       	adc	r27, r1
    6006:	ed 81       	ldd	r30, Y+5	; 0x05
    6008:	fe 81       	ldd	r31, Y+6	; 0x06
    600a:	81 85       	ldd	r24, Z+9	; 0x09
    600c:	92 85       	ldd	r25, Z+10	; 0x0a
    600e:	fc 01       	movw	r30, r24
    6010:	e0 0f       	add	r30, r16
    6012:	f1 1f       	adc	r31, r17
    6014:	80 81       	ld	r24, Z
    6016:	8c 93       	st	X, r24
    6018:	0f 5f       	subi	r16, 0xFF	; 255
    601a:	1f 4f       	sbci	r17, 0xFF	; 255
    601c:	ad 81       	ldd	r26, Y+5	; 0x05
    601e:	be 81       	ldd	r27, Y+6	; 0x06
    6020:	17 96       	adiw	r26, 0x07	; 7
    6022:	8d 91       	ld	r24, X+
    6024:	9c 91       	ld	r25, X
    6026:	18 97       	sbiw	r26, 0x08	; 8
    6028:	0e 94 9e 6a 	call	0xd53c	; 0xd53c <tm_u8s_per_bits>
    602c:	08 17       	cp	r16, r24
    602e:	19 07       	cpc	r17, r25
    6030:	cc f2       	brlt	.-78     	; 0x5fe4 <filterbytes+0x2d6>
    6032:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <isMultiSelectEnabled>
    6036:	88 23       	and	r24, r24
    6038:	09 f4       	brne	.+2      	; 0x603c <filterbytes+0x32e>
    603a:	03 c2       	rjmp	.+1030   	; 0x6442 <filterbytes+0x734>
    603c:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    6040:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    6044:	01 96       	adiw	r24, 0x01	; 1
    6046:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    604a:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    604e:	f4 01       	movw	r30, r8
    6050:	80 81       	ld	r24, Z
    6052:	91 e0       	ldi	r25, 0x01	; 1
    6054:	98 0f       	add	r25, r24
    6056:	90 83       	st	Z, r25
    6058:	f3 01       	movw	r30, r6
    605a:	e8 0f       	add	r30, r24
    605c:	f1 1d       	adc	r31, r1
    605e:	ad 81       	ldd	r26, Y+5	; 0x05
    6060:	be 81       	ldd	r27, Y+6	; 0x06
    6062:	1b 96       	adiw	r26, 0x0b	; 11
    6064:	8c 91       	ld	r24, X
    6066:	1b 97       	sbiw	r26, 0x0b	; 11
    6068:	80 83       	st	Z, r24
    606a:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    606e:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    6072:	01 96       	adiw	r24, 0x01	; 1
    6074:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    6078:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    607c:	f4 01       	movw	r30, r8
    607e:	80 81       	ld	r24, Z
    6080:	91 e0       	ldi	r25, 0x01	; 1
    6082:	98 0f       	add	r25, r24
    6084:	90 83       	st	Z, r25
    6086:	f3 01       	movw	r30, r6
    6088:	e8 0f       	add	r30, r24
    608a:	f1 1d       	adc	r31, r1
    608c:	1c 96       	adiw	r26, 0x0c	; 12
    608e:	8c 91       	ld	r24, X
    6090:	80 83       	st	Z, r24
    6092:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    6096:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    609a:	01 96       	adiw	r24, 0x01	; 1
    609c:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    60a0:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    60a4:	d4 01       	movw	r26, r8
    60a6:	8c 91       	ld	r24, X
    60a8:	91 e0       	ldi	r25, 0x01	; 1
    60aa:	98 0f       	add	r25, r24
    60ac:	9c 93       	st	X, r25
    60ae:	f3 01       	movw	r30, r6
    60b0:	e8 0f       	add	r30, r24
    60b2:	f1 1d       	adc	r31, r1
    60b4:	10 82       	st	Z, r1
    60b6:	60 e0       	ldi	r22, 0x00	; 0
    60b8:	70 e0       	ldi	r23, 0x00	; 0
    60ba:	80 e0       	ldi	r24, 0x00	; 0
    60bc:	90 e0       	ldi	r25, 0x00	; 0
    60be:	e2 c1       	rjmp	.+964    	; 0x6484 <filterbytes+0x776>
    60c0:	81 11       	cpse	r24, r1
    60c2:	66 c0       	rjmp	.+204    	; 0x6190 <filterbytes+0x482>
    60c4:	ed 81       	ldd	r30, Y+5	; 0x05
    60c6:	fe 81       	ldd	r31, Y+6	; 0x06
    60c8:	e0 5c       	subi	r30, 0xC0	; 192
    60ca:	ff 4f       	sbci	r31, 0xFF	; 255
    60cc:	80 81       	ld	r24, Z
    60ce:	90 e0       	ldi	r25, 0x00	; 0
    60d0:	88 0f       	add	r24, r24
    60d2:	99 1f       	adc	r25, r25
    60d4:	88 0f       	add	r24, r24
    60d6:	99 1f       	adc	r25, r25
    60d8:	88 0f       	add	r24, r24
    60da:	99 1f       	adc	r25, r25
    60dc:	2c 91       	ld	r18, X
    60de:	21 60       	ori	r18, 0x01	; 1
    60e0:	2c 93       	st	X, r18
    60e2:	8f 3f       	cpi	r24, 0xFF	; 255
    60e4:	91 05       	cpc	r25, r1
    60e6:	b1 f0       	breq	.+44     	; 0x6114 <filterbytes+0x406>
    60e8:	ac f0       	brlt	.+42     	; 0x6114 <filterbytes+0x406>
    60ea:	20 62       	ori	r18, 0x20	; 32
    60ec:	2c 93       	st	X, r18
    60ee:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    60f2:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    60f6:	2f 5f       	subi	r18, 0xFF	; 255
    60f8:	3f 4f       	sbci	r19, 0xFF	; 255
    60fa:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    60fe:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    6102:	f4 01       	movw	r30, r8
    6104:	20 81       	ld	r18, Z
    6106:	31 e0       	ldi	r19, 0x01	; 1
    6108:	32 0f       	add	r19, r18
    610a:	30 83       	st	Z, r19
    610c:	f3 01       	movw	r30, r6
    610e:	e2 0f       	add	r30, r18
    6110:	f1 1d       	adc	r31, r1
    6112:	90 83       	st	Z, r25
    6114:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    6118:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    611c:	2f 5f       	subi	r18, 0xFF	; 255
    611e:	3f 4f       	sbci	r19, 0xFF	; 255
    6120:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    6124:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    6128:	d4 01       	movw	r26, r8
    612a:	9c 91       	ld	r25, X
    612c:	21 e0       	ldi	r18, 0x01	; 1
    612e:	29 0f       	add	r18, r25
    6130:	2c 93       	st	X, r18
    6132:	f3 01       	movw	r30, r6
    6134:	e9 0f       	add	r30, r25
    6136:	f1 1d       	adc	r31, r1
    6138:	80 83       	st	Z, r24
    613a:	20 e0       	ldi	r18, 0x00	; 0
    613c:	30 e0       	ldi	r19, 0x00	; 0
    613e:	1a c0       	rjmp	.+52     	; 0x6174 <filterbytes+0x466>
    6140:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    6144:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    6148:	01 96       	adiw	r24, 0x01	; 1
    614a:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    614e:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    6152:	f4 01       	movw	r30, r8
    6154:	80 81       	ld	r24, Z
    6156:	91 e0       	ldi	r25, 0x01	; 1
    6158:	98 0f       	add	r25, r24
    615a:	90 83       	st	Z, r25
    615c:	f3 01       	movw	r30, r6
    615e:	e8 0f       	add	r30, r24
    6160:	f1 1d       	adc	r31, r1
    6162:	ad 81       	ldd	r26, Y+5	; 0x05
    6164:	be 81       	ldd	r27, Y+6	; 0x06
    6166:	a2 0f       	add	r26, r18
    6168:	b3 1f       	adc	r27, r19
    616a:	11 96       	adiw	r26, 0x01	; 1
    616c:	8c 91       	ld	r24, X
    616e:	80 83       	st	Z, r24
    6170:	2f 5f       	subi	r18, 0xFF	; 255
    6172:	3f 4f       	sbci	r19, 0xFF	; 255
    6174:	ed 81       	ldd	r30, Y+5	; 0x05
    6176:	fe 81       	ldd	r31, Y+6	; 0x06
    6178:	e0 5c       	subi	r30, 0xC0	; 192
    617a:	ff 4f       	sbci	r31, 0xFF	; 255
    617c:	80 81       	ld	r24, Z
    617e:	90 e0       	ldi	r25, 0x00	; 0
    6180:	28 17       	cp	r18, r24
    6182:	39 07       	cpc	r19, r25
    6184:	ec f2       	brlt	.-70     	; 0x6140 <filterbytes+0x432>
    6186:	60 e0       	ldi	r22, 0x00	; 0
    6188:	70 e0       	ldi	r23, 0x00	; 0
    618a:	80 e0       	ldi	r24, 0x00	; 0
    618c:	90 e0       	ldi	r25, 0x00	; 0
    618e:	7a c1       	rjmp	.+756    	; 0x6484 <filterbytes+0x776>
    6190:	83 30       	cpi	r24, 0x03	; 3
    6192:	09 f0       	breq	.+2      	; 0x6196 <filterbytes+0x488>
    6194:	5b c1       	rjmp	.+694    	; 0x644c <filterbytes+0x73e>
    6196:	ed 81       	ldd	r30, Y+5	; 0x05
    6198:	fe 81       	ldd	r31, Y+6	; 0x06
    619a:	45 80       	ldd	r4, Z+5	; 0x05
    619c:	56 80       	ldd	r5, Z+6	; 0x06
    619e:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <isMultiSelectEnabled>
    61a2:	81 11       	cpse	r24, r1
    61a4:	18 c0       	rjmp	.+48     	; 0x61d6 <filterbytes+0x4c8>
    61a6:	63 e0       	ldi	r22, 0x03	; 3
    61a8:	70 e0       	ldi	r23, 0x00	; 0
    61aa:	93 e0       	ldi	r25, 0x03	; 3
    61ac:	6b c1       	rjmp	.+726    	; 0x6484 <filterbytes+0x776>
    61ae:	ed 81       	ldd	r30, Y+5	; 0x05
    61b0:	fe 81       	ldd	r31, Y+6	; 0x06
    61b2:	41 81       	ldd	r20, Z+1	; 0x01
    61b4:	52 81       	ldd	r21, Z+2	; 0x02
    61b6:	c9 01       	movw	r24, r18
    61b8:	88 0f       	add	r24, r24
    61ba:	99 1f       	adc	r25, r25
    61bc:	fa 01       	movw	r30, r20
    61be:	e8 0f       	add	r30, r24
    61c0:	f9 1f       	adc	r31, r25
    61c2:	01 90       	ld	r0, Z+
    61c4:	f0 81       	ld	r31, Z
    61c6:	e0 2d       	mov	r30, r0
    61c8:	80 81       	ld	r24, Z
    61ca:	88 23       	and	r24, r24
    61cc:	09 f4       	brne	.+2      	; 0x61d0 <filterbytes+0x4c2>
    61ce:	43 c1       	rjmp	.+646    	; 0x6456 <filterbytes+0x748>
    61d0:	2f 5f       	subi	r18, 0xFF	; 255
    61d2:	3f 4f       	sbci	r19, 0xFF	; 255
    61d4:	02 c0       	rjmp	.+4      	; 0x61da <filterbytes+0x4cc>
    61d6:	20 e0       	ldi	r18, 0x00	; 0
    61d8:	30 e0       	ldi	r19, 0x00	; 0
    61da:	24 15       	cp	r18, r4
    61dc:	35 05       	cpc	r19, r5
    61de:	38 f3       	brcs	.-50     	; 0x61ae <filterbytes+0x4a0>
    61e0:	f4 e0       	ldi	r31, 0x04	; 4
    61e2:	4f 16       	cp	r4, r31
    61e4:	51 04       	cpc	r5, r1
    61e6:	08 f0       	brcs	.+2      	; 0x61ea <filterbytes+0x4dc>
    61e8:	3b c1       	rjmp	.+630    	; 0x6460 <filterbytes+0x752>
    61ea:	ed 81       	ldd	r30, Y+5	; 0x05
    61ec:	fe 81       	ldd	r31, Y+6	; 0x06
    61ee:	81 81       	ldd	r24, Z+1	; 0x01
    61f0:	92 81       	ldd	r25, Z+2	; 0x02
    61f2:	fc 01       	movw	r30, r24
    61f4:	60 81       	ld	r22, Z
    61f6:	71 81       	ldd	r23, Z+1	; 0x01
    61f8:	a1 2c       	mov	r10, r1
    61fa:	c9 80       	ldd	r12, Y+1	; 0x01
    61fc:	da 80       	ldd	r13, Y+2	; 0x02
    61fe:	eb 80       	ldd	r14, Y+3	; 0x03
    6200:	fc 80       	ldd	r15, Y+4	; 0x04
    6202:	83 01       	movw	r16, r6
    6204:	94 01       	movw	r18, r8
    6206:	ad 01       	movw	r20, r26
    6208:	8b 2d       	mov	r24, r11
    620a:	81 dd       	rcall	.-1278   	; 0x5d0e <filterbytes>
    620c:	81 e0       	ldi	r24, 0x01	; 1
    620e:	90 e0       	ldi	r25, 0x00	; 0
    6210:	21 c0       	rjmp	.+66     	; 0x6254 <filterbytes+0x546>
    6212:	d4 01       	movw	r26, r8
    6214:	4c 91       	ld	r20, X
    6216:	50 e0       	ldi	r21, 0x00	; 0
    6218:	41 50       	subi	r20, 0x01	; 1
    621a:	51 09       	sbc	r21, r1
    621c:	46 0d       	add	r20, r6
    621e:	57 1d       	adc	r21, r7
    6220:	ad 81       	ldd	r26, Y+5	; 0x05
    6222:	be 81       	ldd	r27, Y+6	; 0x06
    6224:	11 96       	adiw	r26, 0x01	; 1
    6226:	ed 91       	ld	r30, X+
    6228:	fc 91       	ld	r31, X
    622a:	12 97       	sbiw	r26, 0x02	; 2
    622c:	1c 01       	movw	r2, r24
    622e:	bf ef       	ldi	r27, 0xFF	; 255
    6230:	2b 1a       	sub	r2, r27
    6232:	3b 0a       	sbc	r3, r27
    6234:	88 0f       	add	r24, r24
    6236:	99 1f       	adc	r25, r25
    6238:	e8 0f       	add	r30, r24
    623a:	f9 1f       	adc	r31, r25
    623c:	60 81       	ld	r22, Z
    623e:	71 81       	ldd	r23, Z+1	; 0x01
    6240:	a1 2c       	mov	r10, r1
    6242:	c9 80       	ldd	r12, Y+1	; 0x01
    6244:	da 80       	ldd	r13, Y+2	; 0x02
    6246:	eb 80       	ldd	r14, Y+3	; 0x03
    6248:	fc 80       	ldd	r15, Y+4	; 0x04
    624a:	83 01       	movw	r16, r6
    624c:	94 01       	movw	r18, r8
    624e:	8b 2d       	mov	r24, r11
    6250:	5e dd       	rcall	.-1348   	; 0x5d0e <filterbytes>
    6252:	c1 01       	movw	r24, r2
    6254:	84 15       	cp	r24, r4
    6256:	95 05       	cpc	r25, r5
    6258:	e0 f2       	brcs	.-72     	; 0x6212 <filterbytes+0x504>
    625a:	60 e0       	ldi	r22, 0x00	; 0
    625c:	70 e0       	ldi	r23, 0x00	; 0
    625e:	80 e0       	ldi	r24, 0x00	; 0
    6260:	90 e0       	ldi	r25, 0x00	; 0
    6262:	10 c1       	rjmp	.+544    	; 0x6484 <filterbytes+0x776>
    6264:	ed 81       	ldd	r30, Y+5	; 0x05
    6266:	fe 81       	ldd	r31, Y+6	; 0x06
    6268:	80 81       	ld	r24, Z
    626a:	81 30       	cpi	r24, 0x01	; 1
    626c:	09 f0       	breq	.+2      	; 0x6270 <filterbytes+0x562>
    626e:	57 c0       	rjmp	.+174    	; 0x631e <filterbytes+0x610>
    6270:	8c 91       	ld	r24, X
    6272:	81 60       	ori	r24, 0x01	; 1
    6274:	8c 93       	st	X, r24
    6276:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    627a:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    627e:	01 96       	adiw	r24, 0x01	; 1
    6280:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    6284:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    6288:	d9 01       	movw	r26, r18
    628a:	8c 91       	ld	r24, X
    628c:	91 e0       	ldi	r25, 0x01	; 1
    628e:	98 0f       	add	r25, r24
    6290:	9c 93       	st	X, r25
    6292:	f8 01       	movw	r30, r16
    6294:	e8 0f       	add	r30, r24
    6296:	f1 1d       	adc	r31, r1
    6298:	ad 81       	ldd	r26, Y+5	; 0x05
    629a:	be 81       	ldd	r27, Y+6	; 0x06
    629c:	1b 96       	adiw	r26, 0x0b	; 11
    629e:	8c 91       	ld	r24, X
    62a0:	80 83       	st	Z, r24
    62a2:	b1 2c       	mov	r11, r1
    62a4:	19 c0       	rjmp	.+50     	; 0x62d8 <filterbytes+0x5ca>
    62a6:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    62aa:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    62ae:	01 96       	adiw	r24, 0x01	; 1
    62b0:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    62b4:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    62b8:	f4 01       	movw	r30, r8
    62ba:	80 81       	ld	r24, Z
    62bc:	91 e0       	ldi	r25, 0x01	; 1
    62be:	98 0f       	add	r25, r24
    62c0:	90 83       	st	Z, r25
    62c2:	f3 01       	movw	r30, r6
    62c4:	e8 0f       	add	r30, r24
    62c6:	f1 1d       	adc	r31, r1
    62c8:	ad 81       	ldd	r26, Y+5	; 0x05
    62ca:	be 81       	ldd	r27, Y+6	; 0x06
    62cc:	a4 0d       	add	r26, r4
    62ce:	b5 1d       	adc	r27, r5
    62d0:	11 96       	adiw	r26, 0x01	; 1
    62d2:	8c 91       	ld	r24, X
    62d4:	80 83       	st	Z, r24
    62d6:	b3 94       	inc	r11
    62d8:	4b 2c       	mov	r4, r11
    62da:	51 2c       	mov	r5, r1
    62dc:	ad 81       	ldd	r26, Y+5	; 0x05
    62de:	be 81       	ldd	r27, Y+6	; 0x06
    62e0:	1b 96       	adiw	r26, 0x0b	; 11
    62e2:	8c 91       	ld	r24, X
    62e4:	90 e0       	ldi	r25, 0x00	; 0
    62e6:	0e 94 9e 6a 	call	0xd53c	; 0xd53c <tm_u8s_per_bits>
    62ea:	48 16       	cp	r4, r24
    62ec:	59 06       	cpc	r5, r25
    62ee:	dc f2       	brlt	.-74     	; 0x62a6 <filterbytes+0x598>
    62f0:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    62f4:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    62f8:	01 96       	adiw	r24, 0x01	; 1
    62fa:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    62fe:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    6302:	f4 01       	movw	r30, r8
    6304:	80 81       	ld	r24, Z
    6306:	91 e0       	ldi	r25, 0x01	; 1
    6308:	98 0f       	add	r25, r24
    630a:	90 83       	st	Z, r25
    630c:	f3 01       	movw	r30, r6
    630e:	e8 0f       	add	r30, r24
    6310:	f1 1d       	adc	r31, r1
    6312:	10 82       	st	Z, r1
    6314:	60 e0       	ldi	r22, 0x00	; 0
    6316:	70 e0       	ldi	r23, 0x00	; 0
    6318:	80 e0       	ldi	r24, 0x00	; 0
    631a:	90 e0       	ldi	r25, 0x00	; 0
    631c:	b3 c0       	rjmp	.+358    	; 0x6484 <filterbytes+0x776>
    631e:	82 30       	cpi	r24, 0x02	; 2
    6320:	09 f0       	breq	.+2      	; 0x6324 <filterbytes+0x616>
    6322:	3f c0       	rjmp	.+126    	; 0x63a2 <filterbytes+0x694>
    6324:	8c 91       	ld	r24, X
    6326:	82 60       	ori	r24, 0x02	; 2
    6328:	8c 93       	st	X, r24
    632a:	ad 81       	ldd	r26, Y+5	; 0x05
    632c:	be 81       	ldd	r27, Y+6	; 0x06
    632e:	11 96       	adiw	r26, 0x01	; 1
    6330:	ec 90       	ld	r14, X
    6332:	11 97       	sbiw	r26, 0x01	; 1
    6334:	12 96       	adiw	r26, 0x02	; 2
    6336:	fc 90       	ld	r15, X
    6338:	12 97       	sbiw	r26, 0x02	; 2
    633a:	13 96       	adiw	r26, 0x03	; 3
    633c:	0c 91       	ld	r16, X
    633e:	13 97       	sbiw	r26, 0x03	; 3
    6340:	14 96       	adiw	r26, 0x04	; 4
    6342:	1c 91       	ld	r17, X
    6344:	14 97       	sbiw	r26, 0x04	; 4
    6346:	15 96       	adiw	r26, 0x05	; 5
    6348:	2c 91       	ld	r18, X
    634a:	15 97       	sbiw	r26, 0x05	; 5
    634c:	16 96       	adiw	r26, 0x06	; 6
    634e:	3c 91       	ld	r19, X
    6350:	16 97       	sbiw	r26, 0x06	; 6
    6352:	17 96       	adiw	r26, 0x07	; 7
    6354:	4c 91       	ld	r20, X
    6356:	17 97       	sbiw	r26, 0x07	; 7
    6358:	18 96       	adiw	r26, 0x08	; 8
    635a:	5c 91       	ld	r21, X
    635c:	b4 01       	movw	r22, r8
    635e:	c3 01       	movw	r24, r6
    6360:	0e 94 a1 6d 	call	0xdb42	; 0xdb42 <TMR_SR_convertToEBV>
    6364:	6b 01       	movw	r12, r22
    6366:	7c 01       	movw	r14, r24
    6368:	61 15       	cp	r22, r1
    636a:	71 05       	cpc	r23, r1
    636c:	81 05       	cpc	r24, r1
    636e:	91 05       	cpc	r25, r1
    6370:	09 f0       	breq	.+2      	; 0x6374 <filterbytes+0x666>
    6372:	7b c0       	rjmp	.+246    	; 0x646a <filterbytes+0x75c>
    6374:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    6378:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    637c:	01 96       	adiw	r24, 0x01	; 1
    637e:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    6382:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    6386:	f4 01       	movw	r30, r8
    6388:	80 81       	ld	r24, Z
    638a:	91 e0       	ldi	r25, 0x01	; 1
    638c:	98 0f       	add	r25, r24
    638e:	90 83       	st	Z, r25
    6390:	f3 01       	movw	r30, r6
    6392:	e8 0f       	add	r30, r24
    6394:	f1 1d       	adc	r31, r1
    6396:	10 82       	st	Z, r1
    6398:	60 e0       	ldi	r22, 0x00	; 0
    639a:	70 e0       	ldi	r23, 0x00	; 0
    639c:	80 e0       	ldi	r24, 0x00	; 0
    639e:	90 e0       	ldi	r25, 0x00	; 0
    63a0:	71 c0       	rjmp	.+226    	; 0x6484 <filterbytes+0x776>
    63a2:	83 30       	cpi	r24, 0x03	; 3
    63a4:	09 f0       	breq	.+2      	; 0x63a8 <filterbytes+0x69a>
    63a6:	65 c0       	rjmp	.+202    	; 0x6472 <filterbytes+0x764>
    63a8:	ed 81       	ldd	r30, Y+5	; 0x05
    63aa:	fe 81       	ldd	r31, Y+6	; 0x06
    63ac:	45 80       	ldd	r4, Z+5	; 0x05
    63ae:	56 80       	ldd	r5, Z+6	; 0x06
    63b0:	f3 e0       	ldi	r31, 0x03	; 3
    63b2:	4f 16       	cp	r4, r31
    63b4:	51 04       	cpc	r5, r1
    63b6:	08 f0       	brcs	.+2      	; 0x63ba <filterbytes+0x6ac>
    63b8:	61 c0       	rjmp	.+194    	; 0x647c <filterbytes+0x76e>
    63ba:	ed 81       	ldd	r30, Y+5	; 0x05
    63bc:	fe 81       	ldd	r31, Y+6	; 0x06
    63be:	81 81       	ldd	r24, Z+1	; 0x01
    63c0:	92 81       	ldd	r25, Z+2	; 0x02
    63c2:	fc 01       	movw	r30, r24
    63c4:	60 81       	ld	r22, Z
    63c6:	71 81       	ldd	r23, Z+1	; 0x01
    63c8:	a1 2c       	mov	r10, r1
    63ca:	c9 80       	ldd	r12, Y+1	; 0x01
    63cc:	da 80       	ldd	r13, Y+2	; 0x02
    63ce:	eb 80       	ldd	r14, Y+3	; 0x03
    63d0:	fc 80       	ldd	r15, Y+4	; 0x04
    63d2:	8b 2d       	mov	r24, r11
    63d4:	9c dc       	rcall	.-1736   	; 0x5d0e <filterbytes>
    63d6:	81 e0       	ldi	r24, 0x01	; 1
    63d8:	90 e0       	ldi	r25, 0x00	; 0
    63da:	21 c0       	rjmp	.+66     	; 0x641e <filterbytes+0x710>
    63dc:	d4 01       	movw	r26, r8
    63de:	4c 91       	ld	r20, X
    63e0:	50 e0       	ldi	r21, 0x00	; 0
    63e2:	41 50       	subi	r20, 0x01	; 1
    63e4:	51 09       	sbc	r21, r1
    63e6:	46 0d       	add	r20, r6
    63e8:	57 1d       	adc	r21, r7
    63ea:	ad 81       	ldd	r26, Y+5	; 0x05
    63ec:	be 81       	ldd	r27, Y+6	; 0x06
    63ee:	11 96       	adiw	r26, 0x01	; 1
    63f0:	ed 91       	ld	r30, X+
    63f2:	fc 91       	ld	r31, X
    63f4:	12 97       	sbiw	r26, 0x02	; 2
    63f6:	1c 01       	movw	r2, r24
    63f8:	bf ef       	ldi	r27, 0xFF	; 255
    63fa:	2b 1a       	sub	r2, r27
    63fc:	3b 0a       	sbc	r3, r27
    63fe:	88 0f       	add	r24, r24
    6400:	99 1f       	adc	r25, r25
    6402:	e8 0f       	add	r30, r24
    6404:	f9 1f       	adc	r31, r25
    6406:	60 81       	ld	r22, Z
    6408:	71 81       	ldd	r23, Z+1	; 0x01
    640a:	a1 2c       	mov	r10, r1
    640c:	c9 80       	ldd	r12, Y+1	; 0x01
    640e:	da 80       	ldd	r13, Y+2	; 0x02
    6410:	eb 80       	ldd	r14, Y+3	; 0x03
    6412:	fc 80       	ldd	r15, Y+4	; 0x04
    6414:	83 01       	movw	r16, r6
    6416:	94 01       	movw	r18, r8
    6418:	8b 2d       	mov	r24, r11
    641a:	79 dc       	rcall	.-1806   	; 0x5d0e <filterbytes>
    641c:	c1 01       	movw	r24, r2
    641e:	84 15       	cp	r24, r4
    6420:	95 05       	cpc	r25, r5
    6422:	e0 f2       	brcs	.-72     	; 0x63dc <filterbytes+0x6ce>
    6424:	60 e0       	ldi	r22, 0x00	; 0
    6426:	70 e0       	ldi	r23, 0x00	; 0
    6428:	80 e0       	ldi	r24, 0x00	; 0
    642a:	90 e0       	ldi	r25, 0x00	; 0
    642c:	2b c0       	rjmp	.+86     	; 0x6484 <filterbytes+0x776>
    642e:	60 e0       	ldi	r22, 0x00	; 0
    6430:	70 e0       	ldi	r23, 0x00	; 0
    6432:	80 e0       	ldi	r24, 0x00	; 0
    6434:	90 e0       	ldi	r25, 0x00	; 0
    6436:	26 c0       	rjmp	.+76     	; 0x6484 <filterbytes+0x776>
    6438:	60 e0       	ldi	r22, 0x00	; 0
    643a:	70 e0       	ldi	r23, 0x00	; 0
    643c:	80 e0       	ldi	r24, 0x00	; 0
    643e:	90 e0       	ldi	r25, 0x00	; 0
    6440:	21 c0       	rjmp	.+66     	; 0x6484 <filterbytes+0x776>
    6442:	60 e0       	ldi	r22, 0x00	; 0
    6444:	70 e0       	ldi	r23, 0x00	; 0
    6446:	80 e0       	ldi	r24, 0x00	; 0
    6448:	90 e0       	ldi	r25, 0x00	; 0
    644a:	1c c0       	rjmp	.+56     	; 0x6484 <filterbytes+0x776>
    644c:	61 e0       	ldi	r22, 0x01	; 1
    644e:	70 e0       	ldi	r23, 0x00	; 0
    6450:	80 e0       	ldi	r24, 0x00	; 0
    6452:	93 e0       	ldi	r25, 0x03	; 3
    6454:	17 c0       	rjmp	.+46     	; 0x6484 <filterbytes+0x776>
    6456:	63 e0       	ldi	r22, 0x03	; 3
    6458:	70 e0       	ldi	r23, 0x00	; 0
    645a:	80 e0       	ldi	r24, 0x00	; 0
    645c:	93 e0       	ldi	r25, 0x03	; 3
    645e:	12 c0       	rjmp	.+36     	; 0x6484 <filterbytes+0x776>
    6460:	63 e0       	ldi	r22, 0x03	; 3
    6462:	70 e0       	ldi	r23, 0x00	; 0
    6464:	80 e0       	ldi	r24, 0x00	; 0
    6466:	93 e0       	ldi	r25, 0x03	; 3
    6468:	0d c0       	rjmp	.+26     	; 0x6484 <filterbytes+0x776>
    646a:	7d 2d       	mov	r23, r13
    646c:	8e 2d       	mov	r24, r14
    646e:	9f 2d       	mov	r25, r15
    6470:	09 c0       	rjmp	.+18     	; 0x6484 <filterbytes+0x776>
    6472:	61 e0       	ldi	r22, 0x01	; 1
    6474:	70 e0       	ldi	r23, 0x00	; 0
    6476:	80 e0       	ldi	r24, 0x00	; 0
    6478:	93 e0       	ldi	r25, 0x03	; 3
    647a:	04 c0       	rjmp	.+8      	; 0x6484 <filterbytes+0x776>
    647c:	63 e0       	ldi	r22, 0x03	; 3
    647e:	70 e0       	ldi	r23, 0x00	; 0
    6480:	80 e0       	ldi	r24, 0x00	; 0
    6482:	93 e0       	ldi	r25, 0x03	; 3
    6484:	26 96       	adiw	r28, 0x06	; 6
    6486:	0f b6       	in	r0, 0x3f	; 63
    6488:	f8 94       	cli
    648a:	de bf       	out	0x3e, r29	; 62
    648c:	0f be       	out	0x3f, r0	; 63
    648e:	cd bf       	out	0x3d, r28	; 61
    6490:	df 91       	pop	r29
    6492:	cf 91       	pop	r28
    6494:	1f 91       	pop	r17
    6496:	0f 91       	pop	r16
    6498:	ff 90       	pop	r15
    649a:	ef 90       	pop	r14
    649c:	df 90       	pop	r13
    649e:	cf 90       	pop	r12
    64a0:	bf 90       	pop	r11
    64a2:	af 90       	pop	r10
    64a4:	9f 90       	pop	r9
    64a6:	8f 90       	pop	r8
    64a8:	7f 90       	pop	r7
    64aa:	6f 90       	pop	r6
    64ac:	5f 90       	pop	r5
    64ae:	4f 90       	pop	r4
    64b0:	3f 90       	pop	r3
    64b2:	2f 90       	pop	r2
    64b4:	08 95       	ret

000064b6 <parseEBVdata>:
    64b6:	0f 93       	push	r16
    64b8:	1f 93       	push	r17
    64ba:	cf 93       	push	r28
    64bc:	df 93       	push	r29
    64be:	8c 01       	movw	r16, r24
    64c0:	fa 01       	movw	r30, r20
    64c2:	80 81       	ld	r24, Z
    64c4:	91 e0       	ldi	r25, 0x01	; 1
    64c6:	98 0f       	add	r25, r24
    64c8:	90 83       	st	Z, r25
    64ca:	d8 01       	movw	r26, r16
    64cc:	a8 0f       	add	r26, r24
    64ce:	b1 1d       	adc	r27, r1
    64d0:	8c 91       	ld	r24, X
    64d2:	db 01       	movw	r26, r22
    64d4:	8c 93       	st	X, r24
    64d6:	90 e0       	ldi	r25, 0x00	; 0
    64d8:	81 e0       	ldi	r24, 0x01	; 1
    64da:	0e c0       	rjmp	.+28     	; 0x64f8 <parseEBVdata+0x42>
    64dc:	db 01       	movw	r26, r22
    64de:	a8 0f       	add	r26, r24
    64e0:	b1 1d       	adc	r27, r1
    64e2:	20 81       	ld	r18, Z
    64e4:	31 e0       	ldi	r19, 0x01	; 1
    64e6:	32 0f       	add	r19, r18
    64e8:	30 83       	st	Z, r19
    64ea:	e8 01       	movw	r28, r16
    64ec:	c2 0f       	add	r28, r18
    64ee:	d1 1d       	adc	r29, r1
    64f0:	28 81       	ld	r18, Y
    64f2:	2c 93       	st	X, r18
    64f4:	9f 5f       	subi	r25, 0xFF	; 255
    64f6:	8f 5f       	subi	r24, 0xFF	; 255
    64f8:	db 01       	movw	r26, r22
    64fa:	a9 0f       	add	r26, r25
    64fc:	b1 1d       	adc	r27, r1
    64fe:	2c 91       	ld	r18, X
    6500:	22 23       	and	r18, r18
    6502:	14 f4       	brge	.+4      	; 0x6508 <parseEBVdata+0x52>
    6504:	97 30       	cpi	r25, 0x07	; 7
    6506:	50 f3       	brcs	.-44     	; 0x64dc <parseEBVdata+0x26>
    6508:	df 91       	pop	r29
    650a:	cf 91       	pop	r28
    650c:	1f 91       	pop	r17
    650e:	0f 91       	pop	r16
    6510:	08 95       	ret

00006512 <TMR_SR_sendBytes>:
    6512:	4f 92       	push	r4
    6514:	5f 92       	push	r5
    6516:	6f 92       	push	r6
    6518:	7f 92       	push	r7
    651a:	9f 92       	push	r9
    651c:	af 92       	push	r10
    651e:	bf 92       	push	r11
    6520:	cf 92       	push	r12
    6522:	df 92       	push	r13
    6524:	ef 92       	push	r14
    6526:	ff 92       	push	r15
    6528:	0f 93       	push	r16
    652a:	1f 93       	push	r17
    652c:	cf 93       	push	r28
    652e:	df 93       	push	r29
    6530:	ec 01       	movw	r28, r24
    6532:	96 2e       	mov	r9, r22
    6534:	6a 01       	movw	r12, r20
    6536:	28 01       	movw	r4, r16
    6538:	39 01       	movw	r6, r18
    653a:	5c 01       	movw	r10, r24
    653c:	80 e8       	ldi	r24, 0x80	; 128
    653e:	a8 1a       	sub	r10, r24
    6540:	8e ef       	ldi	r24, 0xFE	; 254
    6542:	b8 0a       	sbc	r11, r24
    6544:	8e 81       	ldd	r24, Y+6	; 0x06
    6546:	9f 81       	ldd	r25, Y+7	; 0x07
    6548:	89 2b       	or	r24, r25
    654a:	61 f0       	breq	.+24     	; 0x6564 <TMR_SR_sendBytes+0x52>
    654c:	86 2f       	mov	r24, r22
    654e:	90 e0       	ldi	r25, 0x00	; 0
    6550:	a0 e0       	ldi	r26, 0x00	; 0
    6552:	b0 e0       	ldi	r27, 0x00	; 0
    6554:	78 01       	movw	r14, r16
    6556:	8a 01       	movw	r16, r20
    6558:	9c 01       	movw	r18, r24
    655a:	ad 01       	movw	r20, r26
    655c:	61 e0       	ldi	r22, 0x01	; 1
    655e:	ce 01       	movw	r24, r28
    6560:	0e 94 2d 6c 	call	0xd85a	; 0xd85a <TMR__notifyTransportListeners>
    6564:	c0 58       	subi	r28, 0x80	; 128
    6566:	de 4f       	sbci	r29, 0xFE	; 254
    6568:	ec 81       	ldd	r30, Y+4	; 0x04
    656a:	fd 81       	ldd	r31, Y+5	; 0x05
    656c:	49 2d       	mov	r20, r9
    656e:	50 e0       	ldi	r21, 0x00	; 0
    6570:	60 e0       	ldi	r22, 0x00	; 0
    6572:	70 e0       	ldi	r23, 0x00	; 0
    6574:	83 01       	movw	r16, r6
    6576:	72 01       	movw	r14, r4
    6578:	96 01       	movw	r18, r12
    657a:	c5 01       	movw	r24, r10
    657c:	09 95       	icall
    657e:	df 91       	pop	r29
    6580:	cf 91       	pop	r28
    6582:	1f 91       	pop	r17
    6584:	0f 91       	pop	r16
    6586:	ff 90       	pop	r15
    6588:	ef 90       	pop	r14
    658a:	df 90       	pop	r13
    658c:	cf 90       	pop	r12
    658e:	bf 90       	pop	r11
    6590:	af 90       	pop	r10
    6592:	9f 90       	pop	r9
    6594:	7f 90       	pop	r7
    6596:	6f 90       	pop	r6
    6598:	5f 90       	pop	r5
    659a:	4f 90       	pop	r4
    659c:	08 95       	ret

0000659e <TMR_SR_sendMessage>:
    659e:	8f 92       	push	r8
    65a0:	9f 92       	push	r9
    65a2:	af 92       	push	r10
    65a4:	bf 92       	push	r11
    65a6:	ef 92       	push	r14
    65a8:	ff 92       	push	r15
    65aa:	0f 93       	push	r16
    65ac:	1f 93       	push	r17
    65ae:	cf 93       	push	r28
    65b0:	df 93       	push	r29
    65b2:	7c 01       	movw	r14, r24
    65b4:	eb 01       	movw	r28, r22
    65b6:	fc 01       	movw	r30, r24
    65b8:	e4 52       	subi	r30, 0x24	; 36
    65ba:	fe 4f       	sbci	r31, 0xFE	; 254
    65bc:	80 80       	ld	r8, Z
    65be:	91 80       	ldd	r9, Z+1	; 0x01
    65c0:	a2 80       	ldd	r10, Z+2	; 0x02
    65c2:	b3 80       	ldd	r11, Z+3	; 0x03
    65c4:	80 0e       	add	r8, r16
    65c6:	91 1e       	adc	r9, r17
    65c8:	a2 1e       	adc	r10, r18
    65ca:	b3 1e       	adc	r11, r19
    65cc:	8f ef       	ldi	r24, 0xFF	; 255
    65ce:	88 83       	st	Y, r24
    65d0:	19 81       	ldd	r17, Y+1	; 0x01
    65d2:	8a 81       	ldd	r24, Y+2	; 0x02
    65d4:	fa 01       	movw	r30, r20
    65d6:	80 83       	st	Z, r24
    65d8:	f7 01       	movw	r30, r14
    65da:	e5 58       	subi	r30, 0x85	; 133
    65dc:	fe 4f       	sbci	r31, 0xFE	; 254
    65de:	80 81       	ld	r24, Z
    65e0:	88 23       	and	r24, r24
    65e2:	d1 f1       	breq	.+116    	; 0x6658 <TMR_SR_sendMessage+0xba>
    65e4:	e5 50       	subi	r30, 0x05	; 5
    65e6:	f1 40       	sbci	r31, 0x01	; 1
    65e8:	80 81       	ld	r24, Z
    65ea:	81 11       	cpse	r24, r1
    65ec:	10 c0       	rjmp	.+32     	; 0x660e <TMR_SR_sendMessage+0x70>
    65ee:	34 c0       	rjmp	.+104    	; 0x6658 <TMR_SR_sendMessage+0xba>
    65f0:	82 2f       	mov	r24, r18
    65f2:	90 e0       	ldi	r25, 0x00	; 0
    65f4:	fc 01       	movw	r30, r24
    65f6:	32 96       	adiw	r30, 0x02	; 2
    65f8:	ec 0f       	add	r30, r28
    65fa:	fd 1f       	adc	r31, r29
    65fc:	30 81       	ld	r19, Z
    65fe:	8e 0d       	add	r24, r14
    6600:	9f 1d       	adc	r25, r15
    6602:	fc 01       	movw	r30, r24
    6604:	e5 58       	subi	r30, 0x85	; 133
    6606:	ff 4f       	sbci	r31, 0xFF	; 255
    6608:	30 83       	st	Z, r19
    660a:	2f 5f       	subi	r18, 0xFF	; 255
    660c:	01 c0       	rjmp	.+2      	; 0x6610 <TMR_SR_sendMessage+0x72>
    660e:	20 e0       	ldi	r18, 0x00	; 0
    6610:	12 17       	cp	r17, r18
    6612:	70 f7       	brcc	.-36     	; 0x65f0 <TMR_SR_sendMessage+0x52>
    6614:	85 e0       	ldi	r24, 0x05	; 5
    6616:	81 0f       	add	r24, r17
    6618:	89 83       	std	Y+1, r24	; 0x01
    661a:	8f e2       	ldi	r24, 0x2F	; 47
    661c:	8a 83       	std	Y+2, r24	; 0x02
    661e:	1b 82       	std	Y+3, r1	; 0x03
    6620:	1c 82       	std	Y+4, r1	; 0x04
    6622:	84 e0       	ldi	r24, 0x04	; 4
    6624:	8d 83       	std	Y+5, r24	; 0x05
    6626:	1e 83       	std	Y+6, r17	; 0x06
    6628:	20 e0       	ldi	r18, 0x00	; 0
    662a:	0e c0       	rjmp	.+28     	; 0x6648 <TMR_SR_sendMessage+0xaa>
    662c:	82 2f       	mov	r24, r18
    662e:	90 e0       	ldi	r25, 0x00	; 0
    6630:	dc 01       	movw	r26, r24
    6632:	17 96       	adiw	r26, 0x07	; 7
    6634:	ac 0f       	add	r26, r28
    6636:	bd 1f       	adc	r27, r29
    6638:	8e 0d       	add	r24, r14
    663a:	9f 1d       	adc	r25, r15
    663c:	fc 01       	movw	r30, r24
    663e:	e5 58       	subi	r30, 0x85	; 133
    6640:	ff 4f       	sbci	r31, 0xFF	; 255
    6642:	80 81       	ld	r24, Z
    6644:	8c 93       	st	X, r24
    6646:	2f 5f       	subi	r18, 0xFF	; 255
    6648:	12 17       	cp	r17, r18
    664a:	80 f7       	brcc	.-32     	; 0x662c <TMR_SR_sendMessage+0x8e>
    664c:	19 81       	ldd	r17, Y+1	; 0x01
    664e:	81 e0       	ldi	r24, 0x01	; 1
    6650:	f7 01       	movw	r30, r14
    6652:	e6 58       	subi	r30, 0x86	; 134
    6654:	ff 4f       	sbci	r31, 0xFF	; 255
    6656:	80 83       	st	Z, r24
    6658:	62 e0       	ldi	r22, 0x02	; 2
    665a:	61 0f       	add	r22, r17
    665c:	ce 01       	movw	r24, r28
    665e:	01 96       	adiw	r24, 0x01	; 1
    6660:	16 db       	rcall	.-2516   	; 0x5c8e <tm_crc>
    6662:	21 2f       	mov	r18, r17
    6664:	30 e0       	ldi	r19, 0x00	; 0
    6666:	f9 01       	movw	r30, r18
    6668:	33 96       	adiw	r30, 0x03	; 3
    666a:	ec 0f       	add	r30, r28
    666c:	fd 1f       	adc	r31, r29
    666e:	90 83       	st	Z, r25
    6670:	2c 5f       	subi	r18, 0xFC	; 252
    6672:	3f 4f       	sbci	r19, 0xFF	; 255
    6674:	fe 01       	movw	r30, r28
    6676:	e2 0f       	add	r30, r18
    6678:	f3 1f       	adc	r31, r19
    667a:	80 83       	st	Z, r24
    667c:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    6680:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    6684:	04 96       	adiw	r24, 0x04	; 4
    6686:	8f 3f       	cpi	r24, 0xFF	; 255
    6688:	91 05       	cpc	r25, r1
    668a:	51 f0       	breq	.+20     	; 0x66a0 <TMR_SR_sendMessage+0x102>
    668c:	48 f0       	brcs	.+18     	; 0x66a0 <TMR_SR_sendMessage+0x102>
    668e:	10 92 58 02 	sts	0x0258, r1	; 0x800258 <totalMsgIdx+0x1>
    6692:	10 92 57 02 	sts	0x0257, r1	; 0x800257 <totalMsgIdx>
    6696:	6d e1       	ldi	r22, 0x1D	; 29
    6698:	70 e0       	ldi	r23, 0x00	; 0
    669a:	80 e0       	ldi	r24, 0x00	; 0
    669c:	93 e0       	ldi	r25, 0x03	; 3
    669e:	26 c0       	rjmp	.+76     	; 0x66ec <TMR_SR_sendMessage+0x14e>
    66a0:	10 92 58 02 	sts	0x0258, r1	; 0x800258 <totalMsgIdx+0x1>
    66a4:	10 92 57 02 	sts	0x0257, r1	; 0x800257 <totalMsgIdx>
    66a8:	f7 01       	movw	r30, r14
    66aa:	e9 58       	subi	r30, 0x89	; 137
    66ac:	ff 4f       	sbci	r31, 0xFF	; 255
    66ae:	80 81       	ld	r24, Z
    66b0:	88 23       	and	r24, r24
    66b2:	a9 f0       	breq	.+42     	; 0x66de <TMR_SR_sendMessage+0x140>
    66b4:	0e 94 14 03 	call	0x628	; 0x628 <tmr_gettime>
    66b8:	20 93 61 02 	sts	0x0261, r18	; 0x800261 <onFlyCmdSntTime>
    66bc:	30 93 62 02 	sts	0x0262, r19	; 0x800262 <onFlyCmdSntTime+0x1>
    66c0:	40 93 63 02 	sts	0x0263, r20	; 0x800263 <onFlyCmdSntTime+0x2>
    66c4:	50 93 64 02 	sts	0x0264, r21	; 0x800264 <onFlyCmdSntTime+0x3>
    66c8:	60 93 65 02 	sts	0x0265, r22	; 0x800265 <onFlyCmdSntTime+0x4>
    66cc:	70 93 66 02 	sts	0x0266, r23	; 0x800266 <onFlyCmdSntTime+0x5>
    66d0:	80 93 67 02 	sts	0x0267, r24	; 0x800267 <onFlyCmdSntTime+0x6>
    66d4:	90 93 68 02 	sts	0x0268, r25	; 0x800268 <onFlyCmdSntTime+0x7>
    66d8:	8a 81       	ldd	r24, Y+2	; 0x02
    66da:	80 93 60 02 	sts	0x0260, r24	; 0x800260 <onFlyCmdOpcode>
    66de:	65 e0       	ldi	r22, 0x05	; 5
    66e0:	61 0f       	add	r22, r17
    66e2:	95 01       	movw	r18, r10
    66e4:	84 01       	movw	r16, r8
    66e6:	ae 01       	movw	r20, r28
    66e8:	c7 01       	movw	r24, r14
    66ea:	13 df       	rcall	.-474    	; 0x6512 <TMR_SR_sendBytes>
    66ec:	df 91       	pop	r29
    66ee:	cf 91       	pop	r28
    66f0:	1f 91       	pop	r17
    66f2:	0f 91       	pop	r16
    66f4:	ff 90       	pop	r15
    66f6:	ef 90       	pop	r14
    66f8:	bf 90       	pop	r11
    66fa:	af 90       	pop	r10
    66fc:	9f 90       	pop	r9
    66fe:	8f 90       	pop	r8
    6700:	08 95       	ret

00006702 <TMR_SR_receiveMessage>:
    6702:	2f 92       	push	r2
    6704:	3f 92       	push	r3
    6706:	4f 92       	push	r4
    6708:	5f 92       	push	r5
    670a:	6f 92       	push	r6
    670c:	7f 92       	push	r7
    670e:	8f 92       	push	r8
    6710:	9f 92       	push	r9
    6712:	af 92       	push	r10
    6714:	bf 92       	push	r11
    6716:	cf 92       	push	r12
    6718:	df 92       	push	r13
    671a:	ef 92       	push	r14
    671c:	ff 92       	push	r15
    671e:	0f 93       	push	r16
    6720:	1f 93       	push	r17
    6722:	cf 93       	push	r28
    6724:	df 93       	push	r29
    6726:	cd b7       	in	r28, 0x3d	; 61
    6728:	de b7       	in	r29, 0x3e	; 62
    672a:	65 97       	sbiw	r28, 0x15	; 21
    672c:	0f b6       	in	r0, 0x3f	; 63
    672e:	f8 94       	cli
    6730:	de bf       	out	0x3e, r29	; 62
    6732:	0f be       	out	0x3f, r0	; 63
    6734:	cd bf       	out	0x3d, r28	; 61
    6736:	9d 8b       	std	Y+21, r25	; 0x15
    6738:	8c 8b       	std	Y+20, r24	; 0x14
    673a:	4b 01       	movw	r8, r22
    673c:	74 2e       	mov	r7, r20
    673e:	19 82       	std	Y+1, r1	; 0x01
    6740:	1a 82       	std	Y+2, r1	; 0x02
    6742:	1b 82       	std	Y+3, r1	; 0x03
    6744:	1c 82       	std	Y+4, r1	; 0x04
    6746:	1d 82       	std	Y+5, r1	; 0x05
    6748:	1e 82       	std	Y+6, r1	; 0x06
    674a:	1f 82       	std	Y+7, r1	; 0x07
    674c:	18 86       	std	Y+8, r1	; 0x08
    674e:	80 58       	subi	r24, 0x80	; 128
    6750:	9e 4f       	sbci	r25, 0xFE	; 254
    6752:	9a 8b       	std	Y+18, r25	; 0x12
    6754:	89 8b       	std	Y+17, r24	; 0x11
    6756:	ec 89       	ldd	r30, Y+20	; 0x14
    6758:	fd 89       	ldd	r31, Y+21	; 0x15
    675a:	e4 52       	subi	r30, 0x24	; 36
    675c:	fe 4f       	sbci	r31, 0xFE	; 254
    675e:	80 81       	ld	r24, Z
    6760:	91 81       	ldd	r25, Z+1	; 0x01
    6762:	a2 81       	ldd	r26, Z+2	; 0x02
    6764:	b3 81       	ldd	r27, Z+3	; 0x03
    6766:	5c 01       	movw	r10, r24
    6768:	6d 01       	movw	r12, r26
    676a:	a0 0e       	add	r10, r16
    676c:	b1 1e       	adc	r11, r17
    676e:	c2 1e       	adc	r12, r18
    6770:	d3 1e       	adc	r13, r19
    6772:	a9 86       	std	Y+9, r10	; 0x09
    6774:	ba 86       	std	Y+10, r11	; 0x0a
    6776:	cb 86       	std	Y+11, r12	; 0x0b
    6778:	dc 86       	std	Y+12, r13	; 0x0c
    677a:	0f 2e       	mov	r0, r31
    677c:	f2 e2       	ldi	r31, 0x22	; 34
    677e:	bf 2e       	mov	r11, r31
    6780:	f0 2d       	mov	r31, r0
    6782:	4b 11       	cpse	r20, r11
    6784:	12 c0       	rjmp	.+36     	; 0x67aa <TMR_SR_receiveMessage+0xa8>
    6786:	ec 89       	ldd	r30, Y+20	; 0x14
    6788:	fd 89       	ldd	r31, Y+21	; 0x15
    678a:	84 85       	ldd	r24, Z+12	; 0x0c
    678c:	95 85       	ldd	r25, Z+13	; 0x0d
    678e:	a6 85       	ldd	r26, Z+14	; 0x0e
    6790:	b7 85       	ldd	r27, Z+15	; 0x0f
    6792:	a9 84       	ldd	r10, Y+9	; 0x09
    6794:	ba 84       	ldd	r11, Y+10	; 0x0a
    6796:	cb 84       	ldd	r12, Y+11	; 0x0b
    6798:	dc 84       	ldd	r13, Y+12	; 0x0c
    679a:	a8 0e       	add	r10, r24
    679c:	b9 1e       	adc	r11, r25
    679e:	ca 1e       	adc	r12, r26
    67a0:	db 1e       	adc	r13, r27
    67a2:	a9 86       	std	Y+9, r10	; 0x09
    67a4:	ba 86       	std	Y+10, r11	; 0x0a
    67a6:	cb 86       	std	Y+11, r12	; 0x0b
    67a8:	dc 86       	std	Y+12, r13	; 0x0c
    67aa:	b1 2c       	mov	r11, r1
    67ac:	61 2c       	mov	r6, r1
    67ae:	bb 8a       	std	Y+19, r11	; 0x13
    67b0:	ac 88       	ldd	r10, Y+20	; 0x14
    67b2:	bd 88       	ldd	r11, Y+21	; 0x15
    67b4:	f5 01       	movw	r30, r10
    67b6:	e0 58       	subi	r30, 0x80	; 128
    67b8:	fe 4f       	sbci	r31, 0xFE	; 254
    67ba:	06 80       	ldd	r0, Z+6	; 0x06
    67bc:	f7 81       	ldd	r31, Z+7	; 0x07
    67be:	e0 2d       	mov	r30, r0
    67c0:	89 81       	ldd	r24, Y+1	; 0x01
    67c2:	9a 81       	ldd	r25, Y+2	; 0x02
    67c4:	ab 81       	ldd	r26, Y+3	; 0x03
    67c6:	bc 81       	ldd	r27, Y+4	; 0x04
    67c8:	84 01       	movw	r16, r8
    67ca:	08 0f       	add	r16, r24
    67cc:	19 1f       	adc	r17, r25
    67ce:	47 e0       	ldi	r20, 0x07	; 7
    67d0:	50 e0       	ldi	r21, 0x00	; 0
    67d2:	60 e0       	ldi	r22, 0x00	; 0
    67d4:	70 e0       	ldi	r23, 0x00	; 0
    67d6:	48 1b       	sub	r20, r24
    67d8:	59 0b       	sbc	r21, r25
    67da:	6a 0b       	sbc	r22, r26
    67dc:	7b 0b       	sbc	r23, r27
    67de:	c9 84       	ldd	r12, Y+9	; 0x09
    67e0:	da 84       	ldd	r13, Y+10	; 0x0a
    67e2:	eb 84       	ldd	r14, Y+11	; 0x0b
    67e4:	fc 84       	ldd	r15, Y+12	; 0x0c
    67e6:	9e 01       	movw	r18, r28
    67e8:	2b 5f       	subi	r18, 0xFB	; 251
    67ea:	3f 4f       	sbci	r19, 0xFF	; 255
    67ec:	89 89       	ldd	r24, Y+17	; 0x11
    67ee:	9a 89       	ldd	r25, Y+18	; 0x12
    67f0:	09 95       	icall
    67f2:	1b 01       	movw	r2, r22
    67f4:	2c 01       	movw	r4, r24
    67f6:	61 15       	cp	r22, r1
    67f8:	71 05       	cpc	r23, r1
    67fa:	81 05       	cpc	r24, r1
    67fc:	91 05       	cpc	r25, r1
    67fe:	09 f0       	breq	.+2      	; 0x6802 <TMR_SR_receiveMessage+0x100>
    6800:	9d c1       	rjmp	.+826    	; 0x6b3c <TMR_SR_receiveMessage+0x43a>
    6802:	49 81       	ldd	r20, Y+1	; 0x01
    6804:	5a 81       	ldd	r21, Y+2	; 0x02
    6806:	6b 81       	ldd	r22, Y+3	; 0x03
    6808:	7c 81       	ldd	r23, Y+4	; 0x04
    680a:	8d 81       	ldd	r24, Y+5	; 0x05
    680c:	9e 81       	ldd	r25, Y+6	; 0x06
    680e:	af 81       	ldd	r26, Y+7	; 0x07
    6810:	b8 85       	ldd	r27, Y+8	; 0x08
    6812:	84 0f       	add	r24, r20
    6814:	95 1f       	adc	r25, r21
    6816:	a6 1f       	adc	r26, r22
    6818:	b7 1f       	adc	r27, r23
    681a:	89 83       	std	Y+1, r24	; 0x01
    681c:	9a 83       	std	Y+2, r25	; 0x02
    681e:	ab 83       	std	Y+3, r26	; 0x03
    6820:	bc 83       	std	Y+4, r27	; 0x04
    6822:	07 97       	sbiw	r24, 0x07	; 7
    6824:	a1 05       	cpc	r26, r1
    6826:	b1 05       	cpc	r27, r1
    6828:	f0 f1       	brcs	.+124    	; 0x68a6 <TMR_SR_receiveMessage+0x1a4>
    682a:	80 e0       	ldi	r24, 0x00	; 0
    682c:	1e c0       	rjmp	.+60     	; 0x686a <TMR_SR_receiveMessage+0x168>
    682e:	28 2f       	mov	r18, r24
    6830:	30 e0       	ldi	r19, 0x00	; 0
    6832:	f4 01       	movw	r30, r8
    6834:	e2 0f       	add	r30, r18
    6836:	f3 1f       	adc	r31, r19
    6838:	90 81       	ld	r25, Z
    683a:	9f 3f       	cpi	r25, 0xFF	; 255
    683c:	a9 f4       	brne	.+42     	; 0x6868 <TMR_SR_receiveMessage+0x166>
    683e:	f4 01       	movw	r30, r8
    6840:	e2 0f       	add	r30, r18
    6842:	f3 1f       	adc	r31, r19
    6844:	91 81       	ldd	r25, Z+1	; 0x01
    6846:	99 3f       	cpi	r25, 0xF9	; 249
    6848:	78 f4       	brcc	.+30     	; 0x6868 <TMR_SR_receiveMessage+0x166>
    684a:	f4 01       	movw	r30, r8
    684c:	e2 0f       	add	r30, r18
    684e:	f3 1f       	adc	r31, r19
    6850:	92 81       	ldd	r25, Z+2	; 0x02
    6852:	79 16       	cp	r7, r25
    6854:	31 f0       	breq	.+12     	; 0x6862 <TMR_SR_receiveMessage+0x160>
    6856:	92 32       	cpi	r25, 0x22	; 34
    6858:	21 f0       	breq	.+8      	; 0x6862 <TMR_SR_receiveMessage+0x160>
    685a:	9f 32       	cpi	r25, 0x2F	; 47
    685c:	11 f0       	breq	.+4      	; 0x6862 <TMR_SR_receiveMessage+0x160>
    685e:	9d 39       	cpi	r25, 0x9D	; 157
    6860:	19 f4       	brne	.+6      	; 0x6868 <TMR_SR_receiveMessage+0x166>
    6862:	88 23       	and	r24, r24
    6864:	41 f0       	breq	.+16     	; 0x6876 <TMR_SR_receiveMessage+0x174>
    6866:	09 c0       	rjmp	.+18     	; 0x687a <TMR_SR_receiveMessage+0x178>
    6868:	8f 5f       	subi	r24, 0xFF	; 255
    686a:	68 2f       	mov	r22, r24
    686c:	70 e0       	ldi	r23, 0x00	; 0
    686e:	65 30       	cpi	r22, 0x05	; 5
    6870:	71 05       	cpc	r23, r1
    6872:	ec f2       	brlt	.-70     	; 0x682e <TMR_SR_receiveMessage+0x12c>
    6874:	02 c0       	rjmp	.+4      	; 0x687a <TMR_SR_receiveMessage+0x178>
    6876:	01 e0       	ldi	r16, 0x01	; 1
    6878:	0b 8b       	std	Y+19, r16	; 0x13
    687a:	1b 89       	ldd	r17, Y+19	; 0x13
    687c:	11 11       	cpse	r17, r1
    687e:	18 c0       	rjmp	.+48     	; 0x68b0 <TMR_SR_receiveMessage+0x1ae>
    6880:	47 e0       	ldi	r20, 0x07	; 7
    6882:	50 e0       	ldi	r21, 0x00	; 0
    6884:	46 1b       	sub	r20, r22
    6886:	57 0b       	sbc	r21, r23
    6888:	8a 01       	movw	r16, r20
    688a:	05 2e       	mov	r0, r21
    688c:	00 0c       	add	r0, r0
    688e:	22 0b       	sbc	r18, r18
    6890:	33 0b       	sbc	r19, r19
    6892:	09 83       	std	Y+1, r16	; 0x01
    6894:	1a 83       	std	Y+2, r17	; 0x02
    6896:	2b 83       	std	Y+3, r18	; 0x03
    6898:	3c 83       	std	Y+4, r19	; 0x04
    689a:	b4 01       	movw	r22, r8
    689c:	68 0f       	add	r22, r24
    689e:	71 1d       	adc	r23, r1
    68a0:	c4 01       	movw	r24, r8
    68a2:	0e 94 53 75 	call	0xeaa6	; 0xeaa6 <memmove>
    68a6:	63 94       	inc	r6
    68a8:	23 e1       	ldi	r18, 0x13	; 19
    68aa:	26 15       	cp	r18, r6
    68ac:	08 f0       	brcs	.+2      	; 0x68b0 <TMR_SR_receiveMessage+0x1ae>
    68ae:	82 cf       	rjmp	.-252    	; 0x67b4 <TMR_SR_receiveMessage+0xb2>
    68b0:	33 e1       	ldi	r19, 0x13	; 19
    68b2:	36 15       	cp	r19, r6
    68b4:	08 f4       	brcc	.+2      	; 0x68b8 <TMR_SR_receiveMessage+0x1b6>
    68b6:	46 c1       	rjmp	.+652    	; 0x6b44 <TMR_SR_receiveMessage+0x442>
    68b8:	f4 01       	movw	r30, r8
    68ba:	61 80       	ldd	r6, Z+1	; 0x01
    68bc:	61 10       	cpse	r6, r1
    68be:	05 c0       	rjmp	.+10     	; 0x68ca <TMR_SR_receiveMessage+0x1c8>
    68c0:	19 82       	std	Y+1, r1	; 0x01
    68c2:	1a 82       	std	Y+2, r1	; 0x02
    68c4:	1b 82       	std	Y+3, r1	; 0x03
    68c6:	1c 82       	std	Y+4, r1	; 0x04
    68c8:	20 c0       	rjmp	.+64     	; 0x690a <TMR_SR_receiveMessage+0x208>
    68ca:	86 2d       	mov	r24, r6
    68cc:	90 e0       	ldi	r25, 0x00	; 0
    68ce:	8a 3f       	cpi	r24, 0xFA	; 250
    68d0:	91 05       	cpc	r25, r1
    68d2:	0c f0       	brlt	.+2      	; 0x68d6 <TMR_SR_receiveMessage+0x1d4>
    68d4:	3c c1       	rjmp	.+632    	; 0x6b4e <TMR_SR_receiveMessage+0x44c>
    68d6:	ec 89       	ldd	r30, Y+20	; 0x14
    68d8:	fd 89       	ldd	r31, Y+21	; 0x15
    68da:	e0 58       	subi	r30, 0x80	; 128
    68dc:	fe 4f       	sbci	r31, 0xFE	; 254
    68de:	06 80       	ldd	r0, Z+6	; 0x06
    68e0:	f7 81       	ldd	r31, Z+7	; 0x07
    68e2:	e0 2d       	mov	r30, r0
    68e4:	46 2d       	mov	r20, r6
    68e6:	50 e0       	ldi	r21, 0x00	; 0
    68e8:	60 e0       	ldi	r22, 0x00	; 0
    68ea:	70 e0       	ldi	r23, 0x00	; 0
    68ec:	c9 84       	ldd	r12, Y+9	; 0x09
    68ee:	da 84       	ldd	r13, Y+10	; 0x0a
    68f0:	eb 84       	ldd	r14, Y+11	; 0x0b
    68f2:	fc 84       	ldd	r15, Y+12	; 0x0c
    68f4:	84 01       	movw	r16, r8
    68f6:	09 5f       	subi	r16, 0xF9	; 249
    68f8:	1f 4f       	sbci	r17, 0xFF	; 255
    68fa:	9e 01       	movw	r18, r28
    68fc:	2f 5f       	subi	r18, 0xFF	; 255
    68fe:	3f 4f       	sbci	r19, 0xFF	; 255
    6900:	89 89       	ldd	r24, Y+17	; 0x11
    6902:	9a 89       	ldd	r25, Y+18	; 0x12
    6904:	09 95       	icall
    6906:	1b 01       	movw	r2, r22
    6908:	2c 01       	movw	r4, r24
    690a:	ec 89       	ldd	r30, Y+20	; 0x14
    690c:	fd 89       	ldd	r31, Y+21	; 0x15
    690e:	86 81       	ldd	r24, Z+6	; 0x06
    6910:	97 81       	ldd	r25, Z+7	; 0x07
    6912:	89 2b       	or	r24, r25
    6914:	89 f0       	breq	.+34     	; 0x6938 <TMR_SR_receiveMessage+0x236>
    6916:	89 81       	ldd	r24, Y+1	; 0x01
    6918:	9a 81       	ldd	r25, Y+2	; 0x02
    691a:	ab 81       	ldd	r26, Y+3	; 0x03
    691c:	bc 81       	ldd	r27, Y+4	; 0x04
    691e:	9c 01       	movw	r18, r24
    6920:	ad 01       	movw	r20, r26
    6922:	29 5f       	subi	r18, 0xF9	; 249
    6924:	3f 4f       	sbci	r19, 0xFF	; 255
    6926:	4f 4f       	sbci	r20, 0xFF	; 255
    6928:	5f 4f       	sbci	r21, 0xFF	; 255
    692a:	e9 84       	ldd	r14, Y+9	; 0x09
    692c:	fa 84       	ldd	r15, Y+10	; 0x0a
    692e:	84 01       	movw	r16, r8
    6930:	60 e0       	ldi	r22, 0x00	; 0
    6932:	cf 01       	movw	r24, r30
    6934:	0e 94 2d 6c 	call	0xd85a	; 0xd85a <TMR__notifyTransportListeners>
    6938:	21 14       	cp	r2, r1
    693a:	31 04       	cpc	r3, r1
    693c:	41 04       	cpc	r4, r1
    693e:	51 04       	cpc	r5, r1
    6940:	09 f0       	breq	.+2      	; 0x6944 <TMR_SR_receiveMessage+0x242>
    6942:	0a c1       	rjmp	.+532    	; 0x6b58 <TMR_SR_receiveMessage+0x456>
    6944:	ec 89       	ldd	r30, Y+20	; 0x14
    6946:	fd 89       	ldd	r31, Y+21	; 0x15
    6948:	ed 50       	subi	r30, 0x0D	; 13
    694a:	fa 4f       	sbci	r31, 0xFA	; 250
    694c:	80 81       	ld	r24, Z
    694e:	88 23       	and	r24, r24
    6950:	e1 f0       	breq	.+56     	; 0x698a <TMR_SR_receiveMessage+0x288>
    6952:	64 e0       	ldi	r22, 0x04	; 4
    6954:	66 0d       	add	r22, r6
    6956:	c4 01       	movw	r24, r8
    6958:	01 96       	adiw	r24, 0x01	; 1
    695a:	99 d9       	rcall	.-3278   	; 0x5c8e <tm_crc>
    695c:	26 2d       	mov	r18, r6
    695e:	30 e0       	ldi	r19, 0x00	; 0
    6960:	f4 01       	movw	r30, r8
    6962:	e2 0f       	add	r30, r18
    6964:	f3 1f       	adc	r31, r19
    6966:	45 81       	ldd	r20, Z+5	; 0x05
    6968:	50 e0       	ldi	r21, 0x00	; 0
    696a:	69 2f       	mov	r22, r25
    696c:	77 27       	eor	r23, r23
    696e:	46 17       	cp	r20, r22
    6970:	57 07       	cpc	r21, r23
    6972:	09 f0       	breq	.+2      	; 0x6976 <TMR_SR_receiveMessage+0x274>
    6974:	f6 c0       	rjmp	.+492    	; 0x6b62 <TMR_SR_receiveMessage+0x460>
    6976:	f4 01       	movw	r30, r8
    6978:	e2 0f       	add	r30, r18
    697a:	f3 1f       	adc	r31, r19
    697c:	26 81       	ldd	r18, Z+6	; 0x06
    697e:	30 e0       	ldi	r19, 0x00	; 0
    6980:	99 27       	eor	r25, r25
    6982:	28 17       	cp	r18, r24
    6984:	39 07       	cpc	r19, r25
    6986:	09 f0       	breq	.+2      	; 0x698a <TMR_SR_receiveMessage+0x288>
    6988:	f1 c0       	rjmp	.+482    	; 0x6b6c <TMR_SR_receiveMessage+0x46a>
    698a:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <onFlyCmdOpcode>
    698e:	88 23       	and	r24, r24
    6990:	09 f4       	brne	.+2      	; 0x6994 <TMR_SR_receiveMessage+0x292>
    6992:	41 c0       	rjmp	.+130    	; 0x6a16 <TMR_SR_receiveMessage+0x314>
    6994:	ec 89       	ldd	r30, Y+20	; 0x14
    6996:	fd 89       	ldd	r31, Y+21	; 0x15
    6998:	ea 58       	subi	r30, 0x8A	; 138
    699a:	ff 4f       	sbci	r31, 0xFF	; 255
    699c:	90 81       	ld	r25, Z
    699e:	99 23       	and	r25, r25
    69a0:	d1 f1       	breq	.+116    	; 0x6a16 <TMR_SR_receiveMessage+0x314>
    69a2:	f4 01       	movw	r30, r8
    69a4:	92 81       	ldd	r25, Z+2	; 0x02
    69a6:	89 13       	cpse	r24, r25
    69a8:	08 c0       	rjmp	.+16     	; 0x69ba <TMR_SR_receiveMessage+0x2b8>
    69aa:	85 81       	ldd	r24, Z+5	; 0x05
    69ac:	82 30       	cpi	r24, 0x02	; 2
    69ae:	11 f0       	breq	.+4      	; 0x69b4 <TMR_SR_receiveMessage+0x2b2>
    69b0:	84 30       	cpi	r24, 0x04	; 4
    69b2:	19 f4       	brne	.+6      	; 0x69ba <TMR_SR_receiveMessage+0x2b8>
    69b4:	10 92 60 02 	sts	0x0260, r1	; 0x800260 <onFlyCmdOpcode>
    69b8:	2e c0       	rjmp	.+92     	; 0x6a16 <TMR_SR_receiveMessage+0x314>
    69ba:	0e 94 14 03 	call	0x628	; 0x628 <tmr_gettime>
    69be:	a0 90 61 02 	lds	r10, 0x0261	; 0x800261 <onFlyCmdSntTime>
    69c2:	b0 90 62 02 	lds	r11, 0x0262	; 0x800262 <onFlyCmdSntTime+0x1>
    69c6:	c0 90 63 02 	lds	r12, 0x0263	; 0x800263 <onFlyCmdSntTime+0x2>
    69ca:	d0 90 64 02 	lds	r13, 0x0264	; 0x800264 <onFlyCmdSntTime+0x3>
    69ce:	e0 90 65 02 	lds	r14, 0x0265	; 0x800265 <onFlyCmdSntTime+0x4>
    69d2:	f0 90 66 02 	lds	r15, 0x0266	; 0x800266 <onFlyCmdSntTime+0x5>
    69d6:	00 91 67 02 	lds	r16, 0x0267	; 0x800267 <onFlyCmdSntTime+0x6>
    69da:	10 91 68 02 	lds	r17, 0x0268	; 0x800268 <onFlyCmdSntTime+0x7>
    69de:	0e 94 1d 75 	call	0xea3a	; 0xea3a <__subdi3>
    69e2:	c9 84       	ldd	r12, Y+9	; 0x09
    69e4:	da 84       	ldd	r13, Y+10	; 0x0a
    69e6:	eb 84       	ldd	r14, Y+11	; 0x0b
    69e8:	fc 84       	ldd	r15, Y+12	; 0x0c
    69ea:	56 01       	movw	r10, r12
    69ec:	67 01       	movw	r12, r14
    69ee:	e1 2c       	mov	r14, r1
    69f0:	f1 2c       	mov	r15, r1
    69f2:	87 01       	movw	r16, r14
    69f4:	a9 86       	std	Y+9, r10	; 0x09
    69f6:	ba 86       	std	Y+10, r11	; 0x0a
    69f8:	cb 86       	std	Y+11, r12	; 0x0b
    69fa:	dc 86       	std	Y+12, r13	; 0x0c
    69fc:	ed 86       	std	Y+13, r14	; 0x0d
    69fe:	fe 86       	std	Y+14, r15	; 0x0e
    6a00:	0f 87       	std	Y+15, r16	; 0x0f
    6a02:	18 8b       	std	Y+16, r17	; 0x10
    6a04:	e1 2c       	mov	r14, r1
    6a06:	f1 2c       	mov	r15, r1
    6a08:	00 e0       	ldi	r16, 0x00	; 0
    6a0a:	10 e0       	ldi	r17, 0x00	; 0
    6a0c:	0e 94 26 75 	call	0xea4c	; 0xea4c <__cmpdi2>
    6a10:	11 f0       	breq	.+4      	; 0x6a16 <TMR_SR_receiveMessage+0x314>
    6a12:	08 f0       	brcs	.+2      	; 0x6a16 <TMR_SR_receiveMessage+0x314>
    6a14:	b0 c0       	rjmp	.+352    	; 0x6b76 <TMR_SR_receiveMessage+0x474>
    6a16:	f4 01       	movw	r30, r8
    6a18:	82 81       	ldd	r24, Z+2	; 0x02
    6a1a:	78 16       	cp	r7, r24
    6a1c:	19 f1       	breq	.+70     	; 0x6a64 <TMR_SR_receiveMessage+0x362>
    6a1e:	8f 32       	cpi	r24, 0x2F	; 47
    6a20:	39 f4       	brne	.+14     	; 0x6a30 <TMR_SR_receiveMessage+0x32e>
    6a22:	ec 89       	ldd	r30, Y+20	; 0x14
    6a24:	fd 89       	ldd	r31, Y+21	; 0x15
    6a26:	ea 58       	subi	r30, 0x8A	; 138
    6a28:	ff 4f       	sbci	r31, 0xFF	; 255
    6a2a:	90 81       	ld	r25, Z
    6a2c:	91 11       	cpse	r25, r1
    6a2e:	1a c0       	rjmp	.+52     	; 0x6a64 <TMR_SR_receiveMessage+0x362>
    6a30:	8d 39       	cpi	r24, 0x9D	; 157
    6a32:	09 f4       	brne	.+2      	; 0x6a36 <TMR_SR_receiveMessage+0x334>
    6a34:	a5 c0       	rjmp	.+330    	; 0x6b80 <TMR_SR_receiveMessage+0x47e>
    6a36:	84 30       	cpi	r24, 0x04	; 4
    6a38:	09 f0       	breq	.+2      	; 0x6a3c <TMR_SR_receiveMessage+0x33a>
    6a3a:	a7 c0       	rjmp	.+334    	; 0x6b8a <TMR_SR_receiveMessage+0x488>
    6a3c:	ec 89       	ldd	r30, Y+20	; 0x14
    6a3e:	fd 89       	ldd	r31, Y+21	; 0x15
    6a40:	e0 58       	subi	r30, 0x80	; 128
    6a42:	fe 4f       	sbci	r31, 0xFE	; 254
    6a44:	64 85       	ldd	r22, Z+12	; 0x0c
    6a46:	75 85       	ldd	r23, Z+13	; 0x0d
    6a48:	89 89       	ldd	r24, Y+17	; 0x11
    6a4a:	9a 89       	ldd	r25, Y+18	; 0x12
    6a4c:	fb 01       	movw	r30, r22
    6a4e:	09 95       	icall
    6a50:	67 2b       	or	r22, r23
    6a52:	68 2b       	or	r22, r24
    6a54:	69 2b       	or	r22, r25
    6a56:	09 f0       	breq	.+2      	; 0x6a5a <TMR_SR_receiveMessage+0x358>
    6a58:	9d c0       	rjmp	.+314    	; 0x6b94 <TMR_SR_receiveMessage+0x492>
    6a5a:	67 e0       	ldi	r22, 0x07	; 7
    6a5c:	70 e0       	ldi	r23, 0x00	; 0
    6a5e:	80 e0       	ldi	r24, 0x00	; 0
    6a60:	91 e0       	ldi	r25, 0x01	; 1
    6a62:	a6 c0       	rjmp	.+332    	; 0x6bb0 <TMR_SR_receiveMessage+0x4ae>
    6a64:	f4 01       	movw	r30, r8
    6a66:	83 81       	ldd	r24, Z+3	; 0x03
    6a68:	90 e0       	ldi	r25, 0x00	; 0
    6a6a:	98 2f       	mov	r25, r24
    6a6c:	88 27       	eor	r24, r24
    6a6e:	24 81       	ldd	r18, Z+4	; 0x04
    6a70:	82 2b       	or	r24, r18
    6a72:	00 97       	sbiw	r24, 0x00	; 0
    6a74:	09 f4       	brne	.+2      	; 0x6a78 <TMR_SR_receiveMessage+0x376>
    6a76:	93 c0       	rjmp	.+294    	; 0x6b9e <TMR_SR_receiveMessage+0x49c>
    6a78:	a0 e0       	ldi	r26, 0x00	; 0
    6a7a:	b0 e0       	ldi	r27, 0x00	; 0
    6a7c:	6c 01       	movw	r12, r24
    6a7e:	7d 01       	movw	r14, r26
    6a80:	68 94       	set
    6a82:	f1 f8       	bld	r15, 1
    6a84:	f1 e0       	ldi	r31, 0x01	; 1
    6a86:	cf 16       	cp	r12, r31
    6a88:	ff e7       	ldi	r31, 0x7F	; 127
    6a8a:	df 06       	cpc	r13, r31
    6a8c:	e1 04       	cpc	r14, r1
    6a8e:	f2 e0       	ldi	r31, 0x02	; 2
    6a90:	ff 06       	cpc	r15, r31
    6a92:	09 f0       	breq	.+2      	; 0x6a96 <TMR_SR_receiveMessage+0x394>
    6a94:	89 c0       	rjmp	.+274    	; 0x6ba8 <TMR_SR_receiveMessage+0x4a6>
    6a96:	0c 89       	ldd	r16, Y+20	; 0x14
    6a98:	1d 89       	ldd	r17, Y+21	; 0x15
    6a9a:	0f 53       	subi	r16, 0x3F	; 63
    6a9c:	1b 4f       	sbci	r17, 0xFB	; 251
    6a9e:	80 e0       	ldi	r24, 0x00	; 0
    6aa0:	91 e0       	ldi	r25, 0x01	; 1
    6aa2:	f8 01       	movw	r30, r16
    6aa4:	9c 01       	movw	r18, r24
    6aa6:	11 92       	st	Z+, r1
    6aa8:	21 50       	subi	r18, 0x01	; 1
    6aaa:	30 40       	sbci	r19, 0x00	; 0
    6aac:	e1 f7       	brne	.-8      	; 0x6aa6 <TMR_SR_receiveMessage+0x3a4>
    6aae:	f4 01       	movw	r30, r8
    6ab0:	85 81       	ldd	r24, Z+5	; 0x05
    6ab2:	90 e0       	ldi	r25, 0x00	; 0
    6ab4:	a0 e0       	ldi	r26, 0x00	; 0
    6ab6:	b0 e0       	ldi	r27, 0x00	; 0
    6ab8:	78 2f       	mov	r23, r24
    6aba:	66 27       	eor	r22, r22
    6abc:	55 27       	eor	r21, r21
    6abe:	44 27       	eor	r20, r20
    6ac0:	86 81       	ldd	r24, Z+6	; 0x06
    6ac2:	90 e0       	ldi	r25, 0x00	; 0
    6ac4:	a0 e0       	ldi	r26, 0x00	; 0
    6ac6:	b0 e0       	ldi	r27, 0x00	; 0
    6ac8:	dc 01       	movw	r26, r24
    6aca:	99 27       	eor	r25, r25
    6acc:	88 27       	eor	r24, r24
    6ace:	84 2b       	or	r24, r20
    6ad0:	95 2b       	or	r25, r21
    6ad2:	a6 2b       	or	r26, r22
    6ad4:	b7 2b       	or	r27, r23
    6ad6:	47 81       	ldd	r20, Z+7	; 0x07
    6ad8:	50 e0       	ldi	r21, 0x00	; 0
    6ada:	60 e0       	ldi	r22, 0x00	; 0
    6adc:	70 e0       	ldi	r23, 0x00	; 0
    6ade:	76 2f       	mov	r23, r22
    6ae0:	65 2f       	mov	r22, r21
    6ae2:	54 2f       	mov	r21, r20
    6ae4:	44 27       	eor	r20, r20
    6ae6:	84 2b       	or	r24, r20
    6ae8:	95 2b       	or	r25, r21
    6aea:	a6 2b       	or	r26, r22
    6aec:	b7 2b       	or	r27, r23
    6aee:	20 85       	ldd	r18, Z+8	; 0x08
    6af0:	82 2b       	or	r24, r18
    6af2:	bf 93       	push	r27
    6af4:	af 93       	push	r26
    6af6:	9f 93       	push	r25
    6af8:	8f 93       	push	r24
    6afa:	8e ef       	ldi	r24, 0xFE	; 254
    6afc:	91 e0       	ldi	r25, 0x01	; 1
    6afe:	9f 93       	push	r25
    6b00:	8f 93       	push	r24
    6b02:	1f 93       	push	r17
    6b04:	0f 93       	push	r16
    6b06:	0e 94 6b 75 	call	0xead6	; 0xead6 <sprintf>
    6b0a:	46 2d       	mov	r20, r6
    6b0c:	50 e0       	ldi	r21, 0x00	; 0
    6b0e:	44 50       	subi	r20, 0x04	; 4
    6b10:	51 09       	sbc	r21, r1
    6b12:	f8 01       	movw	r30, r16
    6b14:	01 90       	ld	r0, Z+
    6b16:	00 20       	and	r0, r0
    6b18:	e9 f7       	brne	.-6      	; 0x6b14 <TMR_SR_receiveMessage+0x412>
    6b1a:	cf 01       	movw	r24, r30
    6b1c:	b4 01       	movw	r22, r8
    6b1e:	67 5f       	subi	r22, 0xF7	; 247
    6b20:	7f 4f       	sbci	r23, 0xFF	; 255
    6b22:	01 97       	sbiw	r24, 0x01	; 1
    6b24:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    6b28:	0f b6       	in	r0, 0x3f	; 63
    6b2a:	f8 94       	cli
    6b2c:	de bf       	out	0x3e, r29	; 62
    6b2e:	0f be       	out	0x3f, r0	; 63
    6b30:	cd bf       	out	0x3d, r28	; 61
    6b32:	6c 2d       	mov	r22, r12
    6b34:	7d 2d       	mov	r23, r13
    6b36:	8e 2d       	mov	r24, r14
    6b38:	9f 2d       	mov	r25, r15
    6b3a:	3a c0       	rjmp	.+116    	; 0x6bb0 <TMR_SR_receiveMessage+0x4ae>
    6b3c:	73 2d       	mov	r23, r3
    6b3e:	84 2d       	mov	r24, r4
    6b40:	95 2d       	mov	r25, r5
    6b42:	36 c0       	rjmp	.+108    	; 0x6bb0 <TMR_SR_receiveMessage+0x4ae>
    6b44:	61 e0       	ldi	r22, 0x01	; 1
    6b46:	70 e0       	ldi	r23, 0x00	; 0
    6b48:	80 e0       	ldi	r24, 0x00	; 0
    6b4a:	91 e0       	ldi	r25, 0x01	; 1
    6b4c:	31 c0       	rjmp	.+98     	; 0x6bb0 <TMR_SR_receiveMessage+0x4ae>
    6b4e:	66 e0       	ldi	r22, 0x06	; 6
    6b50:	70 e0       	ldi	r23, 0x00	; 0
    6b52:	80 e0       	ldi	r24, 0x00	; 0
    6b54:	93 e0       	ldi	r25, 0x03	; 3
    6b56:	2c c0       	rjmp	.+88     	; 0x6bb0 <TMR_SR_receiveMessage+0x4ae>
    6b58:	62 2d       	mov	r22, r2
    6b5a:	73 2d       	mov	r23, r3
    6b5c:	84 2d       	mov	r24, r4
    6b5e:	95 2d       	mov	r25, r5
    6b60:	27 c0       	rjmp	.+78     	; 0x6bb0 <TMR_SR_receiveMessage+0x4ae>
    6b62:	66 e0       	ldi	r22, 0x06	; 6
    6b64:	70 e0       	ldi	r23, 0x00	; 0
    6b66:	80 e0       	ldi	r24, 0x00	; 0
    6b68:	91 e0       	ldi	r25, 0x01	; 1
    6b6a:	22 c0       	rjmp	.+68     	; 0x6bb0 <TMR_SR_receiveMessage+0x4ae>
    6b6c:	66 e0       	ldi	r22, 0x06	; 6
    6b6e:	70 e0       	ldi	r23, 0x00	; 0
    6b70:	80 e0       	ldi	r24, 0x00	; 0
    6b72:	91 e0       	ldi	r25, 0x01	; 1
    6b74:	1d c0       	rjmp	.+58     	; 0x6bb0 <TMR_SR_receiveMessage+0x4ae>
    6b76:	61 e0       	ldi	r22, 0x01	; 1
    6b78:	70 e0       	ldi	r23, 0x00	; 0
    6b7a:	80 e0       	ldi	r24, 0x00	; 0
    6b7c:	91 e0       	ldi	r25, 0x01	; 1
    6b7e:	18 c0       	rjmp	.+48     	; 0x6bb0 <TMR_SR_receiveMessage+0x4ae>
    6b80:	63 e1       	ldi	r22, 0x13	; 19
    6b82:	70 e0       	ldi	r23, 0x00	; 0
    6b84:	80 e0       	ldi	r24, 0x00	; 0
    6b86:	93 e0       	ldi	r25, 0x03	; 3
    6b88:	13 c0       	rjmp	.+38     	; 0x6bb0 <TMR_SR_receiveMessage+0x4ae>
    6b8a:	65 e0       	ldi	r22, 0x05	; 5
    6b8c:	70 e0       	ldi	r23, 0x00	; 0
    6b8e:	80 e0       	ldi	r24, 0x00	; 0
    6b90:	91 e0       	ldi	r25, 0x01	; 1
    6b92:	0e c0       	rjmp	.+28     	; 0x6bb0 <TMR_SR_receiveMessage+0x4ae>
    6b94:	65 e0       	ldi	r22, 0x05	; 5
    6b96:	70 e0       	ldi	r23, 0x00	; 0
    6b98:	80 e0       	ldi	r24, 0x00	; 0
    6b9a:	91 e0       	ldi	r25, 0x01	; 1
    6b9c:	09 c0       	rjmp	.+18     	; 0x6bb0 <TMR_SR_receiveMessage+0x4ae>
    6b9e:	62 2d       	mov	r22, r2
    6ba0:	73 2d       	mov	r23, r3
    6ba2:	84 2d       	mov	r24, r4
    6ba4:	95 2d       	mov	r25, r5
    6ba6:	04 c0       	rjmp	.+8      	; 0x6bb0 <TMR_SR_receiveMessage+0x4ae>
    6ba8:	6c 2d       	mov	r22, r12
    6baa:	7d 2d       	mov	r23, r13
    6bac:	8e 2d       	mov	r24, r14
    6bae:	9f 2d       	mov	r25, r15
    6bb0:	65 96       	adiw	r28, 0x15	; 21
    6bb2:	0f b6       	in	r0, 0x3f	; 63
    6bb4:	f8 94       	cli
    6bb6:	de bf       	out	0x3e, r29	; 62
    6bb8:	0f be       	out	0x3f, r0	; 63
    6bba:	cd bf       	out	0x3d, r28	; 61
    6bbc:	df 91       	pop	r29
    6bbe:	cf 91       	pop	r28
    6bc0:	1f 91       	pop	r17
    6bc2:	0f 91       	pop	r16
    6bc4:	ff 90       	pop	r15
    6bc6:	ef 90       	pop	r14
    6bc8:	df 90       	pop	r13
    6bca:	cf 90       	pop	r12
    6bcc:	bf 90       	pop	r11
    6bce:	af 90       	pop	r10
    6bd0:	9f 90       	pop	r9
    6bd2:	8f 90       	pop	r8
    6bd4:	7f 90       	pop	r7
    6bd6:	6f 90       	pop	r6
    6bd8:	5f 90       	pop	r5
    6bda:	4f 90       	pop	r4
    6bdc:	3f 90       	pop	r3
    6bde:	2f 90       	pop	r2
    6be0:	08 95       	ret

00006be2 <TMR_SR_sendTimeout>:
    6be2:	8f 92       	push	r8
    6be4:	9f 92       	push	r9
    6be6:	af 92       	push	r10
    6be8:	bf 92       	push	r11
    6bea:	cf 92       	push	r12
    6bec:	df 92       	push	r13
    6bee:	ef 92       	push	r14
    6bf0:	ff 92       	push	r15
    6bf2:	0f 93       	push	r16
    6bf4:	1f 93       	push	r17
    6bf6:	cf 93       	push	r28
    6bf8:	df 93       	push	r29
    6bfa:	cd b7       	in	r28, 0x3d	; 61
    6bfc:	de b7       	in	r29, 0x3e	; 62
    6bfe:	c9 55       	subi	r28, 0x59	; 89
    6c00:	d3 40       	sbci	r29, 0x03	; 3
    6c02:	0f b6       	in	r0, 0x3f	; 63
    6c04:	f8 94       	cli
    6c06:	de bf       	out	0x3e, r29	; 62
    6c08:	0f be       	out	0x3f, r0	; 63
    6c0a:	cd bf       	out	0x3d, r28	; 61
    6c0c:	7c 01       	movw	r14, r24
    6c0e:	6b 01       	movw	r12, r22
    6c10:	49 01       	movw	r8, r18
    6c12:	5a 01       	movw	r10, r20
    6c14:	89 01       	movw	r16, r18
    6c16:	9a 01       	movw	r18, r20
    6c18:	ae 01       	movw	r20, r28
    6c1a:	4f 5f       	subi	r20, 0xFF	; 255
    6c1c:	5f 4f       	sbci	r21, 0xFF	; 255
    6c1e:	bf dc       	rcall	.-1666   	; 0x659e <TMR_SR_sendMessage>
    6c20:	61 15       	cp	r22, r1
    6c22:	71 05       	cpc	r23, r1
    6c24:	81 05       	cpc	r24, r1
    6c26:	91 05       	cpc	r25, r1
    6c28:	09 f0       	breq	.+2      	; 0x6c2c <TMR_SR_sendTimeout+0x4a>
    6c2a:	63 c0       	rjmp	.+198    	; 0x6cf2 <TMR_SR_sendTimeout+0x110>
    6c2c:	f7 01       	movw	r30, r14
    6c2e:	e5 58       	subi	r30, 0x85	; 133
    6c30:	fe 4f       	sbci	r31, 0xFE	; 254
    6c32:	80 81       	ld	r24, Z
    6c34:	88 23       	and	r24, r24
    6c36:	09 f4       	brne	.+2      	; 0x6c3a <TMR_SR_sendTimeout+0x58>
    6c38:	53 c0       	rjmp	.+166    	; 0x6ce0 <TMR_SR_sendTimeout+0xfe>
    6c3a:	e5 50       	subi	r30, 0x05	; 5
    6c3c:	f1 40       	sbci	r31, 0x01	; 1
    6c3e:	80 81       	ld	r24, Z
    6c40:	81 11       	cpse	r24, r1
    6c42:	14 c0       	rjmp	.+40     	; 0x6c6c <TMR_SR_sendTimeout+0x8a>
    6c44:	4d c0       	rjmp	.+154    	; 0x6ce0 <TMR_SR_sendTimeout+0xfe>
    6c46:	c7 01       	movw	r24, r14
    6c48:	0e 94 90 1d 	call	0x3b20	; 0x3b20 <TMR_SR_hasMoreTags>
    6c4c:	67 2b       	or	r22, r23
    6c4e:	68 2b       	or	r22, r24
    6c50:	69 2b       	or	r22, r25
    6c52:	61 f4       	brne	.+24     	; 0x6c6c <TMR_SR_sendTimeout+0x8a>
    6c54:	be 01       	movw	r22, r28
    6c56:	6e 5f       	subi	r22, 0xFE	; 254
    6c58:	7f 4f       	sbci	r23, 0xFF	; 255
    6c5a:	c7 01       	movw	r24, r14
    6c5c:	0e 94 b1 1f 	call	0x3f62	; 0x3f62 <TMR_SR_getNextTag>
    6c60:	be 01       	movw	r22, r28
    6c62:	6e 5f       	subi	r22, 0xFE	; 254
    6c64:	7f 4f       	sbci	r23, 0xFF	; 255
    6c66:	c7 01       	movw	r24, r14
    6c68:	0e 94 63 71 	call	0xe2c6	; 0xe2c6 <notify_read_listeners>
    6c6c:	f7 01       	movw	r30, r14
    6c6e:	e6 58       	subi	r30, 0x86	; 134
    6c70:	ff 4f       	sbci	r31, 0xFF	; 255
    6c72:	80 81       	ld	r24, Z
    6c74:	81 11       	cpse	r24, r1
    6c76:	e7 cf       	rjmp	.-50     	; 0x6c46 <TMR_SR_sendTimeout+0x64>
    6c78:	10 82       	st	Z, r1
    6c7a:	32 96       	adiw	r30, 0x02	; 2
    6c7c:	40 81       	ld	r20, Z
    6c7e:	b7 01       	movw	r22, r14
    6c80:	60 58       	subi	r22, 0x80	; 128
    6c82:	7f 4f       	sbci	r23, 0xFF	; 255
    6c84:	50 e0       	ldi	r21, 0x00	; 0
    6c86:	c6 01       	movw	r24, r12
    6c88:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    6c8c:	8f ef       	ldi	r24, 0xFF	; 255
    6c8e:	f6 01       	movw	r30, r12
    6c90:	80 83       	st	Z, r24
    6c92:	f7 01       	movw	r30, r14
    6c94:	e2 58       	subi	r30, 0x82	; 130
    6c96:	ff 4f       	sbci	r31, 0xFF	; 255
    6c98:	60 81       	ld	r22, Z
    6c9a:	70 e0       	ldi	r23, 0x00	; 0
    6c9c:	76 2f       	mov	r23, r22
    6c9e:	66 27       	eor	r22, r22
    6ca0:	31 96       	adiw	r30, 0x01	; 1
    6ca2:	80 81       	ld	r24, Z
    6ca4:	68 2b       	or	r22, r24
    6ca6:	cb 01       	movw	r24, r22
    6ca8:	a0 e0       	ldi	r26, 0x00	; 0
    6caa:	b0 e0       	ldi	r27, 0x00	; 0
    6cac:	00 97       	sbiw	r24, 0x00	; 0
    6cae:	a1 05       	cpc	r26, r1
    6cb0:	b1 05       	cpc	r27, r1
    6cb2:	21 f0       	breq	.+8      	; 0x6cbc <TMR_SR_sendTimeout+0xda>
    6cb4:	bc 01       	movw	r22, r24
    6cb6:	cd 01       	movw	r24, r26
    6cb8:	92 60       	ori	r25, 0x02	; 2
    6cba:	1b c0       	rjmp	.+54     	; 0x6cf2 <TMR_SR_sendTimeout+0x110>
    6cbc:	f6 01       	movw	r30, r12
    6cbe:	63 81       	ldd	r22, Z+3	; 0x03
    6cc0:	70 e0       	ldi	r23, 0x00	; 0
    6cc2:	76 2f       	mov	r23, r22
    6cc4:	66 27       	eor	r22, r22
    6cc6:	84 81       	ldd	r24, Z+4	; 0x04
    6cc8:	68 2b       	or	r22, r24
    6cca:	cb 01       	movw	r24, r22
    6ccc:	a0 e0       	ldi	r26, 0x00	; 0
    6cce:	b0 e0       	ldi	r27, 0x00	; 0
    6cd0:	00 97       	sbiw	r24, 0x00	; 0
    6cd2:	a1 05       	cpc	r26, r1
    6cd4:	b1 05       	cpc	r27, r1
    6cd6:	59 f0       	breq	.+22     	; 0x6cee <TMR_SR_sendTimeout+0x10c>
    6cd8:	bc 01       	movw	r22, r24
    6cda:	cd 01       	movw	r24, r26
    6cdc:	92 60       	ori	r25, 0x02	; 2
    6cde:	09 c0       	rjmp	.+18     	; 0x6cf2 <TMR_SR_sendTimeout+0x110>
    6ce0:	49 81       	ldd	r20, Y+1	; 0x01
    6ce2:	95 01       	movw	r18, r10
    6ce4:	84 01       	movw	r16, r8
    6ce6:	b6 01       	movw	r22, r12
    6ce8:	c7 01       	movw	r24, r14
    6cea:	0b dd       	rcall	.-1514   	; 0x6702 <TMR_SR_receiveMessage>
    6cec:	02 c0       	rjmp	.+4      	; 0x6cf2 <TMR_SR_sendTimeout+0x110>
    6cee:	bc 01       	movw	r22, r24
    6cf0:	cd 01       	movw	r24, r26
    6cf2:	c7 5a       	subi	r28, 0xA7	; 167
    6cf4:	dc 4f       	sbci	r29, 0xFC	; 252
    6cf6:	0f b6       	in	r0, 0x3f	; 63
    6cf8:	f8 94       	cli
    6cfa:	de bf       	out	0x3e, r29	; 62
    6cfc:	0f be       	out	0x3f, r0	; 63
    6cfe:	cd bf       	out	0x3d, r28	; 61
    6d00:	df 91       	pop	r29
    6d02:	cf 91       	pop	r28
    6d04:	1f 91       	pop	r17
    6d06:	0f 91       	pop	r16
    6d08:	ff 90       	pop	r15
    6d0a:	ef 90       	pop	r14
    6d0c:	df 90       	pop	r13
    6d0e:	cf 90       	pop	r12
    6d10:	bf 90       	pop	r11
    6d12:	af 90       	pop	r10
    6d14:	9f 90       	pop	r9
    6d16:	8f 90       	pop	r8
    6d18:	08 95       	ret

00006d1a <TMR_SR_send>:
    6d1a:	fc 01       	movw	r30, r24
    6d1c:	e0 52       	subi	r30, 0x20	; 32
    6d1e:	fe 4f       	sbci	r31, 0xFE	; 254
    6d20:	20 81       	ld	r18, Z
    6d22:	31 81       	ldd	r19, Z+1	; 0x01
    6d24:	42 81       	ldd	r20, Z+2	; 0x02
    6d26:	53 81       	ldd	r21, Z+3	; 0x03
    6d28:	5c cf       	rjmp	.-328    	; 0x6be2 <TMR_SR_sendTimeout>
    6d2a:	08 95       	ret

00006d2c <TMR_SR_sendCmd>:
    6d2c:	43 50       	subi	r20, 0x03	; 3
    6d2e:	fb 01       	movw	r30, r22
    6d30:	41 83       	std	Z+1, r20	; 0x01
    6d32:	f3 cf       	rjmp	.-26     	; 0x6d1a <TMR_SR_send>
    6d34:	08 95       	ret

00006d36 <TMR_SR_callSendCmd>:
    6d36:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    6d3a:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    6d3e:	2f 5f       	subi	r18, 0xFF	; 255
    6d40:	3f 4f       	sbci	r19, 0xFF	; 255
    6d42:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    6d46:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    6d4a:	fb 01       	movw	r30, r22
    6d4c:	42 83       	std	Z+2, r20	; 0x02
    6d4e:	43 e0       	ldi	r20, 0x03	; 3
    6d50:	ed cf       	rjmp	.-38     	; 0x6d2c <TMR_SR_sendCmd>
    6d52:	08 95       	ret

00006d54 <TMR_SR_cmdFrameHeader>:
    6d54:	0f 93       	push	r16
    6d56:	fb 01       	movw	r30, r22
    6d58:	60 91 57 02 	lds	r22, 0x0257	; 0x800257 <totalMsgIdx>
    6d5c:	70 91 58 02 	lds	r23, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    6d60:	6f 5f       	subi	r22, 0xFF	; 255
    6d62:	7f 4f       	sbci	r23, 0xFF	; 255
    6d64:	70 93 58 02 	sts	0x0258, r23	; 0x800258 <totalMsgIdx+0x1>
    6d68:	60 93 57 02 	sts	0x0257, r22	; 0x800257 <totalMsgIdx>
    6d6c:	50 81       	ld	r21, Z
    6d6e:	61 e0       	ldi	r22, 0x01	; 1
    6d70:	65 0f       	add	r22, r21
    6d72:	60 83       	st	Z, r22
    6d74:	dc 01       	movw	r26, r24
    6d76:	a5 0f       	add	r26, r21
    6d78:	b1 1d       	adc	r27, r1
    6d7a:	4c 93       	st	X, r20
    6d7c:	40 91 57 02 	lds	r20, 0x0257	; 0x800257 <totalMsgIdx>
    6d80:	50 91 58 02 	lds	r21, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    6d84:	4e 5f       	subi	r20, 0xFE	; 254
    6d86:	5f 4f       	sbci	r21, 0xFF	; 255
    6d88:	50 93 58 02 	sts	0x0258, r21	; 0x800258 <totalMsgIdx+0x1>
    6d8c:	40 93 57 02 	sts	0x0257, r20	; 0x800257 <totalMsgIdx>
    6d90:	40 81       	ld	r20, Z
    6d92:	51 e0       	ldi	r21, 0x01	; 1
    6d94:	54 0f       	add	r21, r20
    6d96:	50 83       	st	Z, r21
    6d98:	dc 01       	movw	r26, r24
    6d9a:	a4 0f       	add	r26, r20
    6d9c:	b1 1d       	adc	r27, r1
    6d9e:	3c 93       	st	X, r19
    6da0:	30 81       	ld	r19, Z
    6da2:	41 e0       	ldi	r20, 0x01	; 1
    6da4:	43 0f       	add	r20, r19
    6da6:	40 83       	st	Z, r20
    6da8:	dc 01       	movw	r26, r24
    6daa:	a3 0f       	add	r26, r19
    6dac:	b1 1d       	adc	r27, r1
    6dae:	2c 93       	st	X, r18
    6db0:	00 23       	and	r16, r16
    6db2:	91 f0       	breq	.+36     	; 0x6dd8 <TMR_SR_cmdFrameHeader+0x84>
    6db4:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    6db8:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    6dbc:	2f 5f       	subi	r18, 0xFF	; 255
    6dbe:	3f 4f       	sbci	r19, 0xFF	; 255
    6dc0:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    6dc4:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    6dc8:	20 81       	ld	r18, Z
    6dca:	31 e0       	ldi	r19, 0x01	; 1
    6dcc:	32 0f       	add	r19, r18
    6dce:	30 83       	st	Z, r19
    6dd0:	dc 01       	movw	r26, r24
    6dd2:	a2 0f       	add	r26, r18
    6dd4:	b1 1d       	adc	r27, r1
    6dd6:	1c 92       	st	X, r1
    6dd8:	20 91 5f 02 	lds	r18, 0x025F	; 0x80025f <isMultiSelectEnabled>
    6ddc:	22 23       	and	r18, r18
    6dde:	b9 f0       	breq	.+46     	; 0x6e0e <TMR_SR_cmdFrameHeader+0xba>
    6de0:	20 91 5e 02 	lds	r18, 0x025E	; 0x80025e <isEmbeddedTagopEnabled>
    6de4:	21 11       	cpse	r18, r1
    6de6:	13 c0       	rjmp	.+38     	; 0x6e0e <TMR_SR_cmdFrameHeader+0xba>
    6de8:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    6dec:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    6df0:	2f 5f       	subi	r18, 0xFF	; 255
    6df2:	3f 4f       	sbci	r19, 0xFF	; 255
    6df4:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    6df8:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    6dfc:	20 81       	ld	r18, Z
    6dfe:	31 e0       	ldi	r19, 0x01	; 1
    6e00:	32 0f       	add	r19, r18
    6e02:	30 83       	st	Z, r19
    6e04:	fc 01       	movw	r30, r24
    6e06:	e2 0f       	add	r30, r18
    6e08:	f1 1d       	adc	r31, r1
    6e0a:	28 e8       	ldi	r18, 0x88	; 136
    6e0c:	20 83       	st	Z, r18
    6e0e:	0f 91       	pop	r16
    6e10:	08 95       	ret

00006e12 <fillVersionInfo>:
    6e12:	0f 93       	push	r16
    6e14:	1f 93       	push	r17
    6e16:	cf 93       	push	r28
    6e18:	df 93       	push	r29
    6e1a:	fc 01       	movw	r30, r24
    6e1c:	80 e0       	ldi	r24, 0x00	; 0
    6e1e:	95 e0       	ldi	r25, 0x05	; 5
    6e20:	0a c0       	rjmp	.+20     	; 0x6e36 <fillVersionInfo+0x24>
    6e22:	db 01       	movw	r26, r22
    6e24:	a9 0f       	add	r26, r25
    6e26:	b1 1d       	adc	r27, r1
    6e28:	2c 91       	ld	r18, X
    6e2a:	df 01       	movw	r26, r30
    6e2c:	a8 0f       	add	r26, r24
    6e2e:	b1 1d       	adc	r27, r1
    6e30:	2c 93       	st	X, r18
    6e32:	8f 5f       	subi	r24, 0xFF	; 255
    6e34:	9f 5f       	subi	r25, 0xFF	; 255
    6e36:	84 30       	cpi	r24, 0x04	; 4
    6e38:	a0 f3       	brcs	.-24     	; 0x6e22 <fillVersionInfo+0x10>
    6e3a:	80 e0       	ldi	r24, 0x00	; 0
    6e3c:	0b c0       	rjmp	.+22     	; 0x6e54 <fillVersionInfo+0x42>
    6e3e:	db 01       	movw	r26, r22
    6e40:	a9 0f       	add	r26, r25
    6e42:	b1 1d       	adc	r27, r1
    6e44:	2c 91       	ld	r18, X
    6e46:	df 01       	movw	r26, r30
    6e48:	a8 0f       	add	r26, r24
    6e4a:	b1 1d       	adc	r27, r1
    6e4c:	14 96       	adiw	r26, 0x04	; 4
    6e4e:	2c 93       	st	X, r18
    6e50:	8f 5f       	subi	r24, 0xFF	; 255
    6e52:	9f 5f       	subi	r25, 0xFF	; 255
    6e54:	84 30       	cpi	r24, 0x04	; 4
    6e56:	98 f3       	brcs	.-26     	; 0x6e3e <fillVersionInfo+0x2c>
    6e58:	80 e0       	ldi	r24, 0x00	; 0
    6e5a:	0b c0       	rjmp	.+22     	; 0x6e72 <fillVersionInfo+0x60>
    6e5c:	db 01       	movw	r26, r22
    6e5e:	a9 0f       	add	r26, r25
    6e60:	b1 1d       	adc	r27, r1
    6e62:	2c 91       	ld	r18, X
    6e64:	df 01       	movw	r26, r30
    6e66:	a8 0f       	add	r26, r24
    6e68:	b1 1d       	adc	r27, r1
    6e6a:	18 96       	adiw	r26, 0x08	; 8
    6e6c:	2c 93       	st	X, r18
    6e6e:	8f 5f       	subi	r24, 0xFF	; 255
    6e70:	9f 5f       	subi	r25, 0xFF	; 255
    6e72:	84 30       	cpi	r24, 0x04	; 4
    6e74:	98 f3       	brcs	.-26     	; 0x6e5c <fillVersionInfo+0x4a>
    6e76:	80 e0       	ldi	r24, 0x00	; 0
    6e78:	0b c0       	rjmp	.+22     	; 0x6e90 <fillVersionInfo+0x7e>
    6e7a:	db 01       	movw	r26, r22
    6e7c:	a9 0f       	add	r26, r25
    6e7e:	b1 1d       	adc	r27, r1
    6e80:	2c 91       	ld	r18, X
    6e82:	df 01       	movw	r26, r30
    6e84:	a8 0f       	add	r26, r24
    6e86:	b1 1d       	adc	r27, r1
    6e88:	1c 96       	adiw	r26, 0x0c	; 12
    6e8a:	2c 93       	st	X, r18
    6e8c:	8f 5f       	subi	r24, 0xFF	; 255
    6e8e:	9f 5f       	subi	r25, 0xFF	; 255
    6e90:	84 30       	cpi	r24, 0x04	; 4
    6e92:	98 f3       	brcs	.-26     	; 0x6e7a <fillVersionInfo+0x68>
    6e94:	9c 5f       	subi	r25, 0xFC	; 252
    6e96:	69 0f       	add	r22, r25
    6e98:	71 1d       	adc	r23, r1
    6e9a:	db 01       	movw	r26, r22
    6e9c:	14 97       	sbiw	r26, 0x04	; 4
    6e9e:	8c 91       	ld	r24, X
    6ea0:	90 e0       	ldi	r25, 0x00	; 0
    6ea2:	a0 e0       	ldi	r26, 0x00	; 0
    6ea4:	b0 e0       	ldi	r27, 0x00	; 0
    6ea6:	38 2f       	mov	r19, r24
    6ea8:	22 27       	eor	r18, r18
    6eaa:	11 27       	eor	r17, r17
    6eac:	00 27       	eor	r16, r16
    6eae:	db 01       	movw	r26, r22
    6eb0:	13 97       	sbiw	r26, 0x03	; 3
    6eb2:	9c 91       	ld	r25, X
    6eb4:	89 2f       	mov	r24, r25
    6eb6:	90 e0       	ldi	r25, 0x00	; 0
    6eb8:	a0 e0       	ldi	r26, 0x00	; 0
    6eba:	b0 e0       	ldi	r27, 0x00	; 0
    6ebc:	dc 01       	movw	r26, r24
    6ebe:	99 27       	eor	r25, r25
    6ec0:	88 27       	eor	r24, r24
    6ec2:	80 2b       	or	r24, r16
    6ec4:	91 2b       	or	r25, r17
    6ec6:	a2 2b       	or	r26, r18
    6ec8:	b3 2b       	or	r27, r19
    6eca:	eb 01       	movw	r28, r22
    6ecc:	22 97       	sbiw	r28, 0x02	; 2
    6ece:	08 81       	ld	r16, Y
    6ed0:	10 e0       	ldi	r17, 0x00	; 0
    6ed2:	20 e0       	ldi	r18, 0x00	; 0
    6ed4:	30 e0       	ldi	r19, 0x00	; 0
    6ed6:	32 2f       	mov	r19, r18
    6ed8:	21 2f       	mov	r18, r17
    6eda:	10 2f       	mov	r17, r16
    6edc:	00 27       	eor	r16, r16
    6ede:	80 2b       	or	r24, r16
    6ee0:	91 2b       	or	r25, r17
    6ee2:	a2 2b       	or	r26, r18
    6ee4:	b3 2b       	or	r27, r19
    6ee6:	21 96       	adiw	r28, 0x01	; 1
    6ee8:	28 81       	ld	r18, Y
    6eea:	82 2b       	or	r24, r18
    6eec:	80 8b       	std	Z+16, r24	; 0x10
    6eee:	91 8b       	std	Z+17, r25	; 0x11
    6ef0:	a2 8b       	std	Z+18, r26	; 0x12
    6ef2:	b3 8b       	std	Z+19, r27	; 0x13
    6ef4:	df 91       	pop	r29
    6ef6:	cf 91       	pop	r28
    6ef8:	1f 91       	pop	r17
    6efa:	0f 91       	pop	r16
    6efc:	08 95       	ret

00006efe <TMR_SR_cmdVersion>:
    6efe:	0f 93       	push	r16
    6f00:	1f 93       	push	r17
    6f02:	cf 93       	push	r28
    6f04:	df 93       	push	r29
    6f06:	cd b7       	in	r28, 0x3d	; 61
    6f08:	de b7       	in	r29, 0x3e	; 62
    6f0a:	da 95       	dec	r29
    6f0c:	0f b6       	in	r0, 0x3f	; 63
    6f0e:	f8 94       	cli
    6f10:	de bf       	out	0x3e, r29	; 62
    6f12:	0f be       	out	0x3f, r0	; 63
    6f14:	cd bf       	out	0x3d, r28	; 61
    6f16:	8b 01       	movw	r16, r22
    6f18:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    6f1c:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    6f20:	2f 5f       	subi	r18, 0xFF	; 255
    6f22:	3f 4f       	sbci	r19, 0xFF	; 255
    6f24:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    6f28:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    6f2c:	23 e0       	ldi	r18, 0x03	; 3
    6f2e:	2b 83       	std	Y+3, r18	; 0x03
    6f30:	1a 82       	std	Y+2, r1	; 0x02
    6f32:	20 e0       	ldi	r18, 0x00	; 0
    6f34:	30 e0       	ldi	r19, 0x00	; 0
    6f36:	a9 01       	movw	r20, r18
    6f38:	be 01       	movw	r22, r28
    6f3a:	6f 5f       	subi	r22, 0xFF	; 255
    6f3c:	7f 4f       	sbci	r23, 0xFF	; 255
    6f3e:	51 de       	rcall	.-862    	; 0x6be2 <TMR_SR_sendTimeout>
    6f40:	61 15       	cp	r22, r1
    6f42:	71 05       	cpc	r23, r1
    6f44:	81 05       	cpc	r24, r1
    6f46:	91 05       	cpc	r25, r1
    6f48:	69 f4       	brne	.+26     	; 0x6f64 <TMR_SR_cmdVersion+0x66>
    6f4a:	01 15       	cp	r16, r1
    6f4c:	11 05       	cpc	r17, r1
    6f4e:	71 f0       	breq	.+28     	; 0x6f6c <TMR_SR_cmdVersion+0x6e>
    6f50:	be 01       	movw	r22, r28
    6f52:	6f 5f       	subi	r22, 0xFF	; 255
    6f54:	7f 4f       	sbci	r23, 0xFF	; 255
    6f56:	c8 01       	movw	r24, r16
    6f58:	5c df       	rcall	.-328    	; 0x6e12 <fillVersionInfo>
    6f5a:	40 e0       	ldi	r20, 0x00	; 0
    6f5c:	30 e0       	ldi	r19, 0x00	; 0
    6f5e:	20 e0       	ldi	r18, 0x00	; 0
    6f60:	90 e0       	ldi	r25, 0x00	; 0
    6f62:	08 c0       	rjmp	.+16     	; 0x6f74 <TMR_SR_cmdVersion+0x76>
    6f64:	46 2f       	mov	r20, r22
    6f66:	37 2f       	mov	r19, r23
    6f68:	28 2f       	mov	r18, r24
    6f6a:	04 c0       	rjmp	.+8      	; 0x6f74 <TMR_SR_cmdVersion+0x76>
    6f6c:	40 e0       	ldi	r20, 0x00	; 0
    6f6e:	30 e0       	ldi	r19, 0x00	; 0
    6f70:	20 e0       	ldi	r18, 0x00	; 0
    6f72:	90 e0       	ldi	r25, 0x00	; 0
    6f74:	64 2f       	mov	r22, r20
    6f76:	73 2f       	mov	r23, r19
    6f78:	82 2f       	mov	r24, r18
    6f7a:	d3 95       	inc	r29
    6f7c:	0f b6       	in	r0, 0x3f	; 63
    6f7e:	f8 94       	cli
    6f80:	de bf       	out	0x3e, r29	; 62
    6f82:	0f be       	out	0x3f, r0	; 63
    6f84:	cd bf       	out	0x3d, r28	; 61
    6f86:	df 91       	pop	r29
    6f88:	cf 91       	pop	r28
    6f8a:	1f 91       	pop	r17
    6f8c:	0f 91       	pop	r16
    6f8e:	08 95       	ret

00006f90 <TMR_SR_cmdBootFirmware>:
    6f90:	0f 93       	push	r16
    6f92:	1f 93       	push	r17
    6f94:	cf 93       	push	r28
    6f96:	df 93       	push	r29
    6f98:	cd b7       	in	r28, 0x3d	; 61
    6f9a:	de b7       	in	r29, 0x3e	; 62
    6f9c:	da 95       	dec	r29
    6f9e:	0f b6       	in	r0, 0x3f	; 63
    6fa0:	f8 94       	cli
    6fa2:	de bf       	out	0x3e, r29	; 62
    6fa4:	0f be       	out	0x3f, r0	; 63
    6fa6:	cd bf       	out	0x3d, r28	; 61
    6fa8:	8c 01       	movw	r16, r24
    6faa:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    6fae:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    6fb2:	01 96       	adiw	r24, 0x01	; 1
    6fb4:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    6fb8:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    6fbc:	84 e0       	ldi	r24, 0x04	; 4
    6fbe:	8b 83       	std	Y+3, r24	; 0x03
    6fc0:	1a 82       	std	Y+2, r1	; 0x02
    6fc2:	28 ee       	ldi	r18, 0xE8	; 232
    6fc4:	33 e0       	ldi	r19, 0x03	; 3
    6fc6:	40 e0       	ldi	r20, 0x00	; 0
    6fc8:	50 e0       	ldi	r21, 0x00	; 0
    6fca:	be 01       	movw	r22, r28
    6fcc:	6f 5f       	subi	r22, 0xFF	; 255
    6fce:	7f 4f       	sbci	r23, 0xFF	; 255
    6fd0:	c8 01       	movw	r24, r16
    6fd2:	07 de       	rcall	.-1010   	; 0x6be2 <TMR_SR_sendTimeout>
    6fd4:	61 15       	cp	r22, r1
    6fd6:	71 05       	cpc	r23, r1
    6fd8:	81 05       	cpc	r24, r1
    6fda:	91 05       	cpc	r25, r1
    6fdc:	61 f4       	brne	.+24     	; 0x6ff6 <TMR_SR_cmdBootFirmware+0x66>
    6fde:	be 01       	movw	r22, r28
    6fe0:	6f 5f       	subi	r22, 0xFF	; 255
    6fe2:	7f 4f       	sbci	r23, 0xFF	; 255
    6fe4:	c8 01       	movw	r24, r16
    6fe6:	83 59       	subi	r24, 0x93	; 147
    6fe8:	9c 4f       	sbci	r25, 0xFC	; 252
    6fea:	13 df       	rcall	.-474    	; 0x6e12 <fillVersionInfo>
    6fec:	40 e0       	ldi	r20, 0x00	; 0
    6fee:	30 e0       	ldi	r19, 0x00	; 0
    6ff0:	20 e0       	ldi	r18, 0x00	; 0
    6ff2:	90 e0       	ldi	r25, 0x00	; 0
    6ff4:	03 c0       	rjmp	.+6      	; 0x6ffc <TMR_SR_cmdBootFirmware+0x6c>
    6ff6:	46 2f       	mov	r20, r22
    6ff8:	37 2f       	mov	r19, r23
    6ffa:	28 2f       	mov	r18, r24
    6ffc:	64 2f       	mov	r22, r20
    6ffe:	73 2f       	mov	r23, r19
    7000:	82 2f       	mov	r24, r18
    7002:	d3 95       	inc	r29
    7004:	0f b6       	in	r0, 0x3f	; 63
    7006:	f8 94       	cli
    7008:	de bf       	out	0x3e, r29	; 62
    700a:	0f be       	out	0x3f, r0	; 63
    700c:	cd bf       	out	0x3d, r28	; 61
    700e:	df 91       	pop	r29
    7010:	cf 91       	pop	r28
    7012:	1f 91       	pop	r17
    7014:	0f 91       	pop	r16
    7016:	08 95       	ret

00007018 <TMR_SR_cmdSetBaudRate>:
    7018:	cf 93       	push	r28
    701a:	df 93       	push	r29
    701c:	cd b7       	in	r28, 0x3d	; 61
    701e:	de b7       	in	r29, 0x3e	; 62
    7020:	da 95       	dec	r29
    7022:	0f b6       	in	r0, 0x3f	; 63
    7024:	f8 94       	cli
    7026:	de bf       	out	0x3e, r29	; 62
    7028:	0f be       	out	0x3f, r0	; 63
    702a:	cd bf       	out	0x3d, r28	; 61
    702c:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    7030:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7034:	e6 e0       	ldi	r30, 0x06	; 6
    7036:	eb 83       	std	Y+3, r30	; 0x03
    7038:	2b 5f       	subi	r18, 0xFB	; 251
    703a:	3f 4f       	sbci	r19, 0xFF	; 255
    703c:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    7040:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    7044:	7c 83       	std	Y+4, r23	; 0x04
    7046:	6d 83       	std	Y+5, r22	; 0x05
    7048:	5e 83       	std	Y+6, r21	; 0x06
    704a:	4f 83       	std	Y+7, r20	; 0x07
    704c:	47 e0       	ldi	r20, 0x07	; 7
    704e:	be 01       	movw	r22, r28
    7050:	6f 5f       	subi	r22, 0xFF	; 255
    7052:	7f 4f       	sbci	r23, 0xFF	; 255
    7054:	6b de       	rcall	.-810    	; 0x6d2c <TMR_SR_sendCmd>
    7056:	d3 95       	inc	r29
    7058:	0f b6       	in	r0, 0x3f	; 63
    705a:	f8 94       	cli
    705c:	de bf       	out	0x3e, r29	; 62
    705e:	0f be       	out	0x3f, r0	; 63
    7060:	cd bf       	out	0x3d, r28	; 61
    7062:	df 91       	pop	r29
    7064:	cf 91       	pop	r28
    7066:	08 95       	ret

00007068 <TMR_SR_cmdGetHardwareVersion>:
    7068:	ef 92       	push	r14
    706a:	ff 92       	push	r15
    706c:	0f 93       	push	r16
    706e:	1f 93       	push	r17
    7070:	cf 93       	push	r28
    7072:	df 93       	push	r29
    7074:	cd b7       	in	r28, 0x3d	; 61
    7076:	de b7       	in	r29, 0x3e	; 62
    7078:	da 95       	dec	r29
    707a:	0f b6       	in	r0, 0x3f	; 63
    707c:	f8 94       	cli
    707e:	de bf       	out	0x3e, r29	; 62
    7080:	0f be       	out	0x3f, r0	; 63
    7082:	cd bf       	out	0x3d, r28	; 61
    7084:	79 01       	movw	r14, r18
    7086:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    708a:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    708e:	50 e1       	ldi	r21, 0x10	; 16
    7090:	5b 83       	std	Y+3, r21	; 0x03
    7092:	6c 83       	std	Y+4, r22	; 0x04
    7094:	2d 5f       	subi	r18, 0xFD	; 253
    7096:	3f 4f       	sbci	r19, 0xFF	; 255
    7098:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    709c:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    70a0:	4d 83       	std	Y+5, r20	; 0x05
    70a2:	45 e0       	ldi	r20, 0x05	; 5
    70a4:	be 01       	movw	r22, r28
    70a6:	6f 5f       	subi	r22, 0xFF	; 255
    70a8:	7f 4f       	sbci	r23, 0xFF	; 255
    70aa:	40 de       	rcall	.-896    	; 0x6d2c <TMR_SR_sendCmd>
    70ac:	61 15       	cp	r22, r1
    70ae:	71 05       	cpc	r23, r1
    70b0:	81 05       	cpc	r24, r1
    70b2:	91 05       	cpc	r25, r1
    70b4:	b1 f0       	breq	.+44     	; 0x70e2 <TMR_SR_cmdGetHardwareVersion+0x7a>
    70b6:	f7 01       	movw	r30, r14
    70b8:	10 82       	st	Z, r1
    70ba:	46 2f       	mov	r20, r22
    70bc:	37 2f       	mov	r19, r23
    70be:	28 2f       	mov	r18, r24
    70c0:	1e c0       	rjmp	.+60     	; 0x70fe <TMR_SR_cmdGetHardwareVersion+0x96>
    70c2:	82 2f       	mov	r24, r18
    70c4:	90 e0       	ldi	r25, 0x00	; 0
    70c6:	d8 01       	movw	r26, r16
    70c8:	a8 0f       	add	r26, r24
    70ca:	b9 1f       	adc	r27, r25
    70cc:	05 96       	adiw	r24, 0x05	; 5
    70ce:	e1 e0       	ldi	r30, 0x01	; 1
    70d0:	f0 e0       	ldi	r31, 0x00	; 0
    70d2:	ec 0f       	add	r30, r28
    70d4:	fd 1f       	adc	r31, r29
    70d6:	e8 0f       	add	r30, r24
    70d8:	f9 1f       	adc	r31, r25
    70da:	80 81       	ld	r24, Z
    70dc:	8c 93       	st	X, r24
    70de:	2f 5f       	subi	r18, 0xFF	; 255
    70e0:	01 c0       	rjmp	.+2      	; 0x70e4 <TMR_SR_cmdGetHardwareVersion+0x7c>
    70e2:	20 e0       	ldi	r18, 0x00	; 0
    70e4:	8a 81       	ldd	r24, Y+2	; 0x02
    70e6:	28 17       	cp	r18, r24
    70e8:	20 f4       	brcc	.+8      	; 0x70f2 <TMR_SR_cmdGetHardwareVersion+0x8a>
    70ea:	f7 01       	movw	r30, r14
    70ec:	90 81       	ld	r25, Z
    70ee:	29 17       	cp	r18, r25
    70f0:	40 f3       	brcs	.-48     	; 0x70c2 <TMR_SR_cmdGetHardwareVersion+0x5a>
    70f2:	f7 01       	movw	r30, r14
    70f4:	80 83       	st	Z, r24
    70f6:	40 e0       	ldi	r20, 0x00	; 0
    70f8:	30 e0       	ldi	r19, 0x00	; 0
    70fa:	20 e0       	ldi	r18, 0x00	; 0
    70fc:	90 e0       	ldi	r25, 0x00	; 0
    70fe:	64 2f       	mov	r22, r20
    7100:	73 2f       	mov	r23, r19
    7102:	82 2f       	mov	r24, r18
    7104:	d3 95       	inc	r29
    7106:	0f b6       	in	r0, 0x3f	; 63
    7108:	f8 94       	cli
    710a:	de bf       	out	0x3e, r29	; 62
    710c:	0f be       	out	0x3f, r0	; 63
    710e:	cd bf       	out	0x3d, r28	; 61
    7110:	df 91       	pop	r29
    7112:	cf 91       	pop	r28
    7114:	1f 91       	pop	r17
    7116:	0f 91       	pop	r16
    7118:	ff 90       	pop	r15
    711a:	ef 90       	pop	r14
    711c:	08 95       	ret

0000711e <TMR_SR_msgSetupReadTagMultipleWithMetadata>:
    711e:	2f 92       	push	r2
    7120:	3f 92       	push	r3
    7122:	4f 92       	push	r4
    7124:	5f 92       	push	r5
    7126:	6f 92       	push	r6
    7128:	7f 92       	push	r7
    712a:	8f 92       	push	r8
    712c:	9f 92       	push	r9
    712e:	af 92       	push	r10
    7130:	bf 92       	push	r11
    7132:	cf 92       	push	r12
    7134:	df 92       	push	r13
    7136:	ef 92       	push	r14
    7138:	ff 92       	push	r15
    713a:	0f 93       	push	r16
    713c:	1f 93       	push	r17
    713e:	cf 93       	push	r28
    7140:	df 93       	push	r29
    7142:	00 d0       	rcall	.+0      	; 0x7144 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x26>
    7144:	00 d0       	rcall	.+0      	; 0x7146 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x28>
    7146:	cd b7       	in	r28, 0x3d	; 61
    7148:	de b7       	in	r29, 0x3e	; 62
    714a:	3c 01       	movw	r6, r24
    714c:	2b 01       	movw	r4, r22
    714e:	4a 01       	movw	r8, r20
    7150:	16 01       	movw	r2, r12
    7152:	ba 2c       	mov	r11, r10
    7154:	fc 01       	movw	r30, r24
    7156:	e0 54       	subi	r30, 0x40	; 64
    7158:	fb 4f       	sbci	r31, 0xFB	; 251
    715a:	82 e2       	ldi	r24, 0x22	; 34
    715c:	80 83       	st	Z, r24
    715e:	c1 14       	cp	r12, r1
    7160:	d1 04       	cpc	r13, r1
    7162:	31 f0       	breq	.+12     	; 0x7170 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x52>
    7164:	d6 01       	movw	r26, r12
    7166:	8c 91       	ld	r24, X
    7168:	88 23       	and	r24, r24
    716a:	21 f0       	breq	.+8      	; 0x7174 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x56>
    716c:	81 e0       	ldi	r24, 0x01	; 1
    716e:	03 c0       	rjmp	.+6      	; 0x7176 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x58>
    7170:	81 e0       	ldi	r24, 0x01	; 1
    7172:	01 c0       	rjmp	.+2      	; 0x7176 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x58>
    7174:	80 e0       	ldi	r24, 0x00	; 0
    7176:	80 93 5f 02 	sts	0x025F, r24	; 0x80025f <isMultiSelectEnabled>
    717a:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    717e:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7182:	01 96       	adiw	r24, 0x01	; 1
    7184:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    7188:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    718c:	f4 01       	movw	r30, r8
    718e:	80 81       	ld	r24, Z
    7190:	91 e0       	ldi	r25, 0x01	; 1
    7192:	98 0f       	add	r25, r24
    7194:	90 83       	st	Z, r25
    7196:	f2 01       	movw	r30, r4
    7198:	e8 0f       	add	r30, r24
    719a:	f1 1d       	adc	r31, r1
    719c:	82 e2       	ldi	r24, 0x22	; 34
    719e:	80 83       	st	Z, r24
    71a0:	f3 01       	movw	r30, r6
    71a2:	e7 50       	subi	r30, 0x07	; 7
    71a4:	fa 4f       	sbci	r31, 0xFA	; 250
    71a6:	80 81       	ld	r24, Z
    71a8:	81 11       	cpse	r24, r1
    71aa:	02 c0       	rjmp	.+4      	; 0x71b0 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x92>
    71ac:	90 e0       	ldi	r25, 0x00	; 0
    71ae:	01 c0       	rjmp	.+2      	; 0x71b2 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x94>
    71b0:	91 e8       	ldi	r25, 0x81	; 129
    71b2:	f3 01       	movw	r30, r6
    71b4:	e3 5f       	subi	r30, 0xF3	; 243
    71b6:	f9 4f       	sbci	r31, 0xF9	; 249
    71b8:	80 81       	ld	r24, Z
    71ba:	81 11       	cpse	r24, r1
    71bc:	94 68       	ori	r25, 0x84	; 132
    71be:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <isMultiSelectEnabled>
    71c2:	88 23       	and	r24, r24
    71c4:	71 f1       	breq	.+92     	; 0x7222 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x104>
    71c6:	98 68       	ori	r25, 0x88	; 136
    71c8:	d3 01       	movw	r26, r6
    71ca:	d2 96       	adiw	r26, 0x32	; 50
    71cc:	ed 91       	ld	r30, X+
    71ce:	fc 91       	ld	r31, X
    71d0:	d3 97       	sbiw	r26, 0x33	; 51
    71d2:	80 81       	ld	r24, Z
    71d4:	81 30       	cpi	r24, 0x01	; 1
    71d6:	39 f4       	brne	.+14     	; 0x71e6 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0xc8>
    71d8:	47 85       	ldd	r20, Z+15	; 0x0f
    71da:	50 89       	ldd	r21, Z+16	; 0x10
    71dc:	45 2b       	or	r20, r21
    71de:	19 f0       	breq	.+6      	; 0x71e6 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0xc8>
    71e0:	80 93 5e 02 	sts	0x025E, r24	; 0x80025e <isEmbeddedTagopEnabled>
    71e4:	1e c0       	rjmp	.+60     	; 0x7222 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x104>
    71e6:	82 30       	cpi	r24, 0x02	; 2
    71e8:	e1 f4       	brne	.+56     	; 0x7222 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x104>
    71ea:	17 c0       	rjmp	.+46     	; 0x721a <TMR_SR_msgSetupReadTagMultipleWithMetadata+0xfc>
    71ec:	66 81       	ldd	r22, Z+6	; 0x06
    71ee:	77 81       	ldd	r23, Z+7	; 0x07
    71f0:	48 2f       	mov	r20, r24
    71f2:	50 e0       	ldi	r21, 0x00	; 0
    71f4:	44 0f       	add	r20, r20
    71f6:	55 1f       	adc	r21, r21
    71f8:	db 01       	movw	r26, r22
    71fa:	a4 0f       	add	r26, r20
    71fc:	b5 1f       	adc	r27, r21
    71fe:	0d 90       	ld	r0, X+
    7200:	bc 91       	ld	r27, X
    7202:	a0 2d       	mov	r26, r0
    7204:	1f 96       	adiw	r26, 0x0f	; 15
    7206:	4d 91       	ld	r20, X+
    7208:	5c 91       	ld	r21, X
    720a:	50 97       	sbiw	r26, 0x10	; 16
    720c:	45 2b       	or	r20, r21
    720e:	19 f0       	breq	.+6      	; 0x7216 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0xf8>
    7210:	41 e0       	ldi	r20, 0x01	; 1
    7212:	40 93 5e 02 	sts	0x025E, r20	; 0x80025e <isEmbeddedTagopEnabled>
    7216:	8f 5f       	subi	r24, 0xFF	; 255
    7218:	01 c0       	rjmp	.+2      	; 0x721c <TMR_SR_msgSetupReadTagMultipleWithMetadata+0xfe>
    721a:	80 e0       	ldi	r24, 0x00	; 0
    721c:	44 85       	ldd	r20, Z+12	; 0x0c
    721e:	84 17       	cp	r24, r20
    7220:	28 f3       	brcs	.-54     	; 0x71ec <TMR_SR_msgSetupReadTagMultipleWithMetadata+0xce>
    7222:	99 23       	and	r25, r25
    7224:	99 f0       	breq	.+38     	; 0x724c <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x12e>
    7226:	40 91 57 02 	lds	r20, 0x0257	; 0x800257 <totalMsgIdx>
    722a:	50 91 58 02 	lds	r21, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    722e:	4f 5f       	subi	r20, 0xFF	; 255
    7230:	5f 4f       	sbci	r21, 0xFF	; 255
    7232:	50 93 58 02 	sts	0x0258, r21	; 0x800258 <totalMsgIdx+0x1>
    7236:	40 93 57 02 	sts	0x0257, r20	; 0x800257 <totalMsgIdx>
    723a:	f4 01       	movw	r30, r8
    723c:	80 81       	ld	r24, Z
    723e:	41 e0       	ldi	r20, 0x01	; 1
    7240:	48 0f       	add	r20, r24
    7242:	40 83       	st	Z, r20
    7244:	f2 01       	movw	r30, r4
    7246:	e8 0f       	add	r30, r24
    7248:	f1 1d       	adc	r31, r1
    724a:	90 83       	st	Z, r25
    724c:	d4 01       	movw	r26, r8
    724e:	dc 90       	ld	r13, X
    7250:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    7254:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7258:	01 96       	adiw	r24, 0x01	; 1
    725a:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    725e:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    7262:	8c 91       	ld	r24, X
    7264:	91 e0       	ldi	r25, 0x01	; 1
    7266:	98 0f       	add	r25, r24
    7268:	9c 93       	st	X, r25
    726a:	f2 01       	movw	r30, r4
    726c:	e8 0f       	add	r30, r24
    726e:	f1 1d       	adc	r31, r1
    7270:	10 82       	st	Z, r1
    7272:	c8 01       	movw	r24, r16
    7274:	80 61       	ori	r24, 0x10	; 16
    7276:	f3 01       	movw	r30, r6
    7278:	ea 58       	subi	r30, 0x8A	; 138
    727a:	ff 4f       	sbci	r31, 0xFF	; 255
    727c:	60 81       	ld	r22, Z
    727e:	66 23       	and	r22, r22
    7280:	a1 f0       	breq	.+40     	; 0x72aa <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x18c>
    7282:	c8 01       	movw	r24, r16
    7284:	88 61       	ori	r24, 0x18	; 24
    7286:	ee 55       	subi	r30, 0x5E	; 94
    7288:	fa 4f       	sbci	r31, 0xFA	; 250
    728a:	40 81       	ld	r20, Z
    728c:	44 23       	and	r20, r20
    728e:	19 f0       	breq	.+6      	; 0x7296 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x178>
    7290:	c8 01       	movw	r24, r16
    7292:	88 63       	ori	r24, 0x38	; 56
    7294:	0a c0       	rjmp	.+20     	; 0x72aa <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x18c>
    7296:	f3 01       	movw	r30, r6
    7298:	eb 5e       	subi	r30, 0xEB	; 235
    729a:	f9 4f       	sbci	r31, 0xF9	; 249
    729c:	40 81       	ld	r20, Z
    729e:	51 81       	ldd	r21, Z+1	; 0x01
    72a0:	45 2b       	or	r20, r21
    72a2:	19 f0       	breq	.+6      	; 0x72aa <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x18c>
    72a4:	c8 01       	movw	r24, r16
    72a6:	88 61       	ori	r24, 0x18	; 24
    72a8:	91 60       	ori	r25, 0x01	; 1
    72aa:	f3 01       	movw	r30, r6
    72ac:	e4 5f       	subi	r30, 0xF4	; 244
    72ae:	f9 4f       	sbci	r31, 0xF9	; 249
    72b0:	40 81       	ld	r20, Z
    72b2:	44 23       	and	r20, r20
    72b4:	11 f0       	breq	.+4      	; 0x72ba <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x19c>
    72b6:	80 68       	ori	r24, 0x80	; 128
    72b8:	10 82       	st	Z, r1
    72ba:	f3 01       	movw	r30, r6
    72bc:	e7 58       	subi	r30, 0x87	; 135
    72be:	ff 4f       	sbci	r31, 0xFF	; 255
    72c0:	40 81       	ld	r20, Z
    72c2:	44 23       	and	r20, r20
    72c4:	11 f0       	breq	.+4      	; 0x72ca <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x1ac>
    72c6:	92 60       	ori	r25, 0x02	; 2
    72c8:	10 82       	st	Z, r1
    72ca:	61 11       	cpse	r22, r1
    72cc:	94 60       	ori	r25, 0x04	; 4
    72ce:	f3 01       	movw	r30, r6
    72d0:	e4 50       	subi	r30, 0x04	; 4
    72d2:	fa 4f       	sbci	r31, 0xFA	; 250
    72d4:	40 81       	ld	r20, Z
    72d6:	41 11       	cpse	r20, r1
    72d8:	80 64       	ori	r24, 0x40	; 64
    72da:	40 91 57 02 	lds	r20, 0x0257	; 0x800257 <totalMsgIdx>
    72de:	50 91 58 02 	lds	r21, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    72e2:	4e 5f       	subi	r20, 0xFE	; 254
    72e4:	5f 4f       	sbci	r21, 0xFF	; 255
    72e6:	50 93 58 02 	sts	0x0258, r21	; 0x800258 <totalMsgIdx+0x1>
    72ea:	40 93 57 02 	sts	0x0257, r20	; 0x800257 <totalMsgIdx>
    72ee:	f4 01       	movw	r30, r8
    72f0:	40 81       	ld	r20, Z
    72f2:	51 e0       	ldi	r21, 0x01	; 1
    72f4:	54 0f       	add	r21, r20
    72f6:	50 83       	st	Z, r21
    72f8:	f2 01       	movw	r30, r4
    72fa:	e4 0f       	add	r30, r20
    72fc:	f1 1d       	adc	r31, r1
    72fe:	90 83       	st	Z, r25
    7300:	d4 01       	movw	r26, r8
    7302:	9c 91       	ld	r25, X
    7304:	41 e0       	ldi	r20, 0x01	; 1
    7306:	49 0f       	add	r20, r25
    7308:	4c 93       	st	X, r20
    730a:	f2 01       	movw	r30, r4
    730c:	e9 0f       	add	r30, r25
    730e:	f1 1d       	adc	r31, r1
    7310:	80 83       	st	Z, r24
    7312:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    7316:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    731a:	02 96       	adiw	r24, 0x02	; 2
    731c:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    7320:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    7324:	8c 91       	ld	r24, X
    7326:	91 e0       	ldi	r25, 0x01	; 1
    7328:	98 0f       	add	r25, r24
    732a:	9c 93       	st	X, r25
    732c:	f2 01       	movw	r30, r4
    732e:	e8 0f       	add	r30, r24
    7330:	f1 1d       	adc	r31, r1
    7332:	30 83       	st	Z, r19
    7334:	8c 91       	ld	r24, X
    7336:	91 e0       	ldi	r25, 0x01	; 1
    7338:	98 0f       	add	r25, r24
    733a:	9c 93       	st	X, r25
    733c:	f2 01       	movw	r30, r4
    733e:	e8 0f       	add	r30, r24
    7340:	f1 1d       	adc	r31, r1
    7342:	20 83       	st	Z, r18
    7344:	f3 01       	movw	r30, r6
    7346:	ea 58       	subi	r30, 0x8A	; 138
    7348:	ff 4f       	sbci	r31, 0xFF	; 255
    734a:	80 81       	ld	r24, Z
    734c:	88 23       	and	r24, r24
    734e:	09 f4       	brne	.+2      	; 0x7352 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x234>
    7350:	4d c0       	rjmp	.+154    	; 0x73ec <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x2ce>
    7352:	d3 01       	movw	r26, r6
    7354:	d2 96       	adiw	r26, 0x32	; 50
    7356:	ed 91       	ld	r30, X+
    7358:	fc 91       	ld	r31, X
    735a:	d3 97       	sbiw	r26, 0x33	; 51
    735c:	80 81       	ld	r24, Z
    735e:	82 30       	cpi	r24, 0x02	; 2
    7360:	09 f5       	brne	.+66     	; 0x73a4 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x286>
    7362:	f3 01       	movw	r30, r6
    7364:	e4 58       	subi	r30, 0x84	; 132
    7366:	fe 4f       	sbci	r31, 0xFE	; 254
    7368:	20 81       	ld	r18, Z
    736a:	31 81       	ldd	r19, Z+1	; 0x01
    736c:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    7370:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7374:	02 96       	adiw	r24, 0x02	; 2
    7376:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    737a:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    737e:	f4 01       	movw	r30, r8
    7380:	80 81       	ld	r24, Z
    7382:	91 e0       	ldi	r25, 0x01	; 1
    7384:	98 0f       	add	r25, r24
    7386:	90 83       	st	Z, r25
    7388:	f2 01       	movw	r30, r4
    738a:	e8 0f       	add	r30, r24
    738c:	f1 1d       	adc	r31, r1
    738e:	30 83       	st	Z, r19
    7390:	d4 01       	movw	r26, r8
    7392:	8c 91       	ld	r24, X
    7394:	91 e0       	ldi	r25, 0x01	; 1
    7396:	98 0f       	add	r25, r24
    7398:	9c 93       	st	X, r25
    739a:	f2 01       	movw	r30, r4
    739c:	e8 0f       	add	r30, r24
    739e:	f1 1d       	adc	r31, r1
    73a0:	20 83       	st	Z, r18
    73a2:	24 c0       	rjmp	.+72     	; 0x73ec <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x2ce>
    73a4:	ae 01       	movw	r20, r28
    73a6:	4f 5f       	subi	r20, 0xFF	; 255
    73a8:	5f 4f       	sbci	r21, 0xFF	; 255
    73aa:	60 e2       	ldi	r22, 0x20	; 32
    73ac:	c3 01       	movw	r24, r6
    73ae:	0e 94 e9 6b 	call	0xd7d2	; 0xd7d2 <TMR_paramGet>
    73b2:	29 81       	ldd	r18, Y+1	; 0x01
    73b4:	3a 81       	ldd	r19, Y+2	; 0x02
    73b6:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    73ba:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    73be:	02 96       	adiw	r24, 0x02	; 2
    73c0:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    73c4:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    73c8:	f4 01       	movw	r30, r8
    73ca:	80 81       	ld	r24, Z
    73cc:	91 e0       	ldi	r25, 0x01	; 1
    73ce:	98 0f       	add	r25, r24
    73d0:	90 83       	st	Z, r25
    73d2:	f2 01       	movw	r30, r4
    73d4:	e8 0f       	add	r30, r24
    73d6:	f1 1d       	adc	r31, r1
    73d8:	30 83       	st	Z, r19
    73da:	d4 01       	movw	r26, r8
    73dc:	8c 91       	ld	r24, X
    73de:	91 e0       	ldi	r25, 0x01	; 1
    73e0:	98 0f       	add	r25, r24
    73e2:	9c 93       	st	X, r25
    73e4:	f2 01       	movw	r30, r4
    73e6:	e8 0f       	add	r30, r24
    73e8:	f1 1d       	adc	r31, r1
    73ea:	20 83       	st	Z, r18
    73ec:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    73f0:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    73f4:	02 96       	adiw	r24, 0x02	; 2
    73f6:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    73fa:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    73fe:	f4 01       	movw	r30, r8
    7400:	80 81       	ld	r24, Z
    7402:	91 e0       	ldi	r25, 0x01	; 1
    7404:	98 0f       	add	r25, r24
    7406:	90 83       	st	Z, r25
    7408:	f2 01       	movw	r30, r4
    740a:	e8 0f       	add	r30, r24
    740c:	f1 1d       	adc	r31, r1
    740e:	f0 82       	st	Z, r15
    7410:	d4 01       	movw	r26, r8
    7412:	8c 91       	ld	r24, X
    7414:	91 e0       	ldi	r25, 0x01	; 1
    7416:	98 0f       	add	r25, r24
    7418:	9c 93       	st	X, r25
    741a:	f2 01       	movw	r30, r4
    741c:	e8 0f       	add	r30, r24
    741e:	f1 1d       	adc	r31, r1
    7420:	e0 82       	st	Z, r14
    7422:	f3 01       	movw	r30, r6
    7424:	e4 50       	subi	r30, 0x04	; 4
    7426:	fa 4f       	sbci	r31, 0xFA	; 250
    7428:	80 81       	ld	r24, Z
    742a:	88 23       	and	r24, r24
    742c:	71 f1       	breq	.+92     	; 0x748a <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x36c>
    742e:	31 96       	adiw	r30, 0x01	; 1
    7430:	20 81       	ld	r18, Z
    7432:	31 81       	ldd	r19, Z+1	; 0x01
    7434:	42 81       	ldd	r20, Z+2	; 0x02
    7436:	53 81       	ldd	r21, Z+3	; 0x03
    7438:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    743c:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7440:	04 96       	adiw	r24, 0x04	; 4
    7442:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    7446:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    744a:	8c 91       	ld	r24, X
    744c:	91 e0       	ldi	r25, 0x01	; 1
    744e:	98 0f       	add	r25, r24
    7450:	9c 93       	st	X, r25
    7452:	f2 01       	movw	r30, r4
    7454:	e8 0f       	add	r30, r24
    7456:	f1 1d       	adc	r31, r1
    7458:	50 83       	st	Z, r21
    745a:	8c 91       	ld	r24, X
    745c:	91 e0       	ldi	r25, 0x01	; 1
    745e:	98 0f       	add	r25, r24
    7460:	9c 93       	st	X, r25
    7462:	f2 01       	movw	r30, r4
    7464:	e8 0f       	add	r30, r24
    7466:	f1 1d       	adc	r31, r1
    7468:	40 83       	st	Z, r20
    746a:	8c 91       	ld	r24, X
    746c:	91 e0       	ldi	r25, 0x01	; 1
    746e:	98 0f       	add	r25, r24
    7470:	9c 93       	st	X, r25
    7472:	f2 01       	movw	r30, r4
    7474:	e8 0f       	add	r30, r24
    7476:	f1 1d       	adc	r31, r1
    7478:	30 83       	st	Z, r19
    747a:	8c 91       	ld	r24, X
    747c:	91 e0       	ldi	r25, 0x01	; 1
    747e:	98 0f       	add	r25, r24
    7480:	9c 93       	st	X, r25
    7482:	f2 01       	movw	r30, r4
    7484:	e8 0f       	add	r30, r24
    7486:	f1 1d       	adc	r31, r1
    7488:	20 83       	st	Z, r18
    748a:	f3 01       	movw	r30, r6
    748c:	ea 58       	subi	r30, 0x8A	; 138
    748e:	ff 4f       	sbci	r31, 0xFF	; 255
    7490:	80 81       	ld	r24, Z
    7492:	88 23       	and	r24, r24
    7494:	09 f4       	brne	.+2      	; 0x7498 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x37a>
    7496:	45 c0       	rjmp	.+138    	; 0x7522 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x404>
    7498:	e1 56       	subi	r30, 0x61	; 97
    749a:	fa 4f       	sbci	r31, 0xFA	; 250
    749c:	80 81       	ld	r24, Z
    749e:	91 81       	ldd	r25, Z+1	; 0x01
    74a0:	00 97       	sbiw	r24, 0x00	; 0
    74a2:	e9 f0       	breq	.+58     	; 0x74de <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x3c0>
    74a4:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    74a8:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    74ac:	2e 5f       	subi	r18, 0xFE	; 254
    74ae:	3f 4f       	sbci	r19, 0xFF	; 255
    74b0:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    74b4:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    74b8:	f4 01       	movw	r30, r8
    74ba:	20 81       	ld	r18, Z
    74bc:	31 e0       	ldi	r19, 0x01	; 1
    74be:	32 0f       	add	r19, r18
    74c0:	30 83       	st	Z, r19
    74c2:	f2 01       	movw	r30, r4
    74c4:	e2 0f       	add	r30, r18
    74c6:	f1 1d       	adc	r31, r1
    74c8:	90 83       	st	Z, r25
    74ca:	d4 01       	movw	r26, r8
    74cc:	9c 91       	ld	r25, X
    74ce:	21 e0       	ldi	r18, 0x01	; 1
    74d0:	29 0f       	add	r18, r25
    74d2:	2c 93       	st	X, r18
    74d4:	f2 01       	movw	r30, r4
    74d6:	e9 0f       	add	r30, r25
    74d8:	f1 1d       	adc	r31, r1
    74da:	80 83       	st	Z, r24
    74dc:	22 c0       	rjmp	.+68     	; 0x7522 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x404>
    74de:	f3 01       	movw	r30, r6
    74e0:	e8 5e       	subi	r30, 0xE8	; 232
    74e2:	f9 4f       	sbci	r31, 0xF9	; 249
    74e4:	80 81       	ld	r24, Z
    74e6:	88 23       	and	r24, r24
    74e8:	e1 f0       	breq	.+56     	; 0x7522 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x404>
    74ea:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    74ee:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    74f2:	2e 5f       	subi	r18, 0xFE	; 254
    74f4:	3f 4f       	sbci	r19, 0xFF	; 255
    74f6:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    74fa:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    74fe:	f4 01       	movw	r30, r8
    7500:	90 81       	ld	r25, Z
    7502:	21 e0       	ldi	r18, 0x01	; 1
    7504:	29 0f       	add	r18, r25
    7506:	20 83       	st	Z, r18
    7508:	f2 01       	movw	r30, r4
    750a:	e9 0f       	add	r30, r25
    750c:	f1 1d       	adc	r31, r1
    750e:	10 82       	st	Z, r1
    7510:	d4 01       	movw	r26, r8
    7512:	9c 91       	ld	r25, X
    7514:	21 e0       	ldi	r18, 0x01	; 1
    7516:	29 0f       	add	r18, r25
    7518:	2c 93       	st	X, r18
    751a:	f2 01       	movw	r30, r4
    751c:	e9 0f       	add	r30, r25
    751e:	f1 1d       	adc	r31, r1
    7520:	80 83       	st	Z, r24
    7522:	32 01       	movw	r6, r4
    7524:	6d 0c       	add	r6, r13
    7526:	71 1c       	adc	r7, r1
    7528:	aa 24       	eor	r10, r10
    752a:	a3 94       	inc	r10
    752c:	c9 8c       	ldd	r12, Y+25	; 0x19
    752e:	da 8c       	ldd	r13, Y+26	; 0x1a
    7530:	eb 8c       	ldd	r14, Y+27	; 0x1b
    7532:	fc 8c       	ldd	r15, Y+28	; 0x1c
    7534:	82 01       	movw	r16, r4
    7536:	94 01       	movw	r18, r8
    7538:	a3 01       	movw	r20, r6
    753a:	b1 01       	movw	r22, r2
    753c:	8b 2d       	mov	r24, r11
    753e:	0e 94 87 2e 	call	0x5d0e	; 0x5d0e <filterbytes>
    7542:	f3 01       	movw	r30, r6
    7544:	20 81       	ld	r18, Z
    7546:	20 61       	ori	r18, 0x10	; 16
    7548:	20 83       	st	Z, r18
    754a:	30 91 5d 02 	lds	r19, 0x025D	; 0x80025d <isSecureAccessEnabled>
    754e:	33 23       	and	r19, r19
    7550:	11 f0       	breq	.+4      	; 0x7556 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x438>
    7552:	20 64       	ori	r18, 0x40	; 64
    7554:	20 83       	st	Z, r18
    7556:	0f 90       	pop	r0
    7558:	0f 90       	pop	r0
    755a:	0f 90       	pop	r0
    755c:	0f 90       	pop	r0
    755e:	df 91       	pop	r29
    7560:	cf 91       	pop	r28
    7562:	1f 91       	pop	r17
    7564:	0f 91       	pop	r16
    7566:	ff 90       	pop	r15
    7568:	ef 90       	pop	r14
    756a:	df 90       	pop	r13
    756c:	cf 90       	pop	r12
    756e:	bf 90       	pop	r11
    7570:	af 90       	pop	r10
    7572:	9f 90       	pop	r9
    7574:	8f 90       	pop	r8
    7576:	7f 90       	pop	r7
    7578:	6f 90       	pop	r6
    757a:	5f 90       	pop	r5
    757c:	4f 90       	pop	r4
    757e:	3f 90       	pop	r3
    7580:	2f 90       	pop	r2
    7582:	08 95       	ret

00007584 <TMR_SR_msgSetupReadTagMultiple>:
    7584:	8f 92       	push	r8
    7586:	9f 92       	push	r9
    7588:	af 92       	push	r10
    758a:	bf 92       	push	r11
    758c:	cf 92       	push	r12
    758e:	df 92       	push	r13
    7590:	ef 92       	push	r14
    7592:	ff 92       	push	r15
    7594:	0f 93       	push	r16
    7596:	1f 93       	push	r17
    7598:	cf 93       	push	r28
    759a:	df 93       	push	r29
    759c:	cd b7       	in	r28, 0x3d	; 61
    759e:	de b7       	in	r29, 0x3e	; 62
    75a0:	fc 01       	movw	r30, r24
    75a2:	e7 5e       	subi	r30, 0xE7	; 231
    75a4:	f9 4f       	sbci	r31, 0xF9	; 249
    75a6:	01 90       	ld	r0, Z+
    75a8:	f0 81       	ld	r31, Z
    75aa:	e0 2d       	mov	r30, r0
    75ac:	bf 92       	push	r11
    75ae:	af 92       	push	r10
    75b0:	9f 92       	push	r9
    75b2:	8f 92       	push	r8
    75b4:	ac 2c       	mov	r10, r12
    75b6:	67 01       	movw	r12, r14
    75b8:	7f 01       	movw	r14, r30
    75ba:	b1 dd       	rcall	.-1182   	; 0x711e <TMR_SR_msgSetupReadTagMultipleWithMetadata>
    75bc:	0f 90       	pop	r0
    75be:	0f 90       	pop	r0
    75c0:	0f 90       	pop	r0
    75c2:	0f 90       	pop	r0
    75c4:	df 91       	pop	r29
    75c6:	cf 91       	pop	r28
    75c8:	1f 91       	pop	r17
    75ca:	0f 91       	pop	r16
    75cc:	ff 90       	pop	r15
    75ce:	ef 90       	pop	r14
    75d0:	df 90       	pop	r13
    75d2:	cf 90       	pop	r12
    75d4:	bf 90       	pop	r11
    75d6:	af 90       	pop	r10
    75d8:	9f 90       	pop	r9
    75da:	8f 90       	pop	r8
    75dc:	08 95       	ret

000075de <TMR_SR_cmdReadTagMultiple>:
    75de:	2f 92       	push	r2
    75e0:	3f 92       	push	r3
    75e2:	4f 92       	push	r4
    75e4:	5f 92       	push	r5
    75e6:	6f 92       	push	r6
    75e8:	7f 92       	push	r7
    75ea:	8f 92       	push	r8
    75ec:	9f 92       	push	r9
    75ee:	af 92       	push	r10
    75f0:	bf 92       	push	r11
    75f2:	cf 92       	push	r12
    75f4:	ef 92       	push	r14
    75f6:	ff 92       	push	r15
    75f8:	0f 93       	push	r16
    75fa:	1f 93       	push	r17
    75fc:	cf 93       	push	r28
    75fe:	df 93       	push	r29
    7600:	cd b7       	in	r28, 0x3d	; 61
    7602:	de b7       	in	r29, 0x3e	; 62
    7604:	c2 50       	subi	r28, 0x02	; 2
    7606:	d1 40       	sbci	r29, 0x01	; 1
    7608:	0f b6       	in	r0, 0x3f	; 63
    760a:	f8 94       	cli
    760c:	de bf       	out	0x3e, r29	; 62
    760e:	0f be       	out	0x3f, r0	; 63
    7610:	cd bf       	out	0x3d, r28	; 61
    7612:	3c 01       	movw	r6, r24
    7614:	2b 01       	movw	r4, r22
    7616:	17 01       	movw	r2, r14
    7618:	82 e0       	ldi	r24, 0x02	; 2
    761a:	cf 5f       	subi	r28, 0xFF	; 255
    761c:	de 4f       	sbci	r29, 0xFE	; 254
    761e:	88 83       	st	Y, r24
    7620:	c1 50       	subi	r28, 0x01	; 1
    7622:	d1 40       	sbci	r29, 0x01	; 1
    7624:	81 2c       	mov	r8, r1
    7626:	91 2c       	mov	r9, r1
    7628:	54 01       	movw	r10, r8
    762a:	c0 2e       	mov	r12, r16
    762c:	79 01       	movw	r14, r18
    762e:	8a 01       	movw	r16, r20
    7630:	9b 01       	movw	r18, r22
    7632:	ae 01       	movw	r20, r28
    7634:	4f 5f       	subi	r20, 0xFF	; 255
    7636:	5e 4f       	sbci	r21, 0xFE	; 254
    7638:	be 01       	movw	r22, r28
    763a:	6f 5f       	subi	r22, 0xFF	; 255
    763c:	7f 4f       	sbci	r23, 0xFF	; 255
    763e:	c3 01       	movw	r24, r6
    7640:	a1 df       	rcall	.-190    	; 0x7584 <TMR_SR_msgSetupReadTagMultiple>
    7642:	61 15       	cp	r22, r1
    7644:	71 05       	cpc	r23, r1
    7646:	81 05       	cpc	r24, r1
    7648:	91 05       	cpc	r25, r1
    764a:	09 f0       	breq	.+2      	; 0x764e <TMR_SR_cmdReadTagMultiple+0x70>
    764c:	b5 c0       	rjmp	.+362    	; 0x77b8 <TMR_SR_cmdReadTagMultiple+0x1da>
    764e:	cf 5f       	subi	r28, 0xFF	; 255
    7650:	de 4f       	sbci	r29, 0xFE	; 254
    7652:	88 81       	ld	r24, Y
    7654:	c1 50       	subi	r28, 0x01	; 1
    7656:	d1 40       	sbci	r29, 0x01	; 1
    7658:	83 50       	subi	r24, 0x03	; 3
    765a:	8a 83       	std	Y+2, r24	; 0x02
    765c:	82 e2       	ldi	r24, 0x22	; 34
    765e:	f3 01       	movw	r30, r6
    7660:	e0 54       	subi	r30, 0x40	; 64
    7662:	fb 4f       	sbci	r31, 0xFB	; 251
    7664:	80 83       	st	Z, r24
    7666:	ea 54       	subi	r30, 0x4A	; 74
    7668:	f4 40       	sbci	r31, 0x04	; 4
    766a:	80 81       	ld	r24, Z
    766c:	88 23       	and	r24, r24
    766e:	a9 f0       	breq	.+42     	; 0x769a <TMR_SR_cmdReadTagMultiple+0xbc>
    7670:	82 01       	movw	r16, r4
    7672:	20 e0       	ldi	r18, 0x00	; 0
    7674:	30 e0       	ldi	r19, 0x00	; 0
    7676:	ae 01       	movw	r20, r28
    7678:	4e 5f       	subi	r20, 0xFE	; 254
    767a:	5e 4f       	sbci	r21, 0xFE	; 254
    767c:	be 01       	movw	r22, r28
    767e:	6f 5f       	subi	r22, 0xFF	; 255
    7680:	7f 4f       	sbci	r23, 0xFF	; 255
    7682:	c3 01       	movw	r24, r6
    7684:	0e 94 cf 32 	call	0x659e	; 0x659e <TMR_SR_sendMessage>
    7688:	f1 01       	movw	r30, r2
    768a:	10 82       	st	Z, r1
    768c:	11 82       	std	Z+1, r1	; 0x01
    768e:	12 82       	std	Z+2, r1	; 0x02
    7690:	13 82       	std	Z+3, r1	; 0x03
    7692:	46 2f       	mov	r20, r22
    7694:	37 2f       	mov	r19, r23
    7696:	28 2f       	mov	r18, r24
    7698:	a0 c0       	rjmp	.+320    	; 0x77da <TMR_SR_cmdReadTagMultiple+0x1fc>
    769a:	92 01       	movw	r18, r4
    769c:	40 e0       	ldi	r20, 0x00	; 0
    769e:	50 e0       	ldi	r21, 0x00	; 0
    76a0:	be 01       	movw	r22, r28
    76a2:	6f 5f       	subi	r22, 0xFF	; 255
    76a4:	7f 4f       	sbci	r23, 0xFF	; 255
    76a6:	c3 01       	movw	r24, r6
    76a8:	9c da       	rcall	.-2760   	; 0x6be2 <TMR_SR_sendTimeout>
    76aa:	61 15       	cp	r22, r1
    76ac:	71 05       	cpc	r23, r1
    76ae:	81 05       	cpc	r24, r1
    76b0:	91 05       	cpc	r25, r1
    76b2:	09 f0       	breq	.+2      	; 0x76b6 <TMR_SR_cmdReadTagMultiple+0xd8>
    76b4:	85 c0       	rjmp	.+266    	; 0x77c0 <TMR_SR_cmdReadTagMultiple+0x1e2>
    76b6:	21 14       	cp	r2, r1
    76b8:	31 04       	cpc	r3, r1
    76ba:	09 f4       	brne	.+2      	; 0x76be <TMR_SR_cmdReadTagMultiple+0xe0>
    76bc:	85 c0       	rjmp	.+266    	; 0x77c8 <TMR_SR_cmdReadTagMultiple+0x1ea>
    76be:	8a 81       	ldd	r24, Y+2	; 0x02
    76c0:	84 30       	cpi	r24, 0x04	; 4
    76c2:	71 f4       	brne	.+28     	; 0x76e0 <TMR_SR_cmdReadTagMultiple+0x102>
    76c4:	89 85       	ldd	r24, Y+9	; 0x09
    76c6:	90 e0       	ldi	r25, 0x00	; 0
    76c8:	a0 e0       	ldi	r26, 0x00	; 0
    76ca:	b0 e0       	ldi	r27, 0x00	; 0
    76cc:	f1 01       	movw	r30, r2
    76ce:	80 83       	st	Z, r24
    76d0:	91 83       	std	Z+1, r25	; 0x01
    76d2:	a2 83       	std	Z+2, r26	; 0x02
    76d4:	b3 83       	std	Z+3, r27	; 0x03
    76d6:	40 e0       	ldi	r20, 0x00	; 0
    76d8:	30 e0       	ldi	r19, 0x00	; 0
    76da:	20 e0       	ldi	r18, 0x00	; 0
    76dc:	90 e0       	ldi	r25, 0x00	; 0
    76de:	7d c0       	rjmp	.+250    	; 0x77da <TMR_SR_cmdReadTagMultiple+0x1fc>
    76e0:	85 30       	cpi	r24, 0x05	; 5
    76e2:	71 f4       	brne	.+28     	; 0x7700 <TMR_SR_cmdReadTagMultiple+0x122>
    76e4:	8a 85       	ldd	r24, Y+10	; 0x0a
    76e6:	90 e0       	ldi	r25, 0x00	; 0
    76e8:	a0 e0       	ldi	r26, 0x00	; 0
    76ea:	b0 e0       	ldi	r27, 0x00	; 0
    76ec:	f1 01       	movw	r30, r2
    76ee:	80 83       	st	Z, r24
    76f0:	91 83       	std	Z+1, r25	; 0x01
    76f2:	a2 83       	std	Z+2, r26	; 0x02
    76f4:	b3 83       	std	Z+3, r27	; 0x03
    76f6:	40 e0       	ldi	r20, 0x00	; 0
    76f8:	30 e0       	ldi	r19, 0x00	; 0
    76fa:	20 e0       	ldi	r18, 0x00	; 0
    76fc:	90 e0       	ldi	r25, 0x00	; 0
    76fe:	6d c0       	rjmp	.+218    	; 0x77da <TMR_SR_cmdReadTagMultiple+0x1fc>
    7700:	87 30       	cpi	r24, 0x07	; 7
    7702:	61 f5       	brne	.+88     	; 0x775c <TMR_SR_cmdReadTagMultiple+0x17e>
    7704:	89 85       	ldd	r24, Y+9	; 0x09
    7706:	90 e0       	ldi	r25, 0x00	; 0
    7708:	a0 e0       	ldi	r26, 0x00	; 0
    770a:	b0 e0       	ldi	r27, 0x00	; 0
    770c:	78 2f       	mov	r23, r24
    770e:	66 27       	eor	r22, r22
    7710:	55 27       	eor	r21, r21
    7712:	44 27       	eor	r20, r20
    7714:	9a 85       	ldd	r25, Y+10	; 0x0a
    7716:	89 2f       	mov	r24, r25
    7718:	90 e0       	ldi	r25, 0x00	; 0
    771a:	a0 e0       	ldi	r26, 0x00	; 0
    771c:	b0 e0       	ldi	r27, 0x00	; 0
    771e:	dc 01       	movw	r26, r24
    7720:	99 27       	eor	r25, r25
    7722:	88 27       	eor	r24, r24
    7724:	84 2b       	or	r24, r20
    7726:	95 2b       	or	r25, r21
    7728:	a6 2b       	or	r26, r22
    772a:	b7 2b       	or	r27, r23
    772c:	4b 85       	ldd	r20, Y+11	; 0x0b
    772e:	50 e0       	ldi	r21, 0x00	; 0
    7730:	60 e0       	ldi	r22, 0x00	; 0
    7732:	70 e0       	ldi	r23, 0x00	; 0
    7734:	76 2f       	mov	r23, r22
    7736:	65 2f       	mov	r22, r21
    7738:	54 2f       	mov	r21, r20
    773a:	44 27       	eor	r20, r20
    773c:	84 2b       	or	r24, r20
    773e:	95 2b       	or	r25, r21
    7740:	a6 2b       	or	r26, r22
    7742:	b7 2b       	or	r27, r23
    7744:	2c 85       	ldd	r18, Y+12	; 0x0c
    7746:	82 2b       	or	r24, r18
    7748:	f1 01       	movw	r30, r2
    774a:	80 83       	st	Z, r24
    774c:	91 83       	std	Z+1, r25	; 0x01
    774e:	a2 83       	std	Z+2, r26	; 0x02
    7750:	b3 83       	std	Z+3, r27	; 0x03
    7752:	40 e0       	ldi	r20, 0x00	; 0
    7754:	30 e0       	ldi	r19, 0x00	; 0
    7756:	20 e0       	ldi	r18, 0x00	; 0
    7758:	90 e0       	ldi	r25, 0x00	; 0
    775a:	3f c0       	rjmp	.+126    	; 0x77da <TMR_SR_cmdReadTagMultiple+0x1fc>
    775c:	88 30       	cpi	r24, 0x08	; 8
    775e:	c9 f5       	brne	.+114    	; 0x77d2 <TMR_SR_cmdReadTagMultiple+0x1f4>
    7760:	8a 85       	ldd	r24, Y+10	; 0x0a
    7762:	90 e0       	ldi	r25, 0x00	; 0
    7764:	a0 e0       	ldi	r26, 0x00	; 0
    7766:	b0 e0       	ldi	r27, 0x00	; 0
    7768:	78 2f       	mov	r23, r24
    776a:	66 27       	eor	r22, r22
    776c:	55 27       	eor	r21, r21
    776e:	44 27       	eor	r20, r20
    7770:	9b 85       	ldd	r25, Y+11	; 0x0b
    7772:	89 2f       	mov	r24, r25
    7774:	90 e0       	ldi	r25, 0x00	; 0
    7776:	a0 e0       	ldi	r26, 0x00	; 0
    7778:	b0 e0       	ldi	r27, 0x00	; 0
    777a:	dc 01       	movw	r26, r24
    777c:	99 27       	eor	r25, r25
    777e:	88 27       	eor	r24, r24
    7780:	84 2b       	or	r24, r20
    7782:	95 2b       	or	r25, r21
    7784:	a6 2b       	or	r26, r22
    7786:	b7 2b       	or	r27, r23
    7788:	4c 85       	ldd	r20, Y+12	; 0x0c
    778a:	50 e0       	ldi	r21, 0x00	; 0
    778c:	60 e0       	ldi	r22, 0x00	; 0
    778e:	70 e0       	ldi	r23, 0x00	; 0
    7790:	76 2f       	mov	r23, r22
    7792:	65 2f       	mov	r22, r21
    7794:	54 2f       	mov	r21, r20
    7796:	44 27       	eor	r20, r20
    7798:	84 2b       	or	r24, r20
    779a:	95 2b       	or	r25, r21
    779c:	a6 2b       	or	r26, r22
    779e:	b7 2b       	or	r27, r23
    77a0:	2d 85       	ldd	r18, Y+13	; 0x0d
    77a2:	82 2b       	or	r24, r18
    77a4:	f1 01       	movw	r30, r2
    77a6:	80 83       	st	Z, r24
    77a8:	91 83       	std	Z+1, r25	; 0x01
    77aa:	a2 83       	std	Z+2, r26	; 0x02
    77ac:	b3 83       	std	Z+3, r27	; 0x03
    77ae:	40 e0       	ldi	r20, 0x00	; 0
    77b0:	30 e0       	ldi	r19, 0x00	; 0
    77b2:	20 e0       	ldi	r18, 0x00	; 0
    77b4:	90 e0       	ldi	r25, 0x00	; 0
    77b6:	11 c0       	rjmp	.+34     	; 0x77da <TMR_SR_cmdReadTagMultiple+0x1fc>
    77b8:	46 2f       	mov	r20, r22
    77ba:	37 2f       	mov	r19, r23
    77bc:	28 2f       	mov	r18, r24
    77be:	0d c0       	rjmp	.+26     	; 0x77da <TMR_SR_cmdReadTagMultiple+0x1fc>
    77c0:	46 2f       	mov	r20, r22
    77c2:	37 2f       	mov	r19, r23
    77c4:	28 2f       	mov	r18, r24
    77c6:	09 c0       	rjmp	.+18     	; 0x77da <TMR_SR_cmdReadTagMultiple+0x1fc>
    77c8:	40 e0       	ldi	r20, 0x00	; 0
    77ca:	30 e0       	ldi	r19, 0x00	; 0
    77cc:	20 e0       	ldi	r18, 0x00	; 0
    77ce:	90 e0       	ldi	r25, 0x00	; 0
    77d0:	04 c0       	rjmp	.+8      	; 0x77da <TMR_SR_cmdReadTagMultiple+0x1fc>
    77d2:	44 e0       	ldi	r20, 0x04	; 4
    77d4:	30 e0       	ldi	r19, 0x00	; 0
    77d6:	20 e0       	ldi	r18, 0x00	; 0
    77d8:	91 e0       	ldi	r25, 0x01	; 1
    77da:	64 2f       	mov	r22, r20
    77dc:	73 2f       	mov	r23, r19
    77de:	82 2f       	mov	r24, r18
    77e0:	ce 5f       	subi	r28, 0xFE	; 254
    77e2:	de 4f       	sbci	r29, 0xFE	; 254
    77e4:	0f b6       	in	r0, 0x3f	; 63
    77e6:	f8 94       	cli
    77e8:	de bf       	out	0x3e, r29	; 62
    77ea:	0f be       	out	0x3f, r0	; 63
    77ec:	cd bf       	out	0x3d, r28	; 61
    77ee:	df 91       	pop	r29
    77f0:	cf 91       	pop	r28
    77f2:	1f 91       	pop	r17
    77f4:	0f 91       	pop	r16
    77f6:	ff 90       	pop	r15
    77f8:	ef 90       	pop	r14
    77fa:	cf 90       	pop	r12
    77fc:	bf 90       	pop	r11
    77fe:	af 90       	pop	r10
    7800:	9f 90       	pop	r9
    7802:	8f 90       	pop	r8
    7804:	7f 90       	pop	r7
    7806:	6f 90       	pop	r6
    7808:	5f 90       	pop	r5
    780a:	4f 90       	pop	r4
    780c:	3f 90       	pop	r3
    780e:	2f 90       	pop	r2
    7810:	08 95       	ret

00007812 <TMR_SR_executeEmbeddedRead>:
    7812:	5f 92       	push	r5
    7814:	6f 92       	push	r6
    7816:	7f 92       	push	r7
    7818:	8f 92       	push	r8
    781a:	9f 92       	push	r9
    781c:	af 92       	push	r10
    781e:	bf 92       	push	r11
    7820:	cf 92       	push	r12
    7822:	df 92       	push	r13
    7824:	ef 92       	push	r14
    7826:	ff 92       	push	r15
    7828:	0f 93       	push	r16
    782a:	1f 93       	push	r17
    782c:	cf 93       	push	r28
    782e:	df 93       	push	r29
    7830:	cd b7       	in	r28, 0x3d	; 61
    7832:	de b7       	in	r29, 0x3e	; 62
    7834:	c1 50       	subi	r28, 0x01	; 1
    7836:	d1 40       	sbci	r29, 0x01	; 1
    7838:	0f b6       	in	r0, 0x3f	; 63
    783a:	f8 94       	cli
    783c:	de bf       	out	0x3e, r29	; 62
    783e:	0f be       	out	0x3f, r0	; 63
    7840:	cd bf       	out	0x3d, r28	; 61
    7842:	7c 01       	movw	r14, r24
    7844:	6b 01       	movw	r12, r22
    7846:	8a 01       	movw	r16, r20
    7848:	49 01       	movw	r8, r18
    784a:	fc 01       	movw	r30, r24
    784c:	ea 58       	subi	r30, 0x8A	; 138
    784e:	ff 4f       	sbci	r31, 0xFF	; 255
    7850:	80 81       	ld	r24, Z
    7852:	88 23       	and	r24, r24
    7854:	09 f4       	brne	.+2      	; 0x7858 <TMR_SR_executeEmbeddedRead+0x46>
    7856:	9e c0       	rjmp	.+316    	; 0x7994 <TMR_SR_executeEmbeddedRead+0x182>
    7858:	9f e2       	ldi	r25, 0x2F	; 47
    785a:	cf 5f       	subi	r28, 0xFF	; 255
    785c:	de 4f       	sbci	r29, 0xFE	; 254
    785e:	98 83       	st	Y, r25
    7860:	c1 50       	subi	r28, 0x01	; 1
    7862:	d1 40       	sbci	r29, 0x01	; 1
    7864:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    7868:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    786c:	9b 83       	std	Y+3, r25	; 0x03
    786e:	1c 82       	std	Y+4, r1	; 0x04
    7870:	1d 82       	std	Y+5, r1	; 0x05
    7872:	81 e0       	ldi	r24, 0x01	; 1
    7874:	8e 83       	std	Y+6, r24	; 0x06
    7876:	c9 01       	movw	r24, r18
    7878:	05 96       	adiw	r24, 0x05	; 5
    787a:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    787e:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    7882:	22 e2       	ldi	r18, 0x22	; 34
    7884:	2f 83       	std	Y+7, r18	; 0x07
    7886:	e4 55       	subi	r30, 0x54	; 84
    7888:	fa 4f       	sbci	r31, 0xFA	; 250
    788a:	20 81       	ld	r18, Z
    788c:	21 11       	cpse	r18, r1
    788e:	03 c0       	rjmp	.+6      	; 0x7896 <TMR_SR_executeEmbeddedRead+0x84>
    7890:	20 e0       	ldi	r18, 0x00	; 0
    7892:	30 e0       	ldi	r19, 0x00	; 0
    7894:	02 c0       	rjmp	.+4      	; 0x789a <TMR_SR_executeEmbeddedRead+0x88>
    7896:	20 e0       	ldi	r18, 0x00	; 0
    7898:	38 e0       	ldi	r19, 0x08	; 8
    789a:	f7 01       	movw	r30, r14
    789c:	e4 50       	subi	r30, 0x04	; 4
    789e:	fa 4f       	sbci	r31, 0xFA	; 250
    78a0:	40 81       	ld	r20, Z
    78a2:	41 11       	cpse	r20, r1
    78a4:	20 64       	ori	r18, 0x40	; 64
    78a6:	02 96       	adiw	r24, 0x02	; 2
    78a8:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    78ac:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    78b0:	38 87       	std	Y+8, r19	; 0x08
    78b2:	29 87       	std	Y+9, r18	; 0x09
    78b4:	44 23       	and	r20, r20
    78b6:	91 f0       	breq	.+36     	; 0x78dc <TMR_SR_executeEmbeddedRead+0xca>
    78b8:	f7 01       	movw	r30, r14
    78ba:	e3 50       	subi	r30, 0x03	; 3
    78bc:	fa 4f       	sbci	r31, 0xFA	; 250
    78be:	20 81       	ld	r18, Z
    78c0:	31 81       	ldd	r19, Z+1	; 0x01
    78c2:	42 81       	ldd	r20, Z+2	; 0x02
    78c4:	53 81       	ldd	r21, Z+3	; 0x03
    78c6:	04 96       	adiw	r24, 0x04	; 4
    78c8:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    78cc:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    78d0:	5a 87       	std	Y+10, r21	; 0x0a
    78d2:	4b 87       	std	Y+11, r20	; 0x0b
    78d4:	3c 87       	std	Y+12, r19	; 0x0c
    78d6:	2d 87       	std	Y+13, r18	; 0x0d
    78d8:	2d e0       	ldi	r18, 0x0D	; 13
    78da:	01 c0       	rjmp	.+2      	; 0x78de <TMR_SR_executeEmbeddedRead+0xcc>
    78dc:	29 e0       	ldi	r18, 0x09	; 9
    78de:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    78e2:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    78e6:	01 96       	adiw	r24, 0x01	; 1
    78e8:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    78ec:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    78f0:	66 24       	eor	r6, r6
    78f2:	63 94       	inc	r6
    78f4:	62 0e       	add	r6, r18
    78f6:	f7 01       	movw	r30, r14
    78f8:	ee 57       	subi	r30, 0x7E	; 126
    78fa:	fc 4f       	sbci	r31, 0xFC	; 252
    78fc:	30 81       	ld	r19, Z
    78fe:	e1 e0       	ldi	r30, 0x01	; 1
    7900:	f0 e0       	ldi	r31, 0x00	; 0
    7902:	ec 0f       	add	r30, r28
    7904:	fd 1f       	adc	r31, r29
    7906:	e2 0f       	add	r30, r18
    7908:	f1 1d       	adc	r31, r1
    790a:	30 83       	st	Z, r19
    790c:	d6 01       	movw	r26, r12
    790e:	11 96       	adiw	r26, 0x01	; 1
    7910:	5c 90       	ld	r5, X
    7912:	01 96       	adiw	r24, 0x01	; 1
    7914:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    7918:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    791c:	68 94       	set
    791e:	77 24       	eor	r7, r7
    7920:	71 f8       	bld	r7, 1
    7922:	72 0e       	add	r7, r18
    7924:	aa 24       	eor	r10, r10
    7926:	a3 94       	inc	r10
    7928:	b1 2c       	mov	r11, r1
    792a:	ac 0e       	add	r10, r28
    792c:	bd 1e       	adc	r11, r29
    792e:	a6 0c       	add	r10, r6
    7930:	b1 1c       	adc	r11, r1
    7932:	f5 01       	movw	r30, r10
    7934:	10 82       	st	Z, r1
    7936:	45 2d       	mov	r20, r5
    7938:	50 e0       	ldi	r21, 0x00	; 0
    793a:	4f 5f       	subi	r20, 0xFF	; 255
    793c:	5f 4f       	sbci	r21, 0xFF	; 255
    793e:	b6 01       	movw	r22, r12
    7940:	6e 5f       	subi	r22, 0xFE	; 254
    7942:	7f 4f       	sbci	r23, 0xFF	; 255
    7944:	81 e0       	ldi	r24, 0x01	; 1
    7946:	90 e0       	ldi	r25, 0x00	; 0
    7948:	8c 0f       	add	r24, r28
    794a:	9d 1f       	adc	r25, r29
    794c:	87 0d       	add	r24, r7
    794e:	91 1d       	adc	r25, r1
    7950:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    7954:	75 0c       	add	r7, r5
    7956:	81 e0       	ldi	r24, 0x01	; 1
    7958:	87 0d       	add	r24, r7
    795a:	86 19       	sub	r24, r6
    795c:	82 50       	subi	r24, 0x02	; 2
    795e:	d5 01       	movw	r26, r10
    7960:	8c 93       	st	X, r24
    7962:	7a 94       	dec	r7
    7964:	7a 94       	dec	r7
    7966:	7a 82       	std	Y+2, r7	; 0x02
    7968:	20 e0       	ldi	r18, 0x00	; 0
    796a:	30 e0       	ldi	r19, 0x00	; 0
    796c:	ae 01       	movw	r20, r28
    796e:	4f 5f       	subi	r20, 0xFF	; 255
    7970:	5e 4f       	sbci	r21, 0xFE	; 254
    7972:	be 01       	movw	r22, r28
    7974:	6f 5f       	subi	r22, 0xFF	; 255
    7976:	7f 4f       	sbci	r23, 0xFF	; 255
    7978:	c7 01       	movw	r24, r14
    797a:	0e 94 cf 32 	call	0x659e	; 0x659e <TMR_SR_sendMessage>
    797e:	f4 01       	movw	r30, r8
    7980:	15 82       	std	Z+5, r1	; 0x05
    7982:	14 82       	std	Z+4, r1	; 0x04
    7984:	13 82       	std	Z+3, r1	; 0x03
    7986:	12 82       	std	Z+2, r1	; 0x02
    7988:	11 82       	std	Z+1, r1	; 0x01
    798a:	10 82       	st	Z, r1
    798c:	46 2f       	mov	r20, r22
    798e:	37 2f       	mov	r19, r23
    7990:	28 2f       	mov	r18, r24
    7992:	84 c0       	rjmp	.+264    	; 0x7a9c <TMR_SR_executeEmbeddedRead+0x28a>
    7994:	f7 01       	movw	r30, r14
    7996:	e3 5f       	subi	r30, 0xF3	; 243
    7998:	f9 4f       	sbci	r31, 0xF9	; 249
    799a:	80 81       	ld	r24, Z
    799c:	81 11       	cpse	r24, r1
    799e:	04 c0       	rjmp	.+8      	; 0x79a8 <TMR_SR_executeEmbeddedRead+0x196>
    79a0:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <isMultiSelectEnabled>
    79a4:	88 23       	and	r24, r24
    79a6:	59 f0       	breq	.+22     	; 0x79be <TMR_SR_executeEmbeddedRead+0x1ac>
    79a8:	d6 01       	movw	r26, r12
    79aa:	15 96       	adiw	r26, 0x05	; 5
    79ac:	ac 90       	ld	r10, X
    79ae:	15 97       	sbiw	r26, 0x05	; 5
    79b0:	b1 2c       	mov	r11, r1
    79b2:	ba 2c       	mov	r11, r10
    79b4:	aa 24       	eor	r10, r10
    79b6:	16 96       	adiw	r26, 0x06	; 6
    79b8:	8c 91       	ld	r24, X
    79ba:	a8 2a       	or	r10, r24
    79bc:	07 c0       	rjmp	.+14     	; 0x79cc <TMR_SR_executeEmbeddedRead+0x1ba>
    79be:	fb 01       	movw	r30, r22
    79c0:	a4 80       	ldd	r10, Z+4	; 0x04
    79c2:	b1 2c       	mov	r11, r1
    79c4:	ba 2c       	mov	r11, r10
    79c6:	aa 24       	eor	r10, r10
    79c8:	85 81       	ldd	r24, Z+5	; 0x05
    79ca:	a8 2a       	or	r10, r24
    79cc:	98 01       	movw	r18, r16
    79ce:	40 e0       	ldi	r20, 0x00	; 0
    79d0:	50 e0       	ldi	r21, 0x00	; 0
    79d2:	b6 01       	movw	r22, r12
    79d4:	c7 01       	movw	r24, r14
    79d6:	05 d9       	rcall	.-3574   	; 0x6be2 <TMR_SR_sendTimeout>
    79d8:	61 15       	cp	r22, r1
    79da:	71 05       	cpc	r23, r1
    79dc:	81 05       	cpc	r24, r1
    79de:	91 05       	cpc	r25, r1
    79e0:	09 f0       	breq	.+2      	; 0x79e4 <TMR_SR_executeEmbeddedRead+0x1d2>
    79e2:	54 c0       	rjmp	.+168    	; 0x7a8c <TMR_SR_executeEmbeddedRead+0x27a>
    79e4:	81 14       	cp	r8, r1
    79e6:	91 04       	cpc	r9, r1
    79e8:	09 f4       	brne	.+2      	; 0x79ec <TMR_SR_executeEmbeddedRead+0x1da>
    79ea:	54 c0       	rjmp	.+168    	; 0x7a94 <TMR_SR_executeEmbeddedRead+0x282>
    79ec:	f7 01       	movw	r30, r14
    79ee:	e3 5f       	subi	r30, 0xF3	; 243
    79f0:	f9 4f       	sbci	r31, 0xF9	; 249
    79f2:	80 81       	ld	r24, Z
    79f4:	81 11       	cpse	r24, r1
    79f6:	07 c0       	rjmp	.+14     	; 0x7a06 <TMR_SR_executeEmbeddedRead+0x1f4>
    79f8:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <isMultiSelectEnabled>
    79fc:	88 23       	and	r24, r24
    79fe:	31 f0       	breq	.+12     	; 0x7a0c <TMR_SR_executeEmbeddedRead+0x1fa>
    7a00:	e9 e0       	ldi	r30, 0x09	; 9
    7a02:	f0 e0       	ldi	r31, 0x00	; 0
    7a04:	05 c0       	rjmp	.+10     	; 0x7a10 <TMR_SR_executeEmbeddedRead+0x1fe>
    7a06:	e9 e0       	ldi	r30, 0x09	; 9
    7a08:	f0 e0       	ldi	r31, 0x00	; 0
    7a0a:	02 c0       	rjmp	.+4      	; 0x7a10 <TMR_SR_executeEmbeddedRead+0x1fe>
    7a0c:	e8 e0       	ldi	r30, 0x08	; 8
    7a0e:	f0 e0       	ldi	r31, 0x00	; 0
    7a10:	a4 fe       	sbrs	r10, 4
    7a12:	11 c0       	rjmp	.+34     	; 0x7a36 <TMR_SR_executeEmbeddedRead+0x224>
    7a14:	d6 01       	movw	r26, r12
    7a16:	ae 0f       	add	r26, r30
    7a18:	bf 1f       	adc	r27, r31
    7a1a:	12 96       	adiw	r26, 0x02	; 2
    7a1c:	8c 91       	ld	r24, X
    7a1e:	12 97       	sbiw	r26, 0x02	; 2
    7a20:	13 96       	adiw	r26, 0x03	; 3
    7a22:	2c 91       	ld	r18, X
    7a24:	90 e0       	ldi	r25, 0x00	; 0
    7a26:	98 2f       	mov	r25, r24
    7a28:	88 27       	eor	r24, r24
    7a2a:	82 2b       	or	r24, r18
    7a2c:	d4 01       	movw	r26, r8
    7a2e:	8d 93       	st	X+, r24
    7a30:	9c 93       	st	X, r25
    7a32:	34 96       	adiw	r30, 0x04	; 4
    7a34:	09 c0       	rjmp	.+18     	; 0x7a48 <TMR_SR_executeEmbeddedRead+0x236>
    7a36:	d6 01       	movw	r26, r12
    7a38:	ae 0f       	add	r26, r30
    7a3a:	bf 1f       	adc	r27, r31
    7a3c:	8c 91       	ld	r24, X
    7a3e:	90 e0       	ldi	r25, 0x00	; 0
    7a40:	d4 01       	movw	r26, r8
    7a42:	8d 93       	st	X+, r24
    7a44:	9c 93       	st	X, r25
    7a46:	31 96       	adiw	r30, 0x01	; 1
    7a48:	df 01       	movw	r26, r30
    7a4a:	12 96       	adiw	r26, 0x02	; 2
    7a4c:	ac 0d       	add	r26, r12
    7a4e:	bd 1d       	adc	r27, r13
    7a50:	8c 91       	ld	r24, X
    7a52:	90 e0       	ldi	r25, 0x00	; 0
    7a54:	98 2f       	mov	r25, r24
    7a56:	88 27       	eor	r24, r24
    7a58:	11 96       	adiw	r26, 0x01	; 1
    7a5a:	2c 91       	ld	r18, X
    7a5c:	82 2b       	or	r24, r18
    7a5e:	d4 01       	movw	r26, r8
    7a60:	13 96       	adiw	r26, 0x03	; 3
    7a62:	9c 93       	st	X, r25
    7a64:	8e 93       	st	-X, r24
    7a66:	12 97       	sbiw	r26, 0x02	; 2
    7a68:	34 96       	adiw	r30, 0x04	; 4
    7a6a:	ec 0d       	add	r30, r12
    7a6c:	fd 1d       	adc	r31, r13
    7a6e:	80 81       	ld	r24, Z
    7a70:	90 e0       	ldi	r25, 0x00	; 0
    7a72:	98 2f       	mov	r25, r24
    7a74:	88 27       	eor	r24, r24
    7a76:	21 81       	ldd	r18, Z+1	; 0x01
    7a78:	82 2b       	or	r24, r18
    7a7a:	15 96       	adiw	r26, 0x05	; 5
    7a7c:	9c 93       	st	X, r25
    7a7e:	8e 93       	st	-X, r24
    7a80:	14 97       	sbiw	r26, 0x04	; 4
    7a82:	40 e0       	ldi	r20, 0x00	; 0
    7a84:	30 e0       	ldi	r19, 0x00	; 0
    7a86:	20 e0       	ldi	r18, 0x00	; 0
    7a88:	90 e0       	ldi	r25, 0x00	; 0
    7a8a:	08 c0       	rjmp	.+16     	; 0x7a9c <TMR_SR_executeEmbeddedRead+0x28a>
    7a8c:	46 2f       	mov	r20, r22
    7a8e:	37 2f       	mov	r19, r23
    7a90:	28 2f       	mov	r18, r24
    7a92:	04 c0       	rjmp	.+8      	; 0x7a9c <TMR_SR_executeEmbeddedRead+0x28a>
    7a94:	40 e0       	ldi	r20, 0x00	; 0
    7a96:	30 e0       	ldi	r19, 0x00	; 0
    7a98:	20 e0       	ldi	r18, 0x00	; 0
    7a9a:	90 e0       	ldi	r25, 0x00	; 0
    7a9c:	64 2f       	mov	r22, r20
    7a9e:	73 2f       	mov	r23, r19
    7aa0:	82 2f       	mov	r24, r18
    7aa2:	cf 5f       	subi	r28, 0xFF	; 255
    7aa4:	de 4f       	sbci	r29, 0xFE	; 254
    7aa6:	0f b6       	in	r0, 0x3f	; 63
    7aa8:	f8 94       	cli
    7aaa:	de bf       	out	0x3e, r29	; 62
    7aac:	0f be       	out	0x3f, r0	; 63
    7aae:	cd bf       	out	0x3d, r28	; 61
    7ab0:	df 91       	pop	r29
    7ab2:	cf 91       	pop	r28
    7ab4:	1f 91       	pop	r17
    7ab6:	0f 91       	pop	r16
    7ab8:	ff 90       	pop	r15
    7aba:	ef 90       	pop	r14
    7abc:	df 90       	pop	r13
    7abe:	cf 90       	pop	r12
    7ac0:	bf 90       	pop	r11
    7ac2:	af 90       	pop	r10
    7ac4:	9f 90       	pop	r9
    7ac6:	8f 90       	pop	r8
    7ac8:	7f 90       	pop	r7
    7aca:	6f 90       	pop	r6
    7acc:	5f 90       	pop	r5
    7ace:	08 95       	ret

00007ad0 <TMR_SR_msgAddGEN2WriteTagEPC>:
    7ad0:	0f 93       	push	r16
    7ad2:	cf 93       	push	r28
    7ad4:	df 93       	push	r29
    7ad6:	eb 01       	movw	r28, r22
    7ad8:	e0 91 57 02 	lds	r30, 0x0257	; 0x800257 <totalMsgIdx>
    7adc:	f0 91 58 02 	lds	r31, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7ae0:	31 96       	adiw	r30, 0x01	; 1
    7ae2:	f0 93 58 02 	sts	0x0258, r31	; 0x800258 <totalMsgIdx+0x1>
    7ae6:	e0 93 57 02 	sts	0x0257, r30	; 0x800257 <totalMsgIdx>
    7aea:	68 81       	ld	r22, Y
    7aec:	71 e0       	ldi	r23, 0x01	; 1
    7aee:	76 0f       	add	r23, r22
    7af0:	78 83       	st	Y, r23
    7af2:	fc 01       	movw	r30, r24
    7af4:	e6 0f       	add	r30, r22
    7af6:	f1 1d       	adc	r31, r1
    7af8:	63 e2       	ldi	r22, 0x23	; 35
    7afa:	60 83       	st	Z, r22
    7afc:	e0 91 57 02 	lds	r30, 0x0257	; 0x800257 <totalMsgIdx>
    7b00:	f0 91 58 02 	lds	r31, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7b04:	32 96       	adiw	r30, 0x02	; 2
    7b06:	f0 93 58 02 	sts	0x0258, r31	; 0x800258 <totalMsgIdx+0x1>
    7b0a:	e0 93 57 02 	sts	0x0257, r30	; 0x800257 <totalMsgIdx>
    7b0e:	68 81       	ld	r22, Y
    7b10:	71 e0       	ldi	r23, 0x01	; 1
    7b12:	76 0f       	add	r23, r22
    7b14:	78 83       	st	Y, r23
    7b16:	fc 01       	movw	r30, r24
    7b18:	e6 0f       	add	r30, r22
    7b1a:	f1 1d       	adc	r31, r1
    7b1c:	50 83       	st	Z, r21
    7b1e:	58 81       	ld	r21, Y
    7b20:	61 e0       	ldi	r22, 0x01	; 1
    7b22:	65 0f       	add	r22, r21
    7b24:	68 83       	st	Y, r22
    7b26:	fc 01       	movw	r30, r24
    7b28:	e5 0f       	add	r30, r21
    7b2a:	f1 1d       	adc	r31, r1
    7b2c:	40 83       	st	Z, r20
    7b2e:	40 91 57 02 	lds	r20, 0x0257	; 0x800257 <totalMsgIdx>
    7b32:	50 91 58 02 	lds	r21, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7b36:	4e 5f       	subi	r20, 0xFE	; 254
    7b38:	5f 4f       	sbci	r21, 0xFF	; 255
    7b3a:	50 93 58 02 	sts	0x0258, r21	; 0x800258 <totalMsgIdx+0x1>
    7b3e:	40 93 57 02 	sts	0x0257, r20	; 0x800257 <totalMsgIdx>
    7b42:	48 81       	ld	r20, Y
    7b44:	51 e0       	ldi	r21, 0x01	; 1
    7b46:	54 0f       	add	r21, r20
    7b48:	58 83       	st	Y, r21
    7b4a:	fc 01       	movw	r30, r24
    7b4c:	e4 0f       	add	r30, r20
    7b4e:	f1 1d       	adc	r31, r1
    7b50:	10 82       	st	Z, r1
    7b52:	48 81       	ld	r20, Y
    7b54:	51 e0       	ldi	r21, 0x01	; 1
    7b56:	54 0f       	add	r21, r20
    7b58:	58 83       	st	Y, r21
    7b5a:	fc 01       	movw	r30, r24
    7b5c:	e4 0f       	add	r30, r20
    7b5e:	f1 1d       	adc	r31, r1
    7b60:	10 82       	st	Z, r1
    7b62:	e8 81       	ld	r30, Y
    7b64:	40 2f       	mov	r20, r16
    7b66:	50 e0       	ldi	r21, 0x00	; 0
    7b68:	b9 01       	movw	r22, r18
    7b6a:	8e 0f       	add	r24, r30
    7b6c:	91 1d       	adc	r25, r1
    7b6e:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    7b72:	88 81       	ld	r24, Y
    7b74:	08 0f       	add	r16, r24
    7b76:	08 83       	st	Y, r16
    7b78:	df 91       	pop	r29
    7b7a:	cf 91       	pop	r28
    7b7c:	0f 91       	pop	r16
    7b7e:	08 95       	ret

00007b80 <TMR_SR_msgAddGEN2DataRead>:
    7b80:	4f 92       	push	r4
    7b82:	5f 92       	push	r5
    7b84:	6f 92       	push	r6
    7b86:	7f 92       	push	r7
    7b88:	8f 92       	push	r8
    7b8a:	af 92       	push	r10
    7b8c:	bf 92       	push	r11
    7b8e:	cf 92       	push	r12
    7b90:	df 92       	push	r13
    7b92:	ef 92       	push	r14
    7b94:	ff 92       	push	r15
    7b96:	0f 93       	push	r16
    7b98:	1f 93       	push	r17
    7b9a:	cf 93       	push	r28
    7b9c:	df 93       	push	r29
    7b9e:	cd b7       	in	r28, 0x3d	; 61
    7ba0:	de b7       	in	r29, 0x3e	; 62
    7ba2:	2c 01       	movw	r4, r24
    7ba4:	3b 01       	movw	r6, r22
    7ba6:	b2 2e       	mov	r11, r18
    7ba8:	d0 2e       	mov	r13, r16
    7baa:	00 e0       	ldi	r16, 0x00	; 0
    7bac:	9a 01       	movw	r18, r20
    7bae:	48 e2       	ldi	r20, 0x28	; 40
    7bb0:	d1 d8       	rcall	.-3678   	; 0x6d54 <TMR_SR_cmdFrameHeader>
    7bb2:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    7bb6:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7bba:	01 96       	adiw	r24, 0x01	; 1
    7bbc:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    7bc0:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    7bc4:	f3 01       	movw	r30, r6
    7bc6:	80 81       	ld	r24, Z
    7bc8:	91 e0       	ldi	r25, 0x01	; 1
    7bca:	98 0f       	add	r25, r24
    7bcc:	90 83       	st	Z, r25
    7bce:	f2 01       	movw	r30, r4
    7bd0:	e8 0f       	add	r30, r24
    7bd2:	f1 1d       	adc	r31, r1
    7bd4:	a0 82       	st	Z, r10
    7bd6:	88 20       	and	r8, r8
    7bd8:	d9 f0       	breq	.+54     	; 0x7c10 <TMR_SR_msgAddGEN2DataRead+0x90>
    7bda:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    7bde:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7be2:	02 96       	adiw	r24, 0x02	; 2
    7be4:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    7be8:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    7bec:	f3 01       	movw	r30, r6
    7bee:	80 81       	ld	r24, Z
    7bf0:	91 e0       	ldi	r25, 0x01	; 1
    7bf2:	98 0f       	add	r25, r24
    7bf4:	90 83       	st	Z, r25
    7bf6:	f2 01       	movw	r30, r4
    7bf8:	e8 0f       	add	r30, r24
    7bfa:	f1 1d       	adc	r31, r1
    7bfc:	10 82       	st	Z, r1
    7bfe:	f3 01       	movw	r30, r6
    7c00:	80 81       	ld	r24, Z
    7c02:	91 e0       	ldi	r25, 0x01	; 1
    7c04:	98 0f       	add	r25, r24
    7c06:	90 83       	st	Z, r25
    7c08:	f2 01       	movw	r30, r4
    7c0a:	e8 0f       	add	r30, r24
    7c0c:	f1 1d       	adc	r31, r1
    7c0e:	10 82       	st	Z, r1
    7c10:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    7c14:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7c18:	01 96       	adiw	r24, 0x01	; 1
    7c1a:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    7c1e:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    7c22:	f3 01       	movw	r30, r6
    7c24:	80 81       	ld	r24, Z
    7c26:	91 e0       	ldi	r25, 0x01	; 1
    7c28:	98 0f       	add	r25, r24
    7c2a:	90 83       	st	Z, r25
    7c2c:	f2 01       	movw	r30, r4
    7c2e:	e8 0f       	add	r30, r24
    7c30:	f1 1d       	adc	r31, r1
    7c32:	b0 82       	st	Z, r11
    7c34:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    7c38:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7c3c:	04 96       	adiw	r24, 0x04	; 4
    7c3e:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    7c42:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    7c46:	f3 01       	movw	r30, r6
    7c48:	80 81       	ld	r24, Z
    7c4a:	91 e0       	ldi	r25, 0x01	; 1
    7c4c:	98 0f       	add	r25, r24
    7c4e:	90 83       	st	Z, r25
    7c50:	f2 01       	movw	r30, r4
    7c52:	e8 0f       	add	r30, r24
    7c54:	f1 1d       	adc	r31, r1
    7c56:	10 83       	st	Z, r17
    7c58:	f3 01       	movw	r30, r6
    7c5a:	80 81       	ld	r24, Z
    7c5c:	91 e0       	ldi	r25, 0x01	; 1
    7c5e:	98 0f       	add	r25, r24
    7c60:	90 83       	st	Z, r25
    7c62:	f2 01       	movw	r30, r4
    7c64:	e8 0f       	add	r30, r24
    7c66:	f1 1d       	adc	r31, r1
    7c68:	d0 82       	st	Z, r13
    7c6a:	f3 01       	movw	r30, r6
    7c6c:	80 81       	ld	r24, Z
    7c6e:	91 e0       	ldi	r25, 0x01	; 1
    7c70:	98 0f       	add	r25, r24
    7c72:	90 83       	st	Z, r25
    7c74:	f2 01       	movw	r30, r4
    7c76:	e8 0f       	add	r30, r24
    7c78:	f1 1d       	adc	r31, r1
    7c7a:	f0 82       	st	Z, r15
    7c7c:	f3 01       	movw	r30, r6
    7c7e:	80 81       	ld	r24, Z
    7c80:	91 e0       	ldi	r25, 0x01	; 1
    7c82:	98 0f       	add	r25, r24
    7c84:	90 83       	st	Z, r25
    7c86:	f2 01       	movw	r30, r4
    7c88:	e8 0f       	add	r30, r24
    7c8a:	f1 1d       	adc	r31, r1
    7c8c:	e0 82       	st	Z, r14
    7c8e:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    7c92:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7c96:	01 96       	adiw	r24, 0x01	; 1
    7c98:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    7c9c:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    7ca0:	f3 01       	movw	r30, r6
    7ca2:	80 81       	ld	r24, Z
    7ca4:	91 e0       	ldi	r25, 0x01	; 1
    7ca6:	98 0f       	add	r25, r24
    7ca8:	90 83       	st	Z, r25
    7caa:	f2 01       	movw	r30, r4
    7cac:	e8 0f       	add	r30, r24
    7cae:	f1 1d       	adc	r31, r1
    7cb0:	c0 82       	st	Z, r12
    7cb2:	df 91       	pop	r29
    7cb4:	cf 91       	pop	r28
    7cb6:	1f 91       	pop	r17
    7cb8:	0f 91       	pop	r16
    7cba:	ff 90       	pop	r15
    7cbc:	ef 90       	pop	r14
    7cbe:	df 90       	pop	r13
    7cc0:	cf 90       	pop	r12
    7cc2:	bf 90       	pop	r11
    7cc4:	af 90       	pop	r10
    7cc6:	8f 90       	pop	r8
    7cc8:	7f 90       	pop	r7
    7cca:	6f 90       	pop	r6
    7ccc:	5f 90       	pop	r5
    7cce:	4f 90       	pop	r4
    7cd0:	08 95       	ret

00007cd2 <TMR_SR_msgAddGEN2DataWrite>:
    7cd2:	cf 92       	push	r12
    7cd4:	ef 92       	push	r14
    7cd6:	ff 92       	push	r15
    7cd8:	0f 93       	push	r16
    7cda:	1f 93       	push	r17
    7cdc:	fb 01       	movw	r30, r22
    7cde:	60 91 57 02 	lds	r22, 0x0257	; 0x800257 <totalMsgIdx>
    7ce2:	70 91 58 02 	lds	r23, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7ce6:	6f 5f       	subi	r22, 0xFF	; 255
    7ce8:	7f 4f       	sbci	r23, 0xFF	; 255
    7cea:	70 93 58 02 	sts	0x0258, r23	; 0x800258 <totalMsgIdx+0x1>
    7cee:	60 93 57 02 	sts	0x0257, r22	; 0x800257 <totalMsgIdx>
    7cf2:	30 81       	ld	r19, Z
    7cf4:	61 e0       	ldi	r22, 0x01	; 1
    7cf6:	63 0f       	add	r22, r19
    7cf8:	60 83       	st	Z, r22
    7cfa:	dc 01       	movw	r26, r24
    7cfc:	a3 0f       	add	r26, r19
    7cfe:	b1 1d       	adc	r27, r1
    7d00:	34 e2       	ldi	r19, 0x24	; 36
    7d02:	3c 93       	st	X, r19
    7d04:	60 91 57 02 	lds	r22, 0x0257	; 0x800257 <totalMsgIdx>
    7d08:	70 91 58 02 	lds	r23, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7d0c:	6e 5f       	subi	r22, 0xFE	; 254
    7d0e:	7f 4f       	sbci	r23, 0xFF	; 255
    7d10:	70 93 58 02 	sts	0x0258, r23	; 0x800258 <totalMsgIdx+0x1>
    7d14:	60 93 57 02 	sts	0x0257, r22	; 0x800257 <totalMsgIdx>
    7d18:	30 81       	ld	r19, Z
    7d1a:	61 e0       	ldi	r22, 0x01	; 1
    7d1c:	63 0f       	add	r22, r19
    7d1e:	60 83       	st	Z, r22
    7d20:	dc 01       	movw	r26, r24
    7d22:	a3 0f       	add	r26, r19
    7d24:	b1 1d       	adc	r27, r1
    7d26:	5c 93       	st	X, r21
    7d28:	30 81       	ld	r19, Z
    7d2a:	51 e0       	ldi	r21, 0x01	; 1
    7d2c:	53 0f       	add	r21, r19
    7d2e:	50 83       	st	Z, r21
    7d30:	dc 01       	movw	r26, r24
    7d32:	a3 0f       	add	r26, r19
    7d34:	b1 1d       	adc	r27, r1
    7d36:	4c 93       	st	X, r20
    7d38:	c1 10       	cpse	r12, r1
    7d3a:	02 c0       	rjmp	.+4      	; 0x7d40 <TMR_SR_msgAddGEN2DataWrite+0x6e>
    7d3c:	30 e0       	ldi	r19, 0x00	; 0
    7d3e:	01 c0       	rjmp	.+2      	; 0x7d42 <TMR_SR_msgAddGEN2DataWrite+0x70>
    7d40:	34 e8       	ldi	r19, 0x84	; 132
    7d42:	40 91 5f 02 	lds	r20, 0x025F	; 0x80025f <isMultiSelectEnabled>
    7d46:	44 23       	and	r20, r20
    7d48:	29 f0       	breq	.+10     	; 0x7d54 <TMR_SR_msgAddGEN2DataWrite+0x82>
    7d4a:	40 91 5e 02 	lds	r20, 0x025E	; 0x80025e <isEmbeddedTagopEnabled>
    7d4e:	41 11       	cpse	r20, r1
    7d50:	01 c0       	rjmp	.+2      	; 0x7d54 <TMR_SR_msgAddGEN2DataWrite+0x82>
    7d52:	38 68       	ori	r19, 0x88	; 136
    7d54:	33 23       	and	r19, r19
    7d56:	91 f0       	breq	.+36     	; 0x7d7c <TMR_SR_msgAddGEN2DataWrite+0xaa>
    7d58:	40 91 57 02 	lds	r20, 0x0257	; 0x800257 <totalMsgIdx>
    7d5c:	50 91 58 02 	lds	r21, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7d60:	4f 5f       	subi	r20, 0xFF	; 255
    7d62:	5f 4f       	sbci	r21, 0xFF	; 255
    7d64:	50 93 58 02 	sts	0x0258, r21	; 0x800258 <totalMsgIdx+0x1>
    7d68:	40 93 57 02 	sts	0x0257, r20	; 0x800257 <totalMsgIdx>
    7d6c:	40 81       	ld	r20, Z
    7d6e:	51 e0       	ldi	r21, 0x01	; 1
    7d70:	54 0f       	add	r21, r20
    7d72:	50 83       	st	Z, r21
    7d74:	dc 01       	movw	r26, r24
    7d76:	a4 0f       	add	r26, r20
    7d78:	b1 1d       	adc	r27, r1
    7d7a:	3c 93       	st	X, r19
    7d7c:	40 91 57 02 	lds	r20, 0x0257	; 0x800257 <totalMsgIdx>
    7d80:	50 91 58 02 	lds	r21, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7d84:	4f 5f       	subi	r20, 0xFF	; 255
    7d86:	5f 4f       	sbci	r21, 0xFF	; 255
    7d88:	50 93 58 02 	sts	0x0258, r21	; 0x800258 <totalMsgIdx+0x1>
    7d8c:	40 93 57 02 	sts	0x0257, r20	; 0x800257 <totalMsgIdx>
    7d90:	30 81       	ld	r19, Z
    7d92:	41 e0       	ldi	r20, 0x01	; 1
    7d94:	43 0f       	add	r20, r19
    7d96:	40 83       	st	Z, r20
    7d98:	dc 01       	movw	r26, r24
    7d9a:	a3 0f       	add	r26, r19
    7d9c:	b1 1d       	adc	r27, r1
    7d9e:	1c 92       	st	X, r1
    7da0:	40 91 57 02 	lds	r20, 0x0257	; 0x800257 <totalMsgIdx>
    7da4:	50 91 58 02 	lds	r21, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7da8:	4c 5f       	subi	r20, 0xFC	; 252
    7daa:	5f 4f       	sbci	r21, 0xFF	; 255
    7dac:	50 93 58 02 	sts	0x0258, r21	; 0x800258 <totalMsgIdx+0x1>
    7db0:	40 93 57 02 	sts	0x0257, r20	; 0x800257 <totalMsgIdx>
    7db4:	30 81       	ld	r19, Z
    7db6:	41 e0       	ldi	r20, 0x01	; 1
    7db8:	43 0f       	add	r20, r19
    7dba:	40 83       	st	Z, r20
    7dbc:	dc 01       	movw	r26, r24
    7dbe:	a3 0f       	add	r26, r19
    7dc0:	b1 1d       	adc	r27, r1
    7dc2:	1c 93       	st	X, r17
    7dc4:	30 81       	ld	r19, Z
    7dc6:	41 e0       	ldi	r20, 0x01	; 1
    7dc8:	43 0f       	add	r20, r19
    7dca:	40 83       	st	Z, r20
    7dcc:	dc 01       	movw	r26, r24
    7dce:	a3 0f       	add	r26, r19
    7dd0:	b1 1d       	adc	r27, r1
    7dd2:	0c 93       	st	X, r16
    7dd4:	30 81       	ld	r19, Z
    7dd6:	41 e0       	ldi	r20, 0x01	; 1
    7dd8:	43 0f       	add	r20, r19
    7dda:	40 83       	st	Z, r20
    7ddc:	dc 01       	movw	r26, r24
    7dde:	a3 0f       	add	r26, r19
    7de0:	b1 1d       	adc	r27, r1
    7de2:	fc 92       	st	X, r15
    7de4:	30 81       	ld	r19, Z
    7de6:	41 e0       	ldi	r20, 0x01	; 1
    7de8:	43 0f       	add	r20, r19
    7dea:	40 83       	st	Z, r20
    7dec:	dc 01       	movw	r26, r24
    7dee:	a3 0f       	add	r26, r19
    7df0:	b1 1d       	adc	r27, r1
    7df2:	ec 92       	st	X, r14
    7df4:	40 91 57 02 	lds	r20, 0x0257	; 0x800257 <totalMsgIdx>
    7df8:	50 91 58 02 	lds	r21, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7dfc:	4f 5f       	subi	r20, 0xFF	; 255
    7dfe:	5f 4f       	sbci	r21, 0xFF	; 255
    7e00:	50 93 58 02 	sts	0x0258, r21	; 0x800258 <totalMsgIdx+0x1>
    7e04:	40 93 57 02 	sts	0x0257, r20	; 0x800257 <totalMsgIdx>
    7e08:	30 81       	ld	r19, Z
    7e0a:	41 e0       	ldi	r20, 0x01	; 1
    7e0c:	43 0f       	add	r20, r19
    7e0e:	40 83       	st	Z, r20
    7e10:	fc 01       	movw	r30, r24
    7e12:	e3 0f       	add	r30, r19
    7e14:	f1 1d       	adc	r31, r1
    7e16:	20 83       	st	Z, r18
    7e18:	1f 91       	pop	r17
    7e1a:	0f 91       	pop	r16
    7e1c:	ff 90       	pop	r15
    7e1e:	ef 90       	pop	r14
    7e20:	cf 90       	pop	r12
    7e22:	08 95       	ret

00007e24 <TMR_SR_msgAddGEN2LockTag>:
    7e24:	7f 92       	push	r7
    7e26:	8f 92       	push	r8
    7e28:	9f 92       	push	r9
    7e2a:	af 92       	push	r10
    7e2c:	bf 92       	push	r11
    7e2e:	cf 92       	push	r12
    7e30:	df 92       	push	r13
    7e32:	ef 92       	push	r14
    7e34:	ff 92       	push	r15
    7e36:	0f 93       	push	r16
    7e38:	1f 93       	push	r17
    7e3a:	cf 93       	push	r28
    7e3c:	df 93       	push	r29
    7e3e:	5c 01       	movw	r10, r24
    7e40:	eb 01       	movw	r28, r22
    7e42:	82 2e       	mov	r8, r18
    7e44:	73 2e       	mov	r7, r19
    7e46:	90 2e       	mov	r9, r16
    7e48:	00 e0       	ldi	r16, 0x00	; 0
    7e4a:	9a 01       	movw	r18, r20
    7e4c:	45 e2       	ldi	r20, 0x25	; 37
    7e4e:	0e 94 aa 36 	call	0x6d54	; 0x6d54 <TMR_SR_cmdFrameHeader>
    7e52:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    7e56:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7e5a:	01 96       	adiw	r24, 0x01	; 1
    7e5c:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    7e60:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    7e64:	88 81       	ld	r24, Y
    7e66:	91 e0       	ldi	r25, 0x01	; 1
    7e68:	98 0f       	add	r25, r24
    7e6a:	98 83       	st	Y, r25
    7e6c:	f5 01       	movw	r30, r10
    7e6e:	e8 0f       	add	r30, r24
    7e70:	f1 1d       	adc	r31, r1
    7e72:	10 82       	st	Z, r1
    7e74:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    7e78:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7e7c:	04 96       	adiw	r24, 0x04	; 4
    7e7e:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    7e82:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    7e86:	88 81       	ld	r24, Y
    7e88:	91 e0       	ldi	r25, 0x01	; 1
    7e8a:	98 0f       	add	r25, r24
    7e8c:	98 83       	st	Y, r25
    7e8e:	f5 01       	movw	r30, r10
    7e90:	e8 0f       	add	r30, r24
    7e92:	f1 1d       	adc	r31, r1
    7e94:	f0 82       	st	Z, r15
    7e96:	88 81       	ld	r24, Y
    7e98:	91 e0       	ldi	r25, 0x01	; 1
    7e9a:	98 0f       	add	r25, r24
    7e9c:	98 83       	st	Y, r25
    7e9e:	f5 01       	movw	r30, r10
    7ea0:	e8 0f       	add	r30, r24
    7ea2:	f1 1d       	adc	r31, r1
    7ea4:	e0 82       	st	Z, r14
    7ea6:	88 81       	ld	r24, Y
    7ea8:	91 e0       	ldi	r25, 0x01	; 1
    7eaa:	98 0f       	add	r25, r24
    7eac:	98 83       	st	Y, r25
    7eae:	f5 01       	movw	r30, r10
    7eb0:	e8 0f       	add	r30, r24
    7eb2:	f1 1d       	adc	r31, r1
    7eb4:	d0 82       	st	Z, r13
    7eb6:	88 81       	ld	r24, Y
    7eb8:	91 e0       	ldi	r25, 0x01	; 1
    7eba:	98 0f       	add	r25, r24
    7ebc:	98 83       	st	Y, r25
    7ebe:	f5 01       	movw	r30, r10
    7ec0:	e8 0f       	add	r30, r24
    7ec2:	f1 1d       	adc	r31, r1
    7ec4:	c0 82       	st	Z, r12
    7ec6:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    7eca:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7ece:	02 96       	adiw	r24, 0x02	; 2
    7ed0:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    7ed4:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    7ed8:	88 81       	ld	r24, Y
    7eda:	91 e0       	ldi	r25, 0x01	; 1
    7edc:	98 0f       	add	r25, r24
    7ede:	98 83       	st	Y, r25
    7ee0:	f5 01       	movw	r30, r10
    7ee2:	e8 0f       	add	r30, r24
    7ee4:	f1 1d       	adc	r31, r1
    7ee6:	70 82       	st	Z, r7
    7ee8:	88 81       	ld	r24, Y
    7eea:	91 e0       	ldi	r25, 0x01	; 1
    7eec:	98 0f       	add	r25, r24
    7eee:	98 83       	st	Y, r25
    7ef0:	f5 01       	movw	r30, r10
    7ef2:	e8 0f       	add	r30, r24
    7ef4:	f1 1d       	adc	r31, r1
    7ef6:	80 82       	st	Z, r8
    7ef8:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    7efc:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7f00:	02 96       	adiw	r24, 0x02	; 2
    7f02:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    7f06:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    7f0a:	88 81       	ld	r24, Y
    7f0c:	91 e0       	ldi	r25, 0x01	; 1
    7f0e:	98 0f       	add	r25, r24
    7f10:	98 83       	st	Y, r25
    7f12:	f5 01       	movw	r30, r10
    7f14:	e8 0f       	add	r30, r24
    7f16:	f1 1d       	adc	r31, r1
    7f18:	10 83       	st	Z, r17
    7f1a:	88 81       	ld	r24, Y
    7f1c:	91 e0       	ldi	r25, 0x01	; 1
    7f1e:	98 0f       	add	r25, r24
    7f20:	98 83       	st	Y, r25
    7f22:	f5 01       	movw	r30, r10
    7f24:	e8 0f       	add	r30, r24
    7f26:	f1 1d       	adc	r31, r1
    7f28:	90 82       	st	Z, r9
    7f2a:	df 91       	pop	r29
    7f2c:	cf 91       	pop	r28
    7f2e:	1f 91       	pop	r17
    7f30:	0f 91       	pop	r16
    7f32:	ff 90       	pop	r15
    7f34:	ef 90       	pop	r14
    7f36:	df 90       	pop	r13
    7f38:	cf 90       	pop	r12
    7f3a:	bf 90       	pop	r11
    7f3c:	af 90       	pop	r10
    7f3e:	9f 90       	pop	r9
    7f40:	8f 90       	pop	r8
    7f42:	7f 90       	pop	r7
    7f44:	08 95       	ret

00007f46 <TMR_SR_msgAddGEN2KillTag>:
    7f46:	bf 92       	push	r11
    7f48:	cf 92       	push	r12
    7f4a:	df 92       	push	r13
    7f4c:	ef 92       	push	r14
    7f4e:	ff 92       	push	r15
    7f50:	0f 93       	push	r16
    7f52:	1f 93       	push	r17
    7f54:	cf 93       	push	r28
    7f56:	df 93       	push	r29
    7f58:	7c 01       	movw	r14, r24
    7f5a:	eb 01       	movw	r28, r22
    7f5c:	d0 2e       	mov	r13, r16
    7f5e:	c2 2e       	mov	r12, r18
    7f60:	b3 2e       	mov	r11, r19
    7f62:	00 e0       	ldi	r16, 0x00	; 0
    7f64:	9a 01       	movw	r18, r20
    7f66:	46 e2       	ldi	r20, 0x26	; 38
    7f68:	0e 94 aa 36 	call	0x6d54	; 0x6d54 <TMR_SR_cmdFrameHeader>
    7f6c:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    7f70:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7f74:	01 96       	adiw	r24, 0x01	; 1
    7f76:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    7f7a:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    7f7e:	88 81       	ld	r24, Y
    7f80:	91 e0       	ldi	r25, 0x01	; 1
    7f82:	98 0f       	add	r25, r24
    7f84:	98 83       	st	Y, r25
    7f86:	f7 01       	movw	r30, r14
    7f88:	e8 0f       	add	r30, r24
    7f8a:	f1 1d       	adc	r31, r1
    7f8c:	10 82       	st	Z, r1
    7f8e:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    7f92:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7f96:	04 96       	adiw	r24, 0x04	; 4
    7f98:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    7f9c:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    7fa0:	88 81       	ld	r24, Y
    7fa2:	91 e0       	ldi	r25, 0x01	; 1
    7fa4:	98 0f       	add	r25, r24
    7fa6:	98 83       	st	Y, r25
    7fa8:	f7 01       	movw	r30, r14
    7faa:	e8 0f       	add	r30, r24
    7fac:	f1 1d       	adc	r31, r1
    7fae:	b0 82       	st	Z, r11
    7fb0:	88 81       	ld	r24, Y
    7fb2:	91 e0       	ldi	r25, 0x01	; 1
    7fb4:	98 0f       	add	r25, r24
    7fb6:	98 83       	st	Y, r25
    7fb8:	f7 01       	movw	r30, r14
    7fba:	e8 0f       	add	r30, r24
    7fbc:	f1 1d       	adc	r31, r1
    7fbe:	c0 82       	st	Z, r12
    7fc0:	88 81       	ld	r24, Y
    7fc2:	91 e0       	ldi	r25, 0x01	; 1
    7fc4:	98 0f       	add	r25, r24
    7fc6:	98 83       	st	Y, r25
    7fc8:	f7 01       	movw	r30, r14
    7fca:	e8 0f       	add	r30, r24
    7fcc:	f1 1d       	adc	r31, r1
    7fce:	10 83       	st	Z, r17
    7fd0:	88 81       	ld	r24, Y
    7fd2:	91 e0       	ldi	r25, 0x01	; 1
    7fd4:	98 0f       	add	r25, r24
    7fd6:	98 83       	st	Y, r25
    7fd8:	f7 01       	movw	r30, r14
    7fda:	e8 0f       	add	r30, r24
    7fdc:	f1 1d       	adc	r31, r1
    7fde:	d0 82       	st	Z, r13
    7fe0:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    7fe4:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    7fe8:	01 96       	adiw	r24, 0x01	; 1
    7fea:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    7fee:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    7ff2:	88 81       	ld	r24, Y
    7ff4:	91 e0       	ldi	r25, 0x01	; 1
    7ff6:	98 0f       	add	r25, r24
    7ff8:	98 83       	st	Y, r25
    7ffa:	f7 01       	movw	r30, r14
    7ffc:	e8 0f       	add	r30, r24
    7ffe:	f1 1d       	adc	r31, r1
    8000:	10 82       	st	Z, r1
    8002:	df 91       	pop	r29
    8004:	cf 91       	pop	r28
    8006:	1f 91       	pop	r17
    8008:	0f 91       	pop	r16
    800a:	ff 90       	pop	r15
    800c:	ef 90       	pop	r14
    800e:	df 90       	pop	r13
    8010:	cf 90       	pop	r12
    8012:	bf 90       	pop	r11
    8014:	08 95       	ret

00008016 <TMR_SR_msgAddGEN2BlockWrite>:
    8016:	2f 92       	push	r2
    8018:	3f 92       	push	r3
    801a:	4f 92       	push	r4
    801c:	5f 92       	push	r5
    801e:	6f 92       	push	r6
    8020:	7f 92       	push	r7
    8022:	8f 92       	push	r8
    8024:	9f 92       	push	r9
    8026:	af 92       	push	r10
    8028:	bf 92       	push	r11
    802a:	cf 92       	push	r12
    802c:	df 92       	push	r13
    802e:	ef 92       	push	r14
    8030:	ff 92       	push	r15
    8032:	0f 93       	push	r16
    8034:	1f 93       	push	r17
    8036:	cf 93       	push	r28
    8038:	df 93       	push	r29
    803a:	cd b7       	in	r28, 0x3d	; 61
    803c:	de b7       	in	r29, 0x3e	; 62
    803e:	28 97       	sbiw	r28, 0x08	; 8
    8040:	0f b6       	in	r0, 0x3f	; 63
    8042:	f8 94       	cli
    8044:	de bf       	out	0x3e, r29	; 62
    8046:	0f be       	out	0x3f, r0	; 63
    8048:	cd bf       	out	0x3d, r28	; 61
    804a:	2c 01       	movw	r4, r24
    804c:	3b 01       	movw	r6, r22
    804e:	32 2e       	mov	r3, r18
    8050:	ee 82       	std	Y+6, r14	; 0x06
    8052:	ff 82       	std	Y+7, r15	; 0x07
    8054:	08 87       	std	Y+8, r16	; 0x08
    8056:	21 2e       	mov	r2, r17
    8058:	aa 82       	std	Y+2, r10	; 0x02
    805a:	bb 82       	std	Y+3, r11	; 0x03
    805c:	cc 82       	std	Y+4, r12	; 0x04
    805e:	dd 82       	std	Y+5, r13	; 0x05
    8060:	19 82       	std	Y+1, r1	; 0x01
    8062:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    8066:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    806a:	01 96       	adiw	r24, 0x01	; 1
    806c:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    8070:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    8074:	fb 01       	movw	r30, r22
    8076:	80 81       	ld	r24, Z
    8078:	91 e0       	ldi	r25, 0x01	; 1
    807a:	98 0f       	add	r25, r24
    807c:	90 83       	st	Z, r25
    807e:	f2 01       	movw	r30, r4
    8080:	e8 0f       	add	r30, r24
    8082:	f1 1d       	adc	r31, r1
    8084:	8d e2       	ldi	r24, 0x2D	; 45
    8086:	80 83       	st	Z, r24
    8088:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    808c:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    8090:	02 96       	adiw	r24, 0x02	; 2
    8092:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    8096:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    809a:	fb 01       	movw	r30, r22
    809c:	80 81       	ld	r24, Z
    809e:	91 e0       	ldi	r25, 0x01	; 1
    80a0:	98 0f       	add	r25, r24
    80a2:	90 83       	st	Z, r25
    80a4:	f2 01       	movw	r30, r4
    80a6:	e8 0f       	add	r30, r24
    80a8:	f1 1d       	adc	r31, r1
    80aa:	50 83       	st	Z, r21
    80ac:	fb 01       	movw	r30, r22
    80ae:	80 81       	ld	r24, Z
    80b0:	91 e0       	ldi	r25, 0x01	; 1
    80b2:	98 0f       	add	r25, r24
    80b4:	90 83       	st	Z, r25
    80b6:	f2 01       	movw	r30, r4
    80b8:	e8 0f       	add	r30, r24
    80ba:	f1 1d       	adc	r31, r1
    80bc:	40 83       	st	Z, r20
    80be:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    80c2:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    80c6:	01 96       	adiw	r24, 0x01	; 1
    80c8:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    80cc:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    80d0:	fb 01       	movw	r30, r22
    80d2:	80 81       	ld	r24, Z
    80d4:	91 e0       	ldi	r25, 0x01	; 1
    80d6:	98 0f       	add	r25, r24
    80d8:	90 83       	st	Z, r25
    80da:	f2 01       	movw	r30, r4
    80dc:	e8 0f       	add	r30, r24
    80de:	f1 1d       	adc	r31, r1
    80e0:	10 82       	st	Z, r1
    80e2:	fb 01       	movw	r30, r22
    80e4:	b0 80       	ld	r11, Z
    80e6:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    80ea:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    80ee:	01 96       	adiw	r24, 0x01	; 1
    80f0:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    80f4:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    80f8:	80 81       	ld	r24, Z
    80fa:	91 e0       	ldi	r25, 0x01	; 1
    80fc:	98 0f       	add	r25, r24
    80fe:	90 83       	st	Z, r25
    8100:	f2 01       	movw	r30, r4
    8102:	e8 0f       	add	r30, r24
    8104:	f1 1d       	adc	r31, r1
    8106:	80 e4       	ldi	r24, 0x40	; 64
    8108:	80 83       	st	Z, r24
    810a:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    810e:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    8112:	01 96       	adiw	r24, 0x01	; 1
    8114:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    8118:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    811c:	fb 01       	movw	r30, r22
    811e:	80 81       	ld	r24, Z
    8120:	91 e0       	ldi	r25, 0x01	; 1
    8122:	98 0f       	add	r25, r24
    8124:	90 83       	st	Z, r25
    8126:	f2 01       	movw	r30, r4
    8128:	e8 0f       	add	r30, r24
    812a:	f1 1d       	adc	r31, r1
    812c:	10 82       	st	Z, r1
    812e:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    8132:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    8136:	01 96       	adiw	r24, 0x01	; 1
    8138:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    813c:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    8140:	fb 01       	movw	r30, r22
    8142:	80 81       	ld	r24, Z
    8144:	91 e0       	ldi	r25, 0x01	; 1
    8146:	98 0f       	add	r25, r24
    8148:	90 83       	st	Z, r25
    814a:	f2 01       	movw	r30, r4
    814c:	e8 0f       	add	r30, r24
    814e:	f1 1d       	adc	r31, r1
    8150:	87 ec       	ldi	r24, 0xC7	; 199
    8152:	80 83       	st	Z, r24
    8154:	aa 24       	eor	r10, r10
    8156:	a3 94       	inc	r10
    8158:	cd 8c       	ldd	r12, Y+29	; 0x1d
    815a:	de 8c       	ldd	r13, Y+30	; 0x1e
    815c:	ef 8c       	ldd	r14, Y+31	; 0x1f
    815e:	f8 a0       	ldd	r15, Y+32	; 0x20
    8160:	82 01       	movw	r16, r4
    8162:	9b 01       	movw	r18, r22
    8164:	ae 01       	movw	r20, r28
    8166:	4f 5f       	subi	r20, 0xFF	; 255
    8168:	5f 4f       	sbci	r21, 0xFF	; 255
    816a:	69 a1       	ldd	r22, Y+33	; 0x21
    816c:	7a a1       	ldd	r23, Y+34	; 0x22
    816e:	85 e0       	ldi	r24, 0x05	; 5
    8170:	0e 94 87 2e 	call	0x5d0e	; 0x5d0e <filterbytes>
    8174:	ab 01       	movw	r20, r22
    8176:	bc 01       	movw	r22, r24
    8178:	f2 01       	movw	r30, r4
    817a:	eb 0d       	add	r30, r11
    817c:	f1 1d       	adc	r31, r1
    817e:	80 81       	ld	r24, Z
    8180:	99 81       	ldd	r25, Y+1	; 0x01
    8182:	89 2b       	or	r24, r25
    8184:	80 83       	st	Z, r24
    8186:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    818a:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    818e:	01 96       	adiw	r24, 0x01	; 1
    8190:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    8194:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    8198:	f3 01       	movw	r30, r6
    819a:	80 81       	ld	r24, Z
    819c:	91 e0       	ldi	r25, 0x01	; 1
    819e:	98 0f       	add	r25, r24
    81a0:	90 83       	st	Z, r25
    81a2:	f2 01       	movw	r30, r4
    81a4:	e8 0f       	add	r30, r24
    81a6:	f1 1d       	adc	r31, r1
    81a8:	10 82       	st	Z, r1
    81aa:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    81ae:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    81b2:	01 96       	adiw	r24, 0x01	; 1
    81b4:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    81b8:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    81bc:	f3 01       	movw	r30, r6
    81be:	80 81       	ld	r24, Z
    81c0:	91 e0       	ldi	r25, 0x01	; 1
    81c2:	98 0f       	add	r25, r24
    81c4:	90 83       	st	Z, r25
    81c6:	f2 01       	movw	r30, r4
    81c8:	e8 0f       	add	r30, r24
    81ca:	f1 1d       	adc	r31, r1
    81cc:	30 82       	st	Z, r3
    81ce:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    81d2:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    81d6:	04 96       	adiw	r24, 0x04	; 4
    81d8:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    81dc:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    81e0:	f3 01       	movw	r30, r6
    81e2:	80 81       	ld	r24, Z
    81e4:	91 e0       	ldi	r25, 0x01	; 1
    81e6:	98 0f       	add	r25, r24
    81e8:	90 83       	st	Z, r25
    81ea:	f2 01       	movw	r30, r4
    81ec:	e8 0f       	add	r30, r24
    81ee:	f1 1d       	adc	r31, r1
    81f0:	20 82       	st	Z, r2
    81f2:	f3 01       	movw	r30, r6
    81f4:	80 81       	ld	r24, Z
    81f6:	91 e0       	ldi	r25, 0x01	; 1
    81f8:	98 0f       	add	r25, r24
    81fa:	90 83       	st	Z, r25
    81fc:	f2 01       	movw	r30, r4
    81fe:	e8 0f       	add	r30, r24
    8200:	f1 1d       	adc	r31, r1
    8202:	08 85       	ldd	r16, Y+8	; 0x08
    8204:	00 83       	st	Z, r16
    8206:	f3 01       	movw	r30, r6
    8208:	80 81       	ld	r24, Z
    820a:	91 e0       	ldi	r25, 0x01	; 1
    820c:	98 0f       	add	r25, r24
    820e:	90 83       	st	Z, r25
    8210:	f2 01       	movw	r30, r4
    8212:	e8 0f       	add	r30, r24
    8214:	f1 1d       	adc	r31, r1
    8216:	0f 81       	ldd	r16, Y+7	; 0x07
    8218:	00 83       	st	Z, r16
    821a:	f3 01       	movw	r30, r6
    821c:	80 81       	ld	r24, Z
    821e:	91 e0       	ldi	r25, 0x01	; 1
    8220:	98 0f       	add	r25, r24
    8222:	90 83       	st	Z, r25
    8224:	f2 01       	movw	r30, r4
    8226:	e8 0f       	add	r30, r24
    8228:	f1 1d       	adc	r31, r1
    822a:	0e 81       	ldd	r16, Y+6	; 0x06
    822c:	00 83       	st	Z, r16
    822e:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    8232:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    8236:	01 96       	adiw	r24, 0x01	; 1
    8238:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    823c:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    8240:	f3 01       	movw	r30, r6
    8242:	80 81       	ld	r24, Z
    8244:	91 e0       	ldi	r25, 0x01	; 1
    8246:	98 0f       	add	r25, r24
    8248:	90 83       	st	Z, r25
    824a:	f2 01       	movw	r30, r4
    824c:	e8 0f       	add	r30, r24
    824e:	f1 1d       	adc	r31, r1
    8250:	0a 81       	ldd	r16, Y+2	; 0x02
    8252:	00 83       	st	Z, r16
    8254:	80 e0       	ldi	r24, 0x00	; 0
    8256:	90 e0       	ldi	r25, 0x00	; 0
    8258:	dc 01       	movw	r26, r24
    825a:	35 c0       	rjmp	.+106    	; 0x82c6 <TMR_SR_msgAddGEN2BlockWrite+0x2b0>
    825c:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    8260:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    8264:	2f 5f       	subi	r18, 0xFF	; 255
    8266:	3f 4f       	sbci	r19, 0xFF	; 255
    8268:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    826c:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    8270:	f3 01       	movw	r30, r6
    8272:	20 81       	ld	r18, Z
    8274:	31 e0       	ldi	r19, 0x01	; 1
    8276:	32 0f       	add	r19, r18
    8278:	30 83       	st	Z, r19
    827a:	82 01       	movw	r16, r4
    827c:	02 0f       	add	r16, r18
    827e:	11 1d       	adc	r17, r1
    8280:	fc 01       	movw	r30, r24
    8282:	ee 0f       	add	r30, r30
    8284:	ff 1f       	adc	r31, r31
    8286:	1f 01       	movw	r2, r30
    8288:	28 0c       	add	r2, r8
    828a:	39 1c       	adc	r3, r9
    828c:	f1 01       	movw	r30, r2
    828e:	b1 80       	ldd	r11, Z+1	; 0x01
    8290:	f8 01       	movw	r30, r16
    8292:	b0 82       	st	Z, r11
    8294:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    8298:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    829c:	2f 5f       	subi	r18, 0xFF	; 255
    829e:	3f 4f       	sbci	r19, 0xFF	; 255
    82a0:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    82a4:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    82a8:	f3 01       	movw	r30, r6
    82aa:	20 81       	ld	r18, Z
    82ac:	31 e0       	ldi	r19, 0x01	; 1
    82ae:	32 0f       	add	r19, r18
    82b0:	30 83       	st	Z, r19
    82b2:	82 01       	movw	r16, r4
    82b4:	02 0f       	add	r16, r18
    82b6:	11 1d       	adc	r17, r1
    82b8:	f1 01       	movw	r30, r2
    82ba:	b0 80       	ld	r11, Z
    82bc:	f8 01       	movw	r30, r16
    82be:	b0 82       	st	Z, r11
    82c0:	01 96       	adiw	r24, 0x01	; 1
    82c2:	a1 1d       	adc	r26, r1
    82c4:	b1 1d       	adc	r27, r1
    82c6:	0a 81       	ldd	r16, Y+2	; 0x02
    82c8:	1b 81       	ldd	r17, Y+3	; 0x03
    82ca:	2c 81       	ldd	r18, Y+4	; 0x04
    82cc:	3d 81       	ldd	r19, Y+5	; 0x05
    82ce:	80 17       	cp	r24, r16
    82d0:	91 07       	cpc	r25, r17
    82d2:	a2 07       	cpc	r26, r18
    82d4:	b3 07       	cpc	r27, r19
    82d6:	10 f2       	brcs	.-124    	; 0x825c <TMR_SR_msgAddGEN2BlockWrite+0x246>
    82d8:	cb 01       	movw	r24, r22
    82da:	ba 01       	movw	r22, r20
    82dc:	28 96       	adiw	r28, 0x08	; 8
    82de:	0f b6       	in	r0, 0x3f	; 63
    82e0:	f8 94       	cli
    82e2:	de bf       	out	0x3e, r29	; 62
    82e4:	0f be       	out	0x3f, r0	; 63
    82e6:	cd bf       	out	0x3d, r28	; 61
    82e8:	df 91       	pop	r29
    82ea:	cf 91       	pop	r28
    82ec:	1f 91       	pop	r17
    82ee:	0f 91       	pop	r16
    82f0:	ff 90       	pop	r15
    82f2:	ef 90       	pop	r14
    82f4:	df 90       	pop	r13
    82f6:	cf 90       	pop	r12
    82f8:	bf 90       	pop	r11
    82fa:	af 90       	pop	r10
    82fc:	9f 90       	pop	r9
    82fe:	8f 90       	pop	r8
    8300:	7f 90       	pop	r7
    8302:	6f 90       	pop	r6
    8304:	5f 90       	pop	r5
    8306:	4f 90       	pop	r4
    8308:	3f 90       	pop	r3
    830a:	2f 90       	pop	r2
    830c:	08 95       	ret

0000830e <TMR_SR_msgAddGEN2BlockPermaLock>:
    830e:	2f 92       	push	r2
    8310:	3f 92       	push	r3
    8312:	4f 92       	push	r4
    8314:	5f 92       	push	r5
    8316:	6f 92       	push	r6
    8318:	7f 92       	push	r7
    831a:	8f 92       	push	r8
    831c:	9f 92       	push	r9
    831e:	af 92       	push	r10
    8320:	bf 92       	push	r11
    8322:	cf 92       	push	r12
    8324:	df 92       	push	r13
    8326:	ef 92       	push	r14
    8328:	ff 92       	push	r15
    832a:	0f 93       	push	r16
    832c:	1f 93       	push	r17
    832e:	cf 93       	push	r28
    8330:	df 93       	push	r29
    8332:	cd b7       	in	r28, 0x3d	; 61
    8334:	de b7       	in	r29, 0x3e	; 62
    8336:	27 97       	sbiw	r28, 0x07	; 7
    8338:	0f b6       	in	r0, 0x3f	; 63
    833a:	f8 94       	cli
    833c:	de bf       	out	0x3e, r29	; 62
    833e:	0f be       	out	0x3f, r0	; 63
    8340:	cd bf       	out	0x3d, r28	; 61
    8342:	3c 01       	movw	r6, r24
    8344:	4b 01       	movw	r8, r22
    8346:	18 01       	movw	r2, r16
    8348:	29 01       	movw	r4, r18
    834a:	eb 82       	std	Y+3, r14	; 0x03
    834c:	ad 82       	std	Y+5, r10	; 0x05
    834e:	ce 82       	std	Y+6, r12	; 0x06
    8350:	df 82       	std	Y+7, r13	; 0x07
    8352:	8c 8d       	ldd	r24, Y+28	; 0x1c
    8354:	8c 83       	std	Y+4, r24	; 0x04
    8356:	19 82       	std	Y+1, r1	; 0x01
    8358:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    835c:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    8360:	01 96       	adiw	r24, 0x01	; 1
    8362:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    8366:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    836a:	fb 01       	movw	r30, r22
    836c:	80 81       	ld	r24, Z
    836e:	91 e0       	ldi	r25, 0x01	; 1
    8370:	98 0f       	add	r25, r24
    8372:	90 83       	st	Z, r25
    8374:	f3 01       	movw	r30, r6
    8376:	e8 0f       	add	r30, r24
    8378:	f1 1d       	adc	r31, r1
    837a:	8e e2       	ldi	r24, 0x2E	; 46
    837c:	80 83       	st	Z, r24
    837e:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    8382:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    8386:	02 96       	adiw	r24, 0x02	; 2
    8388:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    838c:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    8390:	fb 01       	movw	r30, r22
    8392:	80 81       	ld	r24, Z
    8394:	91 e0       	ldi	r25, 0x01	; 1
    8396:	98 0f       	add	r25, r24
    8398:	90 83       	st	Z, r25
    839a:	f3 01       	movw	r30, r6
    839c:	e8 0f       	add	r30, r24
    839e:	f1 1d       	adc	r31, r1
    83a0:	50 83       	st	Z, r21
    83a2:	fb 01       	movw	r30, r22
    83a4:	80 81       	ld	r24, Z
    83a6:	91 e0       	ldi	r25, 0x01	; 1
    83a8:	98 0f       	add	r25, r24
    83aa:	90 83       	st	Z, r25
    83ac:	f3 01       	movw	r30, r6
    83ae:	e8 0f       	add	r30, r24
    83b0:	f1 1d       	adc	r31, r1
    83b2:	40 83       	st	Z, r20
    83b4:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    83b8:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    83bc:	01 96       	adiw	r24, 0x01	; 1
    83be:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    83c2:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    83c6:	fb 01       	movw	r30, r22
    83c8:	80 81       	ld	r24, Z
    83ca:	91 e0       	ldi	r25, 0x01	; 1
    83cc:	98 0f       	add	r25, r24
    83ce:	90 83       	st	Z, r25
    83d0:	f3 01       	movw	r30, r6
    83d2:	e8 0f       	add	r30, r24
    83d4:	f1 1d       	adc	r31, r1
    83d6:	10 82       	st	Z, r1
    83d8:	fb 01       	movw	r30, r22
    83da:	f0 81       	ld	r31, Z
    83dc:	fa 83       	std	Y+2, r31	; 0x02
    83de:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    83e2:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    83e6:	01 96       	adiw	r24, 0x01	; 1
    83e8:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    83ec:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    83f0:	fb 01       	movw	r30, r22
    83f2:	80 81       	ld	r24, Z
    83f4:	91 e0       	ldi	r25, 0x01	; 1
    83f6:	98 0f       	add	r25, r24
    83f8:	90 83       	st	Z, r25
    83fa:	f3 01       	movw	r30, r6
    83fc:	e8 0f       	add	r30, r24
    83fe:	f1 1d       	adc	r31, r1
    8400:	80 e4       	ldi	r24, 0x40	; 64
    8402:	80 83       	st	Z, r24
    8404:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    8408:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    840c:	01 96       	adiw	r24, 0x01	; 1
    840e:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    8412:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    8416:	fb 01       	movw	r30, r22
    8418:	80 81       	ld	r24, Z
    841a:	91 e0       	ldi	r25, 0x01	; 1
    841c:	98 0f       	add	r25, r24
    841e:	90 83       	st	Z, r25
    8420:	f3 01       	movw	r30, r6
    8422:	e8 0f       	add	r30, r24
    8424:	f1 1d       	adc	r31, r1
    8426:	81 e0       	ldi	r24, 0x01	; 1
    8428:	80 83       	st	Z, r24
    842a:	aa 24       	eor	r10, r10
    842c:	a3 94       	inc	r10
    842e:	ca a0       	ldd	r12, Y+34	; 0x22
    8430:	db a0       	ldd	r13, Y+35	; 0x23
    8432:	ec a0       	ldd	r14, Y+36	; 0x24
    8434:	fd a0       	ldd	r15, Y+37	; 0x25
    8436:	83 01       	movw	r16, r6
    8438:	9b 01       	movw	r18, r22
    843a:	ae 01       	movw	r20, r28
    843c:	4f 5f       	subi	r20, 0xFF	; 255
    843e:	5f 4f       	sbci	r21, 0xFF	; 255
    8440:	6e a1       	ldd	r22, Y+38	; 0x26
    8442:	7f a1       	ldd	r23, Y+39	; 0x27
    8444:	85 e0       	ldi	r24, 0x05	; 5
    8446:	0e 94 87 2e 	call	0x5d0e	; 0x5d0e <filterbytes>
    844a:	ab 01       	movw	r20, r22
    844c:	bc 01       	movw	r22, r24
    844e:	f3 01       	movw	r30, r6
    8450:	8a 81       	ldd	r24, Y+2	; 0x02
    8452:	e8 0f       	add	r30, r24
    8454:	f1 1d       	adc	r31, r1
    8456:	80 81       	ld	r24, Z
    8458:	99 81       	ldd	r25, Y+1	; 0x01
    845a:	89 2b       	or	r24, r25
    845c:	80 83       	st	Z, r24
    845e:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    8462:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    8466:	01 96       	adiw	r24, 0x01	; 1
    8468:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    846c:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    8470:	f4 01       	movw	r30, r8
    8472:	80 81       	ld	r24, Z
    8474:	91 e0       	ldi	r25, 0x01	; 1
    8476:	98 0f       	add	r25, r24
    8478:	90 83       	st	Z, r25
    847a:	f3 01       	movw	r30, r6
    847c:	e8 0f       	add	r30, r24
    847e:	f1 1d       	adc	r31, r1
    8480:	10 82       	st	Z, r1
    8482:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    8486:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    848a:	01 96       	adiw	r24, 0x01	; 1
    848c:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    8490:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    8494:	f4 01       	movw	r30, r8
    8496:	80 81       	ld	r24, Z
    8498:	91 e0       	ldi	r25, 0x01	; 1
    849a:	98 0f       	add	r25, r24
    849c:	90 83       	st	Z, r25
    849e:	f3 01       	movw	r30, r6
    84a0:	e8 0f       	add	r30, r24
    84a2:	f1 1d       	adc	r31, r1
    84a4:	20 82       	st	Z, r2
    84a6:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    84aa:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    84ae:	01 96       	adiw	r24, 0x01	; 1
    84b0:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    84b4:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    84b8:	f4 01       	movw	r30, r8
    84ba:	80 81       	ld	r24, Z
    84bc:	91 e0       	ldi	r25, 0x01	; 1
    84be:	98 0f       	add	r25, r24
    84c0:	90 83       	st	Z, r25
    84c2:	f3 01       	movw	r30, r6
    84c4:	e8 0f       	add	r30, r24
    84c6:	f1 1d       	adc	r31, r1
    84c8:	8b 81       	ldd	r24, Y+3	; 0x03
    84ca:	80 83       	st	Z, r24
    84cc:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    84d0:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    84d4:	04 96       	adiw	r24, 0x04	; 4
    84d6:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    84da:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    84de:	f4 01       	movw	r30, r8
    84e0:	80 81       	ld	r24, Z
    84e2:	91 e0       	ldi	r25, 0x01	; 1
    84e4:	98 0f       	add	r25, r24
    84e6:	90 83       	st	Z, r25
    84e8:	f3 01       	movw	r30, r6
    84ea:	e8 0f       	add	r30, r24
    84ec:	f1 1d       	adc	r31, r1
    84ee:	8f 81       	ldd	r24, Y+7	; 0x07
    84f0:	80 83       	st	Z, r24
    84f2:	f4 01       	movw	r30, r8
    84f4:	80 81       	ld	r24, Z
    84f6:	91 e0       	ldi	r25, 0x01	; 1
    84f8:	98 0f       	add	r25, r24
    84fa:	90 83       	st	Z, r25
    84fc:	f3 01       	movw	r30, r6
    84fe:	e8 0f       	add	r30, r24
    8500:	f1 1d       	adc	r31, r1
    8502:	8e 81       	ldd	r24, Y+6	; 0x06
    8504:	80 83       	st	Z, r24
    8506:	f4 01       	movw	r30, r8
    8508:	80 81       	ld	r24, Z
    850a:	91 e0       	ldi	r25, 0x01	; 1
    850c:	98 0f       	add	r25, r24
    850e:	90 83       	st	Z, r25
    8510:	f3 01       	movw	r30, r6
    8512:	e8 0f       	add	r30, r24
    8514:	f1 1d       	adc	r31, r1
    8516:	b0 82       	st	Z, r11
    8518:	f4 01       	movw	r30, r8
    851a:	80 81       	ld	r24, Z
    851c:	91 e0       	ldi	r25, 0x01	; 1
    851e:	98 0f       	add	r25, r24
    8520:	90 83       	st	Z, r25
    8522:	f3 01       	movw	r30, r6
    8524:	e8 0f       	add	r30, r24
    8526:	f1 1d       	adc	r31, r1
    8528:	8d 81       	ldd	r24, Y+5	; 0x05
    852a:	80 83       	st	Z, r24
    852c:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    8530:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    8534:	01 96       	adiw	r24, 0x01	; 1
    8536:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    853a:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    853e:	f4 01       	movw	r30, r8
    8540:	80 81       	ld	r24, Z
    8542:	91 e0       	ldi	r25, 0x01	; 1
    8544:	98 0f       	add	r25, r24
    8546:	90 83       	st	Z, r25
    8548:	f3 01       	movw	r30, r6
    854a:	e8 0f       	add	r30, r24
    854c:	f1 1d       	adc	r31, r1
    854e:	8c 81       	ldd	r24, Y+4	; 0x04
    8550:	80 83       	st	Z, r24
    8552:	2a 94       	dec	r2
    8554:	23 28       	or	r2, r3
    8556:	24 28       	or	r2, r4
    8558:	25 28       	or	r2, r5
    855a:	f9 f4       	brne	.+62     	; 0x859a <TMR_SR_msgAddGEN2BlockPermaLock+0x28c>
    855c:	e8 a1       	ldd	r30, Y+32	; 0x20
    855e:	f9 a1       	ldd	r31, Y+33	; 0x21
    8560:	20 81       	ld	r18, Z
    8562:	31 81       	ldd	r19, Z+1	; 0x01
    8564:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    8568:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    856c:	02 96       	adiw	r24, 0x02	; 2
    856e:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    8572:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    8576:	f4 01       	movw	r30, r8
    8578:	80 81       	ld	r24, Z
    857a:	91 e0       	ldi	r25, 0x01	; 1
    857c:	98 0f       	add	r25, r24
    857e:	90 83       	st	Z, r25
    8580:	f3 01       	movw	r30, r6
    8582:	e8 0f       	add	r30, r24
    8584:	f1 1d       	adc	r31, r1
    8586:	30 83       	st	Z, r19
    8588:	f4 01       	movw	r30, r8
    858a:	80 81       	ld	r24, Z
    858c:	91 e0       	ldi	r25, 0x01	; 1
    858e:	98 0f       	add	r25, r24
    8590:	90 83       	st	Z, r25
    8592:	f3 01       	movw	r30, r6
    8594:	e8 0f       	add	r30, r24
    8596:	f1 1d       	adc	r31, r1
    8598:	20 83       	st	Z, r18
    859a:	cb 01       	movw	r24, r22
    859c:	ba 01       	movw	r22, r20
    859e:	27 96       	adiw	r28, 0x07	; 7
    85a0:	0f b6       	in	r0, 0x3f	; 63
    85a2:	f8 94       	cli
    85a4:	de bf       	out	0x3e, r29	; 62
    85a6:	0f be       	out	0x3f, r0	; 63
    85a8:	cd bf       	out	0x3d, r28	; 61
    85aa:	df 91       	pop	r29
    85ac:	cf 91       	pop	r28
    85ae:	1f 91       	pop	r17
    85b0:	0f 91       	pop	r16
    85b2:	ff 90       	pop	r15
    85b4:	ef 90       	pop	r14
    85b6:	df 90       	pop	r13
    85b8:	cf 90       	pop	r12
    85ba:	bf 90       	pop	r11
    85bc:	af 90       	pop	r10
    85be:	9f 90       	pop	r9
    85c0:	8f 90       	pop	r8
    85c2:	7f 90       	pop	r7
    85c4:	6f 90       	pop	r6
    85c6:	5f 90       	pop	r5
    85c8:	4f 90       	pop	r4
    85ca:	3f 90       	pop	r3
    85cc:	2f 90       	pop	r2
    85ce:	08 95       	ret

000085d0 <TMR_SR_msgAddGEN2BlockErase>:
    85d0:	2f 92       	push	r2
    85d2:	3f 92       	push	r3
    85d4:	4f 92       	push	r4
    85d6:	5f 92       	push	r5
    85d8:	6f 92       	push	r6
    85da:	7f 92       	push	r7
    85dc:	8f 92       	push	r8
    85de:	9f 92       	push	r9
    85e0:	af 92       	push	r10
    85e2:	bf 92       	push	r11
    85e4:	cf 92       	push	r12
    85e6:	df 92       	push	r13
    85e8:	ef 92       	push	r14
    85ea:	ff 92       	push	r15
    85ec:	0f 93       	push	r16
    85ee:	1f 93       	push	r17
    85f0:	cf 93       	push	r28
    85f2:	df 93       	push	r29
    85f4:	00 d0       	rcall	.+0      	; 0x85f6 <TMR_SR_msgAddGEN2BlockErase+0x26>
    85f6:	00 d0       	rcall	.+0      	; 0x85f8 <TMR_SR_msgAddGEN2BlockErase+0x28>
    85f8:	1f 92       	push	r1
    85fa:	cd b7       	in	r28, 0x3d	; 61
    85fc:	de b7       	in	r29, 0x3e	; 62
    85fe:	2c 01       	movw	r4, r24
    8600:	3b 01       	movw	r6, r22
    8602:	0c 83       	std	Y+4, r16	; 0x04
    8604:	1d 83       	std	Y+5, r17	; 0x05
    8606:	32 2e       	mov	r3, r18
    8608:	23 2e       	mov	r2, r19
    860a:	ea 82       	std	Y+2, r14	; 0x02
    860c:	cb 82       	std	Y+3, r12	; 0x03
    860e:	75 01       	movw	r14, r10
    8610:	64 01       	movw	r12, r8
    8612:	19 82       	std	Y+1, r1	; 0x01
    8614:	01 e0       	ldi	r16, 0x01	; 1
    8616:	9a 01       	movw	r18, r20
    8618:	4e e2       	ldi	r20, 0x2E	; 46
    861a:	0e 94 aa 36 	call	0x6d54	; 0x6d54 <TMR_SR_cmdFrameHeader>
    861e:	f3 01       	movw	r30, r6
    8620:	b0 80       	ld	r11, Z
    8622:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    8626:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    862a:	01 96       	adiw	r24, 0x01	; 1
    862c:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    8630:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    8634:	80 81       	ld	r24, Z
    8636:	91 e0       	ldi	r25, 0x01	; 1
    8638:	98 0f       	add	r25, r24
    863a:	90 83       	st	Z, r25
    863c:	f2 01       	movw	r30, r4
    863e:	e8 0f       	add	r30, r24
    8640:	f1 1d       	adc	r31, r1
    8642:	80 e4       	ldi	r24, 0x40	; 64
    8644:	80 83       	st	Z, r24
    8646:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    864a:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    864e:	01 96       	adiw	r24, 0x01	; 1
    8650:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    8654:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    8658:	f3 01       	movw	r30, r6
    865a:	80 81       	ld	r24, Z
    865c:	91 e0       	ldi	r25, 0x01	; 1
    865e:	98 0f       	add	r25, r24
    8660:	90 83       	st	Z, r25
    8662:	f2 01       	movw	r30, r4
    8664:	e8 0f       	add	r30, r24
    8666:	f1 1d       	adc	r31, r1
    8668:	10 82       	st	Z, r1
    866a:	aa 24       	eor	r10, r10
    866c:	a3 94       	inc	r10
    866e:	82 01       	movw	r16, r4
    8670:	93 01       	movw	r18, r6
    8672:	ae 01       	movw	r20, r28
    8674:	4f 5f       	subi	r20, 0xFF	; 255
    8676:	5f 4f       	sbci	r21, 0xFF	; 255
    8678:	6a 8d       	ldd	r22, Y+26	; 0x1a
    867a:	7b 8d       	ldd	r23, Y+27	; 0x1b
    867c:	85 e0       	ldi	r24, 0x05	; 5
    867e:	0e 94 87 2e 	call	0x5d0e	; 0x5d0e <filterbytes>
    8682:	f2 01       	movw	r30, r4
    8684:	eb 0d       	add	r30, r11
    8686:	f1 1d       	adc	r31, r1
    8688:	20 81       	ld	r18, Z
    868a:	39 81       	ldd	r19, Y+1	; 0x01
    868c:	23 2b       	or	r18, r19
    868e:	20 83       	st	Z, r18
    8690:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    8694:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    8698:	2c 5f       	subi	r18, 0xFC	; 252
    869a:	3f 4f       	sbci	r19, 0xFF	; 255
    869c:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    86a0:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    86a4:	f3 01       	movw	r30, r6
    86a6:	20 81       	ld	r18, Z
    86a8:	31 e0       	ldi	r19, 0x01	; 1
    86aa:	32 0f       	add	r19, r18
    86ac:	30 83       	st	Z, r19
    86ae:	f2 01       	movw	r30, r4
    86b0:	e2 0f       	add	r30, r18
    86b2:	f1 1d       	adc	r31, r1
    86b4:	20 82       	st	Z, r2
    86b6:	f3 01       	movw	r30, r6
    86b8:	20 81       	ld	r18, Z
    86ba:	31 e0       	ldi	r19, 0x01	; 1
    86bc:	32 0f       	add	r19, r18
    86be:	30 83       	st	Z, r19
    86c0:	f2 01       	movw	r30, r4
    86c2:	e2 0f       	add	r30, r18
    86c4:	f1 1d       	adc	r31, r1
    86c6:	30 82       	st	Z, r3
    86c8:	f3 01       	movw	r30, r6
    86ca:	20 81       	ld	r18, Z
    86cc:	31 e0       	ldi	r19, 0x01	; 1
    86ce:	32 0f       	add	r19, r18
    86d0:	30 83       	st	Z, r19
    86d2:	f2 01       	movw	r30, r4
    86d4:	e2 0f       	add	r30, r18
    86d6:	f1 1d       	adc	r31, r1
    86d8:	2d 81       	ldd	r18, Y+5	; 0x05
    86da:	20 83       	st	Z, r18
    86dc:	f3 01       	movw	r30, r6
    86de:	20 81       	ld	r18, Z
    86e0:	31 e0       	ldi	r19, 0x01	; 1
    86e2:	32 0f       	add	r19, r18
    86e4:	30 83       	st	Z, r19
    86e6:	f2 01       	movw	r30, r4
    86e8:	e2 0f       	add	r30, r18
    86ea:	f1 1d       	adc	r31, r1
    86ec:	2c 81       	ldd	r18, Y+4	; 0x04
    86ee:	20 83       	st	Z, r18
    86f0:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    86f4:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    86f8:	2f 5f       	subi	r18, 0xFF	; 255
    86fa:	3f 4f       	sbci	r19, 0xFF	; 255
    86fc:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    8700:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    8704:	f3 01       	movw	r30, r6
    8706:	20 81       	ld	r18, Z
    8708:	31 e0       	ldi	r19, 0x01	; 1
    870a:	32 0f       	add	r19, r18
    870c:	30 83       	st	Z, r19
    870e:	f2 01       	movw	r30, r4
    8710:	e2 0f       	add	r30, r18
    8712:	f1 1d       	adc	r31, r1
    8714:	2a 81       	ldd	r18, Y+2	; 0x02
    8716:	20 83       	st	Z, r18
    8718:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    871c:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    8720:	2f 5f       	subi	r18, 0xFF	; 255
    8722:	3f 4f       	sbci	r19, 0xFF	; 255
    8724:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    8728:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    872c:	f3 01       	movw	r30, r6
    872e:	20 81       	ld	r18, Z
    8730:	31 e0       	ldi	r19, 0x01	; 1
    8732:	32 0f       	add	r19, r18
    8734:	30 83       	st	Z, r19
    8736:	f2 01       	movw	r30, r4
    8738:	e2 0f       	add	r30, r18
    873a:	f1 1d       	adc	r31, r1
    873c:	2b 81       	ldd	r18, Y+3	; 0x03
    873e:	20 83       	st	Z, r18
    8740:	0f 90       	pop	r0
    8742:	0f 90       	pop	r0
    8744:	0f 90       	pop	r0
    8746:	0f 90       	pop	r0
    8748:	0f 90       	pop	r0
    874a:	df 91       	pop	r29
    874c:	cf 91       	pop	r28
    874e:	1f 91       	pop	r17
    8750:	0f 91       	pop	r16
    8752:	ff 90       	pop	r15
    8754:	ef 90       	pop	r14
    8756:	df 90       	pop	r13
    8758:	cf 90       	pop	r12
    875a:	bf 90       	pop	r11
    875c:	af 90       	pop	r10
    875e:	9f 90       	pop	r9
    8760:	8f 90       	pop	r8
    8762:	7f 90       	pop	r7
    8764:	6f 90       	pop	r6
    8766:	5f 90       	pop	r5
    8768:	4f 90       	pop	r4
    876a:	3f 90       	pop	r3
    876c:	2f 90       	pop	r2
    876e:	08 95       	ret

00008770 <TMR_SR_cmdClearTagBuffer>:
    8770:	cf 93       	push	r28
    8772:	df 93       	push	r29
    8774:	cd b7       	in	r28, 0x3d	; 61
    8776:	de b7       	in	r29, 0x3e	; 62
    8778:	da 95       	dec	r29
    877a:	0f b6       	in	r0, 0x3f	; 63
    877c:	f8 94       	cli
    877e:	de bf       	out	0x3e, r29	; 62
    8780:	0f be       	out	0x3f, r0	; 63
    8782:	cd bf       	out	0x3d, r28	; 61
    8784:	4a e2       	ldi	r20, 0x2A	; 42
    8786:	be 01       	movw	r22, r28
    8788:	6f 5f       	subi	r22, 0xFF	; 255
    878a:	7f 4f       	sbci	r23, 0xFF	; 255
    878c:	0e 94 9b 36 	call	0x6d36	; 0x6d36 <TMR_SR_callSendCmd>
    8790:	d3 95       	inc	r29
    8792:	0f b6       	in	r0, 0x3f	; 63
    8794:	f8 94       	cli
    8796:	de bf       	out	0x3e, r29	; 62
    8798:	0f be       	out	0x3f, r0	; 63
    879a:	cd bf       	out	0x3d, r28	; 61
    879c:	df 91       	pop	r29
    879e:	cf 91       	pop	r28
    87a0:	08 95       	ret

000087a2 <TMR_SR_cmdGetTagsRemaining>:
    87a2:	0f 93       	push	r16
    87a4:	1f 93       	push	r17
    87a6:	cf 93       	push	r28
    87a8:	df 93       	push	r29
    87aa:	cd b7       	in	r28, 0x3d	; 61
    87ac:	de b7       	in	r29, 0x3e	; 62
    87ae:	da 95       	dec	r29
    87b0:	0f b6       	in	r0, 0x3f	; 63
    87b2:	f8 94       	cli
    87b4:	de bf       	out	0x3e, r29	; 62
    87b6:	0f be       	out	0x3f, r0	; 63
    87b8:	cd bf       	out	0x3d, r28	; 61
    87ba:	8b 01       	movw	r16, r22
    87bc:	49 e2       	ldi	r20, 0x29	; 41
    87be:	be 01       	movw	r22, r28
    87c0:	6f 5f       	subi	r22, 0xFF	; 255
    87c2:	7f 4f       	sbci	r23, 0xFF	; 255
    87c4:	0e 94 9b 36 	call	0x6d36	; 0x6d36 <TMR_SR_callSendCmd>
    87c8:	61 15       	cp	r22, r1
    87ca:	71 05       	cpc	r23, r1
    87cc:	81 05       	cpc	r24, r1
    87ce:	91 05       	cpc	r25, r1
    87d0:	b1 f4       	brne	.+44     	; 0x87fe <TMR_SR_cmdGetTagsRemaining+0x5c>
    87d2:	88 85       	ldd	r24, Y+8	; 0x08
    87d4:	90 e0       	ldi	r25, 0x00	; 0
    87d6:	98 2f       	mov	r25, r24
    87d8:	88 27       	eor	r24, r24
    87da:	29 85       	ldd	r18, Y+9	; 0x09
    87dc:	82 2b       	or	r24, r18
    87de:	2e 81       	ldd	r18, Y+6	; 0x06
    87e0:	30 e0       	ldi	r19, 0x00	; 0
    87e2:	32 2f       	mov	r19, r18
    87e4:	22 27       	eor	r18, r18
    87e6:	4f 81       	ldd	r20, Y+7	; 0x07
    87e8:	24 2b       	or	r18, r20
    87ea:	82 1b       	sub	r24, r18
    87ec:	93 0b       	sbc	r25, r19
    87ee:	f8 01       	movw	r30, r16
    87f0:	91 83       	std	Z+1, r25	; 0x01
    87f2:	80 83       	st	Z, r24
    87f4:	40 e0       	ldi	r20, 0x00	; 0
    87f6:	30 e0       	ldi	r19, 0x00	; 0
    87f8:	20 e0       	ldi	r18, 0x00	; 0
    87fa:	90 e0       	ldi	r25, 0x00	; 0
    87fc:	03 c0       	rjmp	.+6      	; 0x8804 <TMR_SR_cmdGetTagsRemaining+0x62>
    87fe:	46 2f       	mov	r20, r22
    8800:	37 2f       	mov	r19, r23
    8802:	28 2f       	mov	r18, r24
    8804:	64 2f       	mov	r22, r20
    8806:	73 2f       	mov	r23, r19
    8808:	82 2f       	mov	r24, r18
    880a:	d3 95       	inc	r29
    880c:	0f b6       	in	r0, 0x3f	; 63
    880e:	f8 94       	cli
    8810:	de bf       	out	0x3e, r29	; 62
    8812:	0f be       	out	0x3f, r0	; 63
    8814:	cd bf       	out	0x3d, r28	; 61
    8816:	df 91       	pop	r29
    8818:	cf 91       	pop	r28
    881a:	1f 91       	pop	r17
    881c:	0f 91       	pop	r16
    881e:	08 95       	ret

00008820 <extractGen2MemoryBankValues>:
    8820:	bf 92       	push	r11
    8822:	cf 92       	push	r12
    8824:	df 92       	push	r13
    8826:	ef 92       	push	r14
    8828:	ff 92       	push	r15
    882a:	0f 93       	push	r16
    882c:	1f 93       	push	r17
    882e:	cf 93       	push	r28
    8830:	df 93       	push	r29
    8832:	7c 01       	movw	r14, r24
    8834:	fc 01       	movw	r30, r24
    8836:	e0 55       	subi	r30, 0x50	; 80
    8838:	ff 4f       	sbci	r31, 0xFF	; 255
    883a:	c0 80       	ld	r12, Z
    883c:	d1 80       	ldd	r13, Z+1	; 0x01
    883e:	d6 94       	lsr	r13
    8840:	c7 94       	ror	r12
    8842:	d6 94       	lsr	r13
    8844:	c7 94       	ror	r12
    8846:	d6 94       	lsr	r13
    8848:	c7 94       	ror	r12
    884a:	00 e0       	ldi	r16, 0x00	; 0
    884c:	10 e0       	ldi	r17, 0x00	; 0
    884e:	b1 2c       	mov	r11, r1
    8850:	4d c0       	rjmp	.+154    	; 0x88ec <extractGen2MemoryBankValues+0xcc>
    8852:	2b 2d       	mov	r18, r11
    8854:	30 e0       	ldi	r19, 0x00	; 0
    8856:	2c 15       	cp	r18, r12
    8858:	3d 05       	cpc	r19, r13
    885a:	08 f0       	brcs	.+2      	; 0x885e <extractGen2MemoryBankValues+0x3e>
    885c:	4f c0       	rjmp	.+158    	; 0x88fc <extractGen2MemoryBankValues+0xdc>
    885e:	f7 01       	movw	r30, r14
    8860:	e4 55       	subi	r30, 0x54	; 84
    8862:	ff 4f       	sbci	r31, 0xFF	; 255
    8864:	01 90       	ld	r0, Z+
    8866:	f0 81       	ld	r31, Z
    8868:	e0 2d       	mov	r30, r0
    886a:	e2 0f       	add	r30, r18
    886c:	f3 1f       	adc	r31, r19
    886e:	80 81       	ld	r24, Z
    8870:	82 95       	swap	r24
    8872:	8f 70       	andi	r24, 0x0F	; 15
    8874:	c1 81       	ldd	r28, Z+1	; 0x01
    8876:	d0 e0       	ldi	r29, 0x00	; 0
    8878:	cc 0f       	add	r28, r28
    887a:	dd 1f       	adc	r29, r29
    887c:	ae 01       	movw	r20, r28
    887e:	81 30       	cpi	r24, 0x01	; 1
    8880:	31 f0       	breq	.+12     	; 0x888e <extractGen2MemoryBankValues+0x6e>
    8882:	48 f0       	brcs	.+18     	; 0x8896 <extractGen2MemoryBankValues+0x76>
    8884:	82 30       	cpi	r24, 0x02	; 2
    8886:	59 f0       	breq	.+22     	; 0x889e <extractGen2MemoryBankValues+0x7e>
    8888:	83 30       	cpi	r24, 0x03	; 3
    888a:	69 f0       	breq	.+26     	; 0x88a6 <extractGen2MemoryBankValues+0x86>
    888c:	0f c0       	rjmp	.+30     	; 0x88ac <extractGen2MemoryBankValues+0x8c>
    888e:	87 01       	movw	r16, r14
    8890:	0e 54       	subi	r16, 0x4E	; 78
    8892:	1f 4f       	sbci	r17, 0xFF	; 255
    8894:	0b c0       	rjmp	.+22     	; 0x88ac <extractGen2MemoryBankValues+0x8c>
    8896:	87 01       	movw	r16, r14
    8898:	0c 53       	subi	r16, 0x3C	; 60
    889a:	1f 4f       	sbci	r17, 0xFF	; 255
    889c:	07 c0       	rjmp	.+14     	; 0x88ac <extractGen2MemoryBankValues+0x8c>
    889e:	87 01       	movw	r16, r14
    88a0:	08 54       	subi	r16, 0x48	; 72
    88a2:	1f 4f       	sbci	r17, 0xFF	; 255
    88a4:	03 c0       	rjmp	.+6      	; 0x88ac <extractGen2MemoryBankValues+0x8c>
    88a6:	87 01       	movw	r16, r14
    88a8:	02 54       	subi	r16, 0x42	; 66
    88aa:	1f 4f       	sbci	r17, 0xFF	; 255
    88ac:	01 15       	cp	r16, r1
    88ae:	11 05       	cpc	r17, r1
    88b0:	c1 f0       	breq	.+48     	; 0x88e2 <extractGen2MemoryBankValues+0xc2>
    88b2:	f8 01       	movw	r30, r16
    88b4:	d5 83       	std	Z+5, r29	; 0x05
    88b6:	c4 83       	std	Z+4, r28	; 0x04
    88b8:	82 81       	ldd	r24, Z+2	; 0x02
    88ba:	93 81       	ldd	r25, Z+3	; 0x03
    88bc:	84 17       	cp	r24, r20
    88be:	95 07       	cpc	r25, r21
    88c0:	08 f1       	brcs	.+66     	; 0x8904 <extractGen2MemoryBankValues+0xe4>
    88c2:	80 81       	ld	r24, Z
    88c4:	91 81       	ldd	r25, Z+1	; 0x01
    88c6:	00 97       	sbiw	r24, 0x00	; 0
    88c8:	61 f0       	breq	.+24     	; 0x88e2 <extractGen2MemoryBankValues+0xc2>
    88ca:	f7 01       	movw	r30, r14
    88cc:	e4 55       	subi	r30, 0x54	; 84
    88ce:	ff 4f       	sbci	r31, 0xFF	; 255
    88d0:	60 81       	ld	r22, Z
    88d2:	71 81       	ldd	r23, Z+1	; 0x01
    88d4:	2e 5f       	subi	r18, 0xFE	; 254
    88d6:	3f 4f       	sbci	r19, 0xFF	; 255
    88d8:	62 0f       	add	r22, r18
    88da:	73 1f       	adc	r23, r19
    88dc:	ae 01       	movw	r20, r28
    88de:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    88e2:	cb 0d       	add	r28, r11
    88e4:	68 94       	set
    88e6:	bb 24       	eor	r11, r11
    88e8:	b1 f8       	bld	r11, 1
    88ea:	bc 0e       	add	r11, r28
    88ec:	c1 14       	cp	r12, r1
    88ee:	d1 04       	cpc	r13, r1
    88f0:	09 f0       	breq	.+2      	; 0x88f4 <extractGen2MemoryBankValues+0xd4>
    88f2:	af cf       	rjmp	.-162    	; 0x8852 <extractGen2MemoryBankValues+0x32>
    88f4:	60 e0       	ldi	r22, 0x00	; 0
    88f6:	70 e0       	ldi	r23, 0x00	; 0
    88f8:	cb 01       	movw	r24, r22
    88fa:	08 c0       	rjmp	.+16     	; 0x890c <extractGen2MemoryBankValues+0xec>
    88fc:	60 e0       	ldi	r22, 0x00	; 0
    88fe:	70 e0       	ldi	r23, 0x00	; 0
    8900:	cb 01       	movw	r24, r22
    8902:	04 c0       	rjmp	.+8      	; 0x890c <extractGen2MemoryBankValues+0xec>
    8904:	6c e0       	ldi	r22, 0x0C	; 12
    8906:	70 e0       	ldi	r23, 0x00	; 0
    8908:	80 e0       	ldi	r24, 0x00	; 0
    890a:	93 e0       	ldi	r25, 0x03	; 3
    890c:	df 91       	pop	r29
    890e:	cf 91       	pop	r28
    8910:	1f 91       	pop	r17
    8912:	0f 91       	pop	r16
    8914:	ff 90       	pop	r15
    8916:	ef 90       	pop	r14
    8918:	df 90       	pop	r13
    891a:	cf 90       	pop	r12
    891c:	bf 90       	pop	r11
    891e:	08 95       	ret

00008920 <TMR_SR_parseMetadataOnly>:
    8920:	6f 92       	push	r6
    8922:	7f 92       	push	r7
    8924:	8f 92       	push	r8
    8926:	9f 92       	push	r9
    8928:	af 92       	push	r10
    892a:	bf 92       	push	r11
    892c:	cf 92       	push	r12
    892e:	df 92       	push	r13
    8930:	ef 92       	push	r14
    8932:	ff 92       	push	r15
    8934:	0f 93       	push	r16
    8936:	1f 93       	push	r17
    8938:	cf 93       	push	r28
    893a:	df 93       	push	r29
    893c:	cd b7       	in	r28, 0x3d	; 61
    893e:	de b7       	in	r29, 0x3e	; 62
    8940:	28 97       	sbiw	r28, 0x08	; 8
    8942:	0f b6       	in	r0, 0x3f	; 63
    8944:	f8 94       	cli
    8946:	de bf       	out	0x3e, r29	; 62
    8948:	0f be       	out	0x3f, r0	; 63
    894a:	cd bf       	out	0x3d, r28	; 61
    894c:	4c 01       	movw	r8, r24
    894e:	7b 01       	movw	r14, r22
    8950:	6a 01       	movw	r12, r20
    8952:	59 01       	movw	r10, r18
    8954:	fb 01       	movw	r30, r22
    8956:	e0 5b       	subi	r30, 0xB0	; 176
    8958:	ff 4f       	sbci	r31, 0xFF	; 255
    895a:	51 83       	std	Z+1, r21	; 0x01
    895c:	40 83       	st	Z, r20
    895e:	eb 5b       	subi	r30, 0xBB	; 187
    8960:	ff 4f       	sbci	r31, 0xFF	; 255
    8962:	10 82       	st	Z, r1
    8964:	e1 54       	subi	r30, 0x41	; 65
    8966:	f1 09       	sbc	r31, r1
    8968:	10 82       	st	Z, r1
    896a:	ea 58       	subi	r30, 0x8A	; 138
    896c:	ff 4f       	sbci	r31, 0xFF	; 255
    896e:	10 82       	st	Z, r1
    8970:	11 82       	std	Z+1, r1	; 0x01
    8972:	12 82       	std	Z+2, r1	; 0x02
    8974:	13 82       	std	Z+3, r1	; 0x03
    8976:	fc 01       	movw	r30, r24
    8978:	e7 5e       	subi	r30, 0xE7	; 231
    897a:	f9 4f       	sbci	r31, 0xF9	; 249
    897c:	51 83       	std	Z+1, r21	; 0x01
    897e:	40 83       	st	Z, r20
    8980:	40 ff       	sbrs	r20, 0
    8982:	13 c0       	rjmp	.+38     	; 0x89aa <TMR_SR_parseMetadataOnly+0x8a>
    8984:	f9 01       	movw	r30, r18
    8986:	80 81       	ld	r24, Z
    8988:	91 e0       	ldi	r25, 0x01	; 1
    898a:	98 0f       	add	r25, r24
    898c:	90 83       	st	Z, r25
    898e:	f8 01       	movw	r30, r16
    8990:	e8 0f       	add	r30, r24
    8992:	f1 1d       	adc	r31, r1
    8994:	80 81       	ld	r24, Z
    8996:	fb 01       	movw	r30, r22
    8998:	ea 56       	subi	r30, 0x6A	; 106
    899a:	ff 4f       	sbci	r31, 0xFF	; 255
    899c:	90 e0       	ldi	r25, 0x00	; 0
    899e:	a0 e0       	ldi	r26, 0x00	; 0
    89a0:	b0 e0       	ldi	r27, 0x00	; 0
    89a2:	80 83       	st	Z, r24
    89a4:	91 83       	std	Z+1, r25	; 0x01
    89a6:	a2 83       	std	Z+2, r26	; 0x02
    89a8:	b3 83       	std	Z+3, r27	; 0x03
    89aa:	c1 fe       	sbrs	r12, 1
    89ac:	15 c0       	rjmp	.+42     	; 0x89d8 <TMR_SR_parseMetadataOnly+0xb8>
    89ae:	f5 01       	movw	r30, r10
    89b0:	80 81       	ld	r24, Z
    89b2:	91 e0       	ldi	r25, 0x01	; 1
    89b4:	98 0f       	add	r25, r24
    89b6:	90 83       	st	Z, r25
    89b8:	f8 01       	movw	r30, r16
    89ba:	e8 0f       	add	r30, r24
    89bc:	f1 1d       	adc	r31, r1
    89be:	80 81       	ld	r24, Z
    89c0:	f7 01       	movw	r30, r14
    89c2:	e6 56       	subi	r30, 0x66	; 102
    89c4:	ff 4f       	sbci	r31, 0xFF	; 255
    89c6:	08 2e       	mov	r0, r24
    89c8:	00 0c       	add	r0, r0
    89ca:	99 0b       	sbc	r25, r25
    89cc:	aa 0b       	sbc	r26, r26
    89ce:	bb 0b       	sbc	r27, r27
    89d0:	80 83       	st	Z, r24
    89d2:	91 83       	std	Z+1, r25	; 0x01
    89d4:	a2 83       	std	Z+2, r26	; 0x02
    89d6:	b3 83       	std	Z+3, r27	; 0x03
    89d8:	c2 fe       	sbrs	r12, 2
    89da:	0d c0       	rjmp	.+26     	; 0x89f6 <TMR_SR_parseMetadataOnly+0xd6>
    89dc:	f5 01       	movw	r30, r10
    89de:	80 81       	ld	r24, Z
    89e0:	91 e0       	ldi	r25, 0x01	; 1
    89e2:	98 0f       	add	r25, r24
    89e4:	90 83       	st	Z, r25
    89e6:	f8 01       	movw	r30, r16
    89e8:	e8 0f       	add	r30, r24
    89ea:	f1 1d       	adc	r31, r1
    89ec:	80 81       	ld	r24, Z
    89ee:	f7 01       	movw	r30, r14
    89f0:	ec 5a       	subi	r30, 0xAC	; 172
    89f2:	ff 4f       	sbci	r31, 0xFF	; 255
    89f4:	80 83       	st	Z, r24
    89f6:	c3 fe       	sbrs	r12, 3
    89f8:	28 c0       	rjmp	.+80     	; 0x8a4a <TMR_SR_parseMetadataOnly+0x12a>
    89fa:	f5 01       	movw	r30, r10
    89fc:	80 81       	ld	r24, Z
    89fe:	8d 5f       	subi	r24, 0xFD	; 253
    8a00:	80 83       	st	Z, r24
    8a02:	98 01       	movw	r18, r16
    8a04:	28 0f       	add	r18, r24
    8a06:	31 1d       	adc	r19, r1
    8a08:	f9 01       	movw	r30, r18
    8a0a:	33 97       	sbiw	r30, 0x03	; 3
    8a0c:	80 81       	ld	r24, Z
    8a0e:	90 e0       	ldi	r25, 0x00	; 0
    8a10:	a0 e0       	ldi	r26, 0x00	; 0
    8a12:	b0 e0       	ldi	r27, 0x00	; 0
    8a14:	bc 01       	movw	r22, r24
    8a16:	55 27       	eor	r21, r21
    8a18:	44 27       	eor	r20, r20
    8a1a:	31 96       	adiw	r30, 0x01	; 1
    8a1c:	90 81       	ld	r25, Z
    8a1e:	89 2f       	mov	r24, r25
    8a20:	90 e0       	ldi	r25, 0x00	; 0
    8a22:	a0 e0       	ldi	r26, 0x00	; 0
    8a24:	b0 e0       	ldi	r27, 0x00	; 0
    8a26:	ba 2f       	mov	r27, r26
    8a28:	a9 2f       	mov	r26, r25
    8a2a:	98 2f       	mov	r25, r24
    8a2c:	88 27       	eor	r24, r24
    8a2e:	84 2b       	or	r24, r20
    8a30:	95 2b       	or	r25, r21
    8a32:	a6 2b       	or	r26, r22
    8a34:	b7 2b       	or	r27, r23
    8a36:	31 96       	adiw	r30, 0x01	; 1
    8a38:	20 81       	ld	r18, Z
    8a3a:	82 2b       	or	r24, r18
    8a3c:	f7 01       	movw	r30, r14
    8a3e:	e2 56       	subi	r30, 0x62	; 98
    8a40:	ff 4f       	sbci	r31, 0xFF	; 255
    8a42:	80 83       	st	Z, r24
    8a44:	91 83       	std	Z+1, r25	; 0x01
    8a46:	a2 83       	std	Z+2, r26	; 0x02
    8a48:	b3 83       	std	Z+3, r27	; 0x03
    8a4a:	c4 fe       	sbrs	r12, 4
    8a4c:	35 c0       	rjmp	.+106    	; 0x8ab8 <TMR_SR_parseMetadataOnly+0x198>
    8a4e:	f5 01       	movw	r30, r10
    8a50:	80 81       	ld	r24, Z
    8a52:	8c 5f       	subi	r24, 0xFC	; 252
    8a54:	80 83       	st	Z, r24
    8a56:	98 01       	movw	r18, r16
    8a58:	28 0f       	add	r18, r24
    8a5a:	31 1d       	adc	r19, r1
    8a5c:	f9 01       	movw	r30, r18
    8a5e:	34 97       	sbiw	r30, 0x04	; 4
    8a60:	80 81       	ld	r24, Z
    8a62:	90 e0       	ldi	r25, 0x00	; 0
    8a64:	a0 e0       	ldi	r26, 0x00	; 0
    8a66:	b0 e0       	ldi	r27, 0x00	; 0
    8a68:	78 2f       	mov	r23, r24
    8a6a:	66 27       	eor	r22, r22
    8a6c:	55 27       	eor	r21, r21
    8a6e:	44 27       	eor	r20, r20
    8a70:	31 96       	adiw	r30, 0x01	; 1
    8a72:	90 81       	ld	r25, Z
    8a74:	89 2f       	mov	r24, r25
    8a76:	90 e0       	ldi	r25, 0x00	; 0
    8a78:	a0 e0       	ldi	r26, 0x00	; 0
    8a7a:	b0 e0       	ldi	r27, 0x00	; 0
    8a7c:	dc 01       	movw	r26, r24
    8a7e:	99 27       	eor	r25, r25
    8a80:	88 27       	eor	r24, r24
    8a82:	84 2b       	or	r24, r20
    8a84:	95 2b       	or	r25, r21
    8a86:	a6 2b       	or	r26, r22
    8a88:	b7 2b       	or	r27, r23
    8a8a:	31 96       	adiw	r30, 0x01	; 1
    8a8c:	40 81       	ld	r20, Z
    8a8e:	50 e0       	ldi	r21, 0x00	; 0
    8a90:	60 e0       	ldi	r22, 0x00	; 0
    8a92:	70 e0       	ldi	r23, 0x00	; 0
    8a94:	76 2f       	mov	r23, r22
    8a96:	65 2f       	mov	r22, r21
    8a98:	54 2f       	mov	r21, r20
    8a9a:	44 27       	eor	r20, r20
    8a9c:	84 2b       	or	r24, r20
    8a9e:	95 2b       	or	r25, r21
    8aa0:	a6 2b       	or	r26, r22
    8aa2:	b7 2b       	or	r27, r23
    8aa4:	31 96       	adiw	r30, 0x01	; 1
    8aa6:	20 81       	ld	r18, Z
    8aa8:	82 2b       	or	r24, r18
    8aaa:	f7 01       	movw	r30, r14
    8aac:	e6 53       	subi	r30, 0x36	; 54
    8aae:	ff 4f       	sbci	r31, 0xFF	; 255
    8ab0:	80 83       	st	Z, r24
    8ab2:	91 83       	std	Z+1, r25	; 0x01
    8ab4:	a2 83       	std	Z+2, r26	; 0x02
    8ab6:	b3 83       	std	Z+3, r27	; 0x03
    8ab8:	c5 fe       	sbrs	r12, 5
    8aba:	15 c0       	rjmp	.+42     	; 0x8ae6 <TMR_SR_parseMetadataOnly+0x1c6>
    8abc:	f5 01       	movw	r30, r10
    8abe:	80 81       	ld	r24, Z
    8ac0:	8e 5f       	subi	r24, 0xFE	; 254
    8ac2:	80 83       	st	Z, r24
    8ac4:	98 01       	movw	r18, r16
    8ac6:	28 0f       	add	r18, r24
    8ac8:	31 1d       	adc	r19, r1
    8aca:	f9 01       	movw	r30, r18
    8acc:	32 97       	sbiw	r30, 0x02	; 2
    8ace:	80 81       	ld	r24, Z
    8ad0:	90 e0       	ldi	r25, 0x00	; 0
    8ad2:	98 2f       	mov	r25, r24
    8ad4:	88 27       	eor	r24, r24
    8ad6:	31 96       	adiw	r30, 0x01	; 1
    8ad8:	20 81       	ld	r18, Z
    8ada:	82 2b       	or	r24, r18
    8adc:	f7 01       	movw	r30, r14
    8ade:	ee 5a       	subi	r30, 0xAE	; 174
    8ae0:	ff 4f       	sbci	r31, 0xFF	; 255
    8ae2:	91 83       	std	Z+1, r25	; 0x01
    8ae4:	80 83       	st	Z, r24
    8ae6:	c6 fe       	sbrs	r12, 6
    8ae8:	0b c0       	rjmp	.+22     	; 0x8b00 <TMR_SR_parseMetadataOnly+0x1e0>
    8aea:	f5 01       	movw	r30, r10
    8aec:	80 81       	ld	r24, Z
    8aee:	91 e0       	ldi	r25, 0x01	; 1
    8af0:	98 0f       	add	r25, r24
    8af2:	90 83       	st	Z, r25
    8af4:	f8 01       	movw	r30, r16
    8af6:	e8 0f       	add	r30, r24
    8af8:	f1 1d       	adc	r31, r1
    8afa:	80 81       	ld	r24, Z
    8afc:	f7 01       	movw	r30, r14
    8afe:	86 af       	std	Z+62, r24	; 0x3e
    8b00:	c7 fe       	sbrs	r12, 7
    8b02:	57 c0       	rjmp	.+174    	; 0x8bb2 <TMR_SR_parseMetadataOnly+0x292>
    8b04:	f4 01       	movw	r30, r8
    8b06:	ea 58       	subi	r30, 0x8A	; 138
    8b08:	ff 4f       	sbci	r31, 0xFF	; 255
    8b0a:	80 81       	ld	r24, Z
    8b0c:	88 23       	and	r24, r24
    8b0e:	31 f0       	breq	.+12     	; 0x8b1c <TMR_SR_parseMetadataOnly+0x1fc>
    8b10:	81 e0       	ldi	r24, 0x01	; 1
    8b12:	90 e0       	ldi	r25, 0x00	; 0
    8b14:	e3 5b       	subi	r30, 0xB3	; 179
    8b16:	fa 4f       	sbci	r31, 0xFA	; 250
    8b18:	91 83       	std	Z+1, r25	; 0x01
    8b1a:	80 83       	st	Z, r24
    8b1c:	f5 01       	movw	r30, r10
    8b1e:	80 81       	ld	r24, Z
    8b20:	8e 5f       	subi	r24, 0xFE	; 254
    8b22:	80 83       	st	Z, r24
    8b24:	98 01       	movw	r18, r16
    8b26:	28 0f       	add	r18, r24
    8b28:	31 1d       	adc	r19, r1
    8b2a:	f9 01       	movw	r30, r18
    8b2c:	32 97       	sbiw	r30, 0x02	; 2
    8b2e:	80 81       	ld	r24, Z
    8b30:	90 e0       	ldi	r25, 0x00	; 0
    8b32:	98 2f       	mov	r25, r24
    8b34:	88 27       	eor	r24, r24
    8b36:	31 96       	adiw	r30, 0x01	; 1
    8b38:	20 81       	ld	r18, Z
    8b3a:	82 2b       	or	r24, r18
    8b3c:	f7 01       	movw	r30, r14
    8b3e:	e0 55       	subi	r30, 0x50	; 80
    8b40:	ff 4f       	sbci	r31, 0xFF	; 255
    8b42:	91 83       	std	Z+1, r25	; 0x01
    8b44:	80 83       	st	Z, r24
    8b46:	0e 94 9e 6a 	call	0xd53c	; 0xd53c <tm_u8s_per_bits>
    8b4a:	3c 01       	movw	r6, r24
    8b4c:	f7 01       	movw	r30, r14
    8b4e:	e2 55       	subi	r30, 0x52	; 82
    8b50:	ff 4f       	sbci	r31, 0xFF	; 255
    8b52:	80 81       	ld	r24, Z
    8b54:	91 81       	ldd	r25, Z+1	; 0x01
    8b56:	86 15       	cp	r24, r6
    8b58:	97 05       	cpc	r25, r7
    8b5a:	28 f4       	brcc	.+10     	; 0x8b66 <TMR_SR_parseMetadataOnly+0x246>
    8b5c:	61 14       	cp	r6, r1
    8b5e:	f0 e1       	ldi	r31, 0x10	; 16
    8b60:	7f 06       	cpc	r7, r31
    8b62:	09 f0       	breq	.+2      	; 0x8b66 <TMR_SR_parseMetadataOnly+0x246>
    8b64:	0b c1       	rjmp	.+534    	; 0x8d7c <TMR_SR_parseMetadataOnly+0x45c>
    8b66:	f7 01       	movw	r30, r14
    8b68:	e4 55       	subi	r30, 0x54	; 84
    8b6a:	ff 4f       	sbci	r31, 0xFF	; 255
    8b6c:	80 81       	ld	r24, Z
    8b6e:	91 81       	ldd	r25, Z+1	; 0x01
    8b70:	00 97       	sbiw	r24, 0x00	; 0
    8b72:	99 f0       	breq	.+38     	; 0x8b9a <TMR_SR_parseMetadataOnly+0x27a>
    8b74:	74 fe       	sbrs	r7, 4
    8b76:	09 c0       	rjmp	.+18     	; 0x8b8a <TMR_SR_parseMetadataOnly+0x26a>
    8b78:	20 e0       	ldi	r18, 0x00	; 0
    8b7a:	30 e8       	ldi	r19, 0x80	; 128
    8b7c:	34 96       	adiw	r30, 0x04	; 4
    8b7e:	31 83       	std	Z+1, r19	; 0x01
    8b80:	20 83       	st	Z, r18
    8b82:	68 94       	set
    8b84:	66 24       	eor	r6, r6
    8b86:	61 f8       	bld	r6, 1
    8b88:	71 2c       	mov	r7, r1
    8b8a:	f5 01       	movw	r30, r10
    8b8c:	20 81       	ld	r18, Z
    8b8e:	b8 01       	movw	r22, r16
    8b90:	62 0f       	add	r22, r18
    8b92:	71 1d       	adc	r23, r1
    8b94:	a3 01       	movw	r20, r6
    8b96:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    8b9a:	f4 01       	movw	r30, r8
    8b9c:	e8 50       	subi	r30, 0x08	; 8
    8b9e:	fa 4f       	sbci	r31, 0xFA	; 250
    8ba0:	80 81       	ld	r24, Z
    8ba2:	88 23       	and	r24, r24
    8ba4:	11 f0       	breq	.+4      	; 0x8baa <TMR_SR_parseMetadataOnly+0x28a>
    8ba6:	c7 01       	movw	r24, r14
    8ba8:	3b de       	rcall	.-906    	; 0x8820 <extractGen2MemoryBankValues>
    8baa:	f5 01       	movw	r30, r10
    8bac:	80 81       	ld	r24, Z
    8bae:	68 0e       	add	r6, r24
    8bb0:	60 82       	st	Z, r6
    8bb2:	d0 fe       	sbrs	r13, 0
    8bb4:	5e c0       	rjmp	.+188    	; 0x8c72 <TMR_SR_parseMetadataOnly+0x352>
    8bb6:	f5 01       	movw	r30, r10
    8bb8:	80 81       	ld	r24, Z
    8bba:	91 e0       	ldi	r25, 0x01	; 1
    8bbc:	98 0f       	add	r25, r24
    8bbe:	90 83       	st	Z, r25
    8bc0:	f8 01       	movw	r30, r16
    8bc2:	e8 0f       	add	r30, r24
    8bc4:	f1 1d       	adc	r31, r1
    8bc6:	20 81       	ld	r18, Z
    8bc8:	f4 01       	movw	r30, r8
    8bca:	ef 58       	subi	r30, 0x8F	; 143
    8bcc:	fc 4f       	sbci	r31, 0xFC	; 252
    8bce:	80 81       	ld	r24, Z
    8bd0:	80 32       	cpi	r24, 0x20	; 32
    8bd2:	41 f4       	brne	.+16     	; 0x8be4 <TMR_SR_parseMetadataOnly+0x2c4>
    8bd4:	82 e0       	ldi	r24, 0x02	; 2
    8bd6:	f7 01       	movw	r30, r14
    8bd8:	eb 56       	subi	r30, 0x6B	; 107
    8bda:	ff 4f       	sbci	r31, 0xFF	; 255
    8bdc:	80 83       	st	Z, r24
    8bde:	80 e0       	ldi	r24, 0x00	; 0
    8be0:	90 e0       	ldi	r25, 0x00	; 0
    8be2:	3e c0       	rjmp	.+124    	; 0x8c60 <TMR_SR_parseMetadataOnly+0x340>
    8be4:	84 e0       	ldi	r24, 0x04	; 4
    8be6:	f7 01       	movw	r30, r14
    8be8:	eb 56       	subi	r30, 0x6B	; 107
    8bea:	ff 4f       	sbci	r31, 0xFF	; 255
    8bec:	80 83       	st	Z, r24
    8bee:	f7 cf       	rjmp	.-18     	; 0x8bde <TMR_SR_parseMetadataOnly+0x2be>
    8bf0:	fc 01       	movw	r30, r24
    8bf2:	ee 0f       	add	r30, r30
    8bf4:	ff 1f       	adc	r31, r31
    8bf6:	ee 0f       	add	r30, r30
    8bf8:	ff 1f       	adc	r31, r31
    8bfa:	ee 0d       	add	r30, r14
    8bfc:	ff 1d       	adc	r31, r15
    8bfe:	eb 5a       	subi	r30, 0xAB	; 171
    8c00:	ff 4f       	sbci	r31, 0xFF	; 255
    8c02:	31 e0       	ldi	r19, 0x01	; 1
    8c04:	38 0f       	add	r19, r24
    8c06:	30 83       	st	Z, r19
    8c08:	42 2f       	mov	r20, r18
    8c0a:	50 e0       	ldi	r21, 0x00	; 0
    8c0c:	ba 01       	movw	r22, r20
    8c0e:	08 2e       	mov	r0, r24
    8c10:	02 c0       	rjmp	.+4      	; 0x8c16 <TMR_SR_parseMetadataOnly+0x2f6>
    8c12:	75 95       	asr	r23
    8c14:	67 95       	ror	r22
    8c16:	0a 94       	dec	r0
    8c18:	e2 f7       	brpl	.-8      	; 0x8c12 <TMR_SR_parseMetadataOnly+0x2f2>
    8c1a:	31 e0       	ldi	r19, 0x01	; 1
    8c1c:	60 ff       	sbrs	r22, 0
    8c1e:	30 e0       	ldi	r19, 0x00	; 0
    8c20:	fc 01       	movw	r30, r24
    8c22:	ee 0f       	add	r30, r30
    8c24:	ff 1f       	adc	r31, r31
    8c26:	ee 0f       	add	r30, r30
    8c28:	ff 1f       	adc	r31, r31
    8c2a:	ee 0d       	add	r30, r14
    8c2c:	ff 1d       	adc	r31, r15
    8c2e:	ea 5a       	subi	r30, 0xAA	; 170
    8c30:	ff 4f       	sbci	r31, 0xFF	; 255
    8c32:	30 83       	st	Z, r19
    8c34:	bc 01       	movw	r22, r24
    8c36:	6c 5f       	subi	r22, 0xFC	; 252
    8c38:	7f 4f       	sbci	r23, 0xFF	; 255
    8c3a:	02 c0       	rjmp	.+4      	; 0x8c40 <TMR_SR_parseMetadataOnly+0x320>
    8c3c:	55 95       	asr	r21
    8c3e:	47 95       	ror	r20
    8c40:	6a 95       	dec	r22
    8c42:	e2 f7       	brpl	.-8      	; 0x8c3c <TMR_SR_parseMetadataOnly+0x31c>
    8c44:	31 e0       	ldi	r19, 0x01	; 1
    8c46:	40 ff       	sbrs	r20, 0
    8c48:	30 e0       	ldi	r19, 0x00	; 0
    8c4a:	fc 01       	movw	r30, r24
    8c4c:	ee 0f       	add	r30, r30
    8c4e:	ff 1f       	adc	r31, r31
    8c50:	ee 0f       	add	r30, r30
    8c52:	ff 1f       	adc	r31, r31
    8c54:	ee 0d       	add	r30, r14
    8c56:	ff 1d       	adc	r31, r15
    8c58:	e9 5a       	subi	r30, 0xA9	; 169
    8c5a:	ff 4f       	sbci	r31, 0xFF	; 255
    8c5c:	30 83       	st	Z, r19
    8c5e:	01 96       	adiw	r24, 0x01	; 1
    8c60:	f7 01       	movw	r30, r14
    8c62:	eb 56       	subi	r30, 0x6B	; 107
    8c64:	ff 4f       	sbci	r31, 0xFF	; 255
    8c66:	40 81       	ld	r20, Z
    8c68:	50 e0       	ldi	r21, 0x00	; 0
    8c6a:	84 17       	cp	r24, r20
    8c6c:	95 07       	cpc	r25, r21
    8c6e:	0c f4       	brge	.+2      	; 0x8c72 <TMR_SR_parseMetadataOnly+0x352>
    8c70:	bf cf       	rjmp	.-130    	; 0x8bf0 <TMR_SR_parseMetadataOnly+0x2d0>
    8c72:	f7 01       	movw	r30, r14
    8c74:	86 ad       	ldd	r24, Z+62	; 0x3e
    8c76:	85 30       	cpi	r24, 0x05	; 5
    8c78:	09 f0       	breq	.+2      	; 0x8c7c <TMR_SR_parseMetadataOnly+0x35c>
    8c7a:	51 c0       	rjmp	.+162    	; 0x8d1e <TMR_SR_parseMetadataOnly+0x3fe>
    8c7c:	d1 fe       	sbrs	r13, 1
    8c7e:	0d c0       	rjmp	.+26     	; 0x8c9a <TMR_SR_parseMetadataOnly+0x37a>
    8c80:	f5 01       	movw	r30, r10
    8c82:	80 81       	ld	r24, Z
    8c84:	91 e0       	ldi	r25, 0x01	; 1
    8c86:	98 0f       	add	r25, r24
    8c88:	90 83       	st	Z, r25
    8c8a:	f8 01       	movw	r30, r16
    8c8c:	e8 0f       	add	r30, r24
    8c8e:	f1 1d       	adc	r31, r1
    8c90:	80 81       	ld	r24, Z
    8c92:	f7 01       	movw	r30, r14
    8c94:	e4 5b       	subi	r30, 0xB4	; 180
    8c96:	ff 4f       	sbci	r31, 0xFF	; 255
    8c98:	80 83       	st	Z, r24
    8c9a:	d2 fe       	sbrs	r13, 2
    8c9c:	26 c0       	rjmp	.+76     	; 0x8cea <TMR_SR_parseMetadataOnly+0x3ca>
    8c9e:	f5 01       	movw	r30, r10
    8ca0:	80 81       	ld	r24, Z
    8ca2:	91 e0       	ldi	r25, 0x01	; 1
    8ca4:	98 0f       	add	r25, r24
    8ca6:	90 83       	st	Z, r25
    8ca8:	f8 01       	movw	r30, r16
    8caa:	e8 0f       	add	r30, r24
    8cac:	f1 1d       	adc	r31, r1
    8cae:	80 81       	ld	r24, Z
    8cb0:	82 30       	cpi	r24, 0x02	; 2
    8cb2:	61 f0       	breq	.+24     	; 0x8ccc <TMR_SR_parseMetadataOnly+0x3ac>
    8cb4:	84 30       	cpi	r24, 0x04	; 4
    8cb6:	91 f0       	breq	.+36     	; 0x8cdc <TMR_SR_parseMetadataOnly+0x3bc>
    8cb8:	81 11       	cpse	r24, r1
    8cba:	17 c0       	rjmp	.+46     	; 0x8cea <TMR_SR_parseMetadataOnly+0x3ca>
    8cbc:	8a ef       	ldi	r24, 0xFA	; 250
    8cbe:	90 e0       	ldi	r25, 0x00	; 0
    8cc0:	f7 01       	movw	r30, r14
    8cc2:	e3 5b       	subi	r30, 0xB3	; 179
    8cc4:	ff 4f       	sbci	r31, 0xFF	; 255
    8cc6:	91 83       	std	Z+1, r25	; 0x01
    8cc8:	80 83       	st	Z, r24
    8cca:	0f c0       	rjmp	.+30     	; 0x8cea <TMR_SR_parseMetadataOnly+0x3ca>
    8ccc:	80 e4       	ldi	r24, 0x40	; 64
    8cce:	91 e0       	ldi	r25, 0x01	; 1
    8cd0:	f7 01       	movw	r30, r14
    8cd2:	e3 5b       	subi	r30, 0xB3	; 179
    8cd4:	ff 4f       	sbci	r31, 0xFF	; 255
    8cd6:	91 83       	std	Z+1, r25	; 0x01
    8cd8:	80 83       	st	Z, r24
    8cda:	07 c0       	rjmp	.+14     	; 0x8cea <TMR_SR_parseMetadataOnly+0x3ca>
    8cdc:	80 e8       	ldi	r24, 0x80	; 128
    8cde:	92 e0       	ldi	r25, 0x02	; 2
    8ce0:	f7 01       	movw	r30, r14
    8ce2:	e3 5b       	subi	r30, 0xB3	; 179
    8ce4:	ff 4f       	sbci	r31, 0xFF	; 255
    8ce6:	91 83       	std	Z+1, r25	; 0x01
    8ce8:	80 83       	st	Z, r24
    8cea:	d3 fe       	sbrs	r13, 3
    8cec:	18 c0       	rjmp	.+48     	; 0x8d1e <TMR_SR_parseMetadataOnly+0x3fe>
    8cee:	f5 01       	movw	r30, r10
    8cf0:	80 81       	ld	r24, Z
    8cf2:	91 e0       	ldi	r25, 0x01	; 1
    8cf4:	98 0f       	add	r25, r24
    8cf6:	90 83       	st	Z, r25
    8cf8:	f8 01       	movw	r30, r16
    8cfa:	e8 0f       	add	r30, r24
    8cfc:	f1 1d       	adc	r31, r1
    8cfe:	80 81       	ld	r24, Z
    8d00:	88 23       	and	r24, r24
    8d02:	19 f0       	breq	.+6      	; 0x8d0a <TMR_SR_parseMetadataOnly+0x3ea>
    8d04:	81 30       	cpi	r24, 0x01	; 1
    8d06:	31 f0       	breq	.+12     	; 0x8d14 <TMR_SR_parseMetadataOnly+0x3f4>
    8d08:	0a c0       	rjmp	.+20     	; 0x8d1e <TMR_SR_parseMetadataOnly+0x3fe>
    8d0a:	f7 01       	movw	r30, r14
    8d0c:	e1 5b       	subi	r30, 0xB1	; 177
    8d0e:	ff 4f       	sbci	r31, 0xFF	; 255
    8d10:	10 82       	st	Z, r1
    8d12:	05 c0       	rjmp	.+10     	; 0x8d1e <TMR_SR_parseMetadataOnly+0x3fe>
    8d14:	81 e0       	ldi	r24, 0x01	; 1
    8d16:	f7 01       	movw	r30, r14
    8d18:	e1 5b       	subi	r30, 0xB1	; 177
    8d1a:	ff 4f       	sbci	r31, 0xFF	; 255
    8d1c:	80 83       	st	Z, r24
    8d1e:	d4 fe       	sbrs	r13, 4
    8d20:	10 c0       	rjmp	.+32     	; 0x8d42 <TMR_SR_parseMetadataOnly+0x422>
    8d22:	f5 01       	movw	r30, r10
    8d24:	80 81       	ld	r24, Z
    8d26:	b8 01       	movw	r22, r16
    8d28:	68 0f       	add	r22, r24
    8d2a:	71 1d       	adc	r23, r1
    8d2c:	42 e0       	ldi	r20, 0x02	; 2
    8d2e:	50 e0       	ldi	r21, 0x00	; 0
    8d30:	c7 01       	movw	r24, r14
    8d32:	8e 55       	subi	r24, 0x5E	; 94
    8d34:	9f 4f       	sbci	r25, 0xFF	; 255
    8d36:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    8d3a:	f5 01       	movw	r30, r10
    8d3c:	80 81       	ld	r24, Z
    8d3e:	8e 5f       	subi	r24, 0xFE	; 254
    8d40:	80 83       	st	Z, r24
    8d42:	d5 fe       	sbrs	r13, 5
    8d44:	20 c0       	rjmp	.+64     	; 0x8d86 <TMR_SR_parseMetadataOnly+0x466>
    8d46:	a5 01       	movw	r20, r10
    8d48:	be 01       	movw	r22, r28
    8d4a:	6f 5f       	subi	r22, 0xFF	; 255
    8d4c:	7f 4f       	sbci	r23, 0xFF	; 255
    8d4e:	c8 01       	movw	r24, r16
    8d50:	0e 94 5b 32 	call	0x64b6	; 0x64b6 <parseEBVdata>
    8d54:	68 2f       	mov	r22, r24
    8d56:	ce 01       	movw	r24, r28
    8d58:	01 96       	adiw	r24, 0x01	; 1
    8d5a:	0e 94 48 6f 	call	0xde90	; 0xde90 <TMR_SR_convertFromEBV>
    8d5e:	f7 01       	movw	r30, r14
    8d60:	e2 53       	subi	r30, 0x32	; 50
    8d62:	ff 4f       	sbci	r31, 0xFF	; 255
    8d64:	20 83       	st	Z, r18
    8d66:	31 83       	std	Z+1, r19	; 0x01
    8d68:	42 83       	std	Z+2, r20	; 0x02
    8d6a:	53 83       	std	Z+3, r21	; 0x03
    8d6c:	64 83       	std	Z+4, r22	; 0x04
    8d6e:	75 83       	std	Z+5, r23	; 0x05
    8d70:	86 83       	std	Z+6, r24	; 0x06
    8d72:	97 83       	std	Z+7, r25	; 0x07
    8d74:	60 e0       	ldi	r22, 0x00	; 0
    8d76:	70 e0       	ldi	r23, 0x00	; 0
    8d78:	cb 01       	movw	r24, r22
    8d7a:	08 c0       	rjmp	.+16     	; 0x8d8c <TMR_SR_parseMetadataOnly+0x46c>
    8d7c:	6c e0       	ldi	r22, 0x0C	; 12
    8d7e:	70 e0       	ldi	r23, 0x00	; 0
    8d80:	80 e0       	ldi	r24, 0x00	; 0
    8d82:	93 e0       	ldi	r25, 0x03	; 3
    8d84:	03 c0       	rjmp	.+6      	; 0x8d8c <TMR_SR_parseMetadataOnly+0x46c>
    8d86:	60 e0       	ldi	r22, 0x00	; 0
    8d88:	70 e0       	ldi	r23, 0x00	; 0
    8d8a:	cb 01       	movw	r24, r22
    8d8c:	28 96       	adiw	r28, 0x08	; 8
    8d8e:	0f b6       	in	r0, 0x3f	; 63
    8d90:	f8 94       	cli
    8d92:	de bf       	out	0x3e, r29	; 62
    8d94:	0f be       	out	0x3f, r0	; 63
    8d96:	cd bf       	out	0x3d, r28	; 61
    8d98:	df 91       	pop	r29
    8d9a:	cf 91       	pop	r28
    8d9c:	1f 91       	pop	r17
    8d9e:	0f 91       	pop	r16
    8da0:	ff 90       	pop	r15
    8da2:	ef 90       	pop	r14
    8da4:	df 90       	pop	r13
    8da6:	cf 90       	pop	r12
    8da8:	bf 90       	pop	r11
    8daa:	af 90       	pop	r10
    8dac:	9f 90       	pop	r9
    8dae:	8f 90       	pop	r8
    8db0:	7f 90       	pop	r7
    8db2:	6f 90       	pop	r6
    8db4:	08 95       	ret

00008db6 <TMR_SR_parseMetadataFromMessage>:
    8db6:	4f 92       	push	r4
    8db8:	5f 92       	push	r5
    8dba:	6f 92       	push	r6
    8dbc:	7f 92       	push	r7
    8dbe:	9f 92       	push	r9
    8dc0:	af 92       	push	r10
    8dc2:	bf 92       	push	r11
    8dc4:	cf 92       	push	r12
    8dc6:	df 92       	push	r13
    8dc8:	ef 92       	push	r14
    8dca:	ff 92       	push	r15
    8dcc:	0f 93       	push	r16
    8dce:	1f 93       	push	r17
    8dd0:	cf 93       	push	r28
    8dd2:	df 93       	push	r29
    8dd4:	eb 01       	movw	r28, r22
    8dd6:	5a 01       	movw	r10, r20
    8dd8:	79 01       	movw	r14, r18
    8dda:	68 01       	movw	r12, r16
    8ddc:	a1 dd       	rcall	.-1214   	; 0x8920 <TMR_SR_parseMetadataOnly>
    8dde:	2b 01       	movw	r4, r22
    8de0:	3c 01       	movw	r6, r24
    8de2:	67 2b       	or	r22, r23
    8de4:	68 2b       	or	r22, r24
    8de6:	69 2b       	or	r22, r25
    8de8:	09 f0       	breq	.+2      	; 0x8dec <TMR_SR_parseMetadataFromMessage+0x36>
    8dea:	cf c0       	rjmp	.+414    	; 0x8f8a <TMR_SR_parseMetadataFromMessage+0x1d4>
    8dec:	d7 01       	movw	r26, r14
    8dee:	8c 91       	ld	r24, X
    8df0:	8e 5f       	subi	r24, 0xFE	; 254
    8df2:	8c 93       	st	X, r24
    8df4:	98 01       	movw	r18, r16
    8df6:	28 0f       	add	r18, r24
    8df8:	31 1d       	adc	r19, r1
    8dfa:	f9 01       	movw	r30, r18
    8dfc:	32 97       	sbiw	r30, 0x02	; 2
    8dfe:	80 81       	ld	r24, Z
    8e00:	90 e0       	ldi	r25, 0x00	; 0
    8e02:	98 2f       	mov	r25, r24
    8e04:	88 27       	eor	r24, r24
    8e06:	31 96       	adiw	r30, 0x01	; 1
    8e08:	20 81       	ld	r18, Z
    8e0a:	82 2b       	or	r24, r18
    8e0c:	0e 94 9e 6a 	call	0xd53c	; 0xd53c <tm_u8s_per_bits>
    8e10:	2e ad       	ldd	r18, Y+62	; 0x3e
    8e12:	2d 31       	cpi	r18, 0x1D	; 29
    8e14:	21 f0       	breq	.+8      	; 0x8e1e <TMR_SR_parseMetadataFromMessage+0x68>
    8e16:	82 30       	cpi	r24, 0x02	; 2
    8e18:	91 05       	cpc	r25, r1
    8e1a:	0c f0       	brlt	.+2      	; 0x8e1e <TMR_SR_parseMetadataFromMessage+0x68>
    8e1c:	02 97       	sbiw	r24, 0x02	; 2
    8e1e:	25 30       	cpi	r18, 0x05	; 5
    8e20:	09 f0       	breq	.+2      	; 0x8e24 <TMR_SR_parseMetadataFromMessage+0x6e>
    8e22:	6c c0       	rjmp	.+216    	; 0x8efc <TMR_SR_parseMetadataFromMessage+0x146>
    8e24:	f7 01       	movw	r30, r14
    8e26:	20 81       	ld	r18, Z
    8e28:	31 e0       	ldi	r19, 0x01	; 1
    8e2a:	32 0f       	add	r19, r18
    8e2c:	30 83       	st	Z, r19
    8e2e:	f6 01       	movw	r30, r12
    8e30:	e2 0f       	add	r30, r18
    8e32:	f1 1d       	adc	r31, r1
    8e34:	20 81       	ld	r18, Z
    8e36:	fe 01       	movw	r30, r28
    8e38:	eb 5b       	subi	r30, 0xBB	; 187
    8e3a:	ff 4f       	sbci	r31, 0xFF	; 255
    8e3c:	20 83       	st	Z, r18
    8e3e:	d7 01       	movw	r26, r14
    8e40:	2c 91       	ld	r18, X
    8e42:	31 e0       	ldi	r19, 0x01	; 1
    8e44:	32 0f       	add	r19, r18
    8e46:	3c 93       	st	X, r19
    8e48:	f6 01       	movw	r30, r12
    8e4a:	e2 0f       	add	r30, r18
    8e4c:	f1 1d       	adc	r31, r1
    8e4e:	20 81       	ld	r18, Z
    8e50:	fe 01       	movw	r30, r28
    8e52:	ea 5b       	subi	r30, 0xBA	; 186
    8e54:	ff 4f       	sbci	r31, 0xFF	; 255
    8e56:	20 83       	st	Z, r18
    8e58:	82 30       	cpi	r24, 0x02	; 2
    8e5a:	91 05       	cpc	r25, r1
    8e5c:	0c f0       	brlt	.+2      	; 0x8e60 <TMR_SR_parseMetadataFromMessage+0xaa>
    8e5e:	02 97       	sbiw	r24, 0x02	; 2
    8e60:	22 e0       	ldi	r18, 0x02	; 2
    8e62:	fe 01       	movw	r30, r28
    8e64:	ec 5b       	subi	r30, 0xBC	; 188
    8e66:	ff 4f       	sbci	r31, 0xFF	; 255
    8e68:	20 83       	st	Z, r18
    8e6a:	31 96       	adiw	r30, 0x01	; 1
    8e6c:	20 81       	ld	r18, Z
    8e6e:	21 ff       	sbrs	r18, 1
    8e70:	45 c0       	rjmp	.+138    	; 0x8efc <TMR_SR_parseMetadataFromMessage+0x146>
    8e72:	f7 01       	movw	r30, r14
    8e74:	20 81       	ld	r18, Z
    8e76:	31 e0       	ldi	r19, 0x01	; 1
    8e78:	32 0f       	add	r19, r18
    8e7a:	30 83       	st	Z, r19
    8e7c:	f6 01       	movw	r30, r12
    8e7e:	e2 0f       	add	r30, r18
    8e80:	f1 1d       	adc	r31, r1
    8e82:	20 81       	ld	r18, Z
    8e84:	fe 01       	movw	r30, r28
    8e86:	e9 5b       	subi	r30, 0xB9	; 185
    8e88:	ff 4f       	sbci	r31, 0xFF	; 255
    8e8a:	20 83       	st	Z, r18
    8e8c:	d7 01       	movw	r26, r14
    8e8e:	2c 91       	ld	r18, X
    8e90:	31 e0       	ldi	r19, 0x01	; 1
    8e92:	32 0f       	add	r19, r18
    8e94:	3c 93       	st	X, r19
    8e96:	d6 01       	movw	r26, r12
    8e98:	a2 0f       	add	r26, r18
    8e9a:	b1 1d       	adc	r27, r1
    8e9c:	2c 91       	ld	r18, X
    8e9e:	de 01       	movw	r26, r28
    8ea0:	a8 5b       	subi	r26, 0xB8	; 184
    8ea2:	bf 4f       	sbci	r27, 0xFF	; 255
    8ea4:	2c 93       	st	X, r18
    8ea6:	9c 01       	movw	r18, r24
    8ea8:	22 50       	subi	r18, 0x02	; 2
    8eaa:	31 09       	sbc	r19, r1
    8eac:	14 97       	sbiw	r26, 0x04	; 4
    8eae:	4c 91       	ld	r20, X
    8eb0:	4e 5f       	subi	r20, 0xFE	; 254
    8eb2:	4c 93       	st	X, r20
    8eb4:	40 81       	ld	r20, Z
    8eb6:	44 23       	and	r20, r20
    8eb8:	04 f5       	brge	.+64     	; 0x8efa <TMR_SR_parseMetadataFromMessage+0x144>
    8eba:	f7 01       	movw	r30, r14
    8ebc:	20 81       	ld	r18, Z
    8ebe:	31 e0       	ldi	r19, 0x01	; 1
    8ec0:	32 0f       	add	r19, r18
    8ec2:	30 83       	st	Z, r19
    8ec4:	f6 01       	movw	r30, r12
    8ec6:	e2 0f       	add	r30, r18
    8ec8:	f1 1d       	adc	r31, r1
    8eca:	20 81       	ld	r18, Z
    8ecc:	fe 01       	movw	r30, r28
    8ece:	e7 5b       	subi	r30, 0xB7	; 183
    8ed0:	ff 4f       	sbci	r31, 0xFF	; 255
    8ed2:	20 83       	st	Z, r18
    8ed4:	d7 01       	movw	r26, r14
    8ed6:	2c 91       	ld	r18, X
    8ed8:	31 e0       	ldi	r19, 0x01	; 1
    8eda:	32 0f       	add	r19, r18
    8edc:	3c 93       	st	X, r19
    8ede:	f6 01       	movw	r30, r12
    8ee0:	e2 0f       	add	r30, r18
    8ee2:	f1 1d       	adc	r31, r1
    8ee4:	20 81       	ld	r18, Z
    8ee6:	fe 01       	movw	r30, r28
    8ee8:	e6 5b       	subi	r30, 0xB6	; 182
    8eea:	ff 4f       	sbci	r31, 0xFF	; 255
    8eec:	20 83       	st	Z, r18
    8eee:	04 97       	sbiw	r24, 0x04	; 4
    8ef0:	36 97       	sbiw	r30, 0x06	; 6
    8ef2:	20 81       	ld	r18, Z
    8ef4:	2e 5f       	subi	r18, 0xFE	; 254
    8ef6:	20 83       	st	Z, r18
    8ef8:	01 c0       	rjmp	.+2      	; 0x8efc <TMR_SR_parseMetadataFromMessage+0x146>
    8efa:	c9 01       	movw	r24, r18
    8efc:	98 2e       	mov	r9, r24
    8efe:	8f af       	std	Y+63, r24	; 0x3f
    8f00:	85 01       	movw	r16, r10
    8f02:	00 27       	eor	r16, r16
    8f04:	10 71       	andi	r17, 0x10	; 16
    8f06:	b4 fe       	sbrs	r11, 4
    8f08:	02 c0       	rjmp	.+4      	; 0x8f0e <TMR_SR_parseMetadataFromMessage+0x158>
    8f0a:	82 50       	subi	r24, 0x02	; 2
    8f0c:	8f af       	std	Y+63, r24	; 0x3f
    8f0e:	8f ad       	ldd	r24, Y+63	; 0x3f
    8f10:	8f 33       	cpi	r24, 0x3F	; 63
    8f12:	10 f0       	brcs	.+4      	; 0x8f18 <TMR_SR_parseMetadataFromMessage+0x162>
    8f14:	8e e3       	ldi	r24, 0x3E	; 62
    8f16:	8f af       	std	Y+63, r24	; 0x3f
    8f18:	4f ad       	ldd	r20, Y+63	; 0x3f
    8f1a:	f7 01       	movw	r30, r14
    8f1c:	80 81       	ld	r24, Z
    8f1e:	50 e0       	ldi	r21, 0x00	; 0
    8f20:	b6 01       	movw	r22, r12
    8f22:	68 0f       	add	r22, r24
    8f24:	71 1d       	adc	r23, r1
    8f26:	ce 01       	movw	r24, r28
    8f28:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    8f2c:	d7 01       	movw	r26, r14
    8f2e:	6c 91       	ld	r22, X
    8f30:	69 0d       	add	r22, r9
    8f32:	6c 93       	st	X, r22
    8f34:	01 2b       	or	r16, r17
    8f36:	61 f0       	breq	.+24     	; 0x8f50 <TMR_SR_parseMetadataFromMessage+0x19a>
    8f38:	70 e0       	ldi	r23, 0x00	; 0
    8f3a:	62 50       	subi	r22, 0x02	; 2
    8f3c:	71 09       	sbc	r23, r1
    8f3e:	6c 0d       	add	r22, r12
    8f40:	7d 1d       	adc	r23, r13
    8f42:	42 e0       	ldi	r20, 0x02	; 2
    8f44:	50 e0       	ldi	r21, 0x00	; 0
    8f46:	ce 01       	movw	r24, r28
    8f48:	80 5c       	subi	r24, 0xC0	; 192
    8f4a:	9f 4f       	sbci	r25, 0xFF	; 255
    8f4c:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    8f50:	8e ad       	ldd	r24, Y+62	; 0x3e
    8f52:	8d 31       	cpi	r24, 0x1D	; 29
    8f54:	39 f4       	brne	.+14     	; 0x8f64 <TMR_SR_parseMetadataFromMessage+0x1ae>
    8f56:	ce 5b       	subi	r28, 0xBE	; 190
    8f58:	df 4f       	sbci	r29, 0xFF	; 255
    8f5a:	8f ef       	ldi	r24, 0xFF	; 255
    8f5c:	9f ef       	ldi	r25, 0xFF	; 255
    8f5e:	99 83       	std	Y+1, r25	; 0x01
    8f60:	88 83       	st	Y, r24
    8f62:	13 c0       	rjmp	.+38     	; 0x8f8a <TMR_SR_parseMetadataFromMessage+0x1d4>
    8f64:	f7 01       	movw	r30, r14
    8f66:	80 81       	ld	r24, Z
    8f68:	8e 5f       	subi	r24, 0xFE	; 254
    8f6a:	80 83       	st	Z, r24
    8f6c:	c8 0e       	add	r12, r24
    8f6e:	d1 1c       	adc	r13, r1
    8f70:	f6 01       	movw	r30, r12
    8f72:	32 97       	sbiw	r30, 0x02	; 2
    8f74:	80 81       	ld	r24, Z
    8f76:	90 e0       	ldi	r25, 0x00	; 0
    8f78:	98 2f       	mov	r25, r24
    8f7a:	88 27       	eor	r24, r24
    8f7c:	31 96       	adiw	r30, 0x01	; 1
    8f7e:	20 81       	ld	r18, Z
    8f80:	82 2b       	or	r24, r18
    8f82:	ce 5b       	subi	r28, 0xBE	; 190
    8f84:	df 4f       	sbci	r29, 0xFF	; 255
    8f86:	99 83       	std	Y+1, r25	; 0x01
    8f88:	88 83       	st	Y, r24
    8f8a:	c3 01       	movw	r24, r6
    8f8c:	b2 01       	movw	r22, r4
    8f8e:	df 91       	pop	r29
    8f90:	cf 91       	pop	r28
    8f92:	1f 91       	pop	r17
    8f94:	0f 91       	pop	r16
    8f96:	ff 90       	pop	r15
    8f98:	ef 90       	pop	r14
    8f9a:	df 90       	pop	r13
    8f9c:	cf 90       	pop	r12
    8f9e:	bf 90       	pop	r11
    8fa0:	af 90       	pop	r10
    8fa2:	9f 90       	pop	r9
    8fa4:	7f 90       	pop	r7
    8fa6:	6f 90       	pop	r6
    8fa8:	5f 90       	pop	r5
    8faa:	4f 90       	pop	r4
    8fac:	08 95       	ret

00008fae <TMR_SR_antennaDecoding>:
    8fae:	cf 93       	push	r28
    8fb0:	dc 01       	movw	r26, r24
    8fb2:	fb 01       	movw	r30, r22
    8fb4:	e6 58       	subi	r30, 0x86	; 134
    8fb6:	fb 4f       	sbci	r31, 0xFB	; 251
    8fb8:	80 81       	ld	r24, Z
    8fba:	88 23       	and	r24, r24
    8fbc:	09 f4       	brne	.+2      	; 0x8fc0 <TMR_SR_antennaDecoding+0x12>
    8fbe:	66 c0       	rjmp	.+204    	; 0x908c <TMR_SR_antennaDecoding+0xde>
    8fc0:	fd 01       	movw	r30, r26
    8fc2:	ec 5a       	subi	r30, 0xAC	; 172
    8fc4:	ff 4f       	sbci	r31, 0xFF	; 255
    8fc6:	80 81       	ld	r24, Z
    8fc8:	c8 2f       	mov	r28, r24
    8fca:	c2 95       	swap	r28
    8fcc:	cf 70       	andi	r28, 0x0F	; 15
    8fce:	8f 70       	andi	r24, 0x0F	; 15
    8fd0:	c1 11       	cpse	r28, r1
    8fd2:	01 c0       	rjmp	.+2      	; 0x8fd6 <TMR_SR_antennaDecoding+0x28>
    8fd4:	c0 e1       	ldi	r28, 0x10	; 16
    8fd6:	81 11       	cpse	r24, r1
    8fd8:	01 c0       	rjmp	.+2      	; 0x8fdc <TMR_SR_antennaDecoding+0x2e>
    8fda:	80 e1       	ldi	r24, 0x10	; 16
    8fdc:	90 e0       	ldi	r25, 0x00	; 0
    8fde:	4c c0       	rjmp	.+152    	; 0x9078 <TMR_SR_antennaDecoding+0xca>
    8fe0:	40 81       	ld	r20, Z
    8fe2:	51 81       	ldd	r21, Z+1	; 0x01
    8fe4:	29 2f       	mov	r18, r25
    8fe6:	30 e0       	ldi	r19, 0x00	; 0
    8fe8:	f9 01       	movw	r30, r18
    8fea:	ee 0f       	add	r30, r30
    8fec:	ff 1f       	adc	r31, r31
    8fee:	2e 0f       	add	r18, r30
    8ff0:	3f 1f       	adc	r19, r31
    8ff2:	fa 01       	movw	r30, r20
    8ff4:	e2 0f       	add	r30, r18
    8ff6:	f3 1f       	adc	r31, r19
    8ff8:	22 81       	ldd	r18, Z+2	; 0x02
    8ffa:	82 13       	cpse	r24, r18
    8ffc:	3c c0       	rjmp	.+120    	; 0x9076 <TMR_SR_antennaDecoding+0xc8>
    8ffe:	21 81       	ldd	r18, Z+1	; 0x01
    9000:	c2 13       	cpse	r28, r18
    9002:	39 c0       	rjmp	.+114    	; 0x9076 <TMR_SR_antennaDecoding+0xc8>
    9004:	80 81       	ld	r24, Z
    9006:	fd 01       	movw	r30, r26
    9008:	ec 5a       	subi	r30, 0xAC	; 172
    900a:	ff 4f       	sbci	r31, 0xFF	; 255
    900c:	80 83       	st	Z, r24
    900e:	ef 5b       	subi	r30, 0xBF	; 191
    9010:	ff 4f       	sbci	r31, 0xFF	; 255
    9012:	90 81       	ld	r25, Z
    9014:	93 30       	cpi	r25, 0x03	; 3
    9016:	d0 f1       	brcs	.+116    	; 0x908c <TMR_SR_antennaDecoding+0xde>
    9018:	fb 01       	movw	r30, r22
    901a:	ef 50       	subi	r30, 0x0F	; 15
    901c:	fe 4f       	sbci	r31, 0xFE	; 254
    901e:	90 81       	ld	r25, Z
    9020:	90 33       	cpi	r25, 0x30	; 48
    9022:	a1 f1       	breq	.+104    	; 0x908c <TMR_SR_antennaDecoding+0xde>
    9024:	fd 01       	movw	r30, r26
    9026:	e2 5a       	subi	r30, 0xA2	; 162
    9028:	ff 4f       	sbci	r31, 0xFF	; 255
    902a:	90 81       	ld	r25, Z
    902c:	99 23       	and	r25, r25
    902e:	49 f0       	breq	.+18     	; 0x9042 <TMR_SR_antennaDecoding+0x94>
    9030:	34 96       	adiw	r30, 0x04	; 4
    9032:	20 81       	ld	r18, Z
    9034:	21 11       	cpse	r18, r1
    9036:	05 c0       	rjmp	.+10     	; 0x9042 <TMR_SR_antennaDecoding+0x94>
    9038:	ac 5a       	subi	r26, 0xAC	; 172
    903a:	bf 4f       	sbci	r27, 0xFF	; 255
    903c:	80 5f       	subi	r24, 0xF0	; 240
    903e:	8c 93       	st	X, r24
    9040:	25 c0       	rjmp	.+74     	; 0x908c <TMR_SR_antennaDecoding+0xde>
    9042:	91 11       	cpse	r25, r1
    9044:	0b c0       	rjmp	.+22     	; 0x905c <TMR_SR_antennaDecoding+0xae>
    9046:	fd 01       	movw	r30, r26
    9048:	ee 59       	subi	r30, 0x9E	; 158
    904a:	ff 4f       	sbci	r31, 0xFF	; 255
    904c:	20 81       	ld	r18, Z
    904e:	22 23       	and	r18, r18
    9050:	29 f0       	breq	.+10     	; 0x905c <TMR_SR_antennaDecoding+0xae>
    9052:	ac 5a       	subi	r26, 0xAC	; 172
    9054:	bf 4f       	sbci	r27, 0xFF	; 255
    9056:	80 5e       	subi	r24, 0xE0	; 224
    9058:	8c 93       	st	X, r24
    905a:	18 c0       	rjmp	.+48     	; 0x908c <TMR_SR_antennaDecoding+0xde>
    905c:	99 23       	and	r25, r25
    905e:	b1 f0       	breq	.+44     	; 0x908c <TMR_SR_antennaDecoding+0xde>
    9060:	fd 01       	movw	r30, r26
    9062:	ee 59       	subi	r30, 0x9E	; 158
    9064:	ff 4f       	sbci	r31, 0xFF	; 255
    9066:	90 81       	ld	r25, Z
    9068:	99 23       	and	r25, r25
    906a:	81 f0       	breq	.+32     	; 0x908c <TMR_SR_antennaDecoding+0xde>
    906c:	ac 5a       	subi	r26, 0xAC	; 172
    906e:	bf 4f       	sbci	r27, 0xFF	; 255
    9070:	80 5d       	subi	r24, 0xD0	; 208
    9072:	8c 93       	st	X, r24
    9074:	0b c0       	rjmp	.+22     	; 0x908c <TMR_SR_antennaDecoding+0xde>
    9076:	9f 5f       	subi	r25, 0xFF	; 255
    9078:	fb 01       	movw	r30, r22
    907a:	ea 5a       	subi	r30, 0xAA	; 170
    907c:	ff 4f       	sbci	r31, 0xFF	; 255
    907e:	01 90       	ld	r0, Z+
    9080:	f0 81       	ld	r31, Z
    9082:	e0 2d       	mov	r30, r0
    9084:	23 81       	ldd	r18, Z+3	; 0x03
    9086:	92 17       	cp	r25, r18
    9088:	08 f4       	brcc	.+2      	; 0x908c <TMR_SR_antennaDecoding+0xde>
    908a:	aa cf       	rjmp	.-172    	; 0x8fe0 <TMR_SR_antennaDecoding+0x32>
    908c:	cf 91       	pop	r28
    908e:	08 95       	ret

00009090 <TMR_SR_postprocessReaderSpecificMetadata>:
    9090:	2f 92       	push	r2
    9092:	3f 92       	push	r3
    9094:	4f 92       	push	r4
    9096:	5f 92       	push	r5
    9098:	6f 92       	push	r6
    909a:	7f 92       	push	r7
    909c:	8f 92       	push	r8
    909e:	9f 92       	push	r9
    90a0:	af 92       	push	r10
    90a2:	bf 92       	push	r11
    90a4:	cf 92       	push	r12
    90a6:	df 92       	push	r13
    90a8:	ef 92       	push	r14
    90aa:	ff 92       	push	r15
    90ac:	0f 93       	push	r16
    90ae:	1f 93       	push	r17
    90b0:	cf 93       	push	r28
    90b2:	df 93       	push	r29
    90b4:	cd b7       	in	r28, 0x3d	; 61
    90b6:	de b7       	in	r29, 0x3e	; 62
    90b8:	6a 97       	sbiw	r28, 0x1a	; 26
    90ba:	0f b6       	in	r0, 0x3f	; 63
    90bc:	f8 94       	cli
    90be:	de bf       	out	0x3e, r29	; 62
    90c0:	0f be       	out	0x3f, r0	; 63
    90c2:	cd bf       	out	0x3d, r28	; 61
    90c4:	4c 01       	movw	r8, r24
    90c6:	fb 01       	movw	r30, r22
    90c8:	db 01       	movw	r26, r22
    90ca:	ac 5d       	subi	r26, 0xDC	; 220
    90cc:	bd 4f       	sbci	r27, 0xFD	; 253
    90ce:	4d 90       	ld	r4, X+
    90d0:	5d 90       	ld	r5, X+
    90d2:	6d 90       	ld	r6, X+
    90d4:	7c 90       	ld	r7, X
    90d6:	13 97       	sbiw	r26, 0x03	; 3
    90d8:	14 96       	adiw	r26, 0x04	; 4
    90da:	ad 90       	ld	r10, X+
    90dc:	bd 90       	ld	r11, X+
    90de:	cd 90       	ld	r12, X+
    90e0:	dc 90       	ld	r13, X
    90e2:	a9 8a       	std	Y+17, r10	; 0x11
    90e4:	ba 8a       	std	Y+18, r11	; 0x12
    90e6:	cb 8a       	std	Y+19, r12	; 0x13
    90e8:	dc 8a       	std	Y+20, r13	; 0x14
    90ea:	dc 01       	movw	r26, r24
    90ec:	a8 55       	subi	r26, 0x58	; 88
    90ee:	bf 4f       	sbci	r27, 0xFF	; 255
    90f0:	ad 92       	st	X+, r10
    90f2:	bd 92       	st	X+, r11
    90f4:	cd 92       	st	X+, r12
    90f6:	dc 92       	st	X, r13
    90f8:	13 97       	sbiw	r26, 0x03	; 3
    90fa:	92 96       	adiw	r26, 0x22	; 34
    90fc:	8d 91       	ld	r24, X+
    90fe:	9d 91       	ld	r25, X+
    9100:	0d 90       	ld	r0, X+
    9102:	bc 91       	ld	r27, X
    9104:	a0 2d       	mov	r26, r0
    9106:	20 91 6e 03 	lds	r18, 0x036E	; 0x80036e <delta>
    910a:	30 91 6f 03 	lds	r19, 0x036F	; 0x80036f <delta+0x1>
    910e:	28 17       	cp	r18, r24
    9110:	39 07       	cpc	r19, r25
    9112:	34 f0       	brlt	.+12     	; 0x9120 <TMR_SR_postprocessReaderSpecificMetadata+0x90>
    9114:	c9 01       	movw	r24, r18
    9116:	01 96       	adiw	r24, 0x01	; 1
    9118:	09 2e       	mov	r0, r25
    911a:	00 0c       	add	r0, r0
    911c:	aa 0b       	sbc	r26, r26
    911e:	bb 0b       	sbc	r27, r27
    9120:	48 0e       	add	r4, r24
    9122:	59 1e       	adc	r5, r25
    9124:	6a 1e       	adc	r6, r26
    9126:	7b 1e       	adc	r7, r27
    9128:	90 93 55 02 	sts	0x0255, r25	; 0x800255 <LastDSPMicro+0x1>
    912c:	80 93 54 02 	sts	0x0254, r24	; 0x800254 <LastDSPMicro>
    9130:	29 89       	ldd	r18, Y+17	; 0x11
    9132:	3a 89       	ldd	r19, Y+18	; 0x12
    9134:	4b 89       	ldd	r20, Y+19	; 0x13
    9136:	5c 89       	ldd	r21, Y+20	; 0x14
    9138:	89 01       	movw	r16, r18
    913a:	9a 01       	movw	r18, r20
    913c:	2b 83       	std	Y+3, r18	; 0x03
    913e:	3c 83       	std	Y+4, r19	; 0x04
    9140:	20 2f       	mov	r18, r16
    9142:	31 2f       	mov	r19, r17
    9144:	4b 81       	ldd	r20, Y+3	; 0x03
    9146:	5c 81       	ldd	r21, Y+4	; 0x04
    9148:	60 e0       	ldi	r22, 0x00	; 0
    914a:	70 e0       	ldi	r23, 0x00	; 0
    914c:	80 e0       	ldi	r24, 0x00	; 0
    914e:	90 e0       	ldi	r25, 0x00	; 0
    9150:	00 e2       	ldi	r16, 0x20	; 32
    9152:	0e 94 e6 74 	call	0xe9cc	; 0xe9cc <__ashldi3>
    9156:	29 87       	std	Y+9, r18	; 0x09
    9158:	3d 8b       	std	Y+21, r19	; 0x15
    915a:	f4 2e       	mov	r15, r20
    915c:	e5 2e       	mov	r14, r21
    915e:	93 01       	movw	r18, r6
    9160:	82 01       	movw	r16, r4
    9162:	a9 84       	ldd	r10, Y+9	; 0x09
    9164:	a4 28       	or	r10, r4
    9166:	a9 82       	std	Y+1, r10	; 0x01
    9168:	bd 88       	ldd	r11, Y+21	; 0x15
    916a:	b1 2a       	or	r11, r17
    916c:	ba 82       	std	Y+2, r11	; 0x02
    916e:	f2 2a       	or	r15, r18
    9170:	fb 82       	std	Y+3, r15	; 0x03
    9172:	e3 2a       	or	r14, r19
    9174:	ec 82       	std	Y+4, r14	; 0x04
    9176:	6d 83       	std	Y+5, r22	; 0x05
    9178:	7e 83       	std	Y+6, r23	; 0x06
    917a:	8f 83       	std	Y+7, r24	; 0x07
    917c:	98 87       	std	Y+8, r25	; 0x08
    917e:	df 01       	movw	r26, r30
    9180:	a0 5d       	subi	r26, 0xD0	; 208
    9182:	bd 4f       	sbci	r27, 0xFD	; 253
    9184:	8d 91       	ld	r24, X+
    9186:	9d 91       	ld	r25, X+
    9188:	0d 90       	ld	r0, X+
    918a:	bc 91       	ld	r27, X
    918c:	a0 2d       	mov	r26, r0
    918e:	8c 01       	movw	r16, r24
    9190:	9d 01       	movw	r18, r26
    9192:	2b 87       	std	Y+11, r18	; 0x0b
    9194:	3c 87       	std	Y+12, r19	; 0x0c
    9196:	28 2f       	mov	r18, r24
    9198:	31 2f       	mov	r19, r17
    919a:	4b 85       	ldd	r20, Y+11	; 0x0b
    919c:	5c 85       	ldd	r21, Y+12	; 0x0c
    919e:	60 e0       	ldi	r22, 0x00	; 0
    91a0:	70 e0       	ldi	r23, 0x00	; 0
    91a2:	80 e0       	ldi	r24, 0x00	; 0
    91a4:	90 e0       	ldi	r25, 0x00	; 0
    91a6:	00 e2       	ldi	r16, 0x20	; 32
    91a8:	0e 94 e6 74 	call	0xe9cc	; 0xe9cc <__ashldi3>
    91ac:	32 2e       	mov	r3, r18
    91ae:	23 2e       	mov	r2, r19
    91b0:	49 8f       	std	Y+25, r20	; 0x19
    91b2:	5a 8f       	std	Y+26, r21	; 0x1a
    91b4:	f6 2e       	mov	r15, r22
    91b6:	e7 2e       	mov	r14, r23
    91b8:	9f 01       	movw	r18, r30
    91ba:	2c 5c       	subi	r18, 0xCC	; 204
    91bc:	3d 4f       	sbci	r19, 0xFD	; 253
    91be:	d9 01       	movw	r26, r18
    91c0:	4d 91       	ld	r20, X+
    91c2:	5d 91       	ld	r21, X+
    91c4:	6d 91       	ld	r22, X+
    91c6:	7c 91       	ld	r23, X
    91c8:	4d 8b       	std	Y+21, r20	; 0x15
    91ca:	5e 8b       	std	Y+22, r21	; 0x16
    91cc:	6f 8b       	std	Y+23, r22	; 0x17
    91ce:	78 8f       	std	Y+24, r23	; 0x18
    91d0:	8a 01       	movw	r16, r20
    91d2:	9b 01       	movw	r18, r22
    91d4:	34 2a       	or	r3, r20
    91d6:	39 86       	std	Y+9, r3	; 0x09
    91d8:	21 2a       	or	r2, r17
    91da:	2a 86       	std	Y+10, r2	; 0x0a
    91dc:	b9 8d       	ldd	r27, Y+25	; 0x19
    91de:	b2 2b       	or	r27, r18
    91e0:	bb 87       	std	Y+11, r27	; 0x0b
    91e2:	aa 8c       	ldd	r10, Y+26	; 0x1a
    91e4:	a3 2a       	or	r10, r19
    91e6:	ac 86       	std	Y+12, r10	; 0x0c
    91e8:	fd 86       	std	Y+13, r15	; 0x0d
    91ea:	ee 86       	std	Y+14, r14	; 0x0e
    91ec:	8f 87       	std	Y+15, r24	; 0x0f
    91ee:	98 8b       	std	Y+16, r25	; 0x10
    91f0:	29 81       	ldd	r18, Y+1	; 0x01
    91f2:	3b 2d       	mov	r19, r11
    91f4:	4b 81       	ldd	r20, Y+3	; 0x03
    91f6:	5c 81       	ldd	r21, Y+4	; 0x04
    91f8:	6d 81       	ldd	r22, Y+5	; 0x05
    91fa:	7e 81       	ldd	r23, Y+6	; 0x06
    91fc:	8f 81       	ldd	r24, Y+7	; 0x07
    91fe:	98 85       	ldd	r25, Y+8	; 0x08
    9200:	a3 2c       	mov	r10, r3
    9202:	b2 2c       	mov	r11, r2
    9204:	cb 2e       	mov	r12, r27
    9206:	dc 84       	ldd	r13, Y+12	; 0x0c
    9208:	ef 2c       	mov	r14, r15
    920a:	fe 84       	ldd	r15, Y+14	; 0x0e
    920c:	0f 85       	ldd	r16, Y+15	; 0x0f
    920e:	18 89       	ldd	r17, Y+16	; 0x10
    9210:	0e 94 26 75 	call	0xea4c	; 0xea4c <__cmpdi2>
    9214:	09 f0       	breq	.+2      	; 0x9218 <TMR_SR_postprocessReaderSpecificMetadata+0x188>
    9216:	78 f5       	brcc	.+94     	; 0x9276 <TMR_SR_postprocessReaderSpecificMetadata+0x1e6>
    9218:	89 81       	ldd	r24, Y+1	; 0x01
    921a:	9a 81       	ldd	r25, Y+2	; 0x02
    921c:	ab 81       	ldd	r26, Y+3	; 0x03
    921e:	bc 81       	ldd	r27, Y+4	; 0x04
    9220:	09 85       	ldd	r16, Y+9	; 0x09
    9222:	1a 85       	ldd	r17, Y+10	; 0x0a
    9224:	2b 85       	ldd	r18, Y+11	; 0x0b
    9226:	3c 85       	ldd	r19, Y+12	; 0x0c
    9228:	80 1b       	sub	r24, r16
    922a:	91 0b       	sbc	r25, r17
    922c:	a2 0b       	sbc	r26, r18
    922e:	b3 0b       	sbc	r27, r19
    9230:	48 1a       	sub	r4, r24
    9232:	59 0a       	sbc	r5, r25
    9234:	6a 0a       	sbc	r6, r26
    9236:	7b 0a       	sbc	r7, r27
    9238:	1f ef       	ldi	r17, 0xFF	; 255
    923a:	41 1a       	sub	r4, r17
    923c:	51 0a       	sbc	r5, r17
    923e:	61 0a       	sbc	r6, r17
    9240:	71 0a       	sbc	r7, r17
    9242:	2d 89       	ldd	r18, Y+21	; 0x15
    9244:	3e 89       	ldd	r19, Y+22	; 0x16
    9246:	4f 89       	ldd	r20, Y+23	; 0x17
    9248:	58 8d       	ldd	r21, Y+24	; 0x18
    924a:	42 16       	cp	r4, r18
    924c:	53 06       	cpc	r5, r19
    924e:	64 06       	cpc	r6, r20
    9250:	75 06       	cpc	r7, r21
    9252:	88 f4       	brcc	.+34     	; 0x9276 <TMR_SR_postprocessReaderSpecificMetadata+0x1e6>
    9254:	94 01       	movw	r18, r8
    9256:	28 55       	subi	r18, 0x58	; 88
    9258:	3f 4f       	sbci	r19, 0xFF	; 255
    925a:	49 89       	ldd	r20, Y+17	; 0x11
    925c:	5a 89       	ldd	r21, Y+18	; 0x12
    925e:	6b 89       	ldd	r22, Y+19	; 0x13
    9260:	7c 89       	ldd	r23, Y+20	; 0x14
    9262:	4f 5f       	subi	r20, 0xFF	; 255
    9264:	5f 4f       	sbci	r21, 0xFF	; 255
    9266:	6f 4f       	sbci	r22, 0xFF	; 255
    9268:	7f 4f       	sbci	r23, 0xFF	; 255
    926a:	d9 01       	movw	r26, r18
    926c:	4d 93       	st	X+, r20
    926e:	5d 93       	st	X+, r21
    9270:	6d 93       	st	X+, r22
    9272:	7c 93       	st	X, r23
    9274:	13 97       	sbiw	r26, 0x03	; 3
    9276:	df 01       	movw	r26, r30
    9278:	ac 5d       	subi	r26, 0xDC	; 220
    927a:	bd 4f       	sbci	r27, 0xFD	; 253
    927c:	8d 91       	ld	r24, X+
    927e:	9d 91       	ld	r25, X+
    9280:	0d 90       	ld	r0, X+
    9282:	bc 91       	ld	r27, X
    9284:	a0 2d       	mov	r26, r0
    9286:	48 16       	cp	r4, r24
    9288:	59 06       	cpc	r5, r25
    928a:	6a 06       	cpc	r6, r26
    928c:	7b 06       	cpc	r7, r27
    928e:	90 f4       	brcc	.+36     	; 0x92b4 <TMR_SR_postprocessReaderSpecificMetadata+0x224>
    9290:	94 01       	movw	r18, r8
    9292:	28 55       	subi	r18, 0x58	; 88
    9294:	3f 4f       	sbci	r19, 0xFF	; 255
    9296:	d9 01       	movw	r26, r18
    9298:	4d 91       	ld	r20, X+
    929a:	5d 91       	ld	r21, X+
    929c:	6d 91       	ld	r22, X+
    929e:	7c 91       	ld	r23, X
    92a0:	13 97       	sbiw	r26, 0x03	; 3
    92a2:	4f 5f       	subi	r20, 0xFF	; 255
    92a4:	5f 4f       	sbci	r21, 0xFF	; 255
    92a6:	6f 4f       	sbci	r22, 0xFF	; 255
    92a8:	7f 4f       	sbci	r23, 0xFF	; 255
    92aa:	4d 93       	st	X+, r20
    92ac:	5d 93       	st	X+, r21
    92ae:	6d 93       	st	X+, r22
    92b0:	7c 93       	st	X, r23
    92b2:	13 97       	sbiw	r26, 0x03	; 3
    92b4:	94 01       	movw	r18, r8
    92b6:	2c 55       	subi	r18, 0x5C	; 92
    92b8:	3f 4f       	sbci	r19, 0xFF	; 255
    92ba:	d9 01       	movw	r26, r18
    92bc:	4d 92       	st	X+, r4
    92be:	5d 92       	st	X+, r5
    92c0:	6d 92       	st	X+, r6
    92c2:	7c 92       	st	X, r7
    92c4:	13 97       	sbiw	r26, 0x03	; 3
    92c6:	a4 01       	movw	r20, r8
    92c8:	48 55       	subi	r20, 0x58	; 88
    92ca:	5f 4f       	sbci	r21, 0xFF	; 255
    92cc:	da 01       	movw	r26, r20
    92ce:	4d 91       	ld	r20, X+
    92d0:	5d 91       	ld	r21, X+
    92d2:	6d 91       	ld	r22, X+
    92d4:	7c 91       	ld	r23, X
    92d6:	8f 01       	movw	r16, r30
    92d8:	00 5d       	subi	r16, 0xD0	; 208
    92da:	1d 4f       	sbci	r17, 0xFD	; 253
    92dc:	d8 01       	movw	r26, r16
    92de:	4d 93       	st	X+, r20
    92e0:	5d 93       	st	X+, r21
    92e2:	6d 93       	st	X+, r22
    92e4:	7c 93       	st	X, r23
    92e6:	13 97       	sbiw	r26, 0x03	; 3
    92e8:	d9 01       	movw	r26, r18
    92ea:	4d 91       	ld	r20, X+
    92ec:	5d 91       	ld	r21, X+
    92ee:	6d 91       	ld	r22, X+
    92f0:	7c 91       	ld	r23, X
    92f2:	df 01       	movw	r26, r30
    92f4:	ac 5c       	subi	r26, 0xCC	; 204
    92f6:	bd 4f       	sbci	r27, 0xFD	; 253
    92f8:	4d 93       	st	X+, r20
    92fa:	5d 93       	st	X+, r21
    92fc:	6d 93       	st	X+, r22
    92fe:	7c 93       	st	X, r23
    9300:	13 97       	sbiw	r26, 0x03	; 3
    9302:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <isStreamEnabled>
    9306:	81 11       	cpse	r24, r1
    9308:	34 c0       	rjmp	.+104    	; 0x9372 <TMR_SR_postprocessReaderSpecificMetadata+0x2e2>
    930a:	fa 83       	std	Y+2, r31	; 0x02
    930c:	e9 83       	std	Y+1, r30	; 0x01
    930e:	bf 01       	movw	r22, r30
    9310:	c4 01       	movw	r24, r8
    9312:	4d de       	rcall	.-870    	; 0x8fae <TMR_SR_antennaDecoding>
    9314:	e9 81       	ldd	r30, Y+1	; 0x01
    9316:	fa 81       	ldd	r31, Y+2	; 0x02
    9318:	ee 58       	subi	r30, 0x8E	; 142
    931a:	fb 4f       	sbci	r31, 0xFB	; 251
    931c:	80 81       	ld	r24, Z
    931e:	81 11       	cpse	r24, r1
    9320:	1d c0       	rjmp	.+58     	; 0x935c <TMR_SR_postprocessReaderSpecificMetadata+0x2cc>
    9322:	27 c0       	rjmp	.+78     	; 0x9372 <TMR_SR_postprocessReaderSpecificMetadata+0x2e2>
    9324:	d4 01       	movw	r26, r8
    9326:	ac 5a       	subi	r26, 0xAC	; 172
    9328:	bf 4f       	sbci	r27, 0xFF	; 255
    932a:	2c 91       	ld	r18, X
    932c:	01 90       	ld	r0, Z+
    932e:	f0 81       	ld	r31, Z
    9330:	e0 2d       	mov	r30, r0
    9332:	84 2f       	mov	r24, r20
    9334:	90 e0       	ldi	r25, 0x00	; 0
    9336:	bc 01       	movw	r22, r24
    9338:	66 0f       	add	r22, r22
    933a:	77 1f       	adc	r23, r23
    933c:	86 0f       	add	r24, r22
    933e:	97 1f       	adc	r25, r23
    9340:	e8 0f       	add	r30, r24
    9342:	f9 1f       	adc	r31, r25
    9344:	82 81       	ldd	r24, Z+2	; 0x02
    9346:	28 13       	cpse	r18, r24
    9348:	07 c0       	rjmp	.+14     	; 0x9358 <TMR_SR_postprocessReaderSpecificMetadata+0x2c8>
    934a:	81 81       	ldd	r24, Z+1	; 0x01
    934c:	28 13       	cpse	r18, r24
    934e:	04 c0       	rjmp	.+8      	; 0x9358 <TMR_SR_postprocessReaderSpecificMetadata+0x2c8>
    9350:	80 81       	ld	r24, Z
    9352:	fd 01       	movw	r30, r26
    9354:	80 83       	st	Z, r24
    9356:	0d c0       	rjmp	.+26     	; 0x9372 <TMR_SR_postprocessReaderSpecificMetadata+0x2e2>
    9358:	4f 5f       	subi	r20, 0xFF	; 255
    935a:	01 c0       	rjmp	.+2      	; 0x935e <TMR_SR_postprocessReaderSpecificMetadata+0x2ce>
    935c:	40 e0       	ldi	r20, 0x00	; 0
    935e:	e9 81       	ldd	r30, Y+1	; 0x01
    9360:	fa 81       	ldd	r31, Y+2	; 0x02
    9362:	ec 5a       	subi	r30, 0xAC	; 172
    9364:	ff 4f       	sbci	r31, 0xFF	; 255
    9366:	01 90       	ld	r0, Z+
    9368:	f0 81       	ld	r31, Z
    936a:	e0 2d       	mov	r30, r0
    936c:	83 81       	ldd	r24, Z+3	; 0x03
    936e:	48 17       	cp	r20, r24
    9370:	c8 f2       	brcs	.-78     	; 0x9324 <TMR_SR_postprocessReaderSpecificMetadata+0x294>
    9372:	6a 96       	adiw	r28, 0x1a	; 26
    9374:	0f b6       	in	r0, 0x3f	; 63
    9376:	f8 94       	cli
    9378:	de bf       	out	0x3e, r29	; 62
    937a:	0f be       	out	0x3f, r0	; 63
    937c:	cd bf       	out	0x3d, r28	; 61
    937e:	df 91       	pop	r29
    9380:	cf 91       	pop	r28
    9382:	1f 91       	pop	r17
    9384:	0f 91       	pop	r16
    9386:	ff 90       	pop	r15
    9388:	ef 90       	pop	r14
    938a:	df 90       	pop	r13
    938c:	cf 90       	pop	r12
    938e:	bf 90       	pop	r11
    9390:	af 90       	pop	r10
    9392:	9f 90       	pop	r9
    9394:	8f 90       	pop	r8
    9396:	7f 90       	pop	r7
    9398:	6f 90       	pop	r6
    939a:	5f 90       	pop	r5
    939c:	4f 90       	pop	r4
    939e:	3f 90       	pop	r3
    93a0:	2f 90       	pop	r2
    93a2:	08 95       	ret

000093a4 <TMR_SR_cmdSetTxRxPorts>:
    93a4:	cf 93       	push	r28
    93a6:	df 93       	push	r29
    93a8:	cd b7       	in	r28, 0x3d	; 61
    93aa:	de b7       	in	r29, 0x3e	; 62
    93ac:	da 95       	dec	r29
    93ae:	0f b6       	in	r0, 0x3f	; 63
    93b0:	f8 94       	cli
    93b2:	de bf       	out	0x3e, r29	; 62
    93b4:	0f be       	out	0x3f, r0	; 63
    93b6:	cd bf       	out	0x3d, r28	; 61
    93b8:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    93bc:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    93c0:	41 e9       	ldi	r20, 0x91	; 145
    93c2:	4b 83       	std	Y+3, r20	; 0x03
    93c4:	2e 5f       	subi	r18, 0xFE	; 254
    93c6:	3f 4f       	sbci	r19, 0xFF	; 255
    93c8:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    93cc:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    93d0:	6c 83       	std	Y+4, r22	; 0x04
    93d2:	fc 01       	movw	r30, r24
    93d4:	e6 50       	subi	r30, 0x06	; 6
    93d6:	fa 4f       	sbci	r31, 0xFA	; 250
    93d8:	40 81       	ld	r20, Z
    93da:	44 23       	and	r20, r20
    93dc:	49 f0       	breq	.+18     	; 0x93f0 <TMR_SR_cmdSetTxRxPorts+0x4c>
    93de:	2f 5f       	subi	r18, 0xFF	; 255
    93e0:	3f 4f       	sbci	r19, 0xFF	; 255
    93e2:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    93e6:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    93ea:	6d 83       	std	Y+5, r22	; 0x05
    93ec:	45 e0       	ldi	r20, 0x05	; 5
    93ee:	01 c0       	rjmp	.+2      	; 0x93f2 <TMR_SR_cmdSetTxRxPorts+0x4e>
    93f0:	44 e0       	ldi	r20, 0x04	; 4
    93f2:	be 01       	movw	r22, r28
    93f4:	6f 5f       	subi	r22, 0xFF	; 255
    93f6:	7f 4f       	sbci	r23, 0xFF	; 255
    93f8:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    93fc:	d3 95       	inc	r29
    93fe:	0f b6       	in	r0, 0x3f	; 63
    9400:	f8 94       	cli
    9402:	de bf       	out	0x3e, r29	; 62
    9404:	0f be       	out	0x3f, r0	; 63
    9406:	cd bf       	out	0x3d, r28	; 61
    9408:	df 91       	pop	r29
    940a:	cf 91       	pop	r28
    940c:	08 95       	ret

0000940e <TMR_SR_cmdSetAntennaSearchList>:
    940e:	ef 92       	push	r14
    9410:	ff 92       	push	r15
    9412:	0f 93       	push	r16
    9414:	1f 93       	push	r17
    9416:	cf 93       	push	r28
    9418:	df 93       	push	r29
    941a:	cd b7       	in	r28, 0x3d	; 61
    941c:	de b7       	in	r29, 0x3e	; 62
    941e:	da 95       	dec	r29
    9420:	0f b6       	in	r0, 0x3f	; 63
    9422:	f8 94       	cli
    9424:	de bf       	out	0x3e, r29	; 62
    9426:	0f be       	out	0x3f, r0	; 63
    9428:	cd bf       	out	0x3d, r28	; 61
    942a:	8c 01       	movw	r16, r24
    942c:	7a 01       	movw	r14, r20
    942e:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    9432:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    9436:	21 e9       	ldi	r18, 0x91	; 145
    9438:	2b 83       	std	Y+3, r18	; 0x03
    943a:	02 96       	adiw	r24, 0x02	; 2
    943c:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    9440:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    9444:	f8 01       	movw	r30, r16
    9446:	e6 50       	subi	r30, 0x06	; 6
    9448:	fa 4f       	sbci	r31, 0xFA	; 250
    944a:	70 81       	ld	r23, Z
    944c:	81 e0       	ldi	r24, 0x01	; 1
    944e:	87 27       	eor	r24, r23
    9450:	20 e8       	ldi	r18, 0x80	; 128
    9452:	82 9f       	mul	r24, r18
    9454:	c0 01       	movw	r24, r0
    9456:	11 24       	eor	r1, r1
    9458:	82 60       	ori	r24, 0x02	; 2
    945a:	8c 83       	std	Y+4, r24	; 0x04
    945c:	90 e0       	ldi	r25, 0x00	; 0
    945e:	44 e0       	ldi	r20, 0x04	; 4
    9460:	2b c0       	rjmp	.+86     	; 0x94b8 <TMR_SR_cmdSetAntennaSearchList+0xaa>
    9462:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    9466:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    946a:	2f 5f       	subi	r18, 0xFF	; 255
    946c:	3f 4f       	sbci	r19, 0xFF	; 255
    946e:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    9472:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    9476:	51 e0       	ldi	r21, 0x01	; 1
    9478:	54 0f       	add	r21, r20
    947a:	d7 01       	movw	r26, r14
    947c:	a9 0f       	add	r26, r25
    947e:	b1 1d       	adc	r27, r1
    9480:	8c 91       	ld	r24, X
    9482:	e1 e0       	ldi	r30, 0x01	; 1
    9484:	f0 e0       	ldi	r31, 0x00	; 0
    9486:	ec 0f       	add	r30, r28
    9488:	fd 1f       	adc	r31, r29
    948a:	e4 0f       	add	r30, r20
    948c:	f1 1d       	adc	r31, r1
    948e:	80 83       	st	Z, r24
    9490:	77 23       	and	r23, r23
    9492:	81 f0       	breq	.+32     	; 0x94b4 <TMR_SR_cmdSetAntennaSearchList+0xa6>
    9494:	2f 5f       	subi	r18, 0xFF	; 255
    9496:	3f 4f       	sbci	r19, 0xFF	; 255
    9498:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    949c:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    94a0:	4e 5f       	subi	r20, 0xFE	; 254
    94a2:	8c 91       	ld	r24, X
    94a4:	e1 e0       	ldi	r30, 0x01	; 1
    94a6:	f0 e0       	ldi	r31, 0x00	; 0
    94a8:	ec 0f       	add	r30, r28
    94aa:	fd 1f       	adc	r31, r29
    94ac:	e5 0f       	add	r30, r21
    94ae:	f1 1d       	adc	r31, r1
    94b0:	80 83       	st	Z, r24
    94b2:	01 c0       	rjmp	.+2      	; 0x94b6 <TMR_SR_cmdSetAntennaSearchList+0xa8>
    94b4:	45 2f       	mov	r20, r21
    94b6:	9f 5f       	subi	r25, 0xFF	; 255
    94b8:	96 17       	cp	r25, r22
    94ba:	98 f2       	brcs	.-90     	; 0x9462 <TMR_SR_cmdSetAntennaSearchList+0x54>
    94bc:	be 01       	movw	r22, r28
    94be:	6f 5f       	subi	r22, 0xFF	; 255
    94c0:	7f 4f       	sbci	r23, 0xFF	; 255
    94c2:	c8 01       	movw	r24, r16
    94c4:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    94c8:	d3 95       	inc	r29
    94ca:	0f b6       	in	r0, 0x3f	; 63
    94cc:	f8 94       	cli
    94ce:	de bf       	out	0x3e, r29	; 62
    94d0:	0f be       	out	0x3f, r0	; 63
    94d2:	cd bf       	out	0x3d, r28	; 61
    94d4:	df 91       	pop	r29
    94d6:	cf 91       	pop	r28
    94d8:	1f 91       	pop	r17
    94da:	0f 91       	pop	r16
    94dc:	ff 90       	pop	r15
    94de:	ef 90       	pop	r14
    94e0:	08 95       	ret

000094e2 <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime>:
    94e2:	ef 92       	push	r14
    94e4:	ff 92       	push	r15
    94e6:	0f 93       	push	r16
    94e8:	1f 93       	push	r17
    94ea:	cf 93       	push	r28
    94ec:	df 93       	push	r29
    94ee:	cd b7       	in	r28, 0x3d	; 61
    94f0:	de b7       	in	r29, 0x3e	; 62
    94f2:	da 95       	dec	r29
    94f4:	0f b6       	in	r0, 0x3f	; 63
    94f6:	f8 94       	cli
    94f8:	de bf       	out	0x3e, r29	; 62
    94fa:	0f be       	out	0x3f, r0	; 63
    94fc:	cd bf       	out	0x3d, r28	; 61
    94fe:	8c 01       	movw	r16, r24
    9500:	7a 01       	movw	r14, r20
    9502:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    9506:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    950a:	21 e9       	ldi	r18, 0x91	; 145
    950c:	2b 83       	std	Y+3, r18	; 0x03
    950e:	24 e0       	ldi	r18, 0x04	; 4
    9510:	2c 83       	std	Y+4, r18	; 0x04
    9512:	03 96       	adiw	r24, 0x03	; 3
    9514:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    9518:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    951c:	f8 01       	movw	r30, r16
    951e:	e2 5f       	subi	r30, 0xF2	; 242
    9520:	f9 4f       	sbci	r31, 0xF9	; 249
    9522:	80 81       	ld	r24, Z
    9524:	8d 83       	std	Y+5, r24	; 0x05
    9526:	95 e0       	ldi	r25, 0x05	; 5
    9528:	50 e0       	ldi	r21, 0x00	; 0
    952a:	78 c0       	rjmp	.+240    	; 0x961c <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x13a>
    952c:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    9530:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    9534:	2f 5f       	subi	r18, 0xFF	; 255
    9536:	3f 4f       	sbci	r19, 0xFF	; 255
    9538:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    953c:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    9540:	71 e0       	ldi	r23, 0x01	; 1
    9542:	79 0f       	add	r23, r25
    9544:	a5 2f       	mov	r26, r21
    9546:	b0 e0       	ldi	r27, 0x00	; 0
    9548:	fd 01       	movw	r30, r26
    954a:	ee 0f       	add	r30, r30
    954c:	ff 1f       	adc	r31, r31
    954e:	ee 0f       	add	r30, r30
    9550:	ff 1f       	adc	r31, r31
    9552:	ee 0f       	add	r30, r30
    9554:	ff 1f       	adc	r31, r31
    9556:	ea 1b       	sub	r30, r26
    9558:	fb 0b       	sbc	r31, r27
    955a:	ee 0d       	add	r30, r14
    955c:	ff 1d       	adc	r31, r15
    955e:	40 81       	ld	r20, Z
    9560:	a1 e0       	ldi	r26, 0x01	; 1
    9562:	b0 e0       	ldi	r27, 0x00	; 0
    9564:	ac 0f       	add	r26, r28
    9566:	bd 1f       	adc	r27, r29
    9568:	a9 0f       	add	r26, r25
    956a:	b1 1d       	adc	r27, r1
    956c:	4c 93       	st	X, r20
    956e:	82 30       	cpi	r24, 0x02	; 2
    9570:	f9 f0       	breq	.+62     	; 0x95b0 <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0xce>
    9572:	83 30       	cpi	r24, 0x03	; 3
    9574:	b9 f1       	breq	.+110    	; 0x95e4 <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x102>
    9576:	81 30       	cpi	r24, 0x01	; 1
    9578:	09 f0       	breq	.+2      	; 0x957c <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x9a>
    957a:	4e c0       	rjmp	.+156    	; 0x9618 <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x136>
    957c:	41 81       	ldd	r20, Z+1	; 0x01
    957e:	a2 81       	ldd	r26, Z+2	; 0x02
    9580:	2e 5f       	subi	r18, 0xFE	; 254
    9582:	3f 4f       	sbci	r19, 0xFF	; 255
    9584:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    9588:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    958c:	e1 e0       	ldi	r30, 0x01	; 1
    958e:	f0 e0       	ldi	r31, 0x00	; 0
    9590:	ec 0f       	add	r30, r28
    9592:	fd 1f       	adc	r31, r29
    9594:	e7 0f       	add	r30, r23
    9596:	f1 1d       	adc	r31, r1
    9598:	a0 83       	st	Z, r26
    959a:	22 e0       	ldi	r18, 0x02	; 2
    959c:	29 0f       	add	r18, r25
    959e:	e1 e0       	ldi	r30, 0x01	; 1
    95a0:	f0 e0       	ldi	r31, 0x00	; 0
    95a2:	ec 0f       	add	r30, r28
    95a4:	fd 1f       	adc	r31, r29
    95a6:	e2 0f       	add	r30, r18
    95a8:	f1 1d       	adc	r31, r1
    95aa:	9d 5f       	subi	r25, 0xFD	; 253
    95ac:	40 83       	st	Z, r20
    95ae:	35 c0       	rjmp	.+106    	; 0x961a <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x138>
    95b0:	43 81       	ldd	r20, Z+3	; 0x03
    95b2:	a4 81       	ldd	r26, Z+4	; 0x04
    95b4:	2e 5f       	subi	r18, 0xFE	; 254
    95b6:	3f 4f       	sbci	r19, 0xFF	; 255
    95b8:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    95bc:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    95c0:	e1 e0       	ldi	r30, 0x01	; 1
    95c2:	f0 e0       	ldi	r31, 0x00	; 0
    95c4:	ec 0f       	add	r30, r28
    95c6:	fd 1f       	adc	r31, r29
    95c8:	e7 0f       	add	r30, r23
    95ca:	f1 1d       	adc	r31, r1
    95cc:	a0 83       	st	Z, r26
    95ce:	22 e0       	ldi	r18, 0x02	; 2
    95d0:	29 0f       	add	r18, r25
    95d2:	e1 e0       	ldi	r30, 0x01	; 1
    95d4:	f0 e0       	ldi	r31, 0x00	; 0
    95d6:	ec 0f       	add	r30, r28
    95d8:	fd 1f       	adc	r31, r29
    95da:	e2 0f       	add	r30, r18
    95dc:	f1 1d       	adc	r31, r1
    95de:	9d 5f       	subi	r25, 0xFD	; 253
    95e0:	40 83       	st	Z, r20
    95e2:	1b c0       	rjmp	.+54     	; 0x961a <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x138>
    95e4:	45 81       	ldd	r20, Z+5	; 0x05
    95e6:	a6 81       	ldd	r26, Z+6	; 0x06
    95e8:	2e 5f       	subi	r18, 0xFE	; 254
    95ea:	3f 4f       	sbci	r19, 0xFF	; 255
    95ec:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    95f0:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    95f4:	e1 e0       	ldi	r30, 0x01	; 1
    95f6:	f0 e0       	ldi	r31, 0x00	; 0
    95f8:	ec 0f       	add	r30, r28
    95fa:	fd 1f       	adc	r31, r29
    95fc:	e7 0f       	add	r30, r23
    95fe:	f1 1d       	adc	r31, r1
    9600:	a0 83       	st	Z, r26
    9602:	22 e0       	ldi	r18, 0x02	; 2
    9604:	29 0f       	add	r18, r25
    9606:	e1 e0       	ldi	r30, 0x01	; 1
    9608:	f0 e0       	ldi	r31, 0x00	; 0
    960a:	ec 0f       	add	r30, r28
    960c:	fd 1f       	adc	r31, r29
    960e:	e2 0f       	add	r30, r18
    9610:	f1 1d       	adc	r31, r1
    9612:	9d 5f       	subi	r25, 0xFD	; 253
    9614:	40 83       	st	Z, r20
    9616:	01 c0       	rjmp	.+2      	; 0x961a <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x138>
    9618:	97 2f       	mov	r25, r23
    961a:	5f 5f       	subi	r21, 0xFF	; 255
    961c:	56 17       	cp	r21, r22
    961e:	08 f4       	brcc	.+2      	; 0x9622 <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x140>
    9620:	85 cf       	rjmp	.-246    	; 0x952c <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x4a>
    9622:	49 2f       	mov	r20, r25
    9624:	be 01       	movw	r22, r28
    9626:	6f 5f       	subi	r22, 0xFF	; 255
    9628:	7f 4f       	sbci	r23, 0xFF	; 255
    962a:	c8 01       	movw	r24, r16
    962c:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    9630:	d3 95       	inc	r29
    9632:	0f b6       	in	r0, 0x3f	; 63
    9634:	f8 94       	cli
    9636:	de bf       	out	0x3e, r29	; 62
    9638:	0f be       	out	0x3f, r0	; 63
    963a:	cd bf       	out	0x3d, r28	; 61
    963c:	df 91       	pop	r29
    963e:	cf 91       	pop	r28
    9640:	1f 91       	pop	r17
    9642:	0f 91       	pop	r16
    9644:	ff 90       	pop	r15
    9646:	ef 90       	pop	r14
    9648:	08 95       	ret

0000964a <TMR_SR_cmdSetReadWriteTxPower>:
    964a:	cf 93       	push	r28
    964c:	df 93       	push	r29
    964e:	cd b7       	in	r28, 0x3d	; 61
    9650:	de b7       	in	r29, 0x3e	; 62
    9652:	da 95       	dec	r29
    9654:	0f b6       	in	r0, 0x3f	; 63
    9656:	f8 94       	cli
    9658:	de bf       	out	0x3e, r29	; 62
    965a:	0f be       	out	0x3f, r0	; 63
    965c:	cd bf       	out	0x3d, r28	; 61
    965e:	60 91 57 02 	lds	r22, 0x0257	; 0x800257 <totalMsgIdx>
    9662:	70 91 58 02 	lds	r23, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    9666:	2b 83       	std	Y+3, r18	; 0x03
    9668:	9b 01       	movw	r18, r22
    966a:	2d 5f       	subi	r18, 0xFD	; 253
    966c:	3f 4f       	sbci	r19, 0xFF	; 255
    966e:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    9672:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    9676:	5c 83       	std	Y+4, r21	; 0x04
    9678:	4d 83       	std	Y+5, r20	; 0x05
    967a:	45 e0       	ldi	r20, 0x05	; 5
    967c:	be 01       	movw	r22, r28
    967e:	6f 5f       	subi	r22, 0xFF	; 255
    9680:	7f 4f       	sbci	r23, 0xFF	; 255
    9682:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    9686:	d3 95       	inc	r29
    9688:	0f b6       	in	r0, 0x3f	; 63
    968a:	f8 94       	cli
    968c:	de bf       	out	0x3e, r29	; 62
    968e:	0f be       	out	0x3f, r0	; 63
    9690:	cd bf       	out	0x3d, r28	; 61
    9692:	df 91       	pop	r29
    9694:	cf 91       	pop	r28
    9696:	08 95       	ret

00009698 <TMR_SR_cmdSetReadTxPower>:
    9698:	22 e9       	ldi	r18, 0x92	; 146
    969a:	d7 cf       	rjmp	.-82     	; 0x964a <TMR_SR_cmdSetReadWriteTxPower>
    969c:	08 95       	ret

0000969e <TMR_SR_cmdSetProtocolList>:
    969e:	8f 92       	push	r8
    96a0:	9f 92       	push	r9
    96a2:	af 92       	push	r10
    96a4:	bf 92       	push	r11
    96a6:	ef 92       	push	r14
    96a8:	ff 92       	push	r15
    96aa:	0f 93       	push	r16
    96ac:	1f 93       	push	r17
    96ae:	cf 93       	push	r28
    96b0:	df 93       	push	r29
    96b2:	cd b7       	in	r28, 0x3d	; 61
    96b4:	de b7       	in	r29, 0x3e	; 62
    96b6:	da 95       	dec	r29
    96b8:	0f b6       	in	r0, 0x3f	; 63
    96ba:	f8 94       	cli
    96bc:	de bf       	out	0x3e, r29	; 62
    96be:	0f be       	out	0x3f, r0	; 63
    96c0:	cd bf       	out	0x3d, r28	; 61
    96c2:	7c 01       	movw	r14, r24
    96c4:	db 01       	movw	r26, r22
    96c6:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    96ca:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    96ce:	23 e9       	ldi	r18, 0x93	; 147
    96d0:	2b 83       	std	Y+3, r18	; 0x03
    96d2:	02 96       	adiw	r24, 0x02	; 2
    96d4:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    96d8:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    96dc:	81 e0       	ldi	r24, 0x01	; 1
    96de:	8c 83       	std	Y+4, r24	; 0x04
    96e0:	90 e0       	ldi	r25, 0x00	; 0
    96e2:	44 e0       	ldi	r20, 0x04	; 4
    96e4:	40 c0       	rjmp	.+128    	; 0x9766 <TMR_SR_cmdSetProtocolList+0xc8>
    96e6:	ed 91       	ld	r30, X+
    96e8:	fc 91       	ld	r31, X
    96ea:	11 97       	sbiw	r26, 0x01	; 1
    96ec:	e9 0f       	add	r30, r25
    96ee:	f1 1d       	adc	r31, r1
    96f0:	80 81       	ld	r24, Z
    96f2:	28 2f       	mov	r18, r24
    96f4:	30 e0       	ldi	r19, 0x00	; 0
    96f6:	21 50       	subi	r18, 0x01	; 1
    96f8:	31 09       	sbc	r19, r1
    96fa:	01 e0       	ldi	r16, 0x01	; 1
    96fc:	10 e0       	ldi	r17, 0x00	; 0
    96fe:	02 c0       	rjmp	.+4      	; 0x9704 <TMR_SR_cmdSetProtocolList+0x66>
    9700:	00 0f       	add	r16, r16
    9702:	11 1f       	adc	r17, r17
    9704:	2a 95       	dec	r18
    9706:	e2 f7       	brpl	.-8      	; 0x9700 <TMR_SR_cmdSetProtocolList+0x62>
    9708:	f7 01       	movw	r30, r14
    970a:	e3 58       	subi	r30, 0x83	; 131
    970c:	fc 4f       	sbci	r31, 0xFC	; 252
    970e:	80 80       	ld	r8, Z
    9710:	91 80       	ldd	r9, Z+1	; 0x01
    9712:	a2 80       	ldd	r10, Z+2	; 0x02
    9714:	b3 80       	ldd	r11, Z+3	; 0x03
    9716:	01 2e       	mov	r0, r17
    9718:	00 0c       	add	r0, r0
    971a:	22 0b       	sbc	r18, r18
    971c:	33 0b       	sbc	r19, r19
    971e:	08 21       	and	r16, r8
    9720:	19 21       	and	r17, r9
    9722:	2a 21       	and	r18, r10
    9724:	3b 21       	and	r19, r11
    9726:	01 2b       	or	r16, r17
    9728:	02 2b       	or	r16, r18
    972a:	03 2b       	or	r16, r19
    972c:	49 f1       	breq	.+82     	; 0x9780 <TMR_SR_cmdSetProtocolList+0xe2>
    972e:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    9732:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    9736:	2e 5f       	subi	r18, 0xFE	; 254
    9738:	3f 4f       	sbci	r19, 0xFF	; 255
    973a:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    973e:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    9742:	e1 e0       	ldi	r30, 0x01	; 1
    9744:	f0 e0       	ldi	r31, 0x00	; 0
    9746:	ec 0f       	add	r30, r28
    9748:	fd 1f       	adc	r31, r29
    974a:	e4 0f       	add	r30, r20
    974c:	f1 1d       	adc	r31, r1
    974e:	10 82       	st	Z, r1
    9750:	21 e0       	ldi	r18, 0x01	; 1
    9752:	24 0f       	add	r18, r20
    9754:	e1 e0       	ldi	r30, 0x01	; 1
    9756:	f0 e0       	ldi	r31, 0x00	; 0
    9758:	ec 0f       	add	r30, r28
    975a:	fd 1f       	adc	r31, r29
    975c:	e2 0f       	add	r30, r18
    975e:	f1 1d       	adc	r31, r1
    9760:	4e 5f       	subi	r20, 0xFE	; 254
    9762:	80 83       	st	Z, r24
    9764:	9f 5f       	subi	r25, 0xFF	; 255
    9766:	13 96       	adiw	r26, 0x03	; 3
    9768:	8c 91       	ld	r24, X
    976a:	13 97       	sbiw	r26, 0x03	; 3
    976c:	98 17       	cp	r25, r24
    976e:	08 f4       	brcc	.+2      	; 0x9772 <TMR_SR_cmdSetProtocolList+0xd4>
    9770:	ba cf       	rjmp	.-140    	; 0x96e6 <TMR_SR_cmdSetProtocolList+0x48>
    9772:	c7 01       	movw	r24, r14
    9774:	be 01       	movw	r22, r28
    9776:	6f 5f       	subi	r22, 0xFF	; 255
    9778:	7f 4f       	sbci	r23, 0xFF	; 255
    977a:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    977e:	04 c0       	rjmp	.+8      	; 0x9788 <TMR_SR_cmdSetProtocolList+0xea>
    9780:	63 e0       	ldi	r22, 0x03	; 3
    9782:	70 e0       	ldi	r23, 0x00	; 0
    9784:	80 e0       	ldi	r24, 0x00	; 0
    9786:	93 e0       	ldi	r25, 0x03	; 3
    9788:	d3 95       	inc	r29
    978a:	0f b6       	in	r0, 0x3f	; 63
    978c:	f8 94       	cli
    978e:	de bf       	out	0x3e, r29	; 62
    9790:	0f be       	out	0x3f, r0	; 63
    9792:	cd bf       	out	0x3d, r28	; 61
    9794:	df 91       	pop	r29
    9796:	cf 91       	pop	r28
    9798:	1f 91       	pop	r17
    979a:	0f 91       	pop	r16
    979c:	ff 90       	pop	r15
    979e:	ef 90       	pop	r14
    97a0:	bf 90       	pop	r11
    97a2:	af 90       	pop	r10
    97a4:	9f 90       	pop	r9
    97a6:	8f 90       	pop	r8
    97a8:	08 95       	ret

000097aa <TMR_SR_cmdSetProtocol>:
    97aa:	cf 93       	push	r28
    97ac:	df 93       	push	r29
    97ae:	cd b7       	in	r28, 0x3d	; 61
    97b0:	de b7       	in	r29, 0x3e	; 62
    97b2:	da 95       	dec	r29
    97b4:	0f b6       	in	r0, 0x3f	; 63
    97b6:	f8 94       	cli
    97b8:	de bf       	out	0x3e, r29	; 62
    97ba:	0f be       	out	0x3f, r0	; 63
    97bc:	cd bf       	out	0x3d, r28	; 61
    97be:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    97c2:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    97c6:	43 e9       	ldi	r20, 0x93	; 147
    97c8:	4b 83       	std	Y+3, r20	; 0x03
    97ca:	2d 5f       	subi	r18, 0xFD	; 253
    97cc:	3f 4f       	sbci	r19, 0xFF	; 255
    97ce:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    97d2:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    97d6:	1c 82       	std	Y+4, r1	; 0x04
    97d8:	6d 83       	std	Y+5, r22	; 0x05
    97da:	45 e0       	ldi	r20, 0x05	; 5
    97dc:	be 01       	movw	r22, r28
    97de:	6f 5f       	subi	r22, 0xFF	; 255
    97e0:	7f 4f       	sbci	r23, 0xFF	; 255
    97e2:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    97e6:	d3 95       	inc	r29
    97e8:	0f b6       	in	r0, 0x3f	; 63
    97ea:	f8 94       	cli
    97ec:	de bf       	out	0x3e, r29	; 62
    97ee:	0f be       	out	0x3f, r0	; 63
    97f0:	cd bf       	out	0x3d, r28	; 61
    97f2:	df 91       	pop	r29
    97f4:	cf 91       	pop	r28
    97f6:	08 95       	ret

000097f8 <TMR_SR_cmdSetWriteTxPower>:
    97f8:	24 e9       	ldi	r18, 0x94	; 148
    97fa:	27 cf       	rjmp	.-434    	; 0x964a <TMR_SR_cmdSetReadWriteTxPower>
    97fc:	08 95       	ret

000097fe <TMR_SR_cmdSetFrequencyHopTable>:
    97fe:	ef 92       	push	r14
    9800:	ff 92       	push	r15
    9802:	1f 93       	push	r17
    9804:	cf 93       	push	r28
    9806:	df 93       	push	r29
    9808:	cd b7       	in	r28, 0x3d	; 61
    980a:	de b7       	in	r29, 0x3e	; 62
    980c:	da 95       	dec	r29
    980e:	0f b6       	in	r0, 0x3f	; 63
    9810:	f8 94       	cli
    9812:	de bf       	out	0x3e, r29	; 62
    9814:	0f be       	out	0x3f, r0	; 63
    9816:	cd bf       	out	0x3d, r28	; 61
    9818:	7c 01       	movw	r14, r24
    981a:	6f 33       	cpi	r22, 0x3F	; 63
    981c:	08 f0       	brcs	.+2      	; 0x9820 <TMR_SR_cmdSetFrequencyHopTable+0x22>
    981e:	52 c0       	rjmp	.+164    	; 0x98c4 <TMR_SR_cmdSetFrequencyHopTable+0xc6>
    9820:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    9824:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    9828:	01 96       	adiw	r24, 0x01	; 1
    982a:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    982e:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    9832:	85 e9       	ldi	r24, 0x95	; 149
    9834:	8b 83       	std	Y+3, r24	; 0x03
    9836:	20 e0       	ldi	r18, 0x00	; 0
    9838:	93 e0       	ldi	r25, 0x03	; 3
    983a:	3a c0       	rjmp	.+116    	; 0x98b0 <TMR_SR_cmdSetFrequencyHopTable+0xb2>
    983c:	e2 2f       	mov	r30, r18
    983e:	f0 e0       	ldi	r31, 0x00	; 0
    9840:	ee 0f       	add	r30, r30
    9842:	ff 1f       	adc	r31, r31
    9844:	ee 0f       	add	r30, r30
    9846:	ff 1f       	adc	r31, r31
    9848:	e4 0f       	add	r30, r20
    984a:	f5 1f       	adc	r31, r21
    984c:	80 81       	ld	r24, Z
    984e:	31 81       	ldd	r19, Z+1	; 0x01
    9850:	12 81       	ldd	r17, Z+2	; 0x02
    9852:	73 81       	ldd	r23, Z+3	; 0x03
    9854:	e0 91 57 02 	lds	r30, 0x0257	; 0x800257 <totalMsgIdx>
    9858:	f0 91 58 02 	lds	r31, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    985c:	34 96       	adiw	r30, 0x04	; 4
    985e:	f0 93 58 02 	sts	0x0258, r31	; 0x800258 <totalMsgIdx+0x1>
    9862:	e0 93 57 02 	sts	0x0257, r30	; 0x800257 <totalMsgIdx>
    9866:	e1 e0       	ldi	r30, 0x01	; 1
    9868:	e9 0f       	add	r30, r25
    986a:	a1 e0       	ldi	r26, 0x01	; 1
    986c:	b0 e0       	ldi	r27, 0x00	; 0
    986e:	ac 0f       	add	r26, r28
    9870:	bd 1f       	adc	r27, r29
    9872:	a9 0f       	add	r26, r25
    9874:	b1 1d       	adc	r27, r1
    9876:	7c 93       	st	X, r23
    9878:	72 e0       	ldi	r23, 0x02	; 2
    987a:	79 0f       	add	r23, r25
    987c:	a1 e0       	ldi	r26, 0x01	; 1
    987e:	b0 e0       	ldi	r27, 0x00	; 0
    9880:	ac 0f       	add	r26, r28
    9882:	bd 1f       	adc	r27, r29
    9884:	ae 0f       	add	r26, r30
    9886:	b1 1d       	adc	r27, r1
    9888:	fd 01       	movw	r30, r26
    988a:	10 83       	st	Z, r17
    988c:	e1 e0       	ldi	r30, 0x01	; 1
    988e:	f0 e0       	ldi	r31, 0x00	; 0
    9890:	ec 0f       	add	r30, r28
    9892:	fd 1f       	adc	r31, r29
    9894:	e7 0f       	add	r30, r23
    9896:	f1 1d       	adc	r31, r1
    9898:	30 83       	st	Z, r19
    989a:	33 e0       	ldi	r19, 0x03	; 3
    989c:	39 0f       	add	r19, r25
    989e:	e1 e0       	ldi	r30, 0x01	; 1
    98a0:	f0 e0       	ldi	r31, 0x00	; 0
    98a2:	ec 0f       	add	r30, r28
    98a4:	fd 1f       	adc	r31, r29
    98a6:	e3 0f       	add	r30, r19
    98a8:	f1 1d       	adc	r31, r1
    98aa:	9c 5f       	subi	r25, 0xFC	; 252
    98ac:	80 83       	st	Z, r24
    98ae:	2f 5f       	subi	r18, 0xFF	; 255
    98b0:	26 17       	cp	r18, r22
    98b2:	20 f2       	brcs	.-120    	; 0x983c <TMR_SR_cmdSetFrequencyHopTable+0x3e>
    98b4:	49 2f       	mov	r20, r25
    98b6:	be 01       	movw	r22, r28
    98b8:	6f 5f       	subi	r22, 0xFF	; 255
    98ba:	7f 4f       	sbci	r23, 0xFF	; 255
    98bc:	c7 01       	movw	r24, r14
    98be:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    98c2:	04 c0       	rjmp	.+8      	; 0x98cc <TMR_SR_cmdSetFrequencyHopTable+0xce>
    98c4:	66 e0       	ldi	r22, 0x06	; 6
    98c6:	70 e0       	ldi	r23, 0x00	; 0
    98c8:	80 e0       	ldi	r24, 0x00	; 0
    98ca:	93 e0       	ldi	r25, 0x03	; 3
    98cc:	d3 95       	inc	r29
    98ce:	0f b6       	in	r0, 0x3f	; 63
    98d0:	f8 94       	cli
    98d2:	de bf       	out	0x3e, r29	; 62
    98d4:	0f be       	out	0x3f, r0	; 63
    98d6:	cd bf       	out	0x3d, r28	; 61
    98d8:	df 91       	pop	r29
    98da:	cf 91       	pop	r28
    98dc:	1f 91       	pop	r17
    98de:	ff 90       	pop	r15
    98e0:	ef 90       	pop	r14
    98e2:	08 95       	ret

000098e4 <TMR_SR_cmdSetFrequencyHopTableOption>:
    98e4:	cf 93       	push	r28
    98e6:	df 93       	push	r29
    98e8:	cd b7       	in	r28, 0x3d	; 61
    98ea:	de b7       	in	r29, 0x3e	; 62
    98ec:	da 95       	dec	r29
    98ee:	0f b6       	in	r0, 0x3f	; 63
    98f0:	f8 94       	cli
    98f2:	de bf       	out	0x3e, r29	; 62
    98f4:	0f be       	out	0x3f, r0	; 63
    98f6:	cd bf       	out	0x3d, r28	; 61
    98f8:	e0 91 57 02 	lds	r30, 0x0257	; 0x800257 <totalMsgIdx>
    98fc:	f0 91 58 02 	lds	r31, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    9900:	35 e9       	ldi	r19, 0x95	; 149
    9902:	3b 83       	std	Y+3, r19	; 0x03
    9904:	2c 83       	std	Y+4, r18	; 0x04
    9906:	9f 01       	movw	r18, r30
    9908:	2a 5f       	subi	r18, 0xFA	; 250
    990a:	3f 4f       	sbci	r19, 0xFF	; 255
    990c:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    9910:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    9914:	7d 83       	std	Y+5, r23	; 0x05
    9916:	6e 83       	std	Y+6, r22	; 0x06
    9918:	5f 83       	std	Y+7, r21	; 0x07
    991a:	48 87       	std	Y+8, r20	; 0x08
    991c:	48 e0       	ldi	r20, 0x08	; 8
    991e:	be 01       	movw	r22, r28
    9920:	6f 5f       	subi	r22, 0xFF	; 255
    9922:	7f 4f       	sbci	r23, 0xFF	; 255
    9924:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    9928:	d3 95       	inc	r29
    992a:	0f b6       	in	r0, 0x3f	; 63
    992c:	f8 94       	cli
    992e:	de bf       	out	0x3e, r29	; 62
    9930:	0f be       	out	0x3f, r0	; 63
    9932:	cd bf       	out	0x3d, r28	; 61
    9934:	df 91       	pop	r29
    9936:	cf 91       	pop	r28
    9938:	08 95       	ret

0000993a <TMR_SR_cmdSetRegion>:
    993a:	cf 93       	push	r28
    993c:	df 93       	push	r29
    993e:	cd b7       	in	r28, 0x3d	; 61
    9940:	de b7       	in	r29, 0x3e	; 62
    9942:	da 95       	dec	r29
    9944:	0f b6       	in	r0, 0x3f	; 63
    9946:	f8 94       	cli
    9948:	de bf       	out	0x3e, r29	; 62
    994a:	0f be       	out	0x3f, r0	; 63
    994c:	cd bf       	out	0x3d, r28	; 61
    994e:	20 91 5a 02 	lds	r18, 0x025A	; 0x80025a <regionConfigurationFlag>
    9952:	22 23       	and	r18, r18
    9954:	59 f1       	breq	.+86     	; 0x99ac <TMR_SR_cmdSetRegion+0x72>
    9956:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    995a:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    995e:	47 e9       	ldi	r20, 0x97	; 151
    9960:	4b 83       	std	Y+3, r20	; 0x03
    9962:	41 e0       	ldi	r20, 0x01	; 1
    9964:	4c 83       	std	Y+4, r20	; 0x04
    9966:	4f ef       	ldi	r20, 0xFF	; 255
    9968:	4d 83       	std	Y+5, r20	; 0x05
    996a:	40 e4       	ldi	r20, 0x40	; 64
    996c:	4e 83       	std	Y+6, r20	; 0x06
    996e:	40 91 5c 02 	lds	r20, 0x025C	; 0x80025c <LBTEnable>
    9972:	4f 83       	std	Y+7, r20	; 0x07
    9974:	41 e4       	ldi	r20, 0x41	; 65
    9976:	48 87       	std	Y+8, r20	; 0x08
    9978:	40 91 72 03 	lds	r20, 0x0372	; 0x800372 <LBTThreshold>
    997c:	49 87       	std	Y+9, r20	; 0x09
    997e:	42 e4       	ldi	r20, 0x42	; 66
    9980:	4a 87       	std	Y+10, r20	; 0x0a
    9982:	40 91 5b 02 	lds	r20, 0x025B	; 0x80025b <DwellTimeEnable>
    9986:	4b 87       	std	Y+11, r20	; 0x0b
    9988:	43 e4       	ldi	r20, 0x43	; 67
    998a:	4c 87       	std	Y+12, r20	; 0x0c
    998c:	40 91 70 03 	lds	r20, 0x0370	; 0x800370 <DwellTime>
    9990:	50 91 71 03 	lds	r21, 0x0371	; 0x800371 <DwellTime+0x1>
    9994:	24 5f       	subi	r18, 0xF4	; 244
    9996:	3f 4f       	sbci	r19, 0xFF	; 255
    9998:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    999c:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    99a0:	5d 87       	std	Y+13, r21	; 0x0d
    99a2:	4e 87       	std	Y+14, r20	; 0x0e
    99a4:	2b e0       	ldi	r18, 0x0B	; 11
    99a6:	2a 83       	std	Y+2, r18	; 0x02
    99a8:	4e e0       	ldi	r20, 0x0E	; 14
    99aa:	0e c0       	rjmp	.+28     	; 0x99c8 <TMR_SR_cmdSetRegion+0x8e>
    99ac:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    99b0:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    99b4:	47 e9       	ldi	r20, 0x97	; 151
    99b6:	4b 83       	std	Y+3, r20	; 0x03
    99b8:	2e 5f       	subi	r18, 0xFE	; 254
    99ba:	3f 4f       	sbci	r19, 0xFF	; 255
    99bc:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    99c0:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    99c4:	6c 83       	std	Y+4, r22	; 0x04
    99c6:	44 e0       	ldi	r20, 0x04	; 4
    99c8:	10 92 5a 02 	sts	0x025A, r1	; 0x80025a <regionConfigurationFlag>
    99cc:	10 92 5b 02 	sts	0x025B, r1	; 0x80025b <DwellTimeEnable>
    99d0:	10 92 5c 02 	sts	0x025C, r1	; 0x80025c <LBTEnable>
    99d4:	be 01       	movw	r22, r28
    99d6:	6f 5f       	subi	r22, 0xFF	; 255
    99d8:	7f 4f       	sbci	r23, 0xFF	; 255
    99da:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    99de:	d3 95       	inc	r29
    99e0:	0f b6       	in	r0, 0x3f	; 63
    99e2:	f8 94       	cli
    99e4:	de bf       	out	0x3e, r29	; 62
    99e6:	0f be       	out	0x3f, r0	; 63
    99e8:	cd bf       	out	0x3d, r28	; 61
    99ea:	df 91       	pop	r29
    99ec:	cf 91       	pop	r28
    99ee:	08 95       	ret

000099f0 <TMR_SR_cmdSetRegionDwellTimeLbtEnable>:
    99f0:	cf 93       	push	r28
    99f2:	df 93       	push	r29
    99f4:	cd b7       	in	r28, 0x3d	; 61
    99f6:	de b7       	in	r29, 0x3e	; 62
    99f8:	da 95       	dec	r29
    99fa:	0f b6       	in	r0, 0x3f	; 63
    99fc:	f8 94       	cli
    99fe:	de bf       	out	0x3e, r29	; 62
    9a00:	0f be       	out	0x3f, r0	; 63
    9a02:	cd bf       	out	0x3d, r28	; 61
    9a04:	e0 91 57 02 	lds	r30, 0x0257	; 0x800257 <totalMsgIdx>
    9a08:	f0 91 58 02 	lds	r31, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    9a0c:	37 e9       	ldi	r19, 0x97	; 151
    9a0e:	3b 83       	std	Y+3, r19	; 0x03
    9a10:	31 e0       	ldi	r19, 0x01	; 1
    9a12:	3c 83       	std	Y+4, r19	; 0x04
    9a14:	6d 83       	std	Y+5, r22	; 0x05
    9a16:	2e 83       	std	Y+6, r18	; 0x06
    9a18:	9f 01       	movw	r18, r30
    9a1a:	2b 5f       	subi	r18, 0xFB	; 251
    9a1c:	3f 4f       	sbci	r19, 0xFF	; 255
    9a1e:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    9a22:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    9a26:	4f 83       	std	Y+7, r20	; 0x07
    9a28:	47 e0       	ldi	r20, 0x07	; 7
    9a2a:	be 01       	movw	r22, r28
    9a2c:	6f 5f       	subi	r22, 0xFF	; 255
    9a2e:	7f 4f       	sbci	r23, 0xFF	; 255
    9a30:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    9a34:	d3 95       	inc	r29
    9a36:	0f b6       	in	r0, 0x3f	; 63
    9a38:	f8 94       	cli
    9a3a:	de bf       	out	0x3e, r29	; 62
    9a3c:	0f be       	out	0x3f, r0	; 63
    9a3e:	cd bf       	out	0x3d, r28	; 61
    9a40:	df 91       	pop	r29
    9a42:	cf 91       	pop	r28
    9a44:	08 95       	ret

00009a46 <TMR_SR_cmdSetRegionDwellTimeEnable>:
    9a46:	22 e4       	ldi	r18, 0x42	; 66
    9a48:	d3 cf       	rjmp	.-90     	; 0x99f0 <TMR_SR_cmdSetRegionDwellTimeLbtEnable>
    9a4a:	08 95       	ret

00009a4c <TMR_SR_cmdSetRegionDwellTime>:
    9a4c:	cf 93       	push	r28
    9a4e:	df 93       	push	r29
    9a50:	cd b7       	in	r28, 0x3d	; 61
    9a52:	de b7       	in	r29, 0x3e	; 62
    9a54:	da 95       	dec	r29
    9a56:	0f b6       	in	r0, 0x3f	; 63
    9a58:	f8 94       	cli
    9a5a:	de bf       	out	0x3e, r29	; 62
    9a5c:	0f be       	out	0x3f, r0	; 63
    9a5e:	cd bf       	out	0x3d, r28	; 61
    9a60:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    9a64:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    9a68:	77 e9       	ldi	r23, 0x97	; 151
    9a6a:	7b 83       	std	Y+3, r23	; 0x03
    9a6c:	71 e0       	ldi	r23, 0x01	; 1
    9a6e:	7c 83       	std	Y+4, r23	; 0x04
    9a70:	6d 83       	std	Y+5, r22	; 0x05
    9a72:	63 e4       	ldi	r22, 0x43	; 67
    9a74:	6e 83       	std	Y+6, r22	; 0x06
    9a76:	2a 5f       	subi	r18, 0xFA	; 250
    9a78:	3f 4f       	sbci	r19, 0xFF	; 255
    9a7a:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    9a7e:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    9a82:	5f 83       	std	Y+7, r21	; 0x07
    9a84:	48 87       	std	Y+8, r20	; 0x08
    9a86:	48 e0       	ldi	r20, 0x08	; 8
    9a88:	be 01       	movw	r22, r28
    9a8a:	6f 5f       	subi	r22, 0xFF	; 255
    9a8c:	7f 4f       	sbci	r23, 0xFF	; 255
    9a8e:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    9a92:	d3 95       	inc	r29
    9a94:	0f b6       	in	r0, 0x3f	; 63
    9a96:	f8 94       	cli
    9a98:	de bf       	out	0x3e, r29	; 62
    9a9a:	0f be       	out	0x3f, r0	; 63
    9a9c:	cd bf       	out	0x3d, r28	; 61
    9a9e:	df 91       	pop	r29
    9aa0:	cf 91       	pop	r28
    9aa2:	08 95       	ret

00009aa4 <TMR_SR_cmdSetRegionLbtThreshold>:
    9aa4:	cf 93       	push	r28
    9aa6:	df 93       	push	r29
    9aa8:	cd b7       	in	r28, 0x3d	; 61
    9aaa:	de b7       	in	r29, 0x3e	; 62
    9aac:	da 95       	dec	r29
    9aae:	0f b6       	in	r0, 0x3f	; 63
    9ab0:	f8 94       	cli
    9ab2:	de bf       	out	0x3e, r29	; 62
    9ab4:	0f be       	out	0x3f, r0	; 63
    9ab6:	cd bf       	out	0x3d, r28	; 61
    9ab8:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    9abc:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    9ac0:	57 e9       	ldi	r21, 0x97	; 151
    9ac2:	5b 83       	std	Y+3, r21	; 0x03
    9ac4:	51 e0       	ldi	r21, 0x01	; 1
    9ac6:	5c 83       	std	Y+4, r21	; 0x04
    9ac8:	6d 83       	std	Y+5, r22	; 0x05
    9aca:	51 e4       	ldi	r21, 0x41	; 65
    9acc:	5e 83       	std	Y+6, r21	; 0x06
    9ace:	2b 5f       	subi	r18, 0xFB	; 251
    9ad0:	3f 4f       	sbci	r19, 0xFF	; 255
    9ad2:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    9ad6:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    9ada:	4f 83       	std	Y+7, r20	; 0x07
    9adc:	47 e0       	ldi	r20, 0x07	; 7
    9ade:	be 01       	movw	r22, r28
    9ae0:	6f 5f       	subi	r22, 0xFF	; 255
    9ae2:	7f 4f       	sbci	r23, 0xFF	; 255
    9ae4:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    9ae8:	d3 95       	inc	r29
    9aea:	0f b6       	in	r0, 0x3f	; 63
    9aec:	f8 94       	cli
    9aee:	de bf       	out	0x3e, r29	; 62
    9af0:	0f be       	out	0x3f, r0	; 63
    9af2:	cd bf       	out	0x3d, r28	; 61
    9af4:	df 91       	pop	r29
    9af6:	cf 91       	pop	r28
    9af8:	08 95       	ret

00009afa <TMR_SR_cmdSetRegionLbt>:
    9afa:	20 e4       	ldi	r18, 0x40	; 64
    9afc:	79 cf       	rjmp	.-270    	; 0x99f0 <TMR_SR_cmdSetRegionDwellTimeLbtEnable>
    9afe:	08 95       	ret

00009b00 <TMR_SR_cmdSetMode>:
    9b00:	cf 93       	push	r28
    9b02:	df 93       	push	r29
    9b04:	cd b7       	in	r28, 0x3d	; 61
    9b06:	de b7       	in	r29, 0x3e	; 62
    9b08:	da 95       	dec	r29
    9b0a:	0f b6       	in	r0, 0x3f	; 63
    9b0c:	f8 94       	cli
    9b0e:	de bf       	out	0x3e, r29	; 62
    9b10:	0f be       	out	0x3f, r0	; 63
    9b12:	cd bf       	out	0x3d, r28	; 61
    9b14:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    9b18:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    9b1c:	4b 83       	std	Y+3, r20	; 0x03
    9b1e:	2e 5f       	subi	r18, 0xFE	; 254
    9b20:	3f 4f       	sbci	r19, 0xFF	; 255
    9b22:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    9b26:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    9b2a:	6c 83       	std	Y+4, r22	; 0x04
    9b2c:	44 e0       	ldi	r20, 0x04	; 4
    9b2e:	be 01       	movw	r22, r28
    9b30:	6f 5f       	subi	r22, 0xFF	; 255
    9b32:	7f 4f       	sbci	r23, 0xFF	; 255
    9b34:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    9b38:	d3 95       	inc	r29
    9b3a:	0f b6       	in	r0, 0x3f	; 63
    9b3c:	f8 94       	cli
    9b3e:	de bf       	out	0x3e, r29	; 62
    9b40:	0f be       	out	0x3f, r0	; 63
    9b42:	cd bf       	out	0x3d, r28	; 61
    9b44:	df 91       	pop	r29
    9b46:	cf 91       	pop	r28
    9b48:	08 95       	ret

00009b4a <TMR_SR_cmdSetPowerMode>:
    9b4a:	48 e9       	ldi	r20, 0x98	; 152
    9b4c:	d9 cf       	rjmp	.-78     	; 0x9b00 <TMR_SR_cmdSetMode>
    9b4e:	08 95       	ret

00009b50 <TMR_SR_cmdSetUserMode>:
    9b50:	49 e9       	ldi	r20, 0x99	; 153
    9b52:	d6 cf       	rjmp	.-84     	; 0x9b00 <TMR_SR_cmdSetMode>
    9b54:	08 95       	ret

00009b56 <TMR_SR_cmdSetReaderConfiguration>:
    9b56:	0f 93       	push	r16
    9b58:	1f 93       	push	r17
    9b5a:	cf 93       	push	r28
    9b5c:	df 93       	push	r29
    9b5e:	cd b7       	in	r28, 0x3d	; 61
    9b60:	de b7       	in	r29, 0x3e	; 62
    9b62:	da 95       	dec	r29
    9b64:	0f b6       	in	r0, 0x3f	; 63
    9b66:	f8 94       	cli
    9b68:	de bf       	out	0x3e, r29	; 62
    9b6a:	0f be       	out	0x3f, r0	; 63
    9b6c:	cd bf       	out	0x3d, r28	; 61
    9b6e:	e6 2f       	mov	r30, r22
    9b70:	60 91 57 02 	lds	r22, 0x0257	; 0x800257 <totalMsgIdx>
    9b74:	70 91 58 02 	lds	r23, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    9b78:	2a e9       	ldi	r18, 0x9A	; 154
    9b7a:	2b 83       	std	Y+3, r18	; 0x03
    9b7c:	21 e0       	ldi	r18, 0x01	; 1
    9b7e:	2c 83       	std	Y+4, r18	; 0x04
    9b80:	6d 5f       	subi	r22, 0xFD	; 253
    9b82:	7f 4f       	sbci	r23, 0xFF	; 255
    9b84:	70 93 58 02 	sts	0x0258, r23	; 0x800258 <totalMsgIdx+0x1>
    9b88:	60 93 57 02 	sts	0x0257, r22	; 0x800257 <totalMsgIdx>
    9b8c:	ed 83       	std	Y+5, r30	; 0x05
    9b8e:	0e 2f       	mov	r16, r30
    9b90:	10 e0       	ldi	r17, 0x00	; 0
    9b92:	02 32       	cpi	r16, 0x22	; 34
    9b94:	11 05       	cpc	r17, r1
    9b96:	08 f0       	brcs	.+2      	; 0x9b9a <TMR_SR_cmdSetReaderConfiguration+0x44>
    9b98:	43 c0       	rjmp	.+134    	; 0x9c20 <TMR_SR_cmdSetReaderConfiguration+0xca>
    9b9a:	f8 01       	movw	r30, r16
    9b9c:	ed 5e       	subi	r30, 0xED	; 237
    9b9e:	fd 4f       	sbci	r31, 0xFD	; 253
    9ba0:	0c 94 d3 74 	jmp	0xe9a6	; 0xe9a6 <__tablejump2__>
    9ba4:	6f 5f       	subi	r22, 0xFF	; 255
    9ba6:	7f 4f       	sbci	r23, 0xFF	; 255
    9ba8:	70 93 58 02 	sts	0x0258, r23	; 0x800258 <totalMsgIdx+0x1>
    9bac:	60 93 57 02 	sts	0x0257, r22	; 0x800257 <totalMsgIdx>
    9bb0:	da 01       	movw	r26, r20
    9bb2:	2c 91       	ld	r18, X
    9bb4:	2e 83       	std	Y+6, r18	; 0x06
    9bb6:	46 e0       	ldi	r20, 0x06	; 6
    9bb8:	2d c0       	rjmp	.+90     	; 0x9c14 <TMR_SR_cmdSetReaderConfiguration+0xbe>
    9bba:	6f 5f       	subi	r22, 0xFF	; 255
    9bbc:	7f 4f       	sbci	r23, 0xFF	; 255
    9bbe:	70 93 58 02 	sts	0x0258, r23	; 0x800258 <totalMsgIdx+0x1>
    9bc2:	60 93 57 02 	sts	0x0257, r22	; 0x800257 <totalMsgIdx>
    9bc6:	fa 01       	movw	r30, r20
    9bc8:	20 81       	ld	r18, Z
    9bca:	22 23       	and	r18, r18
    9bcc:	11 f0       	breq	.+4      	; 0x9bd2 <TMR_SR_cmdSetReaderConfiguration+0x7c>
    9bce:	20 e0       	ldi	r18, 0x00	; 0
    9bd0:	01 c0       	rjmp	.+2      	; 0x9bd4 <TMR_SR_cmdSetReaderConfiguration+0x7e>
    9bd2:	21 e0       	ldi	r18, 0x01	; 1
    9bd4:	2e 83       	std	Y+6, r18	; 0x06
    9bd6:	46 e0       	ldi	r20, 0x06	; 6
    9bd8:	1d c0       	rjmp	.+58     	; 0x9c14 <TMR_SR_cmdSetReaderConfiguration+0xbe>
    9bda:	6f 5f       	subi	r22, 0xFF	; 255
    9bdc:	7f 4f       	sbci	r23, 0xFF	; 255
    9bde:	70 93 58 02 	sts	0x0258, r23	; 0x800258 <totalMsgIdx+0x1>
    9be2:	60 93 57 02 	sts	0x0257, r22	; 0x800257 <totalMsgIdx>
    9be6:	da 01       	movw	r26, r20
    9be8:	2c 91       	ld	r18, X
    9bea:	2e 83       	std	Y+6, r18	; 0x06
    9bec:	46 e0       	ldi	r20, 0x06	; 6
    9bee:	12 c0       	rjmp	.+36     	; 0x9c14 <TMR_SR_cmdSetReaderConfiguration+0xbe>
    9bf0:	fa 01       	movw	r30, r20
    9bf2:	20 81       	ld	r18, Z
    9bf4:	31 81       	ldd	r19, Z+1	; 0x01
    9bf6:	e2 81       	ldd	r30, Z+2	; 0x02
    9bf8:	da 01       	movw	r26, r20
    9bfa:	13 96       	adiw	r26, 0x03	; 3
    9bfc:	4c 91       	ld	r20, X
    9bfe:	6c 5f       	subi	r22, 0xFC	; 252
    9c00:	7f 4f       	sbci	r23, 0xFF	; 255
    9c02:	70 93 58 02 	sts	0x0258, r23	; 0x800258 <totalMsgIdx+0x1>
    9c06:	60 93 57 02 	sts	0x0257, r22	; 0x800257 <totalMsgIdx>
    9c0a:	4e 83       	std	Y+6, r20	; 0x06
    9c0c:	ef 83       	std	Y+7, r30	; 0x07
    9c0e:	38 87       	std	Y+8, r19	; 0x08
    9c10:	29 87       	std	Y+9, r18	; 0x09
    9c12:	49 e0       	ldi	r20, 0x09	; 9
    9c14:	be 01       	movw	r22, r28
    9c16:	6f 5f       	subi	r22, 0xFF	; 255
    9c18:	7f 4f       	sbci	r23, 0xFF	; 255
    9c1a:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    9c1e:	04 c0       	rjmp	.+8      	; 0x9c28 <TMR_SR_cmdSetReaderConfiguration+0xd2>
    9c20:	69 e0       	ldi	r22, 0x09	; 9
    9c22:	70 e0       	ldi	r23, 0x00	; 0
    9c24:	80 e0       	ldi	r24, 0x00	; 0
    9c26:	93 e0       	ldi	r25, 0x03	; 3
    9c28:	d3 95       	inc	r29
    9c2a:	0f b6       	in	r0, 0x3f	; 63
    9c2c:	f8 94       	cli
    9c2e:	de bf       	out	0x3e, r29	; 62
    9c30:	0f be       	out	0x3f, r0	; 63
    9c32:	cd bf       	out	0x3d, r28	; 61
    9c34:	df 91       	pop	r29
    9c36:	cf 91       	pop	r28
    9c38:	1f 91       	pop	r17
    9c3a:	0f 91       	pop	r16
    9c3c:	08 95       	ret

00009c3e <TMR_SR_cmdSetProtocolLicenseKey>:
    9c3e:	cf 92       	push	r12
    9c40:	df 92       	push	r13
    9c42:	ef 92       	push	r14
    9c44:	ff 92       	push	r15
    9c46:	0f 93       	push	r16
    9c48:	1f 93       	push	r17
    9c4a:	cf 93       	push	r28
    9c4c:	df 93       	push	r29
    9c4e:	cd b7       	in	r28, 0x3d	; 61
    9c50:	de b7       	in	r29, 0x3e	; 62
    9c52:	da 95       	dec	r29
    9c54:	0f b6       	in	r0, 0x3f	; 63
    9c56:	f8 94       	cli
    9c58:	de bf       	out	0x3e, r29	; 62
    9c5a:	0f be       	out	0x3f, r0	; 63
    9c5c:	cd bf       	out	0x3d, r28	; 61
    9c5e:	8c 01       	movw	r16, r24
    9c60:	f6 2e       	mov	r15, r22
    9c62:	ba 01       	movw	r22, r20
    9c64:	e2 2e       	mov	r14, r18
    9c66:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    9c6a:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    9c6e:	2e e9       	ldi	r18, 0x9E	; 158
    9c70:	2b 83       	std	Y+3, r18	; 0x03
    9c72:	02 96       	adiw	r24, 0x02	; 2
    9c74:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    9c78:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    9c7c:	fc 82       	std	Y+4, r15	; 0x04
    9c7e:	81 e0       	ldi	r24, 0x01	; 1
    9c80:	f8 12       	cpse	r15, r24
    9c82:	09 c0       	rjmp	.+18     	; 0x9c96 <TMR_SR_cmdSetProtocolLicenseKey+0x58>
    9c84:	4e 2d       	mov	r20, r14
    9c86:	53 2f       	mov	r21, r19
    9c88:	ce 01       	movw	r24, r28
    9c8a:	05 96       	adiw	r24, 0x05	; 5
    9c8c:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    9c90:	44 e0       	ldi	r20, 0x04	; 4
    9c92:	4e 0d       	add	r20, r14
    9c94:	01 c0       	rjmp	.+2      	; 0x9c98 <TMR_SR_cmdSetProtocolLicenseKey+0x5a>
    9c96:	44 e0       	ldi	r20, 0x04	; 4
    9c98:	be 01       	movw	r22, r28
    9c9a:	6f 5f       	subi	r22, 0xFF	; 255
    9c9c:	7f 4f       	sbci	r23, 0xFF	; 255
    9c9e:	c8 01       	movw	r24, r16
    9ca0:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    9ca4:	61 15       	cp	r22, r1
    9ca6:	71 05       	cpc	r23, r1
    9ca8:	81 05       	cpc	r24, r1
    9caa:	91 05       	cpc	r25, r1
    9cac:	09 f0       	breq	.+2      	; 0x9cb0 <TMR_SR_cmdSetProtocolLicenseKey+0x72>
    9cae:	40 c0       	rjmp	.+128    	; 0x9d30 <TMR_SR_cmdSetProtocolLicenseKey+0xf2>
    9cb0:	81 e0       	ldi	r24, 0x01	; 1
    9cb2:	f8 12       	cpse	r15, r24
    9cb4:	41 c0       	rjmp	.+130    	; 0x9d38 <TMR_SR_cmdSetProtocolLicenseKey+0xfa>
    9cb6:	f8 01       	movw	r30, r16
    9cb8:	e3 58       	subi	r30, 0x83	; 131
    9cba:	fc 4f       	sbci	r31, 0xFC	; 252
    9cbc:	10 82       	st	Z, r1
    9cbe:	11 82       	std	Z+1, r1	; 0x01
    9cc0:	12 82       	std	Z+2, r1	; 0x02
    9cc2:	13 82       	std	Z+3, r1	; 0x03
    9cc4:	40 e0       	ldi	r20, 0x00	; 0
    9cc6:	26 c0       	rjmp	.+76     	; 0x9d14 <TMR_SR_cmdSetProtocolLicenseKey+0xd6>
    9cc8:	07 96       	adiw	r24, 0x07	; 7
    9cca:	e1 e0       	ldi	r30, 0x01	; 1
    9ccc:	f0 e0       	ldi	r31, 0x00	; 0
    9cce:	ec 0f       	add	r30, r28
    9cd0:	fd 1f       	adc	r31, r29
    9cd2:	e8 0f       	add	r30, r24
    9cd4:	f9 1f       	adc	r31, r25
    9cd6:	20 81       	ld	r18, Z
    9cd8:	30 e0       	ldi	r19, 0x00	; 0
    9cda:	21 50       	subi	r18, 0x01	; 1
    9cdc:	31 09       	sbc	r19, r1
    9cde:	81 e0       	ldi	r24, 0x01	; 1
    9ce0:	90 e0       	ldi	r25, 0x00	; 0
    9ce2:	02 c0       	rjmp	.+4      	; 0x9ce8 <TMR_SR_cmdSetProtocolLicenseKey+0xaa>
    9ce4:	88 0f       	add	r24, r24
    9ce6:	99 1f       	adc	r25, r25
    9ce8:	2a 95       	dec	r18
    9cea:	e2 f7       	brpl	.-8      	; 0x9ce4 <TMR_SR_cmdSetProtocolLicenseKey+0xa6>
    9cec:	f8 01       	movw	r30, r16
    9cee:	e3 58       	subi	r30, 0x83	; 131
    9cf0:	fc 4f       	sbci	r31, 0xFC	; 252
    9cf2:	09 2e       	mov	r0, r25
    9cf4:	00 0c       	add	r0, r0
    9cf6:	aa 0b       	sbc	r26, r26
    9cf8:	bb 0b       	sbc	r27, r27
    9cfa:	c0 80       	ld	r12, Z
    9cfc:	d1 80       	ldd	r13, Z+1	; 0x01
    9cfe:	e2 80       	ldd	r14, Z+2	; 0x02
    9d00:	f3 80       	ldd	r15, Z+3	; 0x03
    9d02:	8c 29       	or	r24, r12
    9d04:	9d 29       	or	r25, r13
    9d06:	ae 29       	or	r26, r14
    9d08:	bf 29       	or	r27, r15
    9d0a:	80 83       	st	Z, r24
    9d0c:	91 83       	std	Z+1, r25	; 0x01
    9d0e:	a2 83       	std	Z+2, r26	; 0x02
    9d10:	b3 83       	std	Z+3, r27	; 0x03
    9d12:	4e 5f       	subi	r20, 0xFE	; 254
    9d14:	84 2f       	mov	r24, r20
    9d16:	90 e0       	ldi	r25, 0x00	; 0
    9d18:	2a 81       	ldd	r18, Y+2	; 0x02
    9d1a:	30 e0       	ldi	r19, 0x00	; 0
    9d1c:	22 50       	subi	r18, 0x02	; 2
    9d1e:	31 09       	sbc	r19, r1
    9d20:	82 17       	cp	r24, r18
    9d22:	93 07       	cpc	r25, r19
    9d24:	8c f2       	brlt	.-94     	; 0x9cc8 <TMR_SR_cmdSetProtocolLicenseKey+0x8a>
    9d26:	40 e0       	ldi	r20, 0x00	; 0
    9d28:	30 e0       	ldi	r19, 0x00	; 0
    9d2a:	20 e0       	ldi	r18, 0x00	; 0
    9d2c:	90 e0       	ldi	r25, 0x00	; 0
    9d2e:	08 c0       	rjmp	.+16     	; 0x9d40 <TMR_SR_cmdSetProtocolLicenseKey+0x102>
    9d30:	46 2f       	mov	r20, r22
    9d32:	37 2f       	mov	r19, r23
    9d34:	28 2f       	mov	r18, r24
    9d36:	04 c0       	rjmp	.+8      	; 0x9d40 <TMR_SR_cmdSetProtocolLicenseKey+0x102>
    9d38:	40 e0       	ldi	r20, 0x00	; 0
    9d3a:	30 e0       	ldi	r19, 0x00	; 0
    9d3c:	20 e0       	ldi	r18, 0x00	; 0
    9d3e:	90 e0       	ldi	r25, 0x00	; 0
    9d40:	64 2f       	mov	r22, r20
    9d42:	73 2f       	mov	r23, r19
    9d44:	82 2f       	mov	r24, r18
    9d46:	d3 95       	inc	r29
    9d48:	0f b6       	in	r0, 0x3f	; 63
    9d4a:	f8 94       	cli
    9d4c:	de bf       	out	0x3e, r29	; 62
    9d4e:	0f be       	out	0x3f, r0	; 63
    9d50:	cd bf       	out	0x3d, r28	; 61
    9d52:	df 91       	pop	r29
    9d54:	cf 91       	pop	r28
    9d56:	1f 91       	pop	r17
    9d58:	0f 91       	pop	r16
    9d5a:	ff 90       	pop	r15
    9d5c:	ef 90       	pop	r14
    9d5e:	df 90       	pop	r13
    9d60:	cf 90       	pop	r12
    9d62:	08 95       	ret

00009d64 <TMR_SR_cmdSetProtocolConfiguration>:
    9d64:	8f 92       	push	r8
    9d66:	9f 92       	push	r9
    9d68:	af 92       	push	r10
    9d6a:	bf 92       	push	r11
    9d6c:	cf 92       	push	r12
    9d6e:	df 92       	push	r13
    9d70:	ef 92       	push	r14
    9d72:	ff 92       	push	r15
    9d74:	0f 93       	push	r16
    9d76:	1f 93       	push	r17
    9d78:	cf 93       	push	r28
    9d7a:	df 93       	push	r29
    9d7c:	cd b7       	in	r28, 0x3d	; 61
    9d7e:	de b7       	in	r29, 0x3e	; 62
    9d80:	c1 50       	subi	r28, 0x01	; 1
    9d82:	d1 40       	sbci	r29, 0x01	; 1
    9d84:	0f b6       	in	r0, 0x3f	; 63
    9d86:	f8 94       	cli
    9d88:	de bf       	out	0x3e, r29	; 62
    9d8a:	0f be       	out	0x3f, r0	; 63
    9d8c:	cd bf       	out	0x3d, r28	; 61
    9d8e:	6c 01       	movw	r12, r24
    9d90:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    9d94:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    9d98:	7b e9       	ldi	r23, 0x9B	; 155
    9d9a:	7b 83       	std	Y+3, r23	; 0x03
    9d9c:	02 96       	adiw	r24, 0x02	; 2
    9d9e:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    9da2:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    9da6:	6c 83       	std	Y+4, r22	; 0x04
    9da8:	45 30       	cpi	r20, 0x05	; 5
    9daa:	09 f0       	breq	.+2      	; 0x9dae <TMR_SR_cmdSetProtocolConfiguration+0x4a>
    9dac:	e3 c0       	rjmp	.+454    	; 0x9f74 <TMR_SR_cmdSetProtocolConfiguration+0x210>
    9dae:	01 96       	adiw	r24, 0x01	; 1
    9db0:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    9db4:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    9db8:	5d 83       	std	Y+5, r21	; 0x05
    9dba:	45 2f       	mov	r20, r21
    9dbc:	50 e0       	ldi	r21, 0x00	; 0
    9dbe:	48 31       	cpi	r20, 0x18	; 24
    9dc0:	51 05       	cpc	r21, r1
    9dc2:	08 f0       	brcs	.+2      	; 0x9dc6 <TMR_SR_cmdSetProtocolConfiguration+0x62>
    9dc4:	d5 c1       	rjmp	.+938    	; 0xa170 <TMR_SR_cmdSetProtocolConfiguration+0x40c>
    9dc6:	fa 01       	movw	r30, r20
    9dc8:	eb 5c       	subi	r30, 0xCB	; 203
    9dca:	fd 4f       	sbci	r31, 0xFD	; 253
    9dcc:	0c 94 d3 74 	jmp	0xe9a6	; 0xe9a6 <__tablejump2__>
    9dd0:	01 96       	adiw	r24, 0x01	; 1
    9dd2:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    9dd6:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    9dda:	86 e0       	ldi	r24, 0x06	; 6
    9ddc:	cf 5f       	subi	r28, 0xFF	; 255
    9dde:	de 4f       	sbci	r29, 0xFE	; 254
    9de0:	88 83       	st	Y, r24
    9de2:	c1 50       	subi	r28, 0x01	; 1
    9de4:	d1 40       	sbci	r29, 0x01	; 1
    9de6:	f9 01       	movw	r30, r18
    9de8:	80 81       	ld	r24, Z
    9dea:	8e 83       	std	Y+6, r24	; 0x06
    9dec:	b5 c1       	rjmp	.+874    	; 0xa158 <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9dee:	f9 01       	movw	r30, r18
    9df0:	20 81       	ld	r18, Z
    9df2:	31 81       	ldd	r19, Z+1	; 0x01
    9df4:	20 34       	cpi	r18, 0x40	; 64
    9df6:	f1 e0       	ldi	r31, 0x01	; 1
    9df8:	3f 07       	cpc	r19, r31
    9dfa:	61 f0       	breq	.+24     	; 0x9e14 <TMR_SR_cmdSetProtocolConfiguration+0xb0>
    9dfc:	20 38       	cpi	r18, 0x80	; 128
    9dfe:	42 e0       	ldi	r20, 0x02	; 2
    9e00:	34 07       	cpc	r19, r20
    9e02:	31 f0       	breq	.+12     	; 0x9e10 <TMR_SR_cmdSetProtocolConfiguration+0xac>
    9e04:	2a 3f       	cpi	r18, 0xFA	; 250
    9e06:	31 05       	cpc	r19, r1
    9e08:	09 f0       	breq	.+2      	; 0x9e0c <TMR_SR_cmdSetProtocolConfiguration+0xa8>
    9e0a:	b7 c1       	rjmp	.+878    	; 0xa17a <TMR_SR_cmdSetProtocolConfiguration+0x416>
    9e0c:	20 e0       	ldi	r18, 0x00	; 0
    9e0e:	03 c0       	rjmp	.+6      	; 0x9e16 <TMR_SR_cmdSetProtocolConfiguration+0xb2>
    9e10:	24 e0       	ldi	r18, 0x04	; 4
    9e12:	01 c0       	rjmp	.+2      	; 0x9e16 <TMR_SR_cmdSetProtocolConfiguration+0xb2>
    9e14:	22 e0       	ldi	r18, 0x02	; 2
    9e16:	01 96       	adiw	r24, 0x01	; 1
    9e18:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    9e1c:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    9e20:	86 e0       	ldi	r24, 0x06	; 6
    9e22:	cf 5f       	subi	r28, 0xFF	; 255
    9e24:	de 4f       	sbci	r29, 0xFE	; 254
    9e26:	88 83       	st	Y, r24
    9e28:	c1 50       	subi	r28, 0x01	; 1
    9e2a:	d1 40       	sbci	r29, 0x01	; 1
    9e2c:	2e 83       	std	Y+6, r18	; 0x06
    9e2e:	94 c1       	rjmp	.+808    	; 0xa158 <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9e30:	f9 01       	movw	r30, r18
    9e32:	20 81       	ld	r18, Z
    9e34:	21 30       	cpi	r18, 0x01	; 1
    9e36:	79 f0       	breq	.+30     	; 0x9e56 <TMR_SR_cmdSetProtocolConfiguration+0xf2>
    9e38:	28 f0       	brcs	.+10     	; 0x9e44 <TMR_SR_cmdSetProtocolConfiguration+0xe0>
    9e3a:	22 30       	cpi	r18, 0x02	; 2
    9e3c:	31 f0       	breq	.+12     	; 0x9e4a <TMR_SR_cmdSetProtocolConfiguration+0xe6>
    9e3e:	23 30       	cpi	r18, 0x03	; 3
    9e40:	39 f0       	breq	.+14     	; 0x9e50 <TMR_SR_cmdSetProtocolConfiguration+0xec>
    9e42:	a0 c1       	rjmp	.+832    	; 0xa184 <TMR_SR_cmdSetProtocolConfiguration+0x420>
    9e44:	20 e0       	ldi	r18, 0x00	; 0
    9e46:	31 e0       	ldi	r19, 0x01	; 1
    9e48:	08 c0       	rjmp	.+16     	; 0x9e5a <TMR_SR_cmdSetProtocolConfiguration+0xf6>
    9e4a:	20 e0       	ldi	r18, 0x00	; 0
    9e4c:	30 e0       	ldi	r19, 0x00	; 0
    9e4e:	05 c0       	rjmp	.+10     	; 0x9e5a <TMR_SR_cmdSetProtocolConfiguration+0xf6>
    9e50:	21 e0       	ldi	r18, 0x01	; 1
    9e52:	30 e0       	ldi	r19, 0x00	; 0
    9e54:	02 c0       	rjmp	.+4      	; 0x9e5a <TMR_SR_cmdSetProtocolConfiguration+0xf6>
    9e56:	21 e0       	ldi	r18, 0x01	; 1
    9e58:	31 e0       	ldi	r19, 0x01	; 1
    9e5a:	02 96       	adiw	r24, 0x02	; 2
    9e5c:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    9e60:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    9e64:	3e 83       	std	Y+6, r19	; 0x06
    9e66:	87 e0       	ldi	r24, 0x07	; 7
    9e68:	cf 5f       	subi	r28, 0xFF	; 255
    9e6a:	de 4f       	sbci	r29, 0xFE	; 254
    9e6c:	88 83       	st	Y, r24
    9e6e:	c1 50       	subi	r28, 0x01	; 1
    9e70:	d1 40       	sbci	r29, 0x01	; 1
    9e72:	2f 83       	std	Y+7, r18	; 0x07
    9e74:	71 c1       	rjmp	.+738    	; 0xa158 <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9e76:	ac 01       	movw	r20, r24
    9e78:	4f 5f       	subi	r20, 0xFF	; 255
    9e7a:	5f 4f       	sbci	r21, 0xFF	; 255
    9e7c:	50 93 58 02 	sts	0x0258, r21	; 0x800258 <totalMsgIdx+0x1>
    9e80:	40 93 57 02 	sts	0x0257, r20	; 0x800257 <totalMsgIdx>
    9e84:	86 e0       	ldi	r24, 0x06	; 6
    9e86:	cf 5f       	subi	r28, 0xFF	; 255
    9e88:	de 4f       	sbci	r29, 0xFE	; 254
    9e8a:	88 83       	st	Y, r24
    9e8c:	c1 50       	subi	r28, 0x01	; 1
    9e8e:	d1 40       	sbci	r29, 0x01	; 1
    9e90:	f9 01       	movw	r30, r18
    9e92:	90 81       	ld	r25, Z
    9e94:	9e 83       	std	Y+6, r25	; 0x06
    9e96:	91 30       	cpi	r25, 0x01	; 1
    9e98:	09 f0       	breq	.+2      	; 0x9e9c <TMR_SR_cmdSetProtocolConfiguration+0x138>
    9e9a:	5e c1       	rjmp	.+700    	; 0xa158 <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9e9c:	ca 01       	movw	r24, r20
    9e9e:	01 96       	adiw	r24, 0x01	; 1
    9ea0:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    9ea4:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    9ea8:	87 e0       	ldi	r24, 0x07	; 7
    9eaa:	cf 5f       	subi	r28, 0xFF	; 255
    9eac:	de 4f       	sbci	r29, 0xFE	; 254
    9eae:	88 83       	st	Y, r24
    9eb0:	c1 50       	subi	r28, 0x01	; 1
    9eb2:	d1 40       	sbci	r29, 0x01	; 1
    9eb4:	81 81       	ldd	r24, Z+1	; 0x01
    9eb6:	8f 83       	std	Y+7, r24	; 0x07
    9eb8:	4f c1       	rjmp	.+670    	; 0xa158 <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9eba:	41 e0       	ldi	r20, 0x01	; 1
    9ebc:	4e 83       	std	Y+6, r20	; 0x06
    9ebe:	ac 01       	movw	r20, r24
    9ec0:	4d 5f       	subi	r20, 0xFD	; 253
    9ec2:	5f 4f       	sbci	r21, 0xFF	; 255
    9ec4:	50 93 58 02 	sts	0x0258, r21	; 0x800258 <totalMsgIdx+0x1>
    9ec8:	40 93 57 02 	sts	0x0257, r20	; 0x800257 <totalMsgIdx>
    9ecc:	1f 82       	std	Y+7, r1	; 0x07
    9ece:	43 e0       	ldi	r20, 0x03	; 3
    9ed0:	48 87       	std	Y+8, r20	; 0x08
    9ed2:	f9 01       	movw	r30, r18
    9ed4:	70 81       	ld	r23, Z
    9ed6:	41 81       	ldd	r20, Z+1	; 0x01
    9ed8:	52 81       	ldd	r21, Z+2	; 0x02
    9eda:	63 81       	ldd	r22, Z+3	; 0x03
    9edc:	69 87       	std	Y+9, r22	; 0x09
    9ede:	5a 87       	std	Y+10, r21	; 0x0a
    9ee0:	4b 87       	std	Y+11, r20	; 0x0b
    9ee2:	7c 87       	std	Y+12, r23	; 0x0c
    9ee4:	74 81       	ldd	r23, Z+4	; 0x04
    9ee6:	45 81       	ldd	r20, Z+5	; 0x05
    9ee8:	56 81       	ldd	r21, Z+6	; 0x06
    9eea:	67 81       	ldd	r22, Z+7	; 0x07
    9eec:	0b 96       	adiw	r24, 0x0b	; 11
    9eee:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    9ef2:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    9ef6:	6d 87       	std	Y+13, r22	; 0x0d
    9ef8:	5e 87       	std	Y+14, r21	; 0x0e
    9efa:	4f 87       	std	Y+15, r20	; 0x0f
    9efc:	80 e1       	ldi	r24, 0x10	; 16
    9efe:	cf 5f       	subi	r28, 0xFF	; 255
    9f00:	de 4f       	sbci	r29, 0xFE	; 254
    9f02:	88 83       	st	Y, r24
    9f04:	c1 50       	subi	r28, 0x01	; 1
    9f06:	d1 40       	sbci	r29, 0x01	; 1
    9f08:	78 8b       	std	Y+16, r23	; 0x10
    9f0a:	26 c1       	rjmp	.+588    	; 0xa158 <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9f0c:	f9 01       	movw	r30, r18
    9f0e:	40 81       	ld	r20, Z
    9f10:	51 81       	ldd	r21, Z+1	; 0x01
    9f12:	62 81       	ldd	r22, Z+2	; 0x02
    9f14:	23 81       	ldd	r18, Z+3	; 0x03
    9f16:	04 96       	adiw	r24, 0x04	; 4
    9f18:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    9f1c:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    9f20:	2e 83       	std	Y+6, r18	; 0x06
    9f22:	6f 83       	std	Y+7, r22	; 0x07
    9f24:	58 87       	std	Y+8, r21	; 0x08
    9f26:	89 e0       	ldi	r24, 0x09	; 9
    9f28:	cf 5f       	subi	r28, 0xFF	; 255
    9f2a:	de 4f       	sbci	r29, 0xFE	; 254
    9f2c:	88 83       	st	Y, r24
    9f2e:	c1 50       	subi	r28, 0x01	; 1
    9f30:	d1 40       	sbci	r29, 0x01	; 1
    9f32:	49 87       	std	Y+9, r20	; 0x09
    9f34:	11 c1       	rjmp	.+546    	; 0xa158 <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9f36:	01 96       	adiw	r24, 0x01	; 1
    9f38:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    9f3c:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    9f40:	46 e0       	ldi	r20, 0x06	; 6
    9f42:	cf 5f       	subi	r28, 0xFF	; 255
    9f44:	de 4f       	sbci	r29, 0xFE	; 254
    9f46:	48 83       	st	Y, r20
    9f48:	c1 50       	subi	r28, 0x01	; 1
    9f4a:	d1 40       	sbci	r29, 0x01	; 1
    9f4c:	f9 01       	movw	r30, r18
    9f4e:	40 81       	ld	r20, Z
    9f50:	4e 83       	std	Y+6, r20	; 0x06
    9f52:	44 23       	and	r20, r20
    9f54:	09 f4       	brne	.+2      	; 0x9f58 <TMR_SR_cmdSetProtocolConfiguration+0x1f4>
    9f56:	00 c1       	rjmp	.+512    	; 0xa158 <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9f58:	01 96       	adiw	r24, 0x01	; 1
    9f5a:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    9f5e:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    9f62:	87 e0       	ldi	r24, 0x07	; 7
    9f64:	cf 5f       	subi	r28, 0xFF	; 255
    9f66:	de 4f       	sbci	r29, 0xFE	; 254
    9f68:	88 83       	st	Y, r24
    9f6a:	c1 50       	subi	r28, 0x01	; 1
    9f6c:	d1 40       	sbci	r29, 0x01	; 1
    9f6e:	81 81       	ldd	r24, Z+1	; 0x01
    9f70:	8f 83       	std	Y+7, r24	; 0x07
    9f72:	f2 c0       	rjmp	.+484    	; 0xa158 <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9f74:	49 30       	cpi	r20, 0x09	; 9
    9f76:	41 f5       	brne	.+80     	; 0x9fc8 <TMR_SR_cmdSetProtocolConfiguration+0x264>
    9f78:	52 30       	cpi	r21, 0x02	; 2
    9f7a:	09 f0       	breq	.+2      	; 0x9f7e <TMR_SR_cmdSetProtocolConfiguration+0x21a>
    9f7c:	08 c1       	rjmp	.+528    	; 0xa18e <TMR_SR_cmdSetProtocolConfiguration+0x42a>
    9f7e:	01 96       	adiw	r24, 0x01	; 1
    9f80:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    9f84:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    9f88:	85 e0       	ldi	r24, 0x05	; 5
    9f8a:	cf 5f       	subi	r28, 0xFF	; 255
    9f8c:	de 4f       	sbci	r29, 0xFE	; 254
    9f8e:	88 83       	st	Y, r24
    9f90:	c1 50       	subi	r28, 0x01	; 1
    9f92:	d1 40       	sbci	r29, 0x01	; 1
    9f94:	5d 83       	std	Y+5, r21	; 0x05
    9f96:	f9 01       	movw	r30, r18
    9f98:	e0 80       	ld	r14, Z
    9f9a:	f1 2c       	mov	r15, r1
    9f9c:	00 e0       	ldi	r16, 0x00	; 0
    9f9e:	10 e0       	ldi	r17, 0x00	; 0
    9fa0:	20 e0       	ldi	r18, 0x00	; 0
    9fa2:	30 e0       	ldi	r19, 0x00	; 0
    9fa4:	40 e0       	ldi	r20, 0x00	; 0
    9fa6:	50 e0       	ldi	r21, 0x00	; 0
    9fa8:	be 01       	movw	r22, r28
    9faa:	6f 5f       	subi	r22, 0xFF	; 255
    9fac:	7e 4f       	sbci	r23, 0xFE	; 254
    9fae:	ce 01       	movw	r24, r28
    9fb0:	01 96       	adiw	r24, 0x01	; 1
    9fb2:	0e 94 a1 6d 	call	0xdb42	; 0xdb42 <TMR_SR_convertToEBV>
    9fb6:	4b 01       	movw	r8, r22
    9fb8:	5c 01       	movw	r10, r24
    9fba:	61 15       	cp	r22, r1
    9fbc:	71 05       	cpc	r23, r1
    9fbe:	81 05       	cpc	r24, r1
    9fc0:	91 05       	cpc	r25, r1
    9fc2:	09 f4       	brne	.+2      	; 0x9fc6 <TMR_SR_cmdSetProtocolConfiguration+0x262>
    9fc4:	c9 c0       	rjmp	.+402    	; 0xa158 <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9fc6:	e8 c0       	rjmp	.+464    	; 0xa198 <TMR_SR_cmdSetProtocolConfiguration+0x434>
    9fc8:	4a 30       	cpi	r20, 0x0A	; 10
    9fca:	51 f5       	brne	.+84     	; 0xa020 <TMR_SR_cmdSetProtocolConfiguration+0x2bc>
    9fcc:	52 30       	cpi	r21, 0x02	; 2
    9fce:	09 f0       	breq	.+2      	; 0x9fd2 <TMR_SR_cmdSetProtocolConfiguration+0x26e>
    9fd0:	e7 c0       	rjmp	.+462    	; 0xa1a0 <TMR_SR_cmdSetProtocolConfiguration+0x43c>
    9fd2:	01 96       	adiw	r24, 0x01	; 1
    9fd4:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    9fd8:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    9fdc:	85 e0       	ldi	r24, 0x05	; 5
    9fde:	cf 5f       	subi	r28, 0xFF	; 255
    9fe0:	de 4f       	sbci	r29, 0xFE	; 254
    9fe2:	88 83       	st	Y, r24
    9fe4:	c1 50       	subi	r28, 0x01	; 1
    9fe6:	d1 40       	sbci	r29, 0x01	; 1
    9fe8:	5d 83       	std	Y+5, r21	; 0x05
    9fea:	f9 01       	movw	r30, r18
    9fec:	00 81       	ld	r16, Z
    9fee:	11 81       	ldd	r17, Z+1	; 0x01
    9ff0:	e0 2e       	mov	r14, r16
    9ff2:	f1 2e       	mov	r15, r17
    9ff4:	00 e0       	ldi	r16, 0x00	; 0
    9ff6:	10 e0       	ldi	r17, 0x00	; 0
    9ff8:	20 e0       	ldi	r18, 0x00	; 0
    9ffa:	30 e0       	ldi	r19, 0x00	; 0
    9ffc:	40 e0       	ldi	r20, 0x00	; 0
    9ffe:	50 e0       	ldi	r21, 0x00	; 0
    a000:	be 01       	movw	r22, r28
    a002:	6f 5f       	subi	r22, 0xFF	; 255
    a004:	7e 4f       	sbci	r23, 0xFE	; 254
    a006:	ce 01       	movw	r24, r28
    a008:	01 96       	adiw	r24, 0x01	; 1
    a00a:	0e 94 a1 6d 	call	0xdb42	; 0xdb42 <TMR_SR_convertToEBV>
    a00e:	4b 01       	movw	r8, r22
    a010:	5c 01       	movw	r10, r24
    a012:	61 15       	cp	r22, r1
    a014:	71 05       	cpc	r23, r1
    a016:	81 05       	cpc	r24, r1
    a018:	91 05       	cpc	r25, r1
    a01a:	09 f4       	brne	.+2      	; 0xa01e <TMR_SR_cmdSetProtocolConfiguration+0x2ba>
    a01c:	9d c0       	rjmp	.+314    	; 0xa158 <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    a01e:	c5 c0       	rjmp	.+394    	; 0xa1aa <TMR_SR_cmdSetProtocolConfiguration+0x446>
    a020:	4b 30       	cpi	r20, 0x0B	; 11
    a022:	71 f5       	brne	.+92     	; 0xa080 <TMR_SR_cmdSetProtocolConfiguration+0x31c>
    a024:	52 30       	cpi	r21, 0x02	; 2
    a026:	09 f0       	breq	.+2      	; 0xa02a <TMR_SR_cmdSetProtocolConfiguration+0x2c6>
    a028:	c4 c0       	rjmp	.+392    	; 0xa1b2 <TMR_SR_cmdSetProtocolConfiguration+0x44e>
    a02a:	01 96       	adiw	r24, 0x01	; 1
    a02c:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    a030:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    a034:	85 e0       	ldi	r24, 0x05	; 5
    a036:	cf 5f       	subi	r28, 0xFF	; 255
    a038:	de 4f       	sbci	r29, 0xFE	; 254
    a03a:	88 83       	st	Y, r24
    a03c:	c1 50       	subi	r28, 0x01	; 1
    a03e:	d1 40       	sbci	r29, 0x01	; 1
    a040:	5d 83       	std	Y+5, r21	; 0x05
    a042:	f9 01       	movw	r30, r18
    a044:	80 81       	ld	r24, Z
    a046:	91 81       	ldd	r25, Z+1	; 0x01
    a048:	a2 81       	ldd	r26, Z+2	; 0x02
    a04a:	b3 81       	ldd	r27, Z+3	; 0x03
    a04c:	9c 01       	movw	r18, r24
    a04e:	ad 01       	movw	r20, r26
    a050:	e2 2e       	mov	r14, r18
    a052:	f3 2e       	mov	r15, r19
    a054:	04 2f       	mov	r16, r20
    a056:	15 2f       	mov	r17, r21
    a058:	20 e0       	ldi	r18, 0x00	; 0
    a05a:	30 e0       	ldi	r19, 0x00	; 0
    a05c:	40 e0       	ldi	r20, 0x00	; 0
    a05e:	50 e0       	ldi	r21, 0x00	; 0
    a060:	be 01       	movw	r22, r28
    a062:	6f 5f       	subi	r22, 0xFF	; 255
    a064:	7e 4f       	sbci	r23, 0xFE	; 254
    a066:	ce 01       	movw	r24, r28
    a068:	01 96       	adiw	r24, 0x01	; 1
    a06a:	0e 94 a1 6d 	call	0xdb42	; 0xdb42 <TMR_SR_convertToEBV>
    a06e:	4b 01       	movw	r8, r22
    a070:	5c 01       	movw	r10, r24
    a072:	61 15       	cp	r22, r1
    a074:	71 05       	cpc	r23, r1
    a076:	81 05       	cpc	r24, r1
    a078:	91 05       	cpc	r25, r1
    a07a:	09 f4       	brne	.+2      	; 0xa07e <TMR_SR_cmdSetProtocolConfiguration+0x31a>
    a07c:	6d c0       	rjmp	.+218    	; 0xa158 <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    a07e:	9e c0       	rjmp	.+316    	; 0xa1bc <TMR_SR_cmdSetProtocolConfiguration+0x458>
    a080:	44 31       	cpi	r20, 0x14	; 20
    a082:	09 f0       	breq	.+2      	; 0xa086 <TMR_SR_cmdSetProtocolConfiguration+0x322>
    a084:	3f c0       	rjmp	.+126    	; 0xa104 <TMR_SR_cmdSetProtocolConfiguration+0x3a0>
    a086:	52 30       	cpi	r21, 0x02	; 2
    a088:	19 f0       	breq	.+6      	; 0xa090 <TMR_SR_cmdSetProtocolConfiguration+0x32c>
    a08a:	54 30       	cpi	r21, 0x04	; 4
    a08c:	59 f1       	breq	.+86     	; 0xa0e4 <TMR_SR_cmdSetProtocolConfiguration+0x380>
    a08e:	9a c0       	rjmp	.+308    	; 0xa1c4 <TMR_SR_cmdSetProtocolConfiguration+0x460>
    a090:	01 96       	adiw	r24, 0x01	; 1
    a092:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    a096:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    a09a:	85 e0       	ldi	r24, 0x05	; 5
    a09c:	cf 5f       	subi	r28, 0xFF	; 255
    a09e:	de 4f       	sbci	r29, 0xFE	; 254
    a0a0:	88 83       	st	Y, r24
    a0a2:	c1 50       	subi	r28, 0x01	; 1
    a0a4:	d1 40       	sbci	r29, 0x01	; 1
    a0a6:	5d 83       	std	Y+5, r21	; 0x05
    a0a8:	f9 01       	movw	r30, r18
    a0aa:	80 81       	ld	r24, Z
    a0ac:	91 81       	ldd	r25, Z+1	; 0x01
    a0ae:	a2 81       	ldd	r26, Z+2	; 0x02
    a0b0:	b3 81       	ldd	r27, Z+3	; 0x03
    a0b2:	9c 01       	movw	r18, r24
    a0b4:	ad 01       	movw	r20, r26
    a0b6:	e2 2e       	mov	r14, r18
    a0b8:	f3 2e       	mov	r15, r19
    a0ba:	04 2f       	mov	r16, r20
    a0bc:	15 2f       	mov	r17, r21
    a0be:	20 e0       	ldi	r18, 0x00	; 0
    a0c0:	30 e0       	ldi	r19, 0x00	; 0
    a0c2:	40 e0       	ldi	r20, 0x00	; 0
    a0c4:	50 e0       	ldi	r21, 0x00	; 0
    a0c6:	be 01       	movw	r22, r28
    a0c8:	6f 5f       	subi	r22, 0xFF	; 255
    a0ca:	7e 4f       	sbci	r23, 0xFE	; 254
    a0cc:	ce 01       	movw	r24, r28
    a0ce:	01 96       	adiw	r24, 0x01	; 1
    a0d0:	0e 94 a1 6d 	call	0xdb42	; 0xdb42 <TMR_SR_convertToEBV>
    a0d4:	4b 01       	movw	r8, r22
    a0d6:	5c 01       	movw	r10, r24
    a0d8:	61 15       	cp	r22, r1
    a0da:	71 05       	cpc	r23, r1
    a0dc:	81 05       	cpc	r24, r1
    a0de:	91 05       	cpc	r25, r1
    a0e0:	d9 f1       	breq	.+118    	; 0xa158 <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    a0e2:	75 c0       	rjmp	.+234    	; 0xa1ce <TMR_SR_cmdSetProtocolConfiguration+0x46a>
    a0e4:	5d 83       	std	Y+5, r21	; 0x05
    a0e6:	02 96       	adiw	r24, 0x02	; 2
    a0e8:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    a0ec:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    a0f0:	86 e0       	ldi	r24, 0x06	; 6
    a0f2:	cf 5f       	subi	r28, 0xFF	; 255
    a0f4:	de 4f       	sbci	r29, 0xFE	; 254
    a0f6:	88 83       	st	Y, r24
    a0f8:	c1 50       	subi	r28, 0x01	; 1
    a0fa:	d1 40       	sbci	r29, 0x01	; 1
    a0fc:	f9 01       	movw	r30, r18
    a0fe:	80 81       	ld	r24, Z
    a100:	8e 83       	std	Y+6, r24	; 0x06
    a102:	2a c0       	rjmp	.+84     	; 0xa158 <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    a104:	45 31       	cpi	r20, 0x15	; 21
    a106:	09 f0       	breq	.+2      	; 0xa10a <TMR_SR_cmdSetProtocolConfiguration+0x3a6>
    a108:	66 c0       	rjmp	.+204    	; 0xa1d6 <TMR_SR_cmdSetProtocolConfiguration+0x472>
    a10a:	52 30       	cpi	r21, 0x02	; 2
    a10c:	09 f0       	breq	.+2      	; 0xa110 <TMR_SR_cmdSetProtocolConfiguration+0x3ac>
    a10e:	68 c0       	rjmp	.+208    	; 0xa1e0 <TMR_SR_cmdSetProtocolConfiguration+0x47c>
    a110:	01 96       	adiw	r24, 0x01	; 1
    a112:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    a116:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    a11a:	85 e0       	ldi	r24, 0x05	; 5
    a11c:	cf 5f       	subi	r28, 0xFF	; 255
    a11e:	de 4f       	sbci	r29, 0xFE	; 254
    a120:	88 83       	st	Y, r24
    a122:	c1 50       	subi	r28, 0x01	; 1
    a124:	d1 40       	sbci	r29, 0x01	; 1
    a126:	5d 83       	std	Y+5, r21	; 0x05
    a128:	f9 01       	movw	r30, r18
    a12a:	e0 80       	ld	r14, Z
    a12c:	f1 2c       	mov	r15, r1
    a12e:	00 e0       	ldi	r16, 0x00	; 0
    a130:	10 e0       	ldi	r17, 0x00	; 0
    a132:	20 e0       	ldi	r18, 0x00	; 0
    a134:	30 e0       	ldi	r19, 0x00	; 0
    a136:	40 e0       	ldi	r20, 0x00	; 0
    a138:	50 e0       	ldi	r21, 0x00	; 0
    a13a:	be 01       	movw	r22, r28
    a13c:	6f 5f       	subi	r22, 0xFF	; 255
    a13e:	7e 4f       	sbci	r23, 0xFE	; 254
    a140:	ce 01       	movw	r24, r28
    a142:	01 96       	adiw	r24, 0x01	; 1
    a144:	0e 94 a1 6d 	call	0xdb42	; 0xdb42 <TMR_SR_convertToEBV>
    a148:	4b 01       	movw	r8, r22
    a14a:	5c 01       	movw	r10, r24
    a14c:	61 15       	cp	r22, r1
    a14e:	71 05       	cpc	r23, r1
    a150:	81 05       	cpc	r24, r1
    a152:	91 05       	cpc	r25, r1
    a154:	09 f0       	breq	.+2      	; 0xa158 <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    a156:	49 c0       	rjmp	.+146    	; 0xa1ea <TMR_SR_cmdSetProtocolConfiguration+0x486>
    a158:	cf 5f       	subi	r28, 0xFF	; 255
    a15a:	de 4f       	sbci	r29, 0xFE	; 254
    a15c:	48 81       	ld	r20, Y
    a15e:	c1 50       	subi	r28, 0x01	; 1
    a160:	d1 40       	sbci	r29, 0x01	; 1
    a162:	be 01       	movw	r22, r28
    a164:	6f 5f       	subi	r22, 0xFF	; 255
    a166:	7f 4f       	sbci	r23, 0xFF	; 255
    a168:	c6 01       	movw	r24, r12
    a16a:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    a16e:	40 c0       	rjmp	.+128    	; 0xa1f0 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a170:	69 e0       	ldi	r22, 0x09	; 9
    a172:	70 e0       	ldi	r23, 0x00	; 0
    a174:	80 e0       	ldi	r24, 0x00	; 0
    a176:	93 e0       	ldi	r25, 0x03	; 3
    a178:	3b c0       	rjmp	.+118    	; 0xa1f0 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a17a:	61 e0       	ldi	r22, 0x01	; 1
    a17c:	70 e0       	ldi	r23, 0x00	; 0
    a17e:	80 e0       	ldi	r24, 0x00	; 0
    a180:	93 e0       	ldi	r25, 0x03	; 3
    a182:	36 c0       	rjmp	.+108    	; 0xa1f0 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a184:	61 e0       	ldi	r22, 0x01	; 1
    a186:	70 e0       	ldi	r23, 0x00	; 0
    a188:	80 e0       	ldi	r24, 0x00	; 0
    a18a:	93 e0       	ldi	r25, 0x03	; 3
    a18c:	31 c0       	rjmp	.+98     	; 0xa1f0 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a18e:	69 e0       	ldi	r22, 0x09	; 9
    a190:	70 e0       	ldi	r23, 0x00	; 0
    a192:	80 e0       	ldi	r24, 0x00	; 0
    a194:	93 e0       	ldi	r25, 0x03	; 3
    a196:	2c c0       	rjmp	.+88     	; 0xa1f0 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a198:	79 2d       	mov	r23, r9
    a19a:	8a 2d       	mov	r24, r10
    a19c:	9b 2d       	mov	r25, r11
    a19e:	28 c0       	rjmp	.+80     	; 0xa1f0 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a1a0:	69 e0       	ldi	r22, 0x09	; 9
    a1a2:	70 e0       	ldi	r23, 0x00	; 0
    a1a4:	80 e0       	ldi	r24, 0x00	; 0
    a1a6:	93 e0       	ldi	r25, 0x03	; 3
    a1a8:	23 c0       	rjmp	.+70     	; 0xa1f0 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a1aa:	79 2d       	mov	r23, r9
    a1ac:	8a 2d       	mov	r24, r10
    a1ae:	9b 2d       	mov	r25, r11
    a1b0:	1f c0       	rjmp	.+62     	; 0xa1f0 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a1b2:	69 e0       	ldi	r22, 0x09	; 9
    a1b4:	70 e0       	ldi	r23, 0x00	; 0
    a1b6:	80 e0       	ldi	r24, 0x00	; 0
    a1b8:	93 e0       	ldi	r25, 0x03	; 3
    a1ba:	1a c0       	rjmp	.+52     	; 0xa1f0 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a1bc:	79 2d       	mov	r23, r9
    a1be:	8a 2d       	mov	r24, r10
    a1c0:	9b 2d       	mov	r25, r11
    a1c2:	16 c0       	rjmp	.+44     	; 0xa1f0 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a1c4:	69 e0       	ldi	r22, 0x09	; 9
    a1c6:	70 e0       	ldi	r23, 0x00	; 0
    a1c8:	80 e0       	ldi	r24, 0x00	; 0
    a1ca:	93 e0       	ldi	r25, 0x03	; 3
    a1cc:	11 c0       	rjmp	.+34     	; 0xa1f0 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a1ce:	79 2d       	mov	r23, r9
    a1d0:	8a 2d       	mov	r24, r10
    a1d2:	9b 2d       	mov	r25, r11
    a1d4:	0d c0       	rjmp	.+26     	; 0xa1f0 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a1d6:	61 e0       	ldi	r22, 0x01	; 1
    a1d8:	70 e0       	ldi	r23, 0x00	; 0
    a1da:	80 e0       	ldi	r24, 0x00	; 0
    a1dc:	93 e0       	ldi	r25, 0x03	; 3
    a1de:	08 c0       	rjmp	.+16     	; 0xa1f0 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a1e0:	69 e0       	ldi	r22, 0x09	; 9
    a1e2:	70 e0       	ldi	r23, 0x00	; 0
    a1e4:	80 e0       	ldi	r24, 0x00	; 0
    a1e6:	93 e0       	ldi	r25, 0x03	; 3
    a1e8:	03 c0       	rjmp	.+6      	; 0xa1f0 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a1ea:	79 2d       	mov	r23, r9
    a1ec:	8a 2d       	mov	r24, r10
    a1ee:	9b 2d       	mov	r25, r11
    a1f0:	cf 5f       	subi	r28, 0xFF	; 255
    a1f2:	de 4f       	sbci	r29, 0xFE	; 254
    a1f4:	0f b6       	in	r0, 0x3f	; 63
    a1f6:	f8 94       	cli
    a1f8:	de bf       	out	0x3e, r29	; 62
    a1fa:	0f be       	out	0x3f, r0	; 63
    a1fc:	cd bf       	out	0x3d, r28	; 61
    a1fe:	df 91       	pop	r29
    a200:	cf 91       	pop	r28
    a202:	1f 91       	pop	r17
    a204:	0f 91       	pop	r16
    a206:	ff 90       	pop	r15
    a208:	ef 90       	pop	r14
    a20a:	df 90       	pop	r13
    a20c:	cf 90       	pop	r12
    a20e:	bf 90       	pop	r11
    a210:	af 90       	pop	r10
    a212:	9f 90       	pop	r9
    a214:	8f 90       	pop	r8
    a216:	08 95       	ret

0000a218 <TMR_SR_cmdAntennaDetect>:
    a218:	ef 92       	push	r14
    a21a:	ff 92       	push	r15
    a21c:	0f 93       	push	r16
    a21e:	1f 93       	push	r17
    a220:	cf 93       	push	r28
    a222:	df 93       	push	r29
    a224:	cd b7       	in	r28, 0x3d	; 61
    a226:	de b7       	in	r29, 0x3e	; 62
    a228:	da 95       	dec	r29
    a22a:	0f b6       	in	r0, 0x3f	; 63
    a22c:	f8 94       	cli
    a22e:	de bf       	out	0x3e, r29	; 62
    a230:	0f be       	out	0x3f, r0	; 63
    a232:	cd bf       	out	0x3d, r28	; 61
    a234:	8b 01       	movw	r16, r22
    a236:	7a 01       	movw	r14, r20
    a238:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    a23c:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    a240:	41 e6       	ldi	r20, 0x61	; 97
    a242:	4b 83       	std	Y+3, r20	; 0x03
    a244:	2e 5f       	subi	r18, 0xFE	; 254
    a246:	3f 4f       	sbci	r19, 0xFF	; 255
    a248:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    a24c:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    a250:	25 e0       	ldi	r18, 0x05	; 5
    a252:	2c 83       	std	Y+4, r18	; 0x04
    a254:	44 e0       	ldi	r20, 0x04	; 4
    a256:	be 01       	movw	r22, r28
    a258:	6f 5f       	subi	r22, 0xFF	; 255
    a25a:	7f 4f       	sbci	r23, 0xFF	; 255
    a25c:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    a260:	61 15       	cp	r22, r1
    a262:	71 05       	cpc	r23, r1
    a264:	81 05       	cpc	r24, r1
    a266:	91 05       	cpc	r25, r1
    a268:	91 f5       	brne	.+100    	; 0xa2ce <TMR_SR_cmdAntennaDetect+0xb6>
    a26a:	20 e0       	ldi	r18, 0x00	; 0
    a26c:	31 e0       	ldi	r19, 0x01	; 1
    a26e:	21 c0       	rjmp	.+66     	; 0xa2b2 <TMR_SR_cmdAntennaDetect+0x9a>
    a270:	e2 2f       	mov	r30, r18
    a272:	f0 e0       	ldi	r31, 0x00	; 0
    a274:	ee 0f       	add	r30, r30
    a276:	ff 1f       	adc	r31, r31
    a278:	ee 0d       	add	r30, r14
    a27a:	ff 1d       	adc	r31, r15
    a27c:	83 2f       	mov	r24, r19
    a27e:	90 e0       	ldi	r25, 0x00	; 0
    a280:	dc 01       	movw	r26, r24
    a282:	15 96       	adiw	r26, 0x05	; 5
    a284:	41 e0       	ldi	r20, 0x01	; 1
    a286:	50 e0       	ldi	r21, 0x00	; 0
    a288:	4c 0f       	add	r20, r28
    a28a:	5d 1f       	adc	r21, r29
    a28c:	a4 0f       	add	r26, r20
    a28e:	b5 1f       	adc	r27, r21
    a290:	4c 91       	ld	r20, X
    a292:	40 83       	st	Z, r20
    a294:	06 96       	adiw	r24, 0x06	; 6
    a296:	a1 e0       	ldi	r26, 0x01	; 1
    a298:	b0 e0       	ldi	r27, 0x00	; 0
    a29a:	ac 0f       	add	r26, r28
    a29c:	bd 1f       	adc	r27, r29
    a29e:	a8 0f       	add	r26, r24
    a2a0:	b9 1f       	adc	r27, r25
    a2a2:	9c 91       	ld	r25, X
    a2a4:	81 e0       	ldi	r24, 0x01	; 1
    a2a6:	91 30       	cpi	r25, 0x01	; 1
    a2a8:	09 f0       	breq	.+2      	; 0xa2ac <TMR_SR_cmdAntennaDetect+0x94>
    a2aa:	80 e0       	ldi	r24, 0x00	; 0
    a2ac:	81 83       	std	Z+1, r24	; 0x01
    a2ae:	3e 5f       	subi	r19, 0xFE	; 254
    a2b0:	2f 5f       	subi	r18, 0xFF	; 255
    a2b2:	8a 81       	ldd	r24, Y+2	; 0x02
    a2b4:	38 17       	cp	r19, r24
    a2b6:	20 f4       	brcc	.+8      	; 0xa2c0 <TMR_SR_cmdAntennaDetect+0xa8>
    a2b8:	f8 01       	movw	r30, r16
    a2ba:	80 81       	ld	r24, Z
    a2bc:	28 17       	cp	r18, r24
    a2be:	c0 f2       	brcs	.-80     	; 0xa270 <TMR_SR_cmdAntennaDetect+0x58>
    a2c0:	f8 01       	movw	r30, r16
    a2c2:	20 83       	st	Z, r18
    a2c4:	40 e0       	ldi	r20, 0x00	; 0
    a2c6:	30 e0       	ldi	r19, 0x00	; 0
    a2c8:	20 e0       	ldi	r18, 0x00	; 0
    a2ca:	90 e0       	ldi	r25, 0x00	; 0
    a2cc:	03 c0       	rjmp	.+6      	; 0xa2d4 <TMR_SR_cmdAntennaDetect+0xbc>
    a2ce:	46 2f       	mov	r20, r22
    a2d0:	37 2f       	mov	r19, r23
    a2d2:	28 2f       	mov	r18, r24
    a2d4:	64 2f       	mov	r22, r20
    a2d6:	73 2f       	mov	r23, r19
    a2d8:	82 2f       	mov	r24, r18
    a2da:	d3 95       	inc	r29
    a2dc:	0f b6       	in	r0, 0x3f	; 63
    a2de:	f8 94       	cli
    a2e0:	de bf       	out	0x3e, r29	; 62
    a2e2:	0f be       	out	0x3f, r0	; 63
    a2e4:	cd bf       	out	0x3d, r28	; 61
    a2e6:	df 91       	pop	r29
    a2e8:	cf 91       	pop	r28
    a2ea:	1f 91       	pop	r17
    a2ec:	0f 91       	pop	r16
    a2ee:	ff 90       	pop	r15
    a2f0:	ef 90       	pop	r14
    a2f2:	08 95       	ret

0000a2f4 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime>:
    a2f4:	cf 92       	push	r12
    a2f6:	df 92       	push	r13
    a2f8:	ef 92       	push	r14
    a2fa:	ff 92       	push	r15
    a2fc:	0f 93       	push	r16
    a2fe:	1f 93       	push	r17
    a300:	cf 93       	push	r28
    a302:	df 93       	push	r29
    a304:	cd b7       	in	r28, 0x3d	; 61
    a306:	de b7       	in	r29, 0x3e	; 62
    a308:	da 95       	dec	r29
    a30a:	0f b6       	in	r0, 0x3f	; 63
    a30c:	f8 94       	cli
    a30e:	de bf       	out	0x3e, r29	; 62
    a310:	0f be       	out	0x3f, r0	; 63
    a312:	cd bf       	out	0x3d, r28	; 61
    a314:	8c 01       	movw	r16, r24
    a316:	7b 01       	movw	r14, r22
    a318:	6a 01       	movw	r12, r20
    a31a:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    a31e:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    a322:	21 e6       	ldi	r18, 0x61	; 97
    a324:	2b 83       	std	Y+3, r18	; 0x03
    a326:	24 e0       	ldi	r18, 0x04	; 4
    a328:	2c 83       	std	Y+4, r18	; 0x04
    a32a:	03 96       	adiw	r24, 0x03	; 3
    a32c:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    a330:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    a334:	f8 01       	movw	r30, r16
    a336:	e2 5f       	subi	r30, 0xF2	; 242
    a338:	f9 4f       	sbci	r31, 0xF9	; 249
    a33a:	80 81       	ld	r24, Z
    a33c:	8d 83       	std	Y+5, r24	; 0x05
    a33e:	45 e0       	ldi	r20, 0x05	; 5
    a340:	be 01       	movw	r22, r28
    a342:	6f 5f       	subi	r22, 0xFF	; 255
    a344:	7f 4f       	sbci	r23, 0xFF	; 255
    a346:	c8 01       	movw	r24, r16
    a348:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    a34c:	61 15       	cp	r22, r1
    a34e:	71 05       	cpc	r23, r1
    a350:	81 05       	cpc	r24, r1
    a352:	91 05       	cpc	r25, r1
    a354:	09 f0       	breq	.+2      	; 0xa358 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x64>
    a356:	97 c0       	rjmp	.+302    	; 0xa486 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x192>
    a358:	8f 81       	ldd	r24, Y+7	; 0x07
    a35a:	f8 01       	movw	r30, r16
    a35c:	e2 5f       	subi	r30, 0xF2	; 242
    a35e:	f9 4f       	sbci	r31, 0xF9	; 249
    a360:	80 83       	st	Z, r24
    a362:	40 e0       	ldi	r20, 0x00	; 0
    a364:	51 e0       	ldi	r21, 0x01	; 1
    a366:	7a c0       	rjmp	.+244    	; 0xa45c <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x168>
    a368:	24 2f       	mov	r18, r20
    a36a:	30 e0       	ldi	r19, 0x00	; 0
    a36c:	f9 01       	movw	r30, r18
    a36e:	ee 0f       	add	r30, r30
    a370:	ff 1f       	adc	r31, r31
    a372:	ee 0f       	add	r30, r30
    a374:	ff 1f       	adc	r31, r31
    a376:	ee 0f       	add	r30, r30
    a378:	ff 1f       	adc	r31, r31
    a37a:	e2 1b       	sub	r30, r18
    a37c:	f3 0b       	sbc	r31, r19
    a37e:	ec 0d       	add	r30, r12
    a380:	fd 1d       	adc	r31, r13
    a382:	dc 01       	movw	r26, r24
    a384:	16 96       	adiw	r26, 0x06	; 6
    a386:	21 e0       	ldi	r18, 0x01	; 1
    a388:	30 e0       	ldi	r19, 0x00	; 0
    a38a:	2c 0f       	add	r18, r28
    a38c:	3d 1f       	adc	r19, r29
    a38e:	a2 0f       	add	r26, r18
    a390:	b3 1f       	adc	r27, r19
    a392:	2c 91       	ld	r18, X
    a394:	20 83       	st	Z, r18
    a396:	d8 01       	movw	r26, r16
    a398:	a2 5f       	subi	r26, 0xF2	; 242
    a39a:	b9 4f       	sbci	r27, 0xF9	; 249
    a39c:	2c 91       	ld	r18, X
    a39e:	22 30       	cpi	r18, 0x02	; 2
    a3a0:	01 f1       	breq	.+64     	; 0xa3e2 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0xee>
    a3a2:	23 30       	cpi	r18, 0x03	; 3
    a3a4:	e1 f1       	breq	.+120    	; 0xa41e <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x12a>
    a3a6:	21 30       	cpi	r18, 0x01	; 1
    a3a8:	09 f0       	breq	.+2      	; 0xa3ac <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0xb8>
    a3aa:	56 c0       	rjmp	.+172    	; 0xa458 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x164>
    a3ac:	dc 01       	movw	r26, r24
    a3ae:	17 96       	adiw	r26, 0x07	; 7
    a3b0:	61 e0       	ldi	r22, 0x01	; 1
    a3b2:	70 e0       	ldi	r23, 0x00	; 0
    a3b4:	6c 0f       	add	r22, r28
    a3b6:	7d 1f       	adc	r23, r29
    a3b8:	a6 0f       	add	r26, r22
    a3ba:	b7 1f       	adc	r27, r23
    a3bc:	2c 91       	ld	r18, X
    a3be:	30 e0       	ldi	r19, 0x00	; 0
    a3c0:	32 2f       	mov	r19, r18
    a3c2:	22 27       	eor	r18, r18
    a3c4:	08 96       	adiw	r24, 0x08	; 8
    a3c6:	db 01       	movw	r26, r22
    a3c8:	a8 0f       	add	r26, r24
    a3ca:	b9 1f       	adc	r27, r25
    a3cc:	8c 91       	ld	r24, X
    a3ce:	b9 01       	movw	r22, r18
    a3d0:	68 2b       	or	r22, r24
    a3d2:	cb 01       	movw	r24, r22
    a3d4:	92 83       	std	Z+2, r25	; 0x02
    a3d6:	81 83       	std	Z+1, r24	; 0x01
    a3d8:	14 82       	std	Z+4, r1	; 0x04
    a3da:	13 82       	std	Z+3, r1	; 0x03
    a3dc:	16 82       	std	Z+6, r1	; 0x06
    a3de:	15 82       	std	Z+5, r1	; 0x05
    a3e0:	3b c0       	rjmp	.+118    	; 0xa458 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x164>
    a3e2:	12 82       	std	Z+2, r1	; 0x02
    a3e4:	11 82       	std	Z+1, r1	; 0x01
    a3e6:	dc 01       	movw	r26, r24
    a3e8:	17 96       	adiw	r26, 0x07	; 7
    a3ea:	21 e0       	ldi	r18, 0x01	; 1
    a3ec:	30 e0       	ldi	r19, 0x00	; 0
    a3ee:	2c 0f       	add	r18, r28
    a3f0:	3d 1f       	adc	r19, r29
    a3f2:	a2 0f       	add	r26, r18
    a3f4:	b3 1f       	adc	r27, r19
    a3f6:	2c 91       	ld	r18, X
    a3f8:	30 e0       	ldi	r19, 0x00	; 0
    a3fa:	32 2f       	mov	r19, r18
    a3fc:	22 27       	eor	r18, r18
    a3fe:	08 96       	adiw	r24, 0x08	; 8
    a400:	a1 e0       	ldi	r26, 0x01	; 1
    a402:	b0 e0       	ldi	r27, 0x00	; 0
    a404:	ac 0f       	add	r26, r28
    a406:	bd 1f       	adc	r27, r29
    a408:	a8 0f       	add	r26, r24
    a40a:	b9 1f       	adc	r27, r25
    a40c:	8c 91       	ld	r24, X
    a40e:	b9 01       	movw	r22, r18
    a410:	68 2b       	or	r22, r24
    a412:	cb 01       	movw	r24, r22
    a414:	94 83       	std	Z+4, r25	; 0x04
    a416:	83 83       	std	Z+3, r24	; 0x03
    a418:	16 82       	std	Z+6, r1	; 0x06
    a41a:	15 82       	std	Z+5, r1	; 0x05
    a41c:	1d c0       	rjmp	.+58     	; 0xa458 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x164>
    a41e:	12 82       	std	Z+2, r1	; 0x02
    a420:	11 82       	std	Z+1, r1	; 0x01
    a422:	14 82       	std	Z+4, r1	; 0x04
    a424:	13 82       	std	Z+3, r1	; 0x03
    a426:	dc 01       	movw	r26, r24
    a428:	17 96       	adiw	r26, 0x07	; 7
    a42a:	21 e0       	ldi	r18, 0x01	; 1
    a42c:	30 e0       	ldi	r19, 0x00	; 0
    a42e:	2c 0f       	add	r18, r28
    a430:	3d 1f       	adc	r19, r29
    a432:	a2 0f       	add	r26, r18
    a434:	b3 1f       	adc	r27, r19
    a436:	2c 91       	ld	r18, X
    a438:	30 e0       	ldi	r19, 0x00	; 0
    a43a:	32 2f       	mov	r19, r18
    a43c:	22 27       	eor	r18, r18
    a43e:	08 96       	adiw	r24, 0x08	; 8
    a440:	a1 e0       	ldi	r26, 0x01	; 1
    a442:	b0 e0       	ldi	r27, 0x00	; 0
    a444:	ac 0f       	add	r26, r28
    a446:	bd 1f       	adc	r27, r29
    a448:	a8 0f       	add	r26, r24
    a44a:	b9 1f       	adc	r27, r25
    a44c:	8c 91       	ld	r24, X
    a44e:	b9 01       	movw	r22, r18
    a450:	68 2b       	or	r22, r24
    a452:	cb 01       	movw	r24, r22
    a454:	96 83       	std	Z+6, r25	; 0x06
    a456:	85 83       	std	Z+5, r24	; 0x05
    a458:	5d 5f       	subi	r21, 0xFD	; 253
    a45a:	4f 5f       	subi	r20, 0xFF	; 255
    a45c:	85 2f       	mov	r24, r21
    a45e:	90 e0       	ldi	r25, 0x00	; 0
    a460:	2a 81       	ldd	r18, Y+2	; 0x02
    a462:	30 e0       	ldi	r19, 0x00	; 0
    a464:	21 50       	subi	r18, 0x01	; 1
    a466:	31 09       	sbc	r19, r1
    a468:	82 17       	cp	r24, r18
    a46a:	93 07       	cpc	r25, r19
    a46c:	2c f4       	brge	.+10     	; 0xa478 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x184>
    a46e:	f7 01       	movw	r30, r14
    a470:	20 81       	ld	r18, Z
    a472:	42 17       	cp	r20, r18
    a474:	08 f4       	brcc	.+2      	; 0xa478 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x184>
    a476:	78 cf       	rjmp	.-272    	; 0xa368 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x74>
    a478:	f7 01       	movw	r30, r14
    a47a:	40 83       	st	Z, r20
    a47c:	40 e0       	ldi	r20, 0x00	; 0
    a47e:	30 e0       	ldi	r19, 0x00	; 0
    a480:	20 e0       	ldi	r18, 0x00	; 0
    a482:	90 e0       	ldi	r25, 0x00	; 0
    a484:	03 c0       	rjmp	.+6      	; 0xa48c <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x198>
    a486:	46 2f       	mov	r20, r22
    a488:	37 2f       	mov	r19, r23
    a48a:	28 2f       	mov	r18, r24
    a48c:	64 2f       	mov	r22, r20
    a48e:	73 2f       	mov	r23, r19
    a490:	82 2f       	mov	r24, r18
    a492:	d3 95       	inc	r29
    a494:	0f b6       	in	r0, 0x3f	; 63
    a496:	f8 94       	cli
    a498:	de bf       	out	0x3e, r29	; 62
    a49a:	0f be       	out	0x3f, r0	; 63
    a49c:	cd bf       	out	0x3d, r28	; 61
    a49e:	df 91       	pop	r29
    a4a0:	cf 91       	pop	r28
    a4a2:	1f 91       	pop	r17
    a4a4:	0f 91       	pop	r16
    a4a6:	ff 90       	pop	r15
    a4a8:	ef 90       	pop	r14
    a4aa:	df 90       	pop	r13
    a4ac:	cf 90       	pop	r12
    a4ae:	08 95       	ret

0000a4b0 <TMR_SR_cmdGetAntennaReturnLoss>:
    a4b0:	cf 92       	push	r12
    a4b2:	df 92       	push	r13
    a4b4:	ef 92       	push	r14
    a4b6:	ff 92       	push	r15
    a4b8:	0f 93       	push	r16
    a4ba:	1f 93       	push	r17
    a4bc:	cf 93       	push	r28
    a4be:	df 93       	push	r29
    a4c0:	cd b7       	in	r28, 0x3d	; 61
    a4c2:	de b7       	in	r29, 0x3e	; 62
    a4c4:	da 95       	dec	r29
    a4c6:	0f b6       	in	r0, 0x3f	; 63
    a4c8:	f8 94       	cli
    a4ca:	de bf       	out	0x3e, r29	; 62
    a4cc:	0f be       	out	0x3f, r0	; 63
    a4ce:	cd bf       	out	0x3d, r28	; 61
    a4d0:	8b 01       	movw	r16, r22
    a4d2:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    a4d6:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    a4da:	41 e6       	ldi	r20, 0x61	; 97
    a4dc:	4b 83       	std	Y+3, r20	; 0x03
    a4de:	2e 5f       	subi	r18, 0xFE	; 254
    a4e0:	3f 4f       	sbci	r19, 0xFF	; 255
    a4e2:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    a4e6:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    a4ea:	26 e0       	ldi	r18, 0x06	; 6
    a4ec:	2c 83       	std	Y+4, r18	; 0x04
    a4ee:	44 e0       	ldi	r20, 0x04	; 4
    a4f0:	be 01       	movw	r22, r28
    a4f2:	6f 5f       	subi	r22, 0xFF	; 255
    a4f4:	7f 4f       	sbci	r23, 0xFF	; 255
    a4f6:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    a4fa:	61 15       	cp	r22, r1
    a4fc:	71 05       	cpc	r23, r1
    a4fe:	81 05       	cpc	r24, r1
    a500:	91 05       	cpc	r25, r1
    a502:	09 f0       	breq	.+2      	; 0xa506 <TMR_SR_cmdGetAntennaReturnLoss+0x56>
    a504:	48 c0       	rjmp	.+144    	; 0xa596 <TMR_SR_cmdGetAntennaReturnLoss+0xe6>
    a506:	40 e0       	ldi	r20, 0x00	; 0
    a508:	51 e0       	ldi	r21, 0x01	; 1
    a50a:	39 c0       	rjmp	.+114    	; 0xa57e <TMR_SR_cmdGetAntennaReturnLoss+0xce>
    a50c:	d8 01       	movw	r26, r16
    a50e:	12 96       	adiw	r26, 0x02	; 2
    a510:	8c 91       	ld	r24, X
    a512:	12 97       	sbiw	r26, 0x02	; 2
    a514:	48 17       	cp	r20, r24
    a516:	c0 f5       	brcc	.+112    	; 0xa588 <TMR_SR_cmdGetAntennaReturnLoss+0xd8>
    a518:	ed 91       	ld	r30, X+
    a51a:	fc 91       	ld	r31, X
    a51c:	84 2f       	mov	r24, r20
    a51e:	90 e0       	ldi	r25, 0x00	; 0
    a520:	9c 01       	movw	r18, r24
    a522:	22 0f       	add	r18, r18
    a524:	33 1f       	adc	r19, r19
    a526:	22 0f       	add	r18, r18
    a528:	33 1f       	adc	r19, r19
    a52a:	82 0f       	add	r24, r18
    a52c:	93 1f       	adc	r25, r19
    a52e:	e8 0f       	add	r30, r24
    a530:	f9 1f       	adc	r31, r25
    a532:	25 2f       	mov	r18, r21
    a534:	30 e0       	ldi	r19, 0x00	; 0
    a536:	d9 01       	movw	r26, r18
    a538:	15 96       	adiw	r26, 0x05	; 5
    a53a:	61 e0       	ldi	r22, 0x01	; 1
    a53c:	70 e0       	ldi	r23, 0x00	; 0
    a53e:	6c 0f       	add	r22, r28
    a540:	7d 1f       	adc	r23, r29
    a542:	a6 0f       	add	r26, r22
    a544:	b7 1f       	adc	r27, r23
    a546:	6c 91       	ld	r22, X
    a548:	60 83       	st	Z, r22
    a54a:	d8 01       	movw	r26, r16
    a54c:	6d 91       	ld	r22, X+
    a54e:	7c 91       	ld	r23, X
    a550:	db 01       	movw	r26, r22
    a552:	a8 0f       	add	r26, r24
    a554:	b9 1f       	adc	r27, r25
    a556:	2a 5f       	subi	r18, 0xFA	; 250
    a558:	3f 4f       	sbci	r19, 0xFF	; 255
    a55a:	e1 e0       	ldi	r30, 0x01	; 1
    a55c:	f0 e0       	ldi	r31, 0x00	; 0
    a55e:	ec 0f       	add	r30, r28
    a560:	fd 1f       	adc	r31, r29
    a562:	e2 0f       	add	r30, r18
    a564:	f3 1f       	adc	r31, r19
    a566:	c0 80       	ld	r12, Z
    a568:	d1 2c       	mov	r13, r1
    a56a:	e1 2c       	mov	r14, r1
    a56c:	f1 2c       	mov	r15, r1
    a56e:	11 96       	adiw	r26, 0x01	; 1
    a570:	cd 92       	st	X+, r12
    a572:	dd 92       	st	X+, r13
    a574:	ed 92       	st	X+, r14
    a576:	fc 92       	st	X, r15
    a578:	14 97       	sbiw	r26, 0x04	; 4
    a57a:	5e 5f       	subi	r21, 0xFE	; 254
    a57c:	4f 5f       	subi	r20, 0xFF	; 255
    a57e:	8a 81       	ldd	r24, Y+2	; 0x02
    a580:	58 17       	cp	r21, r24
    a582:	10 f4       	brcc	.+4      	; 0xa588 <TMR_SR_cmdGetAntennaReturnLoss+0xd8>
    a584:	40 34       	cpi	r20, 0x40	; 64
    a586:	10 f2       	brcs	.-124    	; 0xa50c <TMR_SR_cmdGetAntennaReturnLoss+0x5c>
    a588:	f8 01       	movw	r30, r16
    a58a:	43 83       	std	Z+3, r20	; 0x03
    a58c:	40 e0       	ldi	r20, 0x00	; 0
    a58e:	30 e0       	ldi	r19, 0x00	; 0
    a590:	20 e0       	ldi	r18, 0x00	; 0
    a592:	90 e0       	ldi	r25, 0x00	; 0
    a594:	03 c0       	rjmp	.+6      	; 0xa59c <TMR_SR_cmdGetAntennaReturnLoss+0xec>
    a596:	46 2f       	mov	r20, r22
    a598:	37 2f       	mov	r19, r23
    a59a:	28 2f       	mov	r18, r24
    a59c:	64 2f       	mov	r22, r20
    a59e:	73 2f       	mov	r23, r19
    a5a0:	82 2f       	mov	r24, r18
    a5a2:	d3 95       	inc	r29
    a5a4:	0f b6       	in	r0, 0x3f	; 63
    a5a6:	f8 94       	cli
    a5a8:	de bf       	out	0x3e, r29	; 62
    a5aa:	0f be       	out	0x3f, r0	; 63
    a5ac:	cd bf       	out	0x3d, r28	; 61
    a5ae:	df 91       	pop	r29
    a5b0:	cf 91       	pop	r28
    a5b2:	1f 91       	pop	r17
    a5b4:	0f 91       	pop	r16
    a5b6:	ff 90       	pop	r15
    a5b8:	ef 90       	pop	r14
    a5ba:	df 90       	pop	r13
    a5bc:	cf 90       	pop	r12
    a5be:	08 95       	ret

0000a5c0 <TMR_SR_cmdGetReadWriteTxPower>:
    a5c0:	0f 93       	push	r16
    a5c2:	1f 93       	push	r17
    a5c4:	cf 93       	push	r28
    a5c6:	df 93       	push	r29
    a5c8:	cd b7       	in	r28, 0x3d	; 61
    a5ca:	de b7       	in	r29, 0x3e	; 62
    a5cc:	da 95       	dec	r29
    a5ce:	0f b6       	in	r0, 0x3f	; 63
    a5d0:	f8 94       	cli
    a5d2:	de bf       	out	0x3e, r29	; 62
    a5d4:	0f be       	out	0x3f, r0	; 63
    a5d6:	cd bf       	out	0x3d, r28	; 61
    a5d8:	8b 01       	movw	r16, r22
    a5da:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    a5de:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    a5e2:	4b 83       	std	Y+3, r20	; 0x03
    a5e4:	2e 5f       	subi	r18, 0xFE	; 254
    a5e6:	3f 4f       	sbci	r19, 0xFF	; 255
    a5e8:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    a5ec:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    a5f0:	1c 82       	std	Y+4, r1	; 0x04
    a5f2:	44 e0       	ldi	r20, 0x04	; 4
    a5f4:	be 01       	movw	r22, r28
    a5f6:	6f 5f       	subi	r22, 0xFF	; 255
    a5f8:	7f 4f       	sbci	r23, 0xFF	; 255
    a5fa:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    a5fe:	61 15       	cp	r22, r1
    a600:	71 05       	cpc	r23, r1
    a602:	81 05       	cpc	r24, r1
    a604:	91 05       	cpc	r25, r1
    a606:	a1 f4       	brne	.+40     	; 0xa630 <TMR_SR_cmdGetReadWriteTxPower+0x70>
    a608:	8f 81       	ldd	r24, Y+7	; 0x07
    a60a:	90 e0       	ldi	r25, 0x00	; 0
    a60c:	98 2f       	mov	r25, r24
    a60e:	88 27       	eor	r24, r24
    a610:	28 85       	ldd	r18, Y+8	; 0x08
    a612:	82 2b       	or	r24, r18
    a614:	09 2e       	mov	r0, r25
    a616:	00 0c       	add	r0, r0
    a618:	aa 0b       	sbc	r26, r26
    a61a:	bb 0b       	sbc	r27, r27
    a61c:	f8 01       	movw	r30, r16
    a61e:	80 83       	st	Z, r24
    a620:	91 83       	std	Z+1, r25	; 0x01
    a622:	a2 83       	std	Z+2, r26	; 0x02
    a624:	b3 83       	std	Z+3, r27	; 0x03
    a626:	40 e0       	ldi	r20, 0x00	; 0
    a628:	30 e0       	ldi	r19, 0x00	; 0
    a62a:	20 e0       	ldi	r18, 0x00	; 0
    a62c:	90 e0       	ldi	r25, 0x00	; 0
    a62e:	03 c0       	rjmp	.+6      	; 0xa636 <TMR_SR_cmdGetReadWriteTxPower+0x76>
    a630:	46 2f       	mov	r20, r22
    a632:	37 2f       	mov	r19, r23
    a634:	28 2f       	mov	r18, r24
    a636:	64 2f       	mov	r22, r20
    a638:	73 2f       	mov	r23, r19
    a63a:	82 2f       	mov	r24, r18
    a63c:	d3 95       	inc	r29
    a63e:	0f b6       	in	r0, 0x3f	; 63
    a640:	f8 94       	cli
    a642:	de bf       	out	0x3e, r29	; 62
    a644:	0f be       	out	0x3f, r0	; 63
    a646:	cd bf       	out	0x3d, r28	; 61
    a648:	df 91       	pop	r29
    a64a:	cf 91       	pop	r28
    a64c:	1f 91       	pop	r17
    a64e:	0f 91       	pop	r16
    a650:	08 95       	ret

0000a652 <TMR_SR_cmdGetReadTxPower>:
    a652:	42 e6       	ldi	r20, 0x62	; 98
    a654:	b5 cf       	rjmp	.-150    	; 0xa5c0 <TMR_SR_cmdGetReadWriteTxPower>
    a656:	08 95       	ret

0000a658 <TMR_SR_cmdGetReadTxPowerWithLimits>:
    a658:	0f 93       	push	r16
    a65a:	1f 93       	push	r17
    a65c:	cf 93       	push	r28
    a65e:	df 93       	push	r29
    a660:	cd b7       	in	r28, 0x3d	; 61
    a662:	de b7       	in	r29, 0x3e	; 62
    a664:	da 95       	dec	r29
    a666:	0f b6       	in	r0, 0x3f	; 63
    a668:	f8 94       	cli
    a66a:	de bf       	out	0x3e, r29	; 62
    a66c:	0f be       	out	0x3f, r0	; 63
    a66e:	cd bf       	out	0x3d, r28	; 61
    a670:	8b 01       	movw	r16, r22
    a672:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    a676:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    a67a:	42 e6       	ldi	r20, 0x62	; 98
    a67c:	4b 83       	std	Y+3, r20	; 0x03
    a67e:	2e 5f       	subi	r18, 0xFE	; 254
    a680:	3f 4f       	sbci	r19, 0xFF	; 255
    a682:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    a686:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    a68a:	21 e0       	ldi	r18, 0x01	; 1
    a68c:	2c 83       	std	Y+4, r18	; 0x04
    a68e:	44 e0       	ldi	r20, 0x04	; 4
    a690:	be 01       	movw	r22, r28
    a692:	6f 5f       	subi	r22, 0xFF	; 255
    a694:	7f 4f       	sbci	r23, 0xFF	; 255
    a696:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    a69a:	61 15       	cp	r22, r1
    a69c:	71 05       	cpc	r23, r1
    a69e:	81 05       	cpc	r24, r1
    a6a0:	91 05       	cpc	r25, r1
    a6a2:	f1 f4       	brne	.+60     	; 0xa6e0 <TMR_SR_cmdGetReadTxPowerWithLimits+0x88>
    a6a4:	8f 81       	ldd	r24, Y+7	; 0x07
    a6a6:	90 e0       	ldi	r25, 0x00	; 0
    a6a8:	98 2f       	mov	r25, r24
    a6aa:	88 27       	eor	r24, r24
    a6ac:	28 85       	ldd	r18, Y+8	; 0x08
    a6ae:	82 2b       	or	r24, r18
    a6b0:	f8 01       	movw	r30, r16
    a6b2:	91 83       	std	Z+1, r25	; 0x01
    a6b4:	80 83       	st	Z, r24
    a6b6:	89 85       	ldd	r24, Y+9	; 0x09
    a6b8:	90 e0       	ldi	r25, 0x00	; 0
    a6ba:	98 2f       	mov	r25, r24
    a6bc:	88 27       	eor	r24, r24
    a6be:	2a 85       	ldd	r18, Y+10	; 0x0a
    a6c0:	82 2b       	or	r24, r18
    a6c2:	93 83       	std	Z+3, r25	; 0x03
    a6c4:	82 83       	std	Z+2, r24	; 0x02
    a6c6:	8b 85       	ldd	r24, Y+11	; 0x0b
    a6c8:	90 e0       	ldi	r25, 0x00	; 0
    a6ca:	98 2f       	mov	r25, r24
    a6cc:	88 27       	eor	r24, r24
    a6ce:	2c 85       	ldd	r18, Y+12	; 0x0c
    a6d0:	82 2b       	or	r24, r18
    a6d2:	95 83       	std	Z+5, r25	; 0x05
    a6d4:	84 83       	std	Z+4, r24	; 0x04
    a6d6:	40 e0       	ldi	r20, 0x00	; 0
    a6d8:	30 e0       	ldi	r19, 0x00	; 0
    a6da:	20 e0       	ldi	r18, 0x00	; 0
    a6dc:	90 e0       	ldi	r25, 0x00	; 0
    a6de:	03 c0       	rjmp	.+6      	; 0xa6e6 <TMR_SR_cmdGetReadTxPowerWithLimits+0x8e>
    a6e0:	46 2f       	mov	r20, r22
    a6e2:	37 2f       	mov	r19, r23
    a6e4:	28 2f       	mov	r18, r24
    a6e6:	64 2f       	mov	r22, r20
    a6e8:	73 2f       	mov	r23, r19
    a6ea:	82 2f       	mov	r24, r18
    a6ec:	d3 95       	inc	r29
    a6ee:	0f b6       	in	r0, 0x3f	; 63
    a6f0:	f8 94       	cli
    a6f2:	de bf       	out	0x3e, r29	; 62
    a6f4:	0f be       	out	0x3f, r0	; 63
    a6f6:	cd bf       	out	0x3d, r28	; 61
    a6f8:	df 91       	pop	r29
    a6fa:	cf 91       	pop	r28
    a6fc:	1f 91       	pop	r17
    a6fe:	0f 91       	pop	r16
    a700:	08 95       	ret

0000a702 <TMR_SR_cmdGetWriteTxPower>:
    a702:	44 e6       	ldi	r20, 0x64	; 100
    a704:	5d cf       	rjmp	.-326    	; 0xa5c0 <TMR_SR_cmdGetReadWriteTxPower>
    a706:	08 95       	ret

0000a708 <TMR_SR_cmdGetFrequencyHopTable>:
    a708:	6f 92       	push	r6
    a70a:	7f 92       	push	r7
    a70c:	8f 92       	push	r8
    a70e:	9f 92       	push	r9
    a710:	af 92       	push	r10
    a712:	bf 92       	push	r11
    a714:	cf 92       	push	r12
    a716:	df 92       	push	r13
    a718:	ef 92       	push	r14
    a71a:	ff 92       	push	r15
    a71c:	0f 93       	push	r16
    a71e:	1f 93       	push	r17
    a720:	cf 93       	push	r28
    a722:	df 93       	push	r29
    a724:	cd b7       	in	r28, 0x3d	; 61
    a726:	de b7       	in	r29, 0x3e	; 62
    a728:	da 95       	dec	r29
    a72a:	0f b6       	in	r0, 0x3f	; 63
    a72c:	f8 94       	cli
    a72e:	de bf       	out	0x3e, r29	; 62
    a730:	0f be       	out	0x3f, r0	; 63
    a732:	cd bf       	out	0x3d, r28	; 61
    a734:	8b 01       	movw	r16, r22
    a736:	7a 01       	movw	r14, r20
    a738:	45 e6       	ldi	r20, 0x65	; 101
    a73a:	be 01       	movw	r22, r28
    a73c:	6f 5f       	subi	r22, 0xFF	; 255
    a73e:	7f 4f       	sbci	r23, 0xFF	; 255
    a740:	0e 94 9b 36 	call	0x6d36	; 0x6d36 <TMR_SR_callSendCmd>
    a744:	61 15       	cp	r22, r1
    a746:	71 05       	cpc	r23, r1
    a748:	81 05       	cpc	r24, r1
    a74a:	91 05       	cpc	r25, r1
    a74c:	09 f0       	breq	.+2      	; 0xa750 <TMR_SR_cmdGetFrequencyHopTable+0x48>
    a74e:	62 c0       	rjmp	.+196    	; 0xa814 <TMR_SR_cmdGetFrequencyHopTable+0x10c>
    a750:	ca 80       	ldd	r12, Y+2	; 0x02
    a752:	c6 94       	lsr	r12
    a754:	c6 94       	lsr	r12
    a756:	d1 2c       	mov	r13, r1
    a758:	4f c0       	rjmp	.+158    	; 0xa7f8 <TMR_SR_cmdGetFrequencyHopTable+0xf0>
    a75a:	2d 2d       	mov	r18, r13
    a75c:	30 e0       	ldi	r19, 0x00	; 0
    a75e:	a9 01       	movw	r20, r18
    a760:	44 0f       	add	r20, r20
    a762:	55 1f       	adc	r21, r21
    a764:	44 0f       	add	r20, r20
    a766:	55 1f       	adc	r21, r21
    a768:	37 01       	movw	r6, r14
    a76a:	64 0e       	add	r6, r20
    a76c:	75 1e       	adc	r7, r21
    a76e:	da 01       	movw	r26, r20
    a770:	15 96       	adiw	r26, 0x05	; 5
    a772:	61 e0       	ldi	r22, 0x01	; 1
    a774:	70 e0       	ldi	r23, 0x00	; 0
    a776:	6c 0f       	add	r22, r28
    a778:	7d 1f       	adc	r23, r29
    a77a:	a6 0f       	add	r26, r22
    a77c:	b7 1f       	adc	r27, r23
    a77e:	8c 91       	ld	r24, X
    a780:	90 e0       	ldi	r25, 0x00	; 0
    a782:	a0 e0       	ldi	r26, 0x00	; 0
    a784:	b0 e0       	ldi	r27, 0x00	; 0
    a786:	b8 2e       	mov	r11, r24
    a788:	aa 24       	eor	r10, r10
    a78a:	99 24       	eor	r9, r9
    a78c:	88 24       	eor	r8, r8
    a78e:	da 01       	movw	r26, r20
    a790:	16 96       	adiw	r26, 0x06	; 6
    a792:	a6 0f       	add	r26, r22
    a794:	b7 1f       	adc	r27, r23
    a796:	8c 91       	ld	r24, X
    a798:	90 e0       	ldi	r25, 0x00	; 0
    a79a:	a0 e0       	ldi	r26, 0x00	; 0
    a79c:	b0 e0       	ldi	r27, 0x00	; 0
    a79e:	dc 01       	movw	r26, r24
    a7a0:	99 27       	eor	r25, r25
    a7a2:	88 27       	eor	r24, r24
    a7a4:	88 29       	or	r24, r8
    a7a6:	99 29       	or	r25, r9
    a7a8:	aa 29       	or	r26, r10
    a7aa:	bb 29       	or	r27, r11
    a7ac:	49 5f       	subi	r20, 0xF9	; 249
    a7ae:	5f 4f       	sbci	r21, 0xFF	; 255
    a7b0:	46 0f       	add	r20, r22
    a7b2:	57 1f       	adc	r21, r23
    a7b4:	fa 01       	movw	r30, r20
    a7b6:	40 81       	ld	r20, Z
    a7b8:	50 e0       	ldi	r21, 0x00	; 0
    a7ba:	60 e0       	ldi	r22, 0x00	; 0
    a7bc:	70 e0       	ldi	r23, 0x00	; 0
    a7be:	76 2f       	mov	r23, r22
    a7c0:	65 2f       	mov	r22, r21
    a7c2:	54 2f       	mov	r21, r20
    a7c4:	44 27       	eor	r20, r20
    a7c6:	84 2b       	or	r24, r20
    a7c8:	95 2b       	or	r25, r21
    a7ca:	a6 2b       	or	r26, r22
    a7cc:	b7 2b       	or	r27, r23
    a7ce:	2e 5f       	subi	r18, 0xFE	; 254
    a7d0:	3f 4f       	sbci	r19, 0xFF	; 255
    a7d2:	22 0f       	add	r18, r18
    a7d4:	33 1f       	adc	r19, r19
    a7d6:	22 0f       	add	r18, r18
    a7d8:	33 1f       	adc	r19, r19
    a7da:	41 e0       	ldi	r20, 0x01	; 1
    a7dc:	50 e0       	ldi	r21, 0x00	; 0
    a7de:	4c 0f       	add	r20, r28
    a7e0:	5d 1f       	adc	r21, r29
    a7e2:	24 0f       	add	r18, r20
    a7e4:	35 1f       	adc	r19, r21
    a7e6:	f9 01       	movw	r30, r18
    a7e8:	20 81       	ld	r18, Z
    a7ea:	82 2b       	or	r24, r18
    a7ec:	f3 01       	movw	r30, r6
    a7ee:	80 83       	st	Z, r24
    a7f0:	91 83       	std	Z+1, r25	; 0x01
    a7f2:	a2 83       	std	Z+2, r26	; 0x02
    a7f4:	b3 83       	std	Z+3, r27	; 0x03
    a7f6:	d3 94       	inc	r13
    a7f8:	f8 01       	movw	r30, r16
    a7fa:	80 81       	ld	r24, Z
    a7fc:	84 30       	cpi	r24, 0x04	; 4
    a7fe:	18 f0       	brcs	.+6      	; 0xa806 <TMR_SR_cmdGetFrequencyHopTable+0xfe>
    a800:	dc 14       	cp	r13, r12
    a802:	08 f4       	brcc	.+2      	; 0xa806 <TMR_SR_cmdGetFrequencyHopTable+0xfe>
    a804:	aa cf       	rjmp	.-172    	; 0xa75a <TMR_SR_cmdGetFrequencyHopTable+0x52>
    a806:	f8 01       	movw	r30, r16
    a808:	c0 82       	st	Z, r12
    a80a:	40 e0       	ldi	r20, 0x00	; 0
    a80c:	30 e0       	ldi	r19, 0x00	; 0
    a80e:	20 e0       	ldi	r18, 0x00	; 0
    a810:	90 e0       	ldi	r25, 0x00	; 0
    a812:	03 c0       	rjmp	.+6      	; 0xa81a <TMR_SR_cmdGetFrequencyHopTable+0x112>
    a814:	46 2f       	mov	r20, r22
    a816:	37 2f       	mov	r19, r23
    a818:	28 2f       	mov	r18, r24
    a81a:	64 2f       	mov	r22, r20
    a81c:	73 2f       	mov	r23, r19
    a81e:	82 2f       	mov	r24, r18
    a820:	d3 95       	inc	r29
    a822:	0f b6       	in	r0, 0x3f	; 63
    a824:	f8 94       	cli
    a826:	de bf       	out	0x3e, r29	; 62
    a828:	0f be       	out	0x3f, r0	; 63
    a82a:	cd bf       	out	0x3d, r28	; 61
    a82c:	df 91       	pop	r29
    a82e:	cf 91       	pop	r28
    a830:	1f 91       	pop	r17
    a832:	0f 91       	pop	r16
    a834:	ff 90       	pop	r15
    a836:	ef 90       	pop	r14
    a838:	df 90       	pop	r13
    a83a:	cf 90       	pop	r12
    a83c:	bf 90       	pop	r11
    a83e:	af 90       	pop	r10
    a840:	9f 90       	pop	r9
    a842:	8f 90       	pop	r8
    a844:	7f 90       	pop	r7
    a846:	6f 90       	pop	r6
    a848:	08 95       	ret

0000a84a <TMR_SR_cmdGetFrequencyHopTableOption>:
    a84a:	0f 93       	push	r16
    a84c:	1f 93       	push	r17
    a84e:	cf 93       	push	r28
    a850:	df 93       	push	r29
    a852:	cd b7       	in	r28, 0x3d	; 61
    a854:	de b7       	in	r29, 0x3e	; 62
    a856:	da 95       	dec	r29
    a858:	0f b6       	in	r0, 0x3f	; 63
    a85a:	f8 94       	cli
    a85c:	de bf       	out	0x3e, r29	; 62
    a85e:	0f be       	out	0x3f, r0	; 63
    a860:	cd bf       	out	0x3d, r28	; 61
    a862:	8b 01       	movw	r16, r22
    a864:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    a868:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    a86c:	55 e6       	ldi	r21, 0x65	; 101
    a86e:	5b 83       	std	Y+3, r21	; 0x03
    a870:	2e 5f       	subi	r18, 0xFE	; 254
    a872:	3f 4f       	sbci	r19, 0xFF	; 255
    a874:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    a878:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    a87c:	4c 83       	std	Y+4, r20	; 0x04
    a87e:	44 e0       	ldi	r20, 0x04	; 4
    a880:	be 01       	movw	r22, r28
    a882:	6f 5f       	subi	r22, 0xFF	; 255
    a884:	7f 4f       	sbci	r23, 0xFF	; 255
    a886:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    a88a:	61 15       	cp	r22, r1
    a88c:	71 05       	cpc	r23, r1
    a88e:	81 05       	cpc	r24, r1
    a890:	91 05       	cpc	r25, r1
    a892:	61 f5       	brne	.+88     	; 0xa8ec <TMR_SR_cmdGetFrequencyHopTableOption+0xa2>
    a894:	8f 81       	ldd	r24, Y+7	; 0x07
    a896:	90 e0       	ldi	r25, 0x00	; 0
    a898:	a0 e0       	ldi	r26, 0x00	; 0
    a89a:	b0 e0       	ldi	r27, 0x00	; 0
    a89c:	78 2f       	mov	r23, r24
    a89e:	66 27       	eor	r22, r22
    a8a0:	55 27       	eor	r21, r21
    a8a2:	44 27       	eor	r20, r20
    a8a4:	98 85       	ldd	r25, Y+8	; 0x08
    a8a6:	89 2f       	mov	r24, r25
    a8a8:	90 e0       	ldi	r25, 0x00	; 0
    a8aa:	a0 e0       	ldi	r26, 0x00	; 0
    a8ac:	b0 e0       	ldi	r27, 0x00	; 0
    a8ae:	dc 01       	movw	r26, r24
    a8b0:	99 27       	eor	r25, r25
    a8b2:	88 27       	eor	r24, r24
    a8b4:	84 2b       	or	r24, r20
    a8b6:	95 2b       	or	r25, r21
    a8b8:	a6 2b       	or	r26, r22
    a8ba:	b7 2b       	or	r27, r23
    a8bc:	49 85       	ldd	r20, Y+9	; 0x09
    a8be:	50 e0       	ldi	r21, 0x00	; 0
    a8c0:	60 e0       	ldi	r22, 0x00	; 0
    a8c2:	70 e0       	ldi	r23, 0x00	; 0
    a8c4:	76 2f       	mov	r23, r22
    a8c6:	65 2f       	mov	r22, r21
    a8c8:	54 2f       	mov	r21, r20
    a8ca:	44 27       	eor	r20, r20
    a8cc:	84 2b       	or	r24, r20
    a8ce:	95 2b       	or	r25, r21
    a8d0:	a6 2b       	or	r26, r22
    a8d2:	b7 2b       	or	r27, r23
    a8d4:	2a 85       	ldd	r18, Y+10	; 0x0a
    a8d6:	82 2b       	or	r24, r18
    a8d8:	f8 01       	movw	r30, r16
    a8da:	80 83       	st	Z, r24
    a8dc:	91 83       	std	Z+1, r25	; 0x01
    a8de:	a2 83       	std	Z+2, r26	; 0x02
    a8e0:	b3 83       	std	Z+3, r27	; 0x03
    a8e2:	40 e0       	ldi	r20, 0x00	; 0
    a8e4:	30 e0       	ldi	r19, 0x00	; 0
    a8e6:	20 e0       	ldi	r18, 0x00	; 0
    a8e8:	90 e0       	ldi	r25, 0x00	; 0
    a8ea:	03 c0       	rjmp	.+6      	; 0xa8f2 <TMR_SR_cmdGetFrequencyHopTableOption+0xa8>
    a8ec:	46 2f       	mov	r20, r22
    a8ee:	37 2f       	mov	r19, r23
    a8f0:	28 2f       	mov	r18, r24
    a8f2:	64 2f       	mov	r22, r20
    a8f4:	73 2f       	mov	r23, r19
    a8f6:	82 2f       	mov	r24, r18
    a8f8:	d3 95       	inc	r29
    a8fa:	0f b6       	in	r0, 0x3f	; 63
    a8fc:	f8 94       	cli
    a8fe:	de bf       	out	0x3e, r29	; 62
    a900:	0f be       	out	0x3f, r0	; 63
    a902:	cd bf       	out	0x3d, r28	; 61
    a904:	df 91       	pop	r29
    a906:	cf 91       	pop	r28
    a908:	1f 91       	pop	r17
    a90a:	0f 91       	pop	r16
    a90c:	08 95       	ret

0000a90e <TMR_SR_cmdGetFrequencyHopTime>:
    a90e:	41 e0       	ldi	r20, 0x01	; 1
    a910:	9c cf       	rjmp	.-200    	; 0xa84a <TMR_SR_cmdGetFrequencyHopTableOption>
    a912:	08 95       	ret

0000a914 <TMR_SR_cmdGetQuantizationStep>:
    a914:	42 e0       	ldi	r20, 0x02	; 2
    a916:	99 cf       	rjmp	.-206    	; 0xa84a <TMR_SR_cmdGetFrequencyHopTableOption>
    a918:	08 95       	ret

0000a91a <TMR_SR_cmdGetMinimumFrequency>:
    a91a:	43 e0       	ldi	r20, 0x03	; 3
    a91c:	96 cf       	rjmp	.-212    	; 0xa84a <TMR_SR_cmdGetFrequencyHopTableOption>
    a91e:	08 95       	ret

0000a920 <TMR_SR_cmdGetGPIO>:
    a920:	ef 92       	push	r14
    a922:	ff 92       	push	r15
    a924:	0f 93       	push	r16
    a926:	1f 93       	push	r17
    a928:	cf 93       	push	r28
    a92a:	df 93       	push	r29
    a92c:	cd b7       	in	r28, 0x3d	; 61
    a92e:	de b7       	in	r29, 0x3e	; 62
    a930:	da 95       	dec	r29
    a932:	0f b6       	in	r0, 0x3f	; 63
    a934:	f8 94       	cli
    a936:	de bf       	out	0x3e, r29	; 62
    a938:	0f be       	out	0x3f, r0	; 63
    a93a:	cd bf       	out	0x3d, r28	; 61
    a93c:	7b 01       	movw	r14, r22
    a93e:	8a 01       	movw	r16, r20
    a940:	be 01       	movw	r22, r28
    a942:	6f 5f       	subi	r22, 0xFF	; 255
    a944:	7f 4f       	sbci	r23, 0xFF	; 255
    a946:	20 e0       	ldi	r18, 0x00	; 0
    a948:	31 e0       	ldi	r19, 0x01	; 1
    a94a:	fb 01       	movw	r30, r22
    a94c:	a9 01       	movw	r20, r18
    a94e:	11 92       	st	Z+, r1
    a950:	41 50       	subi	r20, 0x01	; 1
    a952:	50 40       	sbci	r21, 0x00	; 0
    a954:	e1 f7       	brne	.-8      	; 0xa94e <TMR_SR_cmdGetGPIO+0x2e>
    a956:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    a95a:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    a95e:	46 e6       	ldi	r20, 0x66	; 102
    a960:	4b 83       	std	Y+3, r20	; 0x03
    a962:	2e 5f       	subi	r18, 0xFE	; 254
    a964:	3f 4f       	sbci	r19, 0xFF	; 255
    a966:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    a96a:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    a96e:	21 e0       	ldi	r18, 0x01	; 1
    a970:	2c 83       	std	Y+4, r18	; 0x04
    a972:	2a 83       	std	Y+2, r18	; 0x02
    a974:	fc 01       	movw	r30, r24
    a976:	e0 52       	subi	r30, 0x20	; 32
    a978:	fe 4f       	sbci	r31, 0xFE	; 254
    a97a:	20 81       	ld	r18, Z
    a97c:	31 81       	ldd	r19, Z+1	; 0x01
    a97e:	42 81       	ldd	r20, Z+2	; 0x02
    a980:	53 81       	ldd	r21, Z+3	; 0x03
    a982:	0e 94 f1 35 	call	0x6be2	; 0x6be2 <TMR_SR_sendTimeout>
    a986:	61 15       	cp	r22, r1
    a988:	71 05       	cpc	r23, r1
    a98a:	81 05       	cpc	r24, r1
    a98c:	91 05       	cpc	r25, r1
    a98e:	09 f0       	breq	.+2      	; 0xa992 <TMR_SR_cmdGetGPIO+0x72>
    a990:	46 c0       	rjmp	.+140    	; 0xaa1e <TMR_SR_cmdGetGPIO+0xfe>
    a992:	8a 81       	ldd	r24, Y+2	; 0x02
    a994:	90 e0       	ldi	r25, 0x00	; 0
    a996:	01 97       	sbiw	r24, 0x01	; 1
    a998:	63 e0       	ldi	r22, 0x03	; 3
    a99a:	70 e0       	ldi	r23, 0x00	; 0
    a99c:	0e 94 9e 74 	call	0xe93c	; 0xe93c <__divmodhi4>
    a9a0:	f7 01       	movw	r30, r14
    a9a2:	50 81       	ld	r21, Z
    a9a4:	56 17       	cp	r21, r22
    a9a6:	08 f0       	brcs	.+2      	; 0xa9aa <TMR_SR_cmdGetGPIO+0x8a>
    a9a8:	56 2f       	mov	r21, r22
    a9aa:	86 e0       	ldi	r24, 0x06	; 6
    a9ac:	90 e0       	ldi	r25, 0x00	; 0
    a9ae:	2e c0       	rjmp	.+92     	; 0xaa0c <TMR_SR_cmdGetGPIO+0xec>
    a9b0:	e9 2f       	mov	r30, r25
    a9b2:	f0 e0       	ldi	r31, 0x00	; 0
    a9b4:	ee 0f       	add	r30, r30
    a9b6:	ff 1f       	adc	r31, r31
    a9b8:	ee 0f       	add	r30, r30
    a9ba:	ff 1f       	adc	r31, r31
    a9bc:	e0 0f       	add	r30, r16
    a9be:	f1 1f       	adc	r31, r17
    a9c0:	a1 e0       	ldi	r26, 0x01	; 1
    a9c2:	b0 e0       	ldi	r27, 0x00	; 0
    a9c4:	ac 0f       	add	r26, r28
    a9c6:	bd 1f       	adc	r27, r29
    a9c8:	a8 0f       	add	r26, r24
    a9ca:	b1 1d       	adc	r27, r1
    a9cc:	2c 91       	ld	r18, X
    a9ce:	20 83       	st	Z, r18
    a9d0:	32 e0       	ldi	r19, 0x02	; 2
    a9d2:	38 0f       	add	r19, r24
    a9d4:	21 e0       	ldi	r18, 0x01	; 1
    a9d6:	28 0f       	add	r18, r24
    a9d8:	a1 e0       	ldi	r26, 0x01	; 1
    a9da:	b0 e0       	ldi	r27, 0x00	; 0
    a9dc:	ac 0f       	add	r26, r28
    a9de:	bd 1f       	adc	r27, r29
    a9e0:	a2 0f       	add	r26, r18
    a9e2:	b1 1d       	adc	r27, r1
    a9e4:	4c 91       	ld	r20, X
    a9e6:	21 e0       	ldi	r18, 0x01	; 1
    a9e8:	41 30       	cpi	r20, 0x01	; 1
    a9ea:	09 f0       	breq	.+2      	; 0xa9ee <TMR_SR_cmdGetGPIO+0xce>
    a9ec:	20 e0       	ldi	r18, 0x00	; 0
    a9ee:	23 83       	std	Z+3, r18	; 0x03
    a9f0:	8d 5f       	subi	r24, 0xFD	; 253
    a9f2:	a1 e0       	ldi	r26, 0x01	; 1
    a9f4:	b0 e0       	ldi	r27, 0x00	; 0
    a9f6:	ac 0f       	add	r26, r28
    a9f8:	bd 1f       	adc	r27, r29
    a9fa:	a3 0f       	add	r26, r19
    a9fc:	b1 1d       	adc	r27, r1
    a9fe:	3c 91       	ld	r19, X
    aa00:	21 e0       	ldi	r18, 0x01	; 1
    aa02:	31 30       	cpi	r19, 0x01	; 1
    aa04:	09 f0       	breq	.+2      	; 0xaa08 <TMR_SR_cmdGetGPIO+0xe8>
    aa06:	20 e0       	ldi	r18, 0x00	; 0
    aa08:	21 83       	std	Z+1, r18	; 0x01
    aa0a:	9f 5f       	subi	r25, 0xFF	; 255
    aa0c:	95 17       	cp	r25, r21
    aa0e:	80 f2       	brcs	.-96     	; 0xa9b0 <TMR_SR_cmdGetGPIO+0x90>
    aa10:	f7 01       	movw	r30, r14
    aa12:	50 83       	st	Z, r21
    aa14:	40 e0       	ldi	r20, 0x00	; 0
    aa16:	30 e0       	ldi	r19, 0x00	; 0
    aa18:	20 e0       	ldi	r18, 0x00	; 0
    aa1a:	90 e0       	ldi	r25, 0x00	; 0
    aa1c:	03 c0       	rjmp	.+6      	; 0xaa24 <TMR_SR_cmdGetGPIO+0x104>
    aa1e:	46 2f       	mov	r20, r22
    aa20:	37 2f       	mov	r19, r23
    aa22:	28 2f       	mov	r18, r24
    aa24:	64 2f       	mov	r22, r20
    aa26:	73 2f       	mov	r23, r19
    aa28:	82 2f       	mov	r24, r18
    aa2a:	d3 95       	inc	r29
    aa2c:	0f b6       	in	r0, 0x3f	; 63
    aa2e:	f8 94       	cli
    aa30:	de bf       	out	0x3e, r29	; 62
    aa32:	0f be       	out	0x3f, r0	; 63
    aa34:	cd bf       	out	0x3d, r28	; 61
    aa36:	df 91       	pop	r29
    aa38:	cf 91       	pop	r28
    aa3a:	1f 91       	pop	r17
    aa3c:	0f 91       	pop	r16
    aa3e:	ff 90       	pop	r15
    aa40:	ef 90       	pop	r14
    aa42:	08 95       	ret

0000aa44 <TMR_SR_cmdGetGPIODirection>:
    aa44:	0f 93       	push	r16
    aa46:	1f 93       	push	r17
    aa48:	cf 93       	push	r28
    aa4a:	df 93       	push	r29
    aa4c:	cd b7       	in	r28, 0x3d	; 61
    aa4e:	de b7       	in	r29, 0x3e	; 62
    aa50:	da 95       	dec	r29
    aa52:	0f b6       	in	r0, 0x3f	; 63
    aa54:	f8 94       	cli
    aa56:	de bf       	out	0x3e, r29	; 62
    aa58:	0f be       	out	0x3f, r0	; 63
    aa5a:	cd bf       	out	0x3d, r28	; 61
    aa5c:	8a 01       	movw	r16, r20
    aa5e:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    aa62:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    aa66:	46 e9       	ldi	r20, 0x96	; 150
    aa68:	4b 83       	std	Y+3, r20	; 0x03
    aa6a:	2e 5f       	subi	r18, 0xFE	; 254
    aa6c:	3f 4f       	sbci	r19, 0xFF	; 255
    aa6e:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    aa72:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    aa76:	6c 83       	std	Y+4, r22	; 0x04
    aa78:	44 e0       	ldi	r20, 0x04	; 4
    aa7a:	be 01       	movw	r22, r28
    aa7c:	6f 5f       	subi	r22, 0xFF	; 255
    aa7e:	7f 4f       	sbci	r23, 0xFF	; 255
    aa80:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    aa84:	61 15       	cp	r22, r1
    aa86:	71 05       	cpc	r23, r1
    aa88:	81 05       	cpc	r24, r1
    aa8a:	91 05       	cpc	r25, r1
    aa8c:	61 f4       	brne	.+24     	; 0xaaa6 <TMR_SR_cmdGetGPIODirection+0x62>
    aa8e:	9f 81       	ldd	r25, Y+7	; 0x07
    aa90:	81 e0       	ldi	r24, 0x01	; 1
    aa92:	91 30       	cpi	r25, 0x01	; 1
    aa94:	09 f0       	breq	.+2      	; 0xaa98 <TMR_SR_cmdGetGPIODirection+0x54>
    aa96:	80 e0       	ldi	r24, 0x00	; 0
    aa98:	f8 01       	movw	r30, r16
    aa9a:	80 83       	st	Z, r24
    aa9c:	40 e0       	ldi	r20, 0x00	; 0
    aa9e:	30 e0       	ldi	r19, 0x00	; 0
    aaa0:	20 e0       	ldi	r18, 0x00	; 0
    aaa2:	90 e0       	ldi	r25, 0x00	; 0
    aaa4:	03 c0       	rjmp	.+6      	; 0xaaac <TMR_SR_cmdGetGPIODirection+0x68>
    aaa6:	46 2f       	mov	r20, r22
    aaa8:	37 2f       	mov	r19, r23
    aaaa:	28 2f       	mov	r18, r24
    aaac:	64 2f       	mov	r22, r20
    aaae:	73 2f       	mov	r23, r19
    aab0:	82 2f       	mov	r24, r18
    aab2:	d3 95       	inc	r29
    aab4:	0f b6       	in	r0, 0x3f	; 63
    aab6:	f8 94       	cli
    aab8:	de bf       	out	0x3e, r29	; 62
    aaba:	0f be       	out	0x3f, r0	; 63
    aabc:	cd bf       	out	0x3d, r28	; 61
    aabe:	df 91       	pop	r29
    aac0:	cf 91       	pop	r28
    aac2:	1f 91       	pop	r17
    aac4:	0f 91       	pop	r16
    aac6:	08 95       	ret

0000aac8 <TMR_SR_cmdSetGPIODirection>:
    aac8:	cf 93       	push	r28
    aaca:	df 93       	push	r29
    aacc:	cd b7       	in	r28, 0x3d	; 61
    aace:	de b7       	in	r29, 0x3e	; 62
    aad0:	da 95       	dec	r29
    aad2:	0f b6       	in	r0, 0x3f	; 63
    aad4:	f8 94       	cli
    aad6:	de bf       	out	0x3e, r29	; 62
    aad8:	0f be       	out	0x3f, r0	; 63
    aada:	cd bf       	out	0x3d, r28	; 61
    aadc:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    aae0:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    aae4:	56 e9       	ldi	r21, 0x96	; 150
    aae6:	5b 83       	std	Y+3, r21	; 0x03
    aae8:	51 e0       	ldi	r21, 0x01	; 1
    aaea:	5c 83       	std	Y+4, r21	; 0x04
    aaec:	6d 83       	std	Y+5, r22	; 0x05
    aaee:	4e 83       	std	Y+6, r20	; 0x06
    aaf0:	2b 5f       	subi	r18, 0xFB	; 251
    aaf2:	3f 4f       	sbci	r19, 0xFF	; 255
    aaf4:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    aaf8:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    aafc:	1f 82       	std	Y+7, r1	; 0x07
    aafe:	47 e0       	ldi	r20, 0x07	; 7
    ab00:	be 01       	movw	r22, r28
    ab02:	6f 5f       	subi	r22, 0xFF	; 255
    ab04:	7f 4f       	sbci	r23, 0xFF	; 255
    ab06:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    ab0a:	61 15       	cp	r22, r1
    ab0c:	71 05       	cpc	r23, r1
    ab0e:	81 05       	cpc	r24, r1
    ab10:	91 05       	cpc	r25, r1
    ab12:	29 f4       	brne	.+10     	; 0xab1e <TMR_SR_cmdSetGPIODirection+0x56>
    ab14:	40 e0       	ldi	r20, 0x00	; 0
    ab16:	30 e0       	ldi	r19, 0x00	; 0
    ab18:	20 e0       	ldi	r18, 0x00	; 0
    ab1a:	90 e0       	ldi	r25, 0x00	; 0
    ab1c:	03 c0       	rjmp	.+6      	; 0xab24 <TMR_SR_cmdSetGPIODirection+0x5c>
    ab1e:	46 2f       	mov	r20, r22
    ab20:	37 2f       	mov	r19, r23
    ab22:	28 2f       	mov	r18, r24
    ab24:	64 2f       	mov	r22, r20
    ab26:	73 2f       	mov	r23, r19
    ab28:	82 2f       	mov	r24, r18
    ab2a:	d3 95       	inc	r29
    ab2c:	0f b6       	in	r0, 0x3f	; 63
    ab2e:	f8 94       	cli
    ab30:	de bf       	out	0x3e, r29	; 62
    ab32:	0f be       	out	0x3f, r0	; 63
    ab34:	cd bf       	out	0x3d, r28	; 61
    ab36:	df 91       	pop	r29
    ab38:	cf 91       	pop	r28
    ab3a:	08 95       	ret

0000ab3c <TMR_SR_cmdGetProtocolList>:
    ab3c:	0f 93       	push	r16
    ab3e:	1f 93       	push	r17
    ab40:	cf 93       	push	r28
    ab42:	df 93       	push	r29
    ab44:	cd b7       	in	r28, 0x3d	; 61
    ab46:	de b7       	in	r29, 0x3e	; 62
    ab48:	da 95       	dec	r29
    ab4a:	0f b6       	in	r0, 0x3f	; 63
    ab4c:	f8 94       	cli
    ab4e:	de bf       	out	0x3e, r29	; 62
    ab50:	0f be       	out	0x3f, r0	; 63
    ab52:	cd bf       	out	0x3d, r28	; 61
    ab54:	8b 01       	movw	r16, r22
    ab56:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    ab5a:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    ab5e:	43 e6       	ldi	r20, 0x63	; 99
    ab60:	4b 83       	std	Y+3, r20	; 0x03
    ab62:	2e 5f       	subi	r18, 0xFE	; 254
    ab64:	3f 4f       	sbci	r19, 0xFF	; 255
    ab66:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    ab6a:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    ab6e:	21 e0       	ldi	r18, 0x01	; 1
    ab70:	2c 83       	std	Y+4, r18	; 0x04
    ab72:	44 e0       	ldi	r20, 0x04	; 4
    ab74:	be 01       	movw	r22, r28
    ab76:	6f 5f       	subi	r22, 0xFF	; 255
    ab78:	7f 4f       	sbci	r23, 0xFF	; 255
    ab7a:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    ab7e:	61 15       	cp	r22, r1
    ab80:	71 05       	cpc	r23, r1
    ab82:	81 05       	cpc	r24, r1
    ab84:	91 05       	cpc	r25, r1
    ab86:	91 f5       	brne	.+100    	; 0xabec <TMR_SR_cmdGetProtocolList+0xb0>
    ab88:	d8 01       	movw	r26, r16
    ab8a:	13 96       	adiw	r26, 0x03	; 3
    ab8c:	1c 92       	st	X, r1
    ab8e:	40 e0       	ldi	r20, 0x00	; 0
    ab90:	20 c0       	rjmp	.+64     	; 0xabd2 <TMR_SR_cmdGetProtocolList+0x96>
    ab92:	d8 01       	movw	r26, r16
    ab94:	13 96       	adiw	r26, 0x03	; 3
    ab96:	ec 91       	ld	r30, X
    ab98:	13 97       	sbiw	r26, 0x03	; 3
    ab9a:	81 e0       	ldi	r24, 0x01	; 1
    ab9c:	8e 0f       	add	r24, r30
    ab9e:	13 96       	adiw	r26, 0x03	; 3
    aba0:	8c 93       	st	X, r24
    aba2:	13 97       	sbiw	r26, 0x03	; 3
    aba4:	12 96       	adiw	r26, 0x02	; 2
    aba6:	9c 91       	ld	r25, X
    aba8:	12 97       	sbiw	r26, 0x02	; 2
    abaa:	98 17       	cp	r25, r24
    abac:	88 f0       	brcs	.+34     	; 0xabd0 <TMR_SR_cmdGetProtocolList+0x94>
    abae:	6d 91       	ld	r22, X+
    abb0:	7c 91       	ld	r23, X
    abb2:	e8 2f       	mov	r30, r24
    abb4:	f0 e0       	ldi	r31, 0x00	; 0
    abb6:	31 97       	sbiw	r30, 0x01	; 1
    abb8:	e6 0f       	add	r30, r22
    abba:	f7 1f       	adc	r31, r23
    abbc:	29 5f       	subi	r18, 0xF9	; 249
    abbe:	3f 4f       	sbci	r19, 0xFF	; 255
    abc0:	a1 e0       	ldi	r26, 0x01	; 1
    abc2:	b0 e0       	ldi	r27, 0x00	; 0
    abc4:	ac 0f       	add	r26, r28
    abc6:	bd 1f       	adc	r27, r29
    abc8:	a2 0f       	add	r26, r18
    abca:	b3 1f       	adc	r27, r19
    abcc:	8c 91       	ld	r24, X
    abce:	80 83       	st	Z, r24
    abd0:	4e 5f       	subi	r20, 0xFE	; 254
    abd2:	24 2f       	mov	r18, r20
    abd4:	30 e0       	ldi	r19, 0x00	; 0
    abd6:	8a 81       	ldd	r24, Y+2	; 0x02
    abd8:	90 e0       	ldi	r25, 0x00	; 0
    abda:	01 97       	sbiw	r24, 0x01	; 1
    abdc:	28 17       	cp	r18, r24
    abde:	39 07       	cpc	r19, r25
    abe0:	c4 f2       	brlt	.-80     	; 0xab92 <TMR_SR_cmdGetProtocolList+0x56>
    abe2:	40 e0       	ldi	r20, 0x00	; 0
    abe4:	30 e0       	ldi	r19, 0x00	; 0
    abe6:	20 e0       	ldi	r18, 0x00	; 0
    abe8:	90 e0       	ldi	r25, 0x00	; 0
    abea:	03 c0       	rjmp	.+6      	; 0xabf2 <TMR_SR_cmdGetProtocolList+0xb6>
    abec:	46 2f       	mov	r20, r22
    abee:	37 2f       	mov	r19, r23
    abf0:	28 2f       	mov	r18, r24
    abf2:	64 2f       	mov	r22, r20
    abf4:	73 2f       	mov	r23, r19
    abf6:	82 2f       	mov	r24, r18
    abf8:	d3 95       	inc	r29
    abfa:	0f b6       	in	r0, 0x3f	; 63
    abfc:	f8 94       	cli
    abfe:	de bf       	out	0x3e, r29	; 62
    ac00:	0f be       	out	0x3f, r0	; 63
    ac02:	cd bf       	out	0x3d, r28	; 61
    ac04:	df 91       	pop	r29
    ac06:	cf 91       	pop	r28
    ac08:	1f 91       	pop	r17
    ac0a:	0f 91       	pop	r16
    ac0c:	08 95       	ret

0000ac0e <TMR_SR_cmdGetCurrentProtocol>:
    ac0e:	0f 93       	push	r16
    ac10:	1f 93       	push	r17
    ac12:	cf 93       	push	r28
    ac14:	df 93       	push	r29
    ac16:	cd b7       	in	r28, 0x3d	; 61
    ac18:	de b7       	in	r29, 0x3e	; 62
    ac1a:	da 95       	dec	r29
    ac1c:	0f b6       	in	r0, 0x3f	; 63
    ac1e:	f8 94       	cli
    ac20:	de bf       	out	0x3e, r29	; 62
    ac22:	0f be       	out	0x3f, r0	; 63
    ac24:	cd bf       	out	0x3d, r28	; 61
    ac26:	8b 01       	movw	r16, r22
    ac28:	43 e6       	ldi	r20, 0x63	; 99
    ac2a:	be 01       	movw	r22, r28
    ac2c:	6f 5f       	subi	r22, 0xFF	; 255
    ac2e:	7f 4f       	sbci	r23, 0xFF	; 255
    ac30:	0e 94 9b 36 	call	0x6d36	; 0x6d36 <TMR_SR_callSendCmd>
    ac34:	61 15       	cp	r22, r1
    ac36:	71 05       	cpc	r23, r1
    ac38:	81 05       	cpc	r24, r1
    ac3a:	91 05       	cpc	r25, r1
    ac3c:	41 f4       	brne	.+16     	; 0xac4e <TMR_SR_cmdGetCurrentProtocol+0x40>
    ac3e:	8f 81       	ldd	r24, Y+7	; 0x07
    ac40:	f8 01       	movw	r30, r16
    ac42:	80 83       	st	Z, r24
    ac44:	40 e0       	ldi	r20, 0x00	; 0
    ac46:	30 e0       	ldi	r19, 0x00	; 0
    ac48:	20 e0       	ldi	r18, 0x00	; 0
    ac4a:	90 e0       	ldi	r25, 0x00	; 0
    ac4c:	03 c0       	rjmp	.+6      	; 0xac54 <TMR_SR_cmdGetCurrentProtocol+0x46>
    ac4e:	46 2f       	mov	r20, r22
    ac50:	37 2f       	mov	r19, r23
    ac52:	28 2f       	mov	r18, r24
    ac54:	64 2f       	mov	r22, r20
    ac56:	73 2f       	mov	r23, r19
    ac58:	82 2f       	mov	r24, r18
    ac5a:	d3 95       	inc	r29
    ac5c:	0f b6       	in	r0, 0x3f	; 63
    ac5e:	f8 94       	cli
    ac60:	de bf       	out	0x3e, r29	; 62
    ac62:	0f be       	out	0x3f, r0	; 63
    ac64:	cd bf       	out	0x3d, r28	; 61
    ac66:	df 91       	pop	r29
    ac68:	cf 91       	pop	r28
    ac6a:	1f 91       	pop	r17
    ac6c:	0f 91       	pop	r16
    ac6e:	08 95       	ret

0000ac70 <TMR_SR_cmdGetRegion>:
    ac70:	0f 93       	push	r16
    ac72:	1f 93       	push	r17
    ac74:	cf 93       	push	r28
    ac76:	df 93       	push	r29
    ac78:	cd b7       	in	r28, 0x3d	; 61
    ac7a:	de b7       	in	r29, 0x3e	; 62
    ac7c:	da 95       	dec	r29
    ac7e:	0f b6       	in	r0, 0x3f	; 63
    ac80:	f8 94       	cli
    ac82:	de bf       	out	0x3e, r29	; 62
    ac84:	0f be       	out	0x3f, r0	; 63
    ac86:	cd bf       	out	0x3d, r28	; 61
    ac88:	8b 01       	movw	r16, r22
    ac8a:	47 e6       	ldi	r20, 0x67	; 103
    ac8c:	be 01       	movw	r22, r28
    ac8e:	6f 5f       	subi	r22, 0xFF	; 255
    ac90:	7f 4f       	sbci	r23, 0xFF	; 255
    ac92:	0e 94 9b 36 	call	0x6d36	; 0x6d36 <TMR_SR_callSendCmd>
    ac96:	61 15       	cp	r22, r1
    ac98:	71 05       	cpc	r23, r1
    ac9a:	81 05       	cpc	r24, r1
    ac9c:	91 05       	cpc	r25, r1
    ac9e:	41 f4       	brne	.+16     	; 0xacb0 <TMR_SR_cmdGetRegion+0x40>
    aca0:	8e 81       	ldd	r24, Y+6	; 0x06
    aca2:	f8 01       	movw	r30, r16
    aca4:	80 83       	st	Z, r24
    aca6:	40 e0       	ldi	r20, 0x00	; 0
    aca8:	30 e0       	ldi	r19, 0x00	; 0
    acaa:	20 e0       	ldi	r18, 0x00	; 0
    acac:	90 e0       	ldi	r25, 0x00	; 0
    acae:	03 c0       	rjmp	.+6      	; 0xacb6 <TMR_SR_cmdGetRegion+0x46>
    acb0:	46 2f       	mov	r20, r22
    acb2:	37 2f       	mov	r19, r23
    acb4:	28 2f       	mov	r18, r24
    acb6:	64 2f       	mov	r22, r20
    acb8:	73 2f       	mov	r23, r19
    acba:	82 2f       	mov	r24, r18
    acbc:	d3 95       	inc	r29
    acbe:	0f b6       	in	r0, 0x3f	; 63
    acc0:	f8 94       	cli
    acc2:	de bf       	out	0x3e, r29	; 62
    acc4:	0f be       	out	0x3f, r0	; 63
    acc6:	cd bf       	out	0x3d, r28	; 61
    acc8:	df 91       	pop	r29
    acca:	cf 91       	pop	r28
    accc:	1f 91       	pop	r17
    acce:	0f 91       	pop	r16
    acd0:	08 95       	ret

0000acd2 <TMR_SR_cmdGetRegionConfiguration>:
    acd2:	ef 92       	push	r14
    acd4:	ff 92       	push	r15
    acd6:	1f 93       	push	r17
    acd8:	cf 93       	push	r28
    acda:	df 93       	push	r29
    acdc:	cd b7       	in	r28, 0x3d	; 61
    acde:	de b7       	in	r29, 0x3e	; 62
    ace0:	da 95       	dec	r29
    ace2:	0f b6       	in	r0, 0x3f	; 63
    ace4:	f8 94       	cli
    ace6:	de bf       	out	0x3e, r29	; 62
    ace8:	0f be       	out	0x3f, r0	; 63
    acea:	cd bf       	out	0x3d, r28	; 61
    acec:	16 2f       	mov	r17, r22
    acee:	7a 01       	movw	r14, r20
    acf0:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    acf4:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    acf8:	47 e6       	ldi	r20, 0x67	; 103
    acfa:	4b 83       	std	Y+3, r20	; 0x03
    acfc:	41 e0       	ldi	r20, 0x01	; 1
    acfe:	4c 83       	std	Y+4, r20	; 0x04
    ad00:	2d 5f       	subi	r18, 0xFD	; 253
    ad02:	3f 4f       	sbci	r19, 0xFF	; 255
    ad04:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    ad08:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    ad0c:	6d 83       	std	Y+5, r22	; 0x05
    ad0e:	45 e0       	ldi	r20, 0x05	; 5
    ad10:	be 01       	movw	r22, r28
    ad12:	6f 5f       	subi	r22, 0xFF	; 255
    ad14:	7f 4f       	sbci	r23, 0xFF	; 255
    ad16:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    ad1a:	61 15       	cp	r22, r1
    ad1c:	71 05       	cpc	r23, r1
    ad1e:	81 05       	cpc	r24, r1
    ad20:	91 05       	cpc	r25, r1
    ad22:	b1 f5       	brne	.+108    	; 0xad90 <TMR_SR_cmdGetRegionConfiguration+0xbe>
    ad24:	89 85       	ldd	r24, Y+9	; 0x09
    ad26:	11 34       	cpi	r17, 0x41	; 65
    ad28:	a1 f0       	breq	.+40     	; 0xad52 <TMR_SR_cmdGetRegionConfiguration+0x80>
    ad2a:	18 f4       	brcc	.+6      	; 0xad32 <TMR_SR_cmdGetRegionConfiguration+0x60>
    ad2c:	10 34       	cpi	r17, 0x40	; 64
    ad2e:	31 f0       	breq	.+12     	; 0xad3c <TMR_SR_cmdGetRegionConfiguration+0x6a>
    ad30:	33 c0       	rjmp	.+102    	; 0xad98 <TMR_SR_cmdGetRegionConfiguration+0xc6>
    ad32:	12 34       	cpi	r17, 0x42	; 66
    ad34:	a9 f0       	breq	.+42     	; 0xad60 <TMR_SR_cmdGetRegionConfiguration+0x8e>
    ad36:	13 34       	cpi	r17, 0x43	; 67
    ad38:	f1 f0       	breq	.+60     	; 0xad76 <TMR_SR_cmdGetRegionConfiguration+0xa4>
    ad3a:	2e c0       	rjmp	.+92     	; 0xad98 <TMR_SR_cmdGetRegionConfiguration+0xc6>
    ad3c:	91 e0       	ldi	r25, 0x01	; 1
    ad3e:	81 30       	cpi	r24, 0x01	; 1
    ad40:	09 f0       	breq	.+2      	; 0xad44 <TMR_SR_cmdGetRegionConfiguration+0x72>
    ad42:	90 e0       	ldi	r25, 0x00	; 0
    ad44:	f7 01       	movw	r30, r14
    ad46:	90 83       	st	Z, r25
    ad48:	40 e0       	ldi	r20, 0x00	; 0
    ad4a:	30 e0       	ldi	r19, 0x00	; 0
    ad4c:	20 e0       	ldi	r18, 0x00	; 0
    ad4e:	90 e0       	ldi	r25, 0x00	; 0
    ad50:	27 c0       	rjmp	.+78     	; 0xada0 <TMR_SR_cmdGetRegionConfiguration+0xce>
    ad52:	f7 01       	movw	r30, r14
    ad54:	80 83       	st	Z, r24
    ad56:	40 e0       	ldi	r20, 0x00	; 0
    ad58:	30 e0       	ldi	r19, 0x00	; 0
    ad5a:	20 e0       	ldi	r18, 0x00	; 0
    ad5c:	90 e0       	ldi	r25, 0x00	; 0
    ad5e:	20 c0       	rjmp	.+64     	; 0xada0 <TMR_SR_cmdGetRegionConfiguration+0xce>
    ad60:	91 e0       	ldi	r25, 0x01	; 1
    ad62:	81 30       	cpi	r24, 0x01	; 1
    ad64:	09 f0       	breq	.+2      	; 0xad68 <TMR_SR_cmdGetRegionConfiguration+0x96>
    ad66:	90 e0       	ldi	r25, 0x00	; 0
    ad68:	f7 01       	movw	r30, r14
    ad6a:	90 83       	st	Z, r25
    ad6c:	40 e0       	ldi	r20, 0x00	; 0
    ad6e:	30 e0       	ldi	r19, 0x00	; 0
    ad70:	20 e0       	ldi	r18, 0x00	; 0
    ad72:	90 e0       	ldi	r25, 0x00	; 0
    ad74:	15 c0       	rjmp	.+42     	; 0xada0 <TMR_SR_cmdGetRegionConfiguration+0xce>
    ad76:	90 e0       	ldi	r25, 0x00	; 0
    ad78:	98 2f       	mov	r25, r24
    ad7a:	88 27       	eor	r24, r24
    ad7c:	2a 85       	ldd	r18, Y+10	; 0x0a
    ad7e:	82 2b       	or	r24, r18
    ad80:	f7 01       	movw	r30, r14
    ad82:	91 83       	std	Z+1, r25	; 0x01
    ad84:	80 83       	st	Z, r24
    ad86:	40 e0       	ldi	r20, 0x00	; 0
    ad88:	30 e0       	ldi	r19, 0x00	; 0
    ad8a:	20 e0       	ldi	r18, 0x00	; 0
    ad8c:	90 e0       	ldi	r25, 0x00	; 0
    ad8e:	08 c0       	rjmp	.+16     	; 0xada0 <TMR_SR_cmdGetRegionConfiguration+0xce>
    ad90:	46 2f       	mov	r20, r22
    ad92:	37 2f       	mov	r19, r23
    ad94:	28 2f       	mov	r18, r24
    ad96:	04 c0       	rjmp	.+8      	; 0xada0 <TMR_SR_cmdGetRegionConfiguration+0xce>
    ad98:	49 e0       	ldi	r20, 0x09	; 9
    ad9a:	30 e0       	ldi	r19, 0x00	; 0
    ad9c:	20 e0       	ldi	r18, 0x00	; 0
    ad9e:	93 e0       	ldi	r25, 0x03	; 3
    ada0:	64 2f       	mov	r22, r20
    ada2:	73 2f       	mov	r23, r19
    ada4:	82 2f       	mov	r24, r18
    ada6:	d3 95       	inc	r29
    ada8:	0f b6       	in	r0, 0x3f	; 63
    adaa:	f8 94       	cli
    adac:	de bf       	out	0x3e, r29	; 62
    adae:	0f be       	out	0x3f, r0	; 63
    adb0:	cd bf       	out	0x3d, r28	; 61
    adb2:	df 91       	pop	r29
    adb4:	cf 91       	pop	r28
    adb6:	1f 91       	pop	r17
    adb8:	ff 90       	pop	r15
    adba:	ef 90       	pop	r14
    adbc:	08 95       	ret

0000adbe <TMR_SR_cmdGetPowerMode>:
    adbe:	0f 93       	push	r16
    adc0:	1f 93       	push	r17
    adc2:	cf 93       	push	r28
    adc4:	df 93       	push	r29
    adc6:	cd b7       	in	r28, 0x3d	; 61
    adc8:	de b7       	in	r29, 0x3e	; 62
    adca:	da 95       	dec	r29
    adcc:	0f b6       	in	r0, 0x3f	; 63
    adce:	f8 94       	cli
    add0:	de bf       	out	0x3e, r29	; 62
    add2:	0f be       	out	0x3f, r0	; 63
    add4:	cd bf       	out	0x3d, r28	; 61
    add6:	8b 01       	movw	r16, r22
    add8:	48 e6       	ldi	r20, 0x68	; 104
    adda:	be 01       	movw	r22, r28
    addc:	6f 5f       	subi	r22, 0xFF	; 255
    adde:	7f 4f       	sbci	r23, 0xFF	; 255
    ade0:	0e 94 9b 36 	call	0x6d36	; 0x6d36 <TMR_SR_callSendCmd>
    ade4:	61 15       	cp	r22, r1
    ade6:	71 05       	cpc	r23, r1
    ade8:	81 05       	cpc	r24, r1
    adea:	91 05       	cpc	r25, r1
    adec:	41 f4       	brne	.+16     	; 0xadfe <TMR_SR_cmdGetPowerMode+0x40>
    adee:	8e 81       	ldd	r24, Y+6	; 0x06
    adf0:	f8 01       	movw	r30, r16
    adf2:	80 83       	st	Z, r24
    adf4:	40 e0       	ldi	r20, 0x00	; 0
    adf6:	30 e0       	ldi	r19, 0x00	; 0
    adf8:	20 e0       	ldi	r18, 0x00	; 0
    adfa:	90 e0       	ldi	r25, 0x00	; 0
    adfc:	03 c0       	rjmp	.+6      	; 0xae04 <TMR_SR_cmdGetPowerMode+0x46>
    adfe:	46 2f       	mov	r20, r22
    ae00:	37 2f       	mov	r19, r23
    ae02:	28 2f       	mov	r18, r24
    ae04:	64 2f       	mov	r22, r20
    ae06:	73 2f       	mov	r23, r19
    ae08:	82 2f       	mov	r24, r18
    ae0a:	d3 95       	inc	r29
    ae0c:	0f b6       	in	r0, 0x3f	; 63
    ae0e:	f8 94       	cli
    ae10:	de bf       	out	0x3e, r29	; 62
    ae12:	0f be       	out	0x3f, r0	; 63
    ae14:	cd bf       	out	0x3d, r28	; 61
    ae16:	df 91       	pop	r29
    ae18:	cf 91       	pop	r28
    ae1a:	1f 91       	pop	r17
    ae1c:	0f 91       	pop	r16
    ae1e:	08 95       	ret

0000ae20 <TMR_SR_cmdGetUserMode>:
    ae20:	0f 93       	push	r16
    ae22:	1f 93       	push	r17
    ae24:	cf 93       	push	r28
    ae26:	df 93       	push	r29
    ae28:	cd b7       	in	r28, 0x3d	; 61
    ae2a:	de b7       	in	r29, 0x3e	; 62
    ae2c:	da 95       	dec	r29
    ae2e:	0f b6       	in	r0, 0x3f	; 63
    ae30:	f8 94       	cli
    ae32:	de bf       	out	0x3e, r29	; 62
    ae34:	0f be       	out	0x3f, r0	; 63
    ae36:	cd bf       	out	0x3d, r28	; 61
    ae38:	8b 01       	movw	r16, r22
    ae3a:	49 e6       	ldi	r20, 0x69	; 105
    ae3c:	be 01       	movw	r22, r28
    ae3e:	6f 5f       	subi	r22, 0xFF	; 255
    ae40:	7f 4f       	sbci	r23, 0xFF	; 255
    ae42:	0e 94 9b 36 	call	0x6d36	; 0x6d36 <TMR_SR_callSendCmd>
    ae46:	61 15       	cp	r22, r1
    ae48:	71 05       	cpc	r23, r1
    ae4a:	81 05       	cpc	r24, r1
    ae4c:	91 05       	cpc	r25, r1
    ae4e:	41 f4       	brne	.+16     	; 0xae60 <TMR_SR_cmdGetUserMode+0x40>
    ae50:	8e 81       	ldd	r24, Y+6	; 0x06
    ae52:	f8 01       	movw	r30, r16
    ae54:	80 83       	st	Z, r24
    ae56:	40 e0       	ldi	r20, 0x00	; 0
    ae58:	30 e0       	ldi	r19, 0x00	; 0
    ae5a:	20 e0       	ldi	r18, 0x00	; 0
    ae5c:	90 e0       	ldi	r25, 0x00	; 0
    ae5e:	03 c0       	rjmp	.+6      	; 0xae66 <TMR_SR_cmdGetUserMode+0x46>
    ae60:	46 2f       	mov	r20, r22
    ae62:	37 2f       	mov	r19, r23
    ae64:	28 2f       	mov	r18, r24
    ae66:	64 2f       	mov	r22, r20
    ae68:	73 2f       	mov	r23, r19
    ae6a:	82 2f       	mov	r24, r18
    ae6c:	d3 95       	inc	r29
    ae6e:	0f b6       	in	r0, 0x3f	; 63
    ae70:	f8 94       	cli
    ae72:	de bf       	out	0x3e, r29	; 62
    ae74:	0f be       	out	0x3f, r0	; 63
    ae76:	cd bf       	out	0x3d, r28	; 61
    ae78:	df 91       	pop	r29
    ae7a:	cf 91       	pop	r28
    ae7c:	1f 91       	pop	r17
    ae7e:	0f 91       	pop	r16
    ae80:	08 95       	ret

0000ae82 <TMR_SR_cmdGetReaderConfiguration>:
    ae82:	ef 92       	push	r14
    ae84:	ff 92       	push	r15
    ae86:	1f 93       	push	r17
    ae88:	cf 93       	push	r28
    ae8a:	df 93       	push	r29
    ae8c:	cd b7       	in	r28, 0x3d	; 61
    ae8e:	de b7       	in	r29, 0x3e	; 62
    ae90:	da 95       	dec	r29
    ae92:	0f b6       	in	r0, 0x3f	; 63
    ae94:	f8 94       	cli
    ae96:	de bf       	out	0x3e, r29	; 62
    ae98:	0f be       	out	0x3f, r0	; 63
    ae9a:	cd bf       	out	0x3d, r28	; 61
    ae9c:	16 2f       	mov	r17, r22
    ae9e:	7a 01       	movw	r14, r20
    aea0:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    aea4:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    aea8:	4a e6       	ldi	r20, 0x6A	; 106
    aeaa:	4b 83       	std	Y+3, r20	; 0x03
    aeac:	41 e0       	ldi	r20, 0x01	; 1
    aeae:	4c 83       	std	Y+4, r20	; 0x04
    aeb0:	2d 5f       	subi	r18, 0xFD	; 253
    aeb2:	3f 4f       	sbci	r19, 0xFF	; 255
    aeb4:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    aeb8:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    aebc:	6d 83       	std	Y+5, r22	; 0x05
    aebe:	45 e0       	ldi	r20, 0x05	; 5
    aec0:	be 01       	movw	r22, r28
    aec2:	6f 5f       	subi	r22, 0xFF	; 255
    aec4:	7f 4f       	sbci	r23, 0xFF	; 255
    aec6:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    aeca:	61 15       	cp	r22, r1
    aecc:	71 05       	cpc	r23, r1
    aece:	81 05       	cpc	r24, r1
    aed0:	91 05       	cpc	r25, r1
    aed2:	09 f0       	breq	.+2      	; 0xaed6 <TMR_SR_cmdGetReaderConfiguration+0x54>
    aed4:	59 c0       	rjmp	.+178    	; 0xaf88 <TMR_SR_cmdGetReaderConfiguration+0x106>
    aed6:	28 85       	ldd	r18, Y+8	; 0x08
    aed8:	81 2f       	mov	r24, r17
    aeda:	90 e0       	ldi	r25, 0x00	; 0
    aedc:	82 32       	cpi	r24, 0x22	; 34
    aede:	91 05       	cpc	r25, r1
    aee0:	08 f0       	brcs	.+2      	; 0xaee4 <TMR_SR_cmdGetReaderConfiguration+0x62>
    aee2:	56 c0       	rjmp	.+172    	; 0xaf90 <TMR_SR_cmdGetReaderConfiguration+0x10e>
    aee4:	fc 01       	movw	r30, r24
    aee6:	e3 5b       	subi	r30, 0xB3	; 179
    aee8:	fd 4f       	sbci	r31, 0xFD	; 253
    aeea:	0c 94 d3 74 	jmp	0xe9a6	; 0xe9a6 <__tablejump2__>
    aeee:	f7 01       	movw	r30, r14
    aef0:	20 83       	st	Z, r18
    aef2:	40 e0       	ldi	r20, 0x00	; 0
    aef4:	30 e0       	ldi	r19, 0x00	; 0
    aef6:	20 e0       	ldi	r18, 0x00	; 0
    aef8:	90 e0       	ldi	r25, 0x00	; 0
    aefa:	4e c0       	rjmp	.+156    	; 0xaf98 <TMR_SR_cmdGetReaderConfiguration+0x116>
    aefc:	81 e0       	ldi	r24, 0x01	; 1
    aefe:	21 11       	cpse	r18, r1
    af00:	80 e0       	ldi	r24, 0x00	; 0
    af02:	f7 01       	movw	r30, r14
    af04:	80 83       	st	Z, r24
    af06:	40 e0       	ldi	r20, 0x00	; 0
    af08:	30 e0       	ldi	r19, 0x00	; 0
    af0a:	20 e0       	ldi	r18, 0x00	; 0
    af0c:	90 e0       	ldi	r25, 0x00	; 0
    af0e:	44 c0       	rjmp	.+136    	; 0xaf98 <TMR_SR_cmdGetReaderConfiguration+0x116>
    af10:	81 e0       	ldi	r24, 0x01	; 1
    af12:	21 30       	cpi	r18, 0x01	; 1
    af14:	09 f0       	breq	.+2      	; 0xaf18 <TMR_SR_cmdGetReaderConfiguration+0x96>
    af16:	80 e0       	ldi	r24, 0x00	; 0
    af18:	f7 01       	movw	r30, r14
    af1a:	80 83       	st	Z, r24
    af1c:	40 e0       	ldi	r20, 0x00	; 0
    af1e:	30 e0       	ldi	r19, 0x00	; 0
    af20:	20 e0       	ldi	r18, 0x00	; 0
    af22:	90 e0       	ldi	r25, 0x00	; 0
    af24:	39 c0       	rjmp	.+114    	; 0xaf98 <TMR_SR_cmdGetReaderConfiguration+0x116>
    af26:	f7 01       	movw	r30, r14
    af28:	20 83       	st	Z, r18
    af2a:	40 e0       	ldi	r20, 0x00	; 0
    af2c:	30 e0       	ldi	r19, 0x00	; 0
    af2e:	20 e0       	ldi	r18, 0x00	; 0
    af30:	90 e0       	ldi	r25, 0x00	; 0
    af32:	32 c0       	rjmp	.+100    	; 0xaf98 <TMR_SR_cmdGetReaderConfiguration+0x116>
    af34:	82 2f       	mov	r24, r18
    af36:	90 e0       	ldi	r25, 0x00	; 0
    af38:	a0 e0       	ldi	r26, 0x00	; 0
    af3a:	b0 e0       	ldi	r27, 0x00	; 0
    af3c:	f7 01       	movw	r30, r14
    af3e:	80 83       	st	Z, r24
    af40:	91 83       	std	Z+1, r25	; 0x01
    af42:	a2 83       	std	Z+2, r26	; 0x02
    af44:	b3 83       	std	Z+3, r27	; 0x03
    af46:	40 e0       	ldi	r20, 0x00	; 0
    af48:	30 e0       	ldi	r19, 0x00	; 0
    af4a:	20 e0       	ldi	r18, 0x00	; 0
    af4c:	90 e0       	ldi	r25, 0x00	; 0
    af4e:	24 c0       	rjmp	.+72     	; 0xaf98 <TMR_SR_cmdGetReaderConfiguration+0x116>
    af50:	82 2f       	mov	r24, r18
    af52:	90 e0       	ldi	r25, 0x00	; 0
    af54:	98 2f       	mov	r25, r24
    af56:	88 27       	eor	r24, r24
    af58:	29 85       	ldd	r18, Y+9	; 0x09
    af5a:	82 2b       	or	r24, r18
    af5c:	f7 01       	movw	r30, r14
    af5e:	91 83       	std	Z+1, r25	; 0x01
    af60:	80 83       	st	Z, r24
    af62:	40 e0       	ldi	r20, 0x00	; 0
    af64:	30 e0       	ldi	r19, 0x00	; 0
    af66:	20 e0       	ldi	r18, 0x00	; 0
    af68:	90 e0       	ldi	r25, 0x00	; 0
    af6a:	16 c0       	rjmp	.+44     	; 0xaf98 <TMR_SR_cmdGetReaderConfiguration+0x116>
    af6c:	82 2f       	mov	r24, r18
    af6e:	90 e0       	ldi	r25, 0x00	; 0
    af70:	98 2f       	mov	r25, r24
    af72:	88 27       	eor	r24, r24
    af74:	29 85       	ldd	r18, Y+9	; 0x09
    af76:	82 2b       	or	r24, r18
    af78:	f7 01       	movw	r30, r14
    af7a:	91 83       	std	Z+1, r25	; 0x01
    af7c:	80 83       	st	Z, r24
    af7e:	40 e0       	ldi	r20, 0x00	; 0
    af80:	30 e0       	ldi	r19, 0x00	; 0
    af82:	20 e0       	ldi	r18, 0x00	; 0
    af84:	90 e0       	ldi	r25, 0x00	; 0
    af86:	08 c0       	rjmp	.+16     	; 0xaf98 <TMR_SR_cmdGetReaderConfiguration+0x116>
    af88:	46 2f       	mov	r20, r22
    af8a:	37 2f       	mov	r19, r23
    af8c:	28 2f       	mov	r18, r24
    af8e:	04 c0       	rjmp	.+8      	; 0xaf98 <TMR_SR_cmdGetReaderConfiguration+0x116>
    af90:	49 e0       	ldi	r20, 0x09	; 9
    af92:	30 e0       	ldi	r19, 0x00	; 0
    af94:	20 e0       	ldi	r18, 0x00	; 0
    af96:	93 e0       	ldi	r25, 0x03	; 3
    af98:	64 2f       	mov	r22, r20
    af9a:	73 2f       	mov	r23, r19
    af9c:	82 2f       	mov	r24, r18
    af9e:	d3 95       	inc	r29
    afa0:	0f b6       	in	r0, 0x3f	; 63
    afa2:	f8 94       	cli
    afa4:	de bf       	out	0x3e, r29	; 62
    afa6:	0f be       	out	0x3f, r0	; 63
    afa8:	cd bf       	out	0x3d, r28	; 61
    afaa:	df 91       	pop	r29
    afac:	cf 91       	pop	r28
    afae:	1f 91       	pop	r17
    afb0:	ff 90       	pop	r15
    afb2:	ef 90       	pop	r14
    afb4:	08 95       	ret

0000afb6 <TMR_SR_cmdGetProtocolConfiguration>:
    afb6:	ef 92       	push	r14
    afb8:	ff 92       	push	r15
    afba:	0f 93       	push	r16
    afbc:	1f 93       	push	r17
    afbe:	cf 93       	push	r28
    afc0:	df 93       	push	r29
    afc2:	cd b7       	in	r28, 0x3d	; 61
    afc4:	de b7       	in	r29, 0x3e	; 62
    afc6:	c8 50       	subi	r28, 0x08	; 8
    afc8:	d1 40       	sbci	r29, 0x01	; 1
    afca:	0f b6       	in	r0, 0x3f	; 63
    afcc:	f8 94       	cli
    afce:	de bf       	out	0x3e, r29	; 62
    afd0:	0f be       	out	0x3f, r0	; 63
    afd2:	cd bf       	out	0x3d, r28	; 61
    afd4:	79 01       	movw	r14, r18
    afd6:	a0 91 57 02 	lds	r26, 0x0257	; 0x800257 <totalMsgIdx>
    afda:	b0 91 58 02 	lds	r27, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    afde:	3b e6       	ldi	r19, 0x6B	; 107
    afe0:	3b 83       	std	Y+3, r19	; 0x03
    afe2:	12 96       	adiw	r26, 0x02	; 2
    afe4:	b0 93 58 02 	sts	0x0258, r27	; 0x800258 <totalMsgIdx+0x1>
    afe8:	a0 93 57 02 	sts	0x0257, r26	; 0x800257 <totalMsgIdx>
    afec:	6c 83       	std	Y+4, r22	; 0x04
    afee:	14 2f       	mov	r17, r20
    aff0:	4a 30       	cpi	r20, 0x0A	; 10
    aff2:	91 f0       	breq	.+36     	; 0xb018 <TMR_SR_cmdGetProtocolConfiguration+0x62>
    aff4:	28 f4       	brcc	.+10     	; 0xb000 <TMR_SR_cmdGetProtocolConfiguration+0x4a>
    aff6:	45 30       	cpi	r20, 0x05	; 5
    aff8:	59 f0       	breq	.+22     	; 0xb010 <TMR_SR_cmdGetProtocolConfiguration+0x5a>
    affa:	49 30       	cpi	r20, 0x09	; 9
    affc:	59 f0       	breq	.+22     	; 0xb014 <TMR_SR_cmdGetProtocolConfiguration+0x5e>
    affe:	42 c2       	rjmp	.+1156   	; 0xb484 <TMR_SR_cmdGetProtocolConfiguration+0x4ce>
    b000:	44 31       	cpi	r20, 0x14	; 20
    b002:	71 f0       	breq	.+28     	; 0xb020 <TMR_SR_cmdGetProtocolConfiguration+0x6a>
    b004:	45 31       	cpi	r20, 0x15	; 21
    b006:	71 f0       	breq	.+28     	; 0xb024 <TMR_SR_cmdGetProtocolConfiguration+0x6e>
    b008:	4b 30       	cpi	r20, 0x0B	; 11
    b00a:	09 f0       	breq	.+2      	; 0xb00e <TMR_SR_cmdGetProtocolConfiguration+0x58>
    b00c:	3b c2       	rjmp	.+1142   	; 0xb484 <TMR_SR_cmdGetProtocolConfiguration+0x4ce>
    b00e:	06 c0       	rjmp	.+12     	; 0xb01c <TMR_SR_cmdGetProtocolConfiguration+0x66>
    b010:	05 2f       	mov	r16, r21
    b012:	09 c0       	rjmp	.+18     	; 0xb026 <TMR_SR_cmdGetProtocolConfiguration+0x70>
    b014:	05 2f       	mov	r16, r21
    b016:	07 c0       	rjmp	.+14     	; 0xb026 <TMR_SR_cmdGetProtocolConfiguration+0x70>
    b018:	05 2f       	mov	r16, r21
    b01a:	05 c0       	rjmp	.+10     	; 0xb026 <TMR_SR_cmdGetProtocolConfiguration+0x70>
    b01c:	05 2f       	mov	r16, r21
    b01e:	03 c0       	rjmp	.+6      	; 0xb026 <TMR_SR_cmdGetProtocolConfiguration+0x70>
    b020:	05 2f       	mov	r16, r21
    b022:	01 c0       	rjmp	.+2      	; 0xb026 <TMR_SR_cmdGetProtocolConfiguration+0x70>
    b024:	05 2f       	mov	r16, r21
    b026:	11 96       	adiw	r26, 0x01	; 1
    b028:	b0 93 58 02 	sts	0x0258, r27	; 0x800258 <totalMsgIdx+0x1>
    b02c:	a0 93 57 02 	sts	0x0257, r26	; 0x800257 <totalMsgIdx>
    b030:	0d 83       	std	Y+5, r16	; 0x05
    b032:	45 e0       	ldi	r20, 0x05	; 5
    b034:	be 01       	movw	r22, r28
    b036:	6f 5f       	subi	r22, 0xFF	; 255
    b038:	7f 4f       	sbci	r23, 0xFF	; 255
    b03a:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    b03e:	61 15       	cp	r22, r1
    b040:	71 05       	cpc	r23, r1
    b042:	81 05       	cpc	r24, r1
    b044:	91 05       	cpc	r25, r1
    b046:	09 f0       	breq	.+2      	; 0xb04a <TMR_SR_cmdGetProtocolConfiguration+0x94>
    b048:	22 c2       	rjmp	.+1092   	; 0xb48e <TMR_SR_cmdGetProtocolConfiguration+0x4d8>
    b04a:	15 30       	cpi	r17, 0x05	; 5
    b04c:	09 f0       	breq	.+2      	; 0xb050 <TMR_SR_cmdGetProtocolConfiguration+0x9a>
    b04e:	04 c1       	rjmp	.+520    	; 0xb258 <TMR_SR_cmdGetProtocolConfiguration+0x2a2>
    b050:	88 85       	ldd	r24, Y+8	; 0x08
    b052:	10 e0       	ldi	r17, 0x00	; 0
    b054:	08 31       	cpi	r16, 0x18	; 24
    b056:	11 05       	cpc	r17, r1
    b058:	08 f0       	brcs	.+2      	; 0xb05c <TMR_SR_cmdGetProtocolConfiguration+0xa6>
    b05a:	1d c2       	rjmp	.+1082   	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4e0>
    b05c:	f8 01       	movw	r30, r16
    b05e:	e1 59       	subi	r30, 0x91	; 145
    b060:	fd 4f       	sbci	r31, 0xFD	; 253
    b062:	0c 94 d3 74 	jmp	0xe9a6	; 0xe9a6 <__tablejump2__>
    b066:	f7 01       	movw	r30, r14
    b068:	80 83       	st	Z, r24
    b06a:	40 e0       	ldi	r20, 0x00	; 0
    b06c:	30 e0       	ldi	r19, 0x00	; 0
    b06e:	20 e0       	ldi	r18, 0x00	; 0
    b070:	90 e0       	ldi	r25, 0x00	; 0
    b072:	1f c2       	rjmp	.+1086   	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b074:	f7 01       	movw	r30, r14
    b076:	80 83       	st	Z, r24
    b078:	40 e0       	ldi	r20, 0x00	; 0
    b07a:	30 e0       	ldi	r19, 0x00	; 0
    b07c:	20 e0       	ldi	r18, 0x00	; 0
    b07e:	90 e0       	ldi	r25, 0x00	; 0
    b080:	18 c2       	rjmp	.+1072   	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b082:	90 e0       	ldi	r25, 0x00	; 0
    b084:	f7 01       	movw	r30, r14
    b086:	91 83       	std	Z+1, r25	; 0x01
    b088:	80 83       	st	Z, r24
    b08a:	40 e0       	ldi	r20, 0x00	; 0
    b08c:	30 e0       	ldi	r19, 0x00	; 0
    b08e:	20 e0       	ldi	r18, 0x00	; 0
    b090:	90 e0       	ldi	r25, 0x00	; 0
    b092:	0f c2       	rjmp	.+1054   	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b094:	f7 01       	movw	r30, r14
    b096:	80 83       	st	Z, r24
    b098:	40 e0       	ldi	r20, 0x00	; 0
    b09a:	30 e0       	ldi	r19, 0x00	; 0
    b09c:	20 e0       	ldi	r18, 0x00	; 0
    b09e:	90 e0       	ldi	r25, 0x00	; 0
    b0a0:	08 c2       	rjmp	.+1040   	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b0a2:	f7 01       	movw	r30, r14
    b0a4:	80 83       	st	Z, r24
    b0a6:	40 e0       	ldi	r20, 0x00	; 0
    b0a8:	30 e0       	ldi	r19, 0x00	; 0
    b0aa:	20 e0       	ldi	r18, 0x00	; 0
    b0ac:	90 e0       	ldi	r25, 0x00	; 0
    b0ae:	01 c2       	rjmp	.+1026   	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b0b0:	f7 01       	movw	r30, r14
    b0b2:	80 83       	st	Z, r24
    b0b4:	40 e0       	ldi	r20, 0x00	; 0
    b0b6:	30 e0       	ldi	r19, 0x00	; 0
    b0b8:	20 e0       	ldi	r18, 0x00	; 0
    b0ba:	90 e0       	ldi	r25, 0x00	; 0
    b0bc:	fa c1       	rjmp	.+1012   	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b0be:	8b 85       	ldd	r24, Y+11	; 0x0b
    b0c0:	90 e0       	ldi	r25, 0x00	; 0
    b0c2:	a0 e0       	ldi	r26, 0x00	; 0
    b0c4:	b0 e0       	ldi	r27, 0x00	; 0
    b0c6:	78 2f       	mov	r23, r24
    b0c8:	66 27       	eor	r22, r22
    b0ca:	55 27       	eor	r21, r21
    b0cc:	44 27       	eor	r20, r20
    b0ce:	9c 85       	ldd	r25, Y+12	; 0x0c
    b0d0:	89 2f       	mov	r24, r25
    b0d2:	90 e0       	ldi	r25, 0x00	; 0
    b0d4:	a0 e0       	ldi	r26, 0x00	; 0
    b0d6:	b0 e0       	ldi	r27, 0x00	; 0
    b0d8:	dc 01       	movw	r26, r24
    b0da:	99 27       	eor	r25, r25
    b0dc:	88 27       	eor	r24, r24
    b0de:	84 2b       	or	r24, r20
    b0e0:	95 2b       	or	r25, r21
    b0e2:	a6 2b       	or	r26, r22
    b0e4:	b7 2b       	or	r27, r23
    b0e6:	4d 85       	ldd	r20, Y+13	; 0x0d
    b0e8:	50 e0       	ldi	r21, 0x00	; 0
    b0ea:	60 e0       	ldi	r22, 0x00	; 0
    b0ec:	70 e0       	ldi	r23, 0x00	; 0
    b0ee:	76 2f       	mov	r23, r22
    b0f0:	65 2f       	mov	r22, r21
    b0f2:	54 2f       	mov	r21, r20
    b0f4:	44 27       	eor	r20, r20
    b0f6:	84 2b       	or	r24, r20
    b0f8:	95 2b       	or	r25, r21
    b0fa:	a6 2b       	or	r26, r22
    b0fc:	b7 2b       	or	r27, r23
    b0fe:	2e 85       	ldd	r18, Y+14	; 0x0e
    b100:	82 2b       	or	r24, r18
    b102:	f7 01       	movw	r30, r14
    b104:	80 83       	st	Z, r24
    b106:	91 83       	std	Z+1, r25	; 0x01
    b108:	a2 83       	std	Z+2, r26	; 0x02
    b10a:	b3 83       	std	Z+3, r27	; 0x03
    b10c:	8f 85       	ldd	r24, Y+15	; 0x0f
    b10e:	90 e0       	ldi	r25, 0x00	; 0
    b110:	a0 e0       	ldi	r26, 0x00	; 0
    b112:	b0 e0       	ldi	r27, 0x00	; 0
    b114:	78 2f       	mov	r23, r24
    b116:	66 27       	eor	r22, r22
    b118:	55 27       	eor	r21, r21
    b11a:	44 27       	eor	r20, r20
    b11c:	98 89       	ldd	r25, Y+16	; 0x10
    b11e:	89 2f       	mov	r24, r25
    b120:	90 e0       	ldi	r25, 0x00	; 0
    b122:	a0 e0       	ldi	r26, 0x00	; 0
    b124:	b0 e0       	ldi	r27, 0x00	; 0
    b126:	dc 01       	movw	r26, r24
    b128:	99 27       	eor	r25, r25
    b12a:	88 27       	eor	r24, r24
    b12c:	84 2b       	or	r24, r20
    b12e:	95 2b       	or	r25, r21
    b130:	a6 2b       	or	r26, r22
    b132:	b7 2b       	or	r27, r23
    b134:	49 89       	ldd	r20, Y+17	; 0x11
    b136:	50 e0       	ldi	r21, 0x00	; 0
    b138:	60 e0       	ldi	r22, 0x00	; 0
    b13a:	70 e0       	ldi	r23, 0x00	; 0
    b13c:	76 2f       	mov	r23, r22
    b13e:	65 2f       	mov	r22, r21
    b140:	54 2f       	mov	r21, r20
    b142:	44 27       	eor	r20, r20
    b144:	84 2b       	or	r24, r20
    b146:	95 2b       	or	r25, r21
    b148:	a6 2b       	or	r26, r22
    b14a:	b7 2b       	or	r27, r23
    b14c:	2a 89       	ldd	r18, Y+18	; 0x12
    b14e:	82 2b       	or	r24, r18
    b150:	84 83       	std	Z+4, r24	; 0x04
    b152:	95 83       	std	Z+5, r25	; 0x05
    b154:	a6 83       	std	Z+6, r26	; 0x06
    b156:	b7 83       	std	Z+7, r27	; 0x07
    b158:	40 e0       	ldi	r20, 0x00	; 0
    b15a:	30 e0       	ldi	r19, 0x00	; 0
    b15c:	20 e0       	ldi	r18, 0x00	; 0
    b15e:	90 e0       	ldi	r25, 0x00	; 0
    b160:	a8 c1       	rjmp	.+848    	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b162:	90 e0       	ldi	r25, 0x00	; 0
    b164:	98 2f       	mov	r25, r24
    b166:	88 27       	eor	r24, r24
    b168:	29 85       	ldd	r18, Y+9	; 0x09
    b16a:	82 2b       	or	r24, r18
    b16c:	81 30       	cpi	r24, 0x01	; 1
    b16e:	91 05       	cpc	r25, r1
    b170:	01 f1       	breq	.+64     	; 0xb1b2 <TMR_SR_cmdGetProtocolConfiguration+0x1fc>
    b172:	b8 f0       	brcs	.+46     	; 0xb1a2 <TMR_SR_cmdGetProtocolConfiguration+0x1ec>
    b174:	81 15       	cp	r24, r1
    b176:	f1 e0       	ldi	r31, 0x01	; 1
    b178:	9f 07       	cpc	r25, r31
    b17a:	21 f0       	breq	.+8      	; 0xb184 <TMR_SR_cmdGetProtocolConfiguration+0x1ce>
    b17c:	81 30       	cpi	r24, 0x01	; 1
    b17e:	91 40       	sbci	r25, 0x01	; 1
    b180:	41 f0       	breq	.+16     	; 0xb192 <TMR_SR_cmdGetProtocolConfiguration+0x1dc>
    b182:	1f c0       	rjmp	.+62     	; 0xb1c2 <TMR_SR_cmdGetProtocolConfiguration+0x20c>
    b184:	f7 01       	movw	r30, r14
    b186:	10 82       	st	Z, r1
    b188:	40 e0       	ldi	r20, 0x00	; 0
    b18a:	30 e0       	ldi	r19, 0x00	; 0
    b18c:	20 e0       	ldi	r18, 0x00	; 0
    b18e:	90 e0       	ldi	r25, 0x00	; 0
    b190:	90 c1       	rjmp	.+800    	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b192:	81 e0       	ldi	r24, 0x01	; 1
    b194:	f7 01       	movw	r30, r14
    b196:	80 83       	st	Z, r24
    b198:	40 e0       	ldi	r20, 0x00	; 0
    b19a:	30 e0       	ldi	r19, 0x00	; 0
    b19c:	20 e0       	ldi	r18, 0x00	; 0
    b19e:	90 e0       	ldi	r25, 0x00	; 0
    b1a0:	88 c1       	rjmp	.+784    	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b1a2:	82 e0       	ldi	r24, 0x02	; 2
    b1a4:	f7 01       	movw	r30, r14
    b1a6:	80 83       	st	Z, r24
    b1a8:	40 e0       	ldi	r20, 0x00	; 0
    b1aa:	30 e0       	ldi	r19, 0x00	; 0
    b1ac:	20 e0       	ldi	r18, 0x00	; 0
    b1ae:	90 e0       	ldi	r25, 0x00	; 0
    b1b0:	80 c1       	rjmp	.+768    	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b1b2:	83 e0       	ldi	r24, 0x03	; 3
    b1b4:	f7 01       	movw	r30, r14
    b1b6:	80 83       	st	Z, r24
    b1b8:	40 e0       	ldi	r20, 0x00	; 0
    b1ba:	30 e0       	ldi	r19, 0x00	; 0
    b1bc:	20 e0       	ldi	r18, 0x00	; 0
    b1be:	90 e0       	ldi	r25, 0x00	; 0
    b1c0:	78 c1       	rjmp	.+752    	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b1c2:	84 e0       	ldi	r24, 0x04	; 4
    b1c4:	f7 01       	movw	r30, r14
    b1c6:	80 83       	st	Z, r24
    b1c8:	40 e0       	ldi	r20, 0x00	; 0
    b1ca:	30 e0       	ldi	r19, 0x00	; 0
    b1cc:	20 e0       	ldi	r18, 0x00	; 0
    b1ce:	90 e0       	ldi	r25, 0x00	; 0
    b1d0:	70 c1       	rjmp	.+736    	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b1d2:	f7 01       	movw	r30, r14
    b1d4:	80 83       	st	Z, r24
    b1d6:	81 30       	cpi	r24, 0x01	; 1
    b1d8:	09 f0       	breq	.+2      	; 0xb1dc <TMR_SR_cmdGetProtocolConfiguration+0x226>
    b1da:	62 c1       	rjmp	.+708    	; 0xb4a0 <TMR_SR_cmdGetProtocolConfiguration+0x4ea>
    b1dc:	89 85       	ldd	r24, Y+9	; 0x09
    b1de:	81 83       	std	Z+1, r24	; 0x01
    b1e0:	40 e0       	ldi	r20, 0x00	; 0
    b1e2:	30 e0       	ldi	r19, 0x00	; 0
    b1e4:	20 e0       	ldi	r18, 0x00	; 0
    b1e6:	90 e0       	ldi	r25, 0x00	; 0
    b1e8:	64 c1       	rjmp	.+712    	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b1ea:	90 e0       	ldi	r25, 0x00	; 0
    b1ec:	a0 e0       	ldi	r26, 0x00	; 0
    b1ee:	b0 e0       	ldi	r27, 0x00	; 0
    b1f0:	b8 2f       	mov	r27, r24
    b1f2:	aa 27       	eor	r26, r26
    b1f4:	99 27       	eor	r25, r25
    b1f6:	88 27       	eor	r24, r24
    b1f8:	49 85       	ldd	r20, Y+9	; 0x09
    b1fa:	50 e0       	ldi	r21, 0x00	; 0
    b1fc:	60 e0       	ldi	r22, 0x00	; 0
    b1fe:	70 e0       	ldi	r23, 0x00	; 0
    b200:	ba 01       	movw	r22, r20
    b202:	55 27       	eor	r21, r21
    b204:	44 27       	eor	r20, r20
    b206:	84 2b       	or	r24, r20
    b208:	95 2b       	or	r25, r21
    b20a:	a6 2b       	or	r26, r22
    b20c:	b7 2b       	or	r27, r23
    b20e:	4a 85       	ldd	r20, Y+10	; 0x0a
    b210:	50 e0       	ldi	r21, 0x00	; 0
    b212:	60 e0       	ldi	r22, 0x00	; 0
    b214:	70 e0       	ldi	r23, 0x00	; 0
    b216:	76 2f       	mov	r23, r22
    b218:	65 2f       	mov	r22, r21
    b21a:	54 2f       	mov	r21, r20
    b21c:	44 27       	eor	r20, r20
    b21e:	84 2b       	or	r24, r20
    b220:	95 2b       	or	r25, r21
    b222:	a6 2b       	or	r26, r22
    b224:	b7 2b       	or	r27, r23
    b226:	2b 85       	ldd	r18, Y+11	; 0x0b
    b228:	82 2b       	or	r24, r18
    b22a:	f7 01       	movw	r30, r14
    b22c:	80 83       	st	Z, r24
    b22e:	91 83       	std	Z+1, r25	; 0x01
    b230:	a2 83       	std	Z+2, r26	; 0x02
    b232:	b3 83       	std	Z+3, r27	; 0x03
    b234:	40 e0       	ldi	r20, 0x00	; 0
    b236:	30 e0       	ldi	r19, 0x00	; 0
    b238:	20 e0       	ldi	r18, 0x00	; 0
    b23a:	90 e0       	ldi	r25, 0x00	; 0
    b23c:	3a c1       	rjmp	.+628    	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b23e:	91 e0       	ldi	r25, 0x01	; 1
    b240:	81 11       	cpse	r24, r1
    b242:	01 c0       	rjmp	.+2      	; 0xb246 <TMR_SR_cmdGetProtocolConfiguration+0x290>
    b244:	90 e0       	ldi	r25, 0x00	; 0
    b246:	f7 01       	movw	r30, r14
    b248:	90 83       	st	Z, r25
    b24a:	89 85       	ldd	r24, Y+9	; 0x09
    b24c:	81 83       	std	Z+1, r24	; 0x01
    b24e:	40 e0       	ldi	r20, 0x00	; 0
    b250:	30 e0       	ldi	r19, 0x00	; 0
    b252:	20 e0       	ldi	r18, 0x00	; 0
    b254:	90 e0       	ldi	r25, 0x00	; 0
    b256:	2d c1       	rjmp	.+602    	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b258:	19 30       	cpi	r17, 0x09	; 9
    b25a:	e9 f5       	brne	.+122    	; 0xb2d6 <TMR_SR_cmdGetProtocolConfiguration+0x320>
    b25c:	01 30       	cpi	r16, 0x01	; 1
    b25e:	88 f1       	brcs	.+98     	; 0xb2c2 <TMR_SR_cmdGetProtocolConfiguration+0x30c>
    b260:	03 30       	cpi	r16, 0x03	; 3
    b262:	18 f0       	brcs	.+6      	; 0xb26a <TMR_SR_cmdGetProtocolConfiguration+0x2b4>
    b264:	03 30       	cpi	r16, 0x03	; 3
    b266:	b9 f0       	breq	.+46     	; 0xb296 <TMR_SR_cmdGetProtocolConfiguration+0x2e0>
    b268:	2c c0       	rjmp	.+88     	; 0xb2c2 <TMR_SR_cmdGetProtocolConfiguration+0x30c>
    b26a:	4a 81       	ldd	r20, Y+2	; 0x02
    b26c:	50 e0       	ldi	r21, 0x00	; 0
    b26e:	42 50       	subi	r20, 0x02	; 2
    b270:	51 09       	sbc	r21, r1
    b272:	be 01       	movw	r22, r28
    b274:	68 5f       	subi	r22, 0xF8	; 248
    b276:	7f 4f       	sbci	r23, 0xFF	; 255
    b278:	ce 01       	movw	r24, r28
    b27a:	8f 5f       	subi	r24, 0xFF	; 255
    b27c:	9e 4f       	sbci	r25, 0xFE	; 254
    b27e:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    b282:	6a 81       	ldd	r22, Y+2	; 0x02
    b284:	62 50       	subi	r22, 0x02	; 2
    b286:	ce 01       	movw	r24, r28
    b288:	8f 5f       	subi	r24, 0xFF	; 255
    b28a:	9e 4f       	sbci	r25, 0xFE	; 254
    b28c:	0e 94 48 6f 	call	0xde90	; 0xde90 <TMR_SR_convertFromEBV>
    b290:	f7 01       	movw	r30, r14
    b292:	20 83       	st	Z, r18
    b294:	1b c0       	rjmp	.+54     	; 0xb2cc <TMR_SR_cmdGetProtocolConfiguration+0x316>
    b296:	4a 81       	ldd	r20, Y+2	; 0x02
    b298:	50 e0       	ldi	r21, 0x00	; 0
    b29a:	42 50       	subi	r20, 0x02	; 2
    b29c:	51 09       	sbc	r21, r1
    b29e:	be 01       	movw	r22, r28
    b2a0:	68 5f       	subi	r22, 0xF8	; 248
    b2a2:	7f 4f       	sbci	r23, 0xFF	; 255
    b2a4:	ce 01       	movw	r24, r28
    b2a6:	8f 5f       	subi	r24, 0xFF	; 255
    b2a8:	9e 4f       	sbci	r25, 0xFE	; 254
    b2aa:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    b2ae:	6a 81       	ldd	r22, Y+2	; 0x02
    b2b0:	62 50       	subi	r22, 0x02	; 2
    b2b2:	ce 01       	movw	r24, r28
    b2b4:	8f 5f       	subi	r24, 0xFF	; 255
    b2b6:	9e 4f       	sbci	r25, 0xFE	; 254
    b2b8:	0e 94 48 6f 	call	0xde90	; 0xde90 <TMR_SR_convertFromEBV>
    b2bc:	f7 01       	movw	r30, r14
    b2be:	20 83       	st	Z, r18
    b2c0:	05 c0       	rjmp	.+10     	; 0xb2cc <TMR_SR_cmdGetProtocolConfiguration+0x316>
    b2c2:	49 e0       	ldi	r20, 0x09	; 9
    b2c4:	30 e0       	ldi	r19, 0x00	; 0
    b2c6:	20 e0       	ldi	r18, 0x00	; 0
    b2c8:	93 e0       	ldi	r25, 0x03	; 3
    b2ca:	f3 c0       	rjmp	.+486    	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b2cc:	40 e0       	ldi	r20, 0x00	; 0
    b2ce:	30 e0       	ldi	r19, 0x00	; 0
    b2d0:	20 e0       	ldi	r18, 0x00	; 0
    b2d2:	90 e0       	ldi	r25, 0x00	; 0
    b2d4:	ee c0       	rjmp	.+476    	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b2d6:	1a 30       	cpi	r17, 0x0A	; 10
    b2d8:	21 f5       	brne	.+72     	; 0xb322 <TMR_SR_cmdGetProtocolConfiguration+0x36c>
    b2da:	5f ef       	ldi	r21, 0xFF	; 255
    b2dc:	50 0f       	add	r21, r16
    b2de:	52 30       	cpi	r21, 0x02	; 2
    b2e0:	d8 f4       	brcc	.+54     	; 0xb318 <TMR_SR_cmdGetProtocolConfiguration+0x362>
    b2e2:	4a 81       	ldd	r20, Y+2	; 0x02
    b2e4:	50 e0       	ldi	r21, 0x00	; 0
    b2e6:	42 50       	subi	r20, 0x02	; 2
    b2e8:	51 09       	sbc	r21, r1
    b2ea:	be 01       	movw	r22, r28
    b2ec:	68 5f       	subi	r22, 0xF8	; 248
    b2ee:	7f 4f       	sbci	r23, 0xFF	; 255
    b2f0:	ce 01       	movw	r24, r28
    b2f2:	8f 5f       	subi	r24, 0xFF	; 255
    b2f4:	9e 4f       	sbci	r25, 0xFE	; 254
    b2f6:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    b2fa:	6a 81       	ldd	r22, Y+2	; 0x02
    b2fc:	62 50       	subi	r22, 0x02	; 2
    b2fe:	ce 01       	movw	r24, r28
    b300:	8f 5f       	subi	r24, 0xFF	; 255
    b302:	9e 4f       	sbci	r25, 0xFE	; 254
    b304:	0e 94 48 6f 	call	0xde90	; 0xde90 <TMR_SR_convertFromEBV>
    b308:	f7 01       	movw	r30, r14
    b30a:	20 83       	st	Z, r18
    b30c:	31 83       	std	Z+1, r19	; 0x01
    b30e:	40 e0       	ldi	r20, 0x00	; 0
    b310:	30 e0       	ldi	r19, 0x00	; 0
    b312:	20 e0       	ldi	r18, 0x00	; 0
    b314:	90 e0       	ldi	r25, 0x00	; 0
    b316:	cd c0       	rjmp	.+410    	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b318:	49 e0       	ldi	r20, 0x09	; 9
    b31a:	30 e0       	ldi	r19, 0x00	; 0
    b31c:	20 e0       	ldi	r18, 0x00	; 0
    b31e:	93 e0       	ldi	r25, 0x03	; 3
    b320:	c8 c0       	rjmp	.+400    	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b322:	1b 30       	cpi	r17, 0x0B	; 11
    b324:	09 f0       	breq	.+2      	; 0xb328 <TMR_SR_cmdGetProtocolConfiguration+0x372>
    b326:	40 c0       	rjmp	.+128    	; 0xb3a8 <TMR_SR_cmdGetProtocolConfiguration+0x3f2>
    b328:	01 30       	cpi	r16, 0x01	; 1
    b32a:	a0 f1       	brcs	.+104    	; 0xb394 <TMR_SR_cmdGetProtocolConfiguration+0x3de>
    b32c:	03 30       	cpi	r16, 0x03	; 3
    b32e:	18 f0       	brcs	.+6      	; 0xb336 <TMR_SR_cmdGetProtocolConfiguration+0x380>
    b330:	03 30       	cpi	r16, 0x03	; 3
    b332:	d1 f0       	breq	.+52     	; 0xb368 <TMR_SR_cmdGetProtocolConfiguration+0x3b2>
    b334:	2f c0       	rjmp	.+94     	; 0xb394 <TMR_SR_cmdGetProtocolConfiguration+0x3de>
    b336:	4a 81       	ldd	r20, Y+2	; 0x02
    b338:	50 e0       	ldi	r21, 0x00	; 0
    b33a:	42 50       	subi	r20, 0x02	; 2
    b33c:	51 09       	sbc	r21, r1
    b33e:	be 01       	movw	r22, r28
    b340:	68 5f       	subi	r22, 0xF8	; 248
    b342:	7f 4f       	sbci	r23, 0xFF	; 255
    b344:	ce 01       	movw	r24, r28
    b346:	8f 5f       	subi	r24, 0xFF	; 255
    b348:	9e 4f       	sbci	r25, 0xFE	; 254
    b34a:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    b34e:	6a 81       	ldd	r22, Y+2	; 0x02
    b350:	62 50       	subi	r22, 0x02	; 2
    b352:	ce 01       	movw	r24, r28
    b354:	8f 5f       	subi	r24, 0xFF	; 255
    b356:	9e 4f       	sbci	r25, 0xFE	; 254
    b358:	0e 94 48 6f 	call	0xde90	; 0xde90 <TMR_SR_convertFromEBV>
    b35c:	f7 01       	movw	r30, r14
    b35e:	20 83       	st	Z, r18
    b360:	31 83       	std	Z+1, r19	; 0x01
    b362:	42 83       	std	Z+2, r20	; 0x02
    b364:	53 83       	std	Z+3, r21	; 0x03
    b366:	1b c0       	rjmp	.+54     	; 0xb39e <TMR_SR_cmdGetProtocolConfiguration+0x3e8>
    b368:	4a 81       	ldd	r20, Y+2	; 0x02
    b36a:	50 e0       	ldi	r21, 0x00	; 0
    b36c:	42 50       	subi	r20, 0x02	; 2
    b36e:	51 09       	sbc	r21, r1
    b370:	be 01       	movw	r22, r28
    b372:	68 5f       	subi	r22, 0xF8	; 248
    b374:	7f 4f       	sbci	r23, 0xFF	; 255
    b376:	ce 01       	movw	r24, r28
    b378:	8f 5f       	subi	r24, 0xFF	; 255
    b37a:	9e 4f       	sbci	r25, 0xFE	; 254
    b37c:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    b380:	6a 81       	ldd	r22, Y+2	; 0x02
    b382:	62 50       	subi	r22, 0x02	; 2
    b384:	ce 01       	movw	r24, r28
    b386:	8f 5f       	subi	r24, 0xFF	; 255
    b388:	9e 4f       	sbci	r25, 0xFE	; 254
    b38a:	0e 94 48 6f 	call	0xde90	; 0xde90 <TMR_SR_convertFromEBV>
    b38e:	f7 01       	movw	r30, r14
    b390:	20 83       	st	Z, r18
    b392:	05 c0       	rjmp	.+10     	; 0xb39e <TMR_SR_cmdGetProtocolConfiguration+0x3e8>
    b394:	49 e0       	ldi	r20, 0x09	; 9
    b396:	30 e0       	ldi	r19, 0x00	; 0
    b398:	20 e0       	ldi	r18, 0x00	; 0
    b39a:	93 e0       	ldi	r25, 0x03	; 3
    b39c:	8a c0       	rjmp	.+276    	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b39e:	40 e0       	ldi	r20, 0x00	; 0
    b3a0:	30 e0       	ldi	r19, 0x00	; 0
    b3a2:	20 e0       	ldi	r18, 0x00	; 0
    b3a4:	90 e0       	ldi	r25, 0x00	; 0
    b3a6:	85 c0       	rjmp	.+266    	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b3a8:	14 31       	cpi	r17, 0x14	; 20
    b3aa:	09 f0       	breq	.+2      	; 0xb3ae <TMR_SR_cmdGetProtocolConfiguration+0x3f8>
    b3ac:	46 c0       	rjmp	.+140    	; 0xb43a <TMR_SR_cmdGetProtocolConfiguration+0x484>
    b3ae:	03 30       	cpi	r16, 0x03	; 3
    b3b0:	01 f1       	breq	.+64     	; 0xb3f2 <TMR_SR_cmdGetProtocolConfiguration+0x43c>
    b3b2:	18 f4       	brcc	.+6      	; 0xb3ba <TMR_SR_cmdGetProtocolConfiguration+0x404>
    b3b4:	01 30       	cpi	r16, 0x01	; 1
    b3b6:	20 f4       	brcc	.+8      	; 0xb3c0 <TMR_SR_cmdGetProtocolConfiguration+0x40a>
    b3b8:	36 c0       	rjmp	.+108    	; 0xb426 <TMR_SR_cmdGetProtocolConfiguration+0x470>
    b3ba:	04 30       	cpi	r16, 0x04	; 4
    b3bc:	81 f1       	breq	.+96     	; 0xb41e <TMR_SR_cmdGetProtocolConfiguration+0x468>
    b3be:	33 c0       	rjmp	.+102    	; 0xb426 <TMR_SR_cmdGetProtocolConfiguration+0x470>
    b3c0:	4a 81       	ldd	r20, Y+2	; 0x02
    b3c2:	50 e0       	ldi	r21, 0x00	; 0
    b3c4:	42 50       	subi	r20, 0x02	; 2
    b3c6:	51 09       	sbc	r21, r1
    b3c8:	be 01       	movw	r22, r28
    b3ca:	68 5f       	subi	r22, 0xF8	; 248
    b3cc:	7f 4f       	sbci	r23, 0xFF	; 255
    b3ce:	ce 01       	movw	r24, r28
    b3d0:	8f 5f       	subi	r24, 0xFF	; 255
    b3d2:	9e 4f       	sbci	r25, 0xFE	; 254
    b3d4:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    b3d8:	6a 81       	ldd	r22, Y+2	; 0x02
    b3da:	62 50       	subi	r22, 0x02	; 2
    b3dc:	ce 01       	movw	r24, r28
    b3de:	8f 5f       	subi	r24, 0xFF	; 255
    b3e0:	9e 4f       	sbci	r25, 0xFE	; 254
    b3e2:	0e 94 48 6f 	call	0xde90	; 0xde90 <TMR_SR_convertFromEBV>
    b3e6:	f7 01       	movw	r30, r14
    b3e8:	20 83       	st	Z, r18
    b3ea:	31 83       	std	Z+1, r19	; 0x01
    b3ec:	42 83       	std	Z+2, r20	; 0x02
    b3ee:	53 83       	std	Z+3, r21	; 0x03
    b3f0:	1f c0       	rjmp	.+62     	; 0xb430 <TMR_SR_cmdGetProtocolConfiguration+0x47a>
    b3f2:	4a 81       	ldd	r20, Y+2	; 0x02
    b3f4:	50 e0       	ldi	r21, 0x00	; 0
    b3f6:	42 50       	subi	r20, 0x02	; 2
    b3f8:	51 09       	sbc	r21, r1
    b3fa:	be 01       	movw	r22, r28
    b3fc:	68 5f       	subi	r22, 0xF8	; 248
    b3fe:	7f 4f       	sbci	r23, 0xFF	; 255
    b400:	ce 01       	movw	r24, r28
    b402:	8f 5f       	subi	r24, 0xFF	; 255
    b404:	9e 4f       	sbci	r25, 0xFE	; 254
    b406:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    b40a:	6a 81       	ldd	r22, Y+2	; 0x02
    b40c:	62 50       	subi	r22, 0x02	; 2
    b40e:	ce 01       	movw	r24, r28
    b410:	8f 5f       	subi	r24, 0xFF	; 255
    b412:	9e 4f       	sbci	r25, 0xFE	; 254
    b414:	0e 94 48 6f 	call	0xde90	; 0xde90 <TMR_SR_convertFromEBV>
    b418:	f7 01       	movw	r30, r14
    b41a:	20 83       	st	Z, r18
    b41c:	09 c0       	rjmp	.+18     	; 0xb430 <TMR_SR_cmdGetProtocolConfiguration+0x47a>
    b41e:	88 85       	ldd	r24, Y+8	; 0x08
    b420:	f7 01       	movw	r30, r14
    b422:	80 83       	st	Z, r24
    b424:	05 c0       	rjmp	.+10     	; 0xb430 <TMR_SR_cmdGetProtocolConfiguration+0x47a>
    b426:	49 e0       	ldi	r20, 0x09	; 9
    b428:	30 e0       	ldi	r19, 0x00	; 0
    b42a:	20 e0       	ldi	r18, 0x00	; 0
    b42c:	93 e0       	ldi	r25, 0x03	; 3
    b42e:	41 c0       	rjmp	.+130    	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b430:	40 e0       	ldi	r20, 0x00	; 0
    b432:	30 e0       	ldi	r19, 0x00	; 0
    b434:	20 e0       	ldi	r18, 0x00	; 0
    b436:	90 e0       	ldi	r25, 0x00	; 0
    b438:	3c c0       	rjmp	.+120    	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b43a:	15 31       	cpi	r17, 0x15	; 21
    b43c:	b1 f5       	brne	.+108    	; 0xb4aa <TMR_SR_cmdGetProtocolConfiguration+0x4f4>
    b43e:	5f ef       	ldi	r21, 0xFF	; 255
    b440:	50 0f       	add	r21, r16
    b442:	52 30       	cpi	r21, 0x02	; 2
    b444:	d0 f4       	brcc	.+52     	; 0xb47a <TMR_SR_cmdGetProtocolConfiguration+0x4c4>
    b446:	4a 81       	ldd	r20, Y+2	; 0x02
    b448:	50 e0       	ldi	r21, 0x00	; 0
    b44a:	42 50       	subi	r20, 0x02	; 2
    b44c:	51 09       	sbc	r21, r1
    b44e:	be 01       	movw	r22, r28
    b450:	68 5f       	subi	r22, 0xF8	; 248
    b452:	7f 4f       	sbci	r23, 0xFF	; 255
    b454:	ce 01       	movw	r24, r28
    b456:	8f 5f       	subi	r24, 0xFF	; 255
    b458:	9e 4f       	sbci	r25, 0xFE	; 254
    b45a:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    b45e:	6a 81       	ldd	r22, Y+2	; 0x02
    b460:	62 50       	subi	r22, 0x02	; 2
    b462:	ce 01       	movw	r24, r28
    b464:	8f 5f       	subi	r24, 0xFF	; 255
    b466:	9e 4f       	sbci	r25, 0xFE	; 254
    b468:	0e 94 48 6f 	call	0xde90	; 0xde90 <TMR_SR_convertFromEBV>
    b46c:	f7 01       	movw	r30, r14
    b46e:	20 83       	st	Z, r18
    b470:	40 e0       	ldi	r20, 0x00	; 0
    b472:	30 e0       	ldi	r19, 0x00	; 0
    b474:	20 e0       	ldi	r18, 0x00	; 0
    b476:	90 e0       	ldi	r25, 0x00	; 0
    b478:	1c c0       	rjmp	.+56     	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b47a:	49 e0       	ldi	r20, 0x09	; 9
    b47c:	30 e0       	ldi	r19, 0x00	; 0
    b47e:	20 e0       	ldi	r18, 0x00	; 0
    b480:	93 e0       	ldi	r25, 0x03	; 3
    b482:	17 c0       	rjmp	.+46     	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b484:	41 e0       	ldi	r20, 0x01	; 1
    b486:	30 e0       	ldi	r19, 0x00	; 0
    b488:	20 e0       	ldi	r18, 0x00	; 0
    b48a:	93 e0       	ldi	r25, 0x03	; 3
    b48c:	12 c0       	rjmp	.+36     	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b48e:	46 2f       	mov	r20, r22
    b490:	37 2f       	mov	r19, r23
    b492:	28 2f       	mov	r18, r24
    b494:	0e c0       	rjmp	.+28     	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b496:	49 e0       	ldi	r20, 0x09	; 9
    b498:	30 e0       	ldi	r19, 0x00	; 0
    b49a:	20 e0       	ldi	r18, 0x00	; 0
    b49c:	93 e0       	ldi	r25, 0x03	; 3
    b49e:	09 c0       	rjmp	.+18     	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b4a0:	40 e0       	ldi	r20, 0x00	; 0
    b4a2:	30 e0       	ldi	r19, 0x00	; 0
    b4a4:	20 e0       	ldi	r18, 0x00	; 0
    b4a6:	90 e0       	ldi	r25, 0x00	; 0
    b4a8:	04 c0       	rjmp	.+8      	; 0xb4b2 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b4aa:	41 e0       	ldi	r20, 0x01	; 1
    b4ac:	30 e0       	ldi	r19, 0x00	; 0
    b4ae:	20 e0       	ldi	r18, 0x00	; 0
    b4b0:	93 e0       	ldi	r25, 0x03	; 3
    b4b2:	64 2f       	mov	r22, r20
    b4b4:	73 2f       	mov	r23, r19
    b4b6:	82 2f       	mov	r24, r18
    b4b8:	c8 5f       	subi	r28, 0xF8	; 248
    b4ba:	de 4f       	sbci	r29, 0xFE	; 254
    b4bc:	0f b6       	in	r0, 0x3f	; 63
    b4be:	f8 94       	cli
    b4c0:	de bf       	out	0x3e, r29	; 62
    b4c2:	0f be       	out	0x3f, r0	; 63
    b4c4:	cd bf       	out	0x3d, r28	; 61
    b4c6:	df 91       	pop	r29
    b4c8:	cf 91       	pop	r28
    b4ca:	1f 91       	pop	r17
    b4cc:	0f 91       	pop	r16
    b4ce:	ff 90       	pop	r15
    b4d0:	ef 90       	pop	r14
    b4d2:	08 95       	ret

0000b4d4 <TMR_SR_msgSetupMultipleProtocolSearch>:
    b4d4:	2f 92       	push	r2
    b4d6:	3f 92       	push	r3
    b4d8:	4f 92       	push	r4
    b4da:	5f 92       	push	r5
    b4dc:	6f 92       	push	r6
    b4de:	7f 92       	push	r7
    b4e0:	8f 92       	push	r8
    b4e2:	9f 92       	push	r9
    b4e4:	af 92       	push	r10
    b4e6:	bf 92       	push	r11
    b4e8:	cf 92       	push	r12
    b4ea:	df 92       	push	r13
    b4ec:	ef 92       	push	r14
    b4ee:	ff 92       	push	r15
    b4f0:	0f 93       	push	r16
    b4f2:	1f 93       	push	r17
    b4f4:	cf 93       	push	r28
    b4f6:	df 93       	push	r29
    b4f8:	cd b7       	in	r28, 0x3d	; 61
    b4fa:	de b7       	in	r29, 0x3e	; 62
    b4fc:	69 97       	sbiw	r28, 0x19	; 25
    b4fe:	0f b6       	in	r0, 0x3f	; 63
    b500:	f8 94       	cli
    b502:	de bf       	out	0x3e, r29	; 62
    b504:	0f be       	out	0x3f, r0	; 63
    b506:	cd bf       	out	0x3d, r28	; 61
    b508:	2c 01       	movw	r4, r24
    b50a:	1b 01       	movw	r2, r22
    b50c:	49 87       	std	Y+9, r20	; 0x09
    b50e:	3e 83       	std	Y+6, r19	; 0x06
    b510:	2d 83       	std	Y+5, r18	; 0x05
    b512:	0c 8b       	std	Y+20, r16	; 0x14
    b514:	1d 8b       	std	Y+21, r17	; 0x15
    b516:	ff 8a       	std	Y+23, r15	; 0x17
    b518:	ee 8a       	std	Y+22, r14	; 0x16
    b51a:	d9 8e       	std	Y+25, r13	; 0x19
    b51c:	c8 8e       	std	Y+24, r12	; 0x18
    b51e:	aa 8a       	std	Y+18, r10	; 0x12
    b520:	bb 8a       	std	Y+19, r11	; 0x13
    b522:	dc 01       	movw	r26, r24
    b524:	1c 96       	adiw	r26, 0x0c	; 12
    b526:	8d 91       	ld	r24, X+
    b528:	9d 91       	ld	r25, X+
    b52a:	0d 90       	ld	r0, X+
    b52c:	bc 91       	ld	r27, X
    b52e:	a0 2d       	mov	r26, r0
    b530:	8e 87       	std	Y+14, r24	; 0x0e
    b532:	9f 87       	std	Y+15, r25	; 0x0f
    b534:	a8 8b       	std	Y+16, r26	; 0x10
    b536:	b9 8b       	std	Y+17, r27	; 0x11
    b538:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    b53c:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    b540:	01 96       	adiw	r24, 0x01	; 1
    b542:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    b546:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    b54a:	83 e0       	ldi	r24, 0x03	; 3
    b54c:	89 83       	std	Y+1, r24	; 0x01
    b54e:	8f e2       	ldi	r24, 0x2F	; 47
    b550:	fb 01       	movw	r30, r22
    b552:	82 83       	std	Z+2, r24	; 0x02
    b554:	f2 01       	movw	r30, r4
    b556:	ea 58       	subi	r30, 0x8A	; 138
    b558:	ff 4f       	sbci	r31, 0xFF	; 255
    b55a:	80 81       	ld	r24, Z
    b55c:	88 23       	and	r24, r24
    b55e:	41 f1       	breq	.+80     	; 0xb5b0 <TMR_SR_msgSetupMultipleProtocolSearch+0xdc>
    b560:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    b564:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    b568:	02 96       	adiw	r24, 0x02	; 2
    b56a:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    b56e:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    b572:	99 81       	ldd	r25, Y+1	; 0x01
    b574:	81 e0       	ldi	r24, 0x01	; 1
    b576:	89 0f       	add	r24, r25
    b578:	fb 01       	movw	r30, r22
    b57a:	e9 0f       	add	r30, r25
    b57c:	f1 1d       	adc	r31, r1
    b57e:	10 82       	st	Z, r1
    b580:	21 e0       	ldi	r18, 0x01	; 1
    b582:	28 0f       	add	r18, r24
    b584:	fb 01       	movw	r30, r22
    b586:	e8 0f       	add	r30, r24
    b588:	f1 1d       	adc	r31, r1
    b58a:	10 82       	st	Z, r1
    b58c:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    b590:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    b594:	01 96       	adiw	r24, 0x01	; 1
    b596:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    b59a:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    b59e:	81 e0       	ldi	r24, 0x01	; 1
    b5a0:	82 0f       	add	r24, r18
    b5a2:	89 83       	std	Y+1, r24	; 0x01
    b5a4:	fb 01       	movw	r30, r22
    b5a6:	e2 0f       	add	r30, r18
    b5a8:	f1 1d       	adc	r31, r1
    b5aa:	81 e0       	ldi	r24, 0x01	; 1
    b5ac:	80 83       	st	Z, r24
    b5ae:	40 c0       	rjmp	.+128    	; 0xb630 <TMR_SR_msgSetupMultipleProtocolSearch+0x15c>
    b5b0:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    b5b4:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    b5b8:	02 96       	adiw	r24, 0x02	; 2
    b5ba:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    b5be:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    b5c2:	99 81       	ldd	r25, Y+1	; 0x01
    b5c4:	81 e0       	ldi	r24, 0x01	; 1
    b5c6:	89 0f       	add	r24, r25
    b5c8:	fb 01       	movw	r30, r22
    b5ca:	e9 0f       	add	r30, r25
    b5cc:	f1 1d       	adc	r31, r1
    b5ce:	9b 89       	ldd	r25, Y+19	; 0x13
    b5d0:	90 83       	st	Z, r25
    b5d2:	31 e0       	ldi	r19, 0x01	; 1
    b5d4:	38 0f       	add	r19, r24
    b5d6:	fb 01       	movw	r30, r22
    b5d8:	e8 0f       	add	r30, r24
    b5da:	f1 1d       	adc	r31, r1
    b5dc:	aa 89       	ldd	r26, Y+18	; 0x12
    b5de:	a0 83       	st	Z, r26
    b5e0:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    b5e4:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    b5e8:	01 96       	adiw	r24, 0x01	; 1
    b5ea:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    b5ee:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    b5f2:	21 e0       	ldi	r18, 0x01	; 1
    b5f4:	23 0f       	add	r18, r19
    b5f6:	fb 01       	movw	r30, r22
    b5f8:	e3 0f       	add	r30, r19
    b5fa:	f1 1d       	adc	r31, r1
    b5fc:	81 e1       	ldi	r24, 0x11	; 17
    b5fe:	80 83       	st	Z, r24
    b600:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    b604:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    b608:	02 96       	adiw	r24, 0x02	; 2
    b60a:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    b60e:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    b612:	81 e0       	ldi	r24, 0x01	; 1
    b614:	82 0f       	add	r24, r18
    b616:	fb 01       	movw	r30, r22
    b618:	e2 0f       	add	r30, r18
    b61a:	f1 1d       	adc	r31, r1
    b61c:	bd 89       	ldd	r27, Y+21	; 0x15
    b61e:	b0 83       	st	Z, r27
    b620:	91 e0       	ldi	r25, 0x01	; 1
    b622:	98 0f       	add	r25, r24
    b624:	99 83       	std	Y+1, r25	; 0x01
    b626:	fb 01       	movw	r30, r22
    b628:	e8 0f       	add	r30, r24
    b62a:	f1 1d       	adc	r31, r1
    b62c:	8c 89       	ldd	r24, Y+20	; 0x14
    b62e:	80 83       	st	Z, r24
    b630:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    b634:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    b638:	01 96       	adiw	r24, 0x01	; 1
    b63a:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    b63e:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    b642:	89 81       	ldd	r24, Y+1	; 0x01
    b644:	91 e0       	ldi	r25, 0x01	; 1
    b646:	98 0f       	add	r25, r24
    b648:	99 83       	std	Y+1, r25	; 0x01
    b64a:	f1 01       	movw	r30, r2
    b64c:	e8 0f       	add	r30, r24
    b64e:	f1 1d       	adc	r31, r1
    b650:	99 85       	ldd	r25, Y+9	; 0x09
    b652:	90 83       	st	Z, r25
    b654:	f2 01       	movw	r30, r4
    b656:	a2 a9       	ldd	r26, Z+50	; 0x32
    b658:	b3 a9       	ldd	r27, Z+51	; 0x33
    b65a:	8c 91       	ld	r24, X
    b65c:	82 30       	cpi	r24, 0x02	; 2
    b65e:	91 f5       	brne	.+100    	; 0xb6c4 <TMR_SR_msgSetupMultipleProtocolSearch+0x1f0>
    b660:	e4 50       	subi	r30, 0x04	; 4
    b662:	fa 4f       	sbci	r31, 0xFA	; 250
    b664:	10 82       	st	Z, r1
    b666:	20 e0       	ldi	r18, 0x00	; 0
    b668:	27 c0       	rjmp	.+78     	; 0xb6b8 <TMR_SR_msgSetupMultipleProtocolSearch+0x1e4>
    b66a:	16 96       	adiw	r26, 0x06	; 6
    b66c:	8d 91       	ld	r24, X+
    b66e:	9c 91       	ld	r25, X
    b670:	17 97       	sbiw	r26, 0x07	; 7
    b672:	e2 2f       	mov	r30, r18
    b674:	f0 e0       	ldi	r31, 0x00	; 0
    b676:	ee 0f       	add	r30, r30
    b678:	ff 1f       	adc	r31, r31
    b67a:	e8 0f       	add	r30, r24
    b67c:	f9 1f       	adc	r31, r25
    b67e:	01 90       	ld	r0, Z+
    b680:	f0 81       	ld	r31, Z
    b682:	e0 2d       	mov	r30, r0
    b684:	82 89       	ldd	r24, Z+18	; 0x12
    b686:	88 23       	and	r24, r24
    b688:	b1 f0       	breq	.+44     	; 0xb6b6 <TMR_SR_msgSetupMultipleProtocolSearch+0x1e2>
    b68a:	43 89       	ldd	r20, Z+19	; 0x13
    b68c:	54 89       	ldd	r21, Z+20	; 0x14
    b68e:	65 89       	ldd	r22, Z+21	; 0x15
    b690:	76 89       	ldd	r23, Z+22	; 0x16
    b692:	f2 01       	movw	r30, r4
    b694:	e3 50       	subi	r30, 0x03	; 3
    b696:	fa 4f       	sbci	r31, 0xFA	; 250
    b698:	c0 80       	ld	r12, Z
    b69a:	d1 80       	ldd	r13, Z+1	; 0x01
    b69c:	e2 80       	ldd	r14, Z+2	; 0x02
    b69e:	f3 80       	ldd	r15, Z+3	; 0x03
    b6a0:	4c 0d       	add	r20, r12
    b6a2:	5d 1d       	adc	r21, r13
    b6a4:	6e 1d       	adc	r22, r14
    b6a6:	7f 1d       	adc	r23, r15
    b6a8:	40 83       	st	Z, r20
    b6aa:	51 83       	std	Z+1, r21	; 0x01
    b6ac:	62 83       	std	Z+2, r22	; 0x02
    b6ae:	73 83       	std	Z+3, r23	; 0x03
    b6b0:	81 e0       	ldi	r24, 0x01	; 1
    b6b2:	31 97       	sbiw	r30, 0x01	; 1
    b6b4:	80 83       	st	Z, r24
    b6b6:	2f 5f       	subi	r18, 0xFF	; 255
    b6b8:	1c 96       	adiw	r26, 0x0c	; 12
    b6ba:	8c 91       	ld	r24, X
    b6bc:	1c 97       	sbiw	r26, 0x0c	; 12
    b6be:	28 17       	cp	r18, r24
    b6c0:	a0 f2       	brcs	.-88     	; 0xb66a <TMR_SR_msgSetupMultipleProtocolSearch+0x196>
    b6c2:	0d c0       	rjmp	.+26     	; 0xb6de <TMR_SR_msgSetupMultipleProtocolSearch+0x20a>
    b6c4:	53 96       	adiw	r26, 0x13	; 19
    b6c6:	8d 91       	ld	r24, X+
    b6c8:	9d 91       	ld	r25, X+
    b6ca:	0d 90       	ld	r0, X+
    b6cc:	bc 91       	ld	r27, X
    b6ce:	a0 2d       	mov	r26, r0
    b6d0:	f2 01       	movw	r30, r4
    b6d2:	e3 50       	subi	r30, 0x03	; 3
    b6d4:	fa 4f       	sbci	r31, 0xFA	; 250
    b6d6:	80 83       	st	Z, r24
    b6d8:	91 83       	std	Z+1, r25	; 0x01
    b6da:	a2 83       	std	Z+2, r26	; 0x02
    b6dc:	b3 83       	std	Z+3, r27	; 0x03
    b6de:	f2 01       	movw	r30, r4
    b6e0:	ee 5d       	subi	r30, 0xDE	; 222
    b6e2:	f9 4f       	sbci	r31, 0xF9	; 249
    b6e4:	80 81       	ld	r24, Z
    b6e6:	81 11       	cpse	r24, r1
    b6e8:	03 c0       	rjmp	.+6      	; 0xb6f0 <TMR_SR_msgSetupMultipleProtocolSearch+0x21c>
    b6ea:	80 e0       	ldi	r24, 0x00	; 0
    b6ec:	90 e0       	ldi	r25, 0x00	; 0
    b6ee:	02 c0       	rjmp	.+4      	; 0xb6f4 <TMR_SR_msgSetupMultipleProtocolSearch+0x220>
    b6f0:	80 e0       	ldi	r24, 0x00	; 0
    b6f2:	98 e0       	ldi	r25, 0x08	; 8
    b6f4:	f2 01       	movw	r30, r4
    b6f6:	e4 50       	subi	r30, 0x04	; 4
    b6f8:	fa 4f       	sbci	r31, 0xFA	; 250
    b6fa:	20 81       	ld	r18, Z
    b6fc:	21 11       	cpse	r18, r1
    b6fe:	80 64       	ori	r24, 0x40	; 64
    b700:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    b704:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    b708:	2e 5f       	subi	r18, 0xFE	; 254
    b70a:	3f 4f       	sbci	r19, 0xFF	; 255
    b70c:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    b710:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    b714:	39 81       	ldd	r19, Y+1	; 0x01
    b716:	21 e0       	ldi	r18, 0x01	; 1
    b718:	23 0f       	add	r18, r19
    b71a:	f1 01       	movw	r30, r2
    b71c:	e3 0f       	add	r30, r19
    b71e:	f1 1d       	adc	r31, r1
    b720:	90 83       	st	Z, r25
    b722:	91 e0       	ldi	r25, 0x01	; 1
    b724:	92 0f       	add	r25, r18
    b726:	99 83       	std	Y+1, r25	; 0x01
    b728:	f1 01       	movw	r30, r2
    b72a:	e2 0f       	add	r30, r18
    b72c:	f1 1d       	adc	r31, r1
    b72e:	80 83       	st	Z, r24
    b730:	f2 01       	movw	r30, r4
    b732:	e4 50       	subi	r30, 0x04	; 4
    b734:	fa 4f       	sbci	r31, 0xFA	; 250
    b736:	80 81       	ld	r24, Z
    b738:	88 23       	and	r24, r24
    b73a:	41 f1       	breq	.+80     	; 0xb78c <TMR_SR_msgSetupMultipleProtocolSearch+0x2b8>
    b73c:	31 96       	adiw	r30, 0x01	; 1
    b73e:	20 81       	ld	r18, Z
    b740:	31 81       	ldd	r19, Z+1	; 0x01
    b742:	42 81       	ldd	r20, Z+2	; 0x02
    b744:	53 81       	ldd	r21, Z+3	; 0x03
    b746:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    b74a:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    b74e:	04 96       	adiw	r24, 0x04	; 4
    b750:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    b754:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    b758:	99 81       	ldd	r25, Y+1	; 0x01
    b75a:	81 e0       	ldi	r24, 0x01	; 1
    b75c:	89 0f       	add	r24, r25
    b75e:	f1 01       	movw	r30, r2
    b760:	e9 0f       	add	r30, r25
    b762:	f1 1d       	adc	r31, r1
    b764:	50 83       	st	Z, r21
    b766:	91 e0       	ldi	r25, 0x01	; 1
    b768:	98 0f       	add	r25, r24
    b76a:	f1 01       	movw	r30, r2
    b76c:	e8 0f       	add	r30, r24
    b76e:	f1 1d       	adc	r31, r1
    b770:	40 83       	st	Z, r20
    b772:	81 e0       	ldi	r24, 0x01	; 1
    b774:	89 0f       	add	r24, r25
    b776:	f1 01       	movw	r30, r2
    b778:	e9 0f       	add	r30, r25
    b77a:	f1 1d       	adc	r31, r1
    b77c:	30 83       	st	Z, r19
    b77e:	91 e0       	ldi	r25, 0x01	; 1
    b780:	98 0f       	add	r25, r24
    b782:	99 83       	std	Y+1, r25	; 0x01
    b784:	f1 01       	movw	r30, r2
    b786:	e8 0f       	add	r30, r24
    b788:	f1 1d       	adc	r31, r1
    b78a:	20 83       	st	Z, r18
    b78c:	ad 81       	ldd	r26, Y+5	; 0x05
    b78e:	be 81       	ldd	r27, Y+6	; 0x06
    b790:	13 96       	adiw	r26, 0x03	; 3
    b792:	6c 91       	ld	r22, X
    b794:	70 e0       	ldi	r23, 0x00	; 0
    b796:	8a 89       	ldd	r24, Y+18	; 0x12
    b798:	9b 89       	ldd	r25, Y+19	; 0x13
    b79a:	0e 94 8a 74 	call	0xe914	; 0xe914 <__udivmodhi4>
    b79e:	78 87       	std	Y+8, r23	; 0x08
    b7a0:	6f 83       	std	Y+7, r22	; 0x07
    b7a2:	61 2c       	mov	r6, r1
    b7a4:	60 e0       	ldi	r22, 0x00	; 0
    b7a6:	70 e0       	ldi	r23, 0x00	; 0
    b7a8:	80 e0       	ldi	r24, 0x00	; 0
    b7aa:	90 e0       	ldi	r25, 0x00	; 0
    b7ac:	31 c1       	rjmp	.+610    	; 0xba10 <TMR_SR_msgSetupMultipleProtocolSearch+0x53c>
    b7ae:	ad 81       	ldd	r26, Y+5	; 0x05
    b7b0:	be 81       	ldd	r27, Y+6	; 0x06
    b7b2:	ed 91       	ld	r30, X+
    b7b4:	fc 91       	ld	r31, X
    b7b6:	06 2d       	mov	r16, r6
    b7b8:	10 e0       	ldi	r17, 0x00	; 0
    b7ba:	e0 0f       	add	r30, r16
    b7bc:	f1 1f       	adc	r31, r17
    b7be:	a0 80       	ld	r10, Z
    b7c0:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    b7c4:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    b7c8:	01 96       	adiw	r24, 0x01	; 1
    b7ca:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    b7ce:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    b7d2:	89 81       	ldd	r24, Y+1	; 0x01
    b7d4:	77 24       	eor	r7, r7
    b7d6:	73 94       	inc	r7
    b7d8:	78 0e       	add	r7, r24
    b7da:	f1 01       	movw	r30, r2
    b7dc:	e8 0f       	add	r30, r24
    b7de:	f1 1d       	adc	r31, r1
    b7e0:	a0 82       	st	Z, r10
    b7e2:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    b7e6:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    b7ea:	01 96       	adiw	r24, 0x01	; 1
    b7ec:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    b7f0:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    b7f4:	81 e0       	ldi	r24, 0x01	; 1
    b7f6:	87 0d       	add	r24, r7
    b7f8:	89 83       	std	Y+1, r24	; 0x01
    b7fa:	f1 01       	movw	r30, r2
    b7fc:	e7 0d       	add	r30, r7
    b7fe:	f1 1d       	adc	r31, r1
    b800:	fc 83       	std	Y+4, r31	; 0x04
    b802:	eb 83       	std	Y+3, r30	; 0x03
    b804:	10 82       	st	Z, r1
    b806:	d2 01       	movw	r26, r4
    b808:	d2 96       	adiw	r26, 0x32	; 50
    b80a:	8d 90       	ld	r8, X+
    b80c:	9c 90       	ld	r9, X
    b80e:	d3 97       	sbiw	r26, 0x33	; 51
    b810:	f4 01       	movw	r30, r8
    b812:	80 81       	ld	r24, Z
    b814:	82 30       	cpi	r24, 0x02	; 2
    b816:	09 f0       	breq	.+2      	; 0xb81a <TMR_SR_msgSetupMultipleProtocolSearch+0x346>
    b818:	9f c0       	rjmp	.+318    	; 0xb958 <TMR_SR_msgSetupMultipleProtocolSearch+0x484>
    b81a:	c0 84       	ldd	r12, Z+8	; 0x08
    b81c:	d1 84       	ldd	r13, Z+9	; 0x09
    b81e:	e2 84       	ldd	r14, Z+10	; 0x0a
    b820:	f3 84       	ldd	r15, Z+11	; 0x0b
    b822:	c1 14       	cp	r12, r1
    b824:	d1 04       	cpc	r13, r1
    b826:	e1 04       	cpc	r14, r1
    b828:	f1 04       	cpc	r15, r1
    b82a:	d9 f1       	breq	.+118    	; 0xb8a2 <TMR_SR_msgSetupMultipleProtocolSearch+0x3ce>
    b82c:	26 81       	ldd	r18, Z+6	; 0x06
    b82e:	37 81       	ldd	r19, Z+7	; 0x07
    b830:	c8 01       	movw	r24, r16
    b832:	88 0f       	add	r24, r24
    b834:	99 1f       	adc	r25, r25
    b836:	f9 01       	movw	r30, r18
    b838:	e8 0f       	add	r30, r24
    b83a:	f9 1f       	adc	r31, r25
    b83c:	01 90       	ld	r0, Z+
    b83e:	f0 81       	ld	r31, Z
    b840:	e0 2d       	mov	r30, r0
    b842:	81 81       	ldd	r24, Z+1	; 0x01
    b844:	92 81       	ldd	r25, Z+2	; 0x02
    b846:	a3 81       	ldd	r26, Z+3	; 0x03
    b848:	b4 81       	ldd	r27, Z+4	; 0x04
    b84a:	8a 87       	std	Y+10, r24	; 0x0a
    b84c:	9b 87       	std	Y+11, r25	; 0x0b
    b84e:	ac 87       	std	Y+12, r26	; 0x0c
    b850:	bd 87       	std	Y+13, r27	; 0x0d
    b852:	aa 89       	ldd	r26, Y+18	; 0x12
    b854:	bb 89       	ldd	r27, Y+19	; 0x13
    b856:	2a 85       	ldd	r18, Y+10	; 0x0a
    b858:	3b 85       	ldd	r19, Y+11	; 0x0b
    b85a:	4c 85       	ldd	r20, Y+12	; 0x0c
    b85c:	5d 85       	ldd	r21, Y+13	; 0x0d
    b85e:	0e 94 dc 74 	call	0xe9b8	; 0xe9b8 <__muluhisi3>
    b862:	a7 01       	movw	r20, r14
    b864:	96 01       	movw	r18, r12
    b866:	0e 94 b1 74 	call	0xe962	; 0xe962 <__udivmodsi4>
    b86a:	38 87       	std	Y+8, r19	; 0x08
    b86c:	2f 83       	std	Y+7, r18	; 0x07
    b86e:	2e 85       	ldd	r18, Y+14	; 0x0e
    b870:	3f 85       	ldd	r19, Y+15	; 0x0f
    b872:	48 89       	ldd	r20, Y+16	; 0x10
    b874:	59 89       	ldd	r21, Y+17	; 0x11
    b876:	6a 85       	ldd	r22, Y+10	; 0x0a
    b878:	7b 85       	ldd	r23, Y+11	; 0x0b
    b87a:	8c 85       	ldd	r24, Y+12	; 0x0c
    b87c:	9d 85       	ldd	r25, Y+13	; 0x0d
    b87e:	0e 94 7b 74 	call	0xe8f6	; 0xe8f6 <__mulsi3>
    b882:	a7 01       	movw	r20, r14
    b884:	96 01       	movw	r18, r12
    b886:	0e 94 b1 74 	call	0xe962	; 0xe962 <__udivmodsi4>
    b88a:	f2 01       	movw	r30, r4
    b88c:	e4 58       	subi	r30, 0x84	; 132
    b88e:	fe 4f       	sbci	r31, 0xFE	; 254
    b890:	da 01       	movw	r26, r20
    b892:	c9 01       	movw	r24, r18
    b894:	aa 27       	eor	r26, r26
    b896:	bb 27       	eor	r27, r27
    b898:	80 83       	st	Z, r24
    b89a:	91 83       	std	Z+1, r25	; 0x01
    b89c:	a2 83       	std	Z+2, r26	; 0x02
    b89e:	b3 83       	std	Z+3, r27	; 0x03
    b8a0:	18 c0       	rjmp	.+48     	; 0xb8d2 <TMR_SR_msgSetupMultipleProtocolSearch+0x3fe>
    b8a2:	ad 81       	ldd	r26, Y+5	; 0x05
    b8a4:	be 81       	ldd	r27, Y+6	; 0x06
    b8a6:	13 96       	adiw	r26, 0x03	; 3
    b8a8:	2c 91       	ld	r18, X
    b8aa:	30 e0       	ldi	r19, 0x00	; 0
    b8ac:	40 e0       	ldi	r20, 0x00	; 0
    b8ae:	50 e0       	ldi	r21, 0x00	; 0
    b8b0:	6e 85       	ldd	r22, Y+14	; 0x0e
    b8b2:	7f 85       	ldd	r23, Y+15	; 0x0f
    b8b4:	88 89       	ldd	r24, Y+16	; 0x10
    b8b6:	99 89       	ldd	r25, Y+17	; 0x11
    b8b8:	0e 94 b1 74 	call	0xe962	; 0xe962 <__udivmodsi4>
    b8bc:	f2 01       	movw	r30, r4
    b8be:	e4 58       	subi	r30, 0x84	; 132
    b8c0:	fe 4f       	sbci	r31, 0xFE	; 254
    b8c2:	da 01       	movw	r26, r20
    b8c4:	c9 01       	movw	r24, r18
    b8c6:	aa 27       	eor	r26, r26
    b8c8:	bb 27       	eor	r27, r27
    b8ca:	80 83       	st	Z, r24
    b8cc:	91 83       	std	Z+1, r25	; 0x01
    b8ce:	a2 83       	std	Z+2, r26	; 0x02
    b8d0:	b3 83       	std	Z+3, r27	; 0x03
    b8d2:	d4 01       	movw	r26, r8
    b8d4:	16 96       	adiw	r26, 0x06	; 6
    b8d6:	ed 91       	ld	r30, X+
    b8d8:	fc 91       	ld	r31, X
    b8da:	17 97       	sbiw	r26, 0x07	; 7
    b8dc:	c8 01       	movw	r24, r16
    b8de:	88 0f       	add	r24, r24
    b8e0:	99 1f       	adc	r25, r25
    b8e2:	e8 0f       	add	r30, r24
    b8e4:	f9 1f       	adc	r31, r25
    b8e6:	01 90       	ld	r0, Z+
    b8e8:	f0 81       	ld	r31, Z
    b8ea:	e0 2d       	mov	r30, r0
    b8ec:	27 89       	ldd	r18, Z+23	; 0x17
    b8ee:	f2 01       	movw	r30, r4
    b8f0:	e7 58       	subi	r30, 0x87	; 135
    b8f2:	ff 4f       	sbci	r31, 0xFF	; 255
    b8f4:	20 83       	st	Z, r18
    b8f6:	16 96       	adiw	r26, 0x06	; 6
    b8f8:	ed 91       	ld	r30, X+
    b8fa:	fc 91       	ld	r31, X
    b8fc:	17 97       	sbiw	r26, 0x07	; 7
    b8fe:	e8 0f       	add	r30, r24
    b900:	f9 1f       	adc	r31, r25
    b902:	01 90       	ld	r0, Z+
    b904:	f0 81       	ld	r31, Z
    b906:	e0 2d       	mov	r30, r0
    b908:	21 89       	ldd	r18, Z+17	; 0x11
    b90a:	f2 01       	movw	r30, r4
    b90c:	e4 5f       	subi	r30, 0xF4	; 244
    b90e:	f9 4f       	sbci	r31, 0xF9	; 249
    b910:	20 83       	st	Z, r18
    b912:	16 96       	adiw	r26, 0x06	; 6
    b914:	ed 91       	ld	r30, X+
    b916:	fc 91       	ld	r31, X
    b918:	17 97       	sbiw	r26, 0x07	; 7
    b91a:	e8 0f       	add	r30, r24
    b91c:	f9 1f       	adc	r31, r25
    b91e:	01 90       	ld	r0, Z+
    b920:	f0 81       	ld	r31, Z
    b922:	e0 2d       	mov	r30, r0
    b924:	22 89       	ldd	r18, Z+18	; 0x12
    b926:	f2 01       	movw	r30, r4
    b928:	e4 50       	subi	r30, 0x04	; 4
    b92a:	fa 4f       	sbci	r31, 0xFA	; 250
    b92c:	20 83       	st	Z, r18
    b92e:	16 96       	adiw	r26, 0x06	; 6
    b930:	2d 91       	ld	r18, X+
    b932:	3c 91       	ld	r19, X
    b934:	17 97       	sbiw	r26, 0x07	; 7
    b936:	f9 01       	movw	r30, r18
    b938:	e8 0f       	add	r30, r24
    b93a:	f9 1f       	adc	r31, r25
    b93c:	01 90       	ld	r0, Z+
    b93e:	f0 81       	ld	r31, Z
    b940:	e0 2d       	mov	r30, r0
    b942:	83 89       	ldd	r24, Z+19	; 0x13
    b944:	94 89       	ldd	r25, Z+20	; 0x14
    b946:	a5 89       	ldd	r26, Z+21	; 0x15
    b948:	b6 89       	ldd	r27, Z+22	; 0x16
    b94a:	f2 01       	movw	r30, r4
    b94c:	e3 50       	subi	r30, 0x03	; 3
    b94e:	fa 4f       	sbci	r31, 0xFA	; 250
    b950:	80 83       	st	Z, r24
    b952:	91 83       	std	Z+1, r25	; 0x01
    b954:	a2 83       	std	Z+2, r26	; 0x02
    b956:	b3 83       	std	Z+3, r27	; 0x03
    b958:	b9 85       	ldd	r27, Y+9	; 0x09
    b95a:	b2 32       	cpi	r27, 0x22	; 34
    b95c:	09 f0       	breq	.+2      	; 0xb960 <TMR_SR_msgSetupMultipleProtocolSearch+0x48c>
    b95e:	60 c0       	rjmp	.+192    	; 0xba20 <TMR_SR_msgSetupMultipleProtocolSearch+0x54c>
    b960:	f4 01       	movw	r30, r8
    b962:	80 81       	ld	r24, Z
    b964:	82 30       	cpi	r24, 0x02	; 2
    b966:	51 f4       	brne	.+20     	; 0xb97c <TMR_SR_msgSetupMultipleProtocolSearch+0x4a8>
    b968:	06 80       	ldd	r0, Z+6	; 0x06
    b96a:	f7 81       	ldd	r31, Z+7	; 0x07
    b96c:	e0 2d       	mov	r30, r0
    b96e:	c8 01       	movw	r24, r16
    b970:	88 0f       	add	r24, r24
    b972:	99 1f       	adc	r25, r25
    b974:	e8 0f       	add	r30, r24
    b976:	f9 1f       	adc	r31, r25
    b978:	80 80       	ld	r8, Z
    b97a:	91 80       	ldd	r9, Z+1	; 0x01
    b97c:	d4 01       	movw	r26, r8
    b97e:	1f 96       	adiw	r26, 0x0f	; 15
    b980:	6d 91       	ld	r22, X+
    b982:	7c 91       	ld	r23, X
    b984:	50 97       	sbiw	r26, 0x10	; 16
    b986:	61 15       	cp	r22, r1
    b988:	71 05       	cpc	r23, r1
    b98a:	d1 f0       	breq	.+52     	; 0xb9c0 <TMR_SR_msgSetupMultipleProtocolSearch+0x4ec>
    b98c:	ef 81       	ldd	r30, Y+7	; 0x07
    b98e:	f8 85       	ldd	r31, Y+8	; 0x08
    b990:	6f 01       	movw	r12, r30
    b992:	e1 2c       	mov	r14, r1
    b994:	f1 2c       	mov	r15, r1
    b996:	1a 82       	std	Y+2, r1	; 0x02
    b998:	ce 01       	movw	r24, r28
    b99a:	02 96       	adiw	r24, 0x02	; 2
    b99c:	5c 01       	movw	r10, r24
    b99e:	8e 01       	movw	r16, r28
    b9a0:	0f 5f       	subi	r16, 0xFF	; 255
    b9a2:	1f 4f       	sbci	r17, 0xFF	; 255
    b9a4:	91 01       	movw	r18, r2
    b9a6:	a4 01       	movw	r20, r8
    b9a8:	c2 01       	movw	r24, r4
    b9aa:	0e 94 49 25 	call	0x4a92	; 0x4a92 <TMR_SR_addTagOp>
    b9ae:	3a 81       	ldd	r19, Y+2	; 0x02
    b9b0:	f1 01       	movw	r30, r2
    b9b2:	e3 0f       	add	r30, r19
    b9b4:	f1 1d       	adc	r31, r1
    b9b6:	29 81       	ldd	r18, Y+1	; 0x01
    b9b8:	23 1b       	sub	r18, r19
    b9ba:	22 50       	subi	r18, 0x02	; 2
    b9bc:	20 83       	st	Z, r18
    b9be:	1d c0       	rjmp	.+58     	; 0xb9fa <TMR_SR_msgSetupMultipleProtocolSearch+0x526>
    b9c0:	00 0f       	add	r16, r16
    b9c2:	11 1f       	adc	r17, r17
    b9c4:	e8 8d       	ldd	r30, Y+24	; 0x18
    b9c6:	f9 8d       	ldd	r31, Y+25	; 0x19
    b9c8:	e0 0f       	add	r30, r16
    b9ca:	f1 1f       	adc	r31, r17
    b9cc:	c0 80       	ld	r12, Z
    b9ce:	d1 80       	ldd	r13, Z+1	; 0x01
    b9d0:	1f 92       	push	r1
    b9d2:	1f 92       	push	r1
    b9d4:	1f 92       	push	r1
    b9d6:	1f 92       	push	r1
    b9d8:	ec 88       	ldd	r14, Y+20	; 0x14
    b9da:	fd 88       	ldd	r15, Y+21	; 0x15
    b9dc:	0e 89       	ldd	r16, Y+22	; 0x16
    b9de:	1f 89       	ldd	r17, Y+23	; 0x17
    b9e0:	2f 81       	ldd	r18, Y+7	; 0x07
    b9e2:	38 85       	ldd	r19, Y+8	; 0x08
    b9e4:	ae 01       	movw	r20, r28
    b9e6:	4f 5f       	subi	r20, 0xFF	; 255
    b9e8:	5f 4f       	sbci	r21, 0xFF	; 255
    b9ea:	b1 01       	movw	r22, r2
    b9ec:	c2 01       	movw	r24, r4
    b9ee:	0e 94 8f 38 	call	0x711e	; 0x711e <TMR_SR_msgSetupReadTagMultipleWithMetadata>
    b9f2:	0f 90       	pop	r0
    b9f4:	0f 90       	pop	r0
    b9f6:	0f 90       	pop	r0
    b9f8:	0f 90       	pop	r0
    b9fa:	29 81       	ldd	r18, Y+1	; 0x01
    b9fc:	32 2f       	mov	r19, r18
    b9fe:	37 19       	sub	r19, r7
    ba00:	32 50       	subi	r19, 0x02	; 2
    ba02:	ab 81       	ldd	r26, Y+3	; 0x03
    ba04:	bc 81       	ldd	r27, Y+4	; 0x04
    ba06:	3c 93       	st	X, r19
    ba08:	23 50       	subi	r18, 0x03	; 3
    ba0a:	f1 01       	movw	r30, r2
    ba0c:	21 83       	std	Z+1, r18	; 0x01
    ba0e:	63 94       	inc	r6
    ba10:	ad 81       	ldd	r26, Y+5	; 0x05
    ba12:	be 81       	ldd	r27, Y+6	; 0x06
    ba14:	13 96       	adiw	r26, 0x03	; 3
    ba16:	2c 91       	ld	r18, X
    ba18:	62 16       	cp	r6, r18
    ba1a:	08 f4       	brcc	.+2      	; 0xba1e <TMR_SR_msgSetupMultipleProtocolSearch+0x54a>
    ba1c:	c8 ce       	rjmp	.-624    	; 0xb7ae <TMR_SR_msgSetupMultipleProtocolSearch+0x2da>
    ba1e:	04 c0       	rjmp	.+8      	; 0xba28 <TMR_SR_msgSetupMultipleProtocolSearch+0x554>
    ba20:	61 e0       	ldi	r22, 0x01	; 1
    ba22:	71 e0       	ldi	r23, 0x01	; 1
    ba24:	80 e0       	ldi	r24, 0x00	; 0
    ba26:	92 e0       	ldi	r25, 0x02	; 2
    ba28:	69 96       	adiw	r28, 0x19	; 25
    ba2a:	0f b6       	in	r0, 0x3f	; 63
    ba2c:	f8 94       	cli
    ba2e:	de bf       	out	0x3e, r29	; 62
    ba30:	0f be       	out	0x3f, r0	; 63
    ba32:	cd bf       	out	0x3d, r28	; 61
    ba34:	df 91       	pop	r29
    ba36:	cf 91       	pop	r28
    ba38:	1f 91       	pop	r17
    ba3a:	0f 91       	pop	r16
    ba3c:	ff 90       	pop	r15
    ba3e:	ef 90       	pop	r14
    ba40:	df 90       	pop	r13
    ba42:	cf 90       	pop	r12
    ba44:	bf 90       	pop	r11
    ba46:	af 90       	pop	r10
    ba48:	9f 90       	pop	r9
    ba4a:	8f 90       	pop	r8
    ba4c:	7f 90       	pop	r7
    ba4e:	6f 90       	pop	r6
    ba50:	5f 90       	pop	r5
    ba52:	4f 90       	pop	r4
    ba54:	3f 90       	pop	r3
    ba56:	2f 90       	pop	r2
    ba58:	08 95       	ret

0000ba5a <TMR_SR_cmdSetUserProfile>:
    ba5a:	5f 92       	push	r5
    ba5c:	6f 92       	push	r6
    ba5e:	7f 92       	push	r7
    ba60:	8f 92       	push	r8
    ba62:	9f 92       	push	r9
    ba64:	af 92       	push	r10
    ba66:	bf 92       	push	r11
    ba68:	cf 92       	push	r12
    ba6a:	df 92       	push	r13
    ba6c:	ef 92       	push	r14
    ba6e:	ff 92       	push	r15
    ba70:	0f 93       	push	r16
    ba72:	1f 93       	push	r17
    ba74:	cf 93       	push	r28
    ba76:	df 93       	push	r29
    ba78:	cd b7       	in	r28, 0x3d	; 61
    ba7a:	de b7       	in	r29, 0x3e	; 62
    ba7c:	c4 56       	subi	r28, 0x64	; 100
    ba7e:	d2 40       	sbci	r29, 0x02	; 2
    ba80:	0f b6       	in	r0, 0x3f	; 63
    ba82:	f8 94       	cli
    ba84:	de bf       	out	0x3e, r29	; 62
    ba86:	0f be       	out	0x3f, r0	; 63
    ba88:	cd bf       	out	0x3d, r28	; 61
    ba8a:	4c 01       	movw	r8, r24
    ba8c:	56 2e       	mov	r5, r22
    ba8e:	3c 01       	movw	r6, r24
    ba90:	80 e8       	ldi	r24, 0x80	; 128
    ba92:	68 1a       	sub	r6, r24
    ba94:	8e ef       	ldi	r24, 0xFE	; 254
    ba96:	78 0a       	sbc	r7, r24
    ba98:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    ba9c:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    baa0:	3d e9       	ldi	r19, 0x9D	; 157
    baa2:	3b 83       	std	Y+3, r19	; 0x03
    baa4:	6c 83       	std	Y+4, r22	; 0x04
    baa6:	4d 83       	std	Y+5, r20	; 0x05
    baa8:	04 96       	adiw	r24, 0x04	; 4
    baaa:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    baae:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    bab2:	2e 83       	std	Y+6, r18	; 0x06
    bab4:	a4 e0       	ldi	r26, 0x04	; 4
    bab6:	6a 13       	cpse	r22, r26
    bab8:	04 c0       	rjmp	.+8      	; 0xbac2 <TMR_SR_cmdSetUserProfile+0x68>
    baba:	f4 01       	movw	r30, r8
    babc:	e0 51       	subi	r30, 0x10	; 16
    babe:	fa 4f       	sbci	r31, 0xFA	; 250
    bac0:	10 82       	st	Z, r1
    bac2:	b5 e0       	ldi	r27, 0x05	; 5
    bac4:	5b 12       	cpse	r5, r27
    bac6:	50 c1       	rjmp	.+672    	; 0xbd68 <TMR_SR_cmdSetUserProfile+0x30e>
    bac8:	f4 01       	movw	r30, r8
    baca:	02 a9       	ldd	r16, Z+50	; 0x32
    bacc:	13 a9       	ldd	r17, Z+51	; 0x33
    bace:	21 e0       	ldi	r18, 0x01	; 1
    bad0:	ea 58       	subi	r30, 0x8A	; 138
    bad2:	ff 4f       	sbci	r31, 0xFF	; 255
    bad4:	20 83       	st	Z, r18
    bad6:	d8 01       	movw	r26, r16
    bad8:	15 96       	adiw	r26, 0x05	; 5
    bada:	2c 91       	ld	r18, X
    badc:	15 97       	sbiw	r26, 0x05	; 5
    bade:	e6 58       	subi	r30, 0x86	; 134
    bae0:	fa 4f       	sbci	r31, 0xFA	; 250
    bae2:	20 83       	st	Z, r18
    bae4:	01 96       	adiw	r24, 0x01	; 1
    bae6:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    baea:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    baee:	15 96       	adiw	r26, 0x05	; 5
    baf0:	8c 91       	ld	r24, X
    baf2:	15 97       	sbiw	r26, 0x05	; 5
    baf4:	8f 83       	std	Y+7, r24	; 0x07
    baf6:	8c 91       	ld	r24, X
    baf8:	82 30       	cpi	r24, 0x02	; 2
    bafa:	09 f0       	breq	.+2      	; 0xbafe <TMR_SR_cmdSetUserProfile+0xa4>
    bafc:	8f c0       	rjmp	.+286    	; 0xbc1c <TMR_SR_cmdSetUserProfile+0x1c2>
    bafe:	1c 96       	adiw	r26, 0x0c	; 12
    bb00:	8c 91       	ld	r24, X
    bb02:	81 32       	cpi	r24, 0x21	; 33
    bb04:	08 f0       	brcs	.+2      	; 0xbb08 <TMR_SR_cmdSetUserProfile+0xae>
    bb06:	0c c1       	rjmp	.+536    	; 0xbd20 <TMR_SR_cmdSetUserProfile+0x2c6>
    bb08:	cc 59       	subi	r28, 0x9C	; 156
    bb0a:	dd 4f       	sbci	r29, 0xFD	; 253
    bb0c:	88 83       	st	Y, r24
    bb0e:	c4 56       	subi	r28, 0x64	; 100
    bb10:	d2 40       	sbci	r29, 0x02	; 2
    bb12:	cd 59       	subi	r28, 0x9D	; 157
    bb14:	dd 4f       	sbci	r29, 0xFD	; 253
    bb16:	88 83       	st	Y, r24
    bb18:	c3 56       	subi	r28, 0x63	; 99
    bb1a:	d2 40       	sbci	r29, 0x02	; 2
    bb1c:	ce 01       	movw	r24, r28
    bb1e:	8f 5b       	subi	r24, 0xBF	; 191
    bb20:	9d 4f       	sbci	r25, 0xFD	; 253
    bb22:	cf 59       	subi	r28, 0x9F	; 159
    bb24:	dd 4f       	sbci	r29, 0xFD	; 253
    bb26:	99 83       	std	Y+1, r25	; 0x01
    bb28:	88 83       	st	Y, r24
    bb2a:	c1 56       	subi	r28, 0x61	; 97
    bb2c:	d2 40       	sbci	r29, 0x02	; 2
    bb2e:	20 e0       	ldi	r18, 0x00	; 0
    bb30:	2c c0       	rjmp	.+88     	; 0xbb8a <TMR_SR_cmdSetUserProfile+0x130>
    bb32:	cf 59       	subi	r28, 0x9F	; 159
    bb34:	dd 4f       	sbci	r29, 0xFD	; 253
    bb36:	e8 81       	ld	r30, Y
    bb38:	f9 81       	ldd	r31, Y+1	; 0x01
    bb3a:	c1 56       	subi	r28, 0x61	; 97
    bb3c:	d2 40       	sbci	r29, 0x02	; 2
    bb3e:	82 2f       	mov	r24, r18
    bb40:	90 e0       	ldi	r25, 0x00	; 0
    bb42:	af 01       	movw	r20, r30
    bb44:	48 0f       	add	r20, r24
    bb46:	59 1f       	adc	r21, r25
    bb48:	f8 01       	movw	r30, r16
    bb4a:	a6 81       	ldd	r26, Z+6	; 0x06
    bb4c:	b7 81       	ldd	r27, Z+7	; 0x07
    bb4e:	88 0f       	add	r24, r24
    bb50:	99 1f       	adc	r25, r25
    bb52:	a8 0f       	add	r26, r24
    bb54:	b9 1f       	adc	r27, r25
    bb56:	0d 90       	ld	r0, X+
    bb58:	bc 91       	ld	r27, X
    bb5a:	a0 2d       	mov	r26, r0
    bb5c:	1c 96       	adiw	r26, 0x0c	; 12
    bb5e:	3c 91       	ld	r19, X
    bb60:	da 01       	movw	r26, r20
    bb62:	3c 93       	st	X, r19
    bb64:	06 80       	ldd	r0, Z+6	; 0x06
    bb66:	f7 81       	ldd	r31, Z+7	; 0x07
    bb68:	e0 2d       	mov	r30, r0
    bb6a:	e8 0f       	add	r30, r24
    bb6c:	f9 1f       	adc	r31, r25
    bb6e:	01 90       	ld	r0, Z+
    bb70:	f0 81       	ld	r31, Z
    bb72:	e0 2d       	mov	r30, r0
    bb74:	45 85       	ldd	r20, Z+13	; 0x0d
    bb76:	56 85       	ldd	r21, Z+14	; 0x0e
    bb78:	e1 e0       	ldi	r30, 0x01	; 1
    bb7a:	f2 e0       	ldi	r31, 0x02	; 2
    bb7c:	ec 0f       	add	r30, r28
    bb7e:	fd 1f       	adc	r31, r29
    bb80:	e8 0f       	add	r30, r24
    bb82:	f9 1f       	adc	r31, r25
    bb84:	51 83       	std	Z+1, r21	; 0x01
    bb86:	40 83       	st	Z, r20
    bb88:	2f 5f       	subi	r18, 0xFF	; 255
    bb8a:	f8 01       	movw	r30, r16
    bb8c:	84 85       	ldd	r24, Z+12	; 0x0c
    bb8e:	28 17       	cp	r18, r24
    bb90:	80 f2       	brcs	.-96     	; 0xbb32 <TMR_SR_cmdSetUserProfile+0xd8>
    bb92:	88 23       	and	r24, r24
    bb94:	09 f4       	brne	.+2      	; 0xbb98 <TMR_SR_cmdSetUserProfile+0x13e>
    bb96:	c9 c0       	rjmp	.+402    	; 0xbd2a <TMR_SR_cmdSetUserProfile+0x2d0>
    bb98:	06 80       	ldd	r0, Z+6	; 0x06
    bb9a:	f7 81       	ldd	r31, Z+7	; 0x07
    bb9c:	e0 2d       	mov	r30, r0
    bb9e:	01 90       	ld	r0, Z+
    bba0:	f0 81       	ld	r31, Z
    bba2:	e0 2d       	mov	r30, r0
    bba4:	80 81       	ld	r24, Z
    bba6:	81 30       	cpi	r24, 0x01	; 1
    bba8:	09 f0       	breq	.+2      	; 0xbbac <TMR_SR_cmdSetUserProfile+0x152>
    bbaa:	c4 c0       	rjmp	.+392    	; 0xbd34 <TMR_SR_cmdSetUserProfile+0x2da>
    bbac:	c8 01       	movw	r24, r16
    bbae:	06 96       	adiw	r24, 0x06	; 6
    bbb0:	0e 94 42 15 	call	0x2a84	; 0x2a84 <compareAntennas>
    bbb4:	88 23       	and	r24, r24
    bbb6:	09 f4       	brne	.+2      	; 0xbbba <TMR_SR_cmdSetUserProfile+0x160>
    bbb8:	c2 c0       	rjmp	.+388    	; 0xbd3e <TMR_SR_cmdSetUserProfile+0x2e4>
    bbba:	b8 01       	movw	r22, r16
    bbbc:	c4 01       	movw	r24, r8
    bbbe:	0e 94 a7 15 	call	0x2b4e	; 0x2b4e <prepForSearch>
    bbc2:	6b 01       	movw	r12, r22
    bbc4:	7c 01       	movw	r14, r24
    bbc6:	61 15       	cp	r22, r1
    bbc8:	71 05       	cpc	r23, r1
    bbca:	81 05       	cpc	r24, r1
    bbcc:	91 05       	cpc	r25, r1
    bbce:	09 f0       	breq	.+2      	; 0xbbd2 <TMR_SR_cmdSetUserProfile+0x178>
    bbd0:	bb c0       	rjmp	.+374    	; 0xbd48 <TMR_SR_cmdSetUserProfile+0x2ee>
    bbd2:	f4 01       	movw	r30, r8
    bbd4:	e7 5e       	subi	r30, 0xE7	; 231
    bbd6:	f9 4f       	sbci	r31, 0xF9	; 249
    bbd8:	00 81       	ld	r16, Z
    bbda:	11 81       	ldd	r17, Z+1	; 0x01
    bbdc:	0f 2e       	mov	r0, r31
    bbde:	fa ef       	ldi	r31, 0xFA	; 250
    bbe0:	af 2e       	mov	r10, r31
    bbe2:	b1 2c       	mov	r11, r1
    bbe4:	f0 2d       	mov	r31, r0
    bbe6:	ce 01       	movw	r24, r28
    bbe8:	8f 5f       	subi	r24, 0xFF	; 255
    bbea:	9d 4f       	sbci	r25, 0xFD	; 253
    bbec:	6c 01       	movw	r12, r24
    bbee:	0f 2e       	mov	r0, r31
    bbf0:	fb e0       	ldi	r31, 0x0B	; 11
    bbf2:	ef 2e       	mov	r14, r31
    bbf4:	f1 2c       	mov	r15, r1
    bbf6:	f0 2d       	mov	r31, r0
    bbf8:	9e 01       	movw	r18, r28
    bbfa:	2f 59       	subi	r18, 0x9F	; 159
    bbfc:	3d 4f       	sbci	r19, 0xFD	; 253
    bbfe:	42 e2       	ldi	r20, 0x22	; 34
    bc00:	be 01       	movw	r22, r28
    bc02:	6f 5f       	subi	r22, 0xFF	; 255
    bc04:	7e 4f       	sbci	r23, 0xFE	; 254
    bc06:	c4 01       	movw	r24, r8
    bc08:	65 dc       	rcall	.-1846   	; 0xb4d4 <TMR_SR_msgSetupMultipleProtocolSearch>
    bc0a:	6b 01       	movw	r12, r22
    bc0c:	7c 01       	movw	r14, r24
    bc0e:	61 15       	cp	r22, r1
    bc10:	71 05       	cpc	r23, r1
    bc12:	81 05       	cpc	r24, r1
    bc14:	91 05       	cpc	r25, r1
    bc16:	09 f4       	brne	.+2      	; 0xbc1a <TMR_SR_cmdSetUserProfile+0x1c0>
    bc18:	66 c0       	rjmp	.+204    	; 0xbce6 <TMR_SR_cmdSetUserProfile+0x28c>
    bc1a:	9a c0       	rjmp	.+308    	; 0xbd50 <TMR_SR_cmdSetUserProfile+0x2f6>
    bc1c:	d8 01       	movw	r26, r16
    bc1e:	51 96       	adiw	r26, 0x11	; 17
    bc20:	8c 91       	ld	r24, X
    bc22:	51 97       	sbiw	r26, 0x11	; 17
    bc24:	f4 01       	movw	r30, r8
    bc26:	e4 5f       	subi	r30, 0xF4	; 244
    bc28:	f9 4f       	sbci	r31, 0xF9	; 249
    bc2a:	80 83       	st	Z, r24
    bc2c:	57 96       	adiw	r26, 0x17	; 23
    bc2e:	8c 91       	ld	r24, X
    bc30:	e3 59       	subi	r30, 0x93	; 147
    bc32:	f5 40       	sbci	r31, 0x05	; 5
    bc34:	80 83       	st	Z, r24
    bc36:	81 e0       	ldi	r24, 0x01	; 1
    bc38:	cc 59       	subi	r28, 0x9C	; 156
    bc3a:	dd 4f       	sbci	r29, 0xFD	; 253
    bc3c:	88 83       	st	Y, r24
    bc3e:	c4 56       	subi	r28, 0x64	; 100
    bc40:	d2 40       	sbci	r29, 0x02	; 2
    bc42:	cd 59       	subi	r28, 0x9D	; 157
    bc44:	dd 4f       	sbci	r29, 0xFD	; 253
    bc46:	88 83       	st	Y, r24
    bc48:	c3 56       	subi	r28, 0x63	; 99
    bc4a:	d2 40       	sbci	r29, 0x02	; 2
    bc4c:	ce 01       	movw	r24, r28
    bc4e:	8f 5b       	subi	r24, 0xBF	; 191
    bc50:	9d 4f       	sbci	r25, 0xFD	; 253
    bc52:	cf 59       	subi	r28, 0x9F	; 159
    bc54:	dd 4f       	sbci	r29, 0xFD	; 253
    bc56:	99 83       	std	Y+1, r25	; 0x01
    bc58:	88 83       	st	Y, r24
    bc5a:	c1 56       	subi	r28, 0x61	; 97
    bc5c:	d2 40       	sbci	r29, 0x02	; 2
    bc5e:	b8 01       	movw	r22, r16
    bc60:	c4 01       	movw	r24, r8
    bc62:	0e 94 a7 15 	call	0x2b4e	; 0x2b4e <prepForSearch>
    bc66:	6b 01       	movw	r12, r22
    bc68:	7c 01       	movw	r14, r24
    bc6a:	61 15       	cp	r22, r1
    bc6c:	71 05       	cpc	r23, r1
    bc6e:	81 05       	cpc	r24, r1
    bc70:	91 05       	cpc	r25, r1
    bc72:	09 f0       	breq	.+2      	; 0xbc76 <TMR_SR_cmdSetUserProfile+0x21c>
    bc74:	71 c0       	rjmp	.+226    	; 0xbd58 <TMR_SR_cmdSetUserProfile+0x2fe>
    bc76:	cf 59       	subi	r28, 0x9F	; 159
    bc78:	dd 4f       	sbci	r29, 0xFD	; 253
    bc7a:	e8 81       	ld	r30, Y
    bc7c:	f9 81       	ldd	r31, Y+1	; 0x01
    bc7e:	c1 56       	subi	r28, 0x61	; 97
    bc80:	d2 40       	sbci	r29, 0x02	; 2
    bc82:	d8 01       	movw	r26, r16
    bc84:	1c 96       	adiw	r26, 0x0c	; 12
    bc86:	8c 91       	ld	r24, X
    bc88:	1c 97       	sbiw	r26, 0x0c	; 12
    bc8a:	80 83       	st	Z, r24
    bc8c:	1d 96       	adiw	r26, 0x0d	; 13
    bc8e:	8d 91       	ld	r24, X+
    bc90:	9c 91       	ld	r25, X
    bc92:	1e 97       	sbiw	r26, 0x0e	; 14
    bc94:	cf 5f       	subi	r28, 0xFF	; 255
    bc96:	dd 4f       	sbci	r29, 0xFD	; 253
    bc98:	99 83       	std	Y+1, r25	; 0x01
    bc9a:	88 83       	st	Y, r24
    bc9c:	c1 50       	subi	r28, 0x01	; 1
    bc9e:	d2 40       	sbci	r29, 0x02	; 2
    bca0:	f4 01       	movw	r30, r8
    bca2:	e7 5e       	subi	r30, 0xE7	; 231
    bca4:	f9 4f       	sbci	r31, 0xF9	; 249
    bca6:	00 81       	ld	r16, Z
    bca8:	11 81       	ldd	r17, Z+1	; 0x01
    bcaa:	0f 2e       	mov	r0, r31
    bcac:	fa ef       	ldi	r31, 0xFA	; 250
    bcae:	af 2e       	mov	r10, r31
    bcb0:	b1 2c       	mov	r11, r1
    bcb2:	f0 2d       	mov	r31, r0
    bcb4:	fe 01       	movw	r30, r28
    bcb6:	ef 5f       	subi	r30, 0xFF	; 255
    bcb8:	fd 4f       	sbci	r31, 0xFD	; 253
    bcba:	6f 01       	movw	r12, r30
    bcbc:	0f 2e       	mov	r0, r31
    bcbe:	fb e0       	ldi	r31, 0x0B	; 11
    bcc0:	ef 2e       	mov	r14, r31
    bcc2:	f1 2c       	mov	r15, r1
    bcc4:	f0 2d       	mov	r31, r0
    bcc6:	9e 01       	movw	r18, r28
    bcc8:	2f 59       	subi	r18, 0x9F	; 159
    bcca:	3d 4f       	sbci	r19, 0xFD	; 253
    bccc:	42 e2       	ldi	r20, 0x22	; 34
    bcce:	be 01       	movw	r22, r28
    bcd0:	6f 5f       	subi	r22, 0xFF	; 255
    bcd2:	7e 4f       	sbci	r23, 0xFE	; 254
    bcd4:	c4 01       	movw	r24, r8
    bcd6:	fe db       	rcall	.-2052   	; 0xb4d4 <TMR_SR_msgSetupMultipleProtocolSearch>
    bcd8:	6b 01       	movw	r12, r22
    bcda:	7c 01       	movw	r14, r24
    bcdc:	61 15       	cp	r22, r1
    bcde:	71 05       	cpc	r23, r1
    bce0:	81 05       	cpc	r24, r1
    bce2:	91 05       	cpc	r25, r1
    bce4:	e9 f5       	brne	.+122    	; 0xbd60 <TMR_SR_cmdSetUserProfile+0x306>
    bce6:	ce 5f       	subi	r28, 0xFE	; 254
    bce8:	de 4f       	sbci	r29, 0xFE	; 254
    bcea:	48 81       	ld	r20, Y
    bcec:	c2 50       	subi	r28, 0x02	; 2
    bcee:	d1 40       	sbci	r29, 0x01	; 1
    bcf0:	50 e0       	ldi	r21, 0x00	; 0
    bcf2:	4e 5f       	subi	r20, 0xFE	; 254
    bcf4:	5f 4f       	sbci	r21, 0xFF	; 255
    bcf6:	61 e0       	ldi	r22, 0x01	; 1
    bcf8:	71 e0       	ldi	r23, 0x01	; 1
    bcfa:	6c 0f       	add	r22, r28
    bcfc:	7d 1f       	adc	r23, r29
    bcfe:	6f 5f       	subi	r22, 0xFF	; 255
    bd00:	7f 4f       	sbci	r23, 0xFF	; 255
    bd02:	ce 01       	movw	r24, r28
    bd04:	08 96       	adiw	r24, 0x08	; 8
    bd06:	0e 94 5c 6a 	call	0xd4b8	; 0xd4b8 <tm_memcpy>
    bd0a:	ce 5f       	subi	r28, 0xFE	; 254
    bd0c:	de 4f       	sbci	r29, 0xFE	; 254
    bd0e:	48 81       	ld	r20, Y
    bd10:	c2 50       	subi	r28, 0x02	; 2
    bd12:	d1 40       	sbci	r29, 0x01	; 1
    bd14:	47 5f       	subi	r20, 0xF7	; 247
    bd16:	f4 01       	movw	r30, r8
    bd18:	ea 58       	subi	r30, 0x8A	; 138
    bd1a:	ff 4f       	sbci	r31, 0xFF	; 255
    bd1c:	10 82       	st	Z, r1
    bd1e:	25 c0       	rjmp	.+74     	; 0xbd6a <TMR_SR_cmdSetUserProfile+0x310>
    bd20:	66 e0       	ldi	r22, 0x06	; 6
    bd22:	70 e0       	ldi	r23, 0x00	; 0
    bd24:	80 e0       	ldi	r24, 0x00	; 0
    bd26:	93 e0       	ldi	r25, 0x03	; 3
    bd28:	c5 c0       	rjmp	.+394    	; 0xbeb4 <TMR_SR_cmdSetUserProfile+0x45a>
    bd2a:	63 e0       	ldi	r22, 0x03	; 3
    bd2c:	70 e0       	ldi	r23, 0x00	; 0
    bd2e:	80 e0       	ldi	r24, 0x00	; 0
    bd30:	93 e0       	ldi	r25, 0x03	; 3
    bd32:	c0 c0       	rjmp	.+384    	; 0xbeb4 <TMR_SR_cmdSetUserProfile+0x45a>
    bd34:	63 e0       	ldi	r22, 0x03	; 3
    bd36:	70 e0       	ldi	r23, 0x00	; 0
    bd38:	80 e0       	ldi	r24, 0x00	; 0
    bd3a:	93 e0       	ldi	r25, 0x03	; 3
    bd3c:	bb c0       	rjmp	.+374    	; 0xbeb4 <TMR_SR_cmdSetUserProfile+0x45a>
    bd3e:	63 e0       	ldi	r22, 0x03	; 3
    bd40:	70 e0       	ldi	r23, 0x00	; 0
    bd42:	80 e0       	ldi	r24, 0x00	; 0
    bd44:	93 e0       	ldi	r25, 0x03	; 3
    bd46:	b6 c0       	rjmp	.+364    	; 0xbeb4 <TMR_SR_cmdSetUserProfile+0x45a>
    bd48:	7d 2d       	mov	r23, r13
    bd4a:	8e 2d       	mov	r24, r14
    bd4c:	9f 2d       	mov	r25, r15
    bd4e:	b2 c0       	rjmp	.+356    	; 0xbeb4 <TMR_SR_cmdSetUserProfile+0x45a>
    bd50:	7d 2d       	mov	r23, r13
    bd52:	8e 2d       	mov	r24, r14
    bd54:	9f 2d       	mov	r25, r15
    bd56:	ae c0       	rjmp	.+348    	; 0xbeb4 <TMR_SR_cmdSetUserProfile+0x45a>
    bd58:	7d 2d       	mov	r23, r13
    bd5a:	8e 2d       	mov	r24, r14
    bd5c:	9f 2d       	mov	r25, r15
    bd5e:	aa c0       	rjmp	.+340    	; 0xbeb4 <TMR_SR_cmdSetUserProfile+0x45a>
    bd60:	7d 2d       	mov	r23, r13
    bd62:	8e 2d       	mov	r24, r14
    bd64:	9f 2d       	mov	r25, r15
    bd66:	a6 c0       	rjmp	.+332    	; 0xbeb4 <TMR_SR_cmdSetUserProfile+0x45a>
    bd68:	46 e0       	ldi	r20, 0x06	; 6
    bd6a:	be 01       	movw	r22, r28
    bd6c:	6f 5f       	subi	r22, 0xFF	; 255
    bd6e:	7f 4f       	sbci	r23, 0xFF	; 255
    bd70:	c4 01       	movw	r24, r8
    bd72:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    bd76:	5b 01       	movw	r10, r22
    bd78:	6c 01       	movw	r12, r24
    bd7a:	61 15       	cp	r22, r1
    bd7c:	71 05       	cpc	r23, r1
    bd7e:	81 05       	cpc	r24, r1
    bd80:	91 05       	cpc	r25, r1
    bd82:	09 f0       	breq	.+2      	; 0xbd86 <TMR_SR_cmdSetUserProfile+0x32c>
    bd84:	7a c0       	rjmp	.+244    	; 0xbe7a <TMR_SR_cmdSetUserProfile+0x420>
    bd86:	f4 01       	movw	r30, r8
    bd88:	e0 51       	subi	r30, 0x10	; 16
    bd8a:	fa 4f       	sbci	r31, 0xFA	; 250
    bd8c:	80 81       	ld	r24, Z
    bd8e:	81 11       	cpse	r24, r1
    bd90:	78 c0       	rjmp	.+240    	; 0xbe82 <TMR_SR_cmdSetUserProfile+0x428>
    bd92:	f2 e0       	ldi	r31, 0x02	; 2
    bd94:	5f 16       	cp	r5, r31
    bd96:	19 f0       	breq	.+6      	; 0xbd9e <TMR_SR_cmdSetUserProfile+0x344>
    bd98:	24 e0       	ldi	r18, 0x04	; 4
    bd9a:	52 12       	cpse	r5, r18
    bd9c:	31 c0       	rjmp	.+98     	; 0xbe00 <TMR_SR_cmdSetUserProfile+0x3a6>
    bd9e:	d4 01       	movw	r26, r8
    bda0:	15 96       	adiw	r26, 0x05	; 5
    bda2:	8c 91       	ld	r24, X
    bda4:	81 11       	cpse	r24, r1
    bda6:	10 c0       	rjmp	.+32     	; 0xbdc8 <TMR_SR_cmdSetUserProfile+0x36e>
    bda8:	f4 01       	movw	r30, r8
    bdaa:	e0 58       	subi	r30, 0x80	; 128
    bdac:	fe 4f       	sbci	r31, 0xFE	; 254
    bdae:	02 80       	ldd	r0, Z+2	; 0x02
    bdb0:	f3 81       	ldd	r31, Z+3	; 0x03
    bdb2:	e0 2d       	mov	r30, r0
    bdb4:	c3 01       	movw	r24, r6
    bdb6:	09 95       	icall
    bdb8:	8b 01       	movw	r16, r22
    bdba:	9c 01       	movw	r18, r24
    bdbc:	61 15       	cp	r22, r1
    bdbe:	71 05       	cpc	r23, r1
    bdc0:	81 05       	cpc	r24, r1
    bdc2:	91 05       	cpc	r25, r1
    bdc4:	09 f0       	breq	.+2      	; 0xbdc8 <TMR_SR_cmdSetUserProfile+0x36e>
    bdc6:	62 c0       	rjmp	.+196    	; 0xbe8c <TMR_SR_cmdSetUserProfile+0x432>
    bdc8:	b4 e0       	ldi	r27, 0x04	; 4
    bdca:	5b 12       	cpse	r5, r27
    bdcc:	0b c0       	rjmp	.+22     	; 0xbde4 <TMR_SR_cmdSetUserProfile+0x38a>
    bdce:	80 e0       	ldi	r24, 0x00	; 0
    bdd0:	92 ec       	ldi	r25, 0xC2	; 194
    bdd2:	a1 e0       	ldi	r26, 0x01	; 1
    bdd4:	b0 e0       	ldi	r27, 0x00	; 0
    bdd6:	f4 01       	movw	r30, r8
    bdd8:	e0 53       	subi	r30, 0x30	; 48
    bdda:	fe 4f       	sbci	r31, 0xFE	; 254
    bddc:	80 83       	st	Z, r24
    bdde:	91 83       	std	Z+1, r25	; 0x01
    bde0:	a2 83       	std	Z+2, r26	; 0x02
    bde2:	b3 83       	std	Z+3, r27	; 0x03
    bde4:	c4 01       	movw	r24, r8
    bde6:	0e 94 ce 11 	call	0x239c	; 0x239c <TMR_SR_getVersion>
    bdea:	8b 01       	movw	r16, r22
    bdec:	9c 01       	movw	r18, r24
    bdee:	61 15       	cp	r22, r1
    bdf0:	71 05       	cpc	r23, r1
    bdf2:	81 05       	cpc	r24, r1
    bdf4:	91 05       	cpc	r25, r1
    bdf6:	09 f0       	breq	.+2      	; 0xbdfa <TMR_SR_cmdSetUserProfile+0x3a0>
    bdf8:	4d c0       	rjmp	.+154    	; 0xbe94 <TMR_SR_cmdSetUserProfile+0x43a>
    bdfa:	81 e0       	ldi	r24, 0x01	; 1
    bdfc:	f4 01       	movw	r30, r8
    bdfe:	85 83       	std	Z+5, r24	; 0x05
    be00:	f2 e0       	ldi	r31, 0x02	; 2
    be02:	5f 16       	cp	r5, r31
    be04:	19 f0       	breq	.+6      	; 0xbe0c <TMR_SR_cmdSetUserProfile+0x3b2>
    be06:	24 e0       	ldi	r18, 0x04	; 4
    be08:	52 12       	cpse	r5, r18
    be0a:	21 c0       	rjmp	.+66     	; 0xbe4e <TMR_SR_cmdSetUserProfile+0x3f4>
    be0c:	b4 01       	movw	r22, r8
    be0e:	6c 51       	subi	r22, 0x1C	; 28
    be10:	7e 4f       	sbci	r23, 0xFE	; 254
    be12:	c4 01       	movw	r24, r8
    be14:	0e 94 38 56 	call	0xac70	; 0xac70 <TMR_SR_cmdGetRegion>
    be18:	8b 01       	movw	r16, r22
    be1a:	9c 01       	movw	r18, r24
    be1c:	61 15       	cp	r22, r1
    be1e:	71 05       	cpc	r23, r1
    be20:	81 05       	cpc	r24, r1
    be22:	91 05       	cpc	r25, r1
    be24:	d9 f5       	brne	.+118    	; 0xbe9c <TMR_SR_cmdSetUserProfile+0x442>
    be26:	b4 01       	movw	r22, r8
    be28:	6b 5c       	subi	r22, 0xCB	; 203
    be2a:	7f 4f       	sbci	r23, 0xFF	; 255
    be2c:	c4 01       	movw	r24, r8
    be2e:	0e 94 07 56 	call	0xac0e	; 0xac0e <TMR_SR_cmdGetCurrentProtocol>
    be32:	8b 01       	movw	r16, r22
    be34:	9c 01       	movw	r18, r24
    be36:	61 15       	cp	r22, r1
    be38:	71 05       	cpc	r23, r1
    be3a:	81 05       	cpc	r24, r1
    be3c:	91 05       	cpc	r25, r1
    be3e:	91 f5       	brne	.+100    	; 0xbea4 <TMR_SR_cmdSetUserProfile+0x44a>
    be40:	d4 01       	movw	r26, r8
    be42:	d5 96       	adiw	r26, 0x35	; 53
    be44:	8c 91       	ld	r24, X
    be46:	f4 01       	movw	r30, r8
    be48:	ee 57       	subi	r30, 0x7E	; 126
    be4a:	fc 4f       	sbci	r31, 0xFC	; 252
    be4c:	80 83       	st	Z, r24
    be4e:	b4 e0       	ldi	r27, 0x04	; 4
    be50:	5b 12       	cpse	r5, r27
    be52:	2c c0       	rjmp	.+88     	; 0xbeac <TMR_SR_cmdSetUserProfile+0x452>
    be54:	f4 01       	movw	r30, r8
    be56:	ee 57       	subi	r30, 0x7E	; 126
    be58:	fc 4f       	sbci	r31, 0xFC	; 252
    be5a:	e1 2c       	mov	r14, r1
    be5c:	f1 2c       	mov	r15, r1
    be5e:	87 01       	movw	r16, r14
    be60:	20 81       	ld	r18, Z
    be62:	40 e0       	ldi	r20, 0x00	; 0
    be64:	50 e0       	ldi	r21, 0x00	; 0
    be66:	60 e0       	ldi	r22, 0x00	; 0
    be68:	c4 01       	movw	r24, r8
    be6a:	44 96       	adiw	r24, 0x14	; 20
    be6c:	0e 94 6c 6c 	call	0xd8d8	; 0xd8d8 <TMR_RP_init_simple>
    be70:	6a 2d       	mov	r22, r10
    be72:	7b 2d       	mov	r23, r11
    be74:	8c 2d       	mov	r24, r12
    be76:	9d 2d       	mov	r25, r13
    be78:	1d c0       	rjmp	.+58     	; 0xbeb4 <TMR_SR_cmdSetUserProfile+0x45a>
    be7a:	7b 2d       	mov	r23, r11
    be7c:	8c 2d       	mov	r24, r12
    be7e:	9d 2d       	mov	r25, r13
    be80:	19 c0       	rjmp	.+50     	; 0xbeb4 <TMR_SR_cmdSetUserProfile+0x45a>
    be82:	6a 2d       	mov	r22, r10
    be84:	7b 2d       	mov	r23, r11
    be86:	8c 2d       	mov	r24, r12
    be88:	9d 2d       	mov	r25, r13
    be8a:	14 c0       	rjmp	.+40     	; 0xbeb4 <TMR_SR_cmdSetUserProfile+0x45a>
    be8c:	71 2f       	mov	r23, r17
    be8e:	82 2f       	mov	r24, r18
    be90:	93 2f       	mov	r25, r19
    be92:	10 c0       	rjmp	.+32     	; 0xbeb4 <TMR_SR_cmdSetUserProfile+0x45a>
    be94:	71 2f       	mov	r23, r17
    be96:	82 2f       	mov	r24, r18
    be98:	93 2f       	mov	r25, r19
    be9a:	0c c0       	rjmp	.+24     	; 0xbeb4 <TMR_SR_cmdSetUserProfile+0x45a>
    be9c:	71 2f       	mov	r23, r17
    be9e:	82 2f       	mov	r24, r18
    bea0:	93 2f       	mov	r25, r19
    bea2:	08 c0       	rjmp	.+16     	; 0xbeb4 <TMR_SR_cmdSetUserProfile+0x45a>
    bea4:	71 2f       	mov	r23, r17
    bea6:	82 2f       	mov	r24, r18
    bea8:	93 2f       	mov	r25, r19
    beaa:	04 c0       	rjmp	.+8      	; 0xbeb4 <TMR_SR_cmdSetUserProfile+0x45a>
    beac:	6a 2d       	mov	r22, r10
    beae:	7b 2d       	mov	r23, r11
    beb0:	8c 2d       	mov	r24, r12
    beb2:	9d 2d       	mov	r25, r13
    beb4:	cc 59       	subi	r28, 0x9C	; 156
    beb6:	dd 4f       	sbci	r29, 0xFD	; 253
    beb8:	0f b6       	in	r0, 0x3f	; 63
    beba:	f8 94       	cli
    bebc:	de bf       	out	0x3e, r29	; 62
    bebe:	0f be       	out	0x3f, r0	; 63
    bec0:	cd bf       	out	0x3d, r28	; 61
    bec2:	df 91       	pop	r29
    bec4:	cf 91       	pop	r28
    bec6:	1f 91       	pop	r17
    bec8:	0f 91       	pop	r16
    beca:	ff 90       	pop	r15
    becc:	ef 90       	pop	r14
    bece:	df 90       	pop	r13
    bed0:	cf 90       	pop	r12
    bed2:	bf 90       	pop	r11
    bed4:	af 90       	pop	r10
    bed6:	9f 90       	pop	r9
    bed8:	8f 90       	pop	r8
    beda:	7f 90       	pop	r7
    bedc:	6f 90       	pop	r6
    bede:	5f 90       	pop	r5
    bee0:	08 95       	ret

0000bee2 <TMR_SR_cmdMultipleProtocolSearch>:
    bee2:	3f 92       	push	r3
    bee4:	4f 92       	push	r4
    bee6:	5f 92       	push	r5
    bee8:	6f 92       	push	r6
    beea:	7f 92       	push	r7
    beec:	8f 92       	push	r8
    beee:	9f 92       	push	r9
    bef0:	af 92       	push	r10
    bef2:	bf 92       	push	r11
    bef4:	cf 92       	push	r12
    bef6:	df 92       	push	r13
    bef8:	ef 92       	push	r14
    befa:	ff 92       	push	r15
    befc:	0f 93       	push	r16
    befe:	1f 93       	push	r17
    bf00:	cf 93       	push	r28
    bf02:	df 93       	push	r29
    bf04:	cd b7       	in	r28, 0x3d	; 61
    bf06:	de b7       	in	r29, 0x3e	; 62
    bf08:	c2 50       	subi	r28, 0x02	; 2
    bf0a:	d1 40       	sbci	r29, 0x01	; 1
    bf0c:	0f b6       	in	r0, 0x3f	; 63
    bf0e:	f8 94       	cli
    bf10:	de bf       	out	0x3e, r29	; 62
    bf12:	0f be       	out	0x3f, r0	; 63
    bf14:	cd bf       	out	0x3d, r28	; 61
    bf16:	4c 01       	movw	r8, r24
    bf18:	36 2e       	mov	r3, r22
    bf1a:	36 01       	movw	r6, r12
    bf1c:	25 01       	movw	r4, r10
    bf1e:	f5 01       	movw	r30, r10
    bf20:	10 82       	st	Z, r1
    bf22:	11 82       	std	Z+1, r1	; 0x01
    bf24:	12 82       	std	Z+2, r1	; 0x02
    bf26:	13 82       	std	Z+3, r1	; 0x03
    bf28:	56 01       	movw	r10, r12
    bf2a:	67 01       	movw	r12, r14
    bf2c:	78 01       	movw	r14, r16
    bf2e:	89 01       	movw	r16, r18
    bf30:	9a 01       	movw	r18, r20
    bf32:	46 2f       	mov	r20, r22
    bf34:	be 01       	movw	r22, r28
    bf36:	6f 5f       	subi	r22, 0xFF	; 255
    bf38:	7f 4f       	sbci	r23, 0xFF	; 255
    bf3a:	cc da       	rcall	.-2664   	; 0xb4d4 <TMR_SR_msgSetupMultipleProtocolSearch>
    bf3c:	61 15       	cp	r22, r1
    bf3e:	71 05       	cpc	r23, r1
    bf40:	81 05       	cpc	r24, r1
    bf42:	91 05       	cpc	r25, r1
    bf44:	09 f0       	breq	.+2      	; 0xbf48 <TMR_SR_cmdMultipleProtocolSearch+0x66>
    bf46:	bf c0       	rjmp	.+382    	; 0xc0c6 <TMR_SR_cmdMultipleProtocolSearch+0x1e4>
    bf48:	f2 e2       	ldi	r31, 0x22	; 34
    bf4a:	3f 12       	cpse	r3, r31
    bf4c:	c0 c0       	rjmp	.+384    	; 0xc0ce <TMR_SR_cmdMultipleProtocolSearch+0x1ec>
    bf4e:	f4 01       	movw	r30, r8
    bf50:	e0 54       	subi	r30, 0x40	; 64
    bf52:	fb 4f       	sbci	r31, 0xFB	; 251
    bf54:	30 82       	st	Z, r3
    bf56:	ea 54       	subi	r30, 0x4A	; 74
    bf58:	f4 40       	sbci	r31, 0x04	; 4
    bf5a:	80 81       	ld	r24, Z
    bf5c:	88 23       	and	r24, r24
    bf5e:	29 f1       	breq	.+74     	; 0xbfaa <TMR_SR_cmdMultipleProtocolSearch+0xc8>
    bf60:	83 01       	movw	r16, r6
    bf62:	20 e0       	ldi	r18, 0x00	; 0
    bf64:	30 e0       	ldi	r19, 0x00	; 0
    bf66:	ae 01       	movw	r20, r28
    bf68:	4f 5f       	subi	r20, 0xFF	; 255
    bf6a:	5e 4f       	sbci	r21, 0xFE	; 254
    bf6c:	be 01       	movw	r22, r28
    bf6e:	6f 5f       	subi	r22, 0xFF	; 255
    bf70:	7f 4f       	sbci	r23, 0xFF	; 255
    bf72:	c4 01       	movw	r24, r8
    bf74:	0e 94 cf 32 	call	0x659e	; 0x659e <TMR_SR_sendMessage>
    bf78:	61 15       	cp	r22, r1
    bf7a:	71 05       	cpc	r23, r1
    bf7c:	81 05       	cpc	r24, r1
    bf7e:	91 05       	cpc	r25, r1
    bf80:	21 f0       	breq	.+8      	; 0xbf8a <TMR_SR_cmdMultipleProtocolSearch+0xa8>
    bf82:	46 2f       	mov	r20, r22
    bf84:	37 2f       	mov	r19, r23
    bf86:	28 2f       	mov	r18, r24
    bf88:	b0 c0       	rjmp	.+352    	; 0xc0ea <TMR_SR_cmdMultipleProtocolSearch+0x208>
    bf8a:	f4 01       	movw	r30, r8
    bf8c:	e5 58       	subi	r30, 0x85	; 133
    bf8e:	fe 4f       	sbci	r31, 0xFE	; 254
    bf90:	81 e0       	ldi	r24, 0x01	; 1
    bf92:	80 83       	st	Z, r24
    bf94:	ef 5b       	subi	r30, 0xBF	; 191
    bf96:	fd 4f       	sbci	r31, 0xFD	; 253
    bf98:	81 e0       	ldi	r24, 0x01	; 1
    bf9a:	90 e0       	ldi	r25, 0x00	; 0
    bf9c:	91 83       	std	Z+1, r25	; 0x01
    bf9e:	80 83       	st	Z, r24
    bfa0:	40 e0       	ldi	r20, 0x00	; 0
    bfa2:	30 e0       	ldi	r19, 0x00	; 0
    bfa4:	20 e0       	ldi	r18, 0x00	; 0
    bfa6:	90 e0       	ldi	r25, 0x00	; 0
    bfa8:	a0 c0       	rjmp	.+320    	; 0xc0ea <TMR_SR_cmdMultipleProtocolSearch+0x208>
    bfaa:	93 01       	movw	r18, r6
    bfac:	40 e0       	ldi	r20, 0x00	; 0
    bfae:	50 e0       	ldi	r21, 0x00	; 0
    bfb0:	be 01       	movw	r22, r28
    bfb2:	6f 5f       	subi	r22, 0xFF	; 255
    bfb4:	7f 4f       	sbci	r23, 0xFF	; 255
    bfb6:	c4 01       	movw	r24, r8
    bfb8:	0e 94 f1 35 	call	0x6be2	; 0x6be2 <TMR_SR_sendTimeout>
    bfbc:	6b 01       	movw	r12, r22
    bfbe:	7c 01       	movw	r14, r24
    bfc0:	c1 14       	cp	r12, r1
    bfc2:	84 e0       	ldi	r24, 0x04	; 4
    bfc4:	d8 06       	cpc	r13, r24
    bfc6:	e1 04       	cpc	r14, r1
    bfc8:	82 e0       	ldi	r24, 0x02	; 2
    bfca:	f8 06       	cpc	r15, r24
    bfcc:	79 f4       	brne	.+30     	; 0xbfec <TMR_SR_cmdMultipleProtocolSearch+0x10a>
    bfce:	f2 01       	movw	r30, r4
    bfd0:	10 82       	st	Z, r1
    bfd2:	11 82       	std	Z+1, r1	; 0x01
    bfd4:	12 82       	std	Z+2, r1	; 0x02
    bfd6:	13 82       	std	Z+3, r1	; 0x03
    bfd8:	f4 01       	movw	r30, r8
    bfda:	e4 54       	subi	r30, 0x44	; 68
    bfdc:	fc 4f       	sbci	r31, 0xFC	; 252
    bfde:	11 82       	std	Z+1, r1	; 0x01
    bfe0:	10 82       	st	Z, r1
    bfe2:	4c 2d       	mov	r20, r12
    bfe4:	3d 2d       	mov	r19, r13
    bfe6:	2e 2d       	mov	r18, r14
    bfe8:	9f 2d       	mov	r25, r15
    bfea:	7f c0       	rjmp	.+254    	; 0xc0ea <TMR_SR_cmdMultipleProtocolSearch+0x208>
    bfec:	f1 e0       	ldi	r31, 0x01	; 1
    bfee:	cf 16       	cp	r12, r31
    bff0:	ff e7       	ldi	r31, 0x7F	; 127
    bff2:	df 06       	cpc	r13, r31
    bff4:	e1 04       	cpc	r14, r1
    bff6:	f2 e0       	ldi	r31, 0x02	; 2
    bff8:	ff 06       	cpc	r15, r31
    bffa:	09 f4       	brne	.+2      	; 0xbffe <TMR_SR_cmdMultipleProtocolSearch+0x11c>
    bffc:	6d c0       	rjmp	.+218    	; 0xc0d8 <TMR_SR_cmdMultipleProtocolSearch+0x1f6>
    bffe:	81 e0       	ldi	r24, 0x01	; 1
    c000:	c8 16       	cp	r12, r24
    c002:	d1 04       	cpc	r13, r1
    c004:	e1 04       	cpc	r14, r1
    c006:	f8 06       	cpc	r15, r24
    c008:	09 f4       	brne	.+2      	; 0xc00c <TMR_SR_cmdMultipleProtocolSearch+0x12a>
    c00a:	6b c0       	rjmp	.+214    	; 0xc0e2 <TMR_SR_cmdMultipleProtocolSearch+0x200>
    c00c:	c1 14       	cp	r12, r1
    c00e:	d1 04       	cpc	r13, r1
    c010:	e1 04       	cpc	r14, r1
    c012:	f1 04       	cpc	r15, r1
    c014:	39 f1       	breq	.+78     	; 0xc064 <TMR_SR_cmdMultipleProtocolSearch+0x182>
    c016:	be 01       	movw	r22, r28
    c018:	6f 5f       	subi	r22, 0xFF	; 255
    c01a:	7e 4f       	sbci	r23, 0xFE	; 254
    c01c:	c4 01       	movw	r24, r8
    c01e:	0e 94 d1 43 	call	0x87a2	; 0x87a2 <TMR_SR_cmdGetTagsRemaining>
    c022:	61 15       	cp	r22, r1
    c024:	71 05       	cpc	r23, r1
    c026:	81 05       	cpc	r24, r1
    c028:	91 05       	cpc	r25, r1
    c02a:	c1 f4       	brne	.+48     	; 0xc05c <TMR_SR_cmdMultipleProtocolSearch+0x17a>
    c02c:	cf 5f       	subi	r28, 0xFF	; 255
    c02e:	de 4f       	sbci	r29, 0xFE	; 254
    c030:	88 81       	ld	r24, Y
    c032:	99 81       	ldd	r25, Y+1	; 0x01
    c034:	c1 50       	subi	r28, 0x01	; 1
    c036:	d1 40       	sbci	r29, 0x01	; 1
    c038:	ac 01       	movw	r20, r24
    c03a:	60 e0       	ldi	r22, 0x00	; 0
    c03c:	70 e0       	ldi	r23, 0x00	; 0
    c03e:	f2 01       	movw	r30, r4
    c040:	40 83       	st	Z, r20
    c042:	51 83       	std	Z+1, r21	; 0x01
    c044:	62 83       	std	Z+2, r22	; 0x02
    c046:	73 83       	std	Z+3, r23	; 0x03
    c048:	f4 01       	movw	r30, r8
    c04a:	e4 54       	subi	r30, 0x44	; 68
    c04c:	fc 4f       	sbci	r31, 0xFC	; 252
    c04e:	91 83       	std	Z+1, r25	; 0x01
    c050:	80 83       	st	Z, r24
    c052:	4c 2d       	mov	r20, r12
    c054:	3d 2d       	mov	r19, r13
    c056:	2e 2d       	mov	r18, r14
    c058:	9f 2d       	mov	r25, r15
    c05a:	47 c0       	rjmp	.+142    	; 0xc0ea <TMR_SR_cmdMultipleProtocolSearch+0x208>
    c05c:	46 2f       	mov	r20, r22
    c05e:	37 2f       	mov	r19, r23
    c060:	28 2f       	mov	r18, r24
    c062:	43 c0       	rjmp	.+134    	; 0xc0ea <TMR_SR_cmdMultipleProtocolSearch+0x208>
    c064:	8a 85       	ldd	r24, Y+10	; 0x0a
    c066:	90 e0       	ldi	r25, 0x00	; 0
    c068:	a0 e0       	ldi	r26, 0x00	; 0
    c06a:	b0 e0       	ldi	r27, 0x00	; 0
    c06c:	78 2f       	mov	r23, r24
    c06e:	66 27       	eor	r22, r22
    c070:	55 27       	eor	r21, r21
    c072:	44 27       	eor	r20, r20
    c074:	9b 85       	ldd	r25, Y+11	; 0x0b
    c076:	89 2f       	mov	r24, r25
    c078:	90 e0       	ldi	r25, 0x00	; 0
    c07a:	a0 e0       	ldi	r26, 0x00	; 0
    c07c:	b0 e0       	ldi	r27, 0x00	; 0
    c07e:	dc 01       	movw	r26, r24
    c080:	99 27       	eor	r25, r25
    c082:	88 27       	eor	r24, r24
    c084:	84 2b       	or	r24, r20
    c086:	95 2b       	or	r25, r21
    c088:	a6 2b       	or	r26, r22
    c08a:	b7 2b       	or	r27, r23
    c08c:	4c 85       	ldd	r20, Y+12	; 0x0c
    c08e:	50 e0       	ldi	r21, 0x00	; 0
    c090:	60 e0       	ldi	r22, 0x00	; 0
    c092:	70 e0       	ldi	r23, 0x00	; 0
    c094:	76 2f       	mov	r23, r22
    c096:	65 2f       	mov	r22, r21
    c098:	54 2f       	mov	r21, r20
    c09a:	44 27       	eor	r20, r20
    c09c:	84 2b       	or	r24, r20
    c09e:	95 2b       	or	r25, r21
    c0a0:	a6 2b       	or	r26, r22
    c0a2:	b7 2b       	or	r27, r23
    c0a4:	2d 85       	ldd	r18, Y+13	; 0x0d
    c0a6:	82 2b       	or	r24, r18
    c0a8:	f2 01       	movw	r30, r4
    c0aa:	80 83       	st	Z, r24
    c0ac:	91 83       	std	Z+1, r25	; 0x01
    c0ae:	a2 83       	std	Z+2, r26	; 0x02
    c0b0:	b3 83       	std	Z+3, r27	; 0x03
    c0b2:	f4 01       	movw	r30, r8
    c0b4:	e4 54       	subi	r30, 0x44	; 68
    c0b6:	fc 4f       	sbci	r31, 0xFC	; 252
    c0b8:	91 83       	std	Z+1, r25	; 0x01
    c0ba:	80 83       	st	Z, r24
    c0bc:	40 e0       	ldi	r20, 0x00	; 0
    c0be:	30 e0       	ldi	r19, 0x00	; 0
    c0c0:	20 e0       	ldi	r18, 0x00	; 0
    c0c2:	90 e0       	ldi	r25, 0x00	; 0
    c0c4:	12 c0       	rjmp	.+36     	; 0xc0ea <TMR_SR_cmdMultipleProtocolSearch+0x208>
    c0c6:	46 2f       	mov	r20, r22
    c0c8:	37 2f       	mov	r19, r23
    c0ca:	28 2f       	mov	r18, r24
    c0cc:	0e c0       	rjmp	.+28     	; 0xc0ea <TMR_SR_cmdMultipleProtocolSearch+0x208>
    c0ce:	40 e0       	ldi	r20, 0x00	; 0
    c0d0:	30 e0       	ldi	r19, 0x00	; 0
    c0d2:	20 e0       	ldi	r18, 0x00	; 0
    c0d4:	90 e0       	ldi	r25, 0x00	; 0
    c0d6:	09 c0       	rjmp	.+18     	; 0xc0ea <TMR_SR_cmdMultipleProtocolSearch+0x208>
    c0d8:	4c 2d       	mov	r20, r12
    c0da:	3d 2d       	mov	r19, r13
    c0dc:	2e 2d       	mov	r18, r14
    c0de:	9f 2d       	mov	r25, r15
    c0e0:	04 c0       	rjmp	.+8      	; 0xc0ea <TMR_SR_cmdMultipleProtocolSearch+0x208>
    c0e2:	4c 2d       	mov	r20, r12
    c0e4:	3d 2d       	mov	r19, r13
    c0e6:	2e 2d       	mov	r18, r14
    c0e8:	9f 2d       	mov	r25, r15
    c0ea:	64 2f       	mov	r22, r20
    c0ec:	73 2f       	mov	r23, r19
    c0ee:	82 2f       	mov	r24, r18
    c0f0:	ce 5f       	subi	r28, 0xFE	; 254
    c0f2:	de 4f       	sbci	r29, 0xFE	; 254
    c0f4:	0f b6       	in	r0, 0x3f	; 63
    c0f6:	f8 94       	cli
    c0f8:	de bf       	out	0x3e, r29	; 62
    c0fa:	0f be       	out	0x3f, r0	; 63
    c0fc:	cd bf       	out	0x3d, r28	; 61
    c0fe:	df 91       	pop	r29
    c100:	cf 91       	pop	r28
    c102:	1f 91       	pop	r17
    c104:	0f 91       	pop	r16
    c106:	ff 90       	pop	r15
    c108:	ef 90       	pop	r14
    c10a:	df 90       	pop	r13
    c10c:	cf 90       	pop	r12
    c10e:	bf 90       	pop	r11
    c110:	af 90       	pop	r10
    c112:	9f 90       	pop	r9
    c114:	8f 90       	pop	r8
    c116:	7f 90       	pop	r7
    c118:	6f 90       	pop	r6
    c11a:	5f 90       	pop	r5
    c11c:	4f 90       	pop	r4
    c11e:	3f 90       	pop	r3
    c120:	08 95       	ret

0000c122 <TMR_SR_cmdGetAvailableProtocols>:
    c122:	8f 92       	push	r8
    c124:	9f 92       	push	r9
    c126:	af 92       	push	r10
    c128:	bf 92       	push	r11
    c12a:	ef 92       	push	r14
    c12c:	ff 92       	push	r15
    c12e:	0f 93       	push	r16
    c130:	1f 93       	push	r17
    c132:	cf 93       	push	r28
    c134:	df 93       	push	r29
    c136:	cd b7       	in	r28, 0x3d	; 61
    c138:	de b7       	in	r29, 0x3e	; 62
    c13a:	da 95       	dec	r29
    c13c:	0f b6       	in	r0, 0x3f	; 63
    c13e:	f8 94       	cli
    c140:	de bf       	out	0x3e, r29	; 62
    c142:	0f be       	out	0x3f, r0	; 63
    c144:	cd bf       	out	0x3d, r28	; 61
    c146:	7c 01       	movw	r14, r24
    c148:	8b 01       	movw	r16, r22
    c14a:	40 e7       	ldi	r20, 0x70	; 112
    c14c:	be 01       	movw	r22, r28
    c14e:	6f 5f       	subi	r22, 0xFF	; 255
    c150:	7f 4f       	sbci	r23, 0xFF	; 255
    c152:	0e 94 9b 36 	call	0x6d36	; 0x6d36 <TMR_SR_callSendCmd>
    c156:	61 15       	cp	r22, r1
    c158:	71 05       	cpc	r23, r1
    c15a:	81 05       	cpc	r24, r1
    c15c:	91 05       	cpc	r25, r1
    c15e:	09 f0       	breq	.+2      	; 0xc162 <TMR_SR_cmdGetAvailableProtocols+0x40>
    c160:	5f c0       	rjmp	.+190    	; 0xc220 <TMR_SR_cmdGetAvailableProtocols+0xfe>
    c162:	d8 01       	movw	r26, r16
    c164:	13 96       	adiw	r26, 0x03	; 3
    c166:	1c 92       	st	X, r1
    c168:	90 e0       	ldi	r25, 0x00	; 0
    c16a:	21 c0       	rjmp	.+66     	; 0xc1ae <TMR_SR_cmdGetAvailableProtocols+0x8c>
    c16c:	d8 01       	movw	r26, r16
    c16e:	13 96       	adiw	r26, 0x03	; 3
    c170:	ec 91       	ld	r30, X
    c172:	13 97       	sbiw	r26, 0x03	; 3
    c174:	81 e0       	ldi	r24, 0x01	; 1
    c176:	8e 0f       	add	r24, r30
    c178:	13 96       	adiw	r26, 0x03	; 3
    c17a:	8c 93       	st	X, r24
    c17c:	13 97       	sbiw	r26, 0x03	; 3
    c17e:	12 96       	adiw	r26, 0x02	; 2
    c180:	2c 91       	ld	r18, X
    c182:	12 97       	sbiw	r26, 0x02	; 2
    c184:	28 17       	cp	r18, r24
    c186:	90 f0       	brcs	.+36     	; 0xc1ac <TMR_SR_cmdGetAvailableProtocols+0x8a>
    c188:	2d 91       	ld	r18, X+
    c18a:	3c 91       	ld	r19, X
    c18c:	e8 2f       	mov	r30, r24
    c18e:	f0 e0       	ldi	r31, 0x00	; 0
    c190:	31 97       	sbiw	r30, 0x01	; 1
    c192:	e2 0f       	add	r30, r18
    c194:	f3 1f       	adc	r31, r19
    c196:	a9 2f       	mov	r26, r25
    c198:	b0 e0       	ldi	r27, 0x00	; 0
    c19a:	16 96       	adiw	r26, 0x06	; 6
    c19c:	21 e0       	ldi	r18, 0x01	; 1
    c19e:	30 e0       	ldi	r19, 0x00	; 0
    c1a0:	2c 0f       	add	r18, r28
    c1a2:	3d 1f       	adc	r19, r29
    c1a4:	a2 0f       	add	r26, r18
    c1a6:	b3 1f       	adc	r27, r19
    c1a8:	8c 91       	ld	r24, X
    c1aa:	80 83       	st	Z, r24
    c1ac:	9e 5f       	subi	r25, 0xFE	; 254
    c1ae:	8a 81       	ldd	r24, Y+2	; 0x02
    c1b0:	98 17       	cp	r25, r24
    c1b2:	e0 f2       	brcs	.-72     	; 0xc16c <TMR_SR_cmdGetAvailableProtocols+0x4a>
    c1b4:	f7 01       	movw	r30, r14
    c1b6:	e3 58       	subi	r30, 0x83	; 131
    c1b8:	fc 4f       	sbci	r31, 0xFC	; 252
    c1ba:	10 82       	st	Z, r1
    c1bc:	11 82       	std	Z+1, r1	; 0x01
    c1be:	12 82       	std	Z+2, r1	; 0x02
    c1c0:	13 82       	std	Z+3, r1	; 0x03
    c1c2:	40 e0       	ldi	r20, 0x00	; 0
    c1c4:	24 c0       	rjmp	.+72     	; 0xc20e <TMR_SR_cmdGetAvailableProtocols+0xec>
    c1c6:	d8 01       	movw	r26, r16
    c1c8:	ed 91       	ld	r30, X+
    c1ca:	fc 91       	ld	r31, X
    c1cc:	e4 0f       	add	r30, r20
    c1ce:	f1 1d       	adc	r31, r1
    c1d0:	20 81       	ld	r18, Z
    c1d2:	30 e0       	ldi	r19, 0x00	; 0
    c1d4:	21 50       	subi	r18, 0x01	; 1
    c1d6:	31 09       	sbc	r19, r1
    c1d8:	81 e0       	ldi	r24, 0x01	; 1
    c1da:	90 e0       	ldi	r25, 0x00	; 0
    c1dc:	02 c0       	rjmp	.+4      	; 0xc1e2 <TMR_SR_cmdGetAvailableProtocols+0xc0>
    c1de:	88 0f       	add	r24, r24
    c1e0:	99 1f       	adc	r25, r25
    c1e2:	2a 95       	dec	r18
    c1e4:	e2 f7       	brpl	.-8      	; 0xc1de <TMR_SR_cmdGetAvailableProtocols+0xbc>
    c1e6:	f7 01       	movw	r30, r14
    c1e8:	e3 58       	subi	r30, 0x83	; 131
    c1ea:	fc 4f       	sbci	r31, 0xFC	; 252
    c1ec:	09 2e       	mov	r0, r25
    c1ee:	00 0c       	add	r0, r0
    c1f0:	aa 0b       	sbc	r26, r26
    c1f2:	bb 0b       	sbc	r27, r27
    c1f4:	80 80       	ld	r8, Z
    c1f6:	91 80       	ldd	r9, Z+1	; 0x01
    c1f8:	a2 80       	ldd	r10, Z+2	; 0x02
    c1fa:	b3 80       	ldd	r11, Z+3	; 0x03
    c1fc:	88 29       	or	r24, r8
    c1fe:	99 29       	or	r25, r9
    c200:	aa 29       	or	r26, r10
    c202:	bb 29       	or	r27, r11
    c204:	80 83       	st	Z, r24
    c206:	91 83       	std	Z+1, r25	; 0x01
    c208:	a2 83       	std	Z+2, r26	; 0x02
    c20a:	b3 83       	std	Z+3, r27	; 0x03
    c20c:	4f 5f       	subi	r20, 0xFF	; 255
    c20e:	f8 01       	movw	r30, r16
    c210:	83 81       	ldd	r24, Z+3	; 0x03
    c212:	48 17       	cp	r20, r24
    c214:	c0 f2       	brcs	.-80     	; 0xc1c6 <TMR_SR_cmdGetAvailableProtocols+0xa4>
    c216:	40 e0       	ldi	r20, 0x00	; 0
    c218:	30 e0       	ldi	r19, 0x00	; 0
    c21a:	20 e0       	ldi	r18, 0x00	; 0
    c21c:	90 e0       	ldi	r25, 0x00	; 0
    c21e:	03 c0       	rjmp	.+6      	; 0xc226 <TMR_SR_cmdGetAvailableProtocols+0x104>
    c220:	46 2f       	mov	r20, r22
    c222:	37 2f       	mov	r19, r23
    c224:	28 2f       	mov	r18, r24
    c226:	64 2f       	mov	r22, r20
    c228:	73 2f       	mov	r23, r19
    c22a:	82 2f       	mov	r24, r18
    c22c:	d3 95       	inc	r29
    c22e:	0f b6       	in	r0, 0x3f	; 63
    c230:	f8 94       	cli
    c232:	de bf       	out	0x3e, r29	; 62
    c234:	0f be       	out	0x3f, r0	; 63
    c236:	cd bf       	out	0x3d, r28	; 61
    c238:	df 91       	pop	r29
    c23a:	cf 91       	pop	r28
    c23c:	1f 91       	pop	r17
    c23e:	0f 91       	pop	r16
    c240:	ff 90       	pop	r15
    c242:	ef 90       	pop	r14
    c244:	bf 90       	pop	r11
    c246:	af 90       	pop	r10
    c248:	9f 90       	pop	r9
    c24a:	8f 90       	pop	r8
    c24c:	08 95       	ret

0000c24e <TMR_SR_cmdGetAvailableRegions>:
    c24e:	0f 93       	push	r16
    c250:	1f 93       	push	r17
    c252:	cf 93       	push	r28
    c254:	df 93       	push	r29
    c256:	cd b7       	in	r28, 0x3d	; 61
    c258:	de b7       	in	r29, 0x3e	; 62
    c25a:	da 95       	dec	r29
    c25c:	0f b6       	in	r0, 0x3f	; 63
    c25e:	f8 94       	cli
    c260:	de bf       	out	0x3e, r29	; 62
    c262:	0f be       	out	0x3f, r0	; 63
    c264:	cd bf       	out	0x3d, r28	; 61
    c266:	8b 01       	movw	r16, r22
    c268:	41 e7       	ldi	r20, 0x71	; 113
    c26a:	be 01       	movw	r22, r28
    c26c:	6f 5f       	subi	r22, 0xFF	; 255
    c26e:	7f 4f       	sbci	r23, 0xFF	; 255
    c270:	0e 94 9b 36 	call	0x6d36	; 0x6d36 <TMR_SR_callSendCmd>
    c274:	61 15       	cp	r22, r1
    c276:	71 05       	cpc	r23, r1
    c278:	81 05       	cpc	r24, r1
    c27a:	91 05       	cpc	r25, r1
    c27c:	71 f5       	brne	.+92     	; 0xc2da <TMR_SR_cmdGetAvailableRegions+0x8c>
    c27e:	d8 01       	movw	r26, r16
    c280:	13 96       	adiw	r26, 0x03	; 3
    c282:	1c 92       	st	X, r1
    c284:	90 e0       	ldi	r25, 0x00	; 0
    c286:	21 c0       	rjmp	.+66     	; 0xc2ca <TMR_SR_cmdGetAvailableRegions+0x7c>
    c288:	d8 01       	movw	r26, r16
    c28a:	13 96       	adiw	r26, 0x03	; 3
    c28c:	ec 91       	ld	r30, X
    c28e:	13 97       	sbiw	r26, 0x03	; 3
    c290:	81 e0       	ldi	r24, 0x01	; 1
    c292:	8e 0f       	add	r24, r30
    c294:	13 96       	adiw	r26, 0x03	; 3
    c296:	8c 93       	st	X, r24
    c298:	13 97       	sbiw	r26, 0x03	; 3
    c29a:	12 96       	adiw	r26, 0x02	; 2
    c29c:	2c 91       	ld	r18, X
    c29e:	12 97       	sbiw	r26, 0x02	; 2
    c2a0:	28 17       	cp	r18, r24
    c2a2:	90 f0       	brcs	.+36     	; 0xc2c8 <TMR_SR_cmdGetAvailableRegions+0x7a>
    c2a4:	2d 91       	ld	r18, X+
    c2a6:	3c 91       	ld	r19, X
    c2a8:	e8 2f       	mov	r30, r24
    c2aa:	f0 e0       	ldi	r31, 0x00	; 0
    c2ac:	31 97       	sbiw	r30, 0x01	; 1
    c2ae:	e2 0f       	add	r30, r18
    c2b0:	f3 1f       	adc	r31, r19
    c2b2:	a9 2f       	mov	r26, r25
    c2b4:	b0 e0       	ldi	r27, 0x00	; 0
    c2b6:	15 96       	adiw	r26, 0x05	; 5
    c2b8:	21 e0       	ldi	r18, 0x01	; 1
    c2ba:	30 e0       	ldi	r19, 0x00	; 0
    c2bc:	2c 0f       	add	r18, r28
    c2be:	3d 1f       	adc	r19, r29
    c2c0:	a2 0f       	add	r26, r18
    c2c2:	b3 1f       	adc	r27, r19
    c2c4:	8c 91       	ld	r24, X
    c2c6:	80 83       	st	Z, r24
    c2c8:	9f 5f       	subi	r25, 0xFF	; 255
    c2ca:	8a 81       	ldd	r24, Y+2	; 0x02
    c2cc:	98 17       	cp	r25, r24
    c2ce:	e0 f2       	brcs	.-72     	; 0xc288 <TMR_SR_cmdGetAvailableRegions+0x3a>
    c2d0:	40 e0       	ldi	r20, 0x00	; 0
    c2d2:	30 e0       	ldi	r19, 0x00	; 0
    c2d4:	20 e0       	ldi	r18, 0x00	; 0
    c2d6:	90 e0       	ldi	r25, 0x00	; 0
    c2d8:	03 c0       	rjmp	.+6      	; 0xc2e0 <TMR_SR_cmdGetAvailableRegions+0x92>
    c2da:	46 2f       	mov	r20, r22
    c2dc:	37 2f       	mov	r19, r23
    c2de:	28 2f       	mov	r18, r24
    c2e0:	64 2f       	mov	r22, r20
    c2e2:	73 2f       	mov	r23, r19
    c2e4:	82 2f       	mov	r24, r18
    c2e6:	d3 95       	inc	r29
    c2e8:	0f b6       	in	r0, 0x3f	; 63
    c2ea:	f8 94       	cli
    c2ec:	de bf       	out	0x3e, r29	; 62
    c2ee:	0f be       	out	0x3f, r0	; 63
    c2f0:	cd bf       	out	0x3d, r28	; 61
    c2f2:	df 91       	pop	r29
    c2f4:	cf 91       	pop	r28
    c2f6:	1f 91       	pop	r17
    c2f8:	0f 91       	pop	r16
    c2fa:	08 95       	ret

0000c2fc <TMR_SR_cmdGetTemperature>:
    c2fc:	0f 93       	push	r16
    c2fe:	1f 93       	push	r17
    c300:	cf 93       	push	r28
    c302:	df 93       	push	r29
    c304:	cd b7       	in	r28, 0x3d	; 61
    c306:	de b7       	in	r29, 0x3e	; 62
    c308:	da 95       	dec	r29
    c30a:	0f b6       	in	r0, 0x3f	; 63
    c30c:	f8 94       	cli
    c30e:	de bf       	out	0x3e, r29	; 62
    c310:	0f be       	out	0x3f, r0	; 63
    c312:	cd bf       	out	0x3d, r28	; 61
    c314:	8b 01       	movw	r16, r22
    c316:	42 e7       	ldi	r20, 0x72	; 114
    c318:	be 01       	movw	r22, r28
    c31a:	6f 5f       	subi	r22, 0xFF	; 255
    c31c:	7f 4f       	sbci	r23, 0xFF	; 255
    c31e:	0e 94 9b 36 	call	0x6d36	; 0x6d36 <TMR_SR_callSendCmd>
    c322:	61 15       	cp	r22, r1
    c324:	71 05       	cpc	r23, r1
    c326:	81 05       	cpc	r24, r1
    c328:	91 05       	cpc	r25, r1
    c32a:	41 f4       	brne	.+16     	; 0xc33c <TMR_SR_cmdGetTemperature+0x40>
    c32c:	8e 81       	ldd	r24, Y+6	; 0x06
    c32e:	f8 01       	movw	r30, r16
    c330:	80 83       	st	Z, r24
    c332:	40 e0       	ldi	r20, 0x00	; 0
    c334:	30 e0       	ldi	r19, 0x00	; 0
    c336:	20 e0       	ldi	r18, 0x00	; 0
    c338:	90 e0       	ldi	r25, 0x00	; 0
    c33a:	03 c0       	rjmp	.+6      	; 0xc342 <TMR_SR_cmdGetTemperature+0x46>
    c33c:	46 2f       	mov	r20, r22
    c33e:	37 2f       	mov	r19, r23
    c340:	28 2f       	mov	r18, r24
    c342:	64 2f       	mov	r22, r20
    c344:	73 2f       	mov	r23, r19
    c346:	82 2f       	mov	r24, r18
    c348:	d3 95       	inc	r29
    c34a:	0f b6       	in	r0, 0x3f	; 63
    c34c:	f8 94       	cli
    c34e:	de bf       	out	0x3e, r29	; 62
    c350:	0f be       	out	0x3f, r0	; 63
    c352:	cd bf       	out	0x3d, r28	; 61
    c354:	df 91       	pop	r29
    c356:	cf 91       	pop	r28
    c358:	1f 91       	pop	r17
    c35a:	0f 91       	pop	r16
    c35c:	08 95       	ret

0000c35e <TMR_SR_cmdGetReaderStatistics>:
    c35e:	8f 92       	push	r8
    c360:	9f 92       	push	r9
    c362:	af 92       	push	r10
    c364:	bf 92       	push	r11
    c366:	cf 92       	push	r12
    c368:	df 92       	push	r13
    c36a:	ef 92       	push	r14
    c36c:	ff 92       	push	r15
    c36e:	0f 93       	push	r16
    c370:	1f 93       	push	r17
    c372:	cf 93       	push	r28
    c374:	df 93       	push	r29
    c376:	cd b7       	in	r28, 0x3d	; 61
    c378:	de b7       	in	r29, 0x3e	; 62
    c37a:	da 95       	dec	r29
    c37c:	0f b6       	in	r0, 0x3f	; 63
    c37e:	f8 94       	cli
    c380:	de bf       	out	0x3e, r29	; 62
    c382:	0f be       	out	0x3f, r0	; 63
    c384:	cd bf       	out	0x3d, r28	; 61
    c386:	7c 01       	movw	r14, r24
    c388:	8a 01       	movw	r16, r20
    c38a:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    c38e:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    c392:	2c e6       	ldi	r18, 0x6C	; 108
    c394:	2b 83       	std	Y+3, r18	; 0x03
    c396:	22 e0       	ldi	r18, 0x02	; 2
    c398:	2c 83       	std	Y+4, r18	; 0x04
    c39a:	03 96       	adiw	r24, 0x03	; 3
    c39c:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    c3a0:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    c3a4:	6d 83       	std	Y+5, r22	; 0x05
    c3a6:	2a 83       	std	Y+2, r18	; 0x02
    c3a8:	f7 01       	movw	r30, r14
    c3aa:	e0 52       	subi	r30, 0x20	; 32
    c3ac:	fe 4f       	sbci	r31, 0xFE	; 254
    c3ae:	20 81       	ld	r18, Z
    c3b0:	31 81       	ldd	r19, Z+1	; 0x01
    c3b2:	42 81       	ldd	r20, Z+2	; 0x02
    c3b4:	53 81       	ldd	r21, Z+3	; 0x03
    c3b6:	be 01       	movw	r22, r28
    c3b8:	6f 5f       	subi	r22, 0xFF	; 255
    c3ba:	7f 4f       	sbci	r23, 0xFF	; 255
    c3bc:	c7 01       	movw	r24, r14
    c3be:	0e 94 f1 35 	call	0x6be2	; 0x6be2 <TMR_SR_sendTimeout>
    c3c2:	61 15       	cp	r22, r1
    c3c4:	71 05       	cpc	r23, r1
    c3c6:	81 05       	cpc	r24, r1
    c3c8:	91 05       	cpc	r25, r1
    c3ca:	09 f0       	breq	.+2      	; 0xc3ce <TMR_SR_cmdGetReaderStatistics+0x70>
    c3cc:	14 c1       	rjmp	.+552    	; 0xc5f6 <TMR_SR_cmdGetReaderStatistics+0x298>
    c3ce:	01 15       	cp	r16, r1
    c3d0:	11 05       	cpc	r17, r1
    c3d2:	09 f4       	brne	.+2      	; 0xc3d6 <TMR_SR_cmdGetReaderStatistics+0x78>
    c3d4:	14 c1       	rjmp	.+552    	; 0xc5fe <TMR_SR_cmdGetReaderStatistics+0x2a0>
    c3d6:	f7 01       	movw	r30, r14
    c3d8:	ec 52       	subi	r30, 0x2C	; 44
    c3da:	fe 4f       	sbci	r31, 0xFE	; 254
    c3dc:	01 90       	ld	r0, Z+
    c3de:	f0 81       	ld	r31, Z
    c3e0:	e0 2d       	mov	r30, r0
    c3e2:	53 81       	ldd	r21, Z+3	; 0x03
    c3e4:	47 e0       	ldi	r20, 0x07	; 7
    c3e6:	f9 c0       	rjmp	.+498    	; 0xc5da <TMR_SR_cmdGetReaderStatistics+0x27c>
    c3e8:	e1 e0       	ldi	r30, 0x01	; 1
    c3ea:	f0 e0       	ldi	r31, 0x00	; 0
    c3ec:	ec 0f       	add	r30, r28
    c3ee:	fd 1f       	adc	r31, r29
    c3f0:	e2 0f       	add	r30, r18
    c3f2:	f3 1f       	adc	r31, r19
    c3f4:	80 81       	ld	r24, Z
    c3f6:	80 ff       	sbrs	r24, 0
    c3f8:	6b c0       	rjmp	.+214    	; 0xc4d0 <TMR_SR_cmdGetReaderStatistics+0x172>
    c3fa:	4e 5f       	subi	r20, 0xFE	; 254
    c3fc:	60 e0       	ldi	r22, 0x00	; 0
    c3fe:	62 c0       	rjmp	.+196    	; 0xc4c4 <TMR_SR_cmdGetReaderStatistics+0x166>
    c400:	e1 e0       	ldi	r30, 0x01	; 1
    c402:	f0 e0       	ldi	r31, 0x00	; 0
    c404:	ec 0f       	add	r30, r28
    c406:	fd 1f       	adc	r31, r29
    c408:	e4 0f       	add	r30, r20
    c40a:	f1 1d       	adc	r31, r1
    c40c:	20 81       	ld	r18, Z
    c40e:	86 2f       	mov	r24, r22
    c410:	90 e0       	ldi	r25, 0x00	; 0
    c412:	30 e0       	ldi	r19, 0x00	; 0
    c414:	21 50       	subi	r18, 0x01	; 1
    c416:	31 09       	sbc	r19, r1
    c418:	82 17       	cp	r24, r18
    c41a:	93 07       	cpc	r25, r19
    c41c:	09 f0       	breq	.+2      	; 0xc420 <TMR_SR_cmdGetReaderStatistics+0xc2>
    c41e:	46 c0       	rjmp	.+140    	; 0xc4ac <TMR_SR_cmdGetReaderStatistics+0x14e>
    c420:	4b 5f       	subi	r20, 0xFB	; 251
    c422:	24 2f       	mov	r18, r20
    c424:	30 e0       	ldi	r19, 0x00	; 0
    c426:	f9 01       	movw	r30, r18
    c428:	34 97       	sbiw	r30, 0x04	; 4
    c42a:	a1 e0       	ldi	r26, 0x01	; 1
    c42c:	b0 e0       	ldi	r27, 0x00	; 0
    c42e:	ac 0f       	add	r26, r28
    c430:	bd 1f       	adc	r27, r29
    c432:	ea 0f       	add	r30, r26
    c434:	fb 1f       	adc	r31, r27
    c436:	c0 80       	ld	r12, Z
    c438:	d1 2c       	mov	r13, r1
    c43a:	e1 2c       	mov	r14, r1
    c43c:	f1 2c       	mov	r15, r1
    c43e:	bc 2c       	mov	r11, r12
    c440:	aa 24       	eor	r10, r10
    c442:	99 24       	eor	r9, r9
    c444:	88 24       	eor	r8, r8
    c446:	f9 01       	movw	r30, r18
    c448:	33 97       	sbiw	r30, 0x03	; 3
    c44a:	ea 0f       	add	r30, r26
    c44c:	fb 1f       	adc	r31, r27
    c44e:	70 81       	ld	r23, Z
    c450:	c7 2e       	mov	r12, r23
    c452:	d1 2c       	mov	r13, r1
    c454:	e1 2c       	mov	r14, r1
    c456:	f1 2c       	mov	r15, r1
    c458:	76 01       	movw	r14, r12
    c45a:	dd 24       	eor	r13, r13
    c45c:	cc 24       	eor	r12, r12
    c45e:	c8 28       	or	r12, r8
    c460:	d9 28       	or	r13, r9
    c462:	ea 28       	or	r14, r10
    c464:	fb 28       	or	r15, r11
    c466:	f9 01       	movw	r30, r18
    c468:	32 97       	sbiw	r30, 0x02	; 2
    c46a:	ea 0f       	add	r30, r26
    c46c:	fb 1f       	adc	r31, r27
    c46e:	80 80       	ld	r8, Z
    c470:	91 2c       	mov	r9, r1
    c472:	a1 2c       	mov	r10, r1
    c474:	b1 2c       	mov	r11, r1
    c476:	ba 2c       	mov	r11, r10
    c478:	a9 2c       	mov	r10, r9
    c47a:	98 2c       	mov	r9, r8
    c47c:	88 24       	eor	r8, r8
    c47e:	c8 28       	or	r12, r8
    c480:	d9 28       	or	r13, r9
    c482:	ea 28       	or	r14, r10
    c484:	fb 28       	or	r15, r11
    c486:	21 50       	subi	r18, 0x01	; 1
    c488:	31 09       	sbc	r19, r1
    c48a:	fd 01       	movw	r30, r26
    c48c:	e2 0f       	add	r30, r18
    c48e:	f3 1f       	adc	r31, r19
    c490:	20 81       	ld	r18, Z
    c492:	c2 2a       	or	r12, r18
    c494:	88 0f       	add	r24, r24
    c496:	99 1f       	adc	r25, r25
    c498:	88 0f       	add	r24, r24
    c49a:	99 1f       	adc	r25, r25
    c49c:	f8 01       	movw	r30, r16
    c49e:	e8 0f       	add	r30, r24
    c4a0:	f9 1f       	adc	r31, r25
    c4a2:	c1 82       	std	Z+1, r12	; 0x01
    c4a4:	d2 82       	std	Z+2, r13	; 0x02
    c4a6:	e3 82       	std	Z+3, r14	; 0x03
    c4a8:	f4 82       	std	Z+4, r15	; 0x04
    c4aa:	0b c0       	rjmp	.+22     	; 0xc4c2 <TMR_SR_cmdGetReaderStatistics+0x164>
    c4ac:	88 0f       	add	r24, r24
    c4ae:	99 1f       	adc	r25, r25
    c4b0:	88 0f       	add	r24, r24
    c4b2:	99 1f       	adc	r25, r25
    c4b4:	f8 01       	movw	r30, r16
    c4b6:	e8 0f       	add	r30, r24
    c4b8:	f9 1f       	adc	r31, r25
    c4ba:	11 82       	std	Z+1, r1	; 0x01
    c4bc:	12 82       	std	Z+2, r1	; 0x02
    c4be:	13 82       	std	Z+3, r1	; 0x03
    c4c0:	14 82       	std	Z+4, r1	; 0x04
    c4c2:	6f 5f       	subi	r22, 0xFF	; 255
    c4c4:	65 17       	cp	r22, r21
    c4c6:	08 f4       	brcc	.+2      	; 0xc4ca <TMR_SR_cmdGetReaderStatistics+0x16c>
    c4c8:	9b cf       	rjmp	.-202    	; 0xc400 <TMR_SR_cmdGetReaderStatistics+0xa2>
    c4ca:	f8 01       	movw	r30, r16
    c4cc:	50 83       	st	Z, r21
    c4ce:	85 c0       	rjmp	.+266    	; 0xc5da <TMR_SR_cmdGetReaderStatistics+0x27c>
    c4d0:	81 ff       	sbrs	r24, 1
    c4d2:	41 c0       	rjmp	.+130    	; 0xc556 <TMR_SR_cmdGetReaderStatistics+0x1f8>
    c4d4:	4e 5f       	subi	r20, 0xFE	; 254
    c4d6:	60 e0       	ldi	r22, 0x00	; 0
    c4d8:	39 c0       	rjmp	.+114    	; 0xc54c <TMR_SR_cmdGetReaderStatistics+0x1ee>
    c4da:	e1 e0       	ldi	r30, 0x01	; 1
    c4dc:	f0 e0       	ldi	r31, 0x00	; 0
    c4de:	ec 0f       	add	r30, r28
    c4e0:	fd 1f       	adc	r31, r29
    c4e2:	e4 0f       	add	r30, r20
    c4e4:	f1 1d       	adc	r31, r1
    c4e6:	20 81       	ld	r18, Z
    c4e8:	86 2f       	mov	r24, r22
    c4ea:	90 e0       	ldi	r25, 0x00	; 0
    c4ec:	30 e0       	ldi	r19, 0x00	; 0
    c4ee:	21 50       	subi	r18, 0x01	; 1
    c4f0:	31 09       	sbc	r19, r1
    c4f2:	82 17       	cp	r24, r18
    c4f4:	93 07       	cpc	r25, r19
    c4f6:	e1 f4       	brne	.+56     	; 0xc530 <TMR_SR_cmdGetReaderStatistics+0x1d2>
    c4f8:	21 e0       	ldi	r18, 0x01	; 1
    c4fa:	24 0f       	add	r18, r20
    c4fc:	e1 e0       	ldi	r30, 0x01	; 1
    c4fe:	f0 e0       	ldi	r31, 0x00	; 0
    c500:	ec 0f       	add	r30, r28
    c502:	fd 1f       	adc	r31, r29
    c504:	e2 0f       	add	r30, r18
    c506:	f1 1d       	adc	r31, r1
    c508:	4e 5f       	subi	r20, 0xFE	; 254
    c50a:	20 81       	ld	r18, Z
    c50c:	fc 01       	movw	r30, r24
    c50e:	ee 0f       	add	r30, r30
    c510:	ff 1f       	adc	r31, r31
    c512:	ee 0f       	add	r30, r30
    c514:	ff 1f       	adc	r31, r31
    c516:	e0 0f       	add	r30, r16
    c518:	f1 1f       	adc	r31, r17
    c51a:	ef 5f       	subi	r30, 0xFF	; 255
    c51c:	fe 4f       	sbci	r31, 0xFE	; 254
    c51e:	82 2f       	mov	r24, r18
    c520:	90 e0       	ldi	r25, 0x00	; 0
    c522:	a0 e0       	ldi	r26, 0x00	; 0
    c524:	b0 e0       	ldi	r27, 0x00	; 0
    c526:	80 83       	st	Z, r24
    c528:	91 83       	std	Z+1, r25	; 0x01
    c52a:	a2 83       	std	Z+2, r26	; 0x02
    c52c:	b3 83       	std	Z+3, r27	; 0x03
    c52e:	0d c0       	rjmp	.+26     	; 0xc54a <TMR_SR_cmdGetReaderStatistics+0x1ec>
    c530:	fc 01       	movw	r30, r24
    c532:	ee 0f       	add	r30, r30
    c534:	ff 1f       	adc	r31, r31
    c536:	ee 0f       	add	r30, r30
    c538:	ff 1f       	adc	r31, r31
    c53a:	e0 0f       	add	r30, r16
    c53c:	f1 1f       	adc	r31, r17
    c53e:	ef 5f       	subi	r30, 0xFF	; 255
    c540:	fe 4f       	sbci	r31, 0xFE	; 254
    c542:	10 82       	st	Z, r1
    c544:	11 82       	std	Z+1, r1	; 0x01
    c546:	12 82       	std	Z+2, r1	; 0x02
    c548:	13 82       	std	Z+3, r1	; 0x03
    c54a:	6f 5f       	subi	r22, 0xFF	; 255
    c54c:	65 17       	cp	r22, r21
    c54e:	28 f2       	brcs	.-118    	; 0xc4da <TMR_SR_cmdGetReaderStatistics+0x17c>
    c550:	d8 01       	movw	r26, r16
    c552:	5c 93       	st	X, r21
    c554:	42 c0       	rjmp	.+132    	; 0xc5da <TMR_SR_cmdGetReaderStatistics+0x27c>
    c556:	83 ff       	sbrs	r24, 3
    c558:	40 c0       	rjmp	.+128    	; 0xc5da <TMR_SR_cmdGetReaderStatistics+0x27c>
    c55a:	4e 5f       	subi	r20, 0xFE	; 254
    c55c:	60 e0       	ldi	r22, 0x00	; 0
    c55e:	39 c0       	rjmp	.+114    	; 0xc5d2 <TMR_SR_cmdGetReaderStatistics+0x274>
    c560:	e1 e0       	ldi	r30, 0x01	; 1
    c562:	f0 e0       	ldi	r31, 0x00	; 0
    c564:	ec 0f       	add	r30, r28
    c566:	fd 1f       	adc	r31, r29
    c568:	e4 0f       	add	r30, r20
    c56a:	f1 1d       	adc	r31, r1
    c56c:	20 81       	ld	r18, Z
    c56e:	86 2f       	mov	r24, r22
    c570:	90 e0       	ldi	r25, 0x00	; 0
    c572:	30 e0       	ldi	r19, 0x00	; 0
    c574:	21 50       	subi	r18, 0x01	; 1
    c576:	31 09       	sbc	r19, r1
    c578:	82 17       	cp	r24, r18
    c57a:	93 07       	cpc	r25, r19
    c57c:	e1 f4       	brne	.+56     	; 0xc5b6 <TMR_SR_cmdGetReaderStatistics+0x258>
    c57e:	21 e0       	ldi	r18, 0x01	; 1
    c580:	24 0f       	add	r18, r20
    c582:	e1 e0       	ldi	r30, 0x01	; 1
    c584:	f0 e0       	ldi	r31, 0x00	; 0
    c586:	ec 0f       	add	r30, r28
    c588:	fd 1f       	adc	r31, r29
    c58a:	e2 0f       	add	r30, r18
    c58c:	f1 1d       	adc	r31, r1
    c58e:	4e 5f       	subi	r20, 0xFE	; 254
    c590:	20 81       	ld	r18, Z
    c592:	fc 01       	movw	r30, r24
    c594:	ee 0f       	add	r30, r30
    c596:	ff 1f       	adc	r31, r31
    c598:	ee 0f       	add	r30, r30
    c59a:	ff 1f       	adc	r31, r31
    c59c:	e0 0f       	add	r30, r16
    c59e:	f1 1f       	adc	r31, r17
    c5a0:	ef 5f       	subi	r30, 0xFF	; 255
    c5a2:	fd 4f       	sbci	r31, 0xFD	; 253
    c5a4:	82 2f       	mov	r24, r18
    c5a6:	90 e0       	ldi	r25, 0x00	; 0
    c5a8:	a0 e0       	ldi	r26, 0x00	; 0
    c5aa:	b0 e0       	ldi	r27, 0x00	; 0
    c5ac:	80 83       	st	Z, r24
    c5ae:	91 83       	std	Z+1, r25	; 0x01
    c5b0:	a2 83       	std	Z+2, r26	; 0x02
    c5b2:	b3 83       	std	Z+3, r27	; 0x03
    c5b4:	0d c0       	rjmp	.+26     	; 0xc5d0 <TMR_SR_cmdGetReaderStatistics+0x272>
    c5b6:	fc 01       	movw	r30, r24
    c5b8:	ee 0f       	add	r30, r30
    c5ba:	ff 1f       	adc	r31, r31
    c5bc:	ee 0f       	add	r30, r30
    c5be:	ff 1f       	adc	r31, r31
    c5c0:	e0 0f       	add	r30, r16
    c5c2:	f1 1f       	adc	r31, r17
    c5c4:	ef 5f       	subi	r30, 0xFF	; 255
    c5c6:	fd 4f       	sbci	r31, 0xFD	; 253
    c5c8:	10 82       	st	Z, r1
    c5ca:	11 82       	std	Z+1, r1	; 0x01
    c5cc:	12 82       	std	Z+2, r1	; 0x02
    c5ce:	13 82       	std	Z+3, r1	; 0x03
    c5d0:	6f 5f       	subi	r22, 0xFF	; 255
    c5d2:	65 17       	cp	r22, r21
    c5d4:	28 f2       	brcs	.-118    	; 0xc560 <TMR_SR_cmdGetReaderStatistics+0x202>
    c5d6:	f8 01       	movw	r30, r16
    c5d8:	50 83       	st	Z, r21
    c5da:	24 2f       	mov	r18, r20
    c5dc:	30 e0       	ldi	r19, 0x00	; 0
    c5de:	8a 81       	ldd	r24, Y+2	; 0x02
    c5e0:	90 e0       	ldi	r25, 0x00	; 0
    c5e2:	02 96       	adiw	r24, 0x02	; 2
    c5e4:	28 17       	cp	r18, r24
    c5e6:	39 07       	cpc	r19, r25
    c5e8:	0c f4       	brge	.+2      	; 0xc5ec <TMR_SR_cmdGetReaderStatistics+0x28e>
    c5ea:	fe ce       	rjmp	.-516    	; 0xc3e8 <TMR_SR_cmdGetReaderStatistics+0x8a>
    c5ec:	40 e0       	ldi	r20, 0x00	; 0
    c5ee:	30 e0       	ldi	r19, 0x00	; 0
    c5f0:	20 e0       	ldi	r18, 0x00	; 0
    c5f2:	90 e0       	ldi	r25, 0x00	; 0
    c5f4:	08 c0       	rjmp	.+16     	; 0xc606 <TMR_SR_cmdGetReaderStatistics+0x2a8>
    c5f6:	46 2f       	mov	r20, r22
    c5f8:	37 2f       	mov	r19, r23
    c5fa:	28 2f       	mov	r18, r24
    c5fc:	04 c0       	rjmp	.+8      	; 0xc606 <TMR_SR_cmdGetReaderStatistics+0x2a8>
    c5fe:	40 e0       	ldi	r20, 0x00	; 0
    c600:	30 e0       	ldi	r19, 0x00	; 0
    c602:	20 e0       	ldi	r18, 0x00	; 0
    c604:	90 e0       	ldi	r25, 0x00	; 0
    c606:	64 2f       	mov	r22, r20
    c608:	73 2f       	mov	r23, r19
    c60a:	82 2f       	mov	r24, r18
    c60c:	d3 95       	inc	r29
    c60e:	0f b6       	in	r0, 0x3f	; 63
    c610:	f8 94       	cli
    c612:	de bf       	out	0x3e, r29	; 62
    c614:	0f be       	out	0x3f, r0	; 63
    c616:	cd bf       	out	0x3d, r28	; 61
    c618:	df 91       	pop	r29
    c61a:	cf 91       	pop	r28
    c61c:	1f 91       	pop	r17
    c61e:	0f 91       	pop	r16
    c620:	ff 90       	pop	r15
    c622:	ef 90       	pop	r14
    c624:	df 90       	pop	r13
    c626:	cf 90       	pop	r12
    c628:	bf 90       	pop	r11
    c62a:	af 90       	pop	r10
    c62c:	9f 90       	pop	r9
    c62e:	8f 90       	pop	r8
    c630:	08 95       	ret

0000c632 <TMR_SR_cmdResetReaderStatistics>:
    c632:	cf 93       	push	r28
    c634:	df 93       	push	r29
    c636:	cd b7       	in	r28, 0x3d	; 61
    c638:	de b7       	in	r29, 0x3e	; 62
    c63a:	da 95       	dec	r29
    c63c:	0f b6       	in	r0, 0x3f	; 63
    c63e:	f8 94       	cli
    c640:	de bf       	out	0x3e, r29	; 62
    c642:	0f be       	out	0x3f, r0	; 63
    c644:	cd bf       	out	0x3d, r28	; 61
    c646:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    c64a:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    c64e:	4c e6       	ldi	r20, 0x6C	; 108
    c650:	4b 83       	std	Y+3, r20	; 0x03
    c652:	41 e0       	ldi	r20, 0x01	; 1
    c654:	4c 83       	std	Y+4, r20	; 0x04
    c656:	2d 5f       	subi	r18, 0xFD	; 253
    c658:	3f 4f       	sbci	r19, 0xFF	; 255
    c65a:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    c65e:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    c662:	6d 83       	std	Y+5, r22	; 0x05
    c664:	22 e0       	ldi	r18, 0x02	; 2
    c666:	2a 83       	std	Y+2, r18	; 0x02
    c668:	fc 01       	movw	r30, r24
    c66a:	e0 52       	subi	r30, 0x20	; 32
    c66c:	fe 4f       	sbci	r31, 0xFE	; 254
    c66e:	20 81       	ld	r18, Z
    c670:	31 81       	ldd	r19, Z+1	; 0x01
    c672:	42 81       	ldd	r20, Z+2	; 0x02
    c674:	53 81       	ldd	r21, Z+3	; 0x03
    c676:	be 01       	movw	r22, r28
    c678:	6f 5f       	subi	r22, 0xFF	; 255
    c67a:	7f 4f       	sbci	r23, 0xFF	; 255
    c67c:	0e 94 f1 35 	call	0x6be2	; 0x6be2 <TMR_SR_sendTimeout>
    c680:	61 15       	cp	r22, r1
    c682:	71 05       	cpc	r23, r1
    c684:	81 05       	cpc	r24, r1
    c686:	91 05       	cpc	r25, r1
    c688:	29 f4       	brne	.+10     	; 0xc694 <TMR_SR_cmdResetReaderStatistics+0x62>
    c68a:	40 e0       	ldi	r20, 0x00	; 0
    c68c:	30 e0       	ldi	r19, 0x00	; 0
    c68e:	20 e0       	ldi	r18, 0x00	; 0
    c690:	90 e0       	ldi	r25, 0x00	; 0
    c692:	03 c0       	rjmp	.+6      	; 0xc69a <TMR_SR_cmdResetReaderStatistics+0x68>
    c694:	46 2f       	mov	r20, r22
    c696:	37 2f       	mov	r19, r23
    c698:	28 2f       	mov	r18, r24
    c69a:	64 2f       	mov	r22, r20
    c69c:	73 2f       	mov	r23, r19
    c69e:	82 2f       	mov	r24, r18
    c6a0:	d3 95       	inc	r29
    c6a2:	0f b6       	in	r0, 0x3f	; 63
    c6a4:	f8 94       	cli
    c6a6:	de bf       	out	0x3e, r29	; 62
    c6a8:	0f be       	out	0x3f, r0	; 63
    c6aa:	cd bf       	out	0x3d, r28	; 61
    c6ac:	df 91       	pop	r29
    c6ae:	cf 91       	pop	r28
    c6b0:	08 95       	ret

0000c6b2 <TMR_fillReaderStats>:
    c6b2:	6f 92       	push	r6
    c6b4:	7f 92       	push	r7
    c6b6:	8f 92       	push	r8
    c6b8:	9f 92       	push	r9
    c6ba:	af 92       	push	r10
    c6bc:	bf 92       	push	r11
    c6be:	cf 92       	push	r12
    c6c0:	df 92       	push	r13
    c6c2:	ef 92       	push	r14
    c6c4:	ff 92       	push	r15
    c6c6:	0f 93       	push	r16
    c6c8:	1f 93       	push	r17
    c6ca:	cf 93       	push	r28
    c6cc:	df 93       	push	r29
    c6ce:	cd b7       	in	r28, 0x3d	; 61
    c6d0:	de b7       	in	r29, 0x3e	; 62
    c6d2:	29 97       	sbiw	r28, 0x09	; 9
    c6d4:	0f b6       	in	r0, 0x3f	; 63
    c6d6:	f8 94       	cli
    c6d8:	de bf       	out	0x3e, r29	; 62
    c6da:	0f be       	out	0x3f, r0	; 63
    c6dc:	cd bf       	out	0x3d, r28	; 61
    c6de:	7c 01       	movw	r14, r24
    c6e0:	3b 01       	movw	r6, r22
    c6e2:	69 01       	movw	r12, r18
    c6e4:	b7 c1       	rjmp	.+878    	; 0xca54 <TMR_fillReaderStats+0x3a2>
    c6e6:	09 83       	std	Y+1, r16	; 0x01
    c6e8:	ae 01       	movw	r20, r28
    c6ea:	4f 5f       	subi	r20, 0xFF	; 255
    c6ec:	5f 4f       	sbci	r21, 0xFF	; 255
    c6ee:	be 01       	movw	r22, r28
    c6f0:	6e 5f       	subi	r22, 0xFE	; 254
    c6f2:	7f 4f       	sbci	r23, 0xFF	; 255
    c6f4:	c6 01       	movw	r24, r12
    c6f6:	0e 94 5b 32 	call	0x64b6	; 0x64b6 <parseEBVdata>
    c6fa:	68 2f       	mov	r22, r24
    c6fc:	ce 01       	movw	r24, r28
    c6fe:	02 96       	adiw	r24, 0x02	; 2
    c700:	0e 94 48 6f 	call	0xde90	; 0xde90 <TMR_SR_convertFromEBV>
    c704:	20 ff       	sbrs	r18, 0
    c706:	70 c0       	rjmp	.+224    	; 0xc7e8 <TMR_fillReaderStats+0x136>
    c708:	81 e0       	ldi	r24, 0x01	; 1
    c70a:	80 0f       	add	r24, r16
    c70c:	0e 5f       	subi	r16, 0xFE	; 254
    c70e:	f6 01       	movw	r30, r12
    c710:	e8 0f       	add	r30, r24
    c712:	f1 1d       	adc	r31, r1
    c714:	10 81       	ld	r17, Z
    c716:	10 0f       	add	r17, r16
    c718:	63 c0       	rjmp	.+198    	; 0xc7e0 <TMR_fillReaderStats+0x12e>
    c71a:	f6 01       	movw	r30, r12
    c71c:	e0 0f       	add	r30, r16
    c71e:	f1 1d       	adc	r31, r1
    c720:	30 81       	ld	r19, Z
    c722:	0b 5f       	subi	r16, 0xFB	; 251
    c724:	c6 01       	movw	r24, r12
    c726:	80 0f       	add	r24, r16
    c728:	91 1d       	adc	r25, r1
    c72a:	fc 01       	movw	r30, r24
    c72c:	34 97       	sbiw	r30, 0x04	; 4
    c72e:	80 80       	ld	r8, Z
    c730:	91 2c       	mov	r9, r1
    c732:	a1 2c       	mov	r10, r1
    c734:	b1 2c       	mov	r11, r1
    c736:	b8 2c       	mov	r11, r8
    c738:	aa 24       	eor	r10, r10
    c73a:	99 24       	eor	r9, r9
    c73c:	88 24       	eor	r8, r8
    c73e:	31 96       	adiw	r30, 0x01	; 1
    c740:	40 81       	ld	r20, Z
    c742:	50 e0       	ldi	r21, 0x00	; 0
    c744:	60 e0       	ldi	r22, 0x00	; 0
    c746:	70 e0       	ldi	r23, 0x00	; 0
    c748:	ba 01       	movw	r22, r20
    c74a:	55 27       	eor	r21, r21
    c74c:	44 27       	eor	r20, r20
    c74e:	84 2a       	or	r8, r20
    c750:	95 2a       	or	r9, r21
    c752:	a6 2a       	or	r10, r22
    c754:	b7 2a       	or	r11, r23
    c756:	31 96       	adiw	r30, 0x01	; 1
    c758:	40 81       	ld	r20, Z
    c75a:	50 e0       	ldi	r21, 0x00	; 0
    c75c:	60 e0       	ldi	r22, 0x00	; 0
    c75e:	70 e0       	ldi	r23, 0x00	; 0
    c760:	76 2f       	mov	r23, r22
    c762:	65 2f       	mov	r22, r21
    c764:	54 2f       	mov	r21, r20
    c766:	44 27       	eor	r20, r20
    c768:	84 2a       	or	r8, r20
    c76a:	95 2a       	or	r9, r21
    c76c:	a6 2a       	or	r10, r22
    c76e:	b7 2a       	or	r11, r23
    c770:	31 96       	adiw	r30, 0x01	; 1
    c772:	80 81       	ld	r24, Z
    c774:	88 2a       	or	r8, r24
    c776:	20 e0       	ldi	r18, 0x00	; 0
    c778:	2a c0       	rjmp	.+84     	; 0xc7ce <TMR_fillReaderStats+0x11c>
    c77a:	40 81       	ld	r20, Z
    c77c:	51 81       	ldd	r21, Z+1	; 0x01
    c77e:	82 2f       	mov	r24, r18
    c780:	90 e0       	ldi	r25, 0x00	; 0
    c782:	fc 01       	movw	r30, r24
    c784:	ee 0f       	add	r30, r30
    c786:	ff 1f       	adc	r31, r31
    c788:	e8 0f       	add	r30, r24
    c78a:	f9 1f       	adc	r31, r25
    c78c:	e4 0f       	add	r30, r20
    c78e:	f5 1f       	adc	r31, r21
    c790:	41 81       	ldd	r20, Z+1	; 0x01
    c792:	34 13       	cpse	r19, r20
    c794:	1b c0       	rjmp	.+54     	; 0xc7cc <TMR_fillReaderStats+0x11a>
    c796:	d3 01       	movw	r26, r6
    c798:	a0 5b       	subi	r26, 0xB0	; 176
    c79a:	bf 4f       	sbci	r27, 0xFF	; 255
    c79c:	6d 91       	ld	r22, X+
    c79e:	7c 91       	ld	r23, X
    c7a0:	11 97       	sbiw	r26, 0x01	; 1
    c7a2:	ac 01       	movw	r20, r24
    c7a4:	44 0f       	add	r20, r20
    c7a6:	55 1f       	adc	r21, r21
    c7a8:	84 0f       	add	r24, r20
    c7aa:	95 1f       	adc	r25, r21
    c7ac:	88 0f       	add	r24, r24
    c7ae:	99 1f       	adc	r25, r25
    c7b0:	68 0f       	add	r22, r24
    c7b2:	79 1f       	adc	r23, r25
    c7b4:	40 81       	ld	r20, Z
    c7b6:	fb 01       	movw	r30, r22
    c7b8:	40 83       	st	Z, r20
    c7ba:	4d 91       	ld	r20, X+
    c7bc:	5c 91       	ld	r21, X
    c7be:	fa 01       	movw	r30, r20
    c7c0:	e8 0f       	add	r30, r24
    c7c2:	f9 1f       	adc	r31, r25
    c7c4:	81 82       	std	Z+1, r8	; 0x01
    c7c6:	92 82       	std	Z+2, r9	; 0x02
    c7c8:	a3 82       	std	Z+3, r10	; 0x03
    c7ca:	b4 82       	std	Z+4, r11	; 0x04
    c7cc:	2f 5f       	subi	r18, 0xFF	; 255
    c7ce:	f7 01       	movw	r30, r14
    c7d0:	ec 52       	subi	r30, 0x2C	; 44
    c7d2:	fe 4f       	sbci	r31, 0xFE	; 254
    c7d4:	01 90       	ld	r0, Z+
    c7d6:	f0 81       	ld	r31, Z
    c7d8:	e0 2d       	mov	r30, r0
    c7da:	83 81       	ldd	r24, Z+3	; 0x03
    c7dc:	28 17       	cp	r18, r24
    c7de:	68 f2       	brcs	.-102    	; 0xc77a <TMR_fillReaderStats+0xc8>
    c7e0:	01 17       	cp	r16, r17
    c7e2:	08 f4       	brcc	.+2      	; 0xc7e6 <TMR_fillReaderStats+0x134>
    c7e4:	9a cf       	rjmp	.-204    	; 0xc71a <TMR_fillReaderStats+0x68>
    c7e6:	36 c1       	rjmp	.+620    	; 0xca54 <TMR_fillReaderStats+0x3a2>
    c7e8:	26 ff       	sbrs	r18, 6
    c7ea:	58 c0       	rjmp	.+176    	; 0xc89c <TMR_fillReaderStats+0x1ea>
    c7ec:	81 e0       	ldi	r24, 0x01	; 1
    c7ee:	80 0f       	add	r24, r16
    c7f0:	f6 01       	movw	r30, r12
    c7f2:	e8 0f       	add	r30, r24
    c7f4:	f1 1d       	adc	r31, r1
    c7f6:	0e 5f       	subi	r16, 0xFE	; 254
    c7f8:	10 81       	ld	r17, Z
    c7fa:	4d c0       	rjmp	.+154    	; 0xc896 <TMR_fillReaderStats+0x1e4>
    c7fc:	91 e0       	ldi	r25, 0x01	; 1
    c7fe:	90 0f       	add	r25, r16
    c800:	f6 01       	movw	r30, r12
    c802:	e0 0f       	add	r30, r16
    c804:	f1 1d       	adc	r31, r1
    c806:	50 81       	ld	r21, Z
    c808:	f7 01       	movw	r30, r14
    c80a:	e6 50       	subi	r30, 0x06	; 6
    c80c:	fa 4f       	sbci	r31, 0xFA	; 250
    c80e:	80 81       	ld	r24, Z
    c810:	88 23       	and	r24, r24
    c812:	39 f0       	breq	.+14     	; 0xc822 <TMR_fillReaderStats+0x170>
    c814:	0e 5f       	subi	r16, 0xFE	; 254
    c816:	f6 01       	movw	r30, r12
    c818:	e9 0f       	add	r30, r25
    c81a:	f1 1d       	adc	r31, r1
    c81c:	50 81       	ld	r21, Z
    c81e:	11 50       	subi	r17, 0x01	; 1
    c820:	01 c0       	rjmp	.+2      	; 0xc824 <TMR_fillReaderStats+0x172>
    c822:	09 2f       	mov	r16, r25
    c824:	40 e0       	ldi	r20, 0x00	; 0
    c826:	2e c0       	rjmp	.+92     	; 0xc884 <TMR_fillReaderStats+0x1d2>
    c828:	20 81       	ld	r18, Z
    c82a:	31 81       	ldd	r19, Z+1	; 0x01
    c82c:	84 2f       	mov	r24, r20
    c82e:	90 e0       	ldi	r25, 0x00	; 0
    c830:	fc 01       	movw	r30, r24
    c832:	ee 0f       	add	r30, r30
    c834:	ff 1f       	adc	r31, r31
    c836:	e8 0f       	add	r30, r24
    c838:	f9 1f       	adc	r31, r25
    c83a:	e2 0f       	add	r30, r18
    c83c:	f3 1f       	adc	r31, r19
    c83e:	21 81       	ldd	r18, Z+1	; 0x01
    c840:	52 13       	cpse	r21, r18
    c842:	1f c0       	rjmp	.+62     	; 0xc882 <TMR_fillReaderStats+0x1d0>
    c844:	d3 01       	movw	r26, r6
    c846:	a0 5b       	subi	r26, 0xB0	; 176
    c848:	bf 4f       	sbci	r27, 0xFF	; 255
    c84a:	2d 91       	ld	r18, X+
    c84c:	3c 91       	ld	r19, X
    c84e:	11 97       	sbiw	r26, 0x01	; 1
    c850:	bc 01       	movw	r22, r24
    c852:	66 0f       	add	r22, r22
    c854:	77 1f       	adc	r23, r23
    c856:	86 0f       	add	r24, r22
    c858:	97 1f       	adc	r25, r23
    c85a:	88 0f       	add	r24, r24
    c85c:	99 1f       	adc	r25, r25
    c85e:	28 0f       	add	r18, r24
    c860:	39 1f       	adc	r19, r25
    c862:	60 81       	ld	r22, Z
    c864:	f9 01       	movw	r30, r18
    c866:	60 83       	st	Z, r22
    c868:	2d 91       	ld	r18, X+
    c86a:	3c 91       	ld	r19, X
    c86c:	d9 01       	movw	r26, r18
    c86e:	a8 0f       	add	r26, r24
    c870:	b9 1f       	adc	r27, r25
    c872:	f6 01       	movw	r30, r12
    c874:	e0 0f       	add	r30, r16
    c876:	f1 1d       	adc	r31, r1
    c878:	20 81       	ld	r18, Z
    c87a:	15 96       	adiw	r26, 0x05	; 5
    c87c:	2c 93       	st	X, r18
    c87e:	12 50       	subi	r17, 0x02	; 2
    c880:	0f 5f       	subi	r16, 0xFF	; 255
    c882:	4f 5f       	subi	r20, 0xFF	; 255
    c884:	f7 01       	movw	r30, r14
    c886:	ec 52       	subi	r30, 0x2C	; 44
    c888:	fe 4f       	sbci	r31, 0xFE	; 254
    c88a:	01 90       	ld	r0, Z+
    c88c:	f0 81       	ld	r31, Z
    c88e:	e0 2d       	mov	r30, r0
    c890:	83 81       	ldd	r24, Z+3	; 0x03
    c892:	48 17       	cp	r20, r24
    c894:	48 f2       	brcs	.-110    	; 0xc828 <TMR_fillReaderStats+0x176>
    c896:	11 11       	cpse	r17, r1
    c898:	b1 cf       	rjmp	.-158    	; 0xc7fc <TMR_fillReaderStats+0x14a>
    c89a:	dc c0       	rjmp	.+440    	; 0xca54 <TMR_fillReaderStats+0x3a2>
    c89c:	27 ff       	sbrs	r18, 7
    c89e:	24 c0       	rjmp	.+72     	; 0xc8e8 <TMR_fillReaderStats+0x236>
    c8a0:	0a 5f       	subi	r16, 0xFA	; 250
    c8a2:	96 01       	movw	r18, r12
    c8a4:	20 0f       	add	r18, r16
    c8a6:	31 1d       	adc	r19, r1
    c8a8:	f9 01       	movw	r30, r18
    c8aa:	33 97       	sbiw	r30, 0x03	; 3
    c8ac:	80 81       	ld	r24, Z
    c8ae:	90 e0       	ldi	r25, 0x00	; 0
    c8b0:	a0 e0       	ldi	r26, 0x00	; 0
    c8b2:	b0 e0       	ldi	r27, 0x00	; 0
    c8b4:	bc 01       	movw	r22, r24
    c8b6:	55 27       	eor	r21, r21
    c8b8:	44 27       	eor	r20, r20
    c8ba:	31 96       	adiw	r30, 0x01	; 1
    c8bc:	90 81       	ld	r25, Z
    c8be:	89 2f       	mov	r24, r25
    c8c0:	90 e0       	ldi	r25, 0x00	; 0
    c8c2:	a0 e0       	ldi	r26, 0x00	; 0
    c8c4:	b0 e0       	ldi	r27, 0x00	; 0
    c8c6:	ba 2f       	mov	r27, r26
    c8c8:	a9 2f       	mov	r26, r25
    c8ca:	98 2f       	mov	r25, r24
    c8cc:	88 27       	eor	r24, r24
    c8ce:	84 2b       	or	r24, r20
    c8d0:	95 2b       	or	r25, r21
    c8d2:	a6 2b       	or	r26, r22
    c8d4:	b7 2b       	or	r27, r23
    c8d6:	31 96       	adiw	r30, 0x01	; 1
    c8d8:	20 81       	ld	r18, Z
    c8da:	82 2b       	or	r24, r18
    c8dc:	f3 01       	movw	r30, r6
    c8de:	86 83       	std	Z+6, r24	; 0x06
    c8e0:	97 83       	std	Z+7, r25	; 0x07
    c8e2:	a0 87       	std	Z+8, r26	; 0x08
    c8e4:	b1 87       	std	Z+9, r27	; 0x09
    c8e6:	b6 c0       	rjmp	.+364    	; 0xca54 <TMR_fillReaderStats+0x3a2>
    c8e8:	30 ff       	sbrs	r19, 0
    c8ea:	0b c0       	rjmp	.+22     	; 0xc902 <TMR_fillReaderStats+0x250>
    c8ec:	83 e0       	ldi	r24, 0x03	; 3
    c8ee:	80 0f       	add	r24, r16
    c8f0:	f6 01       	movw	r30, r12
    c8f2:	e8 0f       	add	r30, r24
    c8f4:	f1 1d       	adc	r31, r1
    c8f6:	0c 5f       	subi	r16, 0xFC	; 252
    c8f8:	80 81       	ld	r24, Z
    c8fa:	d3 01       	movw	r26, r6
    c8fc:	12 96       	adiw	r26, 0x02	; 2
    c8fe:	8c 93       	st	X, r24
    c900:	a9 c0       	rjmp	.+338    	; 0xca54 <TMR_fillReaderStats+0x3a2>
    c902:	32 ff       	sbrs	r19, 2
    c904:	0a c0       	rjmp	.+20     	; 0xc91a <TMR_fillReaderStats+0x268>
    c906:	83 e0       	ldi	r24, 0x03	; 3
    c908:	80 0f       	add	r24, r16
    c90a:	f6 01       	movw	r30, r12
    c90c:	e8 0f       	add	r30, r24
    c90e:	f1 1d       	adc	r31, r1
    c910:	0c 5f       	subi	r16, 0xFC	; 252
    c912:	80 81       	ld	r24, Z
    c914:	f3 01       	movw	r30, r6
    c916:	83 83       	std	Z+3, r24	; 0x03
    c918:	9d c0       	rjmp	.+314    	; 0xca54 <TMR_fillReaderStats+0x3a2>
    c91a:	31 ff       	sbrs	r19, 1
    c91c:	3a c0       	rjmp	.+116    	; 0xc992 <TMR_fillReaderStats+0x2e0>
    c91e:	34 e0       	ldi	r19, 0x04	; 4
    c920:	30 0f       	add	r19, r16
    c922:	83 e0       	ldi	r24, 0x03	; 3
    c924:	80 0f       	add	r24, r16
    c926:	f6 01       	movw	r30, r12
    c928:	e8 0f       	add	r30, r24
    c92a:	f1 1d       	adc	r31, r1
    c92c:	60 81       	ld	r22, Z
    c92e:	f7 01       	movw	r30, r14
    c930:	e6 50       	subi	r30, 0x06	; 6
    c932:	fa 4f       	sbci	r31, 0xFA	; 250
    c934:	80 81       	ld	r24, Z
    c936:	88 23       	and	r24, r24
    c938:	31 f0       	breq	.+12     	; 0xc946 <TMR_fillReaderStats+0x294>
    c93a:	f6 01       	movw	r30, r12
    c93c:	e3 0f       	add	r30, r19
    c93e:	f1 1d       	adc	r31, r1
    c940:	60 81       	ld	r22, Z
    c942:	35 e0       	ldi	r19, 0x05	; 5
    c944:	30 0f       	add	r19, r16
    c946:	20 e0       	ldi	r18, 0x00	; 0
    c948:	19 c0       	rjmp	.+50     	; 0xc97c <TMR_fillReaderStats+0x2ca>
    c94a:	40 81       	ld	r20, Z
    c94c:	51 81       	ldd	r21, Z+1	; 0x01
    c94e:	82 2f       	mov	r24, r18
    c950:	90 e0       	ldi	r25, 0x00	; 0
    c952:	fc 01       	movw	r30, r24
    c954:	ee 0f       	add	r30, r30
    c956:	ff 1f       	adc	r31, r31
    c958:	8e 0f       	add	r24, r30
    c95a:	9f 1f       	adc	r25, r31
    c95c:	fa 01       	movw	r30, r20
    c95e:	e8 0f       	add	r30, r24
    c960:	f9 1f       	adc	r31, r25
    c962:	81 81       	ldd	r24, Z+1	; 0x01
    c964:	68 13       	cpse	r22, r24
    c966:	09 c0       	rjmp	.+18     	; 0xc97a <TMR_fillReaderStats+0x2c8>
    c968:	80 81       	ld	r24, Z
    c96a:	90 e0       	ldi	r25, 0x00	; 0
    c96c:	d3 01       	movw	r26, r6
    c96e:	15 96       	adiw	r26, 0x05	; 5
    c970:	9c 93       	st	X, r25
    c972:	8e 93       	st	-X, r24
    c974:	14 97       	sbiw	r26, 0x04	; 4
    c976:	03 2f       	mov	r16, r19
    c978:	6d c0       	rjmp	.+218    	; 0xca54 <TMR_fillReaderStats+0x3a2>
    c97a:	2f 5f       	subi	r18, 0xFF	; 255
    c97c:	f7 01       	movw	r30, r14
    c97e:	ec 52       	subi	r30, 0x2C	; 44
    c980:	fe 4f       	sbci	r31, 0xFE	; 254
    c982:	01 90       	ld	r0, Z+
    c984:	f0 81       	ld	r31, Z
    c986:	e0 2d       	mov	r30, r0
    c988:	83 81       	ldd	r24, Z+3	; 0x03
    c98a:	28 17       	cp	r18, r24
    c98c:	f0 f2       	brcs	.-68     	; 0xc94a <TMR_fillReaderStats+0x298>
    c98e:	03 2f       	mov	r16, r19
    c990:	61 c0       	rjmp	.+194    	; 0xca54 <TMR_fillReaderStats+0x3a2>
    c992:	33 ff       	sbrs	r19, 3
    c994:	5a c0       	rjmp	.+180    	; 0xca4a <TMR_fillReaderStats+0x398>
    c996:	0d 5f       	subi	r16, 0xFD	; 253
    c998:	f6 01       	movw	r30, r12
    c99a:	e0 0f       	add	r30, r16
    c99c:	f1 1d       	adc	r31, r1
    c99e:	31 97       	sbiw	r30, 0x01	; 1
    c9a0:	80 81       	ld	r24, Z
    c9a2:	90 e0       	ldi	r25, 0x00	; 0
    c9a4:	f3 01       	movw	r30, r6
    c9a6:	97 87       	std	Z+15, r25	; 0x0f
    c9a8:	86 87       	std	Z+14, r24	; 0x0e
    c9aa:	30 e0       	ldi	r19, 0x00	; 0
    c9ac:	44 c0       	rjmp	.+136    	; 0xca36 <TMR_fillReaderStats+0x384>
    c9ae:	d3 01       	movw	r26, r6
    c9b0:	1a 96       	adiw	r26, 0x0a	; 10
    c9b2:	ed 91       	ld	r30, X+
    c9b4:	fc 91       	ld	r31, X
    c9b6:	1b 97       	sbiw	r26, 0x0b	; 11
    c9b8:	e4 0f       	add	r30, r20
    c9ba:	f5 1f       	adc	r31, r21
    c9bc:	61 e0       	ldi	r22, 0x01	; 1
    c9be:	60 0f       	add	r22, r16
    c9c0:	d6 01       	movw	r26, r12
    c9c2:	a0 0f       	add	r26, r16
    c9c4:	b1 1d       	adc	r27, r1
    c9c6:	8c 91       	ld	r24, X
    c9c8:	80 83       	st	Z, r24
    c9ca:	30 ff       	sbrs	r19, 0
    c9cc:	26 c0       	rjmp	.+76     	; 0xca1a <TMR_fillReaderStats+0x368>
    c9ce:	33 23       	and	r19, r19
    c9d0:	31 f1       	breq	.+76     	; 0xca1e <TMR_fillReaderStats+0x36c>
    c9d2:	2f c0       	rjmp	.+94     	; 0xca32 <TMR_fillReaderStats+0x380>
    c9d4:	a0 81       	ld	r26, Z
    c9d6:	b1 81       	ldd	r27, Z+1	; 0x01
    c9d8:	82 2f       	mov	r24, r18
    c9da:	90 e0       	ldi	r25, 0x00	; 0
    c9dc:	fc 01       	movw	r30, r24
    c9de:	ee 0f       	add	r30, r30
    c9e0:	ff 1f       	adc	r31, r31
    c9e2:	8e 0f       	add	r24, r30
    c9e4:	9f 1f       	adc	r25, r31
    c9e6:	fd 01       	movw	r30, r26
    c9e8:	e8 0f       	add	r30, r24
    c9ea:	f9 1f       	adc	r31, r25
    c9ec:	91 81       	ldd	r25, Z+1	; 0x01
    c9ee:	d3 01       	movw	r26, r6
    c9f0:	1a 96       	adiw	r26, 0x0a	; 10
    c9f2:	0d 91       	ld	r16, X+
    c9f4:	1c 91       	ld	r17, X
    c9f6:	1b 97       	sbiw	r26, 0x0b	; 11
    c9f8:	d8 01       	movw	r26, r16
    c9fa:	a4 0f       	add	r26, r20
    c9fc:	b5 1f       	adc	r27, r21
    c9fe:	8c 91       	ld	r24, X
    ca00:	98 13       	cpse	r25, r24
    ca02:	09 c0       	rjmp	.+18     	; 0xca16 <TMR_fillReaderStats+0x364>
    ca04:	80 81       	ld	r24, Z
    ca06:	8c 93       	st	X, r24
    ca08:	f7 01       	movw	r30, r14
    ca0a:	ec 52       	subi	r30, 0x2C	; 44
    ca0c:	fe 4f       	sbci	r31, 0xFE	; 254
    ca0e:	01 90       	ld	r0, Z+
    ca10:	f0 81       	ld	r31, Z
    ca12:	e0 2d       	mov	r30, r0
    ca14:	23 81       	ldd	r18, Z+3	; 0x03
    ca16:	2f 5f       	subi	r18, 0xFF	; 255
    ca18:	03 c0       	rjmp	.+6      	; 0xca20 <TMR_fillReaderStats+0x36e>
    ca1a:	20 e0       	ldi	r18, 0x00	; 0
    ca1c:	01 c0       	rjmp	.+2      	; 0xca20 <TMR_fillReaderStats+0x36e>
    ca1e:	20 e0       	ldi	r18, 0x00	; 0
    ca20:	f7 01       	movw	r30, r14
    ca22:	ec 52       	subi	r30, 0x2C	; 44
    ca24:	fe 4f       	sbci	r31, 0xFE	; 254
    ca26:	01 90       	ld	r0, Z+
    ca28:	f0 81       	ld	r31, Z
    ca2a:	e0 2d       	mov	r30, r0
    ca2c:	83 81       	ldd	r24, Z+3	; 0x03
    ca2e:	28 17       	cp	r18, r24
    ca30:	88 f2       	brcs	.-94     	; 0xc9d4 <TMR_fillReaderStats+0x322>
    ca32:	3f 5f       	subi	r19, 0xFF	; 255
    ca34:	06 2f       	mov	r16, r22
    ca36:	43 2f       	mov	r20, r19
    ca38:	50 e0       	ldi	r21, 0x00	; 0
    ca3a:	f3 01       	movw	r30, r6
    ca3c:	86 85       	ldd	r24, Z+14	; 0x0e
    ca3e:	97 85       	ldd	r25, Z+15	; 0x0f
    ca40:	48 17       	cp	r20, r24
    ca42:	59 07       	cpc	r21, r25
    ca44:	08 f4       	brcc	.+2      	; 0xca48 <TMR_fillReaderStats+0x396>
    ca46:	b3 cf       	rjmp	.-154    	; 0xc9ae <TMR_fillReaderStats+0x2fc>
    ca48:	05 c0       	rjmp	.+10     	; 0xca54 <TMR_fillReaderStats+0x3a2>
    ca4a:	61 e0       	ldi	r22, 0x01	; 1
    ca4c:	70 e0       	ldi	r23, 0x00	; 0
    ca4e:	80 e0       	ldi	r24, 0x00	; 0
    ca50:	93 e0       	ldi	r25, 0x03	; 3
    ca52:	0e c0       	rjmp	.+28     	; 0xca70 <TMR_fillReaderStats+0x3be>
    ca54:	20 2f       	mov	r18, r16
    ca56:	30 e0       	ldi	r19, 0x00	; 0
    ca58:	d6 01       	movw	r26, r12
    ca5a:	11 96       	adiw	r26, 0x01	; 1
    ca5c:	8c 91       	ld	r24, X
    ca5e:	90 e0       	ldi	r25, 0x00	; 0
    ca60:	02 96       	adiw	r24, 0x02	; 2
    ca62:	28 17       	cp	r18, r24
    ca64:	39 07       	cpc	r19, r25
    ca66:	0c f4       	brge	.+2      	; 0xca6a <TMR_fillReaderStats+0x3b8>
    ca68:	3e ce       	rjmp	.-900    	; 0xc6e6 <TMR_fillReaderStats+0x34>
    ca6a:	60 e0       	ldi	r22, 0x00	; 0
    ca6c:	70 e0       	ldi	r23, 0x00	; 0
    ca6e:	cb 01       	movw	r24, r22
    ca70:	29 96       	adiw	r28, 0x09	; 9
    ca72:	0f b6       	in	r0, 0x3f	; 63
    ca74:	f8 94       	cli
    ca76:	de bf       	out	0x3e, r29	; 62
    ca78:	0f be       	out	0x3f, r0	; 63
    ca7a:	cd bf       	out	0x3d, r28	; 61
    ca7c:	df 91       	pop	r29
    ca7e:	cf 91       	pop	r28
    ca80:	1f 91       	pop	r17
    ca82:	0f 91       	pop	r16
    ca84:	ff 90       	pop	r15
    ca86:	ef 90       	pop	r14
    ca88:	df 90       	pop	r13
    ca8a:	cf 90       	pop	r12
    ca8c:	bf 90       	pop	r11
    ca8e:	af 90       	pop	r10
    ca90:	9f 90       	pop	r9
    ca92:	8f 90       	pop	r8
    ca94:	7f 90       	pop	r7
    ca96:	6f 90       	pop	r6
    ca98:	08 95       	ret

0000ca9a <TMR_SR_cmdGetReaderStats>:
    ca9a:	af 92       	push	r10
    ca9c:	bf 92       	push	r11
    ca9e:	cf 92       	push	r12
    caa0:	df 92       	push	r13
    caa2:	ef 92       	push	r14
    caa4:	ff 92       	push	r15
    caa6:	0f 93       	push	r16
    caa8:	1f 93       	push	r17
    caaa:	cf 93       	push	r28
    caac:	df 93       	push	r29
    caae:	cd b7       	in	r28, 0x3d	; 61
    cab0:	de b7       	in	r29, 0x3e	; 62
    cab2:	c6 50       	subi	r28, 0x06	; 6
    cab4:	d1 40       	sbci	r29, 0x01	; 1
    cab6:	0f b6       	in	r0, 0x3f	; 63
    cab8:	f8 94       	cli
    caba:	de bf       	out	0x3e, r29	; 62
    cabc:	0f be       	out	0x3f, r0	; 63
    cabe:	cd bf       	out	0x3d, r28	; 61
    cac0:	5c 01       	movw	r10, r24
    cac2:	6a 01       	movw	r12, r20
    cac4:	86 e0       	ldi	r24, 0x06	; 6
    cac6:	ce 5f       	subi	r28, 0xFE	; 254
    cac8:	de 4f       	sbci	r29, 0xFE	; 254
    caca:	88 83       	st	Y, r24
    cacc:	c2 50       	subi	r28, 0x02	; 2
    cace:	d1 40       	sbci	r29, 0x01	; 1
    cad0:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    cad4:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    cad8:	2c e6       	ldi	r18, 0x6C	; 108
    cada:	2b 83       	std	Y+3, r18	; 0x03
    cadc:	02 96       	adiw	r24, 0x02	; 2
    cade:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    cae2:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    cae6:	84 e0       	ldi	r24, 0x04	; 4
    cae8:	cf 5f       	subi	r28, 0xFF	; 255
    caea:	de 4f       	sbci	r29, 0xFE	; 254
    caec:	88 83       	st	Y, r24
    caee:	c1 50       	subi	r28, 0x01	; 1
    caf0:	d1 40       	sbci	r29, 0x01	; 1
    caf2:	82 e0       	ldi	r24, 0x02	; 2
    caf4:	8c 83       	std	Y+4, r24	; 0x04
    caf6:	8b 01       	movw	r16, r22
    caf8:	e0 2e       	mov	r14, r16
    cafa:	f1 2e       	mov	r15, r17
    cafc:	00 e0       	ldi	r16, 0x00	; 0
    cafe:	10 e0       	ldi	r17, 0x00	; 0
    cb00:	20 e0       	ldi	r18, 0x00	; 0
    cb02:	30 e0       	ldi	r19, 0x00	; 0
    cb04:	40 e0       	ldi	r20, 0x00	; 0
    cb06:	50 e0       	ldi	r21, 0x00	; 0
    cb08:	be 01       	movw	r22, r28
    cb0a:	6f 5f       	subi	r22, 0xFF	; 255
    cb0c:	7e 4f       	sbci	r23, 0xFE	; 254
    cb0e:	ce 01       	movw	r24, r28
    cb10:	01 96       	adiw	r24, 0x01	; 1
    cb12:	0e 94 a1 6d 	call	0xdb42	; 0xdb42 <TMR_SR_convertToEBV>
    cb16:	cf 5f       	subi	r28, 0xFF	; 255
    cb18:	de 4f       	sbci	r29, 0xFE	; 254
    cb1a:	88 81       	ld	r24, Y
    cb1c:	c1 50       	subi	r28, 0x01	; 1
    cb1e:	d1 40       	sbci	r29, 0x01	; 1
    cb20:	83 50       	subi	r24, 0x03	; 3
    cb22:	8a 83       	std	Y+2, r24	; 0x02
    cb24:	f5 01       	movw	r30, r10
    cb26:	e0 52       	subi	r30, 0x20	; 32
    cb28:	fe 4f       	sbci	r31, 0xFE	; 254
    cb2a:	20 81       	ld	r18, Z
    cb2c:	31 81       	ldd	r19, Z+1	; 0x01
    cb2e:	42 81       	ldd	r20, Z+2	; 0x02
    cb30:	53 81       	ldd	r21, Z+3	; 0x03
    cb32:	be 01       	movw	r22, r28
    cb34:	6f 5f       	subi	r22, 0xFF	; 255
    cb36:	7f 4f       	sbci	r23, 0xFF	; 255
    cb38:	c5 01       	movw	r24, r10
    cb3a:	0e 94 f1 35 	call	0x6be2	; 0x6be2 <TMR_SR_sendTimeout>
    cb3e:	61 15       	cp	r22, r1
    cb40:	71 05       	cpc	r23, r1
    cb42:	81 05       	cpc	r24, r1
    cb44:	91 05       	cpc	r25, r1
    cb46:	09 f0       	breq	.+2      	; 0xcb4a <TMR_SR_cmdGetReaderStats+0xb0>
    cb48:	24 c1       	rjmp	.+584    	; 0xcd92 <TMR_SR_cmdGetReaderStats+0x2f8>
    cb4a:	c1 14       	cp	r12, r1
    cb4c:	d1 04       	cpc	r13, r1
    cb4e:	09 f4       	brne	.+2      	; 0xcb52 <TMR_SR_cmdGetReaderStats+0xb8>
    cb50:	13 c1       	rjmp	.+550    	; 0xcd78 <TMR_SR_cmdGetReaderStats+0x2de>
    cb52:	cf 5f       	subi	r28, 0xFF	; 255
    cb54:	de 4f       	sbci	r29, 0xFE	; 254
    cb56:	18 82       	st	Y, r1
    cb58:	c1 50       	subi	r28, 0x01	; 1
    cb5a:	d1 40       	sbci	r29, 0x01	; 1
    cb5c:	33 c0       	rjmp	.+102    	; 0xcbc4 <TMR_SR_cmdGetReaderStats+0x12a>
    cb5e:	d6 01       	movw	r26, r12
    cb60:	a0 5b       	subi	r26, 0xB0	; 176
    cb62:	bf 4f       	sbci	r27, 0xFF	; 255
    cb64:	ed 91       	ld	r30, X+
    cb66:	fc 91       	ld	r31, X
    cb68:	11 97       	sbiw	r26, 0x01	; 1
    cb6a:	9c 01       	movw	r18, r24
    cb6c:	22 0f       	add	r18, r18
    cb6e:	33 1f       	adc	r19, r19
    cb70:	82 0f       	add	r24, r18
    cb72:	93 1f       	adc	r25, r19
    cb74:	88 0f       	add	r24, r24
    cb76:	99 1f       	adc	r25, r25
    cb78:	e8 0f       	add	r30, r24
    cb7a:	f9 1f       	adc	r31, r25
    cb7c:	10 82       	st	Z, r1
    cb7e:	ed 91       	ld	r30, X+
    cb80:	fc 91       	ld	r31, X
    cb82:	11 97       	sbiw	r26, 0x01	; 1
    cb84:	cf 5f       	subi	r28, 0xFF	; 255
    cb86:	de 4f       	sbci	r29, 0xFE	; 254
    cb88:	28 81       	ld	r18, Y
    cb8a:	c1 50       	subi	r28, 0x01	; 1
    cb8c:	d1 40       	sbci	r29, 0x01	; 1
    cb8e:	82 2f       	mov	r24, r18
    cb90:	90 e0       	ldi	r25, 0x00	; 0
    cb92:	ac 01       	movw	r20, r24
    cb94:	44 0f       	add	r20, r20
    cb96:	55 1f       	adc	r21, r21
    cb98:	84 0f       	add	r24, r20
    cb9a:	95 1f       	adc	r25, r21
    cb9c:	88 0f       	add	r24, r24
    cb9e:	99 1f       	adc	r25, r25
    cba0:	e8 0f       	add	r30, r24
    cba2:	f9 1f       	adc	r31, r25
    cba4:	11 82       	std	Z+1, r1	; 0x01
    cba6:	12 82       	std	Z+2, r1	; 0x02
    cba8:	13 82       	std	Z+3, r1	; 0x03
    cbaa:	14 82       	std	Z+4, r1	; 0x04
    cbac:	4d 91       	ld	r20, X+
    cbae:	5c 91       	ld	r21, X
    cbb0:	fa 01       	movw	r30, r20
    cbb2:	e8 0f       	add	r30, r24
    cbb4:	f9 1f       	adc	r31, r25
    cbb6:	15 82       	std	Z+5, r1	; 0x05
    cbb8:	2f 5f       	subi	r18, 0xFF	; 255
    cbba:	cf 5f       	subi	r28, 0xFF	; 255
    cbbc:	de 4f       	sbci	r29, 0xFE	; 254
    cbbe:	28 83       	st	Y, r18
    cbc0:	c1 50       	subi	r28, 0x01	; 1
    cbc2:	d1 40       	sbci	r29, 0x01	; 1
    cbc4:	cf 5f       	subi	r28, 0xFF	; 255
    cbc6:	de 4f       	sbci	r29, 0xFE	; 254
    cbc8:	88 81       	ld	r24, Y
    cbca:	c1 50       	subi	r28, 0x01	; 1
    cbcc:	d1 40       	sbci	r29, 0x01	; 1
    cbce:	90 e0       	ldi	r25, 0x00	; 0
    cbd0:	f6 01       	movw	r30, r12
    cbd2:	ee 5a       	subi	r30, 0xAE	; 174
    cbd4:	ff 4f       	sbci	r31, 0xFF	; 255
    cbd6:	20 81       	ld	r18, Z
    cbd8:	31 81       	ldd	r19, Z+1	; 0x01
    cbda:	82 17       	cp	r24, r18
    cbdc:	93 07       	cpc	r25, r19
    cbde:	08 f4       	brcc	.+2      	; 0xcbe2 <TMR_SR_cmdGetReaderStats+0x148>
    cbe0:	be cf       	rjmp	.-132    	; 0xcb5e <TMR_SR_cmdGetReaderStats+0xc4>
    cbe2:	ae 01       	movw	r20, r28
    cbe4:	4e 5f       	subi	r20, 0xFE	; 254
    cbe6:	5e 4f       	sbci	r21, 0xFE	; 254
    cbe8:	be 01       	movw	r22, r28
    cbea:	6d 5f       	subi	r22, 0xFD	; 253
    cbec:	7e 4f       	sbci	r23, 0xFE	; 254
    cbee:	ce 01       	movw	r24, r28
    cbf0:	01 96       	adiw	r24, 0x01	; 1
    cbf2:	0e 94 5b 32 	call	0x64b6	; 0x64b6 <parseEBVdata>
    cbf6:	68 2f       	mov	r22, r24
    cbf8:	ce 01       	movw	r24, r28
    cbfa:	8d 5f       	subi	r24, 0xFD	; 253
    cbfc:	9e 4f       	sbci	r25, 0xFE	; 254
    cbfe:	0e 94 48 6f 	call	0xde90	; 0xde90 <TMR_SR_convertFromEBV>
    cc02:	42 2f       	mov	r20, r18
    cc04:	53 2f       	mov	r21, r19
    cc06:	f5 01       	movw	r30, r10
    cc08:	eb 5e       	subi	r30, 0xEB	; 235
    cc0a:	f9 4f       	sbci	r31, 0xF9	; 249
    cc0c:	20 83       	st	Z, r18
    cc0e:	31 83       	std	Z+1, r19	; 0x01
    cc10:	ce 5f       	subi	r28, 0xFE	; 254
    cc12:	de 4f       	sbci	r29, 0xFE	; 254
    cc14:	08 81       	ld	r16, Y
    cc16:	c2 50       	subi	r28, 0x02	; 2
    cc18:	d1 40       	sbci	r29, 0x01	; 1
    cc1a:	9e 01       	movw	r18, r28
    cc1c:	2f 5f       	subi	r18, 0xFF	; 255
    cc1e:	3f 4f       	sbci	r19, 0xFF	; 255
    cc20:	b6 01       	movw	r22, r12
    cc22:	c5 01       	movw	r24, r10
    cc24:	46 dd       	rcall	.-1396   	; 0xc6b2 <TMR_fillReaderStats>
    cc26:	61 15       	cp	r22, r1
    cc28:	71 05       	cpc	r23, r1
    cc2a:	81 05       	cpc	r24, r1
    cc2c:	91 05       	cpc	r25, r1
    cc2e:	09 f0       	breq	.+2      	; 0xcc32 <TMR_SR_cmdGetReaderStats+0x198>
    cc30:	b4 c0       	rjmp	.+360    	; 0xcd9a <TMR_SR_cmdGetReaderStats+0x300>
    cc32:	cf 5f       	subi	r28, 0xFF	; 255
    cc34:	de 4f       	sbci	r29, 0xFE	; 254
    cc36:	18 82       	st	Y, r1
    cc38:	c1 50       	subi	r28, 0x01	; 1
    cc3a:	d1 40       	sbci	r29, 0x01	; 1
    cc3c:	8e c0       	rjmp	.+284    	; 0xcd5a <TMR_SR_cmdGetReaderStats+0x2c0>
    cc3e:	f6 01       	movw	r30, r12
    cc40:	e0 5b       	subi	r30, 0xB0	; 176
    cc42:	ff 4f       	sbci	r31, 0xFF	; 255
    cc44:	40 81       	ld	r20, Z
    cc46:	51 81       	ldd	r21, Z+1	; 0x01
    cc48:	82 2f       	mov	r24, r18
    cc4a:	90 e0       	ldi	r25, 0x00	; 0
    cc4c:	fc 01       	movw	r30, r24
    cc4e:	ee 0f       	add	r30, r30
    cc50:	ff 1f       	adc	r31, r31
    cc52:	e8 0f       	add	r30, r24
    cc54:	f9 1f       	adc	r31, r25
    cc56:	ee 0f       	add	r30, r30
    cc58:	ff 1f       	adc	r31, r31
    cc5a:	e4 0f       	add	r30, r20
    cc5c:	f5 1f       	adc	r31, r21
    cc5e:	80 81       	ld	r24, Z
    cc60:	81 11       	cpse	r24, r1
    cc62:	68 c0       	rjmp	.+208    	; 0xcd34 <TMR_SR_cmdGetReaderStats+0x29a>
    cc64:	2f 5f       	subi	r18, 0xFF	; 255
    cc66:	62 c0       	rjmp	.+196    	; 0xcd2c <TMR_SR_cmdGetReaderStats+0x292>
    cc68:	82 2f       	mov	r24, r18
    cc6a:	90 e0       	ldi	r25, 0x00	; 0
    cc6c:	bc 01       	movw	r22, r24
    cc6e:	66 0f       	add	r22, r22
    cc70:	77 1f       	adc	r23, r23
    cc72:	86 0f       	add	r24, r22
    cc74:	97 1f       	adc	r25, r23
    cc76:	88 0f       	add	r24, r24
    cc78:	99 1f       	adc	r25, r25
    cc7a:	bc 01       	movw	r22, r24
    cc7c:	da 01       	movw	r26, r20
    cc7e:	a8 0f       	add	r26, r24
    cc80:	b9 1f       	adc	r27, r25
    cc82:	8c 91       	ld	r24, X
    cc84:	88 23       	and	r24, r24
    cc86:	09 f4       	brne	.+2      	; 0xcc8a <TMR_SR_cmdGetReaderStats+0x1f0>
    cc88:	50 c0       	rjmp	.+160    	; 0xcd2a <TMR_SR_cmdGetReaderStats+0x290>
    cc8a:	80 83       	st	Z, r24
    cc8c:	f6 01       	movw	r30, r12
    cc8e:	e0 5b       	subi	r30, 0xB0	; 176
    cc90:	ff 4f       	sbci	r31, 0xFF	; 255
    cc92:	20 81       	ld	r18, Z
    cc94:	31 81       	ldd	r19, Z+1	; 0x01
    cc96:	cf 5f       	subi	r28, 0xFF	; 255
    cc98:	de 4f       	sbci	r29, 0xFE	; 254
    cc9a:	88 81       	ld	r24, Y
    cc9c:	c1 50       	subi	r28, 0x01	; 1
    cc9e:	d1 40       	sbci	r29, 0x01	; 1
    cca0:	90 e0       	ldi	r25, 0x00	; 0
    cca2:	ac 01       	movw	r20, r24
    cca4:	44 0f       	add	r20, r20
    cca6:	55 1f       	adc	r21, r21
    cca8:	84 0f       	add	r24, r20
    ccaa:	95 1f       	adc	r25, r21
    ccac:	88 0f       	add	r24, r24
    ccae:	99 1f       	adc	r25, r25
    ccb0:	a9 01       	movw	r20, r18
    ccb2:	48 0f       	add	r20, r24
    ccb4:	59 1f       	adc	r21, r25
    ccb6:	26 0f       	add	r18, r22
    ccb8:	37 1f       	adc	r19, r23
    ccba:	d9 01       	movw	r26, r18
    ccbc:	11 96       	adiw	r26, 0x01	; 1
    ccbe:	0d 91       	ld	r16, X+
    ccc0:	1d 91       	ld	r17, X+
    ccc2:	2d 91       	ld	r18, X+
    ccc4:	3c 91       	ld	r19, X
    ccc6:	14 97       	sbiw	r26, 0x04	; 4
    ccc8:	da 01       	movw	r26, r20
    ccca:	11 96       	adiw	r26, 0x01	; 1
    cccc:	0d 93       	st	X+, r16
    ccce:	1d 93       	st	X+, r17
    ccd0:	2d 93       	st	X+, r18
    ccd2:	3c 93       	st	X, r19
    ccd4:	14 97       	sbiw	r26, 0x04	; 4
    ccd6:	20 81       	ld	r18, Z
    ccd8:	31 81       	ldd	r19, Z+1	; 0x01
    ccda:	82 0f       	add	r24, r18
    ccdc:	93 1f       	adc	r25, r19
    ccde:	26 0f       	add	r18, r22
    cce0:	37 1f       	adc	r19, r23
    cce2:	d9 01       	movw	r26, r18
    cce4:	15 96       	adiw	r26, 0x05	; 5
    cce6:	2c 91       	ld	r18, X
    cce8:	dc 01       	movw	r26, r24
    ccea:	15 96       	adiw	r26, 0x05	; 5
    ccec:	2c 93       	st	X, r18
    ccee:	a0 81       	ld	r26, Z
    ccf0:	b1 81       	ldd	r27, Z+1	; 0x01
    ccf2:	a6 0f       	add	r26, r22
    ccf4:	b7 1f       	adc	r27, r23
    ccf6:	1c 92       	st	X, r1
    ccf8:	a0 81       	ld	r26, Z
    ccfa:	b1 81       	ldd	r27, Z+1	; 0x01
    ccfc:	a6 0f       	add	r26, r22
    ccfe:	b7 1f       	adc	r27, r23
    cd00:	11 96       	adiw	r26, 0x01	; 1
    cd02:	1d 92       	st	X+, r1
    cd04:	1d 92       	st	X+, r1
    cd06:	1d 92       	st	X+, r1
    cd08:	1c 92       	st	X, r1
    cd0a:	14 97       	sbiw	r26, 0x04	; 4
    cd0c:	80 81       	ld	r24, Z
    cd0e:	91 81       	ldd	r25, Z+1	; 0x01
    cd10:	fc 01       	movw	r30, r24
    cd12:	e6 0f       	add	r30, r22
    cd14:	f7 1f       	adc	r31, r23
    cd16:	15 82       	std	Z+5, r1	; 0x05
    cd18:	f6 01       	movw	r30, r12
    cd1a:	ec 5a       	subi	r30, 0xAC	; 172
    cd1c:	ff 4f       	sbci	r31, 0xFF	; 255
    cd1e:	80 81       	ld	r24, Z
    cd20:	91 81       	ldd	r25, Z+1	; 0x01
    cd22:	01 96       	adiw	r24, 0x01	; 1
    cd24:	91 83       	std	Z+1, r25	; 0x01
    cd26:	80 83       	st	Z, r24
    cd28:	0d c0       	rjmp	.+26     	; 0xcd44 <TMR_SR_cmdGetReaderStats+0x2aa>
    cd2a:	2f 5f       	subi	r18, 0xFF	; 255
    cd2c:	23 17       	cp	r18, r19
    cd2e:	08 f4       	brcc	.+2      	; 0xcd32 <TMR_SR_cmdGetReaderStats+0x298>
    cd30:	9b cf       	rjmp	.-202    	; 0xcc68 <TMR_SR_cmdGetReaderStats+0x1ce>
    cd32:	08 c0       	rjmp	.+16     	; 0xcd44 <TMR_SR_cmdGetReaderStats+0x2aa>
    cd34:	f6 01       	movw	r30, r12
    cd36:	ec 5a       	subi	r30, 0xAC	; 172
    cd38:	ff 4f       	sbci	r31, 0xFF	; 255
    cd3a:	80 81       	ld	r24, Z
    cd3c:	91 81       	ldd	r25, Z+1	; 0x01
    cd3e:	01 96       	adiw	r24, 0x01	; 1
    cd40:	91 83       	std	Z+1, r25	; 0x01
    cd42:	80 83       	st	Z, r24
    cd44:	cf 5f       	subi	r28, 0xFF	; 255
    cd46:	de 4f       	sbci	r29, 0xFE	; 254
    cd48:	88 81       	ld	r24, Y
    cd4a:	c1 50       	subi	r28, 0x01	; 1
    cd4c:	d1 40       	sbci	r29, 0x01	; 1
    cd4e:	8f 5f       	subi	r24, 0xFF	; 255
    cd50:	cf 5f       	subi	r28, 0xFF	; 255
    cd52:	de 4f       	sbci	r29, 0xFE	; 254
    cd54:	88 83       	st	Y, r24
    cd56:	c1 50       	subi	r28, 0x01	; 1
    cd58:	d1 40       	sbci	r29, 0x01	; 1
    cd5a:	f5 01       	movw	r30, r10
    cd5c:	ec 52       	subi	r30, 0x2C	; 44
    cd5e:	fe 4f       	sbci	r31, 0xFE	; 254
    cd60:	01 90       	ld	r0, Z+
    cd62:	f0 81       	ld	r31, Z
    cd64:	e0 2d       	mov	r30, r0
    cd66:	33 81       	ldd	r19, Z+3	; 0x03
    cd68:	cf 5f       	subi	r28, 0xFF	; 255
    cd6a:	de 4f       	sbci	r29, 0xFE	; 254
    cd6c:	28 81       	ld	r18, Y
    cd6e:	c1 50       	subi	r28, 0x01	; 1
    cd70:	d1 40       	sbci	r29, 0x01	; 1
    cd72:	23 17       	cp	r18, r19
    cd74:	08 f4       	brcc	.+2      	; 0xcd78 <TMR_SR_cmdGetReaderStats+0x2de>
    cd76:	63 cf       	rjmp	.-314    	; 0xcc3e <TMR_SR_cmdGetReaderStats+0x1a4>
    cd78:	f5 01       	movw	r30, r10
    cd7a:	eb 5e       	subi	r30, 0xEB	; 235
    cd7c:	f9 4f       	sbci	r31, 0xF9	; 249
    cd7e:	80 81       	ld	r24, Z
    cd80:	91 81       	ldd	r25, Z+1	; 0x01
    cd82:	f6 01       	movw	r30, r12
    cd84:	91 83       	std	Z+1, r25	; 0x01
    cd86:	80 83       	st	Z, r24
    cd88:	40 e0       	ldi	r20, 0x00	; 0
    cd8a:	30 e0       	ldi	r19, 0x00	; 0
    cd8c:	20 e0       	ldi	r18, 0x00	; 0
    cd8e:	90 e0       	ldi	r25, 0x00	; 0
    cd90:	07 c0       	rjmp	.+14     	; 0xcda0 <TMR_SR_cmdGetReaderStats+0x306>
    cd92:	46 2f       	mov	r20, r22
    cd94:	37 2f       	mov	r19, r23
    cd96:	28 2f       	mov	r18, r24
    cd98:	03 c0       	rjmp	.+6      	; 0xcda0 <TMR_SR_cmdGetReaderStats+0x306>
    cd9a:	46 2f       	mov	r20, r22
    cd9c:	37 2f       	mov	r19, r23
    cd9e:	28 2f       	mov	r18, r24
    cda0:	64 2f       	mov	r22, r20
    cda2:	73 2f       	mov	r23, r19
    cda4:	82 2f       	mov	r24, r18
    cda6:	ca 5f       	subi	r28, 0xFA	; 250
    cda8:	de 4f       	sbci	r29, 0xFE	; 254
    cdaa:	0f b6       	in	r0, 0x3f	; 63
    cdac:	f8 94       	cli
    cdae:	de bf       	out	0x3e, r29	; 62
    cdb0:	0f be       	out	0x3f, r0	; 63
    cdb2:	cd bf       	out	0x3d, r28	; 61
    cdb4:	df 91       	pop	r29
    cdb6:	cf 91       	pop	r28
    cdb8:	1f 91       	pop	r17
    cdba:	0f 91       	pop	r16
    cdbc:	ff 90       	pop	r15
    cdbe:	ef 90       	pop	r14
    cdc0:	df 90       	pop	r13
    cdc2:	cf 90       	pop	r12
    cdc4:	bf 90       	pop	r11
    cdc6:	af 90       	pop	r10
    cdc8:	08 95       	ret

0000cdca <TMR_SR_cmdResetReaderStats>:
    cdca:	cf 93       	push	r28
    cdcc:	df 93       	push	r29
    cdce:	cd b7       	in	r28, 0x3d	; 61
    cdd0:	de b7       	in	r29, 0x3e	; 62
    cdd2:	da 95       	dec	r29
    cdd4:	0f b6       	in	r0, 0x3f	; 63
    cdd6:	f8 94       	cli
    cdd8:	de bf       	out	0x3e, r29	; 62
    cdda:	0f be       	out	0x3f, r0	; 63
    cddc:	cd bf       	out	0x3d, r28	; 61
    cdde:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    cde2:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    cde6:	4c e6       	ldi	r20, 0x6C	; 108
    cde8:	4b 83       	std	Y+3, r20	; 0x03
    cdea:	2e 5f       	subi	r18, 0xFE	; 254
    cdec:	3f 4f       	sbci	r19, 0xFF	; 255
    cdee:	41 e0       	ldi	r20, 0x01	; 1
    cdf0:	4c 83       	std	Y+4, r20	; 0x04
    cdf2:	60 38       	cpi	r22, 0x80	; 128
    cdf4:	71 05       	cpc	r23, r1
    cdf6:	48 f4       	brcc	.+18     	; 0xce0a <TMR_SR_cmdResetReaderStats+0x40>
    cdf8:	2f 5f       	subi	r18, 0xFF	; 255
    cdfa:	3f 4f       	sbci	r19, 0xFF	; 255
    cdfc:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    ce00:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    ce04:	6d 83       	std	Y+5, r22	; 0x05
    ce06:	25 e0       	ldi	r18, 0x05	; 5
    ce08:	12 c0       	rjmp	.+36     	; 0xce2e <TMR_SR_cmdResetReaderStats+0x64>
    ce0a:	ab 01       	movw	r20, r22
    ce0c:	4f 77       	andi	r20, 0x7F	; 127
    ce0e:	55 27       	eor	r21, r21
    ce10:	60 78       	andi	r22, 0x80	; 128
    ce12:	66 0f       	add	r22, r22
    ce14:	77 1f       	adc	r23, r23
    ce16:	64 2b       	or	r22, r20
    ce18:	75 2b       	or	r23, r21
    ce1a:	70 68       	ori	r23, 0x80	; 128
    ce1c:	2e 5f       	subi	r18, 0xFE	; 254
    ce1e:	3f 4f       	sbci	r19, 0xFF	; 255
    ce20:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    ce24:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    ce28:	7d 83       	std	Y+5, r23	; 0x05
    ce2a:	6e 83       	std	Y+6, r22	; 0x06
    ce2c:	26 e0       	ldi	r18, 0x06	; 6
    ce2e:	23 50       	subi	r18, 0x03	; 3
    ce30:	2a 83       	std	Y+2, r18	; 0x02
    ce32:	fc 01       	movw	r30, r24
    ce34:	e0 52       	subi	r30, 0x20	; 32
    ce36:	fe 4f       	sbci	r31, 0xFE	; 254
    ce38:	20 81       	ld	r18, Z
    ce3a:	31 81       	ldd	r19, Z+1	; 0x01
    ce3c:	42 81       	ldd	r20, Z+2	; 0x02
    ce3e:	53 81       	ldd	r21, Z+3	; 0x03
    ce40:	be 01       	movw	r22, r28
    ce42:	6f 5f       	subi	r22, 0xFF	; 255
    ce44:	7f 4f       	sbci	r23, 0xFF	; 255
    ce46:	0e 94 f1 35 	call	0x6be2	; 0x6be2 <TMR_SR_sendTimeout>
    ce4a:	61 15       	cp	r22, r1
    ce4c:	71 05       	cpc	r23, r1
    ce4e:	81 05       	cpc	r24, r1
    ce50:	91 05       	cpc	r25, r1
    ce52:	29 f4       	brne	.+10     	; 0xce5e <TMR_SR_cmdResetReaderStats+0x94>
    ce54:	40 e0       	ldi	r20, 0x00	; 0
    ce56:	30 e0       	ldi	r19, 0x00	; 0
    ce58:	20 e0       	ldi	r18, 0x00	; 0
    ce5a:	90 e0       	ldi	r25, 0x00	; 0
    ce5c:	03 c0       	rjmp	.+6      	; 0xce64 <TMR_SR_cmdResetReaderStats+0x9a>
    ce5e:	46 2f       	mov	r20, r22
    ce60:	37 2f       	mov	r19, r23
    ce62:	28 2f       	mov	r18, r24
    ce64:	64 2f       	mov	r22, r20
    ce66:	73 2f       	mov	r23, r19
    ce68:	82 2f       	mov	r24, r18
    ce6a:	d3 95       	inc	r29
    ce6c:	0f b6       	in	r0, 0x3f	; 63
    ce6e:	f8 94       	cli
    ce70:	de bf       	out	0x3e, r29	; 62
    ce72:	0f be       	out	0x3f, r0	; 63
    ce74:	cd bf       	out	0x3d, r28	; 61
    ce76:	df 91       	pop	r29
    ce78:	cf 91       	pop	r28
    ce7a:	08 95       	ret

0000ce7c <TMR_SR_cmdStopReading>:
    ce7c:	0f 93       	push	r16
    ce7e:	1f 93       	push	r17
    ce80:	cf 93       	push	r28
    ce82:	df 93       	push	r29
    ce84:	cd b7       	in	r28, 0x3d	; 61
    ce86:	de b7       	in	r29, 0x3e	; 62
    ce88:	c1 50       	subi	r28, 0x01	; 1
    ce8a:	d1 40       	sbci	r29, 0x01	; 1
    ce8c:	0f b6       	in	r0, 0x3f	; 63
    ce8e:	f8 94       	cli
    ce90:	de bf       	out	0x3e, r29	; 62
    ce92:	0f be       	out	0x3f, r0	; 63
    ce94:	cd bf       	out	0x3d, r28	; 61
    ce96:	fc 01       	movw	r30, r24
    ce98:	e5 58       	subi	r30, 0x85	; 133
    ce9a:	fe 4f       	sbci	r31, 0xFE	; 254
    ce9c:	10 82       	st	Z, r1
    ce9e:	4f e2       	ldi	r20, 0x2F	; 47
    cea0:	cf 5f       	subi	r28, 0xFF	; 255
    cea2:	de 4f       	sbci	r29, 0xFE	; 254
    cea4:	48 83       	st	Y, r20
    cea6:	c1 50       	subi	r28, 0x01	; 1
    cea8:	d1 40       	sbci	r29, 0x01	; 1
    ceaa:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    ceae:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    ceb2:	4b 83       	std	Y+3, r20	; 0x03
    ceb4:	1c 82       	std	Y+4, r1	; 0x04
    ceb6:	1d 82       	std	Y+5, r1	; 0x05
    ceb8:	2c 5f       	subi	r18, 0xFC	; 252
    ceba:	3f 4f       	sbci	r19, 0xFF	; 255
    cebc:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    cec0:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    cec4:	22 e0       	ldi	r18, 0x02	; 2
    cec6:	2e 83       	std	Y+6, r18	; 0x06
    cec8:	23 e0       	ldi	r18, 0x03	; 3
    ceca:	2a 83       	std	Y+2, r18	; 0x02
    cecc:	eb 59       	subi	r30, 0x9B	; 155
    cece:	ff 4f       	sbci	r31, 0xFF	; 255
    ced0:	00 81       	ld	r16, Z
    ced2:	11 81       	ldd	r17, Z+1	; 0x01
    ced4:	22 81       	ldd	r18, Z+2	; 0x02
    ced6:	33 81       	ldd	r19, Z+3	; 0x03
    ced8:	ae 01       	movw	r20, r28
    ceda:	4f 5f       	subi	r20, 0xFF	; 255
    cedc:	5e 4f       	sbci	r21, 0xFE	; 254
    cede:	be 01       	movw	r22, r28
    cee0:	6f 5f       	subi	r22, 0xFF	; 255
    cee2:	7f 4f       	sbci	r23, 0xFF	; 255
    cee4:	0e 94 cf 32 	call	0x659e	; 0x659e <TMR_SR_sendMessage>
    cee8:	cf 5f       	subi	r28, 0xFF	; 255
    ceea:	de 4f       	sbci	r29, 0xFE	; 254
    ceec:	0f b6       	in	r0, 0x3f	; 63
    ceee:	f8 94       	cli
    cef0:	de bf       	out	0x3e, r29	; 62
    cef2:	0f be       	out	0x3f, r0	; 63
    cef4:	cd bf       	out	0x3d, r28	; 61
    cef6:	df 91       	pop	r29
    cef8:	cf 91       	pop	r28
    cefa:	1f 91       	pop	r17
    cefc:	0f 91       	pop	r16
    cefe:	08 95       	ret

0000cf00 <TMR_SR_cmdGetReaderWriteTimeOut>:
    cf00:	0f 93       	push	r16
    cf02:	1f 93       	push	r17
    cf04:	cf 93       	push	r28
    cf06:	df 93       	push	r29
    cf08:	cd b7       	in	r28, 0x3d	; 61
    cf0a:	de b7       	in	r29, 0x3e	; 62
    cf0c:	da 95       	dec	r29
    cf0e:	0f b6       	in	r0, 0x3f	; 63
    cf10:	f8 94       	cli
    cf12:	de bf       	out	0x3e, r29	; 62
    cf14:	0f be       	out	0x3f, r0	; 63
    cf16:	cd bf       	out	0x3d, r28	; 61
    cf18:	8a 01       	movw	r16, r20
    cf1a:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    cf1e:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    cf22:	4b e6       	ldi	r20, 0x6B	; 107
    cf24:	4b 83       	std	Y+3, r20	; 0x03
    cf26:	6c 83       	std	Y+4, r22	; 0x04
    cf28:	2d 5f       	subi	r18, 0xFD	; 253
    cf2a:	3f 4f       	sbci	r19, 0xFF	; 255
    cf2c:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    cf30:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    cf34:	2f e3       	ldi	r18, 0x3F	; 63
    cf36:	2d 83       	std	Y+5, r18	; 0x05
    cf38:	45 e0       	ldi	r20, 0x05	; 5
    cf3a:	be 01       	movw	r22, r28
    cf3c:	6f 5f       	subi	r22, 0xFF	; 255
    cf3e:	7f 4f       	sbci	r23, 0xFF	; 255
    cf40:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    cf44:	61 15       	cp	r22, r1
    cf46:	71 05       	cpc	r23, r1
    cf48:	81 05       	cpc	r24, r1
    cf4a:	91 05       	cpc	r25, r1
    cf4c:	a1 f4       	brne	.+40     	; 0xcf76 <TMR_SR_cmdGetReaderWriteTimeOut+0x76>
    cf4e:	81 e0       	ldi	r24, 0x01	; 1
    cf50:	98 85       	ldd	r25, Y+8	; 0x08
    cf52:	91 11       	cpse	r25, r1
    cf54:	01 c0       	rjmp	.+2      	; 0xcf58 <TMR_SR_cmdGetReaderWriteTimeOut+0x58>
    cf56:	80 e0       	ldi	r24, 0x00	; 0
    cf58:	f8 01       	movw	r30, r16
    cf5a:	80 83       	st	Z, r24
    cf5c:	89 85       	ldd	r24, Y+9	; 0x09
    cf5e:	90 e0       	ldi	r25, 0x00	; 0
    cf60:	98 2f       	mov	r25, r24
    cf62:	88 27       	eor	r24, r24
    cf64:	2a 85       	ldd	r18, Y+10	; 0x0a
    cf66:	82 2b       	or	r24, r18
    cf68:	92 83       	std	Z+2, r25	; 0x02
    cf6a:	81 83       	std	Z+1, r24	; 0x01
    cf6c:	40 e0       	ldi	r20, 0x00	; 0
    cf6e:	30 e0       	ldi	r19, 0x00	; 0
    cf70:	20 e0       	ldi	r18, 0x00	; 0
    cf72:	90 e0       	ldi	r25, 0x00	; 0
    cf74:	03 c0       	rjmp	.+6      	; 0xcf7c <TMR_SR_cmdGetReaderWriteTimeOut+0x7c>
    cf76:	46 2f       	mov	r20, r22
    cf78:	37 2f       	mov	r19, r23
    cf7a:	28 2f       	mov	r18, r24
    cf7c:	64 2f       	mov	r22, r20
    cf7e:	73 2f       	mov	r23, r19
    cf80:	82 2f       	mov	r24, r18
    cf82:	d3 95       	inc	r29
    cf84:	0f b6       	in	r0, 0x3f	; 63
    cf86:	f8 94       	cli
    cf88:	de bf       	out	0x3e, r29	; 62
    cf8a:	0f be       	out	0x3f, r0	; 63
    cf8c:	cd bf       	out	0x3d, r28	; 61
    cf8e:	df 91       	pop	r29
    cf90:	cf 91       	pop	r28
    cf92:	1f 91       	pop	r17
    cf94:	0f 91       	pop	r16
    cf96:	08 95       	ret

0000cf98 <TMR_SR_cmdSetReaderWriteTimeOut>:
    cf98:	cf 93       	push	r28
    cf9a:	df 93       	push	r29
    cf9c:	cd b7       	in	r28, 0x3d	; 61
    cf9e:	de b7       	in	r29, 0x3e	; 62
    cfa0:	da 95       	dec	r29
    cfa2:	0f b6       	in	r0, 0x3f	; 63
    cfa4:	f8 94       	cli
    cfa6:	de bf       	out	0x3e, r29	; 62
    cfa8:	0f be       	out	0x3f, r0	; 63
    cfaa:	cd bf       	out	0x3d, r28	; 61
    cfac:	fa 01       	movw	r30, r20
    cfae:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    cfb2:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    cfb6:	4b e9       	ldi	r20, 0x9B	; 155
    cfb8:	4b 83       	std	Y+3, r20	; 0x03
    cfba:	6c 83       	std	Y+4, r22	; 0x04
    cfbc:	2d 5f       	subi	r18, 0xFD	; 253
    cfbe:	3f 4f       	sbci	r19, 0xFF	; 255
    cfc0:	4f e3       	ldi	r20, 0x3F	; 63
    cfc2:	4d 83       	std	Y+5, r20	; 0x05
    cfc4:	a9 01       	movw	r20, r18
    cfc6:	4f 5f       	subi	r20, 0xFF	; 255
    cfc8:	5f 4f       	sbci	r21, 0xFF	; 255
    cfca:	50 93 58 02 	sts	0x0258, r21	; 0x800258 <totalMsgIdx+0x1>
    cfce:	40 93 57 02 	sts	0x0257, r20	; 0x800257 <totalMsgIdx>
    cfd2:	40 81       	ld	r20, Z
    cfd4:	4e 83       	std	Y+6, r20	; 0x06
    cfd6:	41 81       	ldd	r20, Z+1	; 0x01
    cfd8:	52 81       	ldd	r21, Z+2	; 0x02
    cfda:	2d 5f       	subi	r18, 0xFD	; 253
    cfdc:	3f 4f       	sbci	r19, 0xFF	; 255
    cfde:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    cfe2:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    cfe6:	5f 83       	std	Y+7, r21	; 0x07
    cfe8:	48 87       	std	Y+8, r20	; 0x08
    cfea:	48 e0       	ldi	r20, 0x08	; 8
    cfec:	be 01       	movw	r22, r28
    cfee:	6f 5f       	subi	r22, 0xFF	; 255
    cff0:	7f 4f       	sbci	r23, 0xFF	; 255
    cff2:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <TMR_SR_sendCmd>
    cff6:	d3 95       	inc	r29
    cff8:	0f b6       	in	r0, 0x3f	; 63
    cffa:	f8 94       	cli
    cffc:	de bf       	out	0x3e, r29	; 62
    cffe:	0f be       	out	0x3f, r0	; 63
    d000:	cd bf       	out	0x3d, r28	; 61
    d002:	df 91       	pop	r29
    d004:	cf 91       	pop	r28
    d006:	08 95       	ret

0000d008 <TMR_SR_msgAddAccessPassword>:
    d008:	0f 93       	push	r16
    d00a:	1f 93       	push	r17
    d00c:	cf 93       	push	r28
    d00e:	df 93       	push	r29
    d010:	21 15       	cp	r18, r1
    d012:	31 05       	cpc	r19, r1
    d014:	61 f1       	breq	.+88     	; 0xd06e <TMR_SR_msgAddAccessPassword+0x66>
    d016:	e9 01       	movw	r28, r18
    d018:	fa 01       	movw	r30, r20
    d01a:	8b 01       	movw	r16, r22
    d01c:	20 81       	ld	r18, Z
    d01e:	fc 01       	movw	r30, r24
    d020:	e2 0f       	add	r30, r18
    d022:	f1 1d       	adc	r31, r1
    d024:	20 81       	ld	r18, Z
    d026:	20 64       	ori	r18, 0x40	; 64
    d028:	20 83       	st	Z, r18
    d02a:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    d02e:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    d032:	2f 5f       	subi	r18, 0xFF	; 255
    d034:	3f 4f       	sbci	r19, 0xFF	; 255
    d036:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    d03a:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    d03e:	fb 01       	movw	r30, r22
    d040:	20 81       	ld	r18, Z
    d042:	31 e0       	ldi	r19, 0x01	; 1
    d044:	32 0f       	add	r19, r18
    d046:	30 83       	st	Z, r19
    d048:	fc 01       	movw	r30, r24
    d04a:	e2 0f       	add	r30, r18
    d04c:	f1 1d       	adc	r31, r1
    d04e:	2c 81       	ldd	r18, Y+4	; 0x04
    d050:	20 83       	st	Z, r18
    d052:	68 81       	ld	r22, Y
    d054:	79 81       	ldd	r23, Y+1	; 0x01
    d056:	f8 01       	movw	r30, r16
    d058:	20 81       	ld	r18, Z
    d05a:	4c 81       	ldd	r20, Y+4	; 0x04
    d05c:	5d 81       	ldd	r21, Y+5	; 0x05
    d05e:	82 0f       	add	r24, r18
    d060:	91 1d       	adc	r25, r1
    d062:	2a d2       	rcall	.+1108   	; 0xd4b8 <tm_memcpy>
    d064:	8c 81       	ldd	r24, Y+4	; 0x04
    d066:	f8 01       	movw	r30, r16
    d068:	90 81       	ld	r25, Z
    d06a:	89 0f       	add	r24, r25
    d06c:	80 83       	st	Z, r24
    d06e:	df 91       	pop	r29
    d070:	cf 91       	pop	r28
    d072:	1f 91       	pop	r17
    d074:	0f 91       	pop	r16
    d076:	08 95       	ret

0000d078 <TMR_SR_msgAddExtendedParams>:
    d078:	0f 93       	push	r16
    d07a:	1f 93       	push	r17
    d07c:	cf 93       	push	r28
    d07e:	df 93       	push	r29
    d080:	d9 01       	movw	r26, r18
    d082:	14 96       	adiw	r26, 0x04	; 4
    d084:	ed 91       	ld	r30, X+
    d086:	fc 91       	ld	r31, X
    d088:	15 97       	sbiw	r26, 0x05	; 5
    d08a:	30 97       	sbiw	r30, 0x00	; 0
    d08c:	09 f4       	brne	.+2      	; 0xd090 <TMR_SR_msgAddExtendedParams+0x18>
    d08e:	3e c0       	rjmp	.+124    	; 0xd10c <TMR_SR_msgAddExtendedParams+0x94>
    d090:	0d 90       	ld	r0, X+
    d092:	bc 91       	ld	r27, X
    d094:	a0 2d       	mov	r26, r0
    d096:	ac 91       	ld	r26, X
    d098:	aa 23       	and	r26, r26
    d09a:	e1 f1       	breq	.+120    	; 0xd114 <TMR_SR_msgAddExtendedParams+0x9c>
    d09c:	eb 01       	movw	r28, r22
    d09e:	a8 81       	ld	r26, Y
    d0a0:	ea 0f       	add	r30, r26
    d0a2:	f1 1d       	adc	r31, r1
    d0a4:	31 96       	adiw	r30, 0x01	; 1
    d0a6:	e1 30       	cpi	r30, 0x01	; 1
    d0a8:	f1 40       	sbci	r31, 0x01	; 1
    d0aa:	c0 f5       	brcc	.+112    	; 0xd11c <TMR_SR_msgAddExtendedParams+0xa4>
    d0ac:	e9 01       	movw	r28, r18
    d0ae:	fa 01       	movw	r30, r20
    d0b0:	8b 01       	movw	r16, r22
    d0b2:	20 81       	ld	r18, Z
    d0b4:	fc 01       	movw	r30, r24
    d0b6:	e2 0f       	add	r30, r18
    d0b8:	f1 1d       	adc	r31, r1
    d0ba:	20 81       	ld	r18, Z
    d0bc:	24 60       	ori	r18, 0x04	; 4
    d0be:	20 83       	st	Z, r18
    d0c0:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    d0c4:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    d0c8:	2f 5f       	subi	r18, 0xFF	; 255
    d0ca:	3f 4f       	sbci	r19, 0xFF	; 255
    d0cc:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    d0d0:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    d0d4:	fb 01       	movw	r30, r22
    d0d6:	20 81       	ld	r18, Z
    d0d8:	31 e0       	ldi	r19, 0x01	; 1
    d0da:	32 0f       	add	r19, r18
    d0dc:	30 83       	st	Z, r19
    d0de:	fc 01       	movw	r30, r24
    d0e0:	e2 0f       	add	r30, r18
    d0e2:	f1 1d       	adc	r31, r1
    d0e4:	2c 81       	ldd	r18, Y+4	; 0x04
    d0e6:	20 83       	st	Z, r18
    d0e8:	68 81       	ld	r22, Y
    d0ea:	79 81       	ldd	r23, Y+1	; 0x01
    d0ec:	d8 01       	movw	r26, r16
    d0ee:	2c 91       	ld	r18, X
    d0f0:	4c 81       	ldd	r20, Y+4	; 0x04
    d0f2:	5d 81       	ldd	r21, Y+5	; 0x05
    d0f4:	82 0f       	add	r24, r18
    d0f6:	91 1d       	adc	r25, r1
    d0f8:	df d1       	rcall	.+958    	; 0xd4b8 <tm_memcpy>
    d0fa:	8c 81       	ldd	r24, Y+4	; 0x04
    d0fc:	e8 01       	movw	r28, r16
    d0fe:	98 81       	ld	r25, Y
    d100:	89 0f       	add	r24, r25
    d102:	88 83       	st	Y, r24
    d104:	60 e0       	ldi	r22, 0x00	; 0
    d106:	70 e0       	ldi	r23, 0x00	; 0
    d108:	cb 01       	movw	r24, r22
    d10a:	0c c0       	rjmp	.+24     	; 0xd124 <TMR_SR_msgAddExtendedParams+0xac>
    d10c:	60 e0       	ldi	r22, 0x00	; 0
    d10e:	70 e0       	ldi	r23, 0x00	; 0
    d110:	cb 01       	movw	r24, r22
    d112:	08 c0       	rjmp	.+16     	; 0xd124 <TMR_SR_msgAddExtendedParams+0xac>
    d114:	60 e0       	ldi	r22, 0x00	; 0
    d116:	70 e0       	ldi	r23, 0x00	; 0
    d118:	cb 01       	movw	r24, r22
    d11a:	04 c0       	rjmp	.+8      	; 0xd124 <TMR_SR_msgAddExtendedParams+0xac>
    d11c:	66 e0       	ldi	r22, 0x06	; 6
    d11e:	70 e0       	ldi	r23, 0x00	; 0
    d120:	80 e0       	ldi	r24, 0x00	; 0
    d122:	93 e0       	ldi	r25, 0x03	; 3
    d124:	df 91       	pop	r29
    d126:	cf 91       	pop	r28
    d128:	1f 91       	pop	r17
    d12a:	0f 91       	pop	r16
    d12c:	08 95       	ret

0000d12e <TMR_SR_msgAddWriteMemory>:
    d12e:	ef 92       	push	r14
    d130:	ff 92       	push	r15
    d132:	0f 93       	push	r16
    d134:	1f 93       	push	r17
    d136:	fb 01       	movw	r30, r22
    d138:	60 91 57 02 	lds	r22, 0x0257	; 0x800257 <totalMsgIdx>
    d13c:	70 91 58 02 	lds	r23, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    d140:	6f 5f       	subi	r22, 0xFF	; 255
    d142:	7f 4f       	sbci	r23, 0xFF	; 255
    d144:	70 93 58 02 	sts	0x0258, r23	; 0x800258 <totalMsgIdx+0x1>
    d148:	60 93 57 02 	sts	0x0257, r22	; 0x800257 <totalMsgIdx>
    d14c:	30 81       	ld	r19, Z
    d14e:	61 e0       	ldi	r22, 0x01	; 1
    d150:	63 0f       	add	r22, r19
    d152:	60 83       	st	Z, r22
    d154:	dc 01       	movw	r26, r24
    d156:	a3 0f       	add	r26, r19
    d158:	b1 1d       	adc	r27, r1
    d15a:	34 e2       	ldi	r19, 0x24	; 36
    d15c:	3c 93       	st	X, r19
    d15e:	60 91 57 02 	lds	r22, 0x0257	; 0x800257 <totalMsgIdx>
    d162:	70 91 58 02 	lds	r23, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    d166:	6e 5f       	subi	r22, 0xFE	; 254
    d168:	7f 4f       	sbci	r23, 0xFF	; 255
    d16a:	70 93 58 02 	sts	0x0258, r23	; 0x800258 <totalMsgIdx+0x1>
    d16e:	60 93 57 02 	sts	0x0257, r22	; 0x800257 <totalMsgIdx>
    d172:	30 81       	ld	r19, Z
    d174:	61 e0       	ldi	r22, 0x01	; 1
    d176:	63 0f       	add	r22, r19
    d178:	60 83       	st	Z, r22
    d17a:	dc 01       	movw	r26, r24
    d17c:	a3 0f       	add	r26, r19
    d17e:	b1 1d       	adc	r27, r1
    d180:	5c 93       	st	X, r21
    d182:	30 81       	ld	r19, Z
    d184:	51 e0       	ldi	r21, 0x01	; 1
    d186:	53 0f       	add	r21, r19
    d188:	50 83       	st	Z, r21
    d18a:	dc 01       	movw	r26, r24
    d18c:	a3 0f       	add	r26, r19
    d18e:	b1 1d       	adc	r27, r1
    d190:	4c 93       	st	X, r20
    d192:	40 91 57 02 	lds	r20, 0x0257	; 0x800257 <totalMsgIdx>
    d196:	50 91 58 02 	lds	r21, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    d19a:	4f 5f       	subi	r20, 0xFF	; 255
    d19c:	5f 4f       	sbci	r21, 0xFF	; 255
    d19e:	50 93 58 02 	sts	0x0258, r21	; 0x800258 <totalMsgIdx+0x1>
    d1a2:	40 93 57 02 	sts	0x0257, r20	; 0x800257 <totalMsgIdx>
    d1a6:	30 81       	ld	r19, Z
    d1a8:	41 e0       	ldi	r20, 0x01	; 1
    d1aa:	43 0f       	add	r20, r19
    d1ac:	40 83       	st	Z, r20
    d1ae:	dc 01       	movw	r26, r24
    d1b0:	a3 0f       	add	r26, r19
    d1b2:	b1 1d       	adc	r27, r1
    d1b4:	1c 92       	st	X, r1
    d1b6:	40 91 57 02 	lds	r20, 0x0257	; 0x800257 <totalMsgIdx>
    d1ba:	50 91 58 02 	lds	r21, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    d1be:	4f 5f       	subi	r20, 0xFF	; 255
    d1c0:	5f 4f       	sbci	r21, 0xFF	; 255
    d1c2:	50 93 58 02 	sts	0x0258, r21	; 0x800258 <totalMsgIdx+0x1>
    d1c6:	40 93 57 02 	sts	0x0257, r20	; 0x800257 <totalMsgIdx>
    d1ca:	30 81       	ld	r19, Z
    d1cc:	41 e0       	ldi	r20, 0x01	; 1
    d1ce:	43 0f       	add	r20, r19
    d1d0:	40 83       	st	Z, r20
    d1d2:	dc 01       	movw	r26, r24
    d1d4:	a3 0f       	add	r26, r19
    d1d6:	b1 1d       	adc	r27, r1
    d1d8:	2c 93       	st	X, r18
    d1da:	20 91 59 02 	lds	r18, 0x0259	; 0x800259 <isAddrByteExtended>
    d1de:	22 23       	and	r18, r18
    d1e0:	59 f1       	breq	.+86     	; 0xd238 <TMR_SR_msgAddWriteMemory+0x10a>
    d1e2:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    d1e6:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    d1ea:	2c 5f       	subi	r18, 0xFC	; 252
    d1ec:	3f 4f       	sbci	r19, 0xFF	; 255
    d1ee:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    d1f2:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    d1f6:	20 81       	ld	r18, Z
    d1f8:	31 e0       	ldi	r19, 0x01	; 1
    d1fa:	32 0f       	add	r19, r18
    d1fc:	30 83       	st	Z, r19
    d1fe:	dc 01       	movw	r26, r24
    d200:	a2 0f       	add	r26, r18
    d202:	b1 1d       	adc	r27, r1
    d204:	1c 93       	st	X, r17
    d206:	20 81       	ld	r18, Z
    d208:	31 e0       	ldi	r19, 0x01	; 1
    d20a:	32 0f       	add	r19, r18
    d20c:	30 83       	st	Z, r19
    d20e:	dc 01       	movw	r26, r24
    d210:	a2 0f       	add	r26, r18
    d212:	b1 1d       	adc	r27, r1
    d214:	0c 93       	st	X, r16
    d216:	20 81       	ld	r18, Z
    d218:	31 e0       	ldi	r19, 0x01	; 1
    d21a:	32 0f       	add	r19, r18
    d21c:	30 83       	st	Z, r19
    d21e:	dc 01       	movw	r26, r24
    d220:	a2 0f       	add	r26, r18
    d222:	b1 1d       	adc	r27, r1
    d224:	fc 92       	st	X, r15
    d226:	20 81       	ld	r18, Z
    d228:	31 e0       	ldi	r19, 0x01	; 1
    d22a:	32 0f       	add	r19, r18
    d22c:	30 83       	st	Z, r19
    d22e:	fc 01       	movw	r30, r24
    d230:	e2 0f       	add	r30, r18
    d232:	f1 1d       	adc	r31, r1
    d234:	e0 82       	st	Z, r14
    d236:	12 c0       	rjmp	.+36     	; 0xd25c <TMR_SR_msgAddWriteMemory+0x12e>
    d238:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    d23c:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    d240:	2f 5f       	subi	r18, 0xFF	; 255
    d242:	3f 4f       	sbci	r19, 0xFF	; 255
    d244:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    d248:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    d24c:	20 81       	ld	r18, Z
    d24e:	31 e0       	ldi	r19, 0x01	; 1
    d250:	32 0f       	add	r19, r18
    d252:	30 83       	st	Z, r19
    d254:	fc 01       	movw	r30, r24
    d256:	e2 0f       	add	r30, r18
    d258:	f1 1d       	adc	r31, r1
    d25a:	e0 82       	st	Z, r14
    d25c:	1f 91       	pop	r17
    d25e:	0f 91       	pop	r16
    d260:	ff 90       	pop	r15
    d262:	ef 90       	pop	r14
    d264:	08 95       	ret

0000d266 <TMR_SR_msgAddReadMemory>:

void
TMR_SR_msgAddReadMemory(uint8_t *msg, uint8_t *i, uint16_t timeout, TMR_Memory_Type memType, uint32_t address,
                        uint8_t len, bool withMetaData)
{
    d266:	af 92       	push	r10
    d268:	cf 92       	push	r12
    d26a:	ef 92       	push	r14
    d26c:	ff 92       	push	r15
    d26e:	0f 93       	push	r16
    d270:	1f 93       	push	r17
    d272:	fb 01       	movw	r30, r22
  SETU8(msg, *i, TMR_SR_OPCODE_READ_TAG_DATA); //0x28 command
    d274:	60 91 57 02 	lds	r22, 0x0257	; 0x800257 <totalMsgIdx>
    d278:	70 91 58 02 	lds	r23, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    d27c:	6f 5f       	subi	r22, 0xFF	; 255
    d27e:	7f 4f       	sbci	r23, 0xFF	; 255
    d280:	70 93 58 02 	sts	0x0258, r23	; 0x800258 <totalMsgIdx+0x1>
    d284:	60 93 57 02 	sts	0x0257, r22	; 0x800257 <totalMsgIdx>
    d288:	30 81       	ld	r19, Z
    d28a:	61 e0       	ldi	r22, 0x01	; 1
    d28c:	63 0f       	add	r22, r19
    d28e:	60 83       	st	Z, r22
    d290:	dc 01       	movw	r26, r24
    d292:	a3 0f       	add	r26, r19
    d294:	b1 1d       	adc	r27, r1
    d296:	38 e2       	ldi	r19, 0x28	; 40
    d298:	3c 93       	st	X, r19
  SETU16(msg, *i, timeout);
    d29a:	60 91 57 02 	lds	r22, 0x0257	; 0x800257 <totalMsgIdx>
    d29e:	70 91 58 02 	lds	r23, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    d2a2:	6e 5f       	subi	r22, 0xFE	; 254
    d2a4:	7f 4f       	sbci	r23, 0xFF	; 255
    d2a6:	70 93 58 02 	sts	0x0258, r23	; 0x800258 <totalMsgIdx+0x1>
    d2aa:	60 93 57 02 	sts	0x0257, r22	; 0x800257 <totalMsgIdx>
    d2ae:	30 81       	ld	r19, Z
    d2b0:	61 e0       	ldi	r22, 0x01	; 1
    d2b2:	63 0f       	add	r22, r19
    d2b4:	60 83       	st	Z, r22
    d2b6:	dc 01       	movw	r26, r24
    d2b8:	a3 0f       	add	r26, r19
    d2ba:	b1 1d       	adc	r27, r1
    d2bc:	5c 93       	st	X, r21
    d2be:	30 81       	ld	r19, Z
    d2c0:	51 e0       	ldi	r21, 0x01	; 1
    d2c2:	53 0f       	add	r21, r19
    d2c4:	50 83       	st	Z, r21
    d2c6:	dc 01       	movw	r26, r24
    d2c8:	a3 0f       	add	r26, r19
    d2ca:	b1 1d       	adc	r27, r1
    d2cc:	4c 93       	st	X, r20
  SETU8(msg, *i, 0x00); //option
    d2ce:	40 91 57 02 	lds	r20, 0x0257	; 0x800257 <totalMsgIdx>
    d2d2:	50 91 58 02 	lds	r21, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    d2d6:	4f 5f       	subi	r20, 0xFF	; 255
    d2d8:	5f 4f       	sbci	r21, 0xFF	; 255
    d2da:	50 93 58 02 	sts	0x0258, r21	; 0x800258 <totalMsgIdx+0x1>
    d2de:	40 93 57 02 	sts	0x0257, r20	; 0x800257 <totalMsgIdx>
    d2e2:	30 81       	ld	r19, Z
    d2e4:	41 e0       	ldi	r20, 0x01	; 1
    d2e6:	43 0f       	add	r20, r19
    d2e8:	40 83       	st	Z, r20
    d2ea:	dc 01       	movw	r26, r24
    d2ec:	a3 0f       	add	r26, r19
    d2ee:	b1 1d       	adc	r27, r1
    d2f0:	1c 92       	st	X, r1
  if (withMetaData)
    d2f2:	aa 20       	and	r10, r10
    d2f4:	d1 f0       	breq	.+52     	; 0xd32a <TMR_SR_msgAddReadMemory+0xc4>
  {
    SETU16(msg, *i, 0); // metadata flags - initialize
    d2f6:	40 91 57 02 	lds	r20, 0x0257	; 0x800257 <totalMsgIdx>
    d2fa:	50 91 58 02 	lds	r21, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    d2fe:	4e 5f       	subi	r20, 0xFE	; 254
    d300:	5f 4f       	sbci	r21, 0xFF	; 255
    d302:	50 93 58 02 	sts	0x0258, r21	; 0x800258 <totalMsgIdx+0x1>
    d306:	40 93 57 02 	sts	0x0257, r20	; 0x800257 <totalMsgIdx>
    d30a:	30 81       	ld	r19, Z
    d30c:	41 e0       	ldi	r20, 0x01	; 1
    d30e:	43 0f       	add	r20, r19
    d310:	40 83       	st	Z, r20
    d312:	dc 01       	movw	r26, r24
    d314:	a3 0f       	add	r26, r19
    d316:	b1 1d       	adc	r27, r1
    d318:	1c 92       	st	X, r1
    d31a:	30 81       	ld	r19, Z
    d31c:	41 e0       	ldi	r20, 0x01	; 1
    d31e:	43 0f       	add	r20, r19
    d320:	40 83       	st	Z, r20
    d322:	dc 01       	movw	r26, r24
    d324:	a3 0f       	add	r26, r19
    d326:	b1 1d       	adc	r27, r1
    d328:	1c 92       	st	X, r1
  }
  SETU8(msg, *i, memType);
    d32a:	40 91 57 02 	lds	r20, 0x0257	; 0x800257 <totalMsgIdx>
    d32e:	50 91 58 02 	lds	r21, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    d332:	4f 5f       	subi	r20, 0xFF	; 255
    d334:	5f 4f       	sbci	r21, 0xFF	; 255
    d336:	50 93 58 02 	sts	0x0258, r21	; 0x800258 <totalMsgIdx+0x1>
    d33a:	40 93 57 02 	sts	0x0257, r20	; 0x800257 <totalMsgIdx>
    d33e:	30 81       	ld	r19, Z
    d340:	41 e0       	ldi	r20, 0x01	; 1
    d342:	43 0f       	add	r20, r19
    d344:	40 83       	st	Z, r20
    d346:	dc 01       	movw	r26, r24
    d348:	a3 0f       	add	r26, r19
    d34a:	b1 1d       	adc	r27, r1
    d34c:	2c 93       	st	X, r18
  if(isAddrByteExtended)
    d34e:	20 91 59 02 	lds	r18, 0x0259	; 0x800259 <isAddrByteExtended>
    d352:	22 23       	and	r18, r18
    d354:	59 f1       	breq	.+86     	; 0xd3ac <TMR_SR_msgAddReadMemory+0x146>
  {
    SETU32(msg, *i, address);
    d356:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    d35a:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    d35e:	2c 5f       	subi	r18, 0xFC	; 252
    d360:	3f 4f       	sbci	r19, 0xFF	; 255
    d362:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    d366:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    d36a:	20 81       	ld	r18, Z
    d36c:	31 e0       	ldi	r19, 0x01	; 1
    d36e:	32 0f       	add	r19, r18
    d370:	30 83       	st	Z, r19
    d372:	dc 01       	movw	r26, r24
    d374:	a2 0f       	add	r26, r18
    d376:	b1 1d       	adc	r27, r1
    d378:	1c 93       	st	X, r17
    d37a:	20 81       	ld	r18, Z
    d37c:	31 e0       	ldi	r19, 0x01	; 1
    d37e:	32 0f       	add	r19, r18
    d380:	30 83       	st	Z, r19
    d382:	dc 01       	movw	r26, r24
    d384:	a2 0f       	add	r26, r18
    d386:	b1 1d       	adc	r27, r1
    d388:	0c 93       	st	X, r16
    d38a:	20 81       	ld	r18, Z
    d38c:	31 e0       	ldi	r19, 0x01	; 1
    d38e:	32 0f       	add	r19, r18
    d390:	30 83       	st	Z, r19
    d392:	dc 01       	movw	r26, r24
    d394:	a2 0f       	add	r26, r18
    d396:	b1 1d       	adc	r27, r1
    d398:	fc 92       	st	X, r15
    d39a:	20 81       	ld	r18, Z
    d39c:	31 e0       	ldi	r19, 0x01	; 1
    d39e:	32 0f       	add	r19, r18
    d3a0:	30 83       	st	Z, r19
    d3a2:	dc 01       	movw	r26, r24
    d3a4:	a2 0f       	add	r26, r18
    d3a6:	b1 1d       	adc	r27, r1
    d3a8:	ec 92       	st	X, r14
    d3aa:	12 c0       	rjmp	.+36     	; 0xd3d0 <TMR_SR_msgAddReadMemory+0x16a>
  }
  else
  {
    SETU8(msg, *i, address);
    d3ac:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    d3b0:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    d3b4:	2f 5f       	subi	r18, 0xFF	; 255
    d3b6:	3f 4f       	sbci	r19, 0xFF	; 255
    d3b8:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    d3bc:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    d3c0:	20 81       	ld	r18, Z
    d3c2:	31 e0       	ldi	r19, 0x01	; 1
    d3c4:	32 0f       	add	r19, r18
    d3c6:	30 83       	st	Z, r19
    d3c8:	dc 01       	movw	r26, r24
    d3ca:	a2 0f       	add	r26, r18
    d3cc:	b1 1d       	adc	r27, r1
    d3ce:	ec 92       	st	X, r14
  }
  SETU8(msg, *i, len);
    d3d0:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    d3d4:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    d3d8:	2f 5f       	subi	r18, 0xFF	; 255
    d3da:	3f 4f       	sbci	r19, 0xFF	; 255
    d3dc:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    d3e0:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    d3e4:	20 81       	ld	r18, Z
    d3e6:	31 e0       	ldi	r19, 0x01	; 1
    d3e8:	32 0f       	add	r19, r18
    d3ea:	30 83       	st	Z, r19
    d3ec:	fc 01       	movw	r30, r24
    d3ee:	e2 0f       	add	r30, r18
    d3f0:	f1 1d       	adc	r31, r1
    d3f2:	c0 82       	st	Z, r12
}
    d3f4:	1f 91       	pop	r17
    d3f6:	0f 91       	pop	r16
    d3f8:	ff 90       	pop	r15
    d3fa:	ef 90       	pop	r14
    d3fc:	cf 90       	pop	r12
    d3fe:	af 90       	pop	r10
    d400:	08 95       	ret

0000d402 <s_flush>:
   * nothing.
   */
static TMR_Status s_flush(TMR_SR_SerialTransport *this)
{
	(void)this; /*This parameter is unused in this function*/
	UART0_flush();
    d402:	0e 94 e1 73 	call	0xe7c2	; 0xe7c2 <UART0_flush>
	return TMR_SUCCESS; /*Dummy return, as no status is calculated regarding flush operation of buffer*/
}
    d406:	60 e0       	ldi	r22, 0x00	; 0
    d408:	70 e0       	ldi	r23, 0x00	; 0
    d40a:	cb 01       	movw	r24, r22
    d40c:	08 95       	ret

0000d40e <s_shutdown>:
   * acquired resources.
   */
static TMR_Status s_shutdown(TMR_SR_SerialTransport *this)
{
	(void)this; /*This parameter is unused in this function*/
	UART0_DeInit();
    d40e:	0e 94 f0 73 	call	0xe7e0	; 0xe7e0 <UART0_DeInit>
	return TMR_SUCCESS; /*Dummy return, as no status is calculated regarding flush operation of buffer*/
}
    d412:	60 e0       	ldi	r22, 0x00	; 0
    d414:	70 e0       	ldi	r23, 0x00	; 0
    d416:	cb 01       	movw	r24, r22
    d418:	08 95       	ret

0000d41a <s_setBaudRate>:
   */
static TMR_Status s_setBaudRate(TMR_SR_SerialTransport *this, uint32_t rate)
{
	TMR_Status baud_status;
	(void) this; /*This parameter is unused in this function*/
	baud_status = UART0_change_BAUD(rate);
    d41a:	cb 01       	movw	r24, r22
    d41c:	ba 01       	movw	r22, r20
    d41e:	0c 94 d2 72 	jmp	0xe5a4	; 0xe5a4 <UART0_change_BAUD>
	return baud_status;
}
    d422:	08 95       	ret

0000d424 <s_receiveBytes>:
   * connection and store them into the memory pointed to by
   * message. If the required number of bytes are not received in
   * timeoutMs milliseconds, it should return TMR_ERROR_TIMEOUT.
   */
static TMR_Status s_receiveBytes(TMR_SR_SerialTransport *this, uint32_t length, uint32_t* messageLength, uint8_t* message, const uint32_t timeoutMs)
{
    d424:	cf 92       	push	r12
    d426:	df 92       	push	r13
    d428:	ef 92       	push	r14
    d42a:	ff 92       	push	r15
    d42c:	0f 93       	push	r16
    d42e:	1f 93       	push	r17
    d430:	c8 01       	movw	r24, r16
	TMR_Status RX_status;
	(void) this; /*This parameter is unused in this function*/
	RX_status = UART0_ReceiveMessage(message, length, messageLength, timeoutMs);
    d432:	87 01       	movw	r16, r14
    d434:	76 01       	movw	r14, r12
    d436:	0e 94 f9 73 	call	0xe7f2	; 0xe7f2 <UART0_ReceiveMessage>
	return RX_status;
 }
    d43a:	1f 91       	pop	r17
    d43c:	0f 91       	pop	r16
    d43e:	ff 90       	pop	r15
    d440:	ef 90       	pop	r14
    d442:	df 90       	pop	r13
    d444:	cf 90       	pop	r12
    d446:	08 95       	ret

0000d448 <s_sendBytes>:
/* This routine should send length bytes, pointed to by message on
   * the serial connection. If the transmission does not complete in
   * timeoutMs milliseconds, it should return TMR_ERROR_TIMEOUT.
   */
static TMR_Status s_sendBytes(TMR_SR_SerialTransport *this, uint32_t length, uint8_t* message, const uint32_t timeoutMs)
{  
    d448:	ef 92       	push	r14
    d44a:	ff 92       	push	r15
    d44c:	0f 93       	push	r16
    d44e:	1f 93       	push	r17
    d450:	c9 01       	movw	r24, r18
    d452:	98 01       	movw	r18, r16
    d454:	87 01       	movw	r16, r14
	TMR_Status TX_status;
	(void) this; /*This parameter is unused in this function*/
	
	TX_status = UART0_SendMessage(message, length, timeoutMs);
    d456:	0e 94 45 73 	call	0xe68a	; 0xe68a <UART0_SendMessage>
	
	
	return TX_status;
}
    d45a:	1f 91       	pop	r17
    d45c:	0f 91       	pop	r16
    d45e:	ff 90       	pop	r15
    d460:	ef 90       	pop	r14
    d462:	08 95       	ret

0000d464 <s_open>:

/* This routine should open the serial connection */
static TMR_Status s_open(TMR_SR_SerialTransport *this)
{
	(void) this; /*This parameter is unused in this function*/
	UART_init(115200U, READER_INTERFACE); /*UART is initialized with BAUD = 115200 bps*/
    d464:	41 e0       	ldi	r20, 0x01	; 1
    d466:	60 e0       	ldi	r22, 0x00	; 0
    d468:	72 ec       	ldi	r23, 0xC2	; 194
    d46a:	81 e0       	ldi	r24, 0x01	; 1
    d46c:	90 e0       	ldi	r25, 0x00	; 0
    d46e:	0e 94 a2 72 	call	0xe544	; 0xe544 <UART_init>
	return TMR_SUCCESS; /*Dummy return, as no status is calculated regarding flush operation of buffer*/
}
    d472:	60 e0       	ldi	r22, 0x00	; 0
    d474:	70 e0       	ldi	r23, 0x00	; 0
    d476:	cb 01       	movw	r24, r22
    d478:	08 95       	ret

0000d47a <TMR_SR_SerialTransportDummyInit>:
 * The initialization should not actually open a communication channel
 * or acquire other communication resources at this time.
 */
TMR_Status TMR_SR_SerialTransportDummyInit(TMR_SR_SerialTransport *transport,
								TMR_SR_SerialPortNativeContext *context, void *other)
{
    d47a:	fc 01       	movw	r30, r24
  /* Each of the callback functions will be passed the transport
   * pointer, and they can use the "cookie" member of the transport
   * structure to store the information specific to the transport,
   * such as a file handle or the memory address of the FIFO.
   */
  transport->cookie = other;
    d47c:	51 83       	std	Z+1, r21	; 0x01
    d47e:	40 83       	st	Z, r20

  transport->open = s_open;
    d480:	82 e3       	ldi	r24, 0x32	; 50
    d482:	9a e6       	ldi	r25, 0x6A	; 106
    d484:	93 83       	std	Z+3, r25	; 0x03
    d486:	82 83       	std	Z+2, r24	; 0x02
  transport->sendBytes = s_sendBytes;
    d488:	84 e2       	ldi	r24, 0x24	; 36
    d48a:	9a e6       	ldi	r25, 0x6A	; 106
    d48c:	95 83       	std	Z+5, r25	; 0x05
    d48e:	84 83       	std	Z+4, r24	; 0x04
  transport->receiveBytes = s_receiveBytes;
    d490:	82 e1       	ldi	r24, 0x12	; 18
    d492:	9a e6       	ldi	r25, 0x6A	; 106
    d494:	97 83       	std	Z+7, r25	; 0x07
    d496:	86 83       	std	Z+6, r24	; 0x06
  transport->setBaudRate = s_setBaudRate;
    d498:	8d e0       	ldi	r24, 0x0D	; 13
    d49a:	9a e6       	ldi	r25, 0x6A	; 106
    d49c:	91 87       	std	Z+9, r25	; 0x09
    d49e:	80 87       	std	Z+8, r24	; 0x08
  transport->shutdown = s_shutdown;
    d4a0:	87 e0       	ldi	r24, 0x07	; 7
    d4a2:	9a e6       	ldi	r25, 0x6A	; 106
    d4a4:	93 87       	std	Z+11, r25	; 0x0b
    d4a6:	82 87       	std	Z+10, r24	; 0x0a
  transport->flush = s_flush;
    d4a8:	81 e0       	ldi	r24, 0x01	; 1
    d4aa:	9a e6       	ldi	r25, 0x6A	; 106
    d4ac:	95 87       	std	Z+13, r25	; 0x0d
    d4ae:	84 87       	std	Z+12, r24	; 0x0c

  return TMR_SUCCESS;
}
    d4b0:	60 e0       	ldi	r22, 0x00	; 0
    d4b2:	70 e0       	ldi	r23, 0x00	; 0
    d4b4:	cb 01       	movw	r24, r22
    d4b6:	08 95       	ret

0000d4b8 <tm_memcpy>:
{
  if (end >= start)
    return end - start;
  else
    return (UINT32_MAX - start) + end;
}
    d4b8:	db 01       	movw	r26, r22
    d4ba:	e8 2f       	mov	r30, r24
    d4bc:	f9 2f       	mov	r31, r25
    d4be:	04 c0       	rjmp	.+8      	; 0xd4c8 <tm_memcpy+0x10>
    d4c0:	2d 91       	ld	r18, X+
    d4c2:	21 93       	st	Z+, r18
    d4c4:	41 50       	subi	r20, 0x01	; 1
    d4c6:	51 09       	sbc	r21, r1
    d4c8:	41 15       	cp	r20, r1
    d4ca:	51 05       	cpc	r21, r1
    d4cc:	c9 f7       	brne	.-14     	; 0xd4c0 <tm_memcpy+0x8>
    d4ce:	08 95       	ret

0000d4d0 <tm_gettime_consistent>:
    d4d0:	cf 92       	push	r12
    d4d2:	df 92       	push	r13
    d4d4:	ef 92       	push	r14
    d4d6:	ff 92       	push	r15
    d4d8:	0f 93       	push	r16
    d4da:	1f 93       	push	r17
    d4dc:	cf 93       	push	r28
    d4de:	df 93       	push	r29
    d4e0:	ec 01       	movw	r28, r24
    d4e2:	8b 01       	movw	r16, r22
    d4e4:	0e 94 21 03 	call	0x642	; 0x642 <tmr_gettime_high>
    d4e8:	68 83       	st	Y, r22
    d4ea:	79 83       	std	Y+1, r23	; 0x01
    d4ec:	8a 83       	std	Y+2, r24	; 0x02
    d4ee:	9b 83       	std	Y+3, r25	; 0x03
    d4f0:	0e 94 1d 03 	call	0x63a	; 0x63a <tmr_gettime_low>
    d4f4:	f8 01       	movw	r30, r16
    d4f6:	60 83       	st	Z, r22
    d4f8:	71 83       	std	Z+1, r23	; 0x01
    d4fa:	82 83       	std	Z+2, r24	; 0x02
    d4fc:	93 83       	std	Z+3, r25	; 0x03
    d4fe:	0e 94 21 03 	call	0x642	; 0x642 <tmr_gettime_high>
    d502:	c8 80       	ld	r12, Y
    d504:	d9 80       	ldd	r13, Y+1	; 0x01
    d506:	ea 80       	ldd	r14, Y+2	; 0x02
    d508:	fb 80       	ldd	r15, Y+3	; 0x03
    d50a:	6c 15       	cp	r22, r12
    d50c:	7d 05       	cpc	r23, r13
    d50e:	8e 05       	cpc	r24, r14
    d510:	9f 05       	cpc	r25, r15
    d512:	59 f0       	breq	.+22     	; 0xd52a <tm_gettime_consistent+0x5a>
    d514:	68 83       	st	Y, r22
    d516:	79 83       	std	Y+1, r23	; 0x01
    d518:	8a 83       	std	Y+2, r24	; 0x02
    d51a:	9b 83       	std	Y+3, r25	; 0x03
    d51c:	0e 94 1d 03 	call	0x63a	; 0x63a <tmr_gettime_low>
    d520:	f8 01       	movw	r30, r16
    d522:	60 83       	st	Z, r22
    d524:	71 83       	std	Z+1, r23	; 0x01
    d526:	82 83       	std	Z+2, r24	; 0x02
    d528:	93 83       	std	Z+3, r25	; 0x03
    d52a:	df 91       	pop	r29
    d52c:	cf 91       	pop	r28
    d52e:	1f 91       	pop	r17
    d530:	0f 91       	pop	r16
    d532:	ff 90       	pop	r15
    d534:	ef 90       	pop	r14
    d536:	df 90       	pop	r13
    d538:	cf 90       	pop	r12
    d53a:	08 95       	ret

0000d53c <tm_u8s_per_bits>:
 * @param bitCount  number of bits to hold
 * @return  Minimum length of bytes that can contain that many bits
 */
int tm_u8s_per_bits(int bitCount) 
{
	return ((0<bitCount) ?((((bitCount)-1)>>3)+1) :0);
    d53c:	18 16       	cp	r1, r24
    d53e:	19 06       	cpc	r1, r25
    d540:	4c f4       	brge	.+18     	; 0xd554 <tm_u8s_per_bits+0x18>
    d542:	01 97       	sbiw	r24, 0x01	; 1
    d544:	95 95       	asr	r25
    d546:	87 95       	ror	r24
    d548:	95 95       	asr	r25
    d54a:	87 95       	ror	r24
    d54c:	95 95       	asr	r25
    d54e:	87 95       	ror	r24
    d550:	01 96       	adiw	r24, 0x01	; 1
    d552:	08 95       	ret
    d554:	80 e0       	ldi	r24, 0x00	; 0
    d556:	90 e0       	ldi	r25, 0x00	; 0
}
    d558:	08 95       	ret

0000d55a <TMR_stringCopy>:

void
TMR_stringCopy(TMR_String *dest, const char *src, int len)
{
    d55a:	0f 93       	push	r16
    d55c:	1f 93       	push	r17
    d55e:	cf 93       	push	r28
    d560:	df 93       	push	r29
    d562:	8c 01       	movw	r16, r24
    d564:	ea 01       	movw	r28, r20
  if (dest->max - 1 < len)
    d566:	fc 01       	movw	r30, r24
    d568:	82 81       	ldd	r24, Z+2	; 0x02
    d56a:	93 81       	ldd	r25, Z+3	; 0x03
    d56c:	9c 01       	movw	r18, r24
    d56e:	21 50       	subi	r18, 0x01	; 1
    d570:	31 09       	sbc	r19, r1
    d572:	24 17       	cp	r18, r20
    d574:	35 07       	cpc	r19, r21
    d576:	08 f4       	brcc	.+2      	; 0xd57a <TMR_stringCopy+0x20>
  {
    len = dest->max - 1;
    d578:	e9 01       	movw	r28, r18
  }
  if (dest->max > 0)
    d57a:	89 2b       	or	r24, r25
    d57c:	59 f0       	breq	.+22     	; 0xd594 <TMR_stringCopy+0x3a>
  {
    memcpy(dest->value, src, len);
    d57e:	ae 01       	movw	r20, r28
    d580:	f8 01       	movw	r30, r16
    d582:	80 81       	ld	r24, Z
    d584:	91 81       	ldd	r25, Z+1	; 0x01
    d586:	98 df       	rcall	.-208    	; 0xd4b8 <tm_memcpy>
    dest->value[len] = '\0';
    d588:	f8 01       	movw	r30, r16
    d58a:	80 81       	ld	r24, Z
    d58c:	91 81       	ldd	r25, Z+1	; 0x01
    d58e:	c8 0f       	add	r28, r24
    d590:	d9 1f       	adc	r29, r25
    d592:	18 82       	st	Y, r1
  }
}
    d594:	df 91       	pop	r29
    d596:	cf 91       	pop	r28
    d598:	1f 91       	pop	r17
    d59a:	0f 91       	pop	r16
    d59c:	08 95       	ret

0000d59e <validateReadPlan>:
{
  filter->type = TMR_FILTER_TYPE_TAGTYPE_SELECT;
  filter->u.tagtypeSelect.tagType = tagType;

  return TMR_SUCCESS;
}
    d59e:	fb 01       	movw	r30, r22
    d5a0:	80 81       	ld	r24, Z
    d5a2:	82 30       	cpi	r24, 0x02	; 2
    d5a4:	51 f5       	brne	.+84     	; 0xd5fa <validateReadPlan+0x5c>
    d5a6:	10 86       	std	Z+8, r1	; 0x08
    d5a8:	11 86       	std	Z+9, r1	; 0x09
    d5aa:	12 86       	std	Z+10, r1	; 0x0a
    d5ac:	13 86       	std	Z+11, r1	; 0x0b
    d5ae:	20 e0       	ldi	r18, 0x00	; 0
    d5b0:	30 e0       	ldi	r19, 0x00	; 0
    d5b2:	1e c0       	rjmp	.+60     	; 0xd5f0 <validateReadPlan+0x52>
    d5b4:	a6 81       	ldd	r26, Z+6	; 0x06
    d5b6:	b7 81       	ldd	r27, Z+7	; 0x07
    d5b8:	c9 01       	movw	r24, r18
    d5ba:	88 0f       	add	r24, r24
    d5bc:	99 1f       	adc	r25, r25
    d5be:	a8 0f       	add	r26, r24
    d5c0:	b9 1f       	adc	r27, r25
    d5c2:	0d 90       	ld	r0, X+
    d5c4:	bc 91       	ld	r27, X
    d5c6:	a0 2d       	mov	r26, r0
    d5c8:	11 96       	adiw	r26, 0x01	; 1
    d5ca:	8d 91       	ld	r24, X+
    d5cc:	9d 91       	ld	r25, X+
    d5ce:	0d 90       	ld	r0, X+
    d5d0:	bc 91       	ld	r27, X
    d5d2:	a0 2d       	mov	r26, r0
    d5d4:	40 85       	ldd	r20, Z+8	; 0x08
    d5d6:	51 85       	ldd	r21, Z+9	; 0x09
    d5d8:	62 85       	ldd	r22, Z+10	; 0x0a
    d5da:	73 85       	ldd	r23, Z+11	; 0x0b
    d5dc:	84 0f       	add	r24, r20
    d5de:	95 1f       	adc	r25, r21
    d5e0:	a6 1f       	adc	r26, r22
    d5e2:	b7 1f       	adc	r27, r23
    d5e4:	80 87       	std	Z+8, r24	; 0x08
    d5e6:	91 87       	std	Z+9, r25	; 0x09
    d5e8:	a2 87       	std	Z+10, r26	; 0x0a
    d5ea:	b3 87       	std	Z+11, r27	; 0x0b
    d5ec:	2f 5f       	subi	r18, 0xFF	; 255
    d5ee:	3f 4f       	sbci	r19, 0xFF	; 255
    d5f0:	84 85       	ldd	r24, Z+12	; 0x0c
    d5f2:	90 e0       	ldi	r25, 0x00	; 0
    d5f4:	28 17       	cp	r18, r24
    d5f6:	39 07       	cpc	r19, r25
    d5f8:	ec f2       	brlt	.-70     	; 0xd5b4 <validateReadPlan+0x16>
    d5fa:	60 e0       	ldi	r22, 0x00	; 0
    d5fc:	70 e0       	ldi	r23, 0x00	; 0
    d5fe:	cb 01       	movw	r24, r22
    d600:	08 95       	ret

0000d602 <versionCompare>:
    d602:	fc 01       	movw	r30, r24
    d604:	20 81       	ld	r18, Z
    d606:	db 01       	movw	r26, r22
    d608:	9c 91       	ld	r25, X
    d60a:	29 17       	cp	r18, r25
    d60c:	c8 f0       	brcs	.+50     	; 0xd640 <versionCompare+0x3e>
    d60e:	29 13       	cpse	r18, r25
    d610:	19 c0       	rjmp	.+50     	; 0xd644 <versionCompare+0x42>
    d612:	91 81       	ldd	r25, Z+1	; 0x01
    d614:	11 96       	adiw	r26, 0x01	; 1
    d616:	8c 91       	ld	r24, X
    d618:	11 97       	sbiw	r26, 0x01	; 1
    d61a:	98 17       	cp	r25, r24
    d61c:	a8 f0       	brcs	.+42     	; 0xd648 <versionCompare+0x46>
    d61e:	98 13       	cpse	r25, r24
    d620:	15 c0       	rjmp	.+42     	; 0xd64c <versionCompare+0x4a>
    d622:	92 81       	ldd	r25, Z+2	; 0x02
    d624:	12 96       	adiw	r26, 0x02	; 2
    d626:	8c 91       	ld	r24, X
    d628:	12 97       	sbiw	r26, 0x02	; 2
    d62a:	98 17       	cp	r25, r24
    d62c:	88 f0       	brcs	.+34     	; 0xd650 <versionCompare+0x4e>
    d62e:	98 13       	cpse	r25, r24
    d630:	11 c0       	rjmp	.+34     	; 0xd654 <versionCompare+0x52>
    d632:	93 81       	ldd	r25, Z+3	; 0x03
    d634:	13 96       	adiw	r26, 0x03	; 3
    d636:	8c 91       	ld	r24, X
    d638:	98 17       	cp	r25, r24
    d63a:	70 f0       	brcs	.+28     	; 0xd658 <versionCompare+0x56>
    d63c:	81 e0       	ldi	r24, 0x01	; 1
    d63e:	08 95       	ret
    d640:	80 e0       	ldi	r24, 0x00	; 0
    d642:	08 95       	ret
    d644:	81 e0       	ldi	r24, 0x01	; 1
    d646:	08 95       	ret
    d648:	80 e0       	ldi	r24, 0x00	; 0
    d64a:	08 95       	ret
    d64c:	81 e0       	ldi	r24, 0x01	; 1
    d64e:	08 95       	ret
    d650:	80 e0       	ldi	r24, 0x00	; 0
    d652:	08 95       	ret
    d654:	81 e0       	ldi	r24, 0x01	; 1
    d656:	08 95       	ret
    d658:	80 e0       	ldi	r24, 0x00	; 0
    d65a:	08 95       	ret

0000d65c <getAddrByteExtEnabledVersion>:
    d65c:	fb 01       	movw	r30, r22
    d65e:	8f 58       	subi	r24, 0x8F	; 143
    d660:	9c 4f       	sbci	r25, 0xFC	; 252
    d662:	dc 01       	movw	r26, r24
    d664:	8c 91       	ld	r24, X
    d666:	80 38       	cpi	r24, 0x80	; 128
    d668:	41 f4       	brne	.+16     	; 0xd67a <getAddrByteExtEnabledVersion+0x1e>
    d66a:	81 e0       	ldi	r24, 0x01	; 1
    d66c:	80 83       	st	Z, r24
    d66e:	81 83       	std	Z+1, r24	; 0x01
    d670:	82 e0       	ldi	r24, 0x02	; 2
    d672:	82 83       	std	Z+2, r24	; 0x02
    d674:	86 e1       	ldi	r24, 0x16	; 22
    d676:	83 83       	std	Z+3, r24	; 0x03
    d678:	08 95       	ret
    d67a:	8f ef       	ldi	r24, 0xFF	; 255
    d67c:	80 83       	st	Z, r24
    d67e:	81 83       	std	Z+1, r24	; 0x01
    d680:	82 83       	std	Z+2, r24	; 0x02
    d682:	83 83       	std	Z+3, r24	; 0x03
    d684:	08 95       	ret

0000d686 <checkForAvailableFeatures>:
    d686:	af 92       	push	r10
    d688:	bf 92       	push	r11
    d68a:	cf 92       	push	r12
    d68c:	df 92       	push	r13
    d68e:	ef 92       	push	r14
    d690:	ff 92       	push	r15
    d692:	1f 93       	push	r17
    d694:	cf 93       	push	r28
    d696:	df 93       	push	r29
    d698:	00 d0       	rcall	.+0      	; 0xd69a <checkForAvailableFeatures+0x14>
    d69a:	00 d0       	rcall	.+0      	; 0xd69c <checkForAvailableFeatures+0x16>
    d69c:	cd b7       	in	r28, 0x3d	; 61
    d69e:	de b7       	in	r29, 0x3e	; 62
    d6a0:	6c 01       	movw	r12, r24
    d6a2:	19 82       	std	Y+1, r1	; 0x01
    d6a4:	1a 82       	std	Y+2, r1	; 0x02
    d6a6:	1b 82       	std	Y+3, r1	; 0x03
    d6a8:	1c 82       	std	Y+4, r1	; 0x04
    d6aa:	5c 01       	movw	r10, r24
    d6ac:	87 e8       	ldi	r24, 0x87	; 135
    d6ae:	a8 1a       	sub	r10, r24
    d6b0:	8c ef       	ldi	r24, 0xFC	; 252
    d6b2:	b8 0a       	sbc	r11, r24
    d6b4:	10 e0       	ldi	r17, 0x00	; 0
    d6b6:	20 c0       	rjmp	.+64     	; 0xd6f8 <checkForAvailableFeatures+0x72>
    d6b8:	81 e0       	ldi	r24, 0x01	; 1
    d6ba:	90 e0       	ldi	r25, 0x00	; 0
    d6bc:	7c 01       	movw	r14, r24
    d6be:	01 2e       	mov	r0, r17
    d6c0:	02 c0       	rjmp	.+4      	; 0xd6c6 <checkForAvailableFeatures+0x40>
    d6c2:	ee 0c       	add	r14, r14
    d6c4:	ff 1c       	adc	r15, r15
    d6c6:	0a 94       	dec	r0
    d6c8:	e2 f7       	brpl	.-8      	; 0xd6c2 <checkForAvailableFeatures+0x3c>
    d6ca:	81 e0       	ldi	r24, 0x01	; 1
    d6cc:	e8 16       	cp	r14, r24
    d6ce:	f1 04       	cpc	r15, r1
    d6d0:	29 f4       	brne	.+10     	; 0xd6dc <checkForAvailableFeatures+0x56>
    d6d2:	be 01       	movw	r22, r28
    d6d4:	6f 5f       	subi	r22, 0xFF	; 255
    d6d6:	7f 4f       	sbci	r23, 0xFF	; 255
    d6d8:	c6 01       	movw	r24, r12
    d6da:	c0 df       	rcall	.-128    	; 0xd65c <getAddrByteExtEnabledVersion>
    d6dc:	be 01       	movw	r22, r28
    d6de:	6f 5f       	subi	r22, 0xFF	; 255
    d6e0:	7f 4f       	sbci	r23, 0xFF	; 255
    d6e2:	c5 01       	movw	r24, r10
    d6e4:	8e df       	rcall	.-228    	; 0xd602 <versionCompare>
    d6e6:	88 23       	and	r24, r24
    d6e8:	31 f0       	breq	.+12     	; 0xd6f6 <checkForAvailableFeatures+0x70>
    d6ea:	f6 01       	movw	r30, r12
    d6ec:	e5 5e       	subi	r30, 0xE5	; 229
    d6ee:	f9 4f       	sbci	r31, 0xF9	; 249
    d6f0:	80 81       	ld	r24, Z
    d6f2:	e8 2a       	or	r14, r24
    d6f4:	e0 82       	st	Z, r14
    d6f6:	1f 5f       	subi	r17, 0xFF	; 255
    d6f8:	11 23       	and	r17, r17
    d6fa:	f1 f2       	breq	.-68     	; 0xd6b8 <checkForAvailableFeatures+0x32>
    d6fc:	0f 90       	pop	r0
    d6fe:	0f 90       	pop	r0
    d700:	0f 90       	pop	r0
    d702:	0f 90       	pop	r0
    d704:	df 91       	pop	r29
    d706:	cf 91       	pop	r28
    d708:	1f 91       	pop	r17
    d70a:	ff 90       	pop	r15
    d70c:	ef 90       	pop	r14
    d70e:	df 90       	pop	r13
    d710:	cf 90       	pop	r12
    d712:	bf 90       	pop	r11
    d714:	af 90       	pop	r10
    d716:	08 95       	ret

0000d718 <TMR_paramSet>:
    d718:	60 32       	cpi	r22, 0x20	; 32
    d71a:	19 f0       	breq	.+6      	; 0xd722 <TMR_paramSet+0xa>
    d71c:	61 32       	cpi	r22, 0x21	; 33
    d71e:	f9 f0       	breq	.+62     	; 0xd75e <TMR_paramSet+0x46>
    d720:	3c c0       	rjmp	.+120    	; 0xd79a <TMR_paramSet+0x82>
    d722:	fc 01       	movw	r30, r24
    d724:	24 81       	ldd	r18, Z+4	; 0x04
    d726:	23 30       	cpi	r18, 0x03	; 3
    d728:	d1 f0       	breq	.+52     	; 0xd75e <TMR_paramSet+0x46>
    d72a:	fa 01       	movw	r30, r20
    d72c:	40 81       	ld	r20, Z
    d72e:	51 81       	ldd	r21, Z+1	; 0x01
    d730:	62 81       	ldd	r22, Z+2	; 0x02
    d732:	73 81       	ldd	r23, Z+3	; 0x03
    d734:	41 15       	cp	r20, r1
    d736:	51 05       	cpc	r21, r1
    d738:	f1 e0       	ldi	r31, 0x01	; 1
    d73a:	6f 07       	cpc	r22, r31
    d73c:	71 05       	cpc	r23, r1
    d73e:	a8 f5       	brcc	.+106    	; 0xd7aa <TMR_paramSet+0x92>
    d740:	fc 01       	movw	r30, r24
    d742:	ea 58       	subi	r30, 0x8A	; 138
    d744:	ff 4f       	sbci	r31, 0xFF	; 255
    d746:	20 81       	ld	r18, Z
    d748:	21 11       	cpse	r18, r1
    d74a:	34 c0       	rjmp	.+104    	; 0xd7b4 <TMR_paramSet+0x9c>
    d74c:	fc 01       	movw	r30, r24
    d74e:	44 87       	std	Z+12, r20	; 0x0c
    d750:	55 87       	std	Z+13, r21	; 0x0d
    d752:	66 87       	std	Z+14, r22	; 0x0e
    d754:	77 87       	std	Z+15, r23	; 0x0f
    d756:	60 e0       	ldi	r22, 0x00	; 0
    d758:	70 e0       	ldi	r23, 0x00	; 0
    d75a:	cb 01       	movw	r24, r22
    d75c:	08 95       	ret
    d75e:	fc 01       	movw	r30, r24
    d760:	24 81       	ldd	r18, Z+4	; 0x04
    d762:	23 30       	cpi	r18, 0x03	; 3
    d764:	d1 f0       	breq	.+52     	; 0xd79a <TMR_paramSet+0x82>
    d766:	fa 01       	movw	r30, r20
    d768:	40 81       	ld	r20, Z
    d76a:	51 81       	ldd	r21, Z+1	; 0x01
    d76c:	62 81       	ldd	r22, Z+2	; 0x02
    d76e:	73 81       	ldd	r23, Z+3	; 0x03
    d770:	41 15       	cp	r20, r1
    d772:	51 05       	cpc	r21, r1
    d774:	f1 e0       	ldi	r31, 0x01	; 1
    d776:	6f 07       	cpc	r22, r31
    d778:	71 05       	cpc	r23, r1
    d77a:	08 f5       	brcc	.+66     	; 0xd7be <TMR_paramSet+0xa6>
    d77c:	fc 01       	movw	r30, r24
    d77e:	ea 58       	subi	r30, 0x8A	; 138
    d780:	ff 4f       	sbci	r31, 0xFF	; 255
    d782:	20 81       	ld	r18, Z
    d784:	21 11       	cpse	r18, r1
    d786:	20 c0       	rjmp	.+64     	; 0xd7c8 <TMR_paramSet+0xb0>
    d788:	fc 01       	movw	r30, r24
    d78a:	40 87       	std	Z+8, r20	; 0x08
    d78c:	51 87       	std	Z+9, r21	; 0x09
    d78e:	62 87       	std	Z+10, r22	; 0x0a
    d790:	73 87       	std	Z+11, r23	; 0x0b
    d792:	60 e0       	ldi	r22, 0x00	; 0
    d794:	70 e0       	ldi	r23, 0x00	; 0
    d796:	cb 01       	movw	r24, r22
    d798:	08 95       	ret
    d79a:	fc 01       	movw	r30, r24
    d79c:	e2 5e       	subi	r30, 0xE2	; 226
    d79e:	f9 4f       	sbci	r31, 0xF9	; 249
    d7a0:	01 90       	ld	r0, Z+
    d7a2:	f0 81       	ld	r31, Z
    d7a4:	e0 2d       	mov	r30, r0
    d7a6:	09 95       	icall
    d7a8:	08 95       	ret
    d7aa:	67 e1       	ldi	r22, 0x17	; 23
    d7ac:	70 e0       	ldi	r23, 0x00	; 0
    d7ae:	80 e0       	ldi	r24, 0x00	; 0
    d7b0:	93 e0       	ldi	r25, 0x03	; 3
    d7b2:	08 95       	ret
    d7b4:	63 e0       	ldi	r22, 0x03	; 3
    d7b6:	70 e0       	ldi	r23, 0x00	; 0
    d7b8:	80 e0       	ldi	r24, 0x00	; 0
    d7ba:	93 e0       	ldi	r25, 0x03	; 3
    d7bc:	08 95       	ret
    d7be:	67 e1       	ldi	r22, 0x17	; 23
    d7c0:	70 e0       	ldi	r23, 0x00	; 0
    d7c2:	80 e0       	ldi	r24, 0x00	; 0
    d7c4:	93 e0       	ldi	r25, 0x03	; 3
    d7c6:	08 95       	ret
    d7c8:	63 e0       	ldi	r22, 0x03	; 3
    d7ca:	70 e0       	ldi	r23, 0x00	; 0
    d7cc:	80 e0       	ldi	r24, 0x00	; 0
    d7ce:	93 e0       	ldi	r25, 0x03	; 3
    d7d0:	08 95       	ret

0000d7d2 <TMR_paramGet>:
    d7d2:	61 32       	cpi	r22, 0x21	; 33
    d7d4:	29 f1       	breq	.+74     	; 0xd820 <TMR_paramGet+0x4e>
    d7d6:	62 32       	cpi	r22, 0x22	; 34
    d7d8:	19 f0       	breq	.+6      	; 0xd7e0 <TMR_paramGet+0xe>
    d7da:	60 32       	cpi	r22, 0x20	; 32
    d7dc:	b1 f5       	brne	.+108    	; 0xd84a <TMR_paramGet+0x78>
    d7de:	0f c0       	rjmp	.+30     	; 0xd7fe <TMR_paramGet+0x2c>
    d7e0:	dc 01       	movw	r26, r24
    d7e2:	d2 96       	adiw	r26, 0x32	; 50
    d7e4:	ed 91       	ld	r30, X+
    d7e6:	fc 91       	ld	r31, X
    d7e8:	d3 97       	sbiw	r26, 0x33	; 51
    d7ea:	8e e1       	ldi	r24, 0x1E	; 30
    d7ec:	da 01       	movw	r26, r20
    d7ee:	01 90       	ld	r0, Z+
    d7f0:	0d 92       	st	X+, r0
    d7f2:	8a 95       	dec	r24
    d7f4:	e1 f7       	brne	.-8      	; 0xd7ee <TMR_paramGet+0x1c>
    d7f6:	60 e0       	ldi	r22, 0x00	; 0
    d7f8:	70 e0       	ldi	r23, 0x00	; 0
    d7fa:	cb 01       	movw	r24, r22
    d7fc:	08 95       	ret
    d7fe:	fc 01       	movw	r30, r24
    d800:	24 81       	ldd	r18, Z+4	; 0x04
    d802:	23 30       	cpi	r18, 0x03	; 3
    d804:	69 f0       	breq	.+26     	; 0xd820 <TMR_paramGet+0x4e>
    d806:	84 85       	ldd	r24, Z+12	; 0x0c
    d808:	95 85       	ldd	r25, Z+13	; 0x0d
    d80a:	a6 85       	ldd	r26, Z+14	; 0x0e
    d80c:	b7 85       	ldd	r27, Z+15	; 0x0f
    d80e:	fa 01       	movw	r30, r20
    d810:	80 83       	st	Z, r24
    d812:	91 83       	std	Z+1, r25	; 0x01
    d814:	a2 83       	std	Z+2, r26	; 0x02
    d816:	b3 83       	std	Z+3, r27	; 0x03
    d818:	60 e0       	ldi	r22, 0x00	; 0
    d81a:	70 e0       	ldi	r23, 0x00	; 0
    d81c:	cb 01       	movw	r24, r22
    d81e:	08 95       	ret
    d820:	dc 01       	movw	r26, r24
    d822:	14 96       	adiw	r26, 0x04	; 4
    d824:	2c 91       	ld	r18, X
    d826:	14 97       	sbiw	r26, 0x04	; 4
    d828:	23 30       	cpi	r18, 0x03	; 3
    d82a:	79 f0       	breq	.+30     	; 0xd84a <TMR_paramGet+0x78>
    d82c:	18 96       	adiw	r26, 0x08	; 8
    d82e:	8d 91       	ld	r24, X+
    d830:	9d 91       	ld	r25, X+
    d832:	0d 90       	ld	r0, X+
    d834:	bc 91       	ld	r27, X
    d836:	a0 2d       	mov	r26, r0
    d838:	fa 01       	movw	r30, r20
    d83a:	80 83       	st	Z, r24
    d83c:	91 83       	std	Z+1, r25	; 0x01
    d83e:	a2 83       	std	Z+2, r26	; 0x02
    d840:	b3 83       	std	Z+3, r27	; 0x03
    d842:	60 e0       	ldi	r22, 0x00	; 0
    d844:	70 e0       	ldi	r23, 0x00	; 0
    d846:	cb 01       	movw	r24, r22
    d848:	08 95       	ret
    d84a:	fc 01       	movw	r30, r24
    d84c:	e4 5e       	subi	r30, 0xE4	; 228
    d84e:	f9 4f       	sbci	r31, 0xF9	; 249
    d850:	01 90       	ld	r0, Z+
    d852:	f0 81       	ld	r31, Z
    d854:	e0 2d       	mov	r30, r0
    d856:	09 95       	icall
    d858:	08 95       	ret

0000d85a <TMR__notifyTransportListeners>:
    d85a:	2f 92       	push	r2
    d85c:	3f 92       	push	r3
    d85e:	4f 92       	push	r4
    d860:	5f 92       	push	r5
    d862:	6f 92       	push	r6
    d864:	7f 92       	push	r7
    d866:	9f 92       	push	r9
    d868:	af 92       	push	r10
    d86a:	bf 92       	push	r11
    d86c:	cf 92       	push	r12
    d86e:	df 92       	push	r13
    d870:	ef 92       	push	r14
    d872:	ff 92       	push	r15
    d874:	0f 93       	push	r16
    d876:	1f 93       	push	r17
    d878:	cf 93       	push	r28
    d87a:	df 93       	push	r29
    d87c:	96 2e       	mov	r9, r22
    d87e:	29 01       	movw	r4, r18
    d880:	3a 01       	movw	r6, r20
    d882:	18 01       	movw	r2, r16
    d884:	57 01       	movw	r10, r14
    d886:	fc 01       	movw	r30, r24
    d888:	c6 81       	ldd	r28, Z+6	; 0x06
    d88a:	d7 81       	ldd	r29, Z+7	; 0x07
    d88c:	11 c0       	rjmp	.+34     	; 0xd8b0 <TMR__notifyTransportListeners+0x56>
    d88e:	e8 81       	ld	r30, Y
    d890:	f9 81       	ldd	r31, Y+1	; 0x01
    d892:	ca 80       	ldd	r12, Y+2	; 0x02
    d894:	db 80       	ldd	r13, Y+3	; 0x03
    d896:	75 01       	movw	r14, r10
    d898:	0b 2c       	mov	r0, r11
    d89a:	00 0c       	add	r0, r0
    d89c:	00 0b       	sbc	r16, r16
    d89e:	11 0b       	sbc	r17, r17
    d8a0:	91 01       	movw	r18, r2
    d8a2:	b3 01       	movw	r22, r6
    d8a4:	a2 01       	movw	r20, r4
    d8a6:	89 2d       	mov	r24, r9
    d8a8:	09 95       	icall
    d8aa:	0c 80       	ldd	r0, Y+4	; 0x04
    d8ac:	dd 81       	ldd	r29, Y+5	; 0x05
    d8ae:	c0 2d       	mov	r28, r0
    d8b0:	20 97       	sbiw	r28, 0x00	; 0
    d8b2:	69 f7       	brne	.-38     	; 0xd88e <TMR__notifyTransportListeners+0x34>
    d8b4:	df 91       	pop	r29
    d8b6:	cf 91       	pop	r28
    d8b8:	1f 91       	pop	r17
    d8ba:	0f 91       	pop	r16
    d8bc:	ff 90       	pop	r15
    d8be:	ef 90       	pop	r14
    d8c0:	df 90       	pop	r13
    d8c2:	cf 90       	pop	r12
    d8c4:	bf 90       	pop	r11
    d8c6:	af 90       	pop	r10
    d8c8:	9f 90       	pop	r9
    d8ca:	7f 90       	pop	r7
    d8cc:	6f 90       	pop	r6
    d8ce:	5f 90       	pop	r5
    d8d0:	4f 90       	pop	r4
    d8d2:	3f 90       	pop	r3
    d8d4:	2f 90       	pop	r2
    d8d6:	08 95       	ret

0000d8d8 <TMR_RP_init_simple>:
    d8d8:	ef 92       	push	r14
    d8da:	ff 92       	push	r15
    d8dc:	0f 93       	push	r16
    d8de:	1f 93       	push	r17
    d8e0:	fc 01       	movw	r30, r24
    d8e2:	81 e0       	ldi	r24, 0x01	; 1
    d8e4:	80 83       	st	Z, r24
    d8e6:	70 e0       	ldi	r23, 0x00	; 0
    d8e8:	71 87       	std	Z+9, r23	; 0x09
    d8ea:	60 87       	std	Z+8, r22	; 0x08
    d8ec:	73 87       	std	Z+11, r23	; 0x0b
    d8ee:	62 87       	std	Z+10, r22	; 0x0a
    d8f0:	57 83       	std	Z+7, r21	; 0x07
    d8f2:	46 83       	std	Z+6, r20	; 0x06
    d8f4:	24 87       	std	Z+12, r18	; 0x0c
    d8f6:	16 86       	std	Z+14, r1	; 0x0e
    d8f8:	15 86       	std	Z+13, r1	; 0x0d
    d8fa:	10 8a       	std	Z+16, r1	; 0x10
    d8fc:	17 86       	std	Z+15, r1	; 0x0f
    d8fe:	e1 82       	std	Z+1, r14	; 0x01
    d900:	f2 82       	std	Z+2, r15	; 0x02
    d902:	03 83       	std	Z+3, r16	; 0x03
    d904:	14 83       	std	Z+4, r17	; 0x04
    d906:	11 8a       	std	Z+17, r1	; 0x11
    d908:	12 8a       	std	Z+18, r1	; 0x12
    d90a:	13 8a       	std	Z+19, r1	; 0x13
    d90c:	14 8a       	std	Z+20, r1	; 0x14
    d90e:	15 8a       	std	Z+21, r1	; 0x15
    d910:	16 8a       	std	Z+22, r1	; 0x16
    d912:	17 8a       	std	Z+23, r1	; 0x17
    d914:	15 8e       	std	Z+29, r1	; 0x1d
    d916:	14 8e       	std	Z+28, r1	; 0x1c
    d918:	11 8e       	std	Z+25, r1	; 0x19
    d91a:	10 8e       	std	Z+24, r1	; 0x18
    d91c:	13 8e       	std	Z+27, r1	; 0x1b
    d91e:	12 8e       	std	Z+26, r1	; 0x1a
    d920:	15 82       	std	Z+5, r1	; 0x05
    d922:	60 e0       	ldi	r22, 0x00	; 0
    d924:	70 e0       	ldi	r23, 0x00	; 0
    d926:	cb 01       	movw	r24, r22
    d928:	1f 91       	pop	r17
    d92a:	0f 91       	pop	r16
    d92c:	ff 90       	pop	r15
    d92e:	ef 90       	pop	r14
    d930:	08 95       	ret

0000d932 <TMR_reader_init_internal>:
    d932:	af 92       	push	r10
    d934:	bf 92       	push	r11
    d936:	cf 92       	push	r12
    d938:	df 92       	push	r13
    d93a:	ef 92       	push	r14
    d93c:	ff 92       	push	r15
    d93e:	0f 93       	push	r16
    d940:	1f 93       	push	r17
    d942:	cf 93       	push	r28
    d944:	df 93       	push	r29
    d946:	cd b7       	in	r28, 0x3d	; 61
    d948:	de b7       	in	r29, 0x3e	; 62
    d94a:	da 95       	dec	r29
    d94c:	0f b6       	in	r0, 0x3f	; 63
    d94e:	f8 94       	cli
    d950:	de bf       	out	0x3e, r29	; 62
    d952:	0f be       	out	0x3f, r0	; 63
    d954:	cd bf       	out	0x3d, r28	; 61
    d956:	6c 01       	movw	r12, r24
    d958:	5c 01       	movw	r10, r24
    d95a:	84 e1       	ldi	r24, 0x14	; 20
    d95c:	a8 0e       	add	r10, r24
    d95e:	b1 1c       	adc	r11, r1
    d960:	e1 2c       	mov	r14, r1
    d962:	f1 2c       	mov	r15, r1
    d964:	87 01       	movw	r16, r14
    d966:	20 e0       	ldi	r18, 0x00	; 0
    d968:	40 e0       	ldi	r20, 0x00	; 0
    d96a:	50 e0       	ldi	r21, 0x00	; 0
    d96c:	60 e0       	ldi	r22, 0x00	; 0
    d96e:	c5 01       	movw	r24, r10
    d970:	b3 df       	rcall	.-154    	; 0xd8d8 <TMR_RP_init_simple>
    d972:	f6 01       	movw	r30, r12
    d974:	b3 aa       	std	Z+51, r11	; 0x33
    d976:	a2 aa       	std	Z+50, r10	; 0x32
    d978:	15 82       	std	Z+5, r1	; 0x05
    d97a:	17 82       	std	Z+7, r1	; 0x07
    d97c:	16 82       	std	Z+6, r1	; 0x06
    d97e:	10 8a       	std	Z+16, r1	; 0x10
    d980:	11 8a       	std	Z+17, r1	; 0x11
    d982:	12 8a       	std	Z+18, r1	; 0x12
    d984:	13 8a       	std	Z+19, r1	; 0x13
    d986:	8a ef       	ldi	r24, 0xFA	; 250
    d988:	90 e0       	ldi	r25, 0x00	; 0
    d98a:	a0 e0       	ldi	r26, 0x00	; 0
    d98c:	b0 e0       	ldi	r27, 0x00	; 0
    d98e:	80 87       	std	Z+8, r24	; 0x08
    d990:	91 87       	std	Z+9, r25	; 0x09
    d992:	a2 87       	std	Z+10, r26	; 0x0a
    d994:	b3 87       	std	Z+11, r27	; 0x0b
    d996:	14 86       	std	Z+12, r1	; 0x0c
    d998:	15 86       	std	Z+13, r1	; 0x0d
    d99a:	16 86       	std	Z+14, r1	; 0x0e
    d99c:	17 86       	std	Z+15, r1	; 0x0f
    d99e:	e8 5e       	subi	r30, 0xE8	; 232
    d9a0:	f9 4f       	sbci	r31, 0xF9	; 249
    d9a2:	10 82       	st	Z, r1
    d9a4:	33 97       	sbiw	r30, 0x03	; 3
    d9a6:	11 82       	std	Z+1, r1	; 0x01
    d9a8:	10 82       	st	Z, r1
    d9aa:	e9 59       	subi	r30, 0x99	; 153
    d9ac:	f4 40       	sbci	r31, 0x04	; 4
    d9ae:	10 82       	st	Z, r1
    d9b0:	11 82       	std	Z+1, r1	; 0x01
    d9b2:	12 82       	std	Z+2, r1	; 0x02
    d9b4:	13 82       	std	Z+3, r1	; 0x03
    d9b6:	e6 50       	subi	r30, 0x06	; 6
    d9b8:	f1 40       	sbci	r31, 0x01	; 1
    d9ba:	10 82       	st	Z, r1
    d9bc:	e9 57       	subi	r30, 0x79	; 121
    d9be:	fa 4f       	sbci	r31, 0xFA	; 250
    d9c0:	10 82       	st	Z, r1
    d9c2:	11 82       	std	Z+1, r1	; 0x01
    d9c4:	12 82       	std	Z+2, r1	; 0x02
    d9c6:	13 82       	std	Z+3, r1	; 0x03
    d9c8:	7e 96       	adiw	r30, 0x1e	; 30
    d9ca:	10 82       	st	Z, r1
    d9cc:	e2 5a       	subi	r30, 0xA2	; 162
    d9ce:	f5 40       	sbci	r31, 0x05	; 5
    d9d0:	10 82       	st	Z, r1
    d9d2:	ed 57       	subi	r30, 0x7D	; 125
    d9d4:	fa 4f       	sbci	r31, 0xFA	; 250
    d9d6:	10 82       	st	Z, r1
    d9d8:	35 96       	adiw	r30, 0x05	; 5
    d9da:	10 82       	st	Z, r1
    d9dc:	3b 96       	adiw	r30, 0x0b	; 11
    d9de:	10 82       	st	Z, r1
    d9e0:	31 96       	adiw	r30, 0x01	; 1
    d9e2:	10 82       	st	Z, r1
    d9e4:	31 96       	adiw	r30, 0x01	; 1
    d9e6:	10 82       	st	Z, r1
    d9e8:	39 96       	adiw	r30, 0x09	; 9
    d9ea:	10 82       	st	Z, r1
    d9ec:	32 96       	adiw	r30, 0x02	; 2
    d9ee:	8f ef       	ldi	r24, 0xFF	; 255
    d9f0:	9f e2       	ldi	r25, 0x2F	; 47
    d9f2:	91 83       	std	Z+1, r25	; 0x01
    d9f4:	80 83       	st	Z, r24
    d9f6:	39 96       	adiw	r30, 0x09	; 9
    d9f8:	10 82       	st	Z, r1
    d9fa:	8e e0       	ldi	r24, 0x0E	; 14
    d9fc:	e3 e4       	ldi	r30, 0x43	; 67
    d9fe:	f2 e0       	ldi	r31, 0x02	; 2
    da00:	de 01       	movw	r26, r28
    da02:	11 96       	adiw	r26, 0x01	; 1
    da04:	01 90       	ld	r0, Z+
    da06:	0d 92       	st	X+, r0
    da08:	8a 95       	dec	r24
    da0a:	e1 f7       	brne	.-8      	; 0xda04 <TMR_reader_init_internal+0xd2>
    da0c:	f6 01       	movw	r30, r12
    da0e:	84 81       	ldd	r24, Z+4	; 0x04
    da10:	82 30       	cpi	r24, 0x02	; 2
    da12:	41 f4       	brne	.+16     	; 0xda24 <TMR_reader_init_internal+0xf2>
    da14:	be 01       	movw	r22, r28
    da16:	6f 5f       	subi	r22, 0xFF	; 255
    da18:	7f 4f       	sbci	r23, 0xFF	; 255
    da1a:	c6 01       	movw	r24, r12
    da1c:	8f 53       	subi	r24, 0x3F	; 63
    da1e:	9b 4f       	sbci	r25, 0xFB	; 251
    da20:	0e 94 64 75 	call	0xeac8	; 0xeac8 <strcpy>
    da24:	60 e0       	ldi	r22, 0x00	; 0
    da26:	70 e0       	ldi	r23, 0x00	; 0
    da28:	cb 01       	movw	r24, r22
    da2a:	d3 95       	inc	r29
    da2c:	0f b6       	in	r0, 0x3f	; 63
    da2e:	f8 94       	cli
    da30:	de bf       	out	0x3e, r29	; 62
    da32:	0f be       	out	0x3f, r0	; 63
    da34:	cd bf       	out	0x3d, r28	; 61
    da36:	df 91       	pop	r29
    da38:	cf 91       	pop	r28
    da3a:	1f 91       	pop	r17
    da3c:	0f 91       	pop	r16
    da3e:	ff 90       	pop	r15
    da40:	ef 90       	pop	r14
    da42:	df 90       	pop	r13
    da44:	cf 90       	pop	r12
    da46:	bf 90       	pop	r11
    da48:	af 90       	pop	r10
    da4a:	08 95       	ret

0000da4c <TMR_paramProbe>:
    da4c:	af 92       	push	r10
    da4e:	bf 92       	push	r11
    da50:	cf 92       	push	r12
    da52:	df 92       	push	r13
    da54:	ef 92       	push	r14
    da56:	ff 92       	push	r15
    da58:	0f 93       	push	r16
    da5a:	1f 93       	push	r17
    da5c:	cf 93       	push	r28
    da5e:	df 93       	push	r29
    da60:	cd b7       	in	r28, 0x3d	; 61
    da62:	de b7       	in	r29, 0x3e	; 62
    da64:	a0 97       	sbiw	r28, 0x20	; 32
    da66:	0f b6       	in	r0, 0x3f	; 63
    da68:	f8 94       	cli
    da6a:	de bf       	out	0x3e, r29	; 62
    da6c:	0f be       	out	0x3f, r0	; 63
    da6e:	cd bf       	out	0x3d, r28	; 61
    da70:	8c 01       	movw	r16, r24
    da72:	f6 2e       	mov	r15, r22
    da74:	ae 01       	movw	r20, r28
    da76:	4f 5f       	subi	r20, 0xFF	; 255
    da78:	5f 4f       	sbci	r21, 0xFF	; 255
    da7a:	80 e2       	ldi	r24, 0x20	; 32
    da7c:	fa 01       	movw	r30, r20
    da7e:	11 92       	st	Z+, r1
    da80:	8a 95       	dec	r24
    da82:	e9 f7       	brne	.-6      	; 0xda7e <TMR_paramProbe+0x32>
    da84:	c8 01       	movw	r24, r16
    da86:	a5 de       	rcall	.-694    	; 0xd7d2 <TMR_paramGet>
    da88:	67 2b       	or	r22, r23
    da8a:	68 2b       	or	r22, r24
    da8c:	69 2b       	or	r22, r25
    da8e:	09 f0       	breq	.+2      	; 0xda92 <TMR_paramProbe+0x46>
    da90:	47 c0       	rjmp	.+142    	; 0xdb20 <TMR_paramProbe+0xd4>
    da92:	f8 01       	movw	r30, r16
    da94:	84 81       	ldd	r24, Z+4	; 0x04
    da96:	82 30       	cpi	r24, 0x02	; 2
    da98:	09 f0       	breq	.+2      	; 0xda9c <TMR_paramProbe+0x50>
    da9a:	42 c0       	rjmp	.+132    	; 0xdb20 <TMR_paramProbe+0xd4>
    da9c:	ef 2d       	mov	r30, r15
    da9e:	e2 95       	swap	r30
    daa0:	e6 95       	lsr	r30
    daa2:	e7 70       	andi	r30, 0x07	; 7
    daa4:	ae 2e       	mov	r10, r30
    daa6:	b1 2c       	mov	r11, r1
    daa8:	8f 2d       	mov	r24, r15
    daaa:	8f 71       	andi	r24, 0x1F	; 31
    daac:	41 e0       	ldi	r20, 0x01	; 1
    daae:	50 e0       	ldi	r21, 0x00	; 0
    dab0:	60 e0       	ldi	r22, 0x00	; 0
    dab2:	70 e0       	ldi	r23, 0x00	; 0
    dab4:	6a 01       	movw	r12, r20
    dab6:	7b 01       	movw	r14, r22
    dab8:	04 c0       	rjmp	.+8      	; 0xdac2 <TMR_paramProbe+0x76>
    daba:	cc 0c       	add	r12, r12
    dabc:	dd 1c       	adc	r13, r13
    dabe:	ee 1c       	adc	r14, r14
    dac0:	ff 1c       	adc	r15, r15
    dac2:	8a 95       	dec	r24
    dac4:	d2 f7       	brpl	.-12     	; 0xdaba <TMR_paramProbe+0x6e>
    dac6:	d7 01       	movw	r26, r14
    dac8:	c6 01       	movw	r24, r12
    daca:	95 01       	movw	r18, r10
    dacc:	2b 51       	subi	r18, 0x1B	; 27
    dace:	3f 4f       	sbci	r19, 0xFF	; 255
    dad0:	22 0f       	add	r18, r18
    dad2:	33 1f       	adc	r19, r19
    dad4:	22 0f       	add	r18, r18
    dad6:	33 1f       	adc	r19, r19
    dad8:	20 0f       	add	r18, r16
    dada:	31 1f       	adc	r19, r17
    dadc:	f9 01       	movw	r30, r18
    dade:	40 81       	ld	r20, Z
    dae0:	51 81       	ldd	r21, Z+1	; 0x01
    dae2:	62 81       	ldd	r22, Z+2	; 0x02
    dae4:	73 81       	ldd	r23, Z+3	; 0x03
    dae6:	4c 29       	or	r20, r12
    dae8:	5d 29       	or	r21, r13
    daea:	6e 29       	or	r22, r14
    daec:	7f 29       	or	r23, r15
    daee:	40 83       	st	Z, r20
    daf0:	51 83       	std	Z+1, r21	; 0x01
    daf2:	62 83       	std	Z+2, r22	; 0x02
    daf4:	73 83       	std	Z+3, r23	; 0x03
    daf6:	f5 01       	movw	r30, r10
    daf8:	ef 51       	subi	r30, 0x1F	; 31
    dafa:	ff 4f       	sbci	r31, 0xFF	; 255
    dafc:	ee 0f       	add	r30, r30
    dafe:	ff 1f       	adc	r31, r31
    db00:	ee 0f       	add	r30, r30
    db02:	ff 1f       	adc	r31, r31
    db04:	e0 0f       	add	r30, r16
    db06:	f1 1f       	adc	r31, r17
    db08:	40 81       	ld	r20, Z
    db0a:	51 81       	ldd	r21, Z+1	; 0x01
    db0c:	62 81       	ldd	r22, Z+2	; 0x02
    db0e:	73 81       	ldd	r23, Z+3	; 0x03
    db10:	84 2b       	or	r24, r20
    db12:	95 2b       	or	r25, r21
    db14:	a6 2b       	or	r26, r22
    db16:	b7 2b       	or	r27, r23
    db18:	80 83       	st	Z, r24
    db1a:	91 83       	std	Z+1, r25	; 0x01
    db1c:	a2 83       	std	Z+2, r26	; 0x02
    db1e:	b3 83       	std	Z+3, r27	; 0x03
    db20:	a0 96       	adiw	r28, 0x20	; 32
    db22:	0f b6       	in	r0, 0x3f	; 63
    db24:	f8 94       	cli
    db26:	de bf       	out	0x3e, r29	; 62
    db28:	0f be       	out	0x3f, r0	; 63
    db2a:	cd bf       	out	0x3d, r28	; 61
    db2c:	df 91       	pop	r29
    db2e:	cf 91       	pop	r28
    db30:	1f 91       	pop	r17
    db32:	0f 91       	pop	r16
    db34:	ff 90       	pop	r15
    db36:	ef 90       	pop	r14
    db38:	df 90       	pop	r13
    db3a:	cf 90       	pop	r12
    db3c:	bf 90       	pop	r11
    db3e:	af 90       	pop	r10
    db40:	08 95       	ret

0000db42 <TMR_SR_convertToEBV>:
/** Convert value to Extensible bit vectors(EBV) format 
  * Set value in 1/2/3/4/5 bytes, dynamically based on value 
  */
TMR_Status
TMR_SR_convertToEBV(uint8_t *msg, uint8_t *i, uint64_t value)
{
    db42:	af 92       	push	r10
    db44:	bf 92       	push	r11
    db46:	cf 92       	push	r12
    db48:	df 92       	push	r13
    db4a:	ef 92       	push	r14
    db4c:	ff 92       	push	r15
    db4e:	0f 93       	push	r16
    db50:	1f 93       	push	r17
    db52:	cf 93       	push	r28
    db54:	df 93       	push	r29
    db56:	ec 01       	movw	r28, r24
    db58:	fb 01       	movw	r30, r22
    db5a:	b2 2e       	mov	r11, r18
    db5c:	c3 2e       	mov	r12, r19
    db5e:	d4 2e       	mov	r13, r20
    db60:	b5 2f       	mov	r27, r21
  uint64_t temp = 0;

  /* 1 byte is sufficient */
  if ((0x80) > value)
    db62:	2e 2d       	mov	r18, r14
    db64:	3f 2d       	mov	r19, r15
    db66:	40 2f       	mov	r20, r16
    db68:	51 2f       	mov	r21, r17
    db6a:	6b 2d       	mov	r22, r11
    db6c:	7c 2d       	mov	r23, r12
    db6e:	8d 2d       	mov	r24, r13
    db70:	9b 2f       	mov	r25, r27
    db72:	af e7       	ldi	r26, 0x7F	; 127
    db74:	74 d7       	rcall	.+3816   	; 0xea5e <__cmpdi2_s8>
    db76:	09 f0       	breq	.+2      	; 0xdb7a <TMR_SR_convertToEBV+0x38>
    db78:	a0 f4       	brcc	.+40     	; 0xdba2 <TMR_SR_convertToEBV+0x60>
  {
    SETU8(msg, *i, (uint8_t)value);
    db7a:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    db7e:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    db82:	01 96       	adiw	r24, 0x01	; 1
    db84:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    db88:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    db8c:	80 81       	ld	r24, Z
    db8e:	91 e0       	ldi	r25, 0x01	; 1
    db90:	98 0f       	add	r25, r24
    db92:	90 83       	st	Z, r25
    db94:	c8 0f       	add	r28, r24
    db96:	d1 1d       	adc	r29, r1
    db98:	e8 82       	st	Y, r14
  }
  else
  {
    return TMR_ERROR_INVALID;
  }
  return TMR_SUCCESS;
    db9a:	60 e0       	ldi	r22, 0x00	; 0
    db9c:	70 e0       	ldi	r23, 0x00	; 0
    db9e:	cb 01       	movw	r24, r22
    dba0:	6c c1       	rjmp	.+728    	; 0xde7a <TMR_SR_convertToEBV+0x338>
  if ((0x80) > value)
  {
    SETU8(msg, *i, (uint8_t)value);
  }
  /* 2 bytes are sufficient */
  else if((0x4000) > value)
    dba2:	2e 2d       	mov	r18, r14
    dba4:	3f 2d       	mov	r19, r15
    dba6:	40 2f       	mov	r20, r16
    dba8:	51 2f       	mov	r21, r17
    dbaa:	6b 2d       	mov	r22, r11
    dbac:	7c 2d       	mov	r23, r12
    dbae:	8d 2d       	mov	r24, r13
    dbb0:	9b 2f       	mov	r25, r27
    dbb2:	2f 3f       	cpi	r18, 0xFF	; 255
    dbb4:	af e3       	ldi	r26, 0x3F	; 63
    dbb6:	3a 07       	cpc	r19, r26
    dbb8:	41 05       	cpc	r20, r1
    dbba:	51 05       	cpc	r21, r1
    dbbc:	61 05       	cpc	r22, r1
    dbbe:	71 05       	cpc	r23, r1
    dbc0:	81 05       	cpc	r24, r1
    dbc2:	91 05       	cpc	r25, r1
    dbc4:	09 f0       	breq	.+2      	; 0xdbc8 <TMR_SR_convertToEBV+0x86>
    dbc6:	60 f5       	brcc	.+88     	; 0xdc20 <TMR_SR_convertToEBV+0xde>
  {
    temp = (value & 0x7F);
    dbc8:	ae 2d       	mov	r26, r14
    dbca:	af 77       	andi	r26, 0x7F	; 127
    value &= 0xFF80;
    dbcc:	20 78       	andi	r18, 0x80	; 128
    value = ((value << 1) | temp);
    dbce:	40 e0       	ldi	r20, 0x00	; 0
    dbd0:	50 e0       	ldi	r21, 0x00	; 0
    dbd2:	60 e0       	ldi	r22, 0x00	; 0
    dbd4:	70 e0       	ldi	r23, 0x00	; 0
    dbd6:	80 e0       	ldi	r24, 0x00	; 0
    dbd8:	90 e0       	ldi	r25, 0x00	; 0
    dbda:	01 e0       	ldi	r16, 0x01	; 1
    dbdc:	f7 d6       	rcall	.+3566   	; 0xe9cc <__ashldi3>

    SETU16(msg, *i, (uint16_t)(0x8000 | value));
    dbde:	8a 2f       	mov	r24, r26
    dbe0:	82 2b       	or	r24, r18
    dbe2:	93 2f       	mov	r25, r19
    dbe4:	90 68       	ori	r25, 0x80	; 128
    dbe6:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    dbea:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    dbee:	2e 5f       	subi	r18, 0xFE	; 254
    dbf0:	3f 4f       	sbci	r19, 0xFF	; 255
    dbf2:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    dbf6:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    dbfa:	20 81       	ld	r18, Z
    dbfc:	31 e0       	ldi	r19, 0x01	; 1
    dbfe:	32 0f       	add	r19, r18
    dc00:	30 83       	st	Z, r19
    dc02:	de 01       	movw	r26, r28
    dc04:	a2 0f       	add	r26, r18
    dc06:	b1 1d       	adc	r27, r1
    dc08:	9c 93       	st	X, r25
    dc0a:	90 81       	ld	r25, Z
    dc0c:	21 e0       	ldi	r18, 0x01	; 1
    dc0e:	29 0f       	add	r18, r25
    dc10:	20 83       	st	Z, r18
    dc12:	c9 0f       	add	r28, r25
    dc14:	d1 1d       	adc	r29, r1
    dc16:	88 83       	st	Y, r24
  }
  else
  {
    return TMR_ERROR_INVALID;
  }
  return TMR_SUCCESS;
    dc18:	60 e0       	ldi	r22, 0x00	; 0
    dc1a:	70 e0       	ldi	r23, 0x00	; 0
    dc1c:	cb 01       	movw	r24, r22
    dc1e:	2d c1       	rjmp	.+602    	; 0xde7a <TMR_SR_convertToEBV+0x338>
    value = ((value << 1) | temp);

    SETU16(msg, *i, (uint16_t)(0x8000 | value));
  }
  /* 3 bytes are sufficient */
  else if((0x200000) > value)
    dc20:	2e 2d       	mov	r18, r14
    dc22:	3f 2d       	mov	r19, r15
    dc24:	40 2f       	mov	r20, r16
    dc26:	51 2f       	mov	r21, r17
    dc28:	6b 2d       	mov	r22, r11
    dc2a:	7c 2d       	mov	r23, r12
    dc2c:	8d 2d       	mov	r24, r13
    dc2e:	9b 2f       	mov	r25, r27
    dc30:	2f 3f       	cpi	r18, 0xFF	; 255
    dc32:	af ef       	ldi	r26, 0xFF	; 255
    dc34:	3a 07       	cpc	r19, r26
    dc36:	af e1       	ldi	r26, 0x1F	; 31
    dc38:	4a 07       	cpc	r20, r26
    dc3a:	51 05       	cpc	r21, r1
    dc3c:	61 05       	cpc	r22, r1
    dc3e:	71 05       	cpc	r23, r1
    dc40:	81 05       	cpc	r24, r1
    dc42:	91 05       	cpc	r25, r1
    dc44:	09 f0       	breq	.+2      	; 0xdc48 <TMR_SR_convertToEBV+0x106>
  {
    temp = (value & 0x7F);
    value = (value << 1);
    dc46:	b0 f5       	brcc	.+108    	; 0xdcb4 <TMR_SR_convertToEBV+0x172>
    dc48:	01 e0       	ldi	r16, 0x01	; 1
    dc4a:	c0 d6       	rcall	.+3456   	; 0xe9cc <__ashldi3>
    temp |= (value & 0x7f00);
    value = (((value << 1) & 0xff0000) | temp);
    dc4c:	13 2f       	mov	r17, r19
    dc4e:	be d6       	rcall	.+3452   	; 0xe9cc <__ashldi3>

    SETU24(msg, *i, (uint32_t)(0x808000 | value));
    dc50:	8e 2d       	mov	r24, r14
    dc52:	8f 77       	andi	r24, 0x7F	; 127
    dc54:	91 2f       	mov	r25, r17
    dc56:	9f 77       	andi	r25, 0x7F	; 127
    dc58:	a4 2f       	mov	r26, r20
    dc5a:	b0 e0       	ldi	r27, 0x00	; 0
    dc5c:	6c 01       	movw	r12, r24
    dc5e:	7d 01       	movw	r14, r26
    dc60:	68 94       	set
    dc62:	d7 f8       	bld	r13, 7
    dc64:	e7 f8       	bld	r14, 7
    dc66:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    dc6a:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    dc6e:	2d 5f       	subi	r18, 0xFD	; 253
    dc70:	3f 4f       	sbci	r19, 0xFF	; 255
    dc72:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    dc76:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    dc7a:	20 81       	ld	r18, Z
    dc7c:	31 e0       	ldi	r19, 0x01	; 1
    dc7e:	32 0f       	add	r19, r18
    dc80:	30 83       	st	Z, r19
    dc82:	ae 01       	movw	r20, r28
    dc84:	42 0f       	add	r20, r18
    dc86:	51 1d       	adc	r21, r1
    dc88:	da 01       	movw	r26, r20
    dc8a:	ec 92       	st	X, r14
    dc8c:	20 81       	ld	r18, Z
    dc8e:	31 e0       	ldi	r19, 0x01	; 1
    dc90:	32 0f       	add	r19, r18
    dc92:	30 83       	st	Z, r19
    dc94:	ae 01       	movw	r20, r28
    dc96:	42 0f       	add	r20, r18
    dc98:	51 1d       	adc	r21, r1
    dc9a:	da 01       	movw	r26, r20
    dc9c:	dc 92       	st	X, r13
    dc9e:	20 81       	ld	r18, Z
    dca0:	31 e0       	ldi	r19, 0x01	; 1
    dca2:	32 0f       	add	r19, r18
    dca4:	30 83       	st	Z, r19
    dca6:	c2 0f       	add	r28, r18
    dca8:	d1 1d       	adc	r29, r1
    dcaa:	c8 82       	st	Y, r12
  }
  else
  {
    return TMR_ERROR_INVALID;
  }
  return TMR_SUCCESS;
    dcac:	60 e0       	ldi	r22, 0x00	; 0
    dcae:	70 e0       	ldi	r23, 0x00	; 0
    dcb0:	cb 01       	movw	r24, r22
    dcb2:	e3 c0       	rjmp	.+454    	; 0xde7a <TMR_SR_convertToEBV+0x338>
    value = (((value << 1) & 0xff0000) | temp);

    SETU24(msg, *i, (uint32_t)(0x808000 | value));
  }
  /* 4 bytes are sufficient */
  else if((0x10000000) > value)
    dcb4:	2e 2d       	mov	r18, r14
    dcb6:	3f 2d       	mov	r19, r15
    dcb8:	40 2f       	mov	r20, r16
    dcba:	51 2f       	mov	r21, r17
    dcbc:	6b 2d       	mov	r22, r11
    dcbe:	7c 2d       	mov	r23, r12
    dcc0:	8d 2d       	mov	r24, r13
    dcc2:	9b 2f       	mov	r25, r27
    dcc4:	2f 3f       	cpi	r18, 0xFF	; 255
    dcc6:	af ef       	ldi	r26, 0xFF	; 255
    dcc8:	3a 07       	cpc	r19, r26
    dcca:	4a 07       	cpc	r20, r26
    dccc:	af e0       	ldi	r26, 0x0F	; 15
    dcce:	5a 07       	cpc	r21, r26
    dcd0:	61 05       	cpc	r22, r1
    dcd2:	71 05       	cpc	r23, r1
    dcd4:	81 05       	cpc	r24, r1
    dcd6:	91 05       	cpc	r25, r1
    dcd8:	11 f0       	breq	.+4      	; 0xdcde <TMR_SR_convertToEBV+0x19c>
    dcda:	08 f0       	brcs	.+2      	; 0xdcde <TMR_SR_convertToEBV+0x19c>
  {
    temp = (value & 0x7f);
    value = (value << 1);
    dcdc:	43 c0       	rjmp	.+134    	; 0xdd64 <TMR_SR_convertToEBV+0x222>
    dcde:	01 e0       	ldi	r16, 0x01	; 1
    dce0:	75 d6       	rcall	.+3306   	; 0xe9cc <__ashldi3>
    temp |= (value & 0x7f00);
    value = (value << 1);
    dce2:	f3 2e       	mov	r15, r19
    dce4:	73 d6       	rcall	.+3302   	; 0xe9cc <__ashldi3>
    dce6:	14 2f       	mov	r17, r20
    temp |= (value & 0x7f0000);
    value = (((value << 1) & 0xff000000) | temp);
    dce8:	71 d6       	rcall	.+3298   	; 0xe9cc <__ashldi3>
    dcea:	8e 2d       	mov	r24, r14
    
    SETU32(msg, *i, (uint32_t)(0x80808000 | value));
    dcec:	8f 77       	andi	r24, 0x7F	; 127
    dcee:	9f 2d       	mov	r25, r15
    dcf0:	9f 77       	andi	r25, 0x7F	; 127
    dcf2:	a1 2f       	mov	r26, r17
    dcf4:	af 77       	andi	r26, 0x7F	; 127
    dcf6:	b5 2f       	mov	r27, r21
    dcf8:	6c 01       	movw	r12, r24
    dcfa:	7d 01       	movw	r14, r26
    dcfc:	68 94       	set
    dcfe:	d7 f8       	bld	r13, 7
    dd00:	e7 f8       	bld	r14, 7
    dd02:	f7 f8       	bld	r15, 7
    dd04:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <totalMsgIdx>
    dd08:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    dd0c:	2c 5f       	subi	r18, 0xFC	; 252
    dd0e:	3f 4f       	sbci	r19, 0xFF	; 255
    dd10:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <totalMsgIdx+0x1>
    dd14:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <totalMsgIdx>
    dd18:	20 81       	ld	r18, Z
    dd1a:	31 e0       	ldi	r19, 0x01	; 1
    dd1c:	32 0f       	add	r19, r18
    dd1e:	30 83       	st	Z, r19
    dd20:	ae 01       	movw	r20, r28
    dd22:	42 0f       	add	r20, r18
    dd24:	51 1d       	adc	r21, r1
    dd26:	da 01       	movw	r26, r20
    dd28:	fc 92       	st	X, r15
    dd2a:	20 81       	ld	r18, Z
    dd2c:	31 e0       	ldi	r19, 0x01	; 1
    dd2e:	32 0f       	add	r19, r18
    dd30:	30 83       	st	Z, r19
    dd32:	ae 01       	movw	r20, r28
    dd34:	42 0f       	add	r20, r18
    dd36:	51 1d       	adc	r21, r1
    dd38:	da 01       	movw	r26, r20
    dd3a:	ec 92       	st	X, r14
    dd3c:	20 81       	ld	r18, Z
    dd3e:	31 e0       	ldi	r19, 0x01	; 1
    dd40:	32 0f       	add	r19, r18
    dd42:	30 83       	st	Z, r19
    dd44:	ae 01       	movw	r20, r28
    dd46:	42 0f       	add	r20, r18
    dd48:	51 1d       	adc	r21, r1
    dd4a:	da 01       	movw	r26, r20
    dd4c:	dc 92       	st	X, r13
    dd4e:	20 81       	ld	r18, Z
    dd50:	31 e0       	ldi	r19, 0x01	; 1
    dd52:	32 0f       	add	r19, r18
    dd54:	30 83       	st	Z, r19
    dd56:	c2 0f       	add	r28, r18
    dd58:	d1 1d       	adc	r29, r1
    dd5a:	c8 82       	st	Y, r12
    dd5c:	60 e0       	ldi	r22, 0x00	; 0
  }
  else
  {
    return TMR_ERROR_INVALID;
  }
  return TMR_SUCCESS;
    dd5e:	70 e0       	ldi	r23, 0x00	; 0
    dd60:	cb 01       	movw	r24, r22
    dd62:	8b c0       	rjmp	.+278    	; 0xde7a <TMR_SR_convertToEBV+0x338>
    dd64:	2e 2d       	mov	r18, r14
    value = (((value << 1) & 0xff000000) | temp);
    
    SETU32(msg, *i, (uint32_t)(0x80808000 | value));
  }
  /* 5 bytes are sufficient */
  else if((0x800000000ULL) > value)
    dd66:	3f 2d       	mov	r19, r15
    dd68:	40 2f       	mov	r20, r16
    dd6a:	51 2f       	mov	r21, r17
    dd6c:	6b 2d       	mov	r22, r11
    dd6e:	7c 2d       	mov	r23, r12
    dd70:	8d 2d       	mov	r24, r13
    dd72:	9b 2f       	mov	r25, r27
    dd74:	2f 3f       	cpi	r18, 0xFF	; 255
    dd76:	af ef       	ldi	r26, 0xFF	; 255
    dd78:	3a 07       	cpc	r19, r26
    dd7a:	4a 07       	cpc	r20, r26
    dd7c:	5a 07       	cpc	r21, r26
    dd7e:	a7 e0       	ldi	r26, 0x07	; 7
    dd80:	6a 07       	cpc	r22, r26
    dd82:	71 05       	cpc	r23, r1
    dd84:	81 05       	cpc	r24, r1
    dd86:	91 05       	cpc	r25, r1
    dd88:	11 f0       	breq	.+4      	; 0xdd8e <TMR_SR_convertToEBV+0x24c>
    dd8a:	08 f0       	brcs	.+2      	; 0xdd8e <TMR_SR_convertToEBV+0x24c>
    dd8c:	72 c0       	rjmp	.+228    	; 0xde72 <TMR_SR_convertToEBV+0x330>
  {
    temp = (value & 0x7f);
    dd8e:	4e 2d       	mov	r20, r14
    dd90:	4f 77       	andi	r20, 0x7F	; 127
    value = (value << 1);
    dd92:	a4 2e       	mov	r10, r20
    dd94:	40 2f       	mov	r20, r16
    dd96:	01 e0       	ldi	r16, 0x01	; 1
    dd98:	19 d6       	rcall	.+3122   	; 0xe9cc <__ashldi3>
    temp |= (value & 0x7f00);
    value = (value << 1);
    dd9a:	b3 2f       	mov	r27, r19
    dd9c:	17 d6       	rcall	.+3118   	; 0xe9cc <__ashldi3>
    dd9e:	14 2f       	mov	r17, r20
    temp |= (value & 0x7f0000);
    value = (value << 1);
    dda0:	15 d6       	rcall	.+3114   	; 0xe9cc <__ashldi3>
    dda2:	a5 2f       	mov	r26, r21
    dda4:	13 d6       	rcall	.+3110   	; 0xe9cc <__ashldi3>
    temp |= (value & 0x7f000000);
    value = (((value << 1) & 0xff00000000ULL) | temp);
    dda6:	b0 68       	ori	r27, 0x80	; 128
    dda8:	fb 2e       	mov	r15, r27
    
    SETU40(msg, *i, (uint64_t)(0x8080808000ULL | value));
    ddaa:	10 68       	ori	r17, 0x80	; 128
    ddac:	a0 68       	ori	r26, 0x80	; 128
    ddae:	ea 2e       	mov	r14, r26
    ddb0:	60 68       	ori	r22, 0x80	; 128
    ddb2:	b6 2e       	mov	r11, r22
    ddb4:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <totalMsgIdx>
    ddb8:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <totalMsgIdx+0x1>
    ddbc:	05 96       	adiw	r24, 0x05	; 5
    ddbe:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <totalMsgIdx+0x1>
    ddc2:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <totalMsgIdx>
    ddc6:	80 81       	ld	r24, Z
    ddc8:	91 e0       	ldi	r25, 0x01	; 1
    ddca:	98 0f       	add	r25, r24
    ddcc:	90 83       	st	Z, r25
    ddce:	6e 01       	movw	r12, r28
    ddd0:	c8 0e       	add	r12, r24
    ddd2:	d1 1c       	adc	r13, r1
    ddd4:	2a 2d       	mov	r18, r10
    ddd6:	3b 2f       	mov	r19, r27
    ddd8:	41 2f       	mov	r20, r17
    ddda:	5a 2f       	mov	r21, r26
    dddc:	70 e0       	ldi	r23, 0x00	; 0
    ddde:	80 e0       	ldi	r24, 0x00	; 0
    dde0:	90 e0       	ldi	r25, 0x00	; 0
    dde2:	00 e2       	ldi	r16, 0x20	; 32
    dde4:	0e d6       	rcall	.+3100   	; 0xea02 <__lshrdi3>
    dde6:	d6 01       	movw	r26, r12
    dde8:	2c 93       	st	X, r18
    ddea:	80 81       	ld	r24, Z
    ddec:	91 e0       	ldi	r25, 0x01	; 1
    ddee:	98 0f       	add	r25, r24
    ddf0:	90 83       	st	Z, r25
    ddf2:	6e 01       	movw	r12, r28
    ddf4:	c8 0e       	add	r12, r24
    ddf6:	d1 1c       	adc	r13, r1
    ddf8:	2a 2d       	mov	r18, r10
    ddfa:	3f 2d       	mov	r19, r15
    ddfc:	41 2f       	mov	r20, r17
    ddfe:	5e 2d       	mov	r21, r14
    de00:	6b 2d       	mov	r22, r11
    de02:	70 e0       	ldi	r23, 0x00	; 0
    de04:	80 e0       	ldi	r24, 0x00	; 0
    de06:	90 e0       	ldi	r25, 0x00	; 0
    de08:	08 e1       	ldi	r16, 0x18	; 24
    de0a:	fb d5       	rcall	.+3062   	; 0xea02 <__lshrdi3>
    de0c:	d6 01       	movw	r26, r12
    de0e:	2c 93       	st	X, r18
    de10:	80 81       	ld	r24, Z
    de12:	91 e0       	ldi	r25, 0x01	; 1
    de14:	98 0f       	add	r25, r24
    de16:	90 83       	st	Z, r25
    de18:	6e 01       	movw	r12, r28
    de1a:	c8 0e       	add	r12, r24
    de1c:	d1 1c       	adc	r13, r1
    de1e:	2a 2d       	mov	r18, r10
    de20:	3f 2d       	mov	r19, r15
    de22:	41 2f       	mov	r20, r17
    de24:	5e 2d       	mov	r21, r14
    de26:	6b 2d       	mov	r22, r11
    de28:	70 e0       	ldi	r23, 0x00	; 0
    de2a:	80 e0       	ldi	r24, 0x00	; 0
    de2c:	90 e0       	ldi	r25, 0x00	; 0
    de2e:	00 e1       	ldi	r16, 0x10	; 16
    de30:	e8 d5       	rcall	.+3024   	; 0xea02 <__lshrdi3>
    de32:	d6 01       	movw	r26, r12
    de34:	2c 93       	st	X, r18
    de36:	80 81       	ld	r24, Z
    de38:	91 e0       	ldi	r25, 0x01	; 1
    de3a:	98 0f       	add	r25, r24
    de3c:	90 83       	st	Z, r25
    de3e:	6e 01       	movw	r12, r28
    de40:	c8 0e       	add	r12, r24
    de42:	d1 1c       	adc	r13, r1
    de44:	2a 2d       	mov	r18, r10
    de46:	3f 2d       	mov	r19, r15
    de48:	41 2f       	mov	r20, r17
    de4a:	5e 2d       	mov	r21, r14
    de4c:	6b 2d       	mov	r22, r11
    de4e:	70 e0       	ldi	r23, 0x00	; 0
    de50:	80 e0       	ldi	r24, 0x00	; 0
    de52:	90 e0       	ldi	r25, 0x00	; 0
    de54:	08 e0       	ldi	r16, 0x08	; 8
    de56:	d5 d5       	rcall	.+2986   	; 0xea02 <__lshrdi3>
    de58:	d6 01       	movw	r26, r12
    de5a:	2c 93       	st	X, r18
    de5c:	80 81       	ld	r24, Z
    de5e:	91 e0       	ldi	r25, 0x01	; 1
    de60:	98 0f       	add	r25, r24
    de62:	90 83       	st	Z, r25
    de64:	c8 0f       	add	r28, r24
    de66:	d1 1d       	adc	r29, r1
    de68:	a8 82       	st	Y, r10
    de6a:	60 e0       	ldi	r22, 0x00	; 0
    de6c:	70 e0       	ldi	r23, 0x00	; 0
  }
  else
  {
    return TMR_ERROR_INVALID;
  }
  return TMR_SUCCESS;
    de6e:	cb 01       	movw	r24, r22
    de70:	04 c0       	rjmp	.+8      	; 0xde7a <TMR_SR_convertToEBV+0x338>
    de72:	61 e0       	ldi	r22, 0x01	; 1
    de74:	70 e0       	ldi	r23, 0x00	; 0
    
    SETU40(msg, *i, (uint64_t)(0x8080808000ULL | value));
  }
  else
  {
    return TMR_ERROR_INVALID;
    de76:	80 e0       	ldi	r24, 0x00	; 0
    de78:	93 e0       	ldi	r25, 0x03	; 3
    de7a:	df 91       	pop	r29
    de7c:	cf 91       	pop	r28
  }
  return TMR_SUCCESS;
}
    de7e:	1f 91       	pop	r17
    de80:	0f 91       	pop	r16
    de82:	ff 90       	pop	r15
    de84:	ef 90       	pop	r14
    de86:	df 90       	pop	r13
    de88:	cf 90       	pop	r12
    de8a:	bf 90       	pop	r11
    de8c:	af 90       	pop	r10
    de8e:	08 95       	ret

0000de90 <TMR_SR_convertFromEBV>:
    de90:	6f 92       	push	r6
    de92:	7f 92       	push	r7

/** Convert from 1/2/3/4/5 bytes of EBV formated value */
uint64_t
TMR_SR_convertFromEBV(uint8_t *msg, uint8_t length)
{
    de94:	8f 92       	push	r8
    de96:	9f 92       	push	r9
    de98:	af 92       	push	r10
    de9a:	bf 92       	push	r11
    de9c:	cf 92       	push	r12
    de9e:	df 92       	push	r13
    dea0:	ef 92       	push	r14
    dea2:	ff 92       	push	r15
    dea4:	0f 93       	push	r16
    dea6:	1f 93       	push	r17
    dea8:	cf 93       	push	r28
    deaa:	df 93       	push	r29
    deac:	cd b7       	in	r28, 0x3d	; 61
    deae:	de b7       	in	r29, 0x3e	; 62
    deb0:	60 97       	sbiw	r28, 0x10	; 16
    deb2:	0f b6       	in	r0, 0x3f	; 63
    deb4:	f8 94       	cli
    deb6:	de bf       	out	0x3e, r29	; 62
    deb8:	0f be       	out	0x3f, r0	; 63
    deba:	cd bf       	out	0x3d, r28	; 61
    debc:	3c 01       	movw	r6, r24
    debe:	a6 2f       	mov	r26, r22
  uint64_t value = 0, temp = 0;

  switch (length)
    dec0:	63 30       	cpi	r22, 0x03	; 3
    dec2:	e9 f1       	breq	.+122    	; 0xdf3e <TMR_SR_convertFromEBV+0xae>
    dec4:	28 f4       	brcc	.+10     	; 0xded0 <TMR_SR_convertFromEBV+0x40>
    dec6:	61 30       	cpi	r22, 0x01	; 1
    dec8:	61 f0       	breq	.+24     	; 0xdee2 <TMR_SR_convertFromEBV+0x52>
    deca:	62 30       	cpi	r22, 0x02	; 2
    decc:	99 f0       	breq	.+38     	; 0xdef4 <TMR_SR_convertFromEBV+0x64>
    dece:	9a c1       	rjmp	.+820    	; 0xe204 <TMR_SR_convertFromEBV+0x374>
    ded0:	65 30       	cpi	r22, 0x05	; 5
    ded2:	09 f4       	brne	.+2      	; 0xded6 <TMR_SR_convertFromEBV+0x46>
    ded4:	ec c0       	rjmp	.+472    	; 0xe0ae <TMR_SR_convertFromEBV+0x21e>
    ded6:	08 f4       	brcc	.+2      	; 0xdeda <TMR_SR_convertFromEBV+0x4a>
    ded8:	7f c0       	rjmp	.+254    	; 0xdfd8 <TMR_SR_convertFromEBV+0x148>
    deda:	68 30       	cpi	r22, 0x08	; 8
    dedc:	09 f4       	brne	.+2      	; 0xdee0 <TMR_SR_convertFromEBV+0x50>
    dede:	87 c1       	rjmp	.+782    	; 0xe1ee <TMR_SR_convertFromEBV+0x35e>
    dee0:	91 c1       	rjmp	.+802    	; 0xe204 <TMR_SR_convertFromEBV+0x374>
  {
    case 0x01:
    {
      value = msg[0];
    dee2:	fc 01       	movw	r30, r24
    dee4:	80 80       	ld	r8, Z
    dee6:	91 2c       	mov	r9, r1
    dee8:	a1 2c       	mov	r10, r1
    deea:	b1 2c       	mov	r11, r1
    deec:	c1 2c       	mov	r12, r1
    deee:	d1 2c       	mov	r13, r1
    def0:	76 01       	movw	r14, r12
      break;
    def2:	90 c1       	rjmp	.+800    	; 0xe214 <TMR_SR_convertFromEBV+0x384>
    }
    case 0x02:
    {
      value = GETU16AT(msg, 0);
    def4:	fc 01       	movw	r30, r24
    def6:	80 81       	ld	r24, Z
    def8:	90 e0       	ldi	r25, 0x00	; 0
    defa:	98 2f       	mov	r25, r24
    defc:	88 27       	eor	r24, r24
    defe:	21 81       	ldd	r18, Z+1	; 0x01
    df00:	82 2b       	or	r24, r18

      temp = (value & 0x7f);
    df02:	9c 01       	movw	r18, r24
    df04:	2f 77       	andi	r18, 0x7F	; 127
    df06:	33 27       	eor	r19, r19
    df08:	59 01       	movw	r10, r18
    df0a:	29 83       	std	Y+1, r18	; 0x01
    df0c:	ba 82       	std	Y+2, r11	; 0x02
      value &= 0x7fff;
    df0e:	9f 77       	andi	r25, 0x7F	; 127
    df10:	6c 01       	movw	r12, r24
      value = (((value >> 1) & 0xff80) | temp);
    df12:	28 2f       	mov	r18, r24
    df14:	3d 2d       	mov	r19, r13
    df16:	40 e0       	ldi	r20, 0x00	; 0
    df18:	50 e0       	ldi	r21, 0x00	; 0
    df1a:	60 e0       	ldi	r22, 0x00	; 0
    df1c:	70 e0       	ldi	r23, 0x00	; 0
    df1e:	80 e0       	ldi	r24, 0x00	; 0
    df20:	90 e0       	ldi	r25, 0x00	; 0
    df22:	01 e0       	ldi	r16, 0x01	; 1
    df24:	6e d5       	rcall	.+2780   	; 0xea02 <__lshrdi3>
    df26:	20 78       	andi	r18, 0x80	; 128
    df28:	a1 2c       	mov	r10, r1
    df2a:	b1 2c       	mov	r11, r1
    df2c:	c1 2c       	mov	r12, r1
    df2e:	d1 2c       	mov	r13, r1
    df30:	e1 2c       	mov	r14, r1
    df32:	f1 2c       	mov	r15, r1
    df34:	89 80       	ldd	r8, Y+1	; 0x01
    df36:	82 2a       	or	r8, r18
    df38:	9a 80       	ldd	r9, Y+2	; 0x02
    df3a:	93 2a       	or	r9, r19
      break;
    df3c:	6b c1       	rjmp	.+726    	; 0xe214 <TMR_SR_convertFromEBV+0x384>
    }
    case 0x03:
    {
      value = GETU24AT(msg, 0);
    df3e:	fc 01       	movw	r30, r24
    df40:	80 81       	ld	r24, Z
    df42:	90 e0       	ldi	r25, 0x00	; 0
    df44:	a0 e0       	ldi	r26, 0x00	; 0
    df46:	b0 e0       	ldi	r27, 0x00	; 0
    df48:	bc 01       	movw	r22, r24
    df4a:	55 27       	eor	r21, r21
    df4c:	44 27       	eor	r20, r20
    df4e:	91 81       	ldd	r25, Z+1	; 0x01
    df50:	89 2f       	mov	r24, r25
    df52:	90 e0       	ldi	r25, 0x00	; 0
    df54:	a0 e0       	ldi	r26, 0x00	; 0
    df56:	b0 e0       	ldi	r27, 0x00	; 0
    df58:	ba 2f       	mov	r27, r26
    df5a:	a9 2f       	mov	r26, r25
    df5c:	98 2f       	mov	r25, r24
    df5e:	88 27       	eor	r24, r24
    df60:	84 2b       	or	r24, r20
    df62:	95 2b       	or	r25, r21
    df64:	a6 2b       	or	r26, r22
    df66:	b7 2b       	or	r27, r23
    df68:	22 81       	ldd	r18, Z+2	; 0x02
    df6a:	82 2b       	or	r24, r18

      value &= 0x7f7f7f;
    df6c:	4c 01       	movw	r8, r24
    df6e:	5d 01       	movw	r10, r26
    df70:	e8 94       	clt
    df72:	87 f8       	bld	r8, 7
    df74:	97 f8       	bld	r9, 7
    df76:	a7 f8       	bld	r10, 7
    df78:	bb 24       	eor	r11, r11
      temp = (value & 0x7f);
    df7a:	8f 77       	andi	r24, 0x7F	; 127
    df7c:	99 27       	eor	r25, r25
    df7e:	aa 27       	eor	r26, r26
    df80:	bb 27       	eor	r27, r27
    df82:	8c 01       	movw	r16, r24
    df84:	9d 01       	movw	r18, r26
    df86:	89 83       	std	Y+1, r24	; 0x01
    df88:	1a 83       	std	Y+2, r17	; 0x02
    df8a:	2b 83       	std	Y+3, r18	; 0x03
    df8c:	3c 83       	std	Y+4, r19	; 0x04
      value = ((value >> 1) | temp);
    df8e:	28 2d       	mov	r18, r8
    df90:	39 2d       	mov	r19, r9
    df92:	4a 2d       	mov	r20, r10
    df94:	5b 2d       	mov	r21, r11
    df96:	60 e0       	ldi	r22, 0x00	; 0
    df98:	70 e0       	ldi	r23, 0x00	; 0
    df9a:	80 e0       	ldi	r24, 0x00	; 0
    df9c:	90 e0       	ldi	r25, 0x00	; 0
    df9e:	01 e0       	ldi	r16, 0x01	; 1
    dfa0:	30 d5       	rcall	.+2656   	; 0xea02 <__lshrdi3>
    dfa2:	19 81       	ldd	r17, Y+1	; 0x01
    dfa4:	21 2b       	or	r18, r17
    dfa6:	aa 81       	ldd	r26, Y+2	; 0x02
    dfa8:	3a 2b       	or	r19, r26
    dfaa:	eb 81       	ldd	r30, Y+3	; 0x03
    dfac:	4e 2b       	or	r20, r30
    dfae:	fc 81       	ldd	r31, Y+4	; 0x04
    dfb0:	5f 2b       	or	r21, r31
      temp |= (value & 0x3f80);
    dfb2:	f2 2f       	mov	r31, r18
    dfb4:	f0 78       	andi	r31, 0x80	; 128
    dfb6:	e3 2f       	mov	r30, r19
    dfb8:	ef 73       	andi	r30, 0x3F	; 63
      value = (((value >> 1) & 0xffc000) | temp);
    dfba:	ea 2b       	or	r30, r26
    dfbc:	22 d5       	rcall	.+2628   	; 0xea02 <__lshrdi3>
    dfbe:	30 7c       	andi	r19, 0xC0	; 192
    dfc0:	c1 2c       	mov	r12, r1
    dfc2:	d1 2c       	mov	r13, r1
    dfc4:	e1 2c       	mov	r14, r1
    dfc6:	f1 2c       	mov	r15, r1
    dfc8:	81 2e       	mov	r8, r17
    dfca:	8f 2a       	or	r8, r31
    dfcc:	9e 2e       	mov	r9, r30
    dfce:	93 2a       	or	r9, r19
    dfd0:	ab 80       	ldd	r10, Y+3	; 0x03
    dfd2:	a4 2a       	or	r10, r20
    dfd4:	bc 80       	ldd	r11, Y+4	; 0x04
      break;
    dfd6:	1e c1       	rjmp	.+572    	; 0xe214 <TMR_SR_convertFromEBV+0x384>
    }
    case 0x04:
    {
      value = GETU32AT(msg, 0);
    dfd8:	fc 01       	movw	r30, r24
    dfda:	80 81       	ld	r24, Z
    dfdc:	90 e0       	ldi	r25, 0x00	; 0
    dfde:	a0 e0       	ldi	r26, 0x00	; 0
    dfe0:	b0 e0       	ldi	r27, 0x00	; 0
    dfe2:	78 2f       	mov	r23, r24
    dfe4:	66 27       	eor	r22, r22
    dfe6:	55 27       	eor	r21, r21
    dfe8:	44 27       	eor	r20, r20
    dfea:	91 81       	ldd	r25, Z+1	; 0x01
    dfec:	89 2f       	mov	r24, r25
    dfee:	90 e0       	ldi	r25, 0x00	; 0
    dff0:	a0 e0       	ldi	r26, 0x00	; 0
    dff2:	b0 e0       	ldi	r27, 0x00	; 0
    dff4:	dc 01       	movw	r26, r24
    dff6:	99 27       	eor	r25, r25
    dff8:	88 27       	eor	r24, r24
    dffa:	84 2b       	or	r24, r20
    dffc:	95 2b       	or	r25, r21
    dffe:	a6 2b       	or	r26, r22
    e000:	b7 2b       	or	r27, r23
    e002:	42 81       	ldd	r20, Z+2	; 0x02
    e004:	50 e0       	ldi	r21, 0x00	; 0
    e006:	60 e0       	ldi	r22, 0x00	; 0
    e008:	70 e0       	ldi	r23, 0x00	; 0
    e00a:	76 2f       	mov	r23, r22
    e00c:	65 2f       	mov	r22, r21
    e00e:	54 2f       	mov	r21, r20
    e010:	44 27       	eor	r20, r20
    e012:	84 2b       	or	r24, r20
    e014:	95 2b       	or	r25, r21
    e016:	a6 2b       	or	r26, r22
    e018:	b7 2b       	or	r27, r23
    e01a:	23 81       	ldd	r18, Z+3	; 0x03
    e01c:	82 2b       	or	r24, r18
      value &= 0x7f7f7f7f;
    e01e:	4c 01       	movw	r8, r24
    e020:	5d 01       	movw	r10, r26
    e022:	e8 94       	clt
    e024:	87 f8       	bld	r8, 7
    e026:	97 f8       	bld	r9, 7
    e028:	a7 f8       	bld	r10, 7
    e02a:	b7 f8       	bld	r11, 7
      temp = (value & 0x7f);
    e02c:	8f 77       	andi	r24, 0x7F	; 127
    e02e:	99 27       	eor	r25, r25
    e030:	aa 27       	eor	r26, r26
    e032:	bb 27       	eor	r27, r27
    e034:	8c 01       	movw	r16, r24
    e036:	9d 01       	movw	r18, r26
    e038:	89 83       	std	Y+1, r24	; 0x01
    e03a:	1a 83       	std	Y+2, r17	; 0x02
    e03c:	2b 83       	std	Y+3, r18	; 0x03
    e03e:	3c 83       	std	Y+4, r19	; 0x04
      value = ((value >> 1) | temp);
    e040:	28 2d       	mov	r18, r8
    e042:	39 2d       	mov	r19, r9
    e044:	4a 2d       	mov	r20, r10
    e046:	5b 2d       	mov	r21, r11
    e048:	60 e0       	ldi	r22, 0x00	; 0
    e04a:	70 e0       	ldi	r23, 0x00	; 0
    e04c:	80 e0       	ldi	r24, 0x00	; 0
    e04e:	90 e0       	ldi	r25, 0x00	; 0
    e050:	01 e0       	ldi	r16, 0x01	; 1
    e052:	d7 d4       	rcall	.+2478   	; 0xea02 <__lshrdi3>
    e054:	19 81       	ldd	r17, Y+1	; 0x01
    e056:	21 2b       	or	r18, r17
    e058:	aa 81       	ldd	r26, Y+2	; 0x02
    e05a:	3a 2b       	or	r19, r26
    e05c:	eb 81       	ldd	r30, Y+3	; 0x03
    e05e:	4e 2b       	or	r20, r30
    e060:	fc 81       	ldd	r31, Y+4	; 0x04
    e062:	5f 2b       	or	r21, r31
      temp |= (value & 0x3f80);
    e064:	f2 2f       	mov	r31, r18
    e066:	f0 78       	andi	r31, 0x80	; 128
    e068:	e3 2f       	mov	r30, r19
    e06a:	ef 73       	andi	r30, 0x3F	; 63
    e06c:	f1 2b       	or	r31, r17
      value = (((value >> 1) & 0xffffc000) | temp);
    e06e:	ea 2b       	or	r30, r26
    e070:	c8 d4       	rcall	.+2448   	; 0xea02 <__lshrdi3>
    e072:	30 7c       	andi	r19, 0xC0	; 192
    e074:	3e 2b       	or	r19, r30
    e076:	ab 80       	ldd	r10, Y+3	; 0x03
    e078:	4a 29       	or	r20, r10
    e07a:	bc 80       	ldd	r11, Y+4	; 0x04
    e07c:	5b 29       	or	r21, r11
      temp |= (value & 0x1fc000);
    e07e:	b3 2f       	mov	r27, r19
    e080:	b0 7c       	andi	r27, 0xC0	; 192
    e082:	a4 2f       	mov	r26, r20
    e084:	af 71       	andi	r26, 0x1F	; 31
    e086:	aa 29       	or	r26, r10
      value = (((value >> 1) & 0xffe00000) | temp);
    e088:	2f 2f       	mov	r18, r31
    e08a:	60 e0       	ldi	r22, 0x00	; 0
    e08c:	70 e0       	ldi	r23, 0x00	; 0
    e08e:	80 e0       	ldi	r24, 0x00	; 0
    e090:	90 e0       	ldi	r25, 0x00	; 0
    e092:	b7 d4       	rcall	.+2414   	; 0xea02 <__lshrdi3>
    e094:	40 7e       	andi	r20, 0xE0	; 224
    e096:	c1 2c       	mov	r12, r1
    e098:	d1 2c       	mov	r13, r1
    e09a:	e1 2c       	mov	r14, r1
    e09c:	f1 2c       	mov	r15, r1
    e09e:	8f 2e       	mov	r8, r31
    e0a0:	9e 2e       	mov	r9, r30
    e0a2:	9b 2a       	or	r9, r27
    e0a4:	aa 2e       	mov	r10, r26
    e0a6:	a4 2a       	or	r10, r20
    e0a8:	bc 80       	ldd	r11, Y+4	; 0x04
    e0aa:	b5 2a       	or	r11, r21
      break;
    e0ac:	b3 c0       	rjmp	.+358    	; 0xe214 <TMR_SR_convertFromEBV+0x384>
    }
    case 0x05:
    {
      value = GETU40AT(msg, 0);
    e0ae:	fc 01       	movw	r30, r24
    e0b0:	20 81       	ld	r18, Z
    e0b2:	30 e0       	ldi	r19, 0x00	; 0
    e0b4:	40 e0       	ldi	r20, 0x00	; 0
    e0b6:	50 e0       	ldi	r21, 0x00	; 0
    e0b8:	60 e0       	ldi	r22, 0x00	; 0
    e0ba:	70 e0       	ldi	r23, 0x00	; 0
    e0bc:	80 e0       	ldi	r24, 0x00	; 0
    e0be:	90 e0       	ldi	r25, 0x00	; 0
    e0c0:	00 e2       	ldi	r16, 0x20	; 32
    e0c2:	84 d4       	rcall	.+2312   	; 0xe9cc <__ashldi3>
    e0c4:	12 2f       	mov	r17, r18
    e0c6:	f3 2e       	mov	r15, r19
    e0c8:	e4 2e       	mov	r14, r20
    e0ca:	b5 2f       	mov	r27, r21
    e0cc:	a6 2f       	mov	r26, r22
    e0ce:	21 81       	ldd	r18, Z+1	; 0x01
    e0d0:	30 e0       	ldi	r19, 0x00	; 0
    e0d2:	40 e0       	ldi	r20, 0x00	; 0
    e0d4:	50 e0       	ldi	r21, 0x00	; 0
    e0d6:	60 e0       	ldi	r22, 0x00	; 0
    e0d8:	70 e0       	ldi	r23, 0x00	; 0
    e0da:	80 e0       	ldi	r24, 0x00	; 0
    e0dc:	90 e0       	ldi	r25, 0x00	; 0
    e0de:	08 e1       	ldi	r16, 0x18	; 24
    e0e0:	75 d4       	rcall	.+2282   	; 0xe9cc <__ashldi3>
    e0e2:	12 2b       	or	r17, r18
    e0e4:	f3 2a       	or	r15, r19
    e0e6:	e4 2a       	or	r14, r20
    e0e8:	b5 2b       	or	r27, r21
    e0ea:	a6 2b       	or	r26, r22
    e0ec:	22 81       	ldd	r18, Z+2	; 0x02
    e0ee:	30 e0       	ldi	r19, 0x00	; 0
    e0f0:	40 e0       	ldi	r20, 0x00	; 0
    e0f2:	50 e0       	ldi	r21, 0x00	; 0
    e0f4:	60 e0       	ldi	r22, 0x00	; 0
    e0f6:	70 e0       	ldi	r23, 0x00	; 0
    e0f8:	80 e0       	ldi	r24, 0x00	; 0
    e0fa:	90 e0       	ldi	r25, 0x00	; 0
    e0fc:	00 e1       	ldi	r16, 0x10	; 16
    e0fe:	66 d4       	rcall	.+2252   	; 0xe9cc <__ashldi3>
    e100:	12 2b       	or	r17, r18
    e102:	f3 2a       	or	r15, r19
    e104:	e4 2a       	or	r14, r20
    e106:	b5 2b       	or	r27, r21
    e108:	a6 2b       	or	r26, r22
    e10a:	23 81       	ldd	r18, Z+3	; 0x03
    e10c:	30 e0       	ldi	r19, 0x00	; 0
    e10e:	40 e0       	ldi	r20, 0x00	; 0
    e110:	50 e0       	ldi	r21, 0x00	; 0
    e112:	60 e0       	ldi	r22, 0x00	; 0
    e114:	70 e0       	ldi	r23, 0x00	; 0
    e116:	80 e0       	ldi	r24, 0x00	; 0
    e118:	90 e0       	ldi	r25, 0x00	; 0
    e11a:	08 e0       	ldi	r16, 0x08	; 8
    e11c:	57 d4       	rcall	.+2222   	; 0xe9cc <__ashldi3>
    e11e:	21 2b       	or	r18, r17
    e120:	3f 29       	or	r19, r15
    e122:	4e 29       	or	r20, r14
    e124:	5b 2b       	or	r21, r27
    e126:	6a 2b       	or	r22, r26
    e128:	84 81       	ldd	r24, Z+4	; 0x04
    e12a:	e2 2f       	mov	r30, r18
    e12c:	e8 2b       	or	r30, r24
      value &= 0x7f7f7f7f7fULL;
    e12e:	ef 77       	andi	r30, 0x7F	; 127
    e130:	3f 77       	andi	r19, 0x7F	; 127
    e132:	4f 77       	andi	r20, 0x7F	; 127
    e134:	5f 77       	andi	r21, 0x7F	; 127

      temp = (value & 0x7f);
      value = ((value >> 1) | temp);
    e136:	6f 77       	andi	r22, 0x7F	; 127
    e138:	2e 2f       	mov	r18, r30
    e13a:	70 e0       	ldi	r23, 0x00	; 0
    e13c:	80 e0       	ldi	r24, 0x00	; 0
    e13e:	90 e0       	ldi	r25, 0x00	; 0
    e140:	01 e0       	ldi	r16, 0x01	; 1
    e142:	5f d4       	rcall	.+2238   	; 0xea02 <__lshrdi3>
      temp |= (value & 0x3f80);
    e144:	2e 2b       	or	r18, r30
    e146:	a2 2f       	mov	r26, r18
    e148:	a0 78       	andi	r26, 0x80	; 128
    e14a:	f3 2f       	mov	r31, r19
    e14c:	ff 73       	andi	r31, 0x3F	; 63
      value = (((value >> 1) & 0xffffffc000ULL) | temp);
    e14e:	ea 2b       	or	r30, r26
    e150:	58 d4       	rcall	.+2224   	; 0xea02 <__lshrdi3>
    e152:	30 7c       	andi	r19, 0xC0	; 192
      temp |= (value & 0x1fc000);
    e154:	3f 2b       	or	r19, r31
    e156:	83 2f       	mov	r24, r19
    e158:	80 7c       	andi	r24, 0xC0	; 192
    e15a:	a4 2f       	mov	r26, r20
    e15c:	af 71       	andi	r26, 0x1F	; 31
      value = (((value >> 1) & 0xffffe00000ULL) | temp);
    e15e:	f8 2b       	or	r31, r24
    e160:	2e 2f       	mov	r18, r30
    e162:	70 e0       	ldi	r23, 0x00	; 0
    e164:	80 e0       	ldi	r24, 0x00	; 0
    e166:	90 e0       	ldi	r25, 0x00	; 0
    e168:	4c d4       	rcall	.+2200   	; 0xea02 <__lshrdi3>
    e16a:	40 7e       	andi	r20, 0xE0	; 224
      temp |= (value & 0x1fe00000);
    e16c:	4a 2b       	or	r20, r26
    e16e:	14 2f       	mov	r17, r20
    e170:	10 7e       	andi	r17, 0xE0	; 224
    e172:	b5 2f       	mov	r27, r21
      value = (((value >> 1) & 0xfff0000000ULL) | temp);
    e174:	bf 71       	andi	r27, 0x1F	; 31
    e176:	2e 2f       	mov	r18, r30
    e178:	3f 2f       	mov	r19, r31
    e17a:	70 e0       	ldi	r23, 0x00	; 0
    e17c:	80 e0       	ldi	r24, 0x00	; 0
    e17e:	90 e0       	ldi	r25, 0x00	; 0
    e180:	40 d4       	rcall	.+2176   	; 0xea02 <__lshrdi3>
    e182:	50 7f       	andi	r21, 0xF0	; 240
    e184:	d1 2c       	mov	r13, r1
    e186:	e1 2c       	mov	r14, r1
    e188:	f1 2c       	mov	r15, r1
    e18a:	8e 2e       	mov	r8, r30
    e18c:	9f 2e       	mov	r9, r31
    e18e:	a1 2e       	mov	r10, r17
    e190:	aa 2a       	or	r10, r26
    e192:	bb 2e       	mov	r11, r27
    e194:	b5 2a       	or	r11, r21
    e196:	c6 2e       	mov	r12, r22
      break;
    e198:	3d c0       	rjmp	.+122    	; 0xe214 <TMR_SR_convertFromEBV+0x384>
    }
    case 0x08:
    {
      while(length)
      {
        temp = msg[8-length];
    e19a:	28 e0       	ldi	r18, 0x08	; 8
    e19c:	30 e0       	ldi	r19, 0x00	; 0
    e19e:	2a 1b       	sub	r18, r26
    e1a0:	31 09       	sbc	r19, r1
    e1a2:	26 0d       	add	r18, r6
    e1a4:	37 1d       	adc	r19, r7
    e1a6:	f9 01       	movw	r30, r18
    e1a8:	20 81       	ld	r18, Z
        length--;
    e1aa:	a1 50       	subi	r26, 0x01	; 1
        value |= (temp << (length*8));
    e1ac:	0a 2f       	mov	r16, r26
    e1ae:	10 e0       	ldi	r17, 0x00	; 0
    e1b0:	00 0f       	add	r16, r16
    e1b2:	11 1f       	adc	r17, r17
    e1b4:	00 0f       	add	r16, r16
    e1b6:	11 1f       	adc	r17, r17
    e1b8:	00 0f       	add	r16, r16
    e1ba:	11 1f       	adc	r17, r17
    e1bc:	30 e0       	ldi	r19, 0x00	; 0
    e1be:	40 e0       	ldi	r20, 0x00	; 0
    e1c0:	50 e0       	ldi	r21, 0x00	; 0
    e1c2:	60 e0       	ldi	r22, 0x00	; 0
    e1c4:	70 e0       	ldi	r23, 0x00	; 0
    e1c6:	80 e0       	ldi	r24, 0x00	; 0
    e1c8:	90 e0       	ldi	r25, 0x00	; 0
    e1ca:	00 d4       	rcall	.+2048   	; 0xe9cc <__ashldi3>
    e1cc:	28 29       	or	r18, r8
    e1ce:	39 29       	or	r19, r9
    e1d0:	4a 29       	or	r20, r10
    e1d2:	5b 29       	or	r21, r11
    e1d4:	6c 29       	or	r22, r12
    e1d6:	7d 29       	or	r23, r13
    e1d8:	8e 29       	or	r24, r14
    e1da:	9f 29       	or	r25, r15
    e1dc:	82 2e       	mov	r8, r18
    e1de:	93 2e       	mov	r9, r19
    e1e0:	a4 2e       	mov	r10, r20
    e1e2:	b5 2e       	mov	r11, r21
    e1e4:	c6 2e       	mov	r12, r22
    e1e6:	d7 2e       	mov	r13, r23
    e1e8:	e8 2e       	mov	r14, r24
    e1ea:	f9 2e       	mov	r15, r25
    e1ec:	08 c0       	rjmp	.+16     	; 0xe1fe <TMR_SR_convertFromEBV+0x36e>
uint64_t
TMR_SR_convertFromEBV(uint8_t *msg, uint8_t length)
{
  uint64_t value = 0, temp = 0;

  switch (length)
    e1ee:	81 2c       	mov	r8, r1
    e1f0:	91 2c       	mov	r9, r1
    e1f2:	a1 2c       	mov	r10, r1
    e1f4:	b1 2c       	mov	r11, r1
    e1f6:	c1 2c       	mov	r12, r1
    e1f8:	d1 2c       	mov	r13, r1
    e1fa:	e1 2c       	mov	r14, r1
    e1fc:	f1 2c       	mov	r15, r1
      value = (((value >> 1) & 0xfff0000000ULL) | temp);
      break;
    }
    case 0x08:
    {
      while(length)
    e1fe:	a1 11       	cpse	r26, r1
    e200:	cc cf       	rjmp	.-104    	; 0xe19a <TMR_SR_convertFromEBV+0x30a>
    e202:	08 c0       	rjmp	.+16     	; 0xe214 <TMR_SR_convertFromEBV+0x384>

/** Convert from 1/2/3/4/5 bytes of EBV formated value */
uint64_t
TMR_SR_convertFromEBV(uint8_t *msg, uint8_t length)
{
  uint64_t value = 0, temp = 0;
    e204:	81 2c       	mov	r8, r1
    e206:	91 2c       	mov	r9, r1
    e208:	a1 2c       	mov	r10, r1
    e20a:	b1 2c       	mov	r11, r1
    e20c:	c1 2c       	mov	r12, r1
    e20e:	d1 2c       	mov	r13, r1
    e210:	e1 2c       	mov	r14, r1
    e212:	f1 2c       	mov	r15, r1
    }
    default:
      break;
  }
  return value;
}
    e214:	28 2d       	mov	r18, r8
    e216:	39 2d       	mov	r19, r9
    e218:	4a 2d       	mov	r20, r10
    e21a:	5b 2d       	mov	r21, r11
    e21c:	6c 2d       	mov	r22, r12
    e21e:	7d 2d       	mov	r23, r13
    e220:	8e 2d       	mov	r24, r14
    e222:	9f 2d       	mov	r25, r15
    e224:	60 96       	adiw	r28, 0x10	; 16
    e226:	0f b6       	in	r0, 0x3f	; 63
    e228:	f8 94       	cli
    e22a:	de bf       	out	0x3e, r29	; 62
    e22c:	0f be       	out	0x3f, r0	; 63
    e22e:	cd bf       	out	0x3d, r28	; 61
    e230:	df 91       	pop	r29
    e232:	cf 91       	pop	r28
    e234:	1f 91       	pop	r17
    e236:	0f 91       	pop	r16
    e238:	ff 90       	pop	r15
    e23a:	ef 90       	pop	r14
    e23c:	df 90       	pop	r13
    e23e:	cf 90       	pop	r12
    e240:	bf 90       	pop	r11
    e242:	af 90       	pop	r10
    e244:	9f 90       	pop	r9
    e246:	8f 90       	pop	r8
    e248:	7f 90       	pop	r7
    e24a:	6f 90       	pop	r6
    e24c:	08 95       	ret

0000e24e <TMR_startReading>:
    reader->fetchTagReads = false;
#endif /* TMR_ENABLE_BACKGROUND_READS */
    reader->subOffTime = 0;
  }
  return TMR_SUCCESS;
}
    e24e:	0f 93       	push	r16
    e250:	1f 93       	push	r17
    e252:	cf 93       	push	r28
    e254:	df 93       	push	r29
    e256:	00 d0       	rcall	.+0      	; 0xe258 <TMR_startReading+0xa>
    e258:	00 d0       	rcall	.+0      	; 0xe25a <TMR_startReading+0xc>
    e25a:	cd b7       	in	r28, 0x3d	; 61
    e25c:	de b7       	in	r29, 0x3e	; 62
    e25e:	00 97       	sbiw	r24, 0x00	; 0
    e260:	11 f1       	breq	.+68     	; 0xe2a6 <TMR_startReading+0x58>
    e262:	8c 01       	movw	r16, r24
    e264:	ae 01       	movw	r20, r28
    e266:	4f 5f       	subi	r20, 0xFF	; 255
    e268:	5f 4f       	sbci	r21, 0xFF	; 255
    e26a:	61 e2       	ldi	r22, 0x21	; 33
    e26c:	b2 da       	rcall	.-2716   	; 0xd7d2 <TMR_paramGet>
    e26e:	f8 01       	movw	r30, r16
    e270:	ea 58       	subi	r30, 0x8A	; 138
    e272:	ff 4f       	sbci	r31, 0xFF	; 255
    e274:	81 e0       	ldi	r24, 0x01	; 1
    e276:	80 83       	st	Z, r24
    e278:	49 81       	ldd	r20, Y+1	; 0x01
    e27a:	5a 81       	ldd	r21, Y+2	; 0x02
    e27c:	6b 81       	ldd	r22, Y+3	; 0x03
    e27e:	7c 81       	ldd	r23, Y+4	; 0x04
    e280:	20 e0       	ldi	r18, 0x00	; 0
    e282:	30 e0       	ldi	r19, 0x00	; 0
    e284:	c8 01       	movw	r24, r16
    e286:	0e 94 f4 2d 	call	0x5be8	; 0x5be8 <TMR_SR_read>
    e28a:	61 15       	cp	r22, r1
    e28c:	71 05       	cpc	r23, r1
    e28e:	81 05       	cpc	r24, r1
    e290:	91 05       	cpc	r25, r1
    e292:	21 f0       	breq	.+8      	; 0xe29c <TMR_startReading+0x4e>
    e294:	46 2f       	mov	r20, r22
    e296:	37 2f       	mov	r19, r23
    e298:	28 2f       	mov	r18, r24
    e29a:	09 c0       	rjmp	.+18     	; 0xe2ae <TMR_startReading+0x60>
    e29c:	40 e0       	ldi	r20, 0x00	; 0
    e29e:	30 e0       	ldi	r19, 0x00	; 0
    e2a0:	20 e0       	ldi	r18, 0x00	; 0
    e2a2:	90 e0       	ldi	r25, 0x00	; 0
    e2a4:	04 c0       	rjmp	.+8      	; 0xe2ae <TMR_startReading+0x60>
    e2a6:	41 e0       	ldi	r20, 0x01	; 1
    e2a8:	30 e0       	ldi	r19, 0x00	; 0
    e2aa:	20 e0       	ldi	r18, 0x00	; 0
    e2ac:	93 e0       	ldi	r25, 0x03	; 3
    e2ae:	64 2f       	mov	r22, r20
    e2b0:	73 2f       	mov	r23, r19
    e2b2:	82 2f       	mov	r24, r18
    e2b4:	0f 90       	pop	r0
    e2b6:	0f 90       	pop	r0
    e2b8:	0f 90       	pop	r0
    e2ba:	0f 90       	pop	r0
    e2bc:	df 91       	pop	r29
    e2be:	cf 91       	pop	r28
    e2c0:	1f 91       	pop	r17
    e2c2:	0f 91       	pop	r16
    e2c4:	08 95       	ret

0000e2c6 <notify_read_listeners>:

void
notify_read_listeners(TMR_Reader *reader, TMR_TagReadData *trd)
{
    e2c6:	ef 92       	push	r14
    e2c8:	ff 92       	push	r15
    e2ca:	0f 93       	push	r16
    e2cc:	1f 93       	push	r17
    e2ce:	cf 93       	push	r28
    e2d0:	df 93       	push	r29
  TMR_ReadListenerBlock *rlb;

  /* notify tag read to listener */
  if (NULL != reader)
    e2d2:	00 97       	sbiw	r24, 0x00	; 0
    e2d4:	a1 f0       	breq	.+40     	; 0xe2fe <notify_read_listeners+0x38>
    e2d6:	7b 01       	movw	r14, r22
    e2d8:	8c 01       	movw	r16, r24
  {
#if !defined(SINGLE_THREAD_ASYNC_READ) && defined(TMR_ENABLE_BACKGROUND_READS)
    pthread_mutex_lock(&reader->listenerLock);
#endif
	rlb = reader->readListeners;
    e2da:	fc 01       	movw	r30, r24
    e2dc:	e1 5f       	subi	r30, 0xF1	; 241
    e2de:	f9 4f       	sbci	r31, 0xF9	; 249
    e2e0:	c0 81       	ld	r28, Z
    e2e2:	d1 81       	ldd	r29, Z+1	; 0x01
    while (rlb)
    e2e4:	0a c0       	rjmp	.+20     	; 0xe2fa <notify_read_listeners+0x34>
    {
      rlb->listener(reader, trd, rlb->cookie);
    e2e6:	e8 81       	ld	r30, Y
    e2e8:	f9 81       	ldd	r31, Y+1	; 0x01
    e2ea:	4a 81       	ldd	r20, Y+2	; 0x02
    e2ec:	5b 81       	ldd	r21, Y+3	; 0x03
    e2ee:	b7 01       	movw	r22, r14
    e2f0:	c8 01       	movw	r24, r16
    e2f2:	09 95       	icall
      rlb = rlb->next;
    e2f4:	0c 80       	ldd	r0, Y+4	; 0x04
    e2f6:	dd 81       	ldd	r29, Y+5	; 0x05
    e2f8:	c0 2d       	mov	r28, r0
  {
#if !defined(SINGLE_THREAD_ASYNC_READ) && defined(TMR_ENABLE_BACKGROUND_READS)
    pthread_mutex_lock(&reader->listenerLock);
#endif
	rlb = reader->readListeners;
    while (rlb)
    e2fa:	20 97       	sbiw	r28, 0x00	; 0
    e2fc:	a1 f7       	brne	.-24     	; 0xe2e6 <notify_read_listeners+0x20>
    }
#if !defined(SINGLE_THREAD_ASYNC_READ) && defined(TMR_ENABLE_BACKGROUND_READS)
    pthread_mutex_unlock(&reader->listenerLock);
#endif
  }
}
    e2fe:	df 91       	pop	r29
    e300:	cf 91       	pop	r28
    e302:	1f 91       	pop	r17
    e304:	0f 91       	pop	r16
    e306:	ff 90       	pop	r15
    e308:	ef 90       	pop	r14
    e30a:	08 95       	ret

0000e30c <enable_timer1>:
}

static void enable_timer1(const u32 value_ms)
{
	u16 ocr1a_value = 0u;
	if((TIMER_NO_REASON != timer1.start_reason) && (TIMER_IN_PROGRESS != timer1.status_timer))
    e30c:	20 91 6c 02 	lds	r18, 0x026C	; 0x80026c <timer1+0x1>
    e310:	22 23       	and	r18, r18
    e312:	19 f1       	breq	.+70     	; 0xe35a <enable_timer1+0x4e>
    e314:	20 91 6b 02 	lds	r18, 0x026B	; 0x80026b <timer1>
    e318:	21 30       	cpi	r18, 0x01	; 1
    e31a:	f9 f0       	breq	.+62     	; 0xe35a <enable_timer1+0x4e>
	{
		timer1.status_timer = TIMER_IN_PROGRESS;
    e31c:	21 e0       	ldi	r18, 0x01	; 1
    e31e:	20 93 6b 02 	sts	0x026B, r18	; 0x80026b <timer1>
		
		/*Reset counter value so we start from "0"*/
		TIFR = (u8)0x00U;
    e322:	16 be       	out	0x36, r1	; 54
		TCNT1H = (u8)0x00U; /*This is done for robustness*/
    e324:	1d bc       	out	0x2d, r1	; 45
		TCNT1L = (u8)0x00U; /*This is done for robustness*/
    e326:	1c bc       	out	0x2c, r1	; 44
			sprintf(text, "enable_timer1: %lu is too large (bigger then 16 bits)", value_ms);
			UART1_SendMessage_DEBUG(text);
		}
		#endif
		
		TCCR1A = (u8)0x00U; /*This is done for robustness*/
    e328:	1f bc       	out	0x2f, r1	; 47
		TCCR1B = ((u8)1<<(u8)WGM12); /*Set CTC mode*/
    e32a:	28 e0       	ldi	r18, 0x08	; 8
    e32c:	2e bd       	out	0x2e, r18	; 46
		
		ocr1a_value = (value_ms * F_CPU) / 1024u;
    e32e:	9b 01       	movw	r18, r22
    e330:	ac 01       	movw	r20, r24
    e332:	60 e0       	ldi	r22, 0x00	; 0
    e334:	70 ec       	ldi	r23, 0xC0	; 192
    e336:	88 ea       	ldi	r24, 0xA8	; 168
    e338:	90 e0       	ldi	r25, 0x00	; 0
    e33a:	dd d2       	rcall	.+1466   	; 0xe8f6 <__mulsi3>
    e33c:	dc 01       	movw	r26, r24
    e33e:	cb 01       	movw	r24, r22
    e340:	07 2e       	mov	r0, r23
    e342:	7a e0       	ldi	r23, 0x0A	; 10
    e344:	b6 95       	lsr	r27
    e346:	a7 95       	ror	r26
    e348:	97 95       	ror	r25
    e34a:	87 95       	ror	r24
    e34c:	7a 95       	dec	r23
    e34e:	d1 f7       	brne	.-12     	; 0xe344 <enable_timer1+0x38>
    e350:	70 2d       	mov	r23, r0
		OCR1AH = (u8)((ocr1a_value >> 8u) & 0xFFu);
    e352:	9b bd       	out	0x2b, r25	; 43
		OCR1AL = (u8)(ocr1a_value & 0xFFu);
    e354:	8a bd       	out	0x2a, r24	; 42
		TCCR1B = (u8)((u8)1 << (u8)CS12) | ((u8)1 << (u8)CS10); /*Prescaler is 1024 according to maximum value possible for timeout (6s)*/
    e356:	85 e0       	ldi	r24, 0x05	; 5
    e358:	8e bd       	out	0x2e, r24	; 46
    e35a:	08 95       	ret

0000e35c <enable_timer3>:
}

static void enable_timer3(const u32 value_ms)
{
	u16 ocr3a_value = 0u;
	if((TIMER_NO_REASON != timer3.start_reason) && (TIMER_IN_PROGRESS != timer3.status_timer))
    e35c:	20 91 6a 02 	lds	r18, 0x026A	; 0x80026a <timer3+0x1>
    e360:	22 23       	and	r18, r18
    e362:	59 f1       	breq	.+86     	; 0xe3ba <enable_timer3+0x5e>
    e364:	20 91 69 02 	lds	r18, 0x0269	; 0x800269 <timer3>
    e368:	21 30       	cpi	r18, 0x01	; 1
    e36a:	39 f1       	breq	.+78     	; 0xe3ba <enable_timer3+0x5e>
	{
		timer3.status_timer = TIMER_IN_PROGRESS;
    e36c:	21 e0       	ldi	r18, 0x01	; 1
    e36e:	20 93 69 02 	sts	0x0269, r18	; 0x800269 <timer3>
		
		/*Reset counter value so we start from "0"*/
		ETIFR = (u8)0x00U;
    e372:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
		TCNT3H = (u8)0x00U; /*This is done for robustness*/
    e376:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
		TCNT3L = (u8)0x00U; /*This is done for robustness*/
    e37a:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
			sprintf(text, "enable_timer3: %lu is too large (bigger then 16 bits)", value_ms);
			UART1_SendMessage_DEBUG(text);
		}
		#endif
		
		TCCR3A = (u8)0x00U; /*This is done for robustness*/
    e37e:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
		TCCR3B = ((u8)1<<(u8)WGM32); /*Set CTC mode*/
    e382:	ea e8       	ldi	r30, 0x8A	; 138
    e384:	f0 e0       	ldi	r31, 0x00	; 0
    e386:	28 e0       	ldi	r18, 0x08	; 8
    e388:	20 83       	st	Z, r18
		
		ocr3a_value = (value_ms * F_CPU) / 1024u;
    e38a:	9b 01       	movw	r18, r22
    e38c:	ac 01       	movw	r20, r24
    e38e:	60 e0       	ldi	r22, 0x00	; 0
    e390:	70 ec       	ldi	r23, 0xC0	; 192
    e392:	88 ea       	ldi	r24, 0xA8	; 168
    e394:	90 e0       	ldi	r25, 0x00	; 0
    e396:	af d2       	rcall	.+1374   	; 0xe8f6 <__mulsi3>
    e398:	dc 01       	movw	r26, r24
    e39a:	cb 01       	movw	r24, r22
    e39c:	07 2e       	mov	r0, r23
    e39e:	7a e0       	ldi	r23, 0x0A	; 10
    e3a0:	b6 95       	lsr	r27
    e3a2:	a7 95       	ror	r26
    e3a4:	97 95       	ror	r25
    e3a6:	87 95       	ror	r24
    e3a8:	7a 95       	dec	r23
    e3aa:	d1 f7       	brne	.-12     	; 0xe3a0 <enable_timer3+0x44>
    e3ac:	70 2d       	mov	r23, r0
		OCR3AH = (u8)((ocr3a_value >> 8u) & 0xFFu);
    e3ae:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
		OCR3AL = (u8)(ocr3a_value & 0xFFu);
    e3b2:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
		TCCR3B = (u8)((u8)1 << (u8)CS32) | ((u8)1 << (u8)CS30); /*Prescaler is 1024 according to maximum value possible for timeout (6s)*/
    e3b6:	85 e0       	ldi	r24, 0x05	; 5
    e3b8:	80 83       	st	Z, r24
    e3ba:	08 95       	ret

0000e3bc <start_timer>:
	}
	#endif
}

 void start_timer(const TIMER_NO_EN timer_no, const u32 value_ms) {
	 if(TIMER1 == timer_no)
    e3bc:	81 11       	cpse	r24, r1
    e3be:	04 c0       	rjmp	.+8      	; 0xe3c8 <start_timer+0xc>
	 {
		 enable_timer1(value_ms);
    e3c0:	cb 01       	movw	r24, r22
    e3c2:	ba 01       	movw	r22, r20
    e3c4:	a3 cf       	rjmp	.-186    	; 0xe30c <enable_timer1>
    e3c6:	08 95       	ret
	 }
	 else if(TIMER3 == timer_no)
    e3c8:	81 30       	cpi	r24, 0x01	; 1
    e3ca:	19 f4       	brne	.+6      	; 0xe3d2 <start_timer+0x16>
	 {
		 enable_timer3(value_ms);
    e3cc:	cb 01       	movw	r24, r22
    e3ce:	ba 01       	movw	r22, r20
    e3d0:	c5 cf       	rjmp	.-118    	; 0xe35c <enable_timer3>
    e3d2:	08 95       	ret

0000e3d4 <get_timer_status>:
 
TIMER_STATUS_EN get_timer_status(const TIMER_NO_EN timer_no)
{
	TIMER_STATUS_EN result;
	
	if(TIMER1 == timer_no)
    e3d4:	81 11       	cpse	r24, r1
    e3d6:	23 c0       	rjmp	.+70     	; 0xe41e <get_timer_status+0x4a>
static Timer timer3 = (Timer){TIMER_IDLE, TIMER_NO_REASON};

static inline TIMER_STATUS_EN check_timer_compare_done(TIMER_NO_EN timer_no)
{
	TIMER_STATUS_EN result;
	if(TIMER1 == timer_no)
    e3d8:	81 11       	cpse	r24, r1
    e3da:	09 c0       	rjmp	.+18     	; 0xe3ee <get_timer_status+0x1a>
	{
		if((u8)TIFR & ((u8)1U << (u8)OCF1A))
    e3dc:	06 b6       	in	r0, 0x36	; 54
    e3de:	04 fe       	sbrs	r0, 4
    e3e0:	03 c0       	rjmp	.+6      	; 0xe3e8 <get_timer_status+0x14>
		{
			timer1.status_timer = TIMER_FINISHED;
    e3e2:	82 e0       	ldi	r24, 0x02	; 2
    e3e4:	80 93 6b 02 	sts	0x026B, r24	; 0x80026b <timer1>
		}
		result = timer1.status_timer;
    e3e8:	80 91 6b 02 	lds	r24, 0x026B	; 0x80026b <timer1>
    e3ec:	0d c0       	rjmp	.+26     	; 0xe408 <get_timer_status+0x34>
	}
	else if( TIMER3 == timer_no)
    e3ee:	81 30       	cpi	r24, 0x01	; 1
    e3f0:	51 f4       	brne	.+20     	; 0xe406 <get_timer_status+0x32>
	{
		if((u8)ETIFR & ((u8)1U << (u8)OCF3A))
    e3f2:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    e3f6:	84 ff       	sbrs	r24, 4
    e3f8:	03 c0       	rjmp	.+6      	; 0xe400 <get_timer_status+0x2c>
		{
			timer3.status_timer = TIMER_FINISHED;
    e3fa:	82 e0       	ldi	r24, 0x02	; 2
    e3fc:	80 93 69 02 	sts	0x0269, r24	; 0x800269 <timer3>
		}
		result = timer3.status_timer;
    e400:	80 91 69 02 	lds	r24, 0x0269	; 0x800269 <timer3>
    e404:	01 c0       	rjmp	.+2      	; 0xe408 <get_timer_status+0x34>
	}
	else
	{
		result = TIMER_UNKNOWN_STATE;
    e406:	83 e0       	ldi	r24, 0x03	; 3
{
	TIMER_STATUS_EN result;
	
	if(TIMER1 == timer_no)
	{
		if(TIMER_FINISHED == check_timer_compare_done(timer_no))
    e408:	82 30       	cpi	r24, 0x02	; 2
    e40a:	31 f4       	brne	.+12     	; 0xe418 <get_timer_status+0x44>
		{
			TCCR1B = (u8)0x00U; /*Stop the timer*/
    e40c:	1e bc       	out	0x2e, r1	; 46
			TCNT1H = (u8)0x00U;/*Reset acutal value from the counter*/
    e40e:	1d bc       	out	0x2d, r1	; 45
			TCNT1L = (u8)0x00U;
    e410:	1c bc       	out	0x2c, r1	; 44
			TIFR |= ((u8)1U << (u8)OCF1A); /*Clear OCF1A flag*/
    e412:	86 b7       	in	r24, 0x36	; 54
    e414:	80 61       	ori	r24, 0x10	; 16
    e416:	86 bf       	out	0x36, r24	; 54
		}
		result = timer1.status_timer;
    e418:	80 91 6b 02 	lds	r24, 0x026B	; 0x80026b <timer1>
    e41c:	08 95       	ret
	}
	else if(TIMER3 == timer_no)
    e41e:	81 30       	cpi	r24, 0x01	; 1
    e420:	41 f5       	brne	.+80     	; 0xe472 <get_timer_status+0x9e>
static Timer timer3 = (Timer){TIMER_IDLE, TIMER_NO_REASON};

static inline TIMER_STATUS_EN check_timer_compare_done(TIMER_NO_EN timer_no)
{
	TIMER_STATUS_EN result;
	if(TIMER1 == timer_no)
    e422:	81 11       	cpse	r24, r1
    e424:	09 c0       	rjmp	.+18     	; 0xe438 <get_timer_status+0x64>
	{
		if((u8)TIFR & ((u8)1U << (u8)OCF1A))
    e426:	06 b6       	in	r0, 0x36	; 54
    e428:	04 fe       	sbrs	r0, 4
    e42a:	03 c0       	rjmp	.+6      	; 0xe432 <get_timer_status+0x5e>
		{
			timer1.status_timer = TIMER_FINISHED;
    e42c:	82 e0       	ldi	r24, 0x02	; 2
    e42e:	80 93 6b 02 	sts	0x026B, r24	; 0x80026b <timer1>
		}
		result = timer1.status_timer;
    e432:	80 91 6b 02 	lds	r24, 0x026B	; 0x80026b <timer1>
    e436:	0d c0       	rjmp	.+26     	; 0xe452 <get_timer_status+0x7e>
	}
	else if( TIMER3 == timer_no)
    e438:	81 30       	cpi	r24, 0x01	; 1
    e43a:	51 f4       	brne	.+20     	; 0xe450 <get_timer_status+0x7c>
	{
		if((u8)ETIFR & ((u8)1U << (u8)OCF3A))
    e43c:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    e440:	84 ff       	sbrs	r24, 4
    e442:	03 c0       	rjmp	.+6      	; 0xe44a <get_timer_status+0x76>
		{
			timer3.status_timer = TIMER_FINISHED;
    e444:	82 e0       	ldi	r24, 0x02	; 2
    e446:	80 93 69 02 	sts	0x0269, r24	; 0x800269 <timer3>
		}
		result = timer3.status_timer;
    e44a:	80 91 69 02 	lds	r24, 0x0269	; 0x800269 <timer3>
    e44e:	01 c0       	rjmp	.+2      	; 0xe452 <get_timer_status+0x7e>
	}
	else
	{
		result = TIMER_UNKNOWN_STATE;
    e450:	83 e0       	ldi	r24, 0x03	; 3
		}
		result = timer1.status_timer;
	}
	else if(TIMER3 == timer_no)
	{
		if(TIMER_FINISHED == check_timer_compare_done(timer_no))
    e452:	82 30       	cpi	r24, 0x02	; 2
    e454:	59 f4       	brne	.+22     	; 0xe46c <get_timer_status+0x98>
		{
			TCCR3B = (u8)0x00U; /*Stop the timer*/
    e456:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
			TCNT3H = (u8)0x00U;/*Reset acutal value from the counter*/
    e45a:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
			TCNT3L = (u8)0x00U;
    e45e:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
			ETIFR |= ((u8)1U << (u8)OCF3A); /*Clear OCF3A flag*/
    e462:	ec e7       	ldi	r30, 0x7C	; 124
    e464:	f0 e0       	ldi	r31, 0x00	; 0
    e466:	80 81       	ld	r24, Z
    e468:	80 61       	ori	r24, 0x10	; 16
    e46a:	80 83       	st	Z, r24
		}
		result = timer1.status_timer;
    e46c:	80 91 6b 02 	lds	r24, 0x026B	; 0x80026b <timer1>
    e470:	08 95       	ret
	}
	else
	{
		result = TIMER_UNKNOWN_STATE;
    e472:	83 e0       	ldi	r24, 0x03	; 3
		UART1_SendMessage_DEBUG("get_timer_status: Timer number is wrong");
		#endif
	}
	
	return result;
}
    e474:	08 95       	ret

0000e476 <disable_timer>:

void disable_timer(const TIMER_NO_EN timer_no)
{
	if(TIMER1 == timer_no)
    e476:	81 11       	cpse	r24, r1
    e478:	0b c0       	rjmp	.+22     	; 0xe490 <disable_timer+0x1a>
	{
		timer1.status_timer = TIMER_IDLE;
    e47a:	eb e6       	ldi	r30, 0x6B	; 107
    e47c:	f2 e0       	ldi	r31, 0x02	; 2
    e47e:	10 82       	st	Z, r1
		timer1.start_reason = TIMER_NO_REASON;
    e480:	11 82       	std	Z+1, r1	; 0x01
		TCCR1B = (u8)0x00U; /*Stop the timer*/
    e482:	1e bc       	out	0x2e, r1	; 46
		TCNT1H = (u8)0x00U;/*Reset acutal value from the counter*/
    e484:	1d bc       	out	0x2d, r1	; 45
		TCNT1L = (u8)0x00U;
    e486:	1c bc       	out	0x2c, r1	; 44
		TIFR |= ((u8)1U << (u8)OCF1A); /*Clear OCF1A flag*/
    e488:	86 b7       	in	r24, 0x36	; 54
    e48a:	80 61       	ori	r24, 0x10	; 16
    e48c:	86 bf       	out	0x36, r24	; 54
    e48e:	08 95       	ret
	}
	else if(TIMER3 == timer_no)
    e490:	81 30       	cpi	r24, 0x01	; 1
    e492:	79 f4       	brne	.+30     	; 0xe4b2 <disable_timer+0x3c>
	{
		timer3.status_timer = TIMER_IDLE;
    e494:	e9 e6       	ldi	r30, 0x69	; 105
    e496:	f2 e0       	ldi	r31, 0x02	; 2
    e498:	10 82       	st	Z, r1
		timer3.start_reason = TIMER_NO_REASON;
    e49a:	11 82       	std	Z+1, r1	; 0x01
		TCCR3B = (u8)0x00U; /*Stop the timer*/
    e49c:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
		TCNT3H = (u8)0x00U;/*Reset acutal value from the counter*/
    e4a0:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
		TCNT3L = (u8)0x00U;
    e4a4:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		ETIFR |= ((u8)1U << (u8)OCF3A); /*Clear OCF1A flag*/
    e4a8:	ec e7       	ldi	r30, 0x7C	; 124
    e4aa:	f0 e0       	ldi	r31, 0x00	; 0
    e4ac:	80 81       	ld	r24, Z
    e4ae:	80 61       	ori	r24, 0x10	; 16
    e4b0:	80 83       	st	Z, r24
    e4b2:	08 95       	ret

0000e4b4 <set_start_reason_timer>:
	
}

void set_start_reason_timer(const TIMER_NO_EN timer_no, const TIMER_START_REASON_EN reason)
{
	if(TIMER1 == timer_no)
    e4b4:	81 11       	cpse	r24, r1
    e4b6:	03 c0       	rjmp	.+6      	; 0xe4be <set_start_reason_timer+0xa>
	{
		timer1.start_reason = reason;
    e4b8:	60 93 6c 02 	sts	0x026C, r22	; 0x80026c <timer1+0x1>
    e4bc:	08 95       	ret
	}
	else if (TIMER3 == timer_no)
    e4be:	81 30       	cpi	r24, 0x01	; 1
    e4c0:	11 f4       	brne	.+4      	; 0xe4c6 <set_start_reason_timer+0x12>
	{
		timer3.start_reason = reason;
    e4c2:	60 93 6a 02 	sts	0x026A, r22	; 0x80026a <timer3+0x1>
    e4c6:	08 95       	ret

0000e4c8 <get_start_reason_timer>:
}

TIMER_START_REASON_EN get_start_reason_timer(const TIMER_NO_EN timer_no)
{
	TIMER_START_REASON_EN reason;
	if(TIMER1 == timer_no)
    e4c8:	81 11       	cpse	r24, r1
    e4ca:	03 c0       	rjmp	.+6      	; 0xe4d2 <get_start_reason_timer+0xa>
	{
		reason = timer1.start_reason;
    e4cc:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <timer1+0x1>
    e4d0:	08 95       	ret
	}
	else if(TIMER3 == timer_no)
    e4d2:	81 30       	cpi	r24, 0x01	; 1
    e4d4:	19 f4       	brne	.+6      	; 0xe4dc <get_start_reason_timer+0x14>
	{
		reason = timer3.start_reason;
    e4d6:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <timer3+0x1>
    e4da:	08 95       	ret
	}
	else
	{
		reason = TIMER_REASON_UNKNOWN;
    e4dc:	83 e0       	ldi	r24, 0x03	; 3
		#ifdef DEBUG
		UART1_SendMessage_DEBUG("get_start_reason_timer1: Unknown timer number given");
		#endif
	}
	return reason;
}
    e4de:	08 95       	ret

0000e4e0 <__vector_18>:
		while(FALSE == UART1_isBufferEmpty()) {} /*Wait for buffer to become empty*/
		if(FALSE != UART1_isBufferEmpty()) {
			UDR1 = (unsigned char)text[i];
		}
	}
}
    e4e0:	1f 92       	push	r1
    e4e2:	0f 92       	push	r0
    e4e4:	0f b6       	in	r0, 0x3f	; 63
    e4e6:	0f 92       	push	r0
    e4e8:	11 24       	eor	r1, r1
    e4ea:	0b b6       	in	r0, 0x3b	; 59
    e4ec:	0f 92       	push	r0
    e4ee:	8f 93       	push	r24
    e4f0:	9f 93       	push	r25
    e4f2:	ef 93       	push	r30
    e4f4:	ff 93       	push	r31
    e4f6:	e0 91 6d 02 	lds	r30, 0x026D	; 0x80026d <ISR_end_index>
    e4fa:	f0 91 6e 02 	lds	r31, 0x026E	; 0x80026e <ISR_end_index+0x1>
    e4fe:	8c b1       	in	r24, 0x0c	; 12
    e500:	e1 59       	subi	r30, 0x91	; 145
    e502:	fd 4f       	sbci	r31, 0xFD	; 253
    e504:	80 83       	st	Z, r24
    e506:	08 c0       	rjmp	.+16     	; 0xe518 <__vector_18+0x38>
    e508:	e0 91 6d 02 	lds	r30, 0x026D	; 0x80026d <ISR_end_index>
    e50c:	f0 91 6e 02 	lds	r31, 0x026E	; 0x80026e <ISR_end_index+0x1>
    e510:	8c b1       	in	r24, 0x0c	; 12
    e512:	e1 59       	subi	r30, 0x91	; 145
    e514:	fd 4f       	sbci	r31, 0xFD	; 253
    e516:	80 83       	st	Z, r24
    e518:	5f 99       	sbic	0x0b, 7	; 11
    e51a:	f6 cf       	rjmp	.-20     	; 0xe508 <__vector_18+0x28>
    e51c:	80 91 6d 02 	lds	r24, 0x026D	; 0x80026d <ISR_end_index>
    e520:	90 91 6e 02 	lds	r25, 0x026E	; 0x80026e <ISR_end_index+0x1>
    e524:	01 96       	adiw	r24, 0x01	; 1
    e526:	90 93 6e 02 	sts	0x026E, r25	; 0x80026e <ISR_end_index+0x1>
    e52a:	80 93 6d 02 	sts	0x026D, r24	; 0x80026d <ISR_end_index>
    e52e:	ff 91       	pop	r31
    e530:	ef 91       	pop	r30
    e532:	9f 91       	pop	r25
    e534:	8f 91       	pop	r24
    e536:	0f 90       	pop	r0
    e538:	0b be       	out	0x3b, r0	; 59
    e53a:	0f 90       	pop	r0
    e53c:	0f be       	out	0x3f, r0	; 63
    e53e:	0f 90       	pop	r0
    e540:	1f 90       	pop	r1
    e542:	18 95       	reti

0000e544 <UART_init>:
    e544:	0f 93       	push	r16
    e546:	1f 93       	push	r17
    e548:	8b 01       	movw	r16, r22
    e54a:	9c 01       	movw	r18, r24
    e54c:	41 11       	cpse	r20, r1
    e54e:	14 c0       	rjmp	.+40     	; 0xe578 <UART_init+0x34>
    e550:	81 b3       	in	r24, 0x11	; 17
    e552:	88 60       	ori	r24, 0x08	; 8
    e554:	81 bb       	out	0x11, r24	; 17
    e556:	60 e0       	ldi	r22, 0x00	; 0
    e558:	7c e8       	ldi	r23, 0x8C	; 140
    e55a:	8a e0       	ldi	r24, 0x0A	; 10
    e55c:	90 e0       	ldi	r25, 0x00	; 0
    e55e:	a9 01       	movw	r20, r18
    e560:	98 01       	movw	r18, r16
    e562:	ff d1       	rcall	.+1022   	; 0xe962 <__udivmodsi4>
    e564:	21 50       	subi	r18, 0x01	; 1
    e566:	20 93 99 00 	sts	0x0099, r18	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
    e56a:	86 e0       	ldi	r24, 0x06	; 6
    e56c:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
    e570:	88 e1       	ldi	r24, 0x18	; 24
    e572:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    e576:	13 c0       	rjmp	.+38     	; 0xe59e <UART_init+0x5a>
    e578:	41 30       	cpi	r20, 0x01	; 1
    e57a:	89 f4       	brne	.+34     	; 0xe59e <UART_init+0x5a>
    e57c:	82 b1       	in	r24, 0x02	; 2
    e57e:	82 60       	ori	r24, 0x02	; 2
    e580:	82 b9       	out	0x02, r24	; 2
    e582:	60 e0       	ldi	r22, 0x00	; 0
    e584:	7c e8       	ldi	r23, 0x8C	; 140
    e586:	8a e0       	ldi	r24, 0x0A	; 10
    e588:	90 e0       	ldi	r25, 0x00	; 0
    e58a:	a9 01       	movw	r20, r18
    e58c:	98 01       	movw	r18, r16
    e58e:	e9 d1       	rcall	.+978    	; 0xe962 <__udivmodsi4>
    e590:	21 50       	subi	r18, 0x01	; 1
    e592:	29 b9       	out	0x09, r18	; 9
    e594:	86 e0       	ldi	r24, 0x06	; 6
    e596:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
    e59a:	88 e1       	ldi	r24, 0x18	; 24
    e59c:	8a b9       	out	0x0a, r24	; 10
    e59e:	1f 91       	pop	r17
    e5a0:	0f 91       	pop	r16
    e5a2:	08 95       	ret

0000e5a4 <UART0_change_BAUD>:
    e5a4:	cf 92       	push	r12
    e5a6:	df 92       	push	r13
    e5a8:	ef 92       	push	r14
    e5aa:	ff 92       	push	r15
    e5ac:	9b 01       	movw	r18, r22
    e5ae:	ac 01       	movw	r20, r24
    e5b0:	20 38       	cpi	r18, 0x80	; 128
    e5b2:	85 e2       	ldi	r24, 0x25	; 37
    e5b4:	38 07       	cpc	r19, r24
    e5b6:	41 05       	cpc	r20, r1
    e5b8:	51 05       	cpc	r21, r1
    e5ba:	b9 f1       	breq	.+110    	; 0xe62a <UART0_change_BAUD+0x86>
    e5bc:	21 15       	cp	r18, r1
    e5be:	82 ec       	ldi	r24, 0xC2	; 194
    e5c0:	38 07       	cpc	r19, r24
    e5c2:	81 e0       	ldi	r24, 0x01	; 1
    e5c4:	48 07       	cpc	r20, r24
    e5c6:	51 05       	cpc	r21, r1
    e5c8:	a1 f1       	breq	.+104    	; 0xe632 <UART0_change_BAUD+0x8e>
    e5ca:	21 15       	cp	r18, r1
    e5cc:	80 e1       	ldi	r24, 0x10	; 16
    e5ce:	38 07       	cpc	r19, r24
    e5d0:	8e e0       	ldi	r24, 0x0E	; 14
    e5d2:	48 07       	cpc	r20, r24
    e5d4:	51 05       	cpc	r21, r1
    e5d6:	89 f1       	breq	.+98     	; 0xe63a <UART0_change_BAUD+0x96>
    e5d8:	21 15       	cp	r18, r1
    e5da:	8b e4       	ldi	r24, 0x4B	; 75
    e5dc:	38 07       	cpc	r19, r24
    e5de:	41 05       	cpc	r20, r1
    e5e0:	51 05       	cpc	r21, r1
    e5e2:	79 f1       	breq	.+94     	; 0xe642 <UART0_change_BAUD+0x9e>
    e5e4:	21 15       	cp	r18, r1
    e5e6:	86 e9       	ldi	r24, 0x96	; 150
    e5e8:	38 07       	cpc	r19, r24
    e5ea:	41 05       	cpc	r20, r1
    e5ec:	51 05       	cpc	r21, r1
    e5ee:	69 f1       	breq	.+90     	; 0xe64a <UART0_change_BAUD+0xa6>
    e5f0:	21 15       	cp	r18, r1
    e5f2:	81 ee       	ldi	r24, 0xE1	; 225
    e5f4:	38 07       	cpc	r19, r24
    e5f6:	41 05       	cpc	r20, r1
    e5f8:	51 05       	cpc	r21, r1
    e5fa:	59 f1       	breq	.+86     	; 0xe652 <UART0_change_BAUD+0xae>
    e5fc:	21 15       	cp	r18, r1
    e5fe:	84 e8       	ldi	r24, 0x84	; 132
    e600:	38 07       	cpc	r19, r24
    e602:	83 e0       	ldi	r24, 0x03	; 3
    e604:	48 07       	cpc	r20, r24
    e606:	51 05       	cpc	r21, r1
    e608:	41 f1       	breq	.+80     	; 0xe65a <UART0_change_BAUD+0xb6>
    e60a:	21 15       	cp	r18, r1
    e60c:	88 e0       	ldi	r24, 0x08	; 8
    e60e:	38 07       	cpc	r19, r24
    e610:	87 e0       	ldi	r24, 0x07	; 7
    e612:	48 07       	cpc	r20, r24
    e614:	51 05       	cpc	r21, r1
    e616:	29 f1       	breq	.+74     	; 0xe662 <UART0_change_BAUD+0xbe>
    e618:	0f 2e       	mov	r0, r31
    e61a:	cc 24       	eor	r12, r12
    e61c:	c3 94       	inc	r12
    e61e:	d1 2c       	mov	r13, r1
    e620:	e1 2c       	mov	r14, r1
    e622:	f3 e0       	ldi	r31, 0x03	; 3
    e624:	ff 2e       	mov	r15, r31
    e626:	f0 2d       	mov	r31, r0
    e628:	1f c0       	rjmp	.+62     	; 0xe668 <UART0_change_BAUD+0xc4>
    e62a:	c1 2c       	mov	r12, r1
    e62c:	d1 2c       	mov	r13, r1
    e62e:	76 01       	movw	r14, r12
    e630:	1b c0       	rjmp	.+54     	; 0xe668 <UART0_change_BAUD+0xc4>
    e632:	c1 2c       	mov	r12, r1
    e634:	d1 2c       	mov	r13, r1
    e636:	76 01       	movw	r14, r12
    e638:	17 c0       	rjmp	.+46     	; 0xe668 <UART0_change_BAUD+0xc4>
    e63a:	c1 2c       	mov	r12, r1
    e63c:	d1 2c       	mov	r13, r1
    e63e:	76 01       	movw	r14, r12
    e640:	13 c0       	rjmp	.+38     	; 0xe668 <UART0_change_BAUD+0xc4>
    e642:	c1 2c       	mov	r12, r1
    e644:	d1 2c       	mov	r13, r1
    e646:	76 01       	movw	r14, r12
    e648:	0f c0       	rjmp	.+30     	; 0xe668 <UART0_change_BAUD+0xc4>
    e64a:	c1 2c       	mov	r12, r1
    e64c:	d1 2c       	mov	r13, r1
    e64e:	76 01       	movw	r14, r12
    e650:	0b c0       	rjmp	.+22     	; 0xe668 <UART0_change_BAUD+0xc4>
    e652:	c1 2c       	mov	r12, r1
    e654:	d1 2c       	mov	r13, r1
    e656:	76 01       	movw	r14, r12
    e658:	07 c0       	rjmp	.+14     	; 0xe668 <UART0_change_BAUD+0xc4>
    e65a:	c1 2c       	mov	r12, r1
    e65c:	d1 2c       	mov	r13, r1
    e65e:	76 01       	movw	r14, r12
    e660:	03 c0       	rjmp	.+6      	; 0xe668 <UART0_change_BAUD+0xc4>
    e662:	c1 2c       	mov	r12, r1
    e664:	d1 2c       	mov	r13, r1
    e666:	76 01       	movw	r14, r12
    e668:	1a b8       	out	0x0a, r1	; 10
    e66a:	60 e0       	ldi	r22, 0x00	; 0
    e66c:	7c e8       	ldi	r23, 0x8C	; 140
    e66e:	8a e0       	ldi	r24, 0x0A	; 10
    e670:	90 e0       	ldi	r25, 0x00	; 0
    e672:	77 d1       	rcall	.+750    	; 0xe962 <__udivmodsi4>
    e674:	21 50       	subi	r18, 0x01	; 1
    e676:	29 b9       	out	0x09, r18	; 9
    e678:	88 e1       	ldi	r24, 0x18	; 24
    e67a:	8a b9       	out	0x0a, r24	; 10
    e67c:	c7 01       	movw	r24, r14
    e67e:	b6 01       	movw	r22, r12
    e680:	ff 90       	pop	r15
    e682:	ef 90       	pop	r14
    e684:	df 90       	pop	r13
    e686:	cf 90       	pop	r12
    e688:	08 95       	ret

0000e68a <UART0_SendMessage>:
 
TMR_Status UART0_SendMessage(const u8 *message, const u32 length, const u32 timeout_ms)
{
    e68a:	8f 92       	push	r8
    e68c:	9f 92       	push	r9
    e68e:	af 92       	push	r10
    e690:	bf 92       	push	r11
    e692:	cf 92       	push	r12
    e694:	df 92       	push	r13
    e696:	ef 92       	push	r14
    e698:	ff 92       	push	r15
    e69a:	0f 93       	push	r16
    e69c:	1f 93       	push	r17
    e69e:	cf 93       	push	r28
    e6a0:	df 93       	push	r29
    e6a2:	ec 01       	movw	r28, r24
    e6a4:	4a 01       	movw	r8, r20
    e6a6:	5b 01       	movw	r10, r22
    e6a8:	68 01       	movw	r12, r16
    e6aa:	79 01       	movw	r14, r18
	
	u32 i = (u32)0;
	TMR_Status result_status = TMR_SUCCESS;
	if(TIMER_NO_REASON == get_start_reason_timer(TIMER1))
    e6ac:	80 e0       	ldi	r24, 0x00	; 0
    e6ae:	0c df       	rcall	.-488    	; 0xe4c8 <get_start_reason_timer>
    e6b0:	81 11       	cpse	r24, r1
    e6b2:	70 c0       	rjmp	.+224    	; 0xe794 <UART0_SendMessage+0x10a>
	{
		if((TIMER_IN_PROGRESS == get_timer_status(TIMER1)) || (TIMER_FINISHED == get_timer_status(TIMER1)))
    e6b4:	8f de       	rcall	.-738    	; 0xe3d4 <get_timer_status>
    e6b6:	81 30       	cpi	r24, 0x01	; 1
    e6b8:	21 f0       	breq	.+8      	; 0xe6c2 <UART0_SendMessage+0x38>
    e6ba:	80 e0       	ldi	r24, 0x00	; 0
    e6bc:	8b de       	rcall	.-746    	; 0xe3d4 <get_timer_status>
    e6be:	82 30       	cpi	r24, 0x02	; 2
    e6c0:	11 f4       	brne	.+4      	; 0xe6c6 <UART0_SendMessage+0x3c>
		{
			disable_timer(TIMER1);
    e6c2:	80 e0       	ldi	r24, 0x00	; 0
    e6c4:	d8 de       	rcall	.-592    	; 0xe476 <disable_timer>
    e6c6:	78 94       	sei
		}
		sei();
    e6c8:	8a b1       	in	r24, 0x0a	; 10
		UCSR0B |= ((u8)1U << (u8)RXCIE0);
    e6ca:	80 68       	ori	r24, 0x80	; 128
    e6cc:	8a b9       	out	0x0a, r24	; 10
		set_start_reason_timer(TIMER1, TIMER_UART0_TX);
    e6ce:	61 e0       	ldi	r22, 0x01	; 1
    e6d0:	80 e0       	ldi	r24, 0x00	; 0
    e6d2:	f0 de       	rcall	.-544    	; 0xe4b4 <set_start_reason_timer>
 		start_timer(TIMER1, timeout_ms);
    e6d4:	b7 01       	movw	r22, r14
    e6d6:	a6 01       	movw	r20, r12
    e6d8:	80 e0       	ldi	r24, 0x00	; 0
    e6da:	70 de       	rcall	.-800    	; 0xe3bc <start_timer>
    e6dc:	c1 2c       	mov	r12, r1
		for(i = (u32)0U; i <  length; i++)
    e6de:	d1 2c       	mov	r13, r1
    e6e0:	76 01       	movw	r14, r12
    e6e2:	23 c0       	rjmp	.+70     	; 0xe72a <UART0_SendMessage+0xa0>
		{
			/*Wait for buffer to become empty*/
			while(FALSE == UART0_isBufferEmpty()) 
    e6e4:	5d 9b       	sbis	0x0b, 5	; 11
    e6e6:	fe cf       	rjmp	.-4      	; 0xe6e4 <UART0_SendMessage+0x5a>
					break;
				}*/
			} 
		
			/*Check if Buffer is finally empty*/
			if(FALSE != UART0_isBufferEmpty()) 
    e6e8:	5d 9b       	sbis	0x0b, 5	; 11
			{
				/*Firstly we have to check for timer*/
				if(TIMER_FINISHED == get_timer_status(TIMER1))
    e6ea:	1a c0       	rjmp	.+52     	; 0xe720 <UART0_SendMessage+0x96>
    e6ec:	80 e0       	ldi	r24, 0x00	; 0
    e6ee:	72 de       	rcall	.-796    	; 0xe3d4 <get_timer_status>
    e6f0:	82 30       	cpi	r24, 0x02	; 2
    e6f2:	41 f4       	brne	.+16     	; 0xe704 <UART0_SendMessage+0x7a>
				{
					disable_timer(TIMER1);
    e6f4:	80 e0       	ldi	r24, 0x00	; 0
    e6f6:	bf de       	rcall	.-642    	; 0xe476 <disable_timer>
    e6f8:	cc 24       	eor	r12, r12
					result_status = TMR_ERROR_TIMEOUT;
    e6fa:	c3 94       	inc	r12
    e6fc:	d1 2c       	mov	r13, r1
    e6fe:	e1 2c       	mov	r14, r1
    e700:	fc 2c       	mov	r15, r12
    e702:	1b c0       	rjmp	.+54     	; 0xe73a <UART0_SendMessage+0xb0>
					break;
    e704:	fe 01       	movw	r30, r28
				}
				else
				{
					UDR0 = (u8)message[i];
    e706:	ec 0d       	add	r30, r12
    e708:	fd 1d       	adc	r31, r13
    e70a:	80 81       	ld	r24, Z
    e70c:	8c b9       	out	0x0c, r24	; 12
    e70e:	8b b1       	in	r24, 0x0b	; 11
					while(FALSE == UART0_isTxComplete()) /*Wait for current byte to be sent*/
    e710:	80 76       	andi	r24, 0x60	; 96
    e712:	e9 f3       	breq	.-6      	; 0xe70e <UART0_SendMessage+0x84>
    e714:	8b b1       	in	r24, 0x0b	; 11
					{
						/*Do nothing*/
					}
					if(FALSE != UART0_isTxComplete())
    e716:	80 76       	andi	r24, 0x60	; 96
    e718:	19 f0       	breq	.+6      	; 0xe720 <UART0_SendMessage+0x96>
    e71a:	8b b1       	in	r24, 0x0b	; 11
					{
						UCSR0A |= ((u8)1U << (u8)TXC0); /*Clear the TX Flag*/
    e71c:	80 64       	ori	r24, 0x40	; 64
    e71e:	8b b9       	out	0x0b, r24	; 11
    e720:	8f ef       	ldi	r24, 0xFF	; 255
		}
		sei();
		UCSR0B |= ((u8)1U << (u8)RXCIE0);
		set_start_reason_timer(TIMER1, TIMER_UART0_TX);
 		start_timer(TIMER1, timeout_ms);
		for(i = (u32)0U; i <  length; i++)
    e722:	c8 1a       	sub	r12, r24
    e724:	d8 0a       	sbc	r13, r24
    e726:	e8 0a       	sbc	r14, r24
    e728:	f8 0a       	sbc	r15, r24
    e72a:	c8 14       	cp	r12, r8
    e72c:	d9 04       	cpc	r13, r9
    e72e:	ea 04       	cpc	r14, r10
    e730:	fb 04       	cpc	r15, r11
    e732:	c0 f2       	brcs	.-80     	; 0xe6e4 <UART0_SendMessage+0x5a>
    e734:	c1 2c       	mov	r12, r1
 
TMR_Status UART0_SendMessage(const u8 *message, const u32 length, const u32 timeout_ms)
{
	
	u32 i = (u32)0;
	TMR_Status result_status = TMR_SUCCESS;
    e736:	d1 2c       	mov	r13, r1
    e738:	76 01       	movw	r14, r12
    e73a:	81 e0       	ldi	r24, 0x01	; 1
					}
				}
			}
		}
	
		if(TMR_ERROR_TIMEOUT != result_status)
    e73c:	c8 16       	cp	r12, r24
    e73e:	d1 04       	cpc	r13, r1
    e740:	e1 04       	cpc	r14, r1
    e742:	f8 06       	cpc	r15, r24
    e744:	b1 f0       	breq	.+44     	; 0xe772 <UART0_SendMessage+0xe8>
    e746:	5c 99       	sbic	0x0b, 4	; 11
		{
			if(FALSE != UART0_isCommErrorDetected())
    e748:	05 c0       	rjmp	.+10     	; 0xe754 <UART0_SendMessage+0xca>
    e74a:	5b 9b       	sbis	0x0b, 3	; 11
    e74c:	06 c0       	rjmp	.+12     	; 0xe75a <UART0_SendMessage+0xd0>
    e74e:	81 e0       	ldi	r24, 0x01	; 1
    e750:	90 e0       	ldi	r25, 0x00	; 0
    e752:	05 c0       	rjmp	.+10     	; 0xe75e <UART0_SendMessage+0xd4>
    e754:	81 e0       	ldi	r24, 0x01	; 1
    e756:	90 e0       	ldi	r25, 0x00	; 0
    e758:	02 c0       	rjmp	.+4      	; 0xe75e <UART0_SendMessage+0xd4>
    e75a:	80 e0       	ldi	r24, 0x00	; 0
    e75c:	90 e0       	ldi	r25, 0x00	; 0
    e75e:	89 2b       	or	r24, r25
    e760:	41 f0       	breq	.+16     	; 0xe772 <UART0_SendMessage+0xe8>
    e762:	0f 2e       	mov	r0, r31
			{
				result_status = TMR_ERROR_INVALID_VALUE;
    e764:	f7 e1       	ldi	r31, 0x17	; 23
    e766:	cf 2e       	mov	r12, r31
    e768:	d1 2c       	mov	r13, r1
    e76a:	e1 2c       	mov	r14, r1
    e76c:	f3 e0       	ldi	r31, 0x03	; 3
    e76e:	ff 2e       	mov	r15, r31
			}
		}
	
		if((TIMER_IN_PROGRESS == get_timer_status(TIMER1)) || (TIMER_FINISHED == get_timer_status(TIMER1)))
    e770:	f0 2d       	mov	r31, r0
    e772:	80 e0       	ldi	r24, 0x00	; 0
    e774:	2f de       	rcall	.-930    	; 0xe3d4 <get_timer_status>
    e776:	81 30       	cpi	r24, 0x01	; 1
    e778:	21 f0       	breq	.+8      	; 0xe782 <UART0_SendMessage+0xf8>
    e77a:	80 e0       	ldi	r24, 0x00	; 0
    e77c:	2b de       	rcall	.-938    	; 0xe3d4 <get_timer_status>
    e77e:	82 30       	cpi	r24, 0x02	; 2
    e780:	11 f4       	brne	.+4      	; 0xe786 <UART0_SendMessage+0xfc>
		{
			disable_timer(TIMER1);
    e782:	80 e0       	ldi	r24, 0x00	; 0
    e784:	78 de       	rcall	.-784    	; 0xe476 <disable_timer>
    e786:	8b b1       	in	r24, 0x0b	; 11
		}
	
		if(FALSE != UART0_isTxComplete())
    e788:	80 76       	andi	r24, 0x60	; 96
    e78a:	61 f0       	breq	.+24     	; 0xe7a4 <UART0_SendMessage+0x11a>
    e78c:	8b b1       	in	r24, 0x0b	; 11
		{
			UCSR0A |= ((u8)1U << (u8)TXC0); /*Clear the TX Flag*/
    e78e:	80 64       	ori	r24, 0x40	; 64
    e790:	8b b9       	out	0x0b, r24	; 11
    e792:	08 c0       	rjmp	.+16     	; 0xe7a4 <UART0_SendMessage+0x11a>
    e794:	0f 2e       	mov	r0, r31
		}
	}
	else /*Timer reason not OK*/
	{
		result_status = TMR_ERROR_INVALID_VALUE;
    e796:	f7 e1       	ldi	r31, 0x17	; 23
    e798:	cf 2e       	mov	r12, r31
    e79a:	d1 2c       	mov	r13, r1
    e79c:	e1 2c       	mov	r14, r1
    e79e:	f3 e0       	ldi	r31, 0x03	; 3
    e7a0:	ff 2e       	mov	r15, r31
    e7a2:	f0 2d       	mov	r31, r0
    e7a4:	c7 01       	movw	r24, r14
		#ifdef DEBUG
		UART1_SendMessage_DEBUG("UART0_SendMessage: Timer1 must be deactivated first");
		#endif // DEBUG
	}
	return result_status;
}
    e7a6:	b6 01       	movw	r22, r12
    e7a8:	df 91       	pop	r29
    e7aa:	cf 91       	pop	r28
    e7ac:	1f 91       	pop	r17
    e7ae:	0f 91       	pop	r16
    e7b0:	ff 90       	pop	r15
    e7b2:	ef 90       	pop	r14
    e7b4:	df 90       	pop	r13
    e7b6:	cf 90       	pop	r12
    e7b8:	bf 90       	pop	r11
    e7ba:	af 90       	pop	r10
    e7bc:	9f 90       	pop	r9
    e7be:	8f 90       	pop	r8
    e7c0:	08 95       	ret

0000e7c2 <UART0_flush>:
    e7c2:	5d 9b       	sbis	0x0b, 5	; 11

void UART0_flush(void) {
	u8 tmp_buffer_dummy;
	
	/*Buffer is not empty, so we must clear it*/
	if(FALSE == UART0_isBufferEmpty())
    e7c4:	02 c0       	rjmp	.+4      	; 0xe7ca <UART0_flush+0x8>
    e7c6:	08 95       	ret
	{
		while((FALSE != UART0_isRxComplete()) || (FALSE == UART0_isBufferEmpty()))
		{
			tmp_buffer_dummy = (u8)UDR0; /*Reading buffer will eventually clear RXC0 flag*/
    e7c8:	8c b1       	in	r24, 0x0c	; 12
	u8 tmp_buffer_dummy;
	
	/*Buffer is not empty, so we must clear it*/
	if(FALSE == UART0_isBufferEmpty())
	{
		while((FALSE != UART0_isRxComplete()) || (FALSE == UART0_isBufferEmpty()))
    e7ca:	5f 99       	sbic	0x0b, 7	; 11
    e7cc:	fd cf       	rjmp	.-6      	; 0xe7c8 <UART0_flush+0x6>
    e7ce:	5d 9b       	sbis	0x0b, 5	; 11
    e7d0:	fb cf       	rjmp	.-10     	; 0xe7c8 <UART0_flush+0x6>
			tmp_buffer_dummy = (u8)UDR0; /*Reading buffer will eventually clear RXC0 flag*/
		}
		(void)tmp_buffer_dummy; /*Dummy code with no functional impact. This was added in order to erase unused parameter warning*/

		/*Disabling RX will clear the buffer. This was added for robustness*/
		UCSR0B = (u8)UCSR0B & (~((u8)1U << (u8)RXEN0)); /*Disable RX of UART0*/
    e7d2:	8a b1       	in	r24, 0x0a	; 10
    e7d4:	8f 7e       	andi	r24, 0xEF	; 239
    e7d6:	8a b9       	out	0x0a, r24	; 10
		UCSR0B = (u8)UCSR0B | ((u8)1U << (u8)RXEN0);/*Enable RX of UART0*/
    e7d8:	8a b1       	in	r24, 0x0a	; 10
    e7da:	80 61       	ori	r24, 0x10	; 16
    e7dc:	8a b9       	out	0x0a, r24	; 10
    e7de:	08 95       	ret

0000e7e0 <UART0_DeInit>:
	}
}
void UART0_DeInit(void) 
{
	UART0_flush();
    e7e0:	f0 df       	rcall	.-32     	; 0xe7c2 <UART0_flush>
	UCSR0B = (u8)0x00U; /*This will also disable RXEN and TXEN, so UART will be closed*/
    e7e2:	1a b8       	out	0x0a, r1	; 10
	UCSR0A = (u8)0x00U;
    e7e4:	1b b8       	out	0x0b, r1	; 11
	UCSR0C = (u8)0x00U;
    e7e6:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
	
	/* Even if clearing baud was not necessary to disable UART, it's done for robustness. Init function will set it again*/
	UBRR0H = (u8)0x00U;
    e7ea:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = (u8)0x00U;
    e7ee:	19 b8       	out	0x09, r1	; 9
    e7f0:	08 95       	ret

0000e7f2 <UART0_ReceiveMessage>:
	} 
	
	#endif
}

TMR_Status UART0_ReceiveMessage(u8* message, const u32 length, u32* messageLength, const u32 timeoutMs) {
    e7f2:	8f 92       	push	r8
    e7f4:	9f 92       	push	r9
    e7f6:	af 92       	push	r10
    e7f8:	bf 92       	push	r11
    e7fa:	cf 92       	push	r12
    e7fc:	df 92       	push	r13
    e7fe:	ef 92       	push	r14
    e800:	ff 92       	push	r15
    e802:	0f 93       	push	r16
    e804:	1f 93       	push	r17
    e806:	cf 93       	push	r28
    e808:	df 93       	push	r29
	TMR_Status result_status = TMR_SUCCESS;
	
	if((messageLength == NULL) || (message == NULL))
    e80a:	21 15       	cp	r18, r1
    e80c:	31 05       	cpc	r19, r1
    e80e:	09 f4       	brne	.+2      	; 0xe812 <UART0_ReceiveMessage+0x20>
    e810:	57 c0       	rjmp	.+174    	; 0xe8c0 <UART0_ReceiveMessage+0xce>
    e812:	00 97       	sbiw	r24, 0x00	; 0
    e814:	09 f4       	brne	.+2      	; 0xe818 <UART0_ReceiveMessage+0x26>
    e816:	59 c0       	rjmp	.+178    	; 0xe8ca <UART0_ReceiveMessage+0xd8>
    e818:	67 01       	movw	r12, r14
    e81a:	78 01       	movw	r14, r16
    e81c:	e9 01       	movw	r28, r18
    e81e:	4a 01       	movw	r8, r20
    e820:	5b 01       	movw	r10, r22
    e822:	8c 01       	movw	r16, r24
		result_status = TMR_ERROR_INVALID_VALUE;
		#ifdef _DEBUG
		UART1_SendMessage_DEBUG("UART0_ReceiveMessage: Null argument");
		#endif // _DEBUG
	}
	else if(TIMER_NO_REASON == get_start_reason_timer(TIMER3))
    e824:	81 e0       	ldi	r24, 0x01	; 1
    e826:	50 de       	rcall	.-864    	; 0xe4c8 <get_start_reason_timer>
    e828:	81 11       	cpse	r24, r1
    e82a:	54 c0       	rjmp	.+168    	; 0xe8d4 <UART0_ReceiveMessage+0xe2>
	{
		set_start_reason_timer(TIMER3, TIMER_UART0_RX);
    e82c:	62 e0       	ldi	r22, 0x02	; 2
    e82e:	81 e0       	ldi	r24, 0x01	; 1
    e830:	41 de       	rcall	.-894    	; 0xe4b4 <set_start_reason_timer>
		start_timer(TIMER3, timeoutMs);
    e832:	b7 01       	movw	r22, r14
    e834:	a6 01       	movw	r20, r12
    e836:	81 e0       	ldi	r24, 0x01	; 1
    e838:	c1 dd       	rcall	.-1150   	; 0xe3bc <start_timer>
		
		while(TIMER_FINISHED != get_timer_status(TIMER3))
    e83a:	12 c0       	rjmp	.+36     	; 0xe860 <UART0_ReceiveMessage+0x6e>
		{
			*messageLength = ISR_end_index;
    e83c:	80 91 6d 02 	lds	r24, 0x026D	; 0x80026d <ISR_end_index>
    e840:	90 91 6e 02 	lds	r25, 0x026E	; 0x80026e <ISR_end_index+0x1>
    e844:	a0 e0       	ldi	r26, 0x00	; 0
    e846:	b0 e0       	ldi	r27, 0x00	; 0
    e848:	88 83       	st	Y, r24
    e84a:	99 83       	std	Y+1, r25	; 0x01
    e84c:	aa 83       	std	Y+2, r26	; 0x02
    e84e:	bb 83       	std	Y+3, r27	; 0x03
			if(*messageLength == length)
    e850:	88 15       	cp	r24, r8
    e852:	99 05       	cpc	r25, r9
    e854:	aa 05       	cpc	r26, r10
    e856:	bb 05       	cpc	r27, r11
			{
				disable_timer(TIMER3);
    e858:	19 f4       	brne	.+6      	; 0xe860 <UART0_ReceiveMessage+0x6e>
    e85a:	81 e0       	ldi	r24, 0x01	; 1
				break;
    e85c:	0c de       	rcall	.-1000   	; 0xe476 <disable_timer>
	else if(TIMER_NO_REASON == get_start_reason_timer(TIMER3))
	{
		set_start_reason_timer(TIMER3, TIMER_UART0_RX);
		start_timer(TIMER3, timeoutMs);
		
		while(TIMER_FINISHED != get_timer_status(TIMER3))
    e85e:	04 c0       	rjmp	.+8      	; 0xe868 <UART0_ReceiveMessage+0x76>
    e860:	81 e0       	ldi	r24, 0x01	; 1
    e862:	b8 dd       	rcall	.-1168   	; 0xe3d4 <get_timer_status>
    e864:	82 30       	cpi	r24, 0x02	; 2
    e866:	51 f7       	brne	.-44     	; 0xe83c <UART0_ReceiveMessage+0x4a>
				disable_timer(TIMER3);
				break;
			}
		}
		
		if(length == *messageLength)
    e868:	88 81       	ld	r24, Y
    e86a:	99 81       	ldd	r25, Y+1	; 0x01
    e86c:	aa 81       	ldd	r26, Y+2	; 0x02
    e86e:	bb 81       	ldd	r27, Y+3	; 0x03
    e870:	88 16       	cp	r8, r24
    e872:	99 06       	cpc	r9, r25
    e874:	aa 06       	cpc	r10, r26
    e876:	bb 06       	cpc	r11, r27
    e878:	89 f0       	breq	.+34     	; 0xe89c <UART0_ReceiveMessage+0xaa>
			}
			ISR_end_index = (u8)0U; /*Clear index of ISR buffer, for a new transmission*/
		}
		else
		{
			result_status = TMR_ERROR_TIMEOUT;
    e87a:	61 e0       	ldi	r22, 0x01	; 1
    e87c:	70 e0       	ldi	r23, 0x00	; 0
    e87e:	80 e0       	ldi	r24, 0x00	; 0
    e880:	91 e0       	ldi	r25, 0x01	; 1
    e882:	2c c0       	rjmp	.+88     	; 0xe8dc <UART0_ReceiveMessage+0xea>
		
		if(length == *messageLength)
		{
			for(u8 i = (u8)0U; i < length; i++)
			{
				message[i] = ISR_Buffer[i];
    e884:	e8 2f       	mov	r30, r24
    e886:	f0 e0       	ldi	r31, 0x00	; 0
    e888:	d8 01       	movw	r26, r16
    e88a:	ae 0f       	add	r26, r30
    e88c:	bf 1f       	adc	r27, r31
    e88e:	e1 59       	subi	r30, 0x91	; 145
    e890:	fd 4f       	sbci	r31, 0xFD	; 253
    e892:	90 81       	ld	r25, Z
    e894:	9c 93       	st	X, r25
				ISR_Buffer[i] = (u8)0U; /*After setting value in Official buffer, reset it*/
    e896:	10 82       	st	Z, r1
			}
		}
		
		if(length == *messageLength)
		{
			for(u8 i = (u8)0U; i < length; i++)
    e898:	8f 5f       	subi	r24, 0xFF	; 255
    e89a:	01 c0       	rjmp	.+2      	; 0xe89e <UART0_ReceiveMessage+0xac>
    e89c:	80 e0       	ldi	r24, 0x00	; 0
    e89e:	48 2f       	mov	r20, r24
    e8a0:	50 e0       	ldi	r21, 0x00	; 0
    e8a2:	60 e0       	ldi	r22, 0x00	; 0
    e8a4:	70 e0       	ldi	r23, 0x00	; 0
    e8a6:	48 15       	cp	r20, r8
    e8a8:	59 05       	cpc	r21, r9
    e8aa:	6a 05       	cpc	r22, r10
    e8ac:	7b 05       	cpc	r23, r11
    e8ae:	50 f3       	brcs	.-44     	; 0xe884 <UART0_ReceiveMessage+0x92>
			{
				message[i] = ISR_Buffer[i];
				ISR_Buffer[i] = (u8)0U; /*After setting value in Official buffer, reset it*/
			}
			ISR_end_index = (u8)0U; /*Clear index of ISR buffer, for a new transmission*/
    e8b0:	10 92 6e 02 	sts	0x026E, r1	; 0x80026e <ISR_end_index+0x1>
    e8b4:	10 92 6d 02 	sts	0x026D, r1	; 0x80026d <ISR_end_index>
	
	#endif
}

TMR_Status UART0_ReceiveMessage(u8* message, const u32 length, u32* messageLength, const u32 timeoutMs) {
	TMR_Status result_status = TMR_SUCCESS;
    e8b8:	60 e0       	ldi	r22, 0x00	; 0
    e8ba:	70 e0       	ldi	r23, 0x00	; 0
    e8bc:	cb 01       	movw	r24, r22
    e8be:	0e c0       	rjmp	.+28     	; 0xe8dc <UART0_ReceiveMessage+0xea>
	
	if((messageLength == NULL) || (message == NULL))
	{
		result_status = TMR_ERROR_INVALID_VALUE;
    e8c0:	67 e1       	ldi	r22, 0x17	; 23
    e8c2:	70 e0       	ldi	r23, 0x00	; 0
    e8c4:	80 e0       	ldi	r24, 0x00	; 0
    e8c6:	93 e0       	ldi	r25, 0x03	; 3
    e8c8:	09 c0       	rjmp	.+18     	; 0xe8dc <UART0_ReceiveMessage+0xea>
    e8ca:	67 e1       	ldi	r22, 0x17	; 23
    e8cc:	70 e0       	ldi	r23, 0x00	; 0
    e8ce:	80 e0       	ldi	r24, 0x00	; 0
    e8d0:	93 e0       	ldi	r25, 0x03	; 3
    e8d2:	04 c0       	rjmp	.+8      	; 0xe8dc <UART0_ReceiveMessage+0xea>
			result_status = TMR_ERROR_TIMEOUT;
		}
	}
	else
	{
		result_status = TMR_ERROR_INVALID_VALUE;
    e8d4:	67 e1       	ldi	r22, 0x17	; 23
    e8d6:	70 e0       	ldi	r23, 0x00	; 0
    e8d8:	80 e0       	ldi	r24, 0x00	; 0
    e8da:	93 e0       	ldi	r25, 0x03	; 3
		#ifdef DEBUG
		UART1_SendMessage_DEBUG("UART0_ReceiveMessage: Timer3 is in use");
		#endif // DEBUG
	}
	return result_status;
    e8dc:	df 91       	pop	r29
    e8de:	cf 91       	pop	r28
    e8e0:	1f 91       	pop	r17
    e8e2:	0f 91       	pop	r16
    e8e4:	ff 90       	pop	r15
    e8e6:	ef 90       	pop	r14
    e8e8:	df 90       	pop	r13
    e8ea:	cf 90       	pop	r12
    e8ec:	bf 90       	pop	r11
    e8ee:	af 90       	pop	r10
    e8f0:	9f 90       	pop	r9
    e8f2:	8f 90       	pop	r8
    e8f4:	08 95       	ret

0000e8f6 <__mulsi3>:
    e8f6:	db 01       	movw	r26, r22
    e8f8:	8f 93       	push	r24
    e8fa:	9f 93       	push	r25
    e8fc:	5d d0       	rcall	.+186    	; 0xe9b8 <__muluhisi3>
    e8fe:	bf 91       	pop	r27
    e900:	af 91       	pop	r26
    e902:	a2 9f       	mul	r26, r18
    e904:	80 0d       	add	r24, r0
    e906:	91 1d       	adc	r25, r1
    e908:	a3 9f       	mul	r26, r19
    e90a:	90 0d       	add	r25, r0
    e90c:	b2 9f       	mul	r27, r18
    e90e:	90 0d       	add	r25, r0
    e910:	11 24       	eor	r1, r1
    e912:	08 95       	ret

0000e914 <__udivmodhi4>:
    e914:	aa 1b       	sub	r26, r26
    e916:	bb 1b       	sub	r27, r27
    e918:	51 e1       	ldi	r21, 0x11	; 17
    e91a:	07 c0       	rjmp	.+14     	; 0xe92a <__udivmodhi4_ep>

0000e91c <__udivmodhi4_loop>:
    e91c:	aa 1f       	adc	r26, r26
    e91e:	bb 1f       	adc	r27, r27
    e920:	a6 17       	cp	r26, r22
    e922:	b7 07       	cpc	r27, r23
    e924:	10 f0       	brcs	.+4      	; 0xe92a <__udivmodhi4_ep>
    e926:	a6 1b       	sub	r26, r22
    e928:	b7 0b       	sbc	r27, r23

0000e92a <__udivmodhi4_ep>:
    e92a:	88 1f       	adc	r24, r24
    e92c:	99 1f       	adc	r25, r25
    e92e:	5a 95       	dec	r21
    e930:	a9 f7       	brne	.-22     	; 0xe91c <__udivmodhi4_loop>
    e932:	80 95       	com	r24
    e934:	90 95       	com	r25
    e936:	bc 01       	movw	r22, r24
    e938:	cd 01       	movw	r24, r26
    e93a:	08 95       	ret

0000e93c <__divmodhi4>:
    e93c:	97 fb       	bst	r25, 7
    e93e:	07 2e       	mov	r0, r23
    e940:	16 f4       	brtc	.+4      	; 0xe946 <__divmodhi4+0xa>
    e942:	00 94       	com	r0
    e944:	06 d0       	rcall	.+12     	; 0xe952 <__divmodhi4_neg1>
    e946:	77 fd       	sbrc	r23, 7
    e948:	08 d0       	rcall	.+16     	; 0xe95a <__divmodhi4_neg2>
    e94a:	e4 df       	rcall	.-56     	; 0xe914 <__udivmodhi4>
    e94c:	07 fc       	sbrc	r0, 7
    e94e:	05 d0       	rcall	.+10     	; 0xe95a <__divmodhi4_neg2>
    e950:	3e f4       	brtc	.+14     	; 0xe960 <__divmodhi4_exit>

0000e952 <__divmodhi4_neg1>:
    e952:	90 95       	com	r25
    e954:	81 95       	neg	r24
    e956:	9f 4f       	sbci	r25, 0xFF	; 255
    e958:	08 95       	ret

0000e95a <__divmodhi4_neg2>:
    e95a:	70 95       	com	r23
    e95c:	61 95       	neg	r22
    e95e:	7f 4f       	sbci	r23, 0xFF	; 255

0000e960 <__divmodhi4_exit>:
    e960:	08 95       	ret

0000e962 <__udivmodsi4>:
    e962:	a1 e2       	ldi	r26, 0x21	; 33
    e964:	1a 2e       	mov	r1, r26
    e966:	aa 1b       	sub	r26, r26
    e968:	bb 1b       	sub	r27, r27
    e96a:	fd 01       	movw	r30, r26
    e96c:	0d c0       	rjmp	.+26     	; 0xe988 <__udivmodsi4_ep>

0000e96e <__udivmodsi4_loop>:
    e96e:	aa 1f       	adc	r26, r26
    e970:	bb 1f       	adc	r27, r27
    e972:	ee 1f       	adc	r30, r30
    e974:	ff 1f       	adc	r31, r31
    e976:	a2 17       	cp	r26, r18
    e978:	b3 07       	cpc	r27, r19
    e97a:	e4 07       	cpc	r30, r20
    e97c:	f5 07       	cpc	r31, r21
    e97e:	20 f0       	brcs	.+8      	; 0xe988 <__udivmodsi4_ep>
    e980:	a2 1b       	sub	r26, r18
    e982:	b3 0b       	sbc	r27, r19
    e984:	e4 0b       	sbc	r30, r20
    e986:	f5 0b       	sbc	r31, r21

0000e988 <__udivmodsi4_ep>:
    e988:	66 1f       	adc	r22, r22
    e98a:	77 1f       	adc	r23, r23
    e98c:	88 1f       	adc	r24, r24
    e98e:	99 1f       	adc	r25, r25
    e990:	1a 94       	dec	r1
    e992:	69 f7       	brne	.-38     	; 0xe96e <__udivmodsi4_loop>
    e994:	60 95       	com	r22
    e996:	70 95       	com	r23
    e998:	80 95       	com	r24
    e99a:	90 95       	com	r25
    e99c:	9b 01       	movw	r18, r22
    e99e:	ac 01       	movw	r20, r24
    e9a0:	bd 01       	movw	r22, r26
    e9a2:	cf 01       	movw	r24, r30
    e9a4:	08 95       	ret

0000e9a6 <__tablejump2__>:
    e9a6:	ee 0f       	add	r30, r30
    e9a8:	ff 1f       	adc	r31, r31
    e9aa:	00 24       	eor	r0, r0
    e9ac:	00 1c       	adc	r0, r0
    e9ae:	0b be       	out	0x3b, r0	; 59
    e9b0:	07 90       	elpm	r0, Z+
    e9b2:	f6 91       	elpm	r31, Z
    e9b4:	e0 2d       	mov	r30, r0
    e9b6:	09 94       	ijmp

0000e9b8 <__muluhisi3>:
    e9b8:	5e d0       	rcall	.+188    	; 0xea76 <__umulhisi3>
    e9ba:	a5 9f       	mul	r26, r21
    e9bc:	90 0d       	add	r25, r0
    e9be:	b4 9f       	mul	r27, r20
    e9c0:	90 0d       	add	r25, r0
    e9c2:	a4 9f       	mul	r26, r20
    e9c4:	80 0d       	add	r24, r0
    e9c6:	91 1d       	adc	r25, r1
    e9c8:	11 24       	eor	r1, r1
    e9ca:	08 95       	ret

0000e9cc <__ashldi3>:
    e9cc:	0f 93       	push	r16
    e9ce:	08 30       	cpi	r16, 0x08	; 8
    e9d0:	90 f0       	brcs	.+36     	; 0xe9f6 <__ashldi3+0x2a>
    e9d2:	98 2f       	mov	r25, r24
    e9d4:	87 2f       	mov	r24, r23
    e9d6:	76 2f       	mov	r23, r22
    e9d8:	65 2f       	mov	r22, r21
    e9da:	54 2f       	mov	r21, r20
    e9dc:	43 2f       	mov	r20, r19
    e9de:	32 2f       	mov	r19, r18
    e9e0:	22 27       	eor	r18, r18
    e9e2:	08 50       	subi	r16, 0x08	; 8
    e9e4:	f4 cf       	rjmp	.-24     	; 0xe9ce <__ashldi3+0x2>
    e9e6:	22 0f       	add	r18, r18
    e9e8:	33 1f       	adc	r19, r19
    e9ea:	44 1f       	adc	r20, r20
    e9ec:	55 1f       	adc	r21, r21
    e9ee:	66 1f       	adc	r22, r22
    e9f0:	77 1f       	adc	r23, r23
    e9f2:	88 1f       	adc	r24, r24
    e9f4:	99 1f       	adc	r25, r25
    e9f6:	0a 95       	dec	r16
    e9f8:	b2 f7       	brpl	.-20     	; 0xe9e6 <__ashldi3+0x1a>
    e9fa:	0f 91       	pop	r16
    e9fc:	08 95       	ret

0000e9fe <__ashrdi3>:
    e9fe:	97 fb       	bst	r25, 7
    ea00:	10 f8       	bld	r1, 0

0000ea02 <__lshrdi3>:
    ea02:	16 94       	lsr	r1
    ea04:	00 08       	sbc	r0, r0
    ea06:	0f 93       	push	r16
    ea08:	08 30       	cpi	r16, 0x08	; 8
    ea0a:	98 f0       	brcs	.+38     	; 0xea32 <__lshrdi3+0x30>
    ea0c:	08 50       	subi	r16, 0x08	; 8
    ea0e:	23 2f       	mov	r18, r19
    ea10:	34 2f       	mov	r19, r20
    ea12:	45 2f       	mov	r20, r21
    ea14:	56 2f       	mov	r21, r22
    ea16:	67 2f       	mov	r22, r23
    ea18:	78 2f       	mov	r23, r24
    ea1a:	89 2f       	mov	r24, r25
    ea1c:	90 2d       	mov	r25, r0
    ea1e:	f4 cf       	rjmp	.-24     	; 0xea08 <__lshrdi3+0x6>
    ea20:	05 94       	asr	r0
    ea22:	97 95       	ror	r25
    ea24:	87 95       	ror	r24
    ea26:	77 95       	ror	r23
    ea28:	67 95       	ror	r22
    ea2a:	57 95       	ror	r21
    ea2c:	47 95       	ror	r20
    ea2e:	37 95       	ror	r19
    ea30:	27 95       	ror	r18
    ea32:	0a 95       	dec	r16
    ea34:	aa f7       	brpl	.-22     	; 0xea20 <__lshrdi3+0x1e>
    ea36:	0f 91       	pop	r16
    ea38:	08 95       	ret

0000ea3a <__subdi3>:
    ea3a:	2a 19       	sub	r18, r10
    ea3c:	3b 09       	sbc	r19, r11
    ea3e:	4c 09       	sbc	r20, r12
    ea40:	5d 09       	sbc	r21, r13
    ea42:	6e 09       	sbc	r22, r14
    ea44:	7f 09       	sbc	r23, r15
    ea46:	80 0b       	sbc	r24, r16
    ea48:	91 0b       	sbc	r25, r17
    ea4a:	08 95       	ret

0000ea4c <__cmpdi2>:
    ea4c:	2a 15       	cp	r18, r10
    ea4e:	3b 05       	cpc	r19, r11
    ea50:	4c 05       	cpc	r20, r12
    ea52:	5d 05       	cpc	r21, r13
    ea54:	6e 05       	cpc	r22, r14
    ea56:	7f 05       	cpc	r23, r15
    ea58:	80 07       	cpc	r24, r16
    ea5a:	91 07       	cpc	r25, r17
    ea5c:	08 95       	ret

0000ea5e <__cmpdi2_s8>:
    ea5e:	00 24       	eor	r0, r0
    ea60:	a7 fd       	sbrc	r26, 7
    ea62:	00 94       	com	r0
    ea64:	2a 17       	cp	r18, r26
    ea66:	30 05       	cpc	r19, r0
    ea68:	40 05       	cpc	r20, r0
    ea6a:	50 05       	cpc	r21, r0
    ea6c:	60 05       	cpc	r22, r0
    ea6e:	70 05       	cpc	r23, r0
    ea70:	80 05       	cpc	r24, r0
    ea72:	90 05       	cpc	r25, r0
    ea74:	08 95       	ret

0000ea76 <__umulhisi3>:
    ea76:	a2 9f       	mul	r26, r18
    ea78:	b0 01       	movw	r22, r0
    ea7a:	b3 9f       	mul	r27, r19
    ea7c:	c0 01       	movw	r24, r0
    ea7e:	a3 9f       	mul	r26, r19
    ea80:	70 0d       	add	r23, r0
    ea82:	81 1d       	adc	r24, r1
    ea84:	11 24       	eor	r1, r1
    ea86:	91 1d       	adc	r25, r1
    ea88:	b2 9f       	mul	r27, r18
    ea8a:	70 0d       	add	r23, r0
    ea8c:	81 1d       	adc	r24, r1
    ea8e:	11 24       	eor	r1, r1
    ea90:	91 1d       	adc	r25, r1
    ea92:	08 95       	ret

0000ea94 <memcpy>:
    ea94:	fb 01       	movw	r30, r22
    ea96:	dc 01       	movw	r26, r24
    ea98:	02 c0       	rjmp	.+4      	; 0xea9e <memcpy+0xa>
    ea9a:	01 90       	ld	r0, Z+
    ea9c:	0d 92       	st	X+, r0
    ea9e:	41 50       	subi	r20, 0x01	; 1
    eaa0:	50 40       	sbci	r21, 0x00	; 0
    eaa2:	d8 f7       	brcc	.-10     	; 0xea9a <memcpy+0x6>
    eaa4:	08 95       	ret

0000eaa6 <memmove>:
    eaa6:	68 17       	cp	r22, r24
    eaa8:	79 07       	cpc	r23, r25
    eaaa:	68 f4       	brcc	.+26     	; 0xeac6 <memmove+0x20>
    eaac:	fb 01       	movw	r30, r22
    eaae:	dc 01       	movw	r26, r24
    eab0:	e4 0f       	add	r30, r20
    eab2:	f5 1f       	adc	r31, r21
    eab4:	a4 0f       	add	r26, r20
    eab6:	b5 1f       	adc	r27, r21
    eab8:	02 c0       	rjmp	.+4      	; 0xeabe <memmove+0x18>
    eaba:	02 90       	ld	r0, -Z
    eabc:	0e 92       	st	-X, r0
    eabe:	41 50       	subi	r20, 0x01	; 1
    eac0:	50 40       	sbci	r21, 0x00	; 0
    eac2:	d8 f7       	brcc	.-10     	; 0xeaba <memmove+0x14>
    eac4:	08 95       	ret
    eac6:	e6 cf       	rjmp	.-52     	; 0xea94 <memcpy>

0000eac8 <strcpy>:
    eac8:	fb 01       	movw	r30, r22
    eaca:	dc 01       	movw	r26, r24
    eacc:	01 90       	ld	r0, Z+
    eace:	0d 92       	st	X+, r0
    ead0:	00 20       	and	r0, r0
    ead2:	e1 f7       	brne	.-8      	; 0xeacc <strcpy+0x4>
    ead4:	08 95       	ret

0000ead6 <sprintf>:
    ead6:	0f 93       	push	r16
    ead8:	1f 93       	push	r17
    eada:	cf 93       	push	r28
    eadc:	df 93       	push	r29
    eade:	cd b7       	in	r28, 0x3d	; 61
    eae0:	de b7       	in	r29, 0x3e	; 62
    eae2:	2e 97       	sbiw	r28, 0x0e	; 14
    eae4:	0f b6       	in	r0, 0x3f	; 63
    eae6:	f8 94       	cli
    eae8:	de bf       	out	0x3e, r29	; 62
    eaea:	0f be       	out	0x3f, r0	; 63
    eaec:	cd bf       	out	0x3d, r28	; 61
    eaee:	0d 89       	ldd	r16, Y+21	; 0x15
    eaf0:	1e 89       	ldd	r17, Y+22	; 0x16
    eaf2:	86 e0       	ldi	r24, 0x06	; 6
    eaf4:	8c 83       	std	Y+4, r24	; 0x04
    eaf6:	1a 83       	std	Y+2, r17	; 0x02
    eaf8:	09 83       	std	Y+1, r16	; 0x01
    eafa:	8f ef       	ldi	r24, 0xFF	; 255
    eafc:	9f e7       	ldi	r25, 0x7F	; 127
    eafe:	9e 83       	std	Y+6, r25	; 0x06
    eb00:	8d 83       	std	Y+5, r24	; 0x05
    eb02:	ae 01       	movw	r20, r28
    eb04:	47 5e       	subi	r20, 0xE7	; 231
    eb06:	5f 4f       	sbci	r21, 0xFF	; 255
    eb08:	6f 89       	ldd	r22, Y+23	; 0x17
    eb0a:	78 8d       	ldd	r23, Y+24	; 0x18
    eb0c:	ce 01       	movw	r24, r28
    eb0e:	01 96       	adiw	r24, 0x01	; 1
    eb10:	10 d0       	rcall	.+32     	; 0xeb32 <vfprintf>
    eb12:	ef 81       	ldd	r30, Y+7	; 0x07
    eb14:	f8 85       	ldd	r31, Y+8	; 0x08
    eb16:	e0 0f       	add	r30, r16
    eb18:	f1 1f       	adc	r31, r17
    eb1a:	10 82       	st	Z, r1
    eb1c:	2e 96       	adiw	r28, 0x0e	; 14
    eb1e:	0f b6       	in	r0, 0x3f	; 63
    eb20:	f8 94       	cli
    eb22:	de bf       	out	0x3e, r29	; 62
    eb24:	0f be       	out	0x3f, r0	; 63
    eb26:	cd bf       	out	0x3d, r28	; 61
    eb28:	df 91       	pop	r29
    eb2a:	cf 91       	pop	r28
    eb2c:	1f 91       	pop	r17
    eb2e:	0f 91       	pop	r16
    eb30:	08 95       	ret

0000eb32 <vfprintf>:
    eb32:	2f 92       	push	r2
    eb34:	3f 92       	push	r3
    eb36:	4f 92       	push	r4
    eb38:	5f 92       	push	r5
    eb3a:	6f 92       	push	r6
    eb3c:	7f 92       	push	r7
    eb3e:	8f 92       	push	r8
    eb40:	9f 92       	push	r9
    eb42:	af 92       	push	r10
    eb44:	bf 92       	push	r11
    eb46:	cf 92       	push	r12
    eb48:	df 92       	push	r13
    eb4a:	ef 92       	push	r14
    eb4c:	ff 92       	push	r15
    eb4e:	0f 93       	push	r16
    eb50:	1f 93       	push	r17
    eb52:	cf 93       	push	r28
    eb54:	df 93       	push	r29
    eb56:	cd b7       	in	r28, 0x3d	; 61
    eb58:	de b7       	in	r29, 0x3e	; 62
    eb5a:	2b 97       	sbiw	r28, 0x0b	; 11
    eb5c:	0f b6       	in	r0, 0x3f	; 63
    eb5e:	f8 94       	cli
    eb60:	de bf       	out	0x3e, r29	; 62
    eb62:	0f be       	out	0x3f, r0	; 63
    eb64:	cd bf       	out	0x3d, r28	; 61
    eb66:	6c 01       	movw	r12, r24
    eb68:	7b 01       	movw	r14, r22
    eb6a:	8a 01       	movw	r16, r20
    eb6c:	fc 01       	movw	r30, r24
    eb6e:	17 82       	std	Z+7, r1	; 0x07
    eb70:	16 82       	std	Z+6, r1	; 0x06
    eb72:	83 81       	ldd	r24, Z+3	; 0x03
    eb74:	81 ff       	sbrs	r24, 1
    eb76:	bf c1       	rjmp	.+894    	; 0xeef6 <vfprintf+0x3c4>
    eb78:	ce 01       	movw	r24, r28
    eb7a:	01 96       	adiw	r24, 0x01	; 1
    eb7c:	3c 01       	movw	r6, r24
    eb7e:	f6 01       	movw	r30, r12
    eb80:	93 81       	ldd	r25, Z+3	; 0x03
    eb82:	f7 01       	movw	r30, r14
    eb84:	93 fd       	sbrc	r25, 3
    eb86:	85 91       	lpm	r24, Z+
    eb88:	93 ff       	sbrs	r25, 3
    eb8a:	81 91       	ld	r24, Z+
    eb8c:	7f 01       	movw	r14, r30
    eb8e:	88 23       	and	r24, r24
    eb90:	09 f4       	brne	.+2      	; 0xeb94 <vfprintf+0x62>
    eb92:	ad c1       	rjmp	.+858    	; 0xeeee <vfprintf+0x3bc>
    eb94:	85 32       	cpi	r24, 0x25	; 37
    eb96:	39 f4       	brne	.+14     	; 0xeba6 <vfprintf+0x74>
    eb98:	93 fd       	sbrc	r25, 3
    eb9a:	85 91       	lpm	r24, Z+
    eb9c:	93 ff       	sbrs	r25, 3
    eb9e:	81 91       	ld	r24, Z+
    eba0:	7f 01       	movw	r14, r30
    eba2:	85 32       	cpi	r24, 0x25	; 37
    eba4:	21 f4       	brne	.+8      	; 0xebae <vfprintf+0x7c>
    eba6:	b6 01       	movw	r22, r12
    eba8:	90 e0       	ldi	r25, 0x00	; 0
    ebaa:	d6 d1       	rcall	.+940    	; 0xef58 <fputc>
    ebac:	e8 cf       	rjmp	.-48     	; 0xeb7e <vfprintf+0x4c>
    ebae:	91 2c       	mov	r9, r1
    ebb0:	21 2c       	mov	r2, r1
    ebb2:	31 2c       	mov	r3, r1
    ebb4:	ff e1       	ldi	r31, 0x1F	; 31
    ebb6:	f3 15       	cp	r31, r3
    ebb8:	d8 f0       	brcs	.+54     	; 0xebf0 <vfprintf+0xbe>
    ebba:	8b 32       	cpi	r24, 0x2B	; 43
    ebbc:	79 f0       	breq	.+30     	; 0xebdc <vfprintf+0xaa>
    ebbe:	38 f4       	brcc	.+14     	; 0xebce <vfprintf+0x9c>
    ebc0:	80 32       	cpi	r24, 0x20	; 32
    ebc2:	79 f0       	breq	.+30     	; 0xebe2 <vfprintf+0xb0>
    ebc4:	83 32       	cpi	r24, 0x23	; 35
    ebc6:	a1 f4       	brne	.+40     	; 0xebf0 <vfprintf+0xbe>
    ebc8:	23 2d       	mov	r18, r3
    ebca:	20 61       	ori	r18, 0x10	; 16
    ebcc:	1d c0       	rjmp	.+58     	; 0xec08 <vfprintf+0xd6>
    ebce:	8d 32       	cpi	r24, 0x2D	; 45
    ebd0:	61 f0       	breq	.+24     	; 0xebea <vfprintf+0xb8>
    ebd2:	80 33       	cpi	r24, 0x30	; 48
    ebd4:	69 f4       	brne	.+26     	; 0xebf0 <vfprintf+0xbe>
    ebd6:	23 2d       	mov	r18, r3
    ebd8:	21 60       	ori	r18, 0x01	; 1
    ebda:	16 c0       	rjmp	.+44     	; 0xec08 <vfprintf+0xd6>
    ebdc:	83 2d       	mov	r24, r3
    ebde:	82 60       	ori	r24, 0x02	; 2
    ebe0:	38 2e       	mov	r3, r24
    ebe2:	e3 2d       	mov	r30, r3
    ebe4:	e4 60       	ori	r30, 0x04	; 4
    ebe6:	3e 2e       	mov	r3, r30
    ebe8:	2a c0       	rjmp	.+84     	; 0xec3e <vfprintf+0x10c>
    ebea:	f3 2d       	mov	r31, r3
    ebec:	f8 60       	ori	r31, 0x08	; 8
    ebee:	1d c0       	rjmp	.+58     	; 0xec2a <vfprintf+0xf8>
    ebf0:	37 fc       	sbrc	r3, 7
    ebf2:	2d c0       	rjmp	.+90     	; 0xec4e <vfprintf+0x11c>
    ebf4:	20 ed       	ldi	r18, 0xD0	; 208
    ebf6:	28 0f       	add	r18, r24
    ebf8:	2a 30       	cpi	r18, 0x0A	; 10
    ebfa:	40 f0       	brcs	.+16     	; 0xec0c <vfprintf+0xda>
    ebfc:	8e 32       	cpi	r24, 0x2E	; 46
    ebfe:	b9 f4       	brne	.+46     	; 0xec2e <vfprintf+0xfc>
    ec00:	36 fc       	sbrc	r3, 6
    ec02:	75 c1       	rjmp	.+746    	; 0xeeee <vfprintf+0x3bc>
    ec04:	23 2d       	mov	r18, r3
    ec06:	20 64       	ori	r18, 0x40	; 64
    ec08:	32 2e       	mov	r3, r18
    ec0a:	19 c0       	rjmp	.+50     	; 0xec3e <vfprintf+0x10c>
    ec0c:	36 fe       	sbrs	r3, 6
    ec0e:	06 c0       	rjmp	.+12     	; 0xec1c <vfprintf+0xea>
    ec10:	8a e0       	ldi	r24, 0x0A	; 10
    ec12:	98 9e       	mul	r9, r24
    ec14:	20 0d       	add	r18, r0
    ec16:	11 24       	eor	r1, r1
    ec18:	92 2e       	mov	r9, r18
    ec1a:	11 c0       	rjmp	.+34     	; 0xec3e <vfprintf+0x10c>
    ec1c:	ea e0       	ldi	r30, 0x0A	; 10
    ec1e:	2e 9e       	mul	r2, r30
    ec20:	20 0d       	add	r18, r0
    ec22:	11 24       	eor	r1, r1
    ec24:	22 2e       	mov	r2, r18
    ec26:	f3 2d       	mov	r31, r3
    ec28:	f0 62       	ori	r31, 0x20	; 32
    ec2a:	3f 2e       	mov	r3, r31
    ec2c:	08 c0       	rjmp	.+16     	; 0xec3e <vfprintf+0x10c>
    ec2e:	8c 36       	cpi	r24, 0x6C	; 108
    ec30:	21 f4       	brne	.+8      	; 0xec3a <vfprintf+0x108>
    ec32:	83 2d       	mov	r24, r3
    ec34:	80 68       	ori	r24, 0x80	; 128
    ec36:	38 2e       	mov	r3, r24
    ec38:	02 c0       	rjmp	.+4      	; 0xec3e <vfprintf+0x10c>
    ec3a:	88 36       	cpi	r24, 0x68	; 104
    ec3c:	41 f4       	brne	.+16     	; 0xec4e <vfprintf+0x11c>
    ec3e:	f7 01       	movw	r30, r14
    ec40:	93 fd       	sbrc	r25, 3
    ec42:	85 91       	lpm	r24, Z+
    ec44:	93 ff       	sbrs	r25, 3
    ec46:	81 91       	ld	r24, Z+
    ec48:	7f 01       	movw	r14, r30
    ec4a:	81 11       	cpse	r24, r1
    ec4c:	b3 cf       	rjmp	.-154    	; 0xebb4 <vfprintf+0x82>
    ec4e:	98 2f       	mov	r25, r24
    ec50:	9f 7d       	andi	r25, 0xDF	; 223
    ec52:	95 54       	subi	r25, 0x45	; 69
    ec54:	93 30       	cpi	r25, 0x03	; 3
    ec56:	28 f4       	brcc	.+10     	; 0xec62 <vfprintf+0x130>
    ec58:	0c 5f       	subi	r16, 0xFC	; 252
    ec5a:	1f 4f       	sbci	r17, 0xFF	; 255
    ec5c:	9f e3       	ldi	r25, 0x3F	; 63
    ec5e:	99 83       	std	Y+1, r25	; 0x01
    ec60:	0d c0       	rjmp	.+26     	; 0xec7c <vfprintf+0x14a>
    ec62:	83 36       	cpi	r24, 0x63	; 99
    ec64:	31 f0       	breq	.+12     	; 0xec72 <vfprintf+0x140>
    ec66:	83 37       	cpi	r24, 0x73	; 115
    ec68:	71 f0       	breq	.+28     	; 0xec86 <vfprintf+0x154>
    ec6a:	83 35       	cpi	r24, 0x53	; 83
    ec6c:	09 f0       	breq	.+2      	; 0xec70 <vfprintf+0x13e>
    ec6e:	55 c0       	rjmp	.+170    	; 0xed1a <vfprintf+0x1e8>
    ec70:	20 c0       	rjmp	.+64     	; 0xecb2 <vfprintf+0x180>
    ec72:	f8 01       	movw	r30, r16
    ec74:	80 81       	ld	r24, Z
    ec76:	89 83       	std	Y+1, r24	; 0x01
    ec78:	0e 5f       	subi	r16, 0xFE	; 254
    ec7a:	1f 4f       	sbci	r17, 0xFF	; 255
    ec7c:	88 24       	eor	r8, r8
    ec7e:	83 94       	inc	r8
    ec80:	91 2c       	mov	r9, r1
    ec82:	53 01       	movw	r10, r6
    ec84:	12 c0       	rjmp	.+36     	; 0xecaa <vfprintf+0x178>
    ec86:	28 01       	movw	r4, r16
    ec88:	f2 e0       	ldi	r31, 0x02	; 2
    ec8a:	4f 0e       	add	r4, r31
    ec8c:	51 1c       	adc	r5, r1
    ec8e:	f8 01       	movw	r30, r16
    ec90:	a0 80       	ld	r10, Z
    ec92:	b1 80       	ldd	r11, Z+1	; 0x01
    ec94:	36 fe       	sbrs	r3, 6
    ec96:	03 c0       	rjmp	.+6      	; 0xec9e <vfprintf+0x16c>
    ec98:	69 2d       	mov	r22, r9
    ec9a:	70 e0       	ldi	r23, 0x00	; 0
    ec9c:	02 c0       	rjmp	.+4      	; 0xeca2 <vfprintf+0x170>
    ec9e:	6f ef       	ldi	r22, 0xFF	; 255
    eca0:	7f ef       	ldi	r23, 0xFF	; 255
    eca2:	c5 01       	movw	r24, r10
    eca4:	4e d1       	rcall	.+668    	; 0xef42 <strnlen>
    eca6:	4c 01       	movw	r8, r24
    eca8:	82 01       	movw	r16, r4
    ecaa:	f3 2d       	mov	r31, r3
    ecac:	ff 77       	andi	r31, 0x7F	; 127
    ecae:	3f 2e       	mov	r3, r31
    ecb0:	15 c0       	rjmp	.+42     	; 0xecdc <vfprintf+0x1aa>
    ecb2:	28 01       	movw	r4, r16
    ecb4:	22 e0       	ldi	r18, 0x02	; 2
    ecb6:	42 0e       	add	r4, r18
    ecb8:	51 1c       	adc	r5, r1
    ecba:	f8 01       	movw	r30, r16
    ecbc:	a0 80       	ld	r10, Z
    ecbe:	b1 80       	ldd	r11, Z+1	; 0x01
    ecc0:	36 fe       	sbrs	r3, 6
    ecc2:	03 c0       	rjmp	.+6      	; 0xecca <vfprintf+0x198>
    ecc4:	69 2d       	mov	r22, r9
    ecc6:	70 e0       	ldi	r23, 0x00	; 0
    ecc8:	02 c0       	rjmp	.+4      	; 0xecce <vfprintf+0x19c>
    ecca:	6f ef       	ldi	r22, 0xFF	; 255
    eccc:	7f ef       	ldi	r23, 0xFF	; 255
    ecce:	c5 01       	movw	r24, r10
    ecd0:	2d d1       	rcall	.+602    	; 0xef2c <strnlen_P>
    ecd2:	4c 01       	movw	r8, r24
    ecd4:	f3 2d       	mov	r31, r3
    ecd6:	f0 68       	ori	r31, 0x80	; 128
    ecd8:	3f 2e       	mov	r3, r31
    ecda:	82 01       	movw	r16, r4
    ecdc:	33 fc       	sbrc	r3, 3
    ecde:	19 c0       	rjmp	.+50     	; 0xed12 <vfprintf+0x1e0>
    ece0:	82 2d       	mov	r24, r2
    ece2:	90 e0       	ldi	r25, 0x00	; 0
    ece4:	88 16       	cp	r8, r24
    ece6:	99 06       	cpc	r9, r25
    ece8:	a0 f4       	brcc	.+40     	; 0xed12 <vfprintf+0x1e0>
    ecea:	b6 01       	movw	r22, r12
    ecec:	80 e2       	ldi	r24, 0x20	; 32
    ecee:	90 e0       	ldi	r25, 0x00	; 0
    ecf0:	33 d1       	rcall	.+614    	; 0xef58 <fputc>
    ecf2:	2a 94       	dec	r2
    ecf4:	f5 cf       	rjmp	.-22     	; 0xece0 <vfprintf+0x1ae>
    ecf6:	f5 01       	movw	r30, r10
    ecf8:	37 fc       	sbrc	r3, 7
    ecfa:	85 91       	lpm	r24, Z+
    ecfc:	37 fe       	sbrs	r3, 7
    ecfe:	81 91       	ld	r24, Z+
    ed00:	5f 01       	movw	r10, r30
    ed02:	b6 01       	movw	r22, r12
    ed04:	90 e0       	ldi	r25, 0x00	; 0
    ed06:	28 d1       	rcall	.+592    	; 0xef58 <fputc>
    ed08:	21 10       	cpse	r2, r1
    ed0a:	2a 94       	dec	r2
    ed0c:	21 e0       	ldi	r18, 0x01	; 1
    ed0e:	82 1a       	sub	r8, r18
    ed10:	91 08       	sbc	r9, r1
    ed12:	81 14       	cp	r8, r1
    ed14:	91 04       	cpc	r9, r1
    ed16:	79 f7       	brne	.-34     	; 0xecf6 <vfprintf+0x1c4>
    ed18:	e1 c0       	rjmp	.+450    	; 0xeedc <vfprintf+0x3aa>
    ed1a:	84 36       	cpi	r24, 0x64	; 100
    ed1c:	11 f0       	breq	.+4      	; 0xed22 <vfprintf+0x1f0>
    ed1e:	89 36       	cpi	r24, 0x69	; 105
    ed20:	39 f5       	brne	.+78     	; 0xed70 <vfprintf+0x23e>
    ed22:	f8 01       	movw	r30, r16
    ed24:	37 fe       	sbrs	r3, 7
    ed26:	07 c0       	rjmp	.+14     	; 0xed36 <vfprintf+0x204>
    ed28:	60 81       	ld	r22, Z
    ed2a:	71 81       	ldd	r23, Z+1	; 0x01
    ed2c:	82 81       	ldd	r24, Z+2	; 0x02
    ed2e:	93 81       	ldd	r25, Z+3	; 0x03
    ed30:	0c 5f       	subi	r16, 0xFC	; 252
    ed32:	1f 4f       	sbci	r17, 0xFF	; 255
    ed34:	08 c0       	rjmp	.+16     	; 0xed46 <vfprintf+0x214>
    ed36:	60 81       	ld	r22, Z
    ed38:	71 81       	ldd	r23, Z+1	; 0x01
    ed3a:	07 2e       	mov	r0, r23
    ed3c:	00 0c       	add	r0, r0
    ed3e:	88 0b       	sbc	r24, r24
    ed40:	99 0b       	sbc	r25, r25
    ed42:	0e 5f       	subi	r16, 0xFE	; 254
    ed44:	1f 4f       	sbci	r17, 0xFF	; 255
    ed46:	f3 2d       	mov	r31, r3
    ed48:	ff 76       	andi	r31, 0x6F	; 111
    ed4a:	3f 2e       	mov	r3, r31
    ed4c:	97 ff       	sbrs	r25, 7
    ed4e:	09 c0       	rjmp	.+18     	; 0xed62 <vfprintf+0x230>
    ed50:	90 95       	com	r25
    ed52:	80 95       	com	r24
    ed54:	70 95       	com	r23
    ed56:	61 95       	neg	r22
    ed58:	7f 4f       	sbci	r23, 0xFF	; 255
    ed5a:	8f 4f       	sbci	r24, 0xFF	; 255
    ed5c:	9f 4f       	sbci	r25, 0xFF	; 255
    ed5e:	f0 68       	ori	r31, 0x80	; 128
    ed60:	3f 2e       	mov	r3, r31
    ed62:	2a e0       	ldi	r18, 0x0A	; 10
    ed64:	30 e0       	ldi	r19, 0x00	; 0
    ed66:	a3 01       	movw	r20, r6
    ed68:	33 d1       	rcall	.+614    	; 0xefd0 <__ultoa_invert>
    ed6a:	88 2e       	mov	r8, r24
    ed6c:	86 18       	sub	r8, r6
    ed6e:	44 c0       	rjmp	.+136    	; 0xedf8 <vfprintf+0x2c6>
    ed70:	85 37       	cpi	r24, 0x75	; 117
    ed72:	31 f4       	brne	.+12     	; 0xed80 <vfprintf+0x24e>
    ed74:	23 2d       	mov	r18, r3
    ed76:	2f 7e       	andi	r18, 0xEF	; 239
    ed78:	b2 2e       	mov	r11, r18
    ed7a:	2a e0       	ldi	r18, 0x0A	; 10
    ed7c:	30 e0       	ldi	r19, 0x00	; 0
    ed7e:	25 c0       	rjmp	.+74     	; 0xedca <vfprintf+0x298>
    ed80:	93 2d       	mov	r25, r3
    ed82:	99 7f       	andi	r25, 0xF9	; 249
    ed84:	b9 2e       	mov	r11, r25
    ed86:	8f 36       	cpi	r24, 0x6F	; 111
    ed88:	c1 f0       	breq	.+48     	; 0xedba <vfprintf+0x288>
    ed8a:	18 f4       	brcc	.+6      	; 0xed92 <vfprintf+0x260>
    ed8c:	88 35       	cpi	r24, 0x58	; 88
    ed8e:	79 f0       	breq	.+30     	; 0xedae <vfprintf+0x27c>
    ed90:	ae c0       	rjmp	.+348    	; 0xeeee <vfprintf+0x3bc>
    ed92:	80 37       	cpi	r24, 0x70	; 112
    ed94:	19 f0       	breq	.+6      	; 0xed9c <vfprintf+0x26a>
    ed96:	88 37       	cpi	r24, 0x78	; 120
    ed98:	21 f0       	breq	.+8      	; 0xeda2 <vfprintf+0x270>
    ed9a:	a9 c0       	rjmp	.+338    	; 0xeeee <vfprintf+0x3bc>
    ed9c:	e9 2f       	mov	r30, r25
    ed9e:	e0 61       	ori	r30, 0x10	; 16
    eda0:	be 2e       	mov	r11, r30
    eda2:	b4 fe       	sbrs	r11, 4
    eda4:	0d c0       	rjmp	.+26     	; 0xedc0 <vfprintf+0x28e>
    eda6:	fb 2d       	mov	r31, r11
    eda8:	f4 60       	ori	r31, 0x04	; 4
    edaa:	bf 2e       	mov	r11, r31
    edac:	09 c0       	rjmp	.+18     	; 0xedc0 <vfprintf+0x28e>
    edae:	34 fe       	sbrs	r3, 4
    edb0:	0a c0       	rjmp	.+20     	; 0xedc6 <vfprintf+0x294>
    edb2:	29 2f       	mov	r18, r25
    edb4:	26 60       	ori	r18, 0x06	; 6
    edb6:	b2 2e       	mov	r11, r18
    edb8:	06 c0       	rjmp	.+12     	; 0xedc6 <vfprintf+0x294>
    edba:	28 e0       	ldi	r18, 0x08	; 8
    edbc:	30 e0       	ldi	r19, 0x00	; 0
    edbe:	05 c0       	rjmp	.+10     	; 0xedca <vfprintf+0x298>
    edc0:	20 e1       	ldi	r18, 0x10	; 16
    edc2:	30 e0       	ldi	r19, 0x00	; 0
    edc4:	02 c0       	rjmp	.+4      	; 0xedca <vfprintf+0x298>
    edc6:	20 e1       	ldi	r18, 0x10	; 16
    edc8:	32 e0       	ldi	r19, 0x02	; 2
    edca:	f8 01       	movw	r30, r16
    edcc:	b7 fe       	sbrs	r11, 7
    edce:	07 c0       	rjmp	.+14     	; 0xedde <vfprintf+0x2ac>
    edd0:	60 81       	ld	r22, Z
    edd2:	71 81       	ldd	r23, Z+1	; 0x01
    edd4:	82 81       	ldd	r24, Z+2	; 0x02
    edd6:	93 81       	ldd	r25, Z+3	; 0x03
    edd8:	0c 5f       	subi	r16, 0xFC	; 252
    edda:	1f 4f       	sbci	r17, 0xFF	; 255
    eddc:	06 c0       	rjmp	.+12     	; 0xedea <vfprintf+0x2b8>
    edde:	60 81       	ld	r22, Z
    ede0:	71 81       	ldd	r23, Z+1	; 0x01
    ede2:	80 e0       	ldi	r24, 0x00	; 0
    ede4:	90 e0       	ldi	r25, 0x00	; 0
    ede6:	0e 5f       	subi	r16, 0xFE	; 254
    ede8:	1f 4f       	sbci	r17, 0xFF	; 255
    edea:	a3 01       	movw	r20, r6
    edec:	f1 d0       	rcall	.+482    	; 0xefd0 <__ultoa_invert>
    edee:	88 2e       	mov	r8, r24
    edf0:	86 18       	sub	r8, r6
    edf2:	fb 2d       	mov	r31, r11
    edf4:	ff 77       	andi	r31, 0x7F	; 127
    edf6:	3f 2e       	mov	r3, r31
    edf8:	36 fe       	sbrs	r3, 6
    edfa:	0d c0       	rjmp	.+26     	; 0xee16 <vfprintf+0x2e4>
    edfc:	23 2d       	mov	r18, r3
    edfe:	2e 7f       	andi	r18, 0xFE	; 254
    ee00:	a2 2e       	mov	r10, r18
    ee02:	89 14       	cp	r8, r9
    ee04:	58 f4       	brcc	.+22     	; 0xee1c <vfprintf+0x2ea>
    ee06:	34 fe       	sbrs	r3, 4
    ee08:	0b c0       	rjmp	.+22     	; 0xee20 <vfprintf+0x2ee>
    ee0a:	32 fc       	sbrc	r3, 2
    ee0c:	09 c0       	rjmp	.+18     	; 0xee20 <vfprintf+0x2ee>
    ee0e:	83 2d       	mov	r24, r3
    ee10:	8e 7e       	andi	r24, 0xEE	; 238
    ee12:	a8 2e       	mov	r10, r24
    ee14:	05 c0       	rjmp	.+10     	; 0xee20 <vfprintf+0x2ee>
    ee16:	b8 2c       	mov	r11, r8
    ee18:	a3 2c       	mov	r10, r3
    ee1a:	03 c0       	rjmp	.+6      	; 0xee22 <vfprintf+0x2f0>
    ee1c:	b8 2c       	mov	r11, r8
    ee1e:	01 c0       	rjmp	.+2      	; 0xee22 <vfprintf+0x2f0>
    ee20:	b9 2c       	mov	r11, r9
    ee22:	a4 fe       	sbrs	r10, 4
    ee24:	0f c0       	rjmp	.+30     	; 0xee44 <vfprintf+0x312>
    ee26:	fe 01       	movw	r30, r28
    ee28:	e8 0d       	add	r30, r8
    ee2a:	f1 1d       	adc	r31, r1
    ee2c:	80 81       	ld	r24, Z
    ee2e:	80 33       	cpi	r24, 0x30	; 48
    ee30:	21 f4       	brne	.+8      	; 0xee3a <vfprintf+0x308>
    ee32:	9a 2d       	mov	r25, r10
    ee34:	99 7e       	andi	r25, 0xE9	; 233
    ee36:	a9 2e       	mov	r10, r25
    ee38:	09 c0       	rjmp	.+18     	; 0xee4c <vfprintf+0x31a>
    ee3a:	a2 fe       	sbrs	r10, 2
    ee3c:	06 c0       	rjmp	.+12     	; 0xee4a <vfprintf+0x318>
    ee3e:	b3 94       	inc	r11
    ee40:	b3 94       	inc	r11
    ee42:	04 c0       	rjmp	.+8      	; 0xee4c <vfprintf+0x31a>
    ee44:	8a 2d       	mov	r24, r10
    ee46:	86 78       	andi	r24, 0x86	; 134
    ee48:	09 f0       	breq	.+2      	; 0xee4c <vfprintf+0x31a>
    ee4a:	b3 94       	inc	r11
    ee4c:	a3 fc       	sbrc	r10, 3
    ee4e:	10 c0       	rjmp	.+32     	; 0xee70 <vfprintf+0x33e>
    ee50:	a0 fe       	sbrs	r10, 0
    ee52:	06 c0       	rjmp	.+12     	; 0xee60 <vfprintf+0x32e>
    ee54:	b2 14       	cp	r11, r2
    ee56:	80 f4       	brcc	.+32     	; 0xee78 <vfprintf+0x346>
    ee58:	28 0c       	add	r2, r8
    ee5a:	92 2c       	mov	r9, r2
    ee5c:	9b 18       	sub	r9, r11
    ee5e:	0d c0       	rjmp	.+26     	; 0xee7a <vfprintf+0x348>
    ee60:	b2 14       	cp	r11, r2
    ee62:	58 f4       	brcc	.+22     	; 0xee7a <vfprintf+0x348>
    ee64:	b6 01       	movw	r22, r12
    ee66:	80 e2       	ldi	r24, 0x20	; 32
    ee68:	90 e0       	ldi	r25, 0x00	; 0
    ee6a:	76 d0       	rcall	.+236    	; 0xef58 <fputc>
    ee6c:	b3 94       	inc	r11
    ee6e:	f8 cf       	rjmp	.-16     	; 0xee60 <vfprintf+0x32e>
    ee70:	b2 14       	cp	r11, r2
    ee72:	18 f4       	brcc	.+6      	; 0xee7a <vfprintf+0x348>
    ee74:	2b 18       	sub	r2, r11
    ee76:	02 c0       	rjmp	.+4      	; 0xee7c <vfprintf+0x34a>
    ee78:	98 2c       	mov	r9, r8
    ee7a:	21 2c       	mov	r2, r1
    ee7c:	a4 fe       	sbrs	r10, 4
    ee7e:	0f c0       	rjmp	.+30     	; 0xee9e <vfprintf+0x36c>
    ee80:	b6 01       	movw	r22, r12
    ee82:	80 e3       	ldi	r24, 0x30	; 48
    ee84:	90 e0       	ldi	r25, 0x00	; 0
    ee86:	68 d0       	rcall	.+208    	; 0xef58 <fputc>
    ee88:	a2 fe       	sbrs	r10, 2
    ee8a:	16 c0       	rjmp	.+44     	; 0xeeb8 <vfprintf+0x386>
    ee8c:	a1 fc       	sbrc	r10, 1
    ee8e:	03 c0       	rjmp	.+6      	; 0xee96 <vfprintf+0x364>
    ee90:	88 e7       	ldi	r24, 0x78	; 120
    ee92:	90 e0       	ldi	r25, 0x00	; 0
    ee94:	02 c0       	rjmp	.+4      	; 0xee9a <vfprintf+0x368>
    ee96:	88 e5       	ldi	r24, 0x58	; 88
    ee98:	90 e0       	ldi	r25, 0x00	; 0
    ee9a:	b6 01       	movw	r22, r12
    ee9c:	0c c0       	rjmp	.+24     	; 0xeeb6 <vfprintf+0x384>
    ee9e:	8a 2d       	mov	r24, r10
    eea0:	86 78       	andi	r24, 0x86	; 134
    eea2:	51 f0       	breq	.+20     	; 0xeeb8 <vfprintf+0x386>
    eea4:	a1 fe       	sbrs	r10, 1
    eea6:	02 c0       	rjmp	.+4      	; 0xeeac <vfprintf+0x37a>
    eea8:	8b e2       	ldi	r24, 0x2B	; 43
    eeaa:	01 c0       	rjmp	.+2      	; 0xeeae <vfprintf+0x37c>
    eeac:	80 e2       	ldi	r24, 0x20	; 32
    eeae:	a7 fc       	sbrc	r10, 7
    eeb0:	8d e2       	ldi	r24, 0x2D	; 45
    eeb2:	b6 01       	movw	r22, r12
    eeb4:	90 e0       	ldi	r25, 0x00	; 0
    eeb6:	50 d0       	rcall	.+160    	; 0xef58 <fputc>
    eeb8:	89 14       	cp	r8, r9
    eeba:	30 f4       	brcc	.+12     	; 0xeec8 <vfprintf+0x396>
    eebc:	b6 01       	movw	r22, r12
    eebe:	80 e3       	ldi	r24, 0x30	; 48
    eec0:	90 e0       	ldi	r25, 0x00	; 0
    eec2:	4a d0       	rcall	.+148    	; 0xef58 <fputc>
    eec4:	9a 94       	dec	r9
    eec6:	f8 cf       	rjmp	.-16     	; 0xeeb8 <vfprintf+0x386>
    eec8:	8a 94       	dec	r8
    eeca:	f3 01       	movw	r30, r6
    eecc:	e8 0d       	add	r30, r8
    eece:	f1 1d       	adc	r31, r1
    eed0:	80 81       	ld	r24, Z
    eed2:	b6 01       	movw	r22, r12
    eed4:	90 e0       	ldi	r25, 0x00	; 0
    eed6:	40 d0       	rcall	.+128    	; 0xef58 <fputc>
    eed8:	81 10       	cpse	r8, r1
    eeda:	f6 cf       	rjmp	.-20     	; 0xeec8 <vfprintf+0x396>
    eedc:	22 20       	and	r2, r2
    eede:	09 f4       	brne	.+2      	; 0xeee2 <vfprintf+0x3b0>
    eee0:	4e ce       	rjmp	.-868    	; 0xeb7e <vfprintf+0x4c>
    eee2:	b6 01       	movw	r22, r12
    eee4:	80 e2       	ldi	r24, 0x20	; 32
    eee6:	90 e0       	ldi	r25, 0x00	; 0
    eee8:	37 d0       	rcall	.+110    	; 0xef58 <fputc>
    eeea:	2a 94       	dec	r2
    eeec:	f7 cf       	rjmp	.-18     	; 0xeedc <vfprintf+0x3aa>
    eeee:	f6 01       	movw	r30, r12
    eef0:	86 81       	ldd	r24, Z+6	; 0x06
    eef2:	97 81       	ldd	r25, Z+7	; 0x07
    eef4:	02 c0       	rjmp	.+4      	; 0xeefa <vfprintf+0x3c8>
    eef6:	8f ef       	ldi	r24, 0xFF	; 255
    eef8:	9f ef       	ldi	r25, 0xFF	; 255
    eefa:	2b 96       	adiw	r28, 0x0b	; 11
    eefc:	0f b6       	in	r0, 0x3f	; 63
    eefe:	f8 94       	cli
    ef00:	de bf       	out	0x3e, r29	; 62
    ef02:	0f be       	out	0x3f, r0	; 63
    ef04:	cd bf       	out	0x3d, r28	; 61
    ef06:	df 91       	pop	r29
    ef08:	cf 91       	pop	r28
    ef0a:	1f 91       	pop	r17
    ef0c:	0f 91       	pop	r16
    ef0e:	ff 90       	pop	r15
    ef10:	ef 90       	pop	r14
    ef12:	df 90       	pop	r13
    ef14:	cf 90       	pop	r12
    ef16:	bf 90       	pop	r11
    ef18:	af 90       	pop	r10
    ef1a:	9f 90       	pop	r9
    ef1c:	8f 90       	pop	r8
    ef1e:	7f 90       	pop	r7
    ef20:	6f 90       	pop	r6
    ef22:	5f 90       	pop	r5
    ef24:	4f 90       	pop	r4
    ef26:	3f 90       	pop	r3
    ef28:	2f 90       	pop	r2
    ef2a:	08 95       	ret

0000ef2c <strnlen_P>:
    ef2c:	fc 01       	movw	r30, r24
    ef2e:	05 90       	lpm	r0, Z+
    ef30:	61 50       	subi	r22, 0x01	; 1
    ef32:	70 40       	sbci	r23, 0x00	; 0
    ef34:	01 10       	cpse	r0, r1
    ef36:	d8 f7       	brcc	.-10     	; 0xef2e <strnlen_P+0x2>
    ef38:	80 95       	com	r24
    ef3a:	90 95       	com	r25
    ef3c:	8e 0f       	add	r24, r30
    ef3e:	9f 1f       	adc	r25, r31
    ef40:	08 95       	ret

0000ef42 <strnlen>:
    ef42:	fc 01       	movw	r30, r24
    ef44:	61 50       	subi	r22, 0x01	; 1
    ef46:	70 40       	sbci	r23, 0x00	; 0
    ef48:	01 90       	ld	r0, Z+
    ef4a:	01 10       	cpse	r0, r1
    ef4c:	d8 f7       	brcc	.-10     	; 0xef44 <strnlen+0x2>
    ef4e:	80 95       	com	r24
    ef50:	90 95       	com	r25
    ef52:	8e 0f       	add	r24, r30
    ef54:	9f 1f       	adc	r25, r31
    ef56:	08 95       	ret

0000ef58 <fputc>:
    ef58:	0f 93       	push	r16
    ef5a:	1f 93       	push	r17
    ef5c:	cf 93       	push	r28
    ef5e:	df 93       	push	r29
    ef60:	fb 01       	movw	r30, r22
    ef62:	23 81       	ldd	r18, Z+3	; 0x03
    ef64:	21 fd       	sbrc	r18, 1
    ef66:	03 c0       	rjmp	.+6      	; 0xef6e <fputc+0x16>
    ef68:	8f ef       	ldi	r24, 0xFF	; 255
    ef6a:	9f ef       	ldi	r25, 0xFF	; 255
    ef6c:	2c c0       	rjmp	.+88     	; 0xefc6 <fputc+0x6e>
    ef6e:	22 ff       	sbrs	r18, 2
    ef70:	16 c0       	rjmp	.+44     	; 0xef9e <fputc+0x46>
    ef72:	46 81       	ldd	r20, Z+6	; 0x06
    ef74:	57 81       	ldd	r21, Z+7	; 0x07
    ef76:	24 81       	ldd	r18, Z+4	; 0x04
    ef78:	35 81       	ldd	r19, Z+5	; 0x05
    ef7a:	42 17       	cp	r20, r18
    ef7c:	53 07       	cpc	r21, r19
    ef7e:	44 f4       	brge	.+16     	; 0xef90 <fputc+0x38>
    ef80:	a0 81       	ld	r26, Z
    ef82:	b1 81       	ldd	r27, Z+1	; 0x01
    ef84:	9d 01       	movw	r18, r26
    ef86:	2f 5f       	subi	r18, 0xFF	; 255
    ef88:	3f 4f       	sbci	r19, 0xFF	; 255
    ef8a:	31 83       	std	Z+1, r19	; 0x01
    ef8c:	20 83       	st	Z, r18
    ef8e:	8c 93       	st	X, r24
    ef90:	26 81       	ldd	r18, Z+6	; 0x06
    ef92:	37 81       	ldd	r19, Z+7	; 0x07
    ef94:	2f 5f       	subi	r18, 0xFF	; 255
    ef96:	3f 4f       	sbci	r19, 0xFF	; 255
    ef98:	37 83       	std	Z+7, r19	; 0x07
    ef9a:	26 83       	std	Z+6, r18	; 0x06
    ef9c:	14 c0       	rjmp	.+40     	; 0xefc6 <fputc+0x6e>
    ef9e:	8b 01       	movw	r16, r22
    efa0:	ec 01       	movw	r28, r24
    efa2:	fb 01       	movw	r30, r22
    efa4:	00 84       	ldd	r0, Z+8	; 0x08
    efa6:	f1 85       	ldd	r31, Z+9	; 0x09
    efa8:	e0 2d       	mov	r30, r0
    efaa:	09 95       	icall
    efac:	89 2b       	or	r24, r25
    efae:	e1 f6       	brne	.-72     	; 0xef68 <fputc+0x10>
    efb0:	d8 01       	movw	r26, r16
    efb2:	16 96       	adiw	r26, 0x06	; 6
    efb4:	8d 91       	ld	r24, X+
    efb6:	9c 91       	ld	r25, X
    efb8:	17 97       	sbiw	r26, 0x07	; 7
    efba:	01 96       	adiw	r24, 0x01	; 1
    efbc:	17 96       	adiw	r26, 0x07	; 7
    efbe:	9c 93       	st	X, r25
    efc0:	8e 93       	st	-X, r24
    efc2:	16 97       	sbiw	r26, 0x06	; 6
    efc4:	ce 01       	movw	r24, r28
    efc6:	df 91       	pop	r29
    efc8:	cf 91       	pop	r28
    efca:	1f 91       	pop	r17
    efcc:	0f 91       	pop	r16
    efce:	08 95       	ret

0000efd0 <__ultoa_invert>:
    efd0:	fa 01       	movw	r30, r20
    efd2:	aa 27       	eor	r26, r26
    efd4:	28 30       	cpi	r18, 0x08	; 8
    efd6:	51 f1       	breq	.+84     	; 0xf02c <__ultoa_invert+0x5c>
    efd8:	20 31       	cpi	r18, 0x10	; 16
    efda:	81 f1       	breq	.+96     	; 0xf03c <__ultoa_invert+0x6c>
    efdc:	e8 94       	clt
    efde:	6f 93       	push	r22
    efe0:	6e 7f       	andi	r22, 0xFE	; 254
    efe2:	6e 5f       	subi	r22, 0xFE	; 254
    efe4:	7f 4f       	sbci	r23, 0xFF	; 255
    efe6:	8f 4f       	sbci	r24, 0xFF	; 255
    efe8:	9f 4f       	sbci	r25, 0xFF	; 255
    efea:	af 4f       	sbci	r26, 0xFF	; 255
    efec:	b1 e0       	ldi	r27, 0x01	; 1
    efee:	3e d0       	rcall	.+124    	; 0xf06c <__ultoa_invert+0x9c>
    eff0:	b4 e0       	ldi	r27, 0x04	; 4
    eff2:	3c d0       	rcall	.+120    	; 0xf06c <__ultoa_invert+0x9c>
    eff4:	67 0f       	add	r22, r23
    eff6:	78 1f       	adc	r23, r24
    eff8:	89 1f       	adc	r24, r25
    effa:	9a 1f       	adc	r25, r26
    effc:	a1 1d       	adc	r26, r1
    effe:	68 0f       	add	r22, r24
    f000:	79 1f       	adc	r23, r25
    f002:	8a 1f       	adc	r24, r26
    f004:	91 1d       	adc	r25, r1
    f006:	a1 1d       	adc	r26, r1
    f008:	6a 0f       	add	r22, r26
    f00a:	71 1d       	adc	r23, r1
    f00c:	81 1d       	adc	r24, r1
    f00e:	91 1d       	adc	r25, r1
    f010:	a1 1d       	adc	r26, r1
    f012:	20 d0       	rcall	.+64     	; 0xf054 <__ultoa_invert+0x84>
    f014:	09 f4       	brne	.+2      	; 0xf018 <__ultoa_invert+0x48>
    f016:	68 94       	set
    f018:	3f 91       	pop	r19
    f01a:	2a e0       	ldi	r18, 0x0A	; 10
    f01c:	26 9f       	mul	r18, r22
    f01e:	11 24       	eor	r1, r1
    f020:	30 19       	sub	r19, r0
    f022:	30 5d       	subi	r19, 0xD0	; 208
    f024:	31 93       	st	Z+, r19
    f026:	de f6       	brtc	.-74     	; 0xefde <__ultoa_invert+0xe>
    f028:	cf 01       	movw	r24, r30
    f02a:	08 95       	ret
    f02c:	46 2f       	mov	r20, r22
    f02e:	47 70       	andi	r20, 0x07	; 7
    f030:	40 5d       	subi	r20, 0xD0	; 208
    f032:	41 93       	st	Z+, r20
    f034:	b3 e0       	ldi	r27, 0x03	; 3
    f036:	0f d0       	rcall	.+30     	; 0xf056 <__ultoa_invert+0x86>
    f038:	c9 f7       	brne	.-14     	; 0xf02c <__ultoa_invert+0x5c>
    f03a:	f6 cf       	rjmp	.-20     	; 0xf028 <__ultoa_invert+0x58>
    f03c:	46 2f       	mov	r20, r22
    f03e:	4f 70       	andi	r20, 0x0F	; 15
    f040:	40 5d       	subi	r20, 0xD0	; 208
    f042:	4a 33       	cpi	r20, 0x3A	; 58
    f044:	18 f0       	brcs	.+6      	; 0xf04c <__ultoa_invert+0x7c>
    f046:	49 5d       	subi	r20, 0xD9	; 217
    f048:	31 fd       	sbrc	r19, 1
    f04a:	40 52       	subi	r20, 0x20	; 32
    f04c:	41 93       	st	Z+, r20
    f04e:	02 d0       	rcall	.+4      	; 0xf054 <__ultoa_invert+0x84>
    f050:	a9 f7       	brne	.-22     	; 0xf03c <__ultoa_invert+0x6c>
    f052:	ea cf       	rjmp	.-44     	; 0xf028 <__ultoa_invert+0x58>
    f054:	b4 e0       	ldi	r27, 0x04	; 4
    f056:	a6 95       	lsr	r26
    f058:	97 95       	ror	r25
    f05a:	87 95       	ror	r24
    f05c:	77 95       	ror	r23
    f05e:	67 95       	ror	r22
    f060:	ba 95       	dec	r27
    f062:	c9 f7       	brne	.-14     	; 0xf056 <__ultoa_invert+0x86>
    f064:	00 97       	sbiw	r24, 0x00	; 0
    f066:	61 05       	cpc	r22, r1
    f068:	71 05       	cpc	r23, r1
    f06a:	08 95       	ret
    f06c:	9b 01       	movw	r18, r22
    f06e:	ac 01       	movw	r20, r24
    f070:	0a 2e       	mov	r0, r26
    f072:	06 94       	lsr	r0
    f074:	57 95       	ror	r21
    f076:	47 95       	ror	r20
    f078:	37 95       	ror	r19
    f07a:	27 95       	ror	r18
    f07c:	ba 95       	dec	r27
    f07e:	c9 f7       	brne	.-14     	; 0xf072 <__ultoa_invert+0xa2>
    f080:	62 0f       	add	r22, r18
    f082:	73 1f       	adc	r23, r19
    f084:	84 1f       	adc	r24, r20
    f086:	95 1f       	adc	r25, r21
    f088:	a0 1d       	adc	r26, r0
    f08a:	08 95       	ret

0000f08c <_exit>:
    f08c:	f8 94       	cli

0000f08e <__stop_program>:
    f08e:	ff cf       	rjmp	.-2      	; 0xf08e <__stop_program>
