
RFID_Smart_Reader.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000152  00800100  0000f08a  0000f11e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000f08a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000aa0  00800252  00800252  0000f270  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000f270  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000f2cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000e58  00000000  00000000  0000f308  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00037aad  00000000  00000000  00010160  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000021ad  00000000  00000000  00047c0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000fb78  00000000  00000000  00049dba  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00006820  00000000  00000000  00059934  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0001889d  00000000  00000000  00060154  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00030e8b  00000000  00000000  000789f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00001650  00000000  00000000  000a987c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000053e5  00000000  00000000  000aaecc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	86 c2       	rjmp	.+1292   	; 0x50e <__ctors_end>
       2:	00 00       	nop
       4:	a2 c2       	rjmp	.+1348   	; 0x54a <__bad_interrupt>
       6:	00 00       	nop
       8:	a0 c2       	rjmp	.+1344   	; 0x54a <__bad_interrupt>
       a:	00 00       	nop
       c:	9e c2       	rjmp	.+1340   	; 0x54a <__bad_interrupt>
       e:	00 00       	nop
      10:	9c c2       	rjmp	.+1336   	; 0x54a <__bad_interrupt>
      12:	00 00       	nop
      14:	9a c2       	rjmp	.+1332   	; 0x54a <__bad_interrupt>
      16:	00 00       	nop
      18:	98 c2       	rjmp	.+1328   	; 0x54a <__bad_interrupt>
      1a:	00 00       	nop
      1c:	96 c2       	rjmp	.+1324   	; 0x54a <__bad_interrupt>
      1e:	00 00       	nop
      20:	94 c2       	rjmp	.+1320   	; 0x54a <__bad_interrupt>
      22:	00 00       	nop
      24:	92 c2       	rjmp	.+1316   	; 0x54a <__bad_interrupt>
      26:	00 00       	nop
      28:	90 c2       	rjmp	.+1312   	; 0x54a <__bad_interrupt>
      2a:	00 00       	nop
      2c:	8e c2       	rjmp	.+1308   	; 0x54a <__bad_interrupt>
      2e:	00 00       	nop
      30:	8c c2       	rjmp	.+1304   	; 0x54a <__bad_interrupt>
      32:	00 00       	nop
      34:	8a c2       	rjmp	.+1300   	; 0x54a <__bad_interrupt>
      36:	00 00       	nop
      38:	88 c2       	rjmp	.+1296   	; 0x54a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	86 c2       	rjmp	.+1292   	; 0x54a <__bad_interrupt>
      3e:	00 00       	nop
      40:	84 c2       	rjmp	.+1288   	; 0x54a <__bad_interrupt>
      42:	00 00       	nop
      44:	82 c2       	rjmp	.+1284   	; 0x54a <__bad_interrupt>
      46:	00 00       	nop
      48:	0c 94 62 72 	jmp	0xe4c4	; 0xe4c4 <__vector_18>
      4c:	7e c2       	rjmp	.+1276   	; 0x54a <__bad_interrupt>
      4e:	00 00       	nop
      50:	7c c2       	rjmp	.+1272   	; 0x54a <__bad_interrupt>
      52:	00 00       	nop
      54:	7a c2       	rjmp	.+1268   	; 0x54a <__bad_interrupt>
      56:	00 00       	nop
      58:	78 c2       	rjmp	.+1264   	; 0x54a <__bad_interrupt>
      5a:	00 00       	nop
      5c:	76 c2       	rjmp	.+1260   	; 0x54a <__bad_interrupt>
      5e:	00 00       	nop
      60:	74 c2       	rjmp	.+1256   	; 0x54a <__bad_interrupt>
      62:	00 00       	nop
      64:	72 c2       	rjmp	.+1252   	; 0x54a <__bad_interrupt>
      66:	00 00       	nop
      68:	70 c2       	rjmp	.+1248   	; 0x54a <__bad_interrupt>
      6a:	00 00       	nop
      6c:	6e c2       	rjmp	.+1244   	; 0x54a <__bad_interrupt>
      6e:	00 00       	nop
      70:	6c c2       	rjmp	.+1240   	; 0x54a <__bad_interrupt>
      72:	00 00       	nop
      74:	6a c2       	rjmp	.+1236   	; 0x54a <__bad_interrupt>
      76:	00 00       	nop
      78:	68 c2       	rjmp	.+1232   	; 0x54a <__bad_interrupt>
      7a:	00 00       	nop
      7c:	66 c2       	rjmp	.+1228   	; 0x54a <__bad_interrupt>
      7e:	00 00       	nop
      80:	64 c2       	rjmp	.+1224   	; 0x54a <__bad_interrupt>
      82:	00 00       	nop
      84:	62 c2       	rjmp	.+1220   	; 0x54a <__bad_interrupt>
      86:	00 00       	nop
      88:	60 c2       	rjmp	.+1216   	; 0x54a <__bad_interrupt>
      8a:	00 00       	nop
      8c:	34 08       	sbc	r3, r4
      8e:	45 08       	sbc	r4, r5
      90:	98 08       	sbc	r9, r8
      92:	a9 08       	sbc	r10, r9
      94:	7b 0c       	add	r7, r11
      96:	94 0c       	add	r9, r4
      98:	7f 0f       	add	r23, r31
      9a:	e1 0a       	sbc	r14, r17
      9c:	30 0b       	sbc	r19, r16
      9e:	92 09       	sbc	r25, r2
      a0:	1a 0a       	sbc	r1, r26
      a2:	35 0a       	sbc	r3, r21
      a4:	c2 0b       	sbc	r28, r18
      a6:	6d 0f       	add	r22, r29
      a8:	3d 0a       	sbc	r3, r29
      aa:	3d 0a       	sbc	r3, r29
      ac:	b6 0d       	add	r27, r6
      ae:	9c 0c       	add	r9, r12
      b0:	a5 0c       	add	r10, r5
      b2:	ad 0c       	add	r10, r13
      b4:	b3 0c       	add	r11, r3
      b6:	ba 0c       	add	r11, r10
      b8:	c2 0c       	add	r12, r2
      ba:	d4 0c       	add	r13, r4
      bc:	cb 0c       	add	r12, r11
      be:	f1 0c       	add	r15, r1
      c0:	fa 0c       	add	r15, r10
      c2:	df 0c       	add	r13, r15
      c4:	75 0f       	add	r23, r21
      c6:	75 0f       	add	r23, r21
      c8:	75 0f       	add	r23, r21
      ca:	75 0f       	add	r23, r21
      cc:	75 0f       	add	r23, r21
      ce:	75 0f       	add	r23, r21
      d0:	10 09       	sbc	r17, r0
      d2:	10 09       	sbc	r17, r0
      d4:	37 09       	sbc	r19, r7
      d6:	3f 09       	sbc	r19, r15
      d8:	23 0a       	sbc	r2, r19
      da:	2c 0a       	sbc	r2, r28
      dc:	d7 0d       	add	r29, r7
      de:	47 09       	sbc	r20, r7
      e0:	4c 09       	sbc	r20, r12
      e2:	51 09       	sbc	r21, r1
      e4:	5f 0c       	add	r5, r15
      e6:	68 0c       	add	r6, r8
      e8:	df 0d       	add	r29, r15
      ea:	e7 0d       	add	r30, r7
      ec:	ef 0d       	add	r30, r15
      ee:	67 0e       	add	r6, r23
      f0:	cf 0d       	add	r28, r15
      f2:	09 0c       	add	r0, r9
      f4:	23 0c       	add	r2, r3
      f6:	ba 08       	sbc	r11, r10
      f8:	c7 0d       	add	r28, r7
      fa:	43 0c       	add	r4, r3
      fc:	33 0c       	add	r3, r3
      fe:	3b 0c       	add	r3, r11
     100:	2b 0c       	add	r2, r11
     102:	97 0e       	add	r9, r23
     104:	a9 0e       	add	r10, r25
     106:	2f 08       	sbc	r2, r15
     108:	75 0f       	add	r23, r21
     10a:	cb 0e       	add	r12, r27
     10c:	b2 0e       	add	r11, r18
     10e:	85 08       	sbc	r8, r5
     110:	5e 09       	sbc	r21, r14
     112:	d3 0e       	add	r13, r19
     114:	63 09       	sbc	r22, r3
     116:	0c 0f       	add	r16, r28
     118:	19 0f       	add	r17, r25
     11a:	fe 08       	sbc	r15, r14
     11c:	68 09       	sbc	r22, r8
     11e:	76 09       	sbc	r23, r6
     120:	84 09       	sbc	r24, r4
     122:	db 08       	sbc	r13, r11
     124:	56 09       	sbc	r21, r6
     126:	75 0f       	add	r23, r21
     128:	75 0f       	add	r23, r21
     12a:	75 0f       	add	r23, r21
     12c:	26 0f       	add	r18, r22
     12e:	26 0f       	add	r18, r22
     130:	be 0e       	add	r11, r30
     132:	e2 09       	sbc	r30, r2
     134:	50 0f       	add	r21, r16
     136:	e8 0c       	add	r14, r8
     138:	75 0f       	add	r23, r21
     13a:	75 0f       	add	r23, r21
     13c:	5d 0f       	add	r21, r29
     13e:	65 0f       	add	r22, r21
     140:	a0 0e       	add	r10, r16
     142:	75 0f       	add	r23, r21
     144:	75 0f       	add	r23, r21
     146:	75 0f       	add	r23, r21
     148:	75 0f       	add	r23, r21
     14a:	75 0f       	add	r23, r21
     14c:	0b 0d       	add	r16, r11
     14e:	17 0d       	add	r17, r7
     150:	23 0d       	add	r18, r3
     152:	2f 0d       	add	r18, r15
     154:	3b 0d       	add	r19, r11
     156:	47 0d       	add	r20, r7
     158:	52 0d       	add	r21, r2
     15a:	5d 0d       	add	r21, r13
     15c:	68 0d       	add	r22, r8
     15e:	73 0d       	add	r23, r3
     160:	7e 0d       	add	r23, r14
     162:	8b 0d       	add	r24, r11
     164:	98 0d       	add	r25, r8
     166:	a5 0d       	add	r26, r5
     168:	b1 0d       	add	r27, r1
     16a:	03 0d       	add	r16, r3
     16c:	a5 0f       	add	r26, r21
     16e:	b5 0f       	add	r27, r21
     170:	b5 0f       	add	r27, r21
     172:	b5 0f       	add	r27, r21
     174:	b5 0f       	add	r27, r21
     176:	b5 0f       	add	r27, r21
     178:	b5 0f       	add	r27, r21
     17a:	b5 0f       	add	r27, r21
     17c:	b5 0f       	add	r27, r21
     17e:	b5 0f       	add	r27, r21
     180:	b5 0f       	add	r27, r21
     182:	ac 0f       	add	r26, r28
     184:	ac 0f       	add	r26, r28
     186:	ac 0f       	add	r26, r28
     188:	ac 0f       	add	r26, r28
     18a:	ac 0f       	add	r26, r28
     18c:	ac 0f       	add	r26, r28
     18e:	b5 0f       	add	r27, r21
     190:	ac 0f       	add	r26, r28
     192:	ac 0f       	add	r26, r28
     194:	ac 0f       	add	r26, r28
     196:	ac 0f       	add	r26, r28
     198:	b5 0f       	add	r27, r21
     19a:	b5 0f       	add	r27, r21
     19c:	b5 0f       	add	r27, r21
     19e:	b5 0f       	add	r27, r21
     1a0:	b5 0f       	add	r27, r21
     1a2:	b5 0f       	add	r27, r21
     1a4:	b5 0f       	add	r27, r21
     1a6:	b5 0f       	add	r27, r21
     1a8:	b5 0f       	add	r27, r21
     1aa:	b5 0f       	add	r27, r21
     1ac:	b5 0f       	add	r27, r21
     1ae:	b5 0f       	add	r27, r21
     1b0:	b5 0f       	add	r27, r21
     1b2:	a5 0f       	add	r26, r21
     1b4:	a5 0f       	add	r26, r21
     1b6:	a5 0f       	add	r26, r21
     1b8:	b5 0f       	add	r27, r21
     1ba:	b5 0f       	add	r27, r21
     1bc:	b5 0f       	add	r27, r21
     1be:	b5 0f       	add	r27, r21
     1c0:	b5 0f       	add	r27, r21
     1c2:	b5 0f       	add	r27, r21
     1c4:	b5 0f       	add	r27, r21
     1c6:	b5 0f       	add	r27, r21
     1c8:	b5 0f       	add	r27, r21
     1ca:	b5 0f       	add	r27, r21
     1cc:	b5 0f       	add	r27, r21
     1ce:	b5 0f       	add	r27, r21
     1d0:	b5 0f       	add	r27, r21
     1d2:	b5 0f       	add	r27, r21
     1d4:	b5 0f       	add	r27, r21
     1d6:	b5 0f       	add	r27, r21
     1d8:	b5 0f       	add	r27, r21
     1da:	a5 0f       	add	r26, r21
     1dc:	b5 0f       	add	r27, r21
     1de:	b5 0f       	add	r27, r21
     1e0:	b5 0f       	add	r27, r21
     1e2:	b5 0f       	add	r27, r21
     1e4:	a5 0f       	add	r26, r21
     1e6:	b5 0f       	add	r27, r21
     1e8:	a5 0f       	add	r26, r21
     1ea:	b5 0f       	add	r27, r21
     1ec:	b5 0f       	add	r27, r21
     1ee:	b5 0f       	add	r27, r21
     1f0:	b5 0f       	add	r27, r21
     1f2:	b5 0f       	add	r27, r21
     1f4:	b5 0f       	add	r27, r21
     1f6:	b5 0f       	add	r27, r21
     1f8:	b5 0f       	add	r27, r21
     1fa:	b5 0f       	add	r27, r21
     1fc:	b5 0f       	add	r27, r21
     1fe:	b5 0f       	add	r27, r21
     200:	b5 0f       	add	r27, r21
     202:	b5 0f       	add	r27, r21
     204:	b5 0f       	add	r27, r21
     206:	b5 0f       	add	r27, r21
     208:	b5 0f       	add	r27, r21
     20a:	ac 0f       	add	r26, r28
     20c:	b5 0f       	add	r27, r21
     20e:	b5 0f       	add	r27, r21
     210:	b5 0f       	add	r27, r21
     212:	b5 0f       	add	r27, r21
     214:	b5 0f       	add	r27, r21
     216:	b5 0f       	add	r27, r21
     218:	b5 0f       	add	r27, r21
     21a:	b5 0f       	add	r27, r21
     21c:	b5 0f       	add	r27, r21
     21e:	b5 0f       	add	r27, r21
     220:	ac 0f       	add	r26, r28
     222:	ac 0f       	add	r26, r28
     224:	ac 0f       	add	r26, r28
     226:	ac 0f       	add	r26, r28
     228:	ac 0f       	add	r26, r28
     22a:	ac 0f       	add	r26, r28
     22c:	ac 0f       	add	r26, r28
     22e:	ac 0f       	add	r26, r28
     230:	ac 0f       	add	r26, r28
     232:	ac 0f       	add	r26, r28
     234:	ac 0f       	add	r26, r28
     236:	ac 0f       	add	r26, r28
     238:	ac 0f       	add	r26, r28
     23a:	ac 0f       	add	r26, r28
     23c:	06 17       	cp	r16, r22
     23e:	3a 17       	cp	r19, r26
     240:	76 17       	cp	r23, r22
     242:	87 17       	cp	r24, r23
     244:	cb 1a       	sub	r12, r27
     246:	df 1a       	sub	r13, r31
     248:	0c 18       	sub	r0, r12
     24a:	9a 16       	cp	r9, r26
     24c:	9a 16       	cp	r9, r26
     24e:	20 18       	sub	r2, r0
     250:	03 18       	sub	r0, r3
     252:	9a 16       	cp	r9, r26
     254:	93 18       	sub	r9, r3
     256:	54 1c       	adc	r5, r4
     258:	53 1a       	sub	r5, r19
     25a:	53 1a       	sub	r5, r19
     25c:	a5 1b       	sub	r26, r21
     25e:	e8 1a       	sub	r14, r24
     260:	f1 1a       	sub	r15, r17
     262:	f9 1a       	sub	r15, r25
     264:	ff 1a       	sub	r15, r31
     266:	06 1b       	sub	r16, r22
     268:	0e 1b       	sub	r16, r30
     26a:	17 1b       	sub	r17, r23
     26c:	22 1b       	sub	r18, r18
     26e:	34 1b       	sub	r19, r20
     270:	3d 1b       	sub	r19, r29
     272:	9a 16       	cp	r9, r26
     274:	5c 1c       	adc	r5, r12
     276:	5c 1c       	adc	r5, r12
     278:	5c 1c       	adc	r5, r12
     27a:	5c 1c       	adc	r5, r12
     27c:	5c 1c       	adc	r5, r12
     27e:	f0 19       	sub	r31, r0
     280:	9a 16       	cp	r9, r26
     282:	9a 16       	cp	r9, r26
     284:	d9 17       	cp	r29, r25
     286:	e5 17       	cp	r30, r21
     288:	f1 17       	cp	r31, r17
     28a:	fa 17       	cp	r31, r26
     28c:	9a 16       	cp	r9, r26
     28e:	11 18       	sub	r1, r1
     290:	16 18       	sub	r1, r6
     292:	1b 18       	sub	r1, r11
     294:	90 19       	sub	r25, r0
     296:	d9 19       	sub	r29, r9
     298:	9a 16       	cp	r9, r26
     29a:	5c 1c       	adc	r5, r12
     29c:	9a 16       	cp	r9, r26
     29e:	9a 16       	cp	r9, r26
     2a0:	9a 16       	cp	r9, r26
     2a2:	41 19       	sub	r20, r1
     2a4:	4e 19       	sub	r20, r14
     2a6:	a4 16       	cp	r10, r20
     2a8:	9a 16       	cp	r9, r26
     2aa:	83 19       	sub	r24, r3
     2ac:	69 19       	sub	r22, r9
     2ae:	76 19       	sub	r23, r6
     2b0:	5b 19       	sub	r21, r11
     2b2:	b6 1b       	sub	r27, r22
     2b4:	da 1b       	sub	r29, r26
     2b6:	66 1c       	adc	r6, r6
     2b8:	5c 1c       	adc	r5, r12
     2ba:	e5 1b       	sub	r30, r21
     2bc:	ed 1b       	sub	r30, r29
     2be:	9a 16       	cp	r9, r26
     2c0:	9a 16       	cp	r9, r26
     2c2:	9a 16       	cp	r9, r26
     2c4:	9a 16       	cp	r9, r26
     2c6:	9a 16       	cp	r9, r26
     2c8:	9a 16       	cp	r9, r26
     2ca:	c2 17       	cp	r28, r18
     2cc:	b8 16       	cp	r11, r24
     2ce:	d2 16       	cp	r13, r18
     2d0:	ec 16       	cp	r14, r28
     2d2:	a5 17       	cp	r26, r21
     2d4:	9c 17       	cp	r25, r28
     2d6:	5c 1c       	adc	r5, r12
     2d8:	5c 1c       	adc	r5, r12
     2da:	5c 1c       	adc	r5, r12
     2dc:	03 1c       	adc	r0, r3
     2de:	03 1c       	adc	r0, r3
     2e0:	f6 1b       	sub	r31, r22
     2e2:	64 18       	sub	r6, r4
     2e4:	2d 1c       	adc	r2, r13
     2e6:	2b 1b       	sub	r18, r27
     2e8:	5c 1c       	adc	r5, r12
     2ea:	5c 1c       	adc	r5, r12
     2ec:	3a 1c       	adc	r3, r10
     2ee:	47 1c       	adc	r4, r7
     2f0:	c5 1b       	sub	r28, r21
     2f2:	5c 1c       	adc	r5, r12
     2f4:	5c 1c       	adc	r5, r12
     2f6:	5c 1c       	adc	r5, r12
     2f8:	5c 1c       	adc	r5, r12
     2fa:	5c 1c       	adc	r5, r12
     2fc:	58 1b       	sub	r21, r24
     2fe:	64 1b       	sub	r22, r20
     300:	70 1b       	sub	r23, r16
     302:	7c 1b       	sub	r23, r28
     304:	88 1b       	sub	r24, r24
     306:	9a 16       	cp	r9, r26
     308:	9a 16       	cp	r9, r26
     30a:	9a 16       	cp	r9, r26
     30c:	9a 16       	cp	r9, r26
     30e:	9a 16       	cp	r9, r26
     310:	9a 16       	cp	r9, r26
     312:	9a 16       	cp	r9, r26
     314:	9a 16       	cp	r9, r26
     316:	94 1b       	sub	r25, r20
     318:	a0 1b       	sub	r26, r16
     31a:	46 1b       	sub	r20, r22
     31c:	b6 1c       	adc	r11, r6
     31e:	5b 1d       	adc	r21, r11
     320:	5b 1d       	adc	r21, r11
     322:	5b 1d       	adc	r21, r11
     324:	5b 1d       	adc	r21, r11
     326:	5b 1d       	adc	r21, r11
     328:	5b 1d       	adc	r21, r11
     32a:	5b 1d       	adc	r21, r11
     32c:	5b 1d       	adc	r21, r11
     32e:	5b 1d       	adc	r21, r11
     330:	5b 1d       	adc	r21, r11
     332:	33 1d       	adc	r19, r3
     334:	33 1d       	adc	r19, r3
     336:	33 1d       	adc	r19, r3
     338:	33 1d       	adc	r19, r3
     33a:	33 1d       	adc	r19, r3
     33c:	33 1d       	adc	r19, r3
     33e:	5b 1d       	adc	r21, r11
     340:	bb 1c       	adc	r11, r11
     342:	33 1d       	adc	r19, r3
     344:	33 1d       	adc	r19, r3
     346:	5b 1d       	adc	r21, r11
     348:	5b 1d       	adc	r21, r11
     34a:	5b 1d       	adc	r21, r11
     34c:	5b 1d       	adc	r21, r11
     34e:	5b 1d       	adc	r21, r11
     350:	5b 1d       	adc	r21, r11
     352:	5b 1d       	adc	r21, r11
     354:	5b 1d       	adc	r21, r11
     356:	5b 1d       	adc	r21, r11
     358:	5b 1d       	adc	r21, r11
     35a:	5b 1d       	adc	r21, r11
     35c:	5b 1d       	adc	r21, r11
     35e:	5b 1d       	adc	r21, r11
     360:	5b 1d       	adc	r21, r11
     362:	b6 1c       	adc	r11, r6
     364:	b6 1c       	adc	r11, r6
     366:	b6 1c       	adc	r11, r6
     368:	5b 1d       	adc	r21, r11
     36a:	5b 1d       	adc	r21, r11
     36c:	5b 1d       	adc	r21, r11
     36e:	5b 1d       	adc	r21, r11
     370:	5b 1d       	adc	r21, r11
     372:	5b 1d       	adc	r21, r11
     374:	5b 1d       	adc	r21, r11
     376:	5b 1d       	adc	r21, r11
     378:	5b 1d       	adc	r21, r11
     37a:	5b 1d       	adc	r21, r11
     37c:	5b 1d       	adc	r21, r11
     37e:	5b 1d       	adc	r21, r11
     380:	5b 1d       	adc	r21, r11
     382:	5b 1d       	adc	r21, r11
     384:	5b 1d       	adc	r21, r11
     386:	5b 1d       	adc	r21, r11
     388:	5b 1d       	adc	r21, r11
     38a:	b6 1c       	adc	r11, r6
     38c:	5b 1d       	adc	r21, r11
     38e:	5b 1d       	adc	r21, r11
     390:	5b 1d       	adc	r21, r11
     392:	5b 1d       	adc	r21, r11
     394:	5b 1d       	adc	r21, r11
     396:	5b 1d       	adc	r21, r11
     398:	5b 1d       	adc	r21, r11
     39a:	5b 1d       	adc	r21, r11
     39c:	5b 1d       	adc	r21, r11
     39e:	5b 1d       	adc	r21, r11
     3a0:	5b 1d       	adc	r21, r11
     3a2:	5b 1d       	adc	r21, r11
     3a4:	5b 1d       	adc	r21, r11
     3a6:	5b 1d       	adc	r21, r11
     3a8:	5b 1d       	adc	r21, r11
     3aa:	5b 1d       	adc	r21, r11
     3ac:	5b 1d       	adc	r21, r11
     3ae:	5b 1d       	adc	r21, r11
     3b0:	5b 1d       	adc	r21, r11
     3b2:	5b 1d       	adc	r21, r11
     3b4:	5b 1d       	adc	r21, r11
     3b6:	5b 1d       	adc	r21, r11
     3b8:	5b 1d       	adc	r21, r11
     3ba:	33 1d       	adc	r19, r3
     3bc:	5b 1d       	adc	r21, r11
     3be:	5b 1d       	adc	r21, r11
     3c0:	5b 1d       	adc	r21, r11
     3c2:	5b 1d       	adc	r21, r11
     3c4:	5b 1d       	adc	r21, r11
     3c6:	5b 1d       	adc	r21, r11
     3c8:	5b 1d       	adc	r21, r11
     3ca:	5b 1d       	adc	r21, r11
     3cc:	5b 1d       	adc	r21, r11
     3ce:	5b 1d       	adc	r21, r11
     3d0:	33 1d       	adc	r19, r3
     3d2:	33 1d       	adc	r19, r3
     3d4:	33 1d       	adc	r19, r3
     3d6:	33 1d       	adc	r19, r3
     3d8:	33 1d       	adc	r19, r3
     3da:	5b 1d       	adc	r21, r11
     3dc:	5b 1d       	adc	r21, r11
     3de:	5b 1d       	adc	r21, r11
     3e0:	5b 1d       	adc	r21, r11
     3e2:	5b 1d       	adc	r21, r11
     3e4:	5b 1d       	adc	r21, r11
     3e6:	5b 1d       	adc	r21, r11
     3e8:	5b 1d       	adc	r21, r11
     3ea:	33 1d       	adc	r19, r3
     3ec:	34 22       	and	r3, r20
     3ee:	ae 22       	and	r10, r30
     3f0:	30 22       	and	r3, r16
     3f2:	8d 22       	and	r8, r29
     3f4:	b8 22       	and	r11, r24
     3f6:	b8 22       	and	r11, r24
     3f8:	b8 22       	and	r11, r24
     3fa:	30 22       	and	r3, r16
     3fc:	71 22       	and	r7, r17
     3fe:	b8 22       	and	r11, r24
     400:	8d 22       	and	r8, r29
     402:	99 23       	and	r25, r25
     404:	33 24       	eor	r3, r3
     406:	99 23       	and	r25, r25
     408:	cf 24       	eor	r12, r15
     40a:	95 23       	and	r25, r21
     40c:	c5 24       	eor	r12, r5
     40e:	88 24       	eor	r8, r8
     410:	95 23       	and	r25, r21
     412:	6c 24       	eor	r6, r12
     414:	6c 24       	eor	r6, r12
     416:	be 25       	eor	r27, r14
     418:	d1 25       	eor	r29, r1
     41a:	f0 25       	eor	r31, r0
     41c:	36 26       	eor	r3, r22
     41e:	4d 26       	eor	r4, r29
     420:	60 26       	eor	r6, r16
     422:	86 26       	eor	r8, r22
     424:	b3 26       	eor	r11, r19
     426:	cf 4d       	sbci	r28, 0xDF	; 223
     428:	02 4e       	sbci	r16, 0xE2	; 226
     42a:	02 4e       	sbci	r16, 0xE2	; 226
     42c:	c4 4d       	sbci	r28, 0xD4	; 212
     42e:	df 4d       	sbci	r29, 0xDF	; 223
     430:	df 4d       	sbci	r29, 0xDF	; 223
     432:	df 4d       	sbci	r29, 0xDF	; 223
     434:	02 4e       	sbci	r16, 0xE2	; 226
     436:	cf 4d       	sbci	r28, 0xDF	; 223
     438:	02 4e       	sbci	r16, 0xE2	; 226
     43a:	df 4d       	sbci	r29, 0xDF	; 223
     43c:	cf 4d       	sbci	r28, 0xDF	; 223
     43e:	df 4d       	sbci	r29, 0xDF	; 223
     440:	ea 4d       	sbci	r30, 0xDA	; 218
     442:	02 4e       	sbci	r16, 0xE2	; 226
     444:	02 4e       	sbci	r16, 0xE2	; 226
     446:	02 4e       	sbci	r16, 0xE2	; 226
     448:	02 4e       	sbci	r16, 0xE2	; 226
     44a:	02 4e       	sbci	r16, 0xE2	; 226
     44c:	02 4e       	sbci	r16, 0xE2	; 226
     44e:	02 4e       	sbci	r16, 0xE2	; 226
     450:	02 4e       	sbci	r16, 0xE2	; 226
     452:	02 4e       	sbci	r16, 0xE2	; 226
     454:	02 4e       	sbci	r16, 0xE2	; 226
     456:	02 4e       	sbci	r16, 0xE2	; 226
     458:	02 4e       	sbci	r16, 0xE2	; 226
     45a:	02 4e       	sbci	r16, 0xE2	; 226
     45c:	df 4d       	sbci	r29, 0xDF	; 223
     45e:	02 4e       	sbci	r16, 0xE2	; 226
     460:	02 4e       	sbci	r16, 0xE2	; 226
     462:	c4 4d       	sbci	r28, 0xD4	; 212
     464:	02 4e       	sbci	r16, 0xE2	; 226
     466:	02 4e       	sbci	r16, 0xE2	; 226
     468:	c4 4d       	sbci	r28, 0xD4	; 212
     46a:	da 4e       	sbci	r29, 0xEA	; 234
     46c:	0a 4f       	sbci	r16, 0xFA	; 250
     46e:	da 4e       	sbci	r29, 0xEA	; 234
     470:	aa 50       	subi	r26, 0x0A	; 10
     472:	aa 50       	subi	r26, 0x0A	; 10
     474:	aa 50       	subi	r26, 0x0A	; 10
     476:	aa 50       	subi	r26, 0x0A	; 10
     478:	aa 50       	subi	r26, 0x0A	; 10
     47a:	aa 50       	subi	r26, 0x0A	; 10
     47c:	aa 50       	subi	r26, 0x0A	; 10
     47e:	aa 50       	subi	r26, 0x0A	; 10
     480:	aa 50       	subi	r26, 0x0A	; 10
     482:	aa 50       	subi	r26, 0x0A	; 10
     484:	aa 50       	subi	r26, 0x0A	; 10
     486:	aa 50       	subi	r26, 0x0A	; 10
     488:	aa 50       	subi	r26, 0x0A	; 10
     48a:	e9 4e       	sbci	r30, 0xE9	; 233
     48c:	da 4e       	sbci	r29, 0xEA	; 234
     48e:	2d 4f       	sbci	r18, 0xFD	; 253
     490:	4f 4f       	sbci	r20, 0xFF	; 255
     492:	da 4e       	sbci	r29, 0xEA	; 234
     494:	78 4f       	sbci	r23, 0xF8	; 248
     496:	8d 4f       	sbci	r24, 0xFD	; 253
     498:	da 4e       	sbci	r29, 0xEA	; 234
     49a:	70 57       	subi	r23, 0x70	; 112
     49c:	ba 57       	subi	r27, 0x7A	; 122
     49e:	ba 57       	subi	r27, 0x7A	; 122
     4a0:	69 57       	subi	r22, 0x79	; 121
     4a2:	7a 57       	subi	r23, 0x7A	; 122
     4a4:	7a 57       	subi	r23, 0x7A	; 122
     4a6:	7a 57       	subi	r23, 0x7A	; 122
     4a8:	ba 57       	subi	r27, 0x7A	; 122
     4aa:	70 57       	subi	r23, 0x70	; 112
     4ac:	ba 57       	subi	r27, 0x7A	; 122
     4ae:	7a 57       	subi	r23, 0x7A	; 122
     4b0:	70 57       	subi	r23, 0x70	; 112
     4b2:	7a 57       	subi	r23, 0x7A	; 122
     4b4:	8c 57       	subi	r24, 0x7C	; 124
     4b6:	85 57       	subi	r24, 0x75	; 117
     4b8:	ba 57       	subi	r27, 0x7A	; 122
     4ba:	ba 57       	subi	r27, 0x7A	; 122
     4bc:	ba 57       	subi	r27, 0x7A	; 122
     4be:	9a 57       	subi	r25, 0x7A	; 122
     4c0:	a8 57       	subi	r26, 0x78	; 120
     4c2:	ba 57       	subi	r27, 0x7A	; 122
     4c4:	ba 57       	subi	r27, 0x7A	; 122
     4c6:	ba 57       	subi	r27, 0x7A	; 122
     4c8:	ba 57       	subi	r27, 0x7A	; 122
     4ca:	ba 57       	subi	r27, 0x7A	; 122
     4cc:	ba 57       	subi	r27, 0x7A	; 122
     4ce:	ba 57       	subi	r27, 0x7A	; 122
     4d0:	7a 57       	subi	r23, 0x7A	; 122
     4d2:	ba 57       	subi	r27, 0x7A	; 122
     4d4:	ba 57       	subi	r27, 0x7A	; 122
     4d6:	69 57       	subi	r22, 0x79	; 121
     4d8:	ba 57       	subi	r27, 0x7A	; 122
     4da:	ba 57       	subi	r27, 0x7A	; 122
     4dc:	69 57       	subi	r22, 0x79	; 121
     4de:	25 58       	subi	r18, 0x85	; 133
     4e0:	a3 58       	subi	r26, 0x83	; 131
     4e2:	2c 58       	subi	r18, 0x8C	; 140
     4e4:	3d 5a       	subi	r19, 0xAD	; 173
     4e6:	3d 5a       	subi	r19, 0xAD	; 173
     4e8:	3d 5a       	subi	r19, 0xAD	; 173
     4ea:	3d 5a       	subi	r19, 0xAD	; 173
     4ec:	3d 5a       	subi	r19, 0xAD	; 173
     4ee:	3d 5a       	subi	r19, 0xAD	; 173
     4f0:	3d 5a       	subi	r19, 0xAD	; 173
     4f2:	3d 5a       	subi	r19, 0xAD	; 173
     4f4:	3d 5a       	subi	r19, 0xAD	; 173
     4f6:	3d 5a       	subi	r19, 0xAD	; 173
     4f8:	3d 5a       	subi	r19, 0xAD	; 173
     4fa:	3d 5a       	subi	r19, 0xAD	; 173
     4fc:	3d 5a       	subi	r19, 0xAD	; 173
     4fe:	33 58       	subi	r19, 0x83	; 131
     500:	3c 58       	subi	r19, 0x8C	; 140
     502:	db 58       	subi	r29, 0x8B	; 139
     504:	51 58       	subi	r21, 0x81	; 129
     506:	43 58       	subi	r20, 0x83	; 131
     508:	e7 58       	subi	r30, 0x87	; 135
     50a:	11 59       	subi	r17, 0x91	; 145
     50c:	4a 58       	subi	r20, 0x8A	; 138

0000050e <__ctors_end>:
     50e:	11 24       	eor	r1, r1
     510:	1f be       	out	0x3f, r1	; 63
     512:	cf ef       	ldi	r28, 0xFF	; 255
     514:	d0 e1       	ldi	r29, 0x10	; 16
     516:	de bf       	out	0x3e, r29	; 62
     518:	cd bf       	out	0x3d, r28	; 61

0000051a <__do_copy_data>:
     51a:	12 e0       	ldi	r17, 0x02	; 2
     51c:	a0 e0       	ldi	r26, 0x00	; 0
     51e:	b1 e0       	ldi	r27, 0x01	; 1
     520:	ea e8       	ldi	r30, 0x8A	; 138
     522:	f0 ef       	ldi	r31, 0xF0	; 240
     524:	00 e0       	ldi	r16, 0x00	; 0
     526:	0b bf       	out	0x3b, r16	; 59
     528:	02 c0       	rjmp	.+4      	; 0x52e <__do_copy_data+0x14>
     52a:	07 90       	elpm	r0, Z+
     52c:	0d 92       	st	X+, r0
     52e:	a2 35       	cpi	r26, 0x52	; 82
     530:	b1 07       	cpc	r27, r17
     532:	d9 f7       	brne	.-10     	; 0x52a <__do_copy_data+0x10>

00000534 <__do_clear_bss>:
     534:	2c e0       	ldi	r18, 0x0C	; 12
     536:	a2 e5       	ldi	r26, 0x52	; 82
     538:	b2 e0       	ldi	r27, 0x02	; 2
     53a:	01 c0       	rjmp	.+2      	; 0x53e <.do_clear_bss_start>

0000053c <.do_clear_bss_loop>:
     53c:	1d 92       	st	X+, r1

0000053e <.do_clear_bss_start>:
     53e:	a2 3f       	cpi	r26, 0xF2	; 242
     540:	b2 07       	cpc	r27, r18
     542:	e1 f7       	brne	.-8      	; 0x53c <.do_clear_bss_loop>
     544:	03 d0       	rcall	.+6      	; 0x54c <main>
     546:	0c 94 43 78 	jmp	0xf086	; 0xf086 <_exit>

0000054a <__bad_interrupt>:
     54a:	5a cd       	rjmp	.-1356   	; 0x0 <__vectors>

0000054c <main>:
	#ifdef DEBUG
    UART_init(9600, DEBUG_INTERFACE); /*placed here in order to open UART for DEBUGGING Purpose*/
	//UART1_SendMessage_DEBUG("DEBUG: ON");
	#endif
	
	cli();
     54c:	f8 94       	cli
	TMR_SR_SerialTransportDummyInit(&reader.u.serialReader.transport, NULL, NULL); /*This will set the functions from implemented driver*/
     54e:	40 e0       	ldi	r20, 0x00	; 0
     550:	50 e0       	ldi	r21, 0x00	; 0
     552:	60 e0       	ldi	r22, 0x00	; 0
     554:	70 e0       	ldi	r23, 0x00	; 0
     556:	8e e2       	ldi	r24, 0x2E	; 46
     558:	97 e0       	ldi	r25, 0x07	; 7
     55a:	0e 94 2f 6a 	call	0xd45e	; 0xd45e <TMR_SR_SerialTransportDummyInit>
	/*Region is right now hardcoded inside init function*/
	TMR_SR_SerialReader_init(&reader);
     55e:	8e ea       	ldi	r24, 0xAE	; 174
     560:	95 e0       	ldi	r25, 0x05	; 5
     562:	0e 94 b9 20 	call	0x4172	; 0x4172 <TMR_SR_SerialReader_init>
	TMR_connect(&reader); /*Enable UART between MCU and reader*/
     566:	8e ea       	ldi	r24, 0xAE	; 174
     568:	95 e0       	ldi	r25, 0x05	; 5
     56a:	0e 94 28 12 	call	0x2450	; 0x2450 <TMR_SR_connect>
 	(void)TMR_startReading(&reader); /* Set read flag: on*/
     56e:	8e ea       	ldi	r24, 0xAE	; 174
     570:	95 e0       	ldi	r25, 0x05	; 5
     572:	0e 94 19 71 	call	0xe232	; 0xe232 <TMR_startReading>
	
	
    while (1) 
    {
		if(TMR_SUCCESS != TMR_read(&reader, 3000, &readTagCount))
     576:	2a ea       	ldi	r18, 0xAA	; 170
     578:	35 e0       	ldi	r19, 0x05	; 5
     57a:	48 eb       	ldi	r20, 0xB8	; 184
     57c:	5b e0       	ldi	r21, 0x0B	; 11
     57e:	60 e0       	ldi	r22, 0x00	; 0
     580:	70 e0       	ldi	r23, 0x00	; 0
     582:	8e ea       	ldi	r24, 0xAE	; 174
     584:	95 e0       	ldi	r25, 0x05	; 5
     586:	0e 94 e6 2d 	call	0x5bcc	; 0x5bcc <TMR_SR_read>
     58a:	67 2b       	or	r22, r23
     58c:	68 2b       	or	r22, r24
     58e:	69 2b       	or	r22, r25
     590:	29 f0       	breq	.+10     	; 0x59c <main+0x50>
		{
			readError++;
     592:	80 91 d1 0b 	lds	r24, 0x0BD1	; 0x800bd1 <readError>
     596:	8f 5f       	subi	r24, 0xFF	; 255
     598:	80 93 d1 0b 	sts	0x0BD1, r24	; 0x800bd1 <readError>
		}
		if(TMR_ERROR_NO_TAGS != TMR_hasMoreTags(&reader))
     59c:	8e ea       	ldi	r24, 0xAE	; 174
     59e:	95 e0       	ldi	r25, 0x05	; 5
     5a0:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <TMR_SR_hasMoreTags>
     5a4:	68 30       	cpi	r22, 0x08	; 8
     5a6:	71 05       	cpc	r23, r1
     5a8:	81 05       	cpc	r24, r1
     5aa:	93 40       	sbci	r25, 0x03	; 3
     5ac:	21 f3       	breq	.-56     	; 0x576 <main+0x2a>
		{
			TMR_getNextTag(&reader, &readData);
     5ae:	62 e5       	ldi	r22, 0x52	; 82
     5b0:	72 e0       	ldi	r23, 0x02	; 2
     5b2:	8e ea       	ldi	r24, 0xAE	; 174
     5b4:	95 e0       	ldi	r25, 0x05	; 5
     5b6:	0e 94 a3 1f 	call	0x3f46	; 0x3f46 <TMR_SR_getNextTag>
			asm("NOP");
     5ba:	00 00       	nop
     5bc:	dc cf       	rjmp	.-72     	; 0x576 <main+0x2a>

000005be <TMR_hexDottedQuad>:
 * @param bytes The array of four bytes to convert
 * @param buf The string to write to. Must be at least 12 bytes.
 */
void
TMR_hexDottedQuad(const uint8_t bytes[4], char buf[12])
{
     5be:	cf 93       	push	r28
     5c0:	df 93       	push	r29
     5c2:	ec 01       	movw	r28, r24
     5c4:	db 01       	movw	r26, r22
  int i;

  for (i = 0; i < 4 ; i++)
     5c6:	20 e0       	ldi	r18, 0x00	; 0
     5c8:	30 e0       	ldi	r19, 0x00	; 0
     5ca:	18 c0       	rjmp	.+48     	; 0x5fc <TMR_hexDottedQuad+0x3e>
  {
    *buf++ = hexchars[*bytes >> 4];
     5cc:	e8 81       	ld	r30, Y
     5ce:	e2 95       	swap	r30
     5d0:	ef 70       	andi	r30, 0x0F	; 15
     5d2:	f0 e0       	ldi	r31, 0x00	; 0
     5d4:	e0 5c       	subi	r30, 0xC0	; 192
     5d6:	fe 4f       	sbci	r31, 0xFE	; 254
     5d8:	80 81       	ld	r24, Z
     5da:	8c 93       	st	X, r24
    *buf++ = hexchars[*bytes & 15];
     5dc:	e9 91       	ld	r30, Y+
     5de:	ef 70       	andi	r30, 0x0F	; 15
     5e0:	f0 e0       	ldi	r31, 0x00	; 0
     5e2:	e0 5c       	subi	r30, 0xC0	; 192
     5e4:	fe 4f       	sbci	r31, 0xFE	; 254
     5e6:	80 81       	ld	r24, Z
     5e8:	11 96       	adiw	r26, 0x01	; 1
     5ea:	8c 93       	st	X, r24
     5ec:	11 97       	sbiw	r26, 0x01	; 1
    *buf++ = '.';
     5ee:	8e e2       	ldi	r24, 0x2E	; 46
     5f0:	12 96       	adiw	r26, 0x02	; 2
     5f2:	8c 93       	st	X, r24
     5f4:	12 97       	sbiw	r26, 0x02	; 2
void
TMR_hexDottedQuad(const uint8_t bytes[4], char buf[12])
{
  int i;

  for (i = 0; i < 4 ; i++)
     5f6:	2f 5f       	subi	r18, 0xFF	; 255
     5f8:	3f 4f       	sbci	r19, 0xFF	; 255
  {
    *buf++ = hexchars[*bytes >> 4];
    *buf++ = hexchars[*bytes & 15];
    *buf++ = '.';
     5fa:	13 96       	adiw	r26, 0x03	; 3
void
TMR_hexDottedQuad(const uint8_t bytes[4], char buf[12])
{
  int i;

  for (i = 0; i < 4 ; i++)
     5fc:	24 30       	cpi	r18, 0x04	; 4
     5fe:	31 05       	cpc	r19, r1
     600:	2c f3       	brlt	.-54     	; 0x5cc <TMR_hexDottedQuad+0xe>
    *buf++ = hexchars[*bytes >> 4];
    *buf++ = hexchars[*bytes & 15];
    *buf++ = '.';
    bytes++;
  }
  *--buf = '\0';
     602:	11 97       	sbiw	r26, 0x01	; 1
     604:	1c 92       	st	X, r1
}
     606:	df 91       	pop	r29
     608:	cf 91       	pop	r28
     60a:	08 95       	ret

0000060c <tmr_gettime>:

uint64_t tmr_gettime()
{
	/*This is not implemented yet*/
	return 0;
}
     60c:	20 e0       	ldi	r18, 0x00	; 0
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	40 e0       	ldi	r20, 0x00	; 0
     612:	50 e0       	ldi	r21, 0x00	; 0
     614:	60 e0       	ldi	r22, 0x00	; 0
     616:	70 e0       	ldi	r23, 0x00	; 0
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	08 95       	ret

0000061e <tmr_gettime_low>:
{
  /* Fill in with code that returns the low 32 bits of a millisecond
   * counter. The API will not otherwise interpret the counter value.
   */
  return 0;
}
     61e:	60 e0       	ldi	r22, 0x00	; 0
     620:	70 e0       	ldi	r23, 0x00	; 0
     622:	cb 01       	movw	r24, r22
     624:	08 95       	ret

00000626 <tmr_gettime_high>:
  /* Fill in with code that returns the hugh 32 bits of a millisecond
   * counter. The API will not otherwise interpret the counter value.
   * Returning 0 is acceptable here if you do not have a large enough counter.
   */
  return 0;
}
     626:	60 e0       	ldi	r22, 0x00	; 0
     628:	70 e0       	ldi	r23, 0x00	; 0
     62a:	cb 01       	movw	r24, r22
     62c:	08 95       	ret

0000062e <TMR_SR_cmdGetPerAntennaTime>:
#ifdef TMR_ENABLE_HF_LF
  isAddrByteExtended = false;
#endif /* TMR_ENABLE_HF_LF */

  return ret;
}
     62e:	8f 92       	push	r8
     630:	9f 92       	push	r9
     632:	af 92       	push	r10
     634:	bf 92       	push	r11
     636:	0f 93       	push	r16
     638:	1f 93       	push	r17
     63a:	cf 93       	push	r28
     63c:	df 93       	push	r29
     63e:	cd b7       	in	r28, 0x3d	; 61
     640:	de b7       	in	r29, 0x3e	; 62
     642:	da 95       	dec	r29
     644:	0f b6       	in	r0, 0x3f	; 63
     646:	f8 94       	cli
     648:	de bf       	out	0x3e, r29	; 62
     64a:	0f be       	out	0x3f, r0	; 63
     64c:	cd bf       	out	0x3d, r28	; 61
     64e:	8b 01       	movw	r16, r22
     650:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
     654:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
     658:	41 e6       	ldi	r20, 0x61	; 97
     65a:	4b 83       	std	Y+3, r20	; 0x03
     65c:	2e 5f       	subi	r18, 0xFE	; 254
     65e:	3f 4f       	sbci	r19, 0xFF	; 255
     660:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
     664:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
     668:	27 e0       	ldi	r18, 0x07	; 7
     66a:	2c 83       	std	Y+4, r18	; 0x04
     66c:	44 e0       	ldi	r20, 0x04	; 4
     66e:	be 01       	movw	r22, r28
     670:	6f 5f       	subi	r22, 0xFF	; 255
     672:	7f 4f       	sbci	r23, 0xFF	; 255
     674:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
     678:	4b 01       	movw	r8, r22
     67a:	5c 01       	movw	r10, r24
     67c:	67 2b       	or	r22, r23
     67e:	68 2b       	or	r22, r24
     680:	69 2b       	or	r22, r25
     682:	09 f0       	breq	.+2      	; 0x686 <TMR_SR_cmdGetPerAntennaTime+0x58>
     684:	4d c0       	rjmp	.+154    	; 0x720 <TMR_SR_cmdGetPerAntennaTime+0xf2>
     686:	61 e0       	ldi	r22, 0x01	; 1
     688:	70 e0       	ldi	r23, 0x00	; 0
     68a:	3f c0       	rjmp	.+126    	; 0x70a <TMR_SR_cmdGetPerAntennaTime+0xdc>
     68c:	d8 01       	movw	r26, r16
     68e:	ed 91       	ld	r30, X+
     690:	fc 91       	ld	r31, X
     692:	87 2f       	mov	r24, r23
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	9c 01       	movw	r18, r24
     698:	22 0f       	add	r18, r18
     69a:	33 1f       	adc	r19, r19
     69c:	22 0f       	add	r18, r18
     69e:	33 1f       	adc	r19, r19
     6a0:	28 0f       	add	r18, r24
     6a2:	39 1f       	adc	r19, r25
     6a4:	e2 0f       	add	r30, r18
     6a6:	f3 1f       	adc	r31, r19
     6a8:	86 2f       	mov	r24, r22
     6aa:	90 e0       	ldi	r25, 0x00	; 0
     6ac:	dc 01       	movw	r26, r24
     6ae:	15 96       	adiw	r26, 0x05	; 5
     6b0:	41 e0       	ldi	r20, 0x01	; 1
     6b2:	50 e0       	ldi	r21, 0x00	; 0
     6b4:	4c 0f       	add	r20, r28
     6b6:	5d 1f       	adc	r21, r29
     6b8:	a4 0f       	add	r26, r20
     6ba:	b5 1f       	adc	r27, r21
     6bc:	4c 91       	ld	r20, X
     6be:	40 83       	st	Z, r20
     6c0:	d8 01       	movw	r26, r16
     6c2:	4d 91       	ld	r20, X+
     6c4:	5c 91       	ld	r21, X
     6c6:	42 0f       	add	r20, r18
     6c8:	53 1f       	adc	r21, r19
     6ca:	fc 01       	movw	r30, r24
     6cc:	36 96       	adiw	r30, 0x06	; 6
     6ce:	21 e0       	ldi	r18, 0x01	; 1
     6d0:	30 e0       	ldi	r19, 0x00	; 0
     6d2:	2c 0f       	add	r18, r28
     6d4:	3d 1f       	adc	r19, r29
     6d6:	e2 0f       	add	r30, r18
     6d8:	f3 1f       	adc	r31, r19
     6da:	20 81       	ld	r18, Z
     6dc:	30 e0       	ldi	r19, 0x00	; 0
     6de:	32 2f       	mov	r19, r18
     6e0:	22 27       	eor	r18, r18
     6e2:	07 96       	adiw	r24, 0x07	; 7
     6e4:	e1 e0       	ldi	r30, 0x01	; 1
     6e6:	f0 e0       	ldi	r31, 0x00	; 0
     6e8:	ec 0f       	add	r30, r28
     6ea:	fd 1f       	adc	r31, r29
     6ec:	e8 0f       	add	r30, r24
     6ee:	f9 1f       	adc	r31, r25
     6f0:	80 81       	ld	r24, Z
     6f2:	d9 01       	movw	r26, r18
     6f4:	a8 2b       	or	r26, r24
     6f6:	cd 01       	movw	r24, r26
     6f8:	a0 e0       	ldi	r26, 0x00	; 0
     6fa:	b0 e0       	ldi	r27, 0x00	; 0
     6fc:	fa 01       	movw	r30, r20
     6fe:	81 83       	std	Z+1, r24	; 0x01
     700:	92 83       	std	Z+2, r25	; 0x02
     702:	a3 83       	std	Z+3, r26	; 0x03
     704:	b4 83       	std	Z+4, r27	; 0x04
     706:	6d 5f       	subi	r22, 0xFD	; 253
     708:	7f 5f       	subi	r23, 0xFF	; 255
     70a:	8a 81       	ldd	r24, Y+2	; 0x02
     70c:	68 17       	cp	r22, r24
     70e:	30 f4       	brcc	.+12     	; 0x71c <TMR_SR_cmdGetPerAntennaTime+0xee>
     710:	d8 01       	movw	r26, r16
     712:	12 96       	adiw	r26, 0x02	; 2
     714:	8c 91       	ld	r24, X
     716:	78 17       	cp	r23, r24
     718:	08 f4       	brcc	.+2      	; 0x71c <TMR_SR_cmdGetPerAntennaTime+0xee>
     71a:	b8 cf       	rjmp	.-144    	; 0x68c <TMR_SR_cmdGetPerAntennaTime+0x5e>
     71c:	f8 01       	movw	r30, r16
     71e:	73 83       	std	Z+3, r23	; 0x03
     720:	c5 01       	movw	r24, r10
     722:	b4 01       	movw	r22, r8
     724:	d3 95       	inc	r29
     726:	0f b6       	in	r0, 0x3f	; 63
     728:	f8 94       	cli
     72a:	de bf       	out	0x3e, r29	; 62
     72c:	0f be       	out	0x3f, r0	; 63
     72e:	cd bf       	out	0x3d, r28	; 61
     730:	df 91       	pop	r29
     732:	cf 91       	pop	r28
     734:	1f 91       	pop	r17
     736:	0f 91       	pop	r16
     738:	bf 90       	pop	r11
     73a:	af 90       	pop	r10
     73c:	9f 90       	pop	r9
     73e:	8f 90       	pop	r8
     740:	08 95       	ret

00000742 <setAntennaList>:
     742:	cf 92       	push	r12
     744:	df 92       	push	r13
     746:	ef 92       	push	r14
     748:	ff 92       	push	r15
     74a:	0f 93       	push	r16
     74c:	1f 93       	push	r17
     74e:	cf 93       	push	r28
     750:	df 93       	push	r29
     752:	cd b7       	in	r28, 0x3d	; 61
     754:	de b7       	in	r29, 0x3e	; 62
     756:	c0 54       	subi	r28, 0x40	; 64
     758:	d1 09       	sbc	r29, r1
     75a:	0f b6       	in	r0, 0x3f	; 63
     75c:	f8 94       	cli
     75e:	de bf       	out	0x3e, r29	; 62
     760:	0f be       	out	0x3f, r0	; 63
     762:	cd bf       	out	0x3d, r28	; 61
     764:	fc 01       	movw	r30, r24
     766:	ec 52       	subi	r30, 0x2C	; 44
     768:	fe 4f       	sbci	r31, 0xFE	; 254
     76a:	a0 81       	ld	r26, Z
     76c:	b1 81       	ldd	r27, Z+1	; 0x01
     76e:	00 e0       	ldi	r16, 0x00	; 0
     770:	10 e0       	ldi	r17, 0x00	; 0
     772:	40 e0       	ldi	r20, 0x00	; 0
     774:	50 e0       	ldi	r21, 0x00	; 0
     776:	34 c0       	rjmp	.+104    	; 0x7e0 <setAntennaList+0x9e>
     778:	fb 01       	movw	r30, r22
     77a:	e0 80       	ld	r14, Z
     77c:	f1 80       	ldd	r15, Z+1	; 0x01
     77e:	f7 01       	movw	r30, r14
     780:	e4 0f       	add	r30, r20
     782:	f5 1f       	adc	r31, r21
     784:	e0 80       	ld	r14, Z
     786:	cd 90       	ld	r12, X+
     788:	dc 90       	ld	r13, X
     78a:	11 97       	sbiw	r26, 0x01	; 1
     78c:	f9 01       	movw	r30, r18
     78e:	ee 0f       	add	r30, r30
     790:	ff 1f       	adc	r31, r31
     792:	e2 0f       	add	r30, r18
     794:	f3 1f       	adc	r31, r19
     796:	ec 0d       	add	r30, r12
     798:	fd 1d       	adc	r31, r13
     79a:	f0 80       	ld	r15, Z
     79c:	ef 10       	cpse	r14, r15
     79e:	0b c0       	rjmp	.+22     	; 0x7b6 <setAntennaList+0x74>
     7a0:	f1 80       	ldd	r15, Z+1	; 0x01
     7a2:	e1 e0       	ldi	r30, 0x01	; 1
     7a4:	f0 e0       	ldi	r31, 0x00	; 0
     7a6:	ec 0f       	add	r30, r28
     7a8:	fd 1f       	adc	r31, r29
     7aa:	e0 0f       	add	r30, r16
     7ac:	f1 1f       	adc	r31, r17
     7ae:	f0 82       	st	Z, r15
     7b0:	0f 5f       	subi	r16, 0xFF	; 255
     7b2:	1f 4f       	sbci	r17, 0xFF	; 255
     7b4:	0c c0       	rjmp	.+24     	; 0x7ce <setAntennaList+0x8c>
     7b6:	2f 5f       	subi	r18, 0xFF	; 255
     7b8:	3f 4f       	sbci	r19, 0xFF	; 255
     7ba:	02 c0       	rjmp	.+4      	; 0x7c0 <setAntennaList+0x7e>
     7bc:	20 e0       	ldi	r18, 0x00	; 0
     7be:	30 e0       	ldi	r19, 0x00	; 0
     7c0:	13 96       	adiw	r26, 0x03	; 3
     7c2:	ec 91       	ld	r30, X
     7c4:	13 97       	sbiw	r26, 0x03	; 3
     7c6:	f0 e0       	ldi	r31, 0x00	; 0
     7c8:	2e 17       	cp	r18, r30
     7ca:	3f 07       	cpc	r19, r31
     7cc:	a8 f2       	brcs	.-86     	; 0x778 <setAntennaList+0x36>
     7ce:	13 96       	adiw	r26, 0x03	; 3
     7d0:	ec 91       	ld	r30, X
     7d2:	13 97       	sbiw	r26, 0x03	; 3
     7d4:	f0 e0       	ldi	r31, 0x00	; 0
     7d6:	2e 17       	cp	r18, r30
     7d8:	3f 07       	cpc	r19, r31
     7da:	79 f0       	breq	.+30     	; 0x7fa <setAntennaList+0xb8>
     7dc:	4f 5f       	subi	r20, 0xFF	; 255
     7de:	5f 4f       	sbci	r21, 0xFF	; 255
     7e0:	fb 01       	movw	r30, r22
     7e2:	24 81       	ldd	r18, Z+4	; 0x04
     7e4:	35 81       	ldd	r19, Z+5	; 0x05
     7e6:	42 17       	cp	r20, r18
     7e8:	53 07       	cpc	r21, r19
     7ea:	40 f3       	brcs	.-48     	; 0x7bc <setAntennaList+0x7a>
     7ec:	ae 01       	movw	r20, r28
     7ee:	4f 5f       	subi	r20, 0xFF	; 255
     7f0:	5f 4f       	sbci	r21, 0xFF	; 255
     7f2:	60 2f       	mov	r22, r16
     7f4:	0e 94 f9 49 	call	0x93f2	; 0x93f2 <TMR_SR_cmdSetAntennaSearchList>
     7f8:	04 c0       	rjmp	.+8      	; 0x802 <setAntennaList+0xc0>
     7fa:	67 e0       	ldi	r22, 0x07	; 7
     7fc:	75 e0       	ldi	r23, 0x05	; 5
     7fe:	80 e0       	ldi	r24, 0x00	; 0
     800:	92 e0       	ldi	r25, 0x02	; 2
     802:	c0 5c       	subi	r28, 0xC0	; 192
     804:	df 4f       	sbci	r29, 0xFF	; 255
     806:	0f b6       	in	r0, 0x3f	; 63
     808:	f8 94       	cli
     80a:	de bf       	out	0x3e, r29	; 62
     80c:	0f be       	out	0x3f, r0	; 63
     80e:	cd bf       	out	0x3d, r28	; 61
     810:	df 91       	pop	r29
     812:	cf 91       	pop	r28
     814:	1f 91       	pop	r17
     816:	0f 91       	pop	r16
     818:	ff 90       	pop	r15
     81a:	ef 90       	pop	r14
     81c:	df 90       	pop	r13
     81e:	cf 90       	pop	r12
     820:	08 95       	ret

00000822 <setProtocol>:
     822:	1f 93       	push	r17
     824:	cf 93       	push	r28
     826:	df 93       	push	r29
     828:	fc 01       	movw	r30, r24
     82a:	ee 57       	subi	r30, 0x7E	; 126
     82c:	fc 4f       	sbci	r31, 0xFC	; 252
     82e:	20 81       	ld	r18, Z
     830:	26 17       	cp	r18, r22
     832:	99 f0       	breq	.+38     	; 0x85a <setProtocol+0x38>
     834:	16 2f       	mov	r17, r22
     836:	ec 01       	movw	r28, r24
     838:	0e 94 c7 4b 	call	0x978e	; 0x978e <TMR_SR_cmdSetProtocol>
     83c:	61 15       	cp	r22, r1
     83e:	71 05       	cpc	r23, r1
     840:	81 05       	cpc	r24, r1
     842:	91 05       	cpc	r25, r1
     844:	79 f4       	brne	.+30     	; 0x864 <setProtocol+0x42>
     846:	fe 01       	movw	r30, r28
     848:	ee 57       	subi	r30, 0x7E	; 126
     84a:	fc 4f       	sbci	r31, 0xFC	; 252
     84c:	10 83       	st	Z, r17
     84e:	1d ab       	std	Y+53, r17	; 0x35
     850:	40 e0       	ldi	r20, 0x00	; 0
     852:	30 e0       	ldi	r19, 0x00	; 0
     854:	20 e0       	ldi	r18, 0x00	; 0
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	08 c0       	rjmp	.+16     	; 0x86a <setProtocol+0x48>
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	30 e0       	ldi	r19, 0x00	; 0
     85e:	20 e0       	ldi	r18, 0x00	; 0
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	03 c0       	rjmp	.+6      	; 0x86a <setProtocol+0x48>
     864:	46 2f       	mov	r20, r22
     866:	37 2f       	mov	r19, r23
     868:	28 2f       	mov	r18, r24
     86a:	64 2f       	mov	r22, r20
     86c:	73 2f       	mov	r23, r19
     86e:	82 2f       	mov	r24, r18
     870:	df 91       	pop	r29
     872:	cf 91       	pop	r28
     874:	1f 91       	pop	r17
     876:	08 95       	ret

00000878 <getHardwareInfo>:
     878:	ef 92       	push	r14
     87a:	ff 92       	push	r15
     87c:	0f 93       	push	r16
     87e:	1f 93       	push	r17
     880:	cf 93       	push	r28
     882:	df 93       	push	r29
     884:	cd b7       	in	r28, 0x3d	; 61
     886:	de b7       	in	r29, 0x3e	; 62
     888:	cf 5f       	subi	r28, 0xFF	; 255
     88a:	d1 09       	sbc	r29, r1
     88c:	0f b6       	in	r0, 0x3f	; 63
     88e:	f8 94       	cli
     890:	de bf       	out	0x3e, r29	; 62
     892:	0f be       	out	0x3f, r0	; 63
     894:	cd bf       	out	0x3d, r28	; 61
     896:	7b 01       	movw	r14, r22
     898:	8e 01       	movw	r16, r28
     89a:	0f 5f       	subi	r16, 0xFF	; 255
     89c:	1f 4f       	sbci	r17, 0xFF	; 255
     89e:	b8 01       	movw	r22, r16
     8a0:	8f 58       	subi	r24, 0x8F	; 143
     8a2:	9c 4f       	sbci	r25, 0xFC	; 252
     8a4:	8c de       	rcall	.-744    	; 0x5be <TMR_hexDottedQuad>
     8a6:	f8 01       	movw	r30, r16
     8a8:	01 90       	ld	r0, Z+
     8aa:	00 20       	and	r0, r0
     8ac:	e9 f7       	brne	.-6      	; 0x8a8 <getHardwareInfo+0x30>
     8ae:	31 97       	sbiw	r30, 0x01	; 1
     8b0:	af 01       	movw	r20, r30
     8b2:	40 1b       	sub	r20, r16
     8b4:	51 0b       	sbc	r21, r17
     8b6:	b8 01       	movw	r22, r16
     8b8:	c7 01       	movw	r24, r14
     8ba:	0e 94 9f 6a 	call	0xd53e	; 0xd53e <TMR_stringCopy>
     8be:	60 e0       	ldi	r22, 0x00	; 0
     8c0:	70 e0       	ldi	r23, 0x00	; 0
     8c2:	cb 01       	movw	r24, r22
     8c4:	c1 50       	subi	r28, 0x01	; 1
     8c6:	df 4f       	sbci	r29, 0xFF	; 255
     8c8:	0f b6       	in	r0, 0x3f	; 63
     8ca:	f8 94       	cli
     8cc:	de bf       	out	0x3e, r29	; 62
     8ce:	0f be       	out	0x3f, r0	; 63
     8d0:	cd bf       	out	0x3d, r28	; 61
     8d2:	df 91       	pop	r29
     8d4:	cf 91       	pop	r28
     8d6:	1f 91       	pop	r17
     8d8:	0f 91       	pop	r16
     8da:	ff 90       	pop	r15
     8dc:	ef 90       	pop	r14
     8de:	08 95       	ret

000008e0 <getSerialNumber>:
     8e0:	cf 92       	push	r12
     8e2:	df 92       	push	r13
     8e4:	ef 92       	push	r14
     8e6:	ff 92       	push	r15
     8e8:	0f 93       	push	r16
     8ea:	1f 93       	push	r17
     8ec:	cf 93       	push	r28
     8ee:	df 93       	push	r29
     8f0:	cd b7       	in	r28, 0x3d	; 61
     8f2:	de b7       	in	r29, 0x3e	; 62
     8f4:	c1 54       	subi	r28, 0x41	; 65
     8f6:	d1 09       	sbc	r29, r1
     8f8:	0f b6       	in	r0, 0x3f	; 63
     8fa:	f8 94       	cli
     8fc:	de bf       	out	0x3e, r29	; 62
     8fe:	0f be       	out	0x3f, r0	; 63
     900:	cd bf       	out	0x3d, r28	; 61
     902:	7b 01       	movw	r14, r22
     904:	20 e2       	ldi	r18, 0x20	; 32
     906:	29 a3       	std	Y+33, r18	; 0x21
     908:	8e 01       	movw	r16, r28
     90a:	0f 5f       	subi	r16, 0xFF	; 255
     90c:	1f 4f       	sbci	r17, 0xFF	; 255
     90e:	9e 01       	movw	r18, r28
     910:	2f 5d       	subi	r18, 0xDF	; 223
     912:	3f 4f       	sbci	r19, 0xFF	; 255
     914:	40 e4       	ldi	r20, 0x40	; 64
     916:	60 e0       	ldi	r22, 0x00	; 0
     918:	0e 94 26 38 	call	0x704c	; 0x704c <TMR_SR_cmdGetHardwareVersion>
     91c:	c6 2e       	mov	r12, r22
     91e:	d7 2e       	mov	r13, r23
     920:	08 2f       	mov	r16, r24
     922:	19 2f       	mov	r17, r25
     924:	29 a1       	ldd	r18, Y+33	; 0x21
     926:	21 11       	cpse	r18, r1
     928:	09 c0       	rjmp	.+18     	; 0x93c <getSerialNumber+0x5c>
     92a:	d7 01       	movw	r26, r14
     92c:	ed 91       	ld	r30, X+
     92e:	fc 91       	ld	r31, X
     930:	10 82       	st	Z, r1
     932:	60 e0       	ldi	r22, 0x00	; 0
     934:	70 e0       	ldi	r23, 0x00	; 0
     936:	80 e0       	ldi	r24, 0x00	; 0
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	33 c0       	rjmp	.+102    	; 0x9a2 <getSerialNumber+0xc2>
     93c:	8c 81       	ldd	r24, Y+4	; 0x04
     93e:	48 2f       	mov	r20, r24
     940:	50 e0       	ldi	r21, 0x00	; 0
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	23 50       	subi	r18, 0x03	; 3
     946:	31 09       	sbc	r19, r1
     948:	24 17       	cp	r18, r20
     94a:	35 07       	cpc	r19, r21
     94c:	c4 f0       	brlt	.+48     	; 0x97e <getSerialNumber+0x9e>
     94e:	24 e0       	ldi	r18, 0x04	; 4
     950:	30 e0       	ldi	r19, 0x00	; 0
     952:	40 e0       	ldi	r20, 0x00	; 0
     954:	11 c0       	rjmp	.+34     	; 0x978 <getSerialNumber+0x98>
     956:	e1 e0       	ldi	r30, 0x01	; 1
     958:	f0 e0       	ldi	r31, 0x00	; 0
     95a:	ec 0f       	add	r30, r28
     95c:	fd 1f       	adc	r31, r29
     95e:	e2 0f       	add	r30, r18
     960:	f3 1f       	adc	r31, r19
     962:	50 81       	ld	r21, Z
     964:	e2 e2       	ldi	r30, 0x22	; 34
     966:	f0 e0       	ldi	r31, 0x00	; 0
     968:	ec 0f       	add	r30, r28
     96a:	fd 1f       	adc	r31, r29
     96c:	e4 0f       	add	r30, r20
     96e:	f1 1d       	adc	r31, r1
     970:	50 83       	st	Z, r21
     972:	4f 5f       	subi	r20, 0xFF	; 255
     974:	2f 5f       	subi	r18, 0xFF	; 255
     976:	3f 4f       	sbci	r19, 0xFF	; 255
     978:	48 17       	cp	r20, r24
     97a:	68 f3       	brcs	.-38     	; 0x956 <getSerialNumber+0x76>
     97c:	07 c0       	rjmp	.+14     	; 0x98c <getSerialNumber+0xac>
     97e:	40 e0       	ldi	r20, 0x00	; 0
     980:	68 94       	set
     982:	cc 24       	eor	r12, r12
     984:	c1 f8       	bld	r12, 1
     986:	d1 2c       	mov	r13, r1
     988:	00 e0       	ldi	r16, 0x00	; 0
     98a:	13 e0       	ldi	r17, 0x03	; 3
     98c:	50 e0       	ldi	r21, 0x00	; 0
     98e:	be 01       	movw	r22, r28
     990:	6e 5d       	subi	r22, 0xDE	; 222
     992:	7f 4f       	sbci	r23, 0xFF	; 255
     994:	c7 01       	movw	r24, r14
     996:	0e 94 9f 6a 	call	0xd53e	; 0xd53e <TMR_stringCopy>
     99a:	6c 2d       	mov	r22, r12
     99c:	7d 2d       	mov	r23, r13
     99e:	80 2f       	mov	r24, r16
     9a0:	91 2f       	mov	r25, r17
     9a2:	cf 5b       	subi	r28, 0xBF	; 191
     9a4:	df 4f       	sbci	r29, 0xFF	; 255
     9a6:	0f b6       	in	r0, 0x3f	; 63
     9a8:	f8 94       	cli
     9aa:	de bf       	out	0x3e, r29	; 62
     9ac:	0f be       	out	0x3f, r0	; 63
     9ae:	cd bf       	out	0x3d, r28	; 61
     9b0:	df 91       	pop	r29
     9b2:	cf 91       	pop	r28
     9b4:	1f 91       	pop	r17
     9b6:	0f 91       	pop	r16
     9b8:	ff 90       	pop	r15
     9ba:	ef 90       	pop	r14
     9bc:	df 90       	pop	r13
     9be:	cf 90       	pop	r12
     9c0:	08 95       	ret

000009c2 <prepEmbReadTagMultiple>:
     9c2:	4f 92       	push	r4
     9c4:	5f 92       	push	r5
     9c6:	6f 92       	push	r6
     9c8:	7f 92       	push	r7
     9ca:	8f 92       	push	r8
     9cc:	9f 92       	push	r9
     9ce:	af 92       	push	r10
     9d0:	bf 92       	push	r11
     9d2:	cf 92       	push	r12
     9d4:	ef 92       	push	r14
     9d6:	ff 92       	push	r15
     9d8:	0f 93       	push	r16
     9da:	1f 93       	push	r17
     9dc:	cf 93       	push	r28
     9de:	df 93       	push	r29
     9e0:	cd b7       	in	r28, 0x3d	; 61
     9e2:	de b7       	in	r29, 0x3e	; 62
     9e4:	2b 01       	movw	r4, r22
     9e6:	3a 01       	movw	r6, r20
     9e8:	0e 94 b4 3a 	call	0x7568	; 0x7568 <TMR_SR_msgSetupReadTagMultiple>
     9ec:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
     9f0:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
     9f4:	2f 5f       	subi	r18, 0xFF	; 255
     9f6:	3f 4f       	sbci	r19, 0xFF	; 255
     9f8:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
     9fc:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
     a00:	f3 01       	movw	r30, r6
     a02:	20 81       	ld	r18, Z
     a04:	31 e0       	ldi	r19, 0x01	; 1
     a06:	32 0f       	add	r19, r18
     a08:	30 83       	st	Z, r19
     a0a:	f2 01       	movw	r30, r4
     a0c:	e2 0f       	add	r30, r18
     a0e:	f1 1d       	adc	r31, r1
     a10:	21 e0       	ldi	r18, 0x01	; 1
     a12:	20 83       	st	Z, r18
     a14:	f3 01       	movw	r30, r6
     a16:	20 81       	ld	r18, Z
     a18:	31 e0       	ldi	r19, 0x01	; 1
     a1a:	32 0f       	add	r19, r18
     a1c:	30 83       	st	Z, r19
     a1e:	ea 89       	ldd	r30, Y+18	; 0x12
     a20:	fb 89       	ldd	r31, Y+19	; 0x13
     a22:	20 83       	st	Z, r18
     a24:	df 91       	pop	r29
     a26:	cf 91       	pop	r28
     a28:	1f 91       	pop	r17
     a2a:	0f 91       	pop	r16
     a2c:	ff 90       	pop	r15
     a2e:	ef 90       	pop	r14
     a30:	cf 90       	pop	r12
     a32:	bf 90       	pop	r11
     a34:	af 90       	pop	r10
     a36:	9f 90       	pop	r9
     a38:	8f 90       	pop	r8
     a3a:	7f 90       	pop	r7
     a3c:	6f 90       	pop	r6
     a3e:	5f 90       	pop	r5
     a40:	4f 90       	pop	r4
     a42:	08 95       	ret

00000a44 <fillStaticTxRxMapData>:
     a44:	cf 93       	push	r28
     a46:	df 93       	push	r29
     a48:	ec 01       	movw	r28, r24
     a4a:	50 e0       	ldi	r21, 0x00	; 0
     a4c:	1d c0       	rjmp	.+58     	; 0xa88 <fillStaticTxRxMapData+0x44>
     a4e:	25 2f       	mov	r18, r21
     a50:	30 e0       	ldi	r19, 0x00	; 0
     a52:	f9 01       	movw	r30, r18
     a54:	ee 0f       	add	r30, r30
     a56:	ff 1f       	adc	r31, r31
     a58:	db 01       	movw	r26, r22
     a5a:	ae 0f       	add	r26, r30
     a5c:	bf 1f       	adc	r27, r31
     a5e:	9c 91       	ld	r25, X
     a60:	2e 0f       	add	r18, r30
     a62:	3f 1f       	adc	r19, r31
     a64:	2c 0f       	add	r18, r28
     a66:	3d 1f       	adc	r19, r29
     a68:	f9 01       	movw	r30, r18
     a6a:	eb 51       	subi	r30, 0x1B	; 27
     a6c:	fe 4f       	sbci	r31, 0xFE	; 254
     a6e:	90 83       	st	Z, r25
     a70:	31 96       	adiw	r30, 0x01	; 1
     a72:	90 83       	st	Z, r25
     a74:	31 96       	adiw	r30, 0x01	; 1
     a76:	90 83       	st	Z, r25
     a78:	8c a9       	ldd	r24, Y+52	; 0x34
     a7a:	81 11       	cpse	r24, r1
     a7c:	04 c0       	rjmp	.+8      	; 0xa86 <fillStaticTxRxMapData+0x42>
     a7e:	11 96       	adiw	r26, 0x01	; 1
     a80:	8c 91       	ld	r24, X
     a82:	81 11       	cpse	r24, r1
     a84:	9c ab       	std	Y+52, r25	; 0x34
     a86:	5f 5f       	subi	r21, 0xFF	; 255
     a88:	54 17       	cp	r21, r20
     a8a:	08 f3       	brcs	.-62     	; 0xa4e <fillStaticTxRxMapData+0xa>
     a8c:	df 91       	pop	r29
     a8e:	cf 91       	pop	r28
     a90:	08 95       	ret

00000a92 <updateTxRxMapData>:
     a92:	1f 93       	push	r17
     a94:	cf 93       	push	r28
     a96:	df 93       	push	r29
     a98:	ec 01       	movw	r28, r24
     a9a:	14 2f       	mov	r17, r20
     a9c:	d3 df       	rcall	.-90     	; 0xa44 <fillStaticTxRxMapData>
     a9e:	fe 01       	movw	r30, r28
     aa0:	e9 59       	subi	r30, 0x99	; 153
     aa2:	fc 4f       	sbci	r31, 0xFC	; 252
     aa4:	80 e4       	ldi	r24, 0x40	; 64
     aa6:	80 83       	st	Z, r24
     aa8:	31 96       	adiw	r30, 0x01	; 1
     aaa:	10 83       	st	Z, r17
     aac:	ce 01       	movw	r24, r28
     aae:	8b 51       	subi	r24, 0x1B	; 27
     ab0:	9e 4f       	sbci	r25, 0xFE	; 254
     ab2:	33 97       	sbiw	r30, 0x03	; 3
     ab4:	91 83       	std	Z+1, r25	; 0x01
     ab6:	80 83       	st	Z, r24
     ab8:	de 01       	movw	r26, r28
     aba:	ac 52       	subi	r26, 0x2C	; 44
     abc:	be 4f       	sbci	r27, 0xFE	; 254
     abe:	ed 93       	st	X+, r30
     ac0:	fc 93       	st	X, r31
     ac2:	80 54       	subi	r24, 0x40	; 64
     ac4:	9f 4f       	sbci	r25, 0xFF	; 255
     ac6:	34 96       	adiw	r30, 0x04	; 4
     ac8:	91 83       	std	Z+1, r25	; 0x01
     aca:	80 83       	st	Z, r24
     acc:	20 e0       	ldi	r18, 0x00	; 0
     ace:	1e c0       	rjmp	.+60     	; 0xb0c <updateTxRxMapData+0x7a>
     ad0:	fe 01       	movw	r30, r28
     ad2:	e7 59       	subi	r30, 0x97	; 151
     ad4:	fc 4f       	sbci	r31, 0xFC	; 252
     ad6:	01 90       	ld	r0, Z+
     ad8:	f0 81       	ld	r31, Z
     ada:	e0 2d       	mov	r30, r0
     adc:	82 2f       	mov	r24, r18
     ade:	90 e0       	ldi	r25, 0x00	; 0
     ae0:	ac 01       	movw	r20, r24
     ae2:	44 0f       	add	r20, r20
     ae4:	55 1f       	adc	r21, r21
     ae6:	84 0f       	add	r24, r20
     ae8:	95 1f       	adc	r25, r21
     aea:	e8 0f       	add	r30, r24
     aec:	f9 1f       	adc	r31, r25
     aee:	de 01       	movw	r26, r28
     af0:	ab 59       	subi	r26, 0x9B	; 155
     af2:	bc 4f       	sbci	r27, 0xFC	; 252
     af4:	4d 91       	ld	r20, X+
     af6:	5c 91       	ld	r21, X
     af8:	da 01       	movw	r26, r20
     afa:	a8 0f       	add	r26, r24
     afc:	b9 1f       	adc	r27, r25
     afe:	8d 91       	ld	r24, X+
     b00:	9d 91       	ld	r25, X+
     b02:	ac 91       	ld	r26, X
     b04:	80 83       	st	Z, r24
     b06:	91 83       	std	Z+1, r25	; 0x01
     b08:	a2 83       	std	Z+2, r26	; 0x02
     b0a:	2f 5f       	subi	r18, 0xFF	; 255
     b0c:	21 17       	cp	r18, r17
     b0e:	00 f3       	brcs	.-64     	; 0xad0 <updateTxRxMapData+0x3e>
     b10:	fe 01       	movw	r30, r28
     b12:	e9 59       	subi	r30, 0x99	; 153
     b14:	fc 4f       	sbci	r31, 0xFC	; 252
     b16:	80 81       	ld	r24, Z
     b18:	34 96       	adiw	r30, 0x04	; 4
     b1a:	80 83       	st	Z, r24
     b1c:	33 97       	sbiw	r30, 0x03	; 3
     b1e:	80 81       	ld	r24, Z
     b20:	34 96       	adiw	r30, 0x04	; 4
     b22:	80 83       	st	Z, r24
     b24:	ce 01       	movw	r24, r28
     b26:	87 59       	subi	r24, 0x97	; 151
     b28:	9c 4f       	sbci	r25, 0xFC	; 252
     b2a:	ca 52       	subi	r28, 0x2A	; 42
     b2c:	de 4f       	sbci	r29, 0xFE	; 254
     b2e:	99 83       	std	Y+1, r25	; 0x01
     b30:	88 83       	st	Y, r24
     b32:	60 e0       	ldi	r22, 0x00	; 0
     b34:	70 e0       	ldi	r23, 0x00	; 0
     b36:	cb 01       	movw	r24, r22
     b38:	df 91       	pop	r29
     b3a:	cf 91       	pop	r28
     b3c:	1f 91       	pop	r17
     b3e:	08 95       	ret

00000b40 <initTxRxMapFromPorts>:
     b40:	0f 93       	push	r16
     b42:	1f 93       	push	r17
     b44:	cf 93       	push	r28
     b46:	df 93       	push	r29
     b48:	cd b7       	in	r28, 0x3d	; 61
     b4a:	de b7       	in	r29, 0x3e	; 62
     b4c:	c1 58       	subi	r28, 0x81	; 129
     b4e:	d1 09       	sbc	r29, r1
     b50:	0f b6       	in	r0, 0x3f	; 63
     b52:	f8 94       	cli
     b54:	de bf       	out	0x3e, r29	; 62
     b56:	0f be       	out	0x3f, r0	; 63
     b58:	cd bf       	out	0x3d, r28	; 61
     b5a:	8c 01       	movw	r16, r24
     b5c:	80 e4       	ldi	r24, 0x40	; 64
     b5e:	cf 57       	subi	r28, 0x7F	; 127
     b60:	df 4f       	sbci	r29, 0xFF	; 255
     b62:	88 83       	st	Y, r24
     b64:	c1 58       	subi	r28, 0x81	; 129
     b66:	d0 40       	sbci	r29, 0x00	; 0
     b68:	ae 01       	movw	r20, r28
     b6a:	4f 5f       	subi	r20, 0xFF	; 255
     b6c:	5f 4f       	sbci	r21, 0xFF	; 255
     b6e:	be 01       	movw	r22, r28
     b70:	6f 57       	subi	r22, 0x7F	; 127
     b72:	7f 4f       	sbci	r23, 0xFF	; 255
     b74:	c8 01       	movw	r24, r16
     b76:	0e 94 fe 50 	call	0xa1fc	; 0xa1fc <TMR_SR_cmdAntennaDetect>
     b7a:	61 15       	cp	r22, r1
     b7c:	71 05       	cpc	r23, r1
     b7e:	81 05       	cpc	r24, r1
     b80:	91 05       	cpc	r25, r1
     b82:	a1 f4       	brne	.+40     	; 0xbac <initTxRxMapFromPorts+0x6c>
     b84:	cf 57       	subi	r28, 0x7F	; 127
     b86:	df 4f       	sbci	r29, 0xFF	; 255
     b88:	48 81       	ld	r20, Y
     b8a:	c1 58       	subi	r28, 0x81	; 129
     b8c:	d0 40       	sbci	r29, 0x00	; 0
     b8e:	be 01       	movw	r22, r28
     b90:	6f 5f       	subi	r22, 0xFF	; 255
     b92:	7f 4f       	sbci	r23, 0xFF	; 255
     b94:	c8 01       	movw	r24, r16
     b96:	7d df       	rcall	.-262    	; 0xa92 <updateTxRxMapData>
     b98:	61 15       	cp	r22, r1
     b9a:	71 05       	cpc	r23, r1
     b9c:	81 05       	cpc	r24, r1
     b9e:	91 05       	cpc	r25, r1
     ba0:	49 f4       	brne	.+18     	; 0xbb4 <initTxRxMapFromPorts+0x74>
     ba2:	40 e0       	ldi	r20, 0x00	; 0
     ba4:	30 e0       	ldi	r19, 0x00	; 0
     ba6:	20 e0       	ldi	r18, 0x00	; 0
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	07 c0       	rjmp	.+14     	; 0xbba <initTxRxMapFromPorts+0x7a>
     bac:	46 2f       	mov	r20, r22
     bae:	37 2f       	mov	r19, r23
     bb0:	28 2f       	mov	r18, r24
     bb2:	03 c0       	rjmp	.+6      	; 0xbba <initTxRxMapFromPorts+0x7a>
     bb4:	46 2f       	mov	r20, r22
     bb6:	37 2f       	mov	r19, r23
     bb8:	28 2f       	mov	r18, r24
     bba:	64 2f       	mov	r22, r20
     bbc:	73 2f       	mov	r23, r19
     bbe:	82 2f       	mov	r24, r18
     bc0:	cf 57       	subi	r28, 0x7F	; 127
     bc2:	df 4f       	sbci	r29, 0xFF	; 255
     bc4:	0f b6       	in	r0, 0x3f	; 63
     bc6:	f8 94       	cli
     bc8:	de bf       	out	0x3e, r29	; 62
     bca:	0f be       	out	0x3f, r0	; 63
     bcc:	cd bf       	out	0x3d, r28	; 61
     bce:	df 91       	pop	r29
     bd0:	cf 91       	pop	r28
     bd2:	1f 91       	pop	r17
     bd4:	0f 91       	pop	r16
     bd6:	08 95       	ret

00000bd8 <TMR_SR_cmdSetPerAntennaTime>:
     bd8:	8f 92       	push	r8
     bda:	9f 92       	push	r9
     bdc:	af 92       	push	r10
     bde:	bf 92       	push	r11
     be0:	df 92       	push	r13
     be2:	ef 92       	push	r14
     be4:	ff 92       	push	r15
     be6:	0f 93       	push	r16
     be8:	1f 93       	push	r17
     bea:	cf 93       	push	r28
     bec:	df 93       	push	r29
     bee:	cd b7       	in	r28, 0x3d	; 61
     bf0:	de b7       	in	r29, 0x3e	; 62
     bf2:	da 95       	dec	r29
     bf4:	0f b6       	in	r0, 0x3f	; 63
     bf6:	f8 94       	cli
     bf8:	de bf       	out	0x3e, r29	; 62
     bfa:	0f be       	out	0x3f, r0	; 63
     bfc:	cd bf       	out	0x3d, r28	; 61
     bfe:	7c 01       	movw	r14, r24
     c00:	8b 01       	movw	r16, r22
     c02:	fc 01       	movw	r30, r24
     c04:	ec 52       	subi	r30, 0x2C	; 44
     c06:	fe 4f       	sbci	r31, 0xFE	; 254
     c08:	80 81       	ld	r24, Z
     c0a:	91 81       	ldd	r25, Z+1	; 0x01
     c0c:	89 2b       	or	r24, r25
     c0e:	51 f4       	brne	.+20     	; 0xc24 <TMR_SR_cmdSetPerAntennaTime+0x4c>
     c10:	c7 01       	movw	r24, r14
     c12:	96 df       	rcall	.-212    	; 0xb40 <initTxRxMapFromPorts>
     c14:	4b 01       	movw	r8, r22
     c16:	5c 01       	movw	r10, r24
     c18:	61 15       	cp	r22, r1
     c1a:	71 05       	cpc	r23, r1
     c1c:	81 05       	cpc	r24, r1
     c1e:	91 05       	cpc	r25, r1
     c20:	09 f0       	breq	.+2      	; 0xc24 <TMR_SR_cmdSetPerAntennaTime+0x4c>
     c22:	af c0       	rjmp	.+350    	; 0xd82 <TMR_SR_cmdSetPerAntennaTime+0x1aa>
     c24:	f7 01       	movw	r30, r14
     c26:	ec 52       	subi	r30, 0x2C	; 44
     c28:	fe 4f       	sbci	r31, 0xFE	; 254
     c2a:	a0 81       	ld	r26, Z
     c2c:	b1 81       	ldd	r27, Z+1	; 0x01
     c2e:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
     c32:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
     c36:	21 e9       	ldi	r18, 0x91	; 145
     c38:	2b 83       	std	Y+3, r18	; 0x03
     c3a:	02 96       	adiw	r24, 0x02	; 2
     c3c:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
     c40:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
     c44:	ea 5d       	subi	r30, 0xDA	; 218
     c46:	fb 4f       	sbci	r31, 0xFB	; 251
     c48:	90 81       	ld	r25, Z
     c4a:	81 e0       	ldi	r24, 0x01	; 1
     c4c:	89 27       	eor	r24, r25
     c4e:	20 e8       	ldi	r18, 0x80	; 128
     c50:	82 9f       	mul	r24, r18
     c52:	c0 01       	movw	r24, r0
     c54:	11 24       	eor	r1, r1
     c56:	87 60       	ori	r24, 0x07	; 7
     c58:	8c 83       	std	Y+4, r24	; 0x04
     c5a:	d1 2c       	mov	r13, r1
     c5c:	44 e0       	ldi	r20, 0x04	; 4
     c5e:	85 c0       	rjmp	.+266    	; 0xd6a <TMR_SR_cmdSetPerAntennaTime+0x192>
     c60:	f8 01       	movw	r30, r16
     c62:	20 81       	ld	r18, Z
     c64:	31 81       	ldd	r19, Z+1	; 0x01
     c66:	8d 2d       	mov	r24, r13
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	bc 01       	movw	r22, r24
     c6c:	66 0f       	add	r22, r22
     c6e:	77 1f       	adc	r23, r23
     c70:	66 0f       	add	r22, r22
     c72:	77 1f       	adc	r23, r23
     c74:	68 0f       	add	r22, r24
     c76:	79 1f       	adc	r23, r25
     c78:	f9 01       	movw	r30, r18
     c7a:	e6 0f       	add	r30, r22
     c7c:	f7 1f       	adc	r31, r23
     c7e:	80 81       	ld	r24, Z
     c80:	81 11       	cpse	r24, r1
     c82:	30 c0       	rjmp	.+96     	; 0xce4 <TMR_SR_cmdSetPerAntennaTime+0x10c>
     c84:	36 c0       	rjmp	.+108    	; 0xcf2 <TMR_SR_cmdSetPerAntennaTime+0x11a>
     c86:	f8 01       	movw	r30, r16
     c88:	20 81       	ld	r18, Z
     c8a:	31 81       	ldd	r19, Z+1	; 0x01
     c8c:	f9 01       	movw	r30, r18
     c8e:	e6 0f       	add	r30, r22
     c90:	f7 1f       	adc	r31, r23
     c92:	50 81       	ld	r21, Z
     c94:	ed 91       	ld	r30, X+
     c96:	fc 91       	ld	r31, X
     c98:	11 97       	sbiw	r26, 0x01	; 1
     c9a:	28 2f       	mov	r18, r24
     c9c:	30 e0       	ldi	r19, 0x00	; 0
     c9e:	59 01       	movw	r10, r18
     ca0:	aa 0c       	add	r10, r10
     ca2:	bb 1c       	adc	r11, r11
     ca4:	2a 0d       	add	r18, r10
     ca6:	3b 1d       	adc	r19, r11
     ca8:	e2 0f       	add	r30, r18
     caa:	f3 1f       	adc	r31, r19
     cac:	90 81       	ld	r25, Z
     cae:	59 13       	cpse	r21, r25
     cb0:	17 c0       	rjmp	.+46     	; 0xce0 <TMR_SR_cmdSetPerAntennaTime+0x108>
     cb2:	e0 91 d6 0b 	lds	r30, 0x0BD6	; 0x800bd6 <totalMsgIdx>
     cb6:	f0 91 d7 0b 	lds	r31, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
     cba:	31 96       	adiw	r30, 0x01	; 1
     cbc:	f0 93 d7 0b 	sts	0x0BD7, r31	; 0x800bd7 <totalMsgIdx+0x1>
     cc0:	e0 93 d6 0b 	sts	0x0BD6, r30	; 0x800bd6 <totalMsgIdx>
     cc4:	ed 91       	ld	r30, X+
     cc6:	fc 91       	ld	r31, X
     cc8:	11 97       	sbiw	r26, 0x01	; 1
     cca:	e2 0f       	add	r30, r18
     ccc:	f3 1f       	adc	r31, r19
     cce:	91 81       	ldd	r25, Z+1	; 0x01
     cd0:	e1 e0       	ldi	r30, 0x01	; 1
     cd2:	f0 e0       	ldi	r31, 0x00	; 0
     cd4:	ec 0f       	add	r30, r28
     cd6:	fd 1f       	adc	r31, r29
     cd8:	e4 0f       	add	r30, r20
     cda:	f1 1d       	adc	r31, r1
     cdc:	90 83       	st	Z, r25
     cde:	4f 5f       	subi	r20, 0xFF	; 255
     ce0:	8f 5f       	subi	r24, 0xFF	; 255
     ce2:	01 c0       	rjmp	.+2      	; 0xce6 <TMR_SR_cmdSetPerAntennaTime+0x10e>
     ce4:	80 e0       	ldi	r24, 0x00	; 0
     ce6:	13 96       	adiw	r26, 0x03	; 3
     ce8:	9c 91       	ld	r25, X
     cea:	13 97       	sbiw	r26, 0x03	; 3
     cec:	89 17       	cp	r24, r25
     cee:	58 f2       	brcs	.-106    	; 0xc86 <TMR_SR_cmdSetPerAntennaTime+0xae>
     cf0:	11 c0       	rjmp	.+34     	; 0xd14 <TMR_SR_cmdSetPerAntennaTime+0x13c>
     cf2:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
     cf6:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
     cfa:	01 96       	adiw	r24, 0x01	; 1
     cfc:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
     d00:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
     d04:	e1 e0       	ldi	r30, 0x01	; 1
     d06:	f0 e0       	ldi	r31, 0x00	; 0
     d08:	ec 0f       	add	r30, r28
     d0a:	fd 1f       	adc	r31, r29
     d0c:	e4 0f       	add	r30, r20
     d0e:	f1 1d       	adc	r31, r1
     d10:	10 82       	st	Z, r1
     d12:	4f 5f       	subi	r20, 0xFF	; 255
     d14:	f8 01       	movw	r30, r16
     d16:	80 81       	ld	r24, Z
     d18:	91 81       	ldd	r25, Z+1	; 0x01
     d1a:	fc 01       	movw	r30, r24
     d1c:	e6 0f       	add	r30, r22
     d1e:	f7 1f       	adc	r31, r23
     d20:	81 80       	ldd	r8, Z+1	; 0x01
     d22:	92 80       	ldd	r9, Z+2	; 0x02
     d24:	a3 80       	ldd	r10, Z+3	; 0x03
     d26:	b4 80       	ldd	r11, Z+4	; 0x04
     d28:	ff ef       	ldi	r31, 0xFF	; 255
     d2a:	8f 16       	cp	r8, r31
     d2c:	9f 06       	cpc	r9, r31
     d2e:	a1 04       	cpc	r10, r1
     d30:	b1 04       	cpc	r11, r1
     d32:	5c f5       	brge	.+86     	; 0xd8a <TMR_SR_cmdSetPerAntennaTime+0x1b2>
     d34:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
     d38:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
     d3c:	02 96       	adiw	r24, 0x02	; 2
     d3e:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
     d42:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
     d46:	e1 e0       	ldi	r30, 0x01	; 1
     d48:	f0 e0       	ldi	r31, 0x00	; 0
     d4a:	ec 0f       	add	r30, r28
     d4c:	fd 1f       	adc	r31, r29
     d4e:	e4 0f       	add	r30, r20
     d50:	f1 1d       	adc	r31, r1
     d52:	90 82       	st	Z, r9
     d54:	81 e0       	ldi	r24, 0x01	; 1
     d56:	84 0f       	add	r24, r20
     d58:	e1 e0       	ldi	r30, 0x01	; 1
     d5a:	f0 e0       	ldi	r31, 0x00	; 0
     d5c:	ec 0f       	add	r30, r28
     d5e:	fd 1f       	adc	r31, r29
     d60:	e8 0f       	add	r30, r24
     d62:	f1 1d       	adc	r31, r1
     d64:	4e 5f       	subi	r20, 0xFE	; 254
     d66:	80 82       	st	Z, r8
     d68:	d3 94       	inc	r13
     d6a:	f8 01       	movw	r30, r16
     d6c:	83 81       	ldd	r24, Z+3	; 0x03
     d6e:	d8 16       	cp	r13, r24
     d70:	08 f4       	brcc	.+2      	; 0xd74 <TMR_SR_cmdSetPerAntennaTime+0x19c>
     d72:	76 cf       	rjmp	.-276    	; 0xc60 <TMR_SR_cmdSetPerAntennaTime+0x88>
     d74:	be 01       	movw	r22, r28
     d76:	6f 5f       	subi	r22, 0xFF	; 255
     d78:	7f 4f       	sbci	r23, 0xFF	; 255
     d7a:	c7 01       	movw	r24, r14
     d7c:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
     d80:	08 c0       	rjmp	.+16     	; 0xd92 <TMR_SR_cmdSetPerAntennaTime+0x1ba>
     d82:	79 2d       	mov	r23, r9
     d84:	8a 2d       	mov	r24, r10
     d86:	9b 2d       	mov	r25, r11
     d88:	04 c0       	rjmp	.+8      	; 0xd92 <TMR_SR_cmdSetPerAntennaTime+0x1ba>
     d8a:	61 e0       	ldi	r22, 0x01	; 1
     d8c:	70 e0       	ldi	r23, 0x00	; 0
     d8e:	80 e0       	ldi	r24, 0x00	; 0
     d90:	93 e0       	ldi	r25, 0x03	; 3
     d92:	d3 95       	inc	r29
     d94:	0f b6       	in	r0, 0x3f	; 63
     d96:	f8 94       	cli
     d98:	de bf       	out	0x3e, r29	; 62
     d9a:	0f be       	out	0x3f, r0	; 63
     d9c:	cd bf       	out	0x3d, r28	; 61
     d9e:	df 91       	pop	r29
     da0:	cf 91       	pop	r28
     da2:	1f 91       	pop	r17
     da4:	0f 91       	pop	r16
     da6:	ff 90       	pop	r15
     da8:	ef 90       	pop	r14
     daa:	df 90       	pop	r13
     dac:	bf 90       	pop	r11
     dae:	af 90       	pop	r10
     db0:	9f 90       	pop	r9
     db2:	8f 90       	pop	r8
     db4:	08 95       	ret

00000db6 <getPortValues>:
     db6:	af 92       	push	r10
     db8:	bf 92       	push	r11
     dba:	cf 92       	push	r12
     dbc:	df 92       	push	r13
     dbe:	ef 92       	push	r14
     dc0:	ff 92       	push	r15
     dc2:	0f 93       	push	r16
     dc4:	1f 93       	push	r17
     dc6:	cf 93       	push	r28
     dc8:	df 93       	push	r29
     dca:	cd b7       	in	r28, 0x3d	; 61
     dcc:	de b7       	in	r29, 0x3e	; 62
     dce:	c1 5c       	subi	r28, 0xC1	; 193
     dd0:	d1 40       	sbci	r29, 0x01	; 1
     dd2:	0f b6       	in	r0, 0x3f	; 63
     dd4:	f8 94       	cli
     dd6:	de bf       	out	0x3e, r29	; 62
     dd8:	0f be       	out	0x3f, r0	; 63
     dda:	cd bf       	out	0x3d, r28	; 61
     ddc:	5c 01       	movw	r10, r24
     dde:	7b 01       	movw	r14, r22
     de0:	6a 01       	movw	r12, r20
     de2:	fc 01       	movw	r30, r24
     de4:	ec 52       	subi	r30, 0x2C	; 44
     de6:	fe 4f       	sbci	r31, 0xFE	; 254
     de8:	80 81       	ld	r24, Z
     dea:	91 81       	ldd	r25, Z+1	; 0x01
     dec:	89 2b       	or	r24, r25
     dee:	41 f4       	brne	.+16     	; 0xe00 <getPortValues+0x4a>
     df0:	c5 01       	movw	r24, r10
     df2:	a6 de       	rcall	.-692    	; 0xb40 <initTxRxMapFromPorts>
     df4:	61 15       	cp	r22, r1
     df6:	71 05       	cpc	r23, r1
     df8:	81 05       	cpc	r24, r1
     dfa:	91 05       	cpc	r25, r1
     dfc:	09 f0       	breq	.+2      	; 0xe00 <getPortValues+0x4a>
     dfe:	a9 c0       	rjmp	.+338    	; 0xf52 <getPortValues+0x19c>
     e00:	f5 01       	movw	r30, r10
     e02:	ec 52       	subi	r30, 0x2C	; 44
     e04:	fe 4f       	sbci	r31, 0xFE	; 254
     e06:	00 81       	ld	r16, Z
     e08:	11 81       	ldd	r17, Z+1	; 0x01
     e0a:	80 e4       	ldi	r24, 0x40	; 64
     e0c:	cf 53       	subi	r28, 0x3F	; 63
     e0e:	de 4f       	sbci	r29, 0xFE	; 254
     e10:	88 83       	st	Y, r24
     e12:	c1 5c       	subi	r28, 0xC1	; 193
     e14:	d1 40       	sbci	r29, 0x01	; 1
     e16:	e6 5c       	subi	r30, 0xC6	; 198
     e18:	fb 4f       	sbci	r31, 0xFB	; 251
     e1a:	81 e0       	ldi	r24, 0x01	; 1
     e1c:	8c 0d       	add	r24, r12
     e1e:	80 83       	st	Z, r24
     e20:	ae 01       	movw	r20, r28
     e22:	4f 5f       	subi	r20, 0xFF	; 255
     e24:	5f 4f       	sbci	r21, 0xFF	; 255
     e26:	be 01       	movw	r22, r28
     e28:	6f 53       	subi	r22, 0x3F	; 63
     e2a:	7e 4f       	sbci	r23, 0xFE	; 254
     e2c:	c5 01       	movw	r24, r10
     e2e:	0e 94 6c 51 	call	0xa2d8	; 0xa2d8 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime>
     e32:	61 15       	cp	r22, r1
     e34:	71 05       	cpc	r23, r1
     e36:	81 05       	cpc	r24, r1
     e38:	91 05       	cpc	r25, r1
     e3a:	09 f0       	breq	.+2      	; 0xe3e <getPortValues+0x88>
     e3c:	8e c0       	rjmp	.+284    	; 0xf5a <getPortValues+0x1a4>
     e3e:	40 e0       	ldi	r20, 0x00	; 0
     e40:	50 e0       	ldi	r21, 0x00	; 0
     e42:	20 e0       	ldi	r18, 0x00	; 0
     e44:	30 e0       	ldi	r19, 0x00	; 0
     e46:	73 c0       	rjmp	.+230    	; 0xf2e <getPortValues+0x178>
     e48:	d7 01       	movw	r26, r14
     e4a:	12 96       	adiw	r26, 0x02	; 2
     e4c:	8c 91       	ld	r24, X
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	48 17       	cp	r20, r24
     e52:	59 07       	cpc	r21, r25
     e54:	08 f1       	brcs	.+66     	; 0xe98 <getPortValues+0xe2>
     e56:	69 c0       	rjmp	.+210    	; 0xf2a <getPortValues+0x174>
     e58:	f8 01       	movw	r30, r16
     e5a:	a0 81       	ld	r26, Z
     e5c:	b1 81       	ldd	r27, Z+1	; 0x01
     e5e:	fc 01       	movw	r30, r24
     e60:	ee 0f       	add	r30, r30
     e62:	ff 1f       	adc	r31, r31
     e64:	e8 0f       	add	r30, r24
     e66:	f9 1f       	adc	r31, r25
     e68:	ea 0f       	add	r30, r26
     e6a:	fb 1f       	adc	r31, r27
     e6c:	a1 81       	ldd	r26, Z+1	; 0x01
     e6e:	f9 01       	movw	r30, r18
     e70:	ee 0f       	add	r30, r30
     e72:	ff 1f       	adc	r31, r31
     e74:	ee 0f       	add	r30, r30
     e76:	ff 1f       	adc	r31, r31
     e78:	ee 0f       	add	r30, r30
     e7a:	ff 1f       	adc	r31, r31
     e7c:	e2 1b       	sub	r30, r18
     e7e:	f3 0b       	sbc	r31, r19
     e80:	aa 24       	eor	r10, r10
     e82:	a3 94       	inc	r10
     e84:	b1 2c       	mov	r11, r1
     e86:	ac 0e       	add	r10, r28
     e88:	bd 1e       	adc	r11, r29
     e8a:	ea 0d       	add	r30, r10
     e8c:	fb 1d       	adc	r31, r11
     e8e:	e0 81       	ld	r30, Z
     e90:	ae 17       	cp	r26, r30
     e92:	39 f0       	breq	.+14     	; 0xea2 <getPortValues+0xec>
     e94:	01 96       	adiw	r24, 0x01	; 1
     e96:	02 c0       	rjmp	.+4      	; 0xe9c <getPortValues+0xe6>
     e98:	80 e0       	ldi	r24, 0x00	; 0
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	86 17       	cp	r24, r22
     e9e:	97 07       	cpc	r25, r23
     ea0:	d8 f2       	brcs	.-74     	; 0xe58 <getPortValues+0xa2>
     ea2:	86 17       	cp	r24, r22
     ea4:	97 07       	cpc	r25, r23
     ea6:	09 f4       	brne	.+2      	; 0xeaa <getPortValues+0xf4>
     ea8:	40 c0       	rjmp	.+128    	; 0xf2a <getPortValues+0x174>
     eaa:	d7 01       	movw	r26, r14
     eac:	ad 90       	ld	r10, X+
     eae:	bc 90       	ld	r11, X
     eb0:	ba 01       	movw	r22, r20
     eb2:	66 0f       	add	r22, r22
     eb4:	77 1f       	adc	r23, r23
     eb6:	66 0f       	add	r22, r22
     eb8:	77 1f       	adc	r23, r23
     eba:	64 0f       	add	r22, r20
     ebc:	75 1f       	adc	r23, r21
     ebe:	a6 0e       	add	r10, r22
     ec0:	b7 1e       	adc	r11, r23
     ec2:	d8 01       	movw	r26, r16
     ec4:	ed 91       	ld	r30, X+
     ec6:	fc 91       	ld	r31, X
     ec8:	dc 01       	movw	r26, r24
     eca:	aa 0f       	add	r26, r26
     ecc:	bb 1f       	adc	r27, r27
     ece:	8a 0f       	add	r24, r26
     ed0:	9b 1f       	adc	r25, r27
     ed2:	e8 0f       	add	r30, r24
     ed4:	f9 1f       	adc	r31, r25
     ed6:	80 81       	ld	r24, Z
     ed8:	f5 01       	movw	r30, r10
     eda:	80 83       	st	Z, r24
     edc:	d7 01       	movw	r26, r14
     ede:	8d 91       	ld	r24, X+
     ee0:	9c 91       	ld	r25, X
     ee2:	68 0f       	add	r22, r24
     ee4:	79 1f       	adc	r23, r25
     ee6:	c9 01       	movw	r24, r18
     ee8:	88 0f       	add	r24, r24
     eea:	99 1f       	adc	r25, r25
     eec:	88 0f       	add	r24, r24
     eee:	99 1f       	adc	r25, r25
     ef0:	88 0f       	add	r24, r24
     ef2:	99 1f       	adc	r25, r25
     ef4:	82 1b       	sub	r24, r18
     ef6:	93 0b       	sbc	r25, r19
     ef8:	01 96       	adiw	r24, 0x01	; 1
     efa:	e1 e0       	ldi	r30, 0x01	; 1
     efc:	f0 e0       	ldi	r31, 0x00	; 0
     efe:	ec 0f       	add	r30, r28
     f00:	fd 1f       	adc	r31, r29
     f02:	8e 0f       	add	r24, r30
     f04:	9f 1f       	adc	r25, r31
     f06:	f6 01       	movw	r30, r12
     f08:	ee 0f       	add	r30, r30
     f0a:	ff 1f       	adc	r31, r31
     f0c:	e8 0f       	add	r30, r24
     f0e:	f9 1f       	adc	r31, r25
     f10:	80 81       	ld	r24, Z
     f12:	91 81       	ldd	r25, Z+1	; 0x01
     f14:	09 2e       	mov	r0, r25
     f16:	00 0c       	add	r0, r0
     f18:	aa 0b       	sbc	r26, r26
     f1a:	bb 0b       	sbc	r27, r27
     f1c:	fb 01       	movw	r30, r22
     f1e:	81 83       	std	Z+1, r24	; 0x01
     f20:	92 83       	std	Z+2, r25	; 0x02
     f22:	a3 83       	std	Z+3, r26	; 0x03
     f24:	b4 83       	std	Z+4, r27	; 0x04
     f26:	4f 5f       	subi	r20, 0xFF	; 255
     f28:	5f 4f       	sbci	r21, 0xFF	; 255
     f2a:	2f 5f       	subi	r18, 0xFF	; 255
     f2c:	3f 4f       	sbci	r19, 0xFF	; 255
     f2e:	cf 53       	subi	r28, 0x3F	; 63
     f30:	de 4f       	sbci	r29, 0xFE	; 254
     f32:	68 81       	ld	r22, Y
     f34:	c1 5c       	subi	r28, 0xC1	; 193
     f36:	d1 40       	sbci	r29, 0x01	; 1
     f38:	70 e0       	ldi	r23, 0x00	; 0
     f3a:	26 17       	cp	r18, r22
     f3c:	37 07       	cpc	r19, r23
     f3e:	08 f4       	brcc	.+2      	; 0xf42 <getPortValues+0x18c>
     f40:	83 cf       	rjmp	.-250    	; 0xe48 <getPortValues+0x92>
     f42:	d7 01       	movw	r26, r14
     f44:	13 96       	adiw	r26, 0x03	; 3
     f46:	4c 93       	st	X, r20
     f48:	40 e0       	ldi	r20, 0x00	; 0
     f4a:	30 e0       	ldi	r19, 0x00	; 0
     f4c:	20 e0       	ldi	r18, 0x00	; 0
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	07 c0       	rjmp	.+14     	; 0xf60 <getPortValues+0x1aa>
     f52:	46 2f       	mov	r20, r22
     f54:	37 2f       	mov	r19, r23
     f56:	28 2f       	mov	r18, r24
     f58:	03 c0       	rjmp	.+6      	; 0xf60 <getPortValues+0x1aa>
     f5a:	46 2f       	mov	r20, r22
     f5c:	37 2f       	mov	r19, r23
     f5e:	28 2f       	mov	r18, r24
     f60:	64 2f       	mov	r22, r20
     f62:	73 2f       	mov	r23, r19
     f64:	82 2f       	mov	r24, r18
     f66:	cf 53       	subi	r28, 0x3F	; 63
     f68:	de 4f       	sbci	r29, 0xFE	; 254
     f6a:	0f b6       	in	r0, 0x3f	; 63
     f6c:	f8 94       	cli
     f6e:	de bf       	out	0x3e, r29	; 62
     f70:	0f be       	out	0x3f, r0	; 63
     f72:	cd bf       	out	0x3d, r28	; 61
     f74:	df 91       	pop	r29
     f76:	cf 91       	pop	r28
     f78:	1f 91       	pop	r17
     f7a:	0f 91       	pop	r16
     f7c:	ff 90       	pop	r15
     f7e:	ef 90       	pop	r14
     f80:	df 90       	pop	r13
     f82:	cf 90       	pop	r12
     f84:	bf 90       	pop	r11
     f86:	af 90       	pop	r10
     f88:	08 95       	ret

00000f8a <TMR_SR_paramGet>:
     f8a:	2f 92       	push	r2
     f8c:	3f 92       	push	r3
     f8e:	4f 92       	push	r4
     f90:	5f 92       	push	r5
     f92:	6f 92       	push	r6
     f94:	7f 92       	push	r7
     f96:	8f 92       	push	r8
     f98:	9f 92       	push	r9
     f9a:	af 92       	push	r10
     f9c:	bf 92       	push	r11
     f9e:	cf 92       	push	r12
     fa0:	df 92       	push	r13
     fa2:	ef 92       	push	r14
     fa4:	ff 92       	push	r15
     fa6:	0f 93       	push	r16
     fa8:	1f 93       	push	r17
     faa:	cf 93       	push	r28
     fac:	df 93       	push	r29
     fae:	cd b7       	in	r28, 0x3d	; 61
     fb0:	de b7       	in	r29, 0x3e	; 62
     fb2:	c4 5c       	subi	r28, 0xC4	; 196
     fb4:	d1 09       	sbc	r29, r1
     fb6:	0f b6       	in	r0, 0x3f	; 63
     fb8:	f8 94       	cli
     fba:	de bf       	out	0x3e, r29	; 62
     fbc:	0f be       	out	0x3f, r0	; 63
     fbe:	cd bf       	out	0x3d, r28	; 61
     fc0:	0f 2e       	mov	r0, r31
     fc2:	f5 e0       	ldi	r31, 0x05	; 5
     fc4:	3f 2e       	mov	r3, r31
     fc6:	f0 2d       	mov	r31, r0
     fc8:	e6 2e       	mov	r14, r22
     fca:	e6 94       	lsr	r14
     fcc:	e6 94       	lsr	r14
     fce:	e6 94       	lsr	r14
     fd0:	e6 94       	lsr	r14
     fd2:	e6 94       	lsr	r14
     fd4:	f1 2c       	mov	r15, r1
     fd6:	9c 01       	movw	r18, r24
     fd8:	20 58       	subi	r18, 0x80	; 128
     fda:	3e 4f       	sbci	r19, 0xFE	; 254
     fdc:	d7 01       	movw	r26, r14
     fde:	af 57       	subi	r26, 0x7F	; 127
     fe0:	bf 4f       	sbci	r27, 0xFF	; 255
     fe2:	aa 0f       	add	r26, r26
     fe4:	bb 1f       	adc	r27, r27
     fe6:	aa 0f       	add	r26, r26
     fe8:	bb 1f       	adc	r27, r27
     fea:	a2 0f       	add	r26, r18
     fec:	b3 1f       	adc	r27, r19
     fee:	8d 90       	ld	r8, X+
     ff0:	9d 90       	ld	r9, X+
     ff2:	ad 90       	ld	r10, X+
     ff4:	bc 90       	ld	r11, X
     ff6:	06 2f       	mov	r16, r22
     ff8:	0f 71       	andi	r16, 0x1F	; 31
     ffa:	00 2e       	mov	r0, r16
     ffc:	04 c0       	rjmp	.+8      	; 0x1006 <__DATA_REGION_LENGTH__+0x6>
     ffe:	b6 94       	lsr	r11
    1000:	a7 94       	ror	r10
    1002:	97 94       	ror	r9
    1004:	87 94       	ror	r8
    1006:	0a 94       	dec	r0
    1008:	d2 f7       	brpl	.-12     	; 0xffe <TMR_SR_paramGet+0x74>
    100a:	80 fe       	sbrs	r8, 0
    100c:	19 c0       	rjmp	.+50     	; 0x1040 <__DATA_REGION_LENGTH__+0x40>
    100e:	f7 01       	movw	r30, r14
    1010:	eb 57       	subi	r30, 0x7B	; 123
    1012:	ff 4f       	sbci	r31, 0xFF	; 255
    1014:	ee 0f       	add	r30, r30
    1016:	ff 1f       	adc	r31, r31
    1018:	ee 0f       	add	r30, r30
    101a:	ff 1f       	adc	r31, r31
    101c:	e2 0f       	add	r30, r18
    101e:	f3 1f       	adc	r31, r19
    1020:	80 80       	ld	r8, Z
    1022:	91 80       	ldd	r9, Z+1	; 0x01
    1024:	a2 80       	ldd	r10, Z+2	; 0x02
    1026:	b3 80       	ldd	r11, Z+3	; 0x03
    1028:	00 2e       	mov	r0, r16
    102a:	04 c0       	rjmp	.+8      	; 0x1034 <__DATA_REGION_LENGTH__+0x34>
    102c:	b6 94       	lsr	r11
    102e:	a7 94       	ror	r10
    1030:	97 94       	ror	r9
    1032:	87 94       	ror	r8
    1034:	0a 94       	dec	r0
    1036:	d2 f7       	brpl	.-12     	; 0x102c <__DATA_REGION_LENGTH__+0x2c>
    1038:	80 fc       	sbrc	r8, 0
    103a:	02 c0       	rjmp	.+4      	; 0x1040 <__DATA_REGION_LENGTH__+0x40>
    103c:	0c 94 2a 10 	jmp	0x2054	; 0x2054 <__stack+0xf55>
    1040:	5a 01       	movw	r10, r20
    1042:	16 2f       	mov	r17, r22
    1044:	6c 01       	movw	r12, r24
    1046:	86 2f       	mov	r24, r22
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	fc 01       	movw	r30, r24
    104c:	31 97       	sbiw	r30, 0x01	; 1
    104e:	e0 37       	cpi	r30, 0x70	; 112
    1050:	f1 05       	cpc	r31, r1
    1052:	08 f0       	brcs	.+2      	; 0x1056 <__DATA_REGION_LENGTH__+0x56>
    1054:	4a c7       	rjmp	.+3732   	; 0x1eea <__stack+0xdeb>
    1056:	ea 5b       	subi	r30, 0xBA	; 186
    1058:	ff 4f       	sbci	r31, 0xFF	; 255
    105a:	0c 94 d0 74 	jmp	0xe9a0	; 0xe9a0 <__tablejump2__>
    105e:	6a e0       	ldi	r22, 0x0A	; 10
    1060:	41 2c       	mov	r4, r1
    1062:	51 2c       	mov	r5, r1
    1064:	32 01       	movw	r6, r4
    1066:	66 c7       	rjmp	.+3788   	; 0x1f34 <__stack+0xe35>
    1068:	f6 01       	movw	r30, r12
    106a:	e0 53       	subi	r30, 0x30	; 48
    106c:	fe 4f       	sbci	r31, 0xFE	; 254
    106e:	80 81       	ld	r24, Z
    1070:	91 81       	ldd	r25, Z+1	; 0x01
    1072:	a2 81       	ldd	r26, Z+2	; 0x02
    1074:	b3 81       	ldd	r27, Z+3	; 0x03
    1076:	fa 01       	movw	r30, r20
    1078:	80 83       	st	Z, r24
    107a:	91 83       	std	Z+1, r25	; 0x01
    107c:	a2 83       	std	Z+2, r26	; 0x02
    107e:	b3 83       	std	Z+3, r27	; 0x03
    1080:	60 e0       	ldi	r22, 0x00	; 0
    1082:	41 2c       	mov	r4, r1
    1084:	51 2c       	mov	r5, r1
    1086:	32 01       	movw	r6, r4
    1088:	55 c7       	rjmp	.+3754   	; 0x1f34 <__stack+0xe35>
    108a:	da 01       	movw	r26, r20
    108c:	15 96       	adiw	r26, 0x05	; 5
    108e:	1c 92       	st	X, r1
    1090:	1e 92       	st	-X, r1
    1092:	14 97       	sbiw	r26, 0x04	; 4
    1094:	20 e0       	ldi	r18, 0x00	; 0
    1096:	21 c0       	rjmp	.+66     	; 0x10da <__DATA_REGION_LENGTH__+0xda>
    1098:	d5 01       	movw	r26, r10
    109a:	ed 91       	ld	r30, X+
    109c:	fc 91       	ld	r31, X
    109e:	88 0f       	add	r24, r24
    10a0:	99 1f       	adc	r25, r25
    10a2:	88 0f       	add	r24, r24
    10a4:	99 1f       	adc	r25, r25
    10a6:	e8 0f       	add	r30, r24
    10a8:	f9 1f       	adc	r31, r25
    10aa:	d6 01       	movw	r26, r12
    10ac:	a6 53       	subi	r26, 0x36	; 54
    10ae:	ba 4f       	sbci	r27, 0xFA	; 250
    10b0:	4d 91       	ld	r20, X+
    10b2:	5c 91       	ld	r21, X
    10b4:	da 01       	movw	r26, r20
    10b6:	a8 0f       	add	r26, r24
    10b8:	b9 1f       	adc	r27, r25
    10ba:	8d 91       	ld	r24, X+
    10bc:	9d 91       	ld	r25, X+
    10be:	0d 90       	ld	r0, X+
    10c0:	bc 91       	ld	r27, X
    10c2:	a0 2d       	mov	r26, r0
    10c4:	80 83       	st	Z, r24
    10c6:	91 83       	std	Z+1, r25	; 0x01
    10c8:	a2 83       	std	Z+2, r26	; 0x02
    10ca:	b3 83       	std	Z+3, r27	; 0x03
    10cc:	f5 01       	movw	r30, r10
    10ce:	84 81       	ldd	r24, Z+4	; 0x04
    10d0:	95 81       	ldd	r25, Z+5	; 0x05
    10d2:	01 96       	adiw	r24, 0x01	; 1
    10d4:	95 83       	std	Z+5, r25	; 0x05
    10d6:	84 83       	std	Z+4, r24	; 0x04
    10d8:	2f 5f       	subi	r18, 0xFF	; 255
    10da:	82 2f       	mov	r24, r18
    10dc:	90 e0       	ldi	r25, 0x00	; 0
    10de:	f6 01       	movw	r30, r12
    10e0:	e2 53       	subi	r30, 0x32	; 50
    10e2:	fa 4f       	sbci	r31, 0xFA	; 250
    10e4:	40 81       	ld	r20, Z
    10e6:	51 81       	ldd	r21, Z+1	; 0x01
    10e8:	84 17       	cp	r24, r20
    10ea:	95 07       	cpc	r25, r21
    10ec:	08 f0       	brcs	.+2      	; 0x10f0 <__DATA_REGION_LENGTH__+0xf0>
    10ee:	0c c7       	rjmp	.+3608   	; 0x1f08 <__stack+0xe09>
    10f0:	d5 01       	movw	r26, r10
    10f2:	12 96       	adiw	r26, 0x02	; 2
    10f4:	4d 91       	ld	r20, X+
    10f6:	5c 91       	ld	r21, X
    10f8:	13 97       	sbiw	r26, 0x03	; 3
    10fa:	84 17       	cp	r24, r20
    10fc:	95 07       	cpc	r25, r21
    10fe:	60 f2       	brcs	.-104    	; 0x1098 <__DATA_REGION_LENGTH__+0x98>
    1100:	60 e0       	ldi	r22, 0x00	; 0
    1102:	41 2c       	mov	r4, r1
    1104:	51 2c       	mov	r5, r1
    1106:	32 01       	movw	r6, r4
    1108:	15 c7       	rjmp	.+3626   	; 0x1f34 <__stack+0xe35>
    110a:	b6 01       	movw	r22, r12
    110c:	6a 5c       	subi	r22, 0xCA	; 202
    110e:	7f 4f       	sbci	r23, 0xFF	; 255
    1110:	fb 01       	movw	r30, r22
    1112:	01 90       	ld	r0, Z+
    1114:	00 20       	and	r0, r0
    1116:	e9 f7       	brne	.-6      	; 0x1112 <__stack+0x13>
    1118:	31 97       	sbiw	r30, 0x01	; 1
    111a:	af 01       	movw	r20, r30
    111c:	46 1b       	sub	r20, r22
    111e:	57 0b       	sbc	r21, r23
    1120:	c5 01       	movw	r24, r10
    1122:	0e 94 9f 6a 	call	0xd53e	; 0xd53e <TMR_stringCopy>
    1126:	60 e0       	ldi	r22, 0x00	; 0
    1128:	41 2c       	mov	r4, r1
    112a:	51 2c       	mov	r5, r1
    112c:	32 01       	movw	r6, r4
    112e:	02 c7       	rjmp	.+3588   	; 0x1f34 <__stack+0xe35>
    1130:	f6 01       	movw	r30, r12
    1132:	e0 52       	subi	r30, 0x20	; 32
    1134:	fe 4f       	sbci	r31, 0xFE	; 254
    1136:	80 81       	ld	r24, Z
    1138:	91 81       	ldd	r25, Z+1	; 0x01
    113a:	a2 81       	ldd	r26, Z+2	; 0x02
    113c:	b3 81       	ldd	r27, Z+3	; 0x03
    113e:	fa 01       	movw	r30, r20
    1140:	80 83       	st	Z, r24
    1142:	91 83       	std	Z+1, r25	; 0x01
    1144:	a2 83       	std	Z+2, r26	; 0x02
    1146:	b3 83       	std	Z+3, r27	; 0x03
    1148:	60 e0       	ldi	r22, 0x00	; 0
    114a:	41 2c       	mov	r4, r1
    114c:	51 2c       	mov	r5, r1
    114e:	32 01       	movw	r6, r4
    1150:	f1 c6       	rjmp	.+3554   	; 0x1f34 <__stack+0xe35>
    1152:	f6 01       	movw	r30, r12
    1154:	e4 52       	subi	r30, 0x24	; 36
    1156:	fe 4f       	sbci	r31, 0xFE	; 254
    1158:	80 81       	ld	r24, Z
    115a:	91 81       	ldd	r25, Z+1	; 0x01
    115c:	a2 81       	ldd	r26, Z+2	; 0x02
    115e:	b3 81       	ldd	r27, Z+3	; 0x03
    1160:	fa 01       	movw	r30, r20
    1162:	80 83       	st	Z, r24
    1164:	91 83       	std	Z+1, r25	; 0x01
    1166:	a2 83       	std	Z+2, r26	; 0x02
    1168:	b3 83       	std	Z+3, r27	; 0x03
    116a:	60 e0       	ldi	r22, 0x00	; 0
    116c:	41 2c       	mov	r4, r1
    116e:	51 2c       	mov	r5, r1
    1170:	32 01       	movw	r6, r4
    1172:	e0 c6       	rjmp	.+3520   	; 0x1f34 <__stack+0xe35>
    1174:	f6 01       	movw	r30, r12
    1176:	ec 51       	subi	r30, 0x1C	; 28
    1178:	fe 4f       	sbci	r31, 0xFE	; 254
    117a:	80 81       	ld	r24, Z
    117c:	81 11       	cpse	r24, r1
    117e:	0c c0       	rjmp	.+24     	; 0x1198 <__stack+0x99>
    1180:	d6 01       	movw	r26, r12
    1182:	15 96       	adiw	r26, 0x05	; 5
    1184:	8c 91       	ld	r24, X
    1186:	88 23       	and	r24, r24
    1188:	59 f0       	breq	.+22     	; 0x11a0 <__stack+0xa1>
    118a:	bf 01       	movw	r22, r30
    118c:	c6 01       	movw	r24, r12
    118e:	0e 94 2a 56 	call	0xac54	; 0xac54 <TMR_SR_cmdGetRegion>
    1192:	2b 01       	movw	r4, r22
    1194:	3c 01       	movw	r6, r24
    1196:	07 c0       	rjmp	.+14     	; 0x11a6 <__stack+0xa7>
    1198:	41 2c       	mov	r4, r1
    119a:	51 2c       	mov	r5, r1
    119c:	32 01       	movw	r6, r4
    119e:	03 c0       	rjmp	.+6      	; 0x11a6 <__stack+0xa7>
    11a0:	41 2c       	mov	r4, r1
    11a2:	51 2c       	mov	r5, r1
    11a4:	32 01       	movw	r6, r4
    11a6:	f6 01       	movw	r30, r12
    11a8:	ec 51       	subi	r30, 0x1C	; 28
    11aa:	fe 4f       	sbci	r31, 0xFE	; 254
    11ac:	80 81       	ld	r24, Z
    11ae:	f5 01       	movw	r30, r10
    11b0:	80 83       	st	Z, r24
    11b2:	60 e0       	ldi	r22, 0x00	; 0
    11b4:	bf c6       	rjmp	.+3454   	; 0x1f34 <__stack+0xe35>
    11b6:	19 82       	std	Y+1, r1	; 0x01
    11b8:	1a 82       	std	Y+2, r1	; 0x02
    11ba:	1b 82       	std	Y+3, r1	; 0x03
    11bc:	1c 82       	std	Y+4, r1	; 0x04
    11be:	ae 01       	movw	r20, r28
    11c0:	4f 5f       	subi	r20, 0xFF	; 255
    11c2:	5f 4f       	sbci	r21, 0xFF	; 255
    11c4:	6d e0       	ldi	r22, 0x0D	; 13
    11c6:	c6 01       	movw	r24, r12
    11c8:	0e 94 33 57 	call	0xae66	; 0xae66 <TMR_SR_cmdGetReaderConfiguration>
    11cc:	2b 01       	movw	r4, r22
    11ce:	3c 01       	movw	r6, r24
    11d0:	67 2b       	or	r22, r23
    11d2:	68 2b       	or	r22, r24
    11d4:	69 2b       	or	r22, r25
    11d6:	81 f4       	brne	.+32     	; 0x11f8 <__stack+0xf9>
    11d8:	89 81       	ldd	r24, Y+1	; 0x01
    11da:	9a 81       	ldd	r25, Y+2	; 0x02
    11dc:	ab 81       	ldd	r26, Y+3	; 0x03
    11de:	bc 81       	ldd	r27, Y+4	; 0x04
    11e0:	00 97       	sbiw	r24, 0x00	; 0
    11e2:	a1 05       	cpc	r26, r1
    11e4:	b1 05       	cpc	r27, r1
    11e6:	19 f4       	brne	.+6      	; 0x11ee <__stack+0xef>
    11e8:	8f ef       	ldi	r24, 0xFF	; 255
    11ea:	9f ef       	ldi	r25, 0xFF	; 255
    11ec:	dc 01       	movw	r26, r24
    11ee:	f5 01       	movw	r30, r10
    11f0:	80 83       	st	Z, r24
    11f2:	91 83       	std	Z+1, r25	; 0x01
    11f4:	a2 83       	std	Z+2, r26	; 0x02
    11f6:	b3 83       	std	Z+3, r27	; 0x03
    11f8:	60 e0       	ldi	r22, 0x00	; 0
    11fa:	9c c6       	rjmp	.+3384   	; 0x1f34 <__stack+0xe35>
    11fc:	46 01       	movw	r8, r12
    11fe:	f9 e3       	ldi	r31, 0x39	; 57
    1200:	8f 1a       	sub	r8, r31
    1202:	fa ef       	ldi	r31, 0xFA	; 250
    1204:	9f 0a       	sbc	r9, r31
    1206:	a4 01       	movw	r20, r8
    1208:	6c e0       	ldi	r22, 0x0C	; 12
    120a:	c6 01       	movw	r24, r12
    120c:	0e 94 33 57 	call	0xae66	; 0xae66 <TMR_SR_cmdGetReaderConfiguration>
    1210:	2b 01       	movw	r4, r22
    1212:	3c 01       	movw	r6, r24
    1214:	d4 01       	movw	r26, r8
    1216:	8c 91       	ld	r24, X
    1218:	f5 01       	movw	r30, r10
    121a:	80 83       	st	Z, r24
    121c:	60 e0       	ldi	r22, 0x00	; 0
    121e:	8a c6       	rjmp	.+3348   	; 0x1f34 <__stack+0xe35>
    1220:	be 01       	movw	r22, r28
    1222:	6f 5f       	subi	r22, 0xFF	; 255
    1224:	7f 4f       	sbci	r23, 0xFF	; 255
    1226:	c6 01       	movw	r24, r12
    1228:	0e 94 1e 53 	call	0xa63c	; 0xa63c <TMR_SR_cmdGetReadTxPowerWithLimits>
    122c:	2b 01       	movw	r4, r22
    122e:	3c 01       	movw	r6, r24
    1230:	67 2b       	or	r22, r23
    1232:	68 2b       	or	r22, r24
    1234:	69 2b       	or	r22, r25
    1236:	c9 f4       	brne	.+50     	; 0x126a <__stack+0x16b>
    1238:	13 32       	cpi	r17, 0x23	; 35
    123a:	19 f0       	breq	.+6      	; 0x1242 <__stack+0x143>
    123c:	14 32       	cpi	r17, 0x24	; 36
    123e:	39 f0       	breq	.+14     	; 0x124e <__stack+0x14f>
    1240:	0c c0       	rjmp	.+24     	; 0x125a <__stack+0x15b>
    1242:	8b 81       	ldd	r24, Y+3	; 0x03
    1244:	9c 81       	ldd	r25, Y+4	; 0x04
    1246:	d5 01       	movw	r26, r10
    1248:	8d 93       	st	X+, r24
    124a:	9c 93       	st	X, r25
    124c:	0e c0       	rjmp	.+28     	; 0x126a <__stack+0x16b>
    124e:	8d 81       	ldd	r24, Y+5	; 0x05
    1250:	9e 81       	ldd	r25, Y+6	; 0x06
    1252:	f5 01       	movw	r30, r10
    1254:	91 83       	std	Z+1, r25	; 0x01
    1256:	80 83       	st	Z, r24
    1258:	08 c0       	rjmp	.+16     	; 0x126a <__stack+0x16b>
    125a:	0f 2e       	mov	r0, r31
    125c:	f9 e0       	ldi	r31, 0x09	; 9
    125e:	4f 2e       	mov	r4, r31
    1260:	51 2c       	mov	r5, r1
    1262:	61 2c       	mov	r6, r1
    1264:	f3 e0       	ldi	r31, 0x03	; 3
    1266:	7f 2e       	mov	r7, r31
    1268:	f0 2d       	mov	r31, r0
    126a:	60 e0       	ldi	r22, 0x00	; 0
    126c:	63 c6       	rjmp	.+3270   	; 0x1f34 <__stack+0xe35>
    126e:	ba 01       	movw	r22, r20
    1270:	c6 01       	movw	r24, r12
    1272:	0e 94 1b 53 	call	0xa636	; 0xa636 <TMR_SR_cmdGetReadTxPower>
    1276:	2b 01       	movw	r4, r22
    1278:	3c 01       	movw	r6, r24
    127a:	60 e0       	ldi	r22, 0x00	; 0
    127c:	5b c6       	rjmp	.+3254   	; 0x1f34 <__stack+0xe35>
    127e:	ba 01       	movw	r22, r20
    1280:	c6 01       	movw	r24, r12
    1282:	0e 94 73 53 	call	0xa6e6	; 0xa6e6 <TMR_SR_cmdGetWriteTxPower>
    1286:	2b 01       	movw	r4, r22
    1288:	3c 01       	movw	r6, r24
    128a:	60 e0       	ldi	r22, 0x00	; 0
    128c:	53 c6       	rjmp	.+3238   	; 0x1f34 <__stack+0xe35>
    128e:	66 e0       	ldi	r22, 0x06	; 6
    1290:	41 2c       	mov	r4, r1
    1292:	51 2c       	mov	r5, r1
    1294:	32 01       	movw	r6, r4
    1296:	4e c6       	rjmp	.+3228   	; 0x1f34 <__stack+0xe35>
    1298:	60 e0       	ldi	r22, 0x00	; 0
    129a:	41 2c       	mov	r4, r1
    129c:	51 2c       	mov	r5, r1
    129e:	32 01       	movw	r6, r4
    12a0:	49 c6       	rjmp	.+3218   	; 0x1f34 <__stack+0xe35>
    12a2:	68 e0       	ldi	r22, 0x08	; 8
    12a4:	41 2c       	mov	r4, r1
    12a6:	51 2c       	mov	r5, r1
    12a8:	32 01       	movw	r6, r4
    12aa:	44 c6       	rjmp	.+3208   	; 0x1f34 <__stack+0xe35>
    12ac:	6b e0       	ldi	r22, 0x0B	; 11
    12ae:	c6 01       	movw	r24, r12
    12b0:	0e 94 33 57 	call	0xae66	; 0xae66 <TMR_SR_cmdGetReaderConfiguration>
    12b4:	2b 01       	movw	r4, r22
    12b6:	3c 01       	movw	r6, r24
    12b8:	60 e0       	ldi	r22, 0x00	; 0
    12ba:	3c c6       	rjmp	.+3192   	; 0x1f34 <__stack+0xe35>
    12bc:	62 e1       	ldi	r22, 0x12	; 18
    12be:	41 2c       	mov	r4, r1
    12c0:	51 2c       	mov	r5, r1
    12c2:	32 01       	movw	r6, r4
    12c4:	37 c6       	rjmp	.+3182   	; 0x1f34 <__stack+0xe35>
    12c6:	63 e1       	ldi	r22, 0x13	; 19
    12c8:	41 2c       	mov	r4, r1
    12ca:	51 2c       	mov	r5, r1
    12cc:	32 01       	movw	r6, r4
    12ce:	32 c6       	rjmp	.+3172   	; 0x1f34 <__stack+0xe35>
    12d0:	f6 01       	movw	r30, r12
    12d2:	e8 5e       	subi	r30, 0xE8	; 232
    12d4:	f9 4f       	sbci	r31, 0xF9	; 249
    12d6:	90 81       	ld	r25, Z
    12d8:	81 e0       	ldi	r24, 0x01	; 1
    12da:	93 ff       	sbrs	r25, 3
    12dc:	80 e0       	ldi	r24, 0x00	; 0
    12de:	d5 01       	movw	r26, r10
    12e0:	8c 93       	st	X, r24
    12e2:	60 e0       	ldi	r22, 0x00	; 0
    12e4:	41 2c       	mov	r4, r1
    12e6:	51 2c       	mov	r5, r1
    12e8:	32 01       	movw	r6, r4
    12ea:	24 c6       	rjmp	.+3144   	; 0x1f34 <__stack+0xe35>
    12ec:	f6 01       	movw	r30, r12
    12ee:	e8 5e       	subi	r30, 0xE8	; 232
    12f0:	f9 4f       	sbci	r31, 0xF9	; 249
    12f2:	90 81       	ld	r25, Z
    12f4:	81 e0       	ldi	r24, 0x01	; 1
    12f6:	91 ff       	sbrs	r25, 1
    12f8:	80 e0       	ldi	r24, 0x00	; 0
    12fa:	f5 01       	movw	r30, r10
    12fc:	80 83       	st	Z, r24
    12fe:	60 e0       	ldi	r22, 0x00	; 0
    1300:	41 2c       	mov	r4, r1
    1302:	51 2c       	mov	r5, r1
    1304:	32 01       	movw	r6, r4
    1306:	16 c6       	rjmp	.+3116   	; 0x1f34 <__stack+0xe35>
    1308:	f6 01       	movw	r30, r12
    130a:	e8 5e       	subi	r30, 0xE8	; 232
    130c:	f9 4f       	sbci	r31, 0xF9	; 249
    130e:	90 81       	ld	r25, Z
    1310:	81 e0       	ldi	r24, 0x01	; 1
    1312:	92 ff       	sbrs	r25, 2
    1314:	80 e0       	ldi	r24, 0x00	; 0
    1316:	d5 01       	movw	r26, r10
    1318:	8c 93       	st	X, r24
    131a:	60 e0       	ldi	r22, 0x00	; 0
    131c:	41 2c       	mov	r4, r1
    131e:	51 2c       	mov	r5, r1
    1320:	32 01       	movw	r6, r4
    1322:	08 c6       	rjmp	.+3088   	; 0x1f34 <__stack+0xe35>
    1324:	a6 01       	movw	r20, r12
    1326:	4f 5f       	subi	r20, 0xFF	; 255
    1328:	59 4f       	sbci	r21, 0xF9	; 249
    132a:	63 e0       	ldi	r22, 0x03	; 3
    132c:	c6 01       	movw	r24, r12
    132e:	0e 94 33 57 	call	0xae66	; 0xae66 <TMR_SR_cmdGetReaderConfiguration>
    1332:	2b 01       	movw	r4, r22
    1334:	3c 01       	movw	r6, r24
    1336:	67 2b       	or	r22, r23
    1338:	68 2b       	or	r22, r24
    133a:	69 2b       	or	r22, r25
    133c:	09 f0       	breq	.+2      	; 0x1340 <__stack+0x241>
    133e:	e9 c5       	rjmp	.+3026   	; 0x1f12 <__stack+0xe13>
    1340:	f5 01       	movw	r30, r10
    1342:	15 82       	std	Z+5, r1	; 0x05
    1344:	14 82       	std	Z+4, r1	; 0x04
    1346:	f6 01       	movw	r30, r12
    1348:	ef 5f       	subi	r30, 0xFF	; 255
    134a:	f9 4f       	sbci	r31, 0xF9	; 249
    134c:	80 81       	ld	r24, Z
    134e:	81 11       	cpse	r24, r1
    1350:	10 c0       	rjmp	.+32     	; 0x1372 <__stack+0x273>
    1352:	81 e0       	ldi	r24, 0x01	; 1
    1354:	90 e0       	ldi	r25, 0x00	; 0
    1356:	d5 01       	movw	r26, r10
    1358:	15 96       	adiw	r26, 0x05	; 5
    135a:	9c 93       	st	X, r25
    135c:	8e 93       	st	-X, r24
    135e:	14 97       	sbiw	r26, 0x04	; 4
    1360:	12 96       	adiw	r26, 0x02	; 2
    1362:	8d 91       	ld	r24, X+
    1364:	9c 91       	ld	r25, X
    1366:	13 97       	sbiw	r26, 0x03	; 3
    1368:	89 2b       	or	r24, r25
    136a:	19 f0       	breq	.+6      	; 0x1372 <__stack+0x273>
    136c:	ed 91       	ld	r30, X+
    136e:	fc 91       	ld	r31, X
    1370:	10 82       	st	Z, r1
    1372:	20 e0       	ldi	r18, 0x00	; 0
    1374:	23 c0       	rjmp	.+70     	; 0x13bc <__stack+0x2bd>
    1376:	f6 01       	movw	r30, r12
    1378:	ef 5f       	subi	r30, 0xFF	; 255
    137a:	f9 4f       	sbci	r31, 0xF9	; 249
    137c:	80 81       	ld	r24, Z
    137e:	90 e0       	ldi	r25, 0x00	; 0
    1380:	02 2e       	mov	r0, r18
    1382:	02 c0       	rjmp	.+4      	; 0x1388 <__stack+0x289>
    1384:	95 95       	asr	r25
    1386:	87 95       	ror	r24
    1388:	0a 94       	dec	r0
    138a:	e2 f7       	brpl	.-8      	; 0x1384 <__stack+0x285>
    138c:	80 ff       	sbrs	r24, 0
    138e:	15 c0       	rjmp	.+42     	; 0x13ba <__stack+0x2bb>
    1390:	f5 01       	movw	r30, r10
    1392:	84 81       	ldd	r24, Z+4	; 0x04
    1394:	95 81       	ldd	r25, Z+5	; 0x05
    1396:	ac 01       	movw	r20, r24
    1398:	4f 5f       	subi	r20, 0xFF	; 255
    139a:	5f 4f       	sbci	r21, 0xFF	; 255
    139c:	55 83       	std	Z+5, r21	; 0x05
    139e:	44 83       	std	Z+4, r20	; 0x04
    13a0:	62 81       	ldd	r22, Z+2	; 0x02
    13a2:	73 81       	ldd	r23, Z+3	; 0x03
    13a4:	64 17       	cp	r22, r20
    13a6:	75 07       	cpc	r23, r21
    13a8:	40 f0       	brcs	.+16     	; 0x13ba <__stack+0x2bb>
    13aa:	40 81       	ld	r20, Z
    13ac:	51 81       	ldd	r21, Z+1	; 0x01
    13ae:	fa 01       	movw	r30, r20
    13b0:	e8 0f       	add	r30, r24
    13b2:	f9 1f       	adc	r31, r25
    13b4:	31 e0       	ldi	r19, 0x01	; 1
    13b6:	32 0f       	add	r19, r18
    13b8:	30 83       	st	Z, r19
    13ba:	2f 5f       	subi	r18, 0xFF	; 255
    13bc:	24 30       	cpi	r18, 0x04	; 4
    13be:	d8 f2       	brcs	.-74     	; 0x1376 <__stack+0x277>
    13c0:	60 e0       	ldi	r22, 0x00	; 0
    13c2:	b8 c5       	rjmp	.+2928   	; 0x1f34 <__stack+0xe35>
    13c4:	ae 01       	movw	r20, r28
    13c6:	4f 5f       	subi	r20, 0xFF	; 255
    13c8:	5f 4f       	sbci	r21, 0xFF	; 255
    13ca:	6e e1       	ldi	r22, 0x1E	; 30
    13cc:	c6 01       	movw	r24, r12
    13ce:	0e 94 33 57 	call	0xae66	; 0xae66 <TMR_SR_cmdGetReaderConfiguration>
    13d2:	2b 01       	movw	r4, r22
    13d4:	3c 01       	movw	r6, r24
    13d6:	67 2b       	or	r22, r23
    13d8:	68 2b       	or	r22, r24
    13da:	69 2b       	or	r22, r25
    13dc:	49 f5       	brne	.+82     	; 0x1430 <__stack+0x331>
    13de:	d5 01       	movw	r26, r10
    13e0:	15 96       	adiw	r26, 0x05	; 5
    13e2:	1c 92       	st	X, r1
    13e4:	1e 92       	st	-X, r1
    13e6:	14 97       	sbiw	r26, 0x04	; 4
    13e8:	20 e0       	ldi	r18, 0x00	; 0
    13ea:	20 c0       	rjmp	.+64     	; 0x142c <__stack+0x32d>
    13ec:	89 81       	ldd	r24, Y+1	; 0x01
    13ee:	90 e0       	ldi	r25, 0x00	; 0
    13f0:	02 2e       	mov	r0, r18
    13f2:	02 c0       	rjmp	.+4      	; 0x13f8 <__stack+0x2f9>
    13f4:	95 95       	asr	r25
    13f6:	87 95       	ror	r24
    13f8:	0a 94       	dec	r0
    13fa:	e2 f7       	brpl	.-8      	; 0x13f4 <__stack+0x2f5>
    13fc:	80 ff       	sbrs	r24, 0
    13fe:	15 c0       	rjmp	.+42     	; 0x142a <__stack+0x32b>
    1400:	f5 01       	movw	r30, r10
    1402:	84 81       	ldd	r24, Z+4	; 0x04
    1404:	95 81       	ldd	r25, Z+5	; 0x05
    1406:	ac 01       	movw	r20, r24
    1408:	4f 5f       	subi	r20, 0xFF	; 255
    140a:	5f 4f       	sbci	r21, 0xFF	; 255
    140c:	55 83       	std	Z+5, r21	; 0x05
    140e:	44 83       	std	Z+4, r20	; 0x04
    1410:	62 81       	ldd	r22, Z+2	; 0x02
    1412:	73 81       	ldd	r23, Z+3	; 0x03
    1414:	64 17       	cp	r22, r20
    1416:	75 07       	cpc	r23, r21
    1418:	40 f0       	brcs	.+16     	; 0x142a <__stack+0x32b>
    141a:	40 81       	ld	r20, Z
    141c:	51 81       	ldd	r21, Z+1	; 0x01
    141e:	fa 01       	movw	r30, r20
    1420:	e8 0f       	add	r30, r24
    1422:	f9 1f       	adc	r31, r25
    1424:	31 e0       	ldi	r19, 0x01	; 1
    1426:	32 0f       	add	r19, r18
    1428:	30 83       	st	Z, r19
    142a:	2f 5f       	subi	r18, 0xFF	; 255
    142c:	24 30       	cpi	r18, 0x04	; 4
    142e:	f0 f2       	brcs	.-68     	; 0x13ec <__stack+0x2ed>
    1430:	60 e0       	ldi	r22, 0x00	; 0
    1432:	80 c5       	rjmp	.+2816   	; 0x1f34 <__stack+0xe35>
    1434:	42 e0       	ldi	r20, 0x02	; 2
    1436:	50 e0       	ldi	r21, 0x00	; 0
    1438:	b5 01       	movw	r22, r10
    143a:	c6 01       	movw	r24, r12
    143c:	bc dc       	rcall	.-1672   	; 0xdb6 <getPortValues>
    143e:	2b 01       	movw	r4, r22
    1440:	3c 01       	movw	r6, r24
    1442:	60 e0       	ldi	r22, 0x00	; 0
    1444:	77 c5       	rjmp	.+2798   	; 0x1f34 <__stack+0xe35>
    1446:	40 e0       	ldi	r20, 0x00	; 0
    1448:	50 e0       	ldi	r21, 0x00	; 0
    144a:	b5 01       	movw	r22, r10
    144c:	c6 01       	movw	r24, r12
    144e:	b3 dc       	rcall	.-1690   	; 0xdb6 <getPortValues>
    1450:	2b 01       	movw	r4, r22
    1452:	3c 01       	movw	r6, r24
    1454:	60 e0       	ldi	r22, 0x00	; 0
    1456:	6e c5       	rjmp	.+2780   	; 0x1f34 <__stack+0xe35>
    1458:	41 e0       	ldi	r20, 0x01	; 1
    145a:	50 e0       	ldi	r21, 0x00	; 0
    145c:	b5 01       	movw	r22, r10
    145e:	c6 01       	movw	r24, r12
    1460:	aa dc       	rcall	.-1708   	; 0xdb6 <getPortValues>
    1462:	2b 01       	movw	r4, r22
    1464:	3c 01       	movw	r6, r24
    1466:	60 e0       	ldi	r22, 0x00	; 0
    1468:	65 c5       	rjmp	.+2762   	; 0x1f34 <__stack+0xe35>
    146a:	ba 01       	movw	r22, r20
    146c:	c6 01       	movw	r24, r12
    146e:	0e 94 4a 52 	call	0xa494	; 0xa494 <TMR_SR_cmdGetAntennaReturnLoss>
    1472:	2b 01       	movw	r4, r22
    1474:	3c 01       	movw	r6, r24
    1476:	60 e0       	ldi	r22, 0x00	; 0
    1478:	5d c5       	rjmp	.+2746   	; 0x1f34 <__stack+0xe35>
    147a:	da 01       	movw	r26, r20
    147c:	15 96       	adiw	r26, 0x05	; 5
    147e:	1c 92       	st	X, r1
    1480:	1e 92       	st	-X, r1
    1482:	14 97       	sbiw	r26, 0x04	; 4
    1484:	80 e1       	ldi	r24, 0x10	; 16
    1486:	cf 57       	subi	r28, 0x7F	; 127
    1488:	df 4f       	sbci	r29, 0xFF	; 255
    148a:	88 83       	st	Y, r24
    148c:	c1 58       	subi	r28, 0x81	; 129
    148e:	d0 40       	sbci	r29, 0x00	; 0
    1490:	ae 01       	movw	r20, r28
    1492:	4f 5f       	subi	r20, 0xFF	; 255
    1494:	5f 4f       	sbci	r21, 0xFF	; 255
    1496:	be 01       	movw	r22, r28
    1498:	6f 57       	subi	r22, 0x7F	; 127
    149a:	7f 4f       	sbci	r23, 0xFF	; 255
    149c:	c6 01       	movw	r24, r12
    149e:	0e 94 82 54 	call	0xa904	; 0xa904 <TMR_SR_cmdGetGPIO>
    14a2:	2b 01       	movw	r4, r22
    14a4:	3c 01       	movw	r6, r24
    14a6:	67 2b       	or	r22, r23
    14a8:	68 2b       	or	r22, r24
    14aa:	69 2b       	or	r22, r25
    14ac:	09 f0       	breq	.+2      	; 0x14b0 <__stack+0x3b1>
    14ae:	84 c0       	rjmp	.+264    	; 0x15b8 <__stack+0x4b9>
    14b0:	81 e0       	ldi	r24, 0x01	; 1
    14b2:	10 31       	cpi	r17, 0x10	; 16
    14b4:	09 f0       	breq	.+2      	; 0x14b8 <__stack+0x3b9>
    14b6:	80 e0       	ldi	r24, 0x00	; 0
    14b8:	e8 2f       	mov	r30, r24
    14ba:	f0 e0       	ldi	r31, 0x00	; 0
    14bc:	cd 53       	subi	r28, 0x3D	; 61
    14be:	df 4f       	sbci	r29, 0xFF	; 255
    14c0:	f9 83       	std	Y+1, r31	; 0x01
    14c2:	e8 83       	st	Y, r30
    14c4:	c3 5c       	subi	r28, 0xC3	; 195
    14c6:	d0 40       	sbci	r29, 0x00	; 0
    14c8:	f6 01       	movw	r30, r12
    14ca:	ed 57       	subi	r30, 0x7D	; 125
    14cc:	fc 4f       	sbci	r31, 0xFC	; 252
    14ce:	10 82       	st	Z, r1
    14d0:	88 24       	eor	r8, r8
    14d2:	83 94       	inc	r8
    14d4:	91 2c       	mov	r9, r1
    14d6:	26 c0       	rjmp	.+76     	; 0x1524 <__stack+0x425>
    14d8:	ae 01       	movw	r20, r28
    14da:	4e 53       	subi	r20, 0x3E	; 62
    14dc:	5f 4f       	sbci	r21, 0xFF	; 255
    14de:	68 2d       	mov	r22, r8
    14e0:	c6 01       	movw	r24, r12
    14e2:	0e 94 14 55 	call	0xaa28	; 0xaa28 <TMR_SR_cmdGetGPIODirection>
    14e6:	2b 01       	movw	r4, r22
    14e8:	3c 01       	movw	r6, r24
    14ea:	67 2b       	or	r22, r23
    14ec:	68 2b       	or	r22, r24
    14ee:	69 2b       	or	r22, r25
    14f0:	09 f0       	breq	.+2      	; 0x14f4 <__stack+0x3f5>
    14f2:	62 c0       	rjmp	.+196    	; 0x15b8 <__stack+0x4b9>
    14f4:	ce 53       	subi	r28, 0x3E	; 62
    14f6:	df 4f       	sbci	r29, 0xFF	; 255
    14f8:	88 81       	ld	r24, Y
    14fa:	c2 5c       	subi	r28, 0xC2	; 194
    14fc:	d0 40       	sbci	r29, 0x00	; 0
    14fe:	88 23       	and	r24, r24
    1500:	71 f0       	breq	.+28     	; 0x151e <__stack+0x41f>
    1502:	81 e0       	ldi	r24, 0x01	; 1
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	08 2c       	mov	r0, r8
    1508:	02 c0       	rjmp	.+4      	; 0x150e <__stack+0x40f>
    150a:	88 0f       	add	r24, r24
    150c:	99 1f       	adc	r25, r25
    150e:	0a 94       	dec	r0
    1510:	e2 f7       	brpl	.-8      	; 0x150a <__stack+0x40b>
    1512:	f6 01       	movw	r30, r12
    1514:	ed 57       	subi	r30, 0x7D	; 125
    1516:	fc 4f       	sbci	r31, 0xFC	; 252
    1518:	90 81       	ld	r25, Z
    151a:	89 2b       	or	r24, r25
    151c:	80 83       	st	Z, r24
    151e:	ff ef       	ldi	r31, 0xFF	; 255
    1520:	8f 1a       	sub	r8, r31
    1522:	9f 0a       	sbc	r9, r31
    1524:	cf 57       	subi	r28, 0x7F	; 127
    1526:	df 4f       	sbci	r29, 0xFF	; 255
    1528:	88 81       	ld	r24, Y
    152a:	c1 58       	subi	r28, 0x81	; 129
    152c:	d0 40       	sbci	r29, 0x00	; 0
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	88 15       	cp	r24, r8
    1532:	99 05       	cpc	r25, r9
    1534:	8c f6       	brge	.-94     	; 0x14d8 <__stack+0x3d9>
    1536:	21 e0       	ldi	r18, 0x01	; 1
    1538:	30 e0       	ldi	r19, 0x00	; 0
    153a:	33 c0       	rjmp	.+102    	; 0x15a2 <__stack+0x4a3>
    153c:	f6 01       	movw	r30, r12
    153e:	ed 57       	subi	r30, 0x7D	; 125
    1540:	fc 4f       	sbci	r31, 0xFC	; 252
    1542:	80 81       	ld	r24, Z
    1544:	08 2e       	mov	r0, r24
    1546:	00 0c       	add	r0, r0
    1548:	99 0b       	sbc	r25, r25
    154a:	02 2e       	mov	r0, r18
    154c:	02 c0       	rjmp	.+4      	; 0x1552 <__stack+0x453>
    154e:	95 95       	asr	r25
    1550:	87 95       	ror	r24
    1552:	0a 94       	dec	r0
    1554:	e2 f7       	brpl	.-8      	; 0x154e <__stack+0x44f>
    1556:	81 70       	andi	r24, 0x01	; 1
    1558:	99 27       	eor	r25, r25
    155a:	cd 53       	subi	r28, 0x3D	; 61
    155c:	df 4f       	sbci	r29, 0xFF	; 255
    155e:	48 81       	ld	r20, Y
    1560:	59 81       	ldd	r21, Y+1	; 0x01
    1562:	c3 5c       	subi	r28, 0xC3	; 195
    1564:	d0 40       	sbci	r29, 0x00	; 0
    1566:	48 17       	cp	r20, r24
    1568:	59 07       	cpc	r21, r25
    156a:	c9 f4       	brne	.+50     	; 0x159e <__stack+0x49f>
    156c:	d5 01       	movw	r26, r10
    156e:	14 96       	adiw	r26, 0x04	; 4
    1570:	8d 91       	ld	r24, X+
    1572:	9c 91       	ld	r25, X
    1574:	15 97       	sbiw	r26, 0x05	; 5
    1576:	ac 01       	movw	r20, r24
    1578:	4f 5f       	subi	r20, 0xFF	; 255
    157a:	5f 4f       	sbci	r21, 0xFF	; 255
    157c:	15 96       	adiw	r26, 0x05	; 5
    157e:	5c 93       	st	X, r21
    1580:	4e 93       	st	-X, r20
    1582:	14 97       	sbiw	r26, 0x04	; 4
    1584:	12 96       	adiw	r26, 0x02	; 2
    1586:	6d 91       	ld	r22, X+
    1588:	7c 91       	ld	r23, X
    158a:	13 97       	sbiw	r26, 0x03	; 3
    158c:	64 17       	cp	r22, r20
    158e:	75 07       	cpc	r23, r21
    1590:	30 f0       	brcs	.+12     	; 0x159e <__stack+0x49f>
    1592:	4d 91       	ld	r20, X+
    1594:	5c 91       	ld	r21, X
    1596:	fa 01       	movw	r30, r20
    1598:	e8 0f       	add	r30, r24
    159a:	f9 1f       	adc	r31, r25
    159c:	20 83       	st	Z, r18
    159e:	2f 5f       	subi	r18, 0xFF	; 255
    15a0:	3f 4f       	sbci	r19, 0xFF	; 255
    15a2:	cf 57       	subi	r28, 0x7F	; 127
    15a4:	df 4f       	sbci	r29, 0xFF	; 255
    15a6:	88 81       	ld	r24, Y
    15a8:	c1 58       	subi	r28, 0x81	; 129
    15aa:	d0 40       	sbci	r29, 0x00	; 0
    15ac:	90 e0       	ldi	r25, 0x00	; 0
    15ae:	82 17       	cp	r24, r18
    15b0:	93 07       	cpc	r25, r19
    15b2:	24 f6       	brge	.-120    	; 0x153c <__stack+0x43d>
    15b4:	60 e0       	ldi	r22, 0x00	; 0
    15b6:	be c4       	rjmp	.+2428   	; 0x1f34 <__stack+0xe35>
    15b8:	64 2d       	mov	r22, r4
    15ba:	75 2d       	mov	r23, r5
    15bc:	86 2d       	mov	r24, r6
    15be:	97 2d       	mov	r25, r7
    15c0:	5e c5       	rjmp	.+2748   	; 0x207e <__stack+0xf7f>
    15c2:	f6 01       	movw	r30, r12
    15c4:	ec 52       	subi	r30, 0x2C	; 44
    15c6:	fe 4f       	sbci	r31, 0xFE	; 254
    15c8:	80 81       	ld	r24, Z
    15ca:	91 81       	ldd	r25, Z+1	; 0x01
    15cc:	89 2b       	or	r24, r25
    15ce:	51 f4       	brne	.+20     	; 0x15e4 <__stack+0x4e5>
    15d0:	c6 01       	movw	r24, r12
    15d2:	b6 da       	rcall	.-2708   	; 0xb40 <initTxRxMapFromPorts>
    15d4:	2b 01       	movw	r4, r22
    15d6:	3c 01       	movw	r6, r24
    15d8:	61 15       	cp	r22, r1
    15da:	71 05       	cpc	r23, r1
    15dc:	81 05       	cpc	r24, r1
    15de:	91 05       	cpc	r25, r1
    15e0:	09 f0       	breq	.+2      	; 0x15e4 <__stack+0x4e5>
    15e2:	3d c5       	rjmp	.+2682   	; 0x205e <__stack+0xf5f>
    15e4:	f5 01       	movw	r30, r10
    15e6:	15 82       	std	Z+5, r1	; 0x05
    15e8:	14 82       	std	Z+4, r1	; 0x04
    15ea:	60 e0       	ldi	r22, 0x00	; 0
    15ec:	2b c0       	rjmp	.+86     	; 0x1644 <__stack+0x545>
    15ee:	d5 01       	movw	r26, r10
    15f0:	14 96       	adiw	r26, 0x04	; 4
    15f2:	2d 91       	ld	r18, X+
    15f4:	3c 91       	ld	r19, X
    15f6:	15 97       	sbiw	r26, 0x05	; 5
    15f8:	c9 01       	movw	r24, r18
    15fa:	01 96       	adiw	r24, 0x01	; 1
    15fc:	15 96       	adiw	r26, 0x05	; 5
    15fe:	9c 93       	st	X, r25
    1600:	8e 93       	st	-X, r24
    1602:	14 97       	sbiw	r26, 0x04	; 4
    1604:	12 96       	adiw	r26, 0x02	; 2
    1606:	4d 91       	ld	r20, X+
    1608:	5c 91       	ld	r21, X
    160a:	13 97       	sbiw	r26, 0x03	; 3
    160c:	48 17       	cp	r20, r24
    160e:	59 07       	cpc	r21, r25
    1610:	c0 f0       	brcs	.+48     	; 0x1642 <__stack+0x543>
    1612:	ed 91       	ld	r30, X+
    1614:	fc 91       	ld	r31, X
    1616:	e2 0f       	add	r30, r18
    1618:	f3 1f       	adc	r31, r19
    161a:	d6 01       	movw	r26, r12
    161c:	ac 52       	subi	r26, 0x2C	; 44
    161e:	be 4f       	sbci	r27, 0xFE	; 254
    1620:	0d 90       	ld	r0, X+
    1622:	bc 91       	ld	r27, X
    1624:	a0 2d       	mov	r26, r0
    1626:	2d 91       	ld	r18, X+
    1628:	3c 91       	ld	r19, X
    162a:	86 2f       	mov	r24, r22
    162c:	90 e0       	ldi	r25, 0x00	; 0
    162e:	ac 01       	movw	r20, r24
    1630:	44 0f       	add	r20, r20
    1632:	55 1f       	adc	r21, r21
    1634:	84 0f       	add	r24, r20
    1636:	95 1f       	adc	r25, r21
    1638:	d9 01       	movw	r26, r18
    163a:	a8 0f       	add	r26, r24
    163c:	b9 1f       	adc	r27, r25
    163e:	8c 91       	ld	r24, X
    1640:	80 83       	st	Z, r24
    1642:	6f 5f       	subi	r22, 0xFF	; 255
    1644:	f6 01       	movw	r30, r12
    1646:	ec 52       	subi	r30, 0x2C	; 44
    1648:	fe 4f       	sbci	r31, 0xFE	; 254
    164a:	01 90       	ld	r0, Z+
    164c:	f0 81       	ld	r31, Z
    164e:	e0 2d       	mov	r30, r0
    1650:	83 81       	ldd	r24, Z+3	; 0x03
    1652:	68 17       	cp	r22, r24
    1654:	60 f2       	brcs	.-104    	; 0x15ee <__stack+0x4ef>
    1656:	60 e0       	ldi	r22, 0x00	; 0
    1658:	41 2c       	mov	r4, r1
    165a:	51 2c       	mov	r5, r1
    165c:	32 01       	movw	r6, r4
    165e:	6a c4       	rjmp	.+2260   	; 0x1f34 <__stack+0xe35>
    1660:	fe 01       	movw	r30, r28
    1662:	ef 57       	subi	r30, 0x7F	; 127
    1664:	ff 4f       	sbci	r31, 0xFF	; 255
    1666:	81 e4       	ldi	r24, 0x41	; 65
    1668:	df 01       	movw	r26, r30
    166a:	1d 92       	st	X+, r1
    166c:	8a 95       	dec	r24
    166e:	e9 f7       	brne	.-6      	; 0x166a <__stack+0x56b>
    1670:	80 e4       	ldi	r24, 0x40	; 64
    1672:	ce 53       	subi	r28, 0x3E	; 62
    1674:	df 4f       	sbci	r29, 0xFF	; 255
    1676:	88 83       	st	Y, r24
    1678:	c2 5c       	subi	r28, 0xC2	; 194
    167a:	d0 40       	sbci	r29, 0x00	; 0
    167c:	ae 01       	movw	r20, r28
    167e:	4f 5f       	subi	r20, 0xFF	; 255
    1680:	5f 4f       	sbci	r21, 0xFF	; 255
    1682:	be 01       	movw	r22, r28
    1684:	6e 53       	subi	r22, 0x3E	; 62
    1686:	7f 4f       	sbci	r23, 0xFF	; 255
    1688:	c6 01       	movw	r24, r12
    168a:	0e 94 fe 50 	call	0xa1fc	; 0xa1fc <TMR_SR_cmdAntennaDetect>
    168e:	2b 01       	movw	r4, r22
    1690:	3c 01       	movw	r6, r24
    1692:	67 2b       	or	r22, r23
    1694:	68 2b       	or	r22, r24
    1696:	69 2b       	or	r22, r25
    1698:	09 f0       	breq	.+2      	; 0x169c <__stack+0x59d>
    169a:	72 c0       	rjmp	.+228    	; 0x1780 <__stack+0x681>
    169c:	80 e0       	ldi	r24, 0x00	; 0
    169e:	14 c0       	rjmp	.+40     	; 0x16c8 <__stack+0x5c9>
    16a0:	e8 2f       	mov	r30, r24
    16a2:	f0 e0       	ldi	r31, 0x00	; 0
    16a4:	ee 0f       	add	r30, r30
    16a6:	ff 1f       	adc	r31, r31
    16a8:	21 e0       	ldi	r18, 0x01	; 1
    16aa:	30 e0       	ldi	r19, 0x00	; 0
    16ac:	2c 0f       	add	r18, r28
    16ae:	3d 1f       	adc	r19, r29
    16b0:	e2 0f       	add	r30, r18
    16b2:	f3 1f       	adc	r31, r19
    16b4:	20 81       	ld	r18, Z
    16b6:	91 81       	ldd	r25, Z+1	; 0x01
    16b8:	e1 e8       	ldi	r30, 0x81	; 129
    16ba:	f0 e0       	ldi	r31, 0x00	; 0
    16bc:	ec 0f       	add	r30, r28
    16be:	fd 1f       	adc	r31, r29
    16c0:	e2 0f       	add	r30, r18
    16c2:	f1 1d       	adc	r31, r1
    16c4:	90 83       	st	Z, r25
    16c6:	8f 5f       	subi	r24, 0xFF	; 255
    16c8:	ce 53       	subi	r28, 0x3E	; 62
    16ca:	df 4f       	sbci	r29, 0xFF	; 255
    16cc:	48 81       	ld	r20, Y
    16ce:	c2 5c       	subi	r28, 0xC2	; 194
    16d0:	d0 40       	sbci	r29, 0x00	; 0
    16d2:	84 17       	cp	r24, r20
    16d4:	28 f3       	brcs	.-54     	; 0x16a0 <__stack+0x5a1>
    16d6:	f6 01       	movw	r30, r12
    16d8:	ec 52       	subi	r30, 0x2C	; 44
    16da:	fe 4f       	sbci	r31, 0xFE	; 254
    16dc:	80 81       	ld	r24, Z
    16de:	91 81       	ldd	r25, Z+1	; 0x01
    16e0:	89 2b       	or	r24, r25
    16e2:	29 f4       	brne	.+10     	; 0x16ee <__stack+0x5ef>
    16e4:	be 01       	movw	r22, r28
    16e6:	6f 5f       	subi	r22, 0xFF	; 255
    16e8:	7f 4f       	sbci	r23, 0xFF	; 255
    16ea:	c6 01       	movw	r24, r12
    16ec:	d2 d9       	rcall	.-3164   	; 0xa92 <updateTxRxMapData>
    16ee:	d5 01       	movw	r26, r10
    16f0:	15 96       	adiw	r26, 0x05	; 5
    16f2:	1c 92       	st	X, r1
    16f4:	1e 92       	st	-X, r1
    16f6:	14 97       	sbiw	r26, 0x04	; 4
    16f8:	20 e0       	ldi	r18, 0x00	; 0
    16fa:	38 c0       	rjmp	.+112    	; 0x176c <__stack+0x66d>
    16fc:	40 81       	ld	r20, Z
    16fe:	51 81       	ldd	r21, Z+1	; 0x01
    1700:	82 2f       	mov	r24, r18
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	fc 01       	movw	r30, r24
    1706:	ee 0f       	add	r30, r30
    1708:	ff 1f       	adc	r31, r31
    170a:	8e 0f       	add	r24, r30
    170c:	9f 1f       	adc	r25, r31
    170e:	fa 01       	movw	r30, r20
    1710:	e8 0f       	add	r30, r24
    1712:	f9 1f       	adc	r31, r25
    1714:	40 81       	ld	r20, Z
    1716:	31 81       	ldd	r19, Z+1	; 0x01
    1718:	82 81       	ldd	r24, Z+2	; 0x02
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	e1 e8       	ldi	r30, 0x81	; 129
    171e:	f0 e0       	ldi	r31, 0x00	; 0
    1720:	ec 0f       	add	r30, r28
    1722:	fd 1f       	adc	r31, r29
    1724:	e3 0f       	add	r30, r19
    1726:	f1 1d       	adc	r31, r1
    1728:	30 81       	ld	r19, Z
    172a:	33 23       	and	r19, r19
    172c:	f1 f0       	breq	.+60     	; 0x176a <__stack+0x66b>
    172e:	e1 e8       	ldi	r30, 0x81	; 129
    1730:	f0 e0       	ldi	r31, 0x00	; 0
    1732:	ec 0f       	add	r30, r28
    1734:	fd 1f       	adc	r31, r29
    1736:	e8 0f       	add	r30, r24
    1738:	f9 1f       	adc	r31, r25
    173a:	80 81       	ld	r24, Z
    173c:	88 23       	and	r24, r24
    173e:	a9 f0       	breq	.+42     	; 0x176a <__stack+0x66b>
    1740:	f5 01       	movw	r30, r10
    1742:	84 81       	ldd	r24, Z+4	; 0x04
    1744:	95 81       	ldd	r25, Z+5	; 0x05
    1746:	bc 01       	movw	r22, r24
    1748:	6f 5f       	subi	r22, 0xFF	; 255
    174a:	7f 4f       	sbci	r23, 0xFF	; 255
    174c:	75 83       	std	Z+5, r23	; 0x05
    174e:	64 83       	std	Z+4, r22	; 0x04
    1750:	02 80       	ldd	r0, Z+2	; 0x02
    1752:	f3 81       	ldd	r31, Z+3	; 0x03
    1754:	e0 2d       	mov	r30, r0
    1756:	e6 17       	cp	r30, r22
    1758:	f7 07       	cpc	r31, r23
    175a:	38 f0       	brcs	.+14     	; 0x176a <__stack+0x66b>
    175c:	d5 01       	movw	r26, r10
    175e:	6d 91       	ld	r22, X+
    1760:	7c 91       	ld	r23, X
    1762:	fb 01       	movw	r30, r22
    1764:	e8 0f       	add	r30, r24
    1766:	f9 1f       	adc	r31, r25
    1768:	40 83       	st	Z, r20
    176a:	2f 5f       	subi	r18, 0xFF	; 255
    176c:	f6 01       	movw	r30, r12
    176e:	ec 52       	subi	r30, 0x2C	; 44
    1770:	fe 4f       	sbci	r31, 0xFE	; 254
    1772:	01 90       	ld	r0, Z+
    1774:	f0 81       	ld	r31, Z
    1776:	e0 2d       	mov	r30, r0
    1778:	83 81       	ldd	r24, Z+3	; 0x03
    177a:	28 17       	cp	r18, r24
    177c:	08 f4       	brcc	.+2      	; 0x1780 <__stack+0x681>
    177e:	be cf       	rjmp	.-132    	; 0x16fc <__stack+0x5fd>
    1780:	60 e0       	ldi	r22, 0x00	; 0
    1782:	d8 c3       	rjmp	.+1968   	; 0x1f34 <__stack+0xe35>
    1784:	f6 01       	movw	r30, r12
    1786:	ec 52       	subi	r30, 0x2C	; 44
    1788:	fe 4f       	sbci	r31, 0xFE	; 254
    178a:	80 81       	ld	r24, Z
    178c:	91 81       	ldd	r25, Z+1	; 0x01
    178e:	89 2b       	or	r24, r25
    1790:	51 f4       	brne	.+20     	; 0x17a6 <__stack+0x6a7>
    1792:	c6 01       	movw	r24, r12
    1794:	d5 d9       	rcall	.-3158   	; 0xb40 <initTxRxMapFromPorts>
    1796:	2b 01       	movw	r4, r22
    1798:	3c 01       	movw	r6, r24
    179a:	61 15       	cp	r22, r1
    179c:	71 05       	cpc	r23, r1
    179e:	81 05       	cpc	r24, r1
    17a0:	91 05       	cpc	r25, r1
    17a2:	21 f0       	breq	.+8      	; 0x17ac <__stack+0x6ad>
    17a4:	60 c4       	rjmp	.+2240   	; 0x2066 <__stack+0xf67>
    17a6:	41 2c       	mov	r4, r1
    17a8:	51 2c       	mov	r5, r1
    17aa:	32 01       	movw	r6, r4
    17ac:	f6 01       	movw	r30, r12
    17ae:	ec 52       	subi	r30, 0x2C	; 44
    17b0:	fe 4f       	sbci	r31, 0xFE	; 254
    17b2:	01 90       	ld	r0, Z+
    17b4:	f0 81       	ld	r31, Z
    17b6:	e0 2d       	mov	r30, r0
    17b8:	20 e0       	ldi	r18, 0x00	; 0
    17ba:	30 e0       	ldi	r19, 0x00	; 0
    17bc:	19 c0       	rjmp	.+50     	; 0x17f0 <__stack+0x6f1>
    17be:	d5 01       	movw	r26, r10
    17c0:	4d 91       	ld	r20, X+
    17c2:	5c 91       	ld	r21, X
    17c4:	c9 01       	movw	r24, r18
    17c6:	88 0f       	add	r24, r24
    17c8:	99 1f       	adc	r25, r25
    17ca:	82 0f       	add	r24, r18
    17cc:	93 1f       	adc	r25, r19
    17ce:	4a 01       	movw	r8, r20
    17d0:	88 0e       	add	r8, r24
    17d2:	99 1e       	adc	r9, r25
    17d4:	40 81       	ld	r20, Z
    17d6:	51 81       	ldd	r21, Z+1	; 0x01
    17d8:	84 0f       	add	r24, r20
    17da:	95 1f       	adc	r25, r21
    17dc:	dc 01       	movw	r26, r24
    17de:	4d 91       	ld	r20, X+
    17e0:	5d 91       	ld	r21, X+
    17e2:	6c 91       	ld	r22, X
    17e4:	d4 01       	movw	r26, r8
    17e6:	4d 93       	st	X+, r20
    17e8:	5d 93       	st	X+, r21
    17ea:	6c 93       	st	X, r22
    17ec:	2f 5f       	subi	r18, 0xFF	; 255
    17ee:	3f 4f       	sbci	r19, 0xFF	; 255
    17f0:	43 81       	ldd	r20, Z+3	; 0x03
    17f2:	84 2f       	mov	r24, r20
    17f4:	90 e0       	ldi	r25, 0x00	; 0
    17f6:	28 17       	cp	r18, r24
    17f8:	39 07       	cpc	r19, r25
    17fa:	38 f4       	brcc	.+14     	; 0x180a <__stack+0x70b>
    17fc:	d5 01       	movw	r26, r10
    17fe:	12 96       	adiw	r26, 0x02	; 2
    1800:	8c 91       	ld	r24, X
    1802:	90 e0       	ldi	r25, 0x00	; 0
    1804:	28 17       	cp	r18, r24
    1806:	39 07       	cpc	r19, r25
    1808:	d0 f2       	brcs	.-76     	; 0x17be <__stack+0x6bf>
    180a:	f5 01       	movw	r30, r10
    180c:	43 83       	std	Z+3, r20	; 0x03
    180e:	60 e0       	ldi	r22, 0x00	; 0
    1810:	91 c3       	rjmp	.+1826   	; 0x1f34 <__stack+0xe35>
    1812:	da 01       	movw	r26, r20
    1814:	12 96       	adiw	r26, 0x02	; 2
    1816:	8c 91       	ld	r24, X
    1818:	12 97       	sbiw	r26, 0x02	; 2
    181a:	89 83       	std	Y+1, r24	; 0x01
    181c:	4d 91       	ld	r20, X+
    181e:	5c 91       	ld	r21, X
    1820:	be 01       	movw	r22, r28
    1822:	6f 5f       	subi	r22, 0xFF	; 255
    1824:	7f 4f       	sbci	r23, 0xFF	; 255
    1826:	c6 01       	movw	r24, r12
    1828:	0e 94 76 53 	call	0xa6ec	; 0xa6ec <TMR_SR_cmdGetFrequencyHopTable>
    182c:	2b 01       	movw	r4, r22
    182e:	3c 01       	movw	r6, r24
    1830:	67 2b       	or	r22, r23
    1832:	68 2b       	or	r22, r24
    1834:	69 2b       	or	r22, r25
    1836:	29 f4       	brne	.+10     	; 0x1842 <__stack+0x743>
    1838:	89 81       	ldd	r24, Y+1	; 0x01
    183a:	90 e0       	ldi	r25, 0x00	; 0
    183c:	f5 01       	movw	r30, r10
    183e:	95 83       	std	Z+5, r25	; 0x05
    1840:	84 83       	std	Z+4, r24	; 0x04
    1842:	60 e0       	ldi	r22, 0x00	; 0
    1844:	77 c3       	rjmp	.+1774   	; 0x1f34 <__stack+0xe35>
    1846:	ba 01       	movw	r22, r20
    1848:	c6 01       	movw	r24, r12
    184a:	0e 94 79 54 	call	0xa8f2	; 0xa8f2 <TMR_SR_cmdGetFrequencyHopTime>
    184e:	2b 01       	movw	r4, r22
    1850:	3c 01       	movw	r6, r24
    1852:	60 e0       	ldi	r22, 0x00	; 0
    1854:	6f c3       	rjmp	.+1758   	; 0x1f34 <__stack+0xe35>
    1856:	63 e4       	ldi	r22, 0x43	; 67
    1858:	c6 01       	movw	r24, r12
    185a:	0e 94 5b 56 	call	0xacb6	; 0xacb6 <TMR_SR_cmdGetRegionConfiguration>
    185e:	2b 01       	movw	r4, r22
    1860:	3c 01       	movw	r6, r24
    1862:	60 e0       	ldi	r22, 0x00	; 0
    1864:	67 c3       	rjmp	.+1742   	; 0x1f34 <__stack+0xe35>
    1866:	62 e4       	ldi	r22, 0x42	; 66
    1868:	c6 01       	movw	r24, r12
    186a:	0e 94 5b 56 	call	0xacb6	; 0xacb6 <TMR_SR_cmdGetRegionConfiguration>
    186e:	2b 01       	movw	r4, r22
    1870:	3c 01       	movw	r6, r24
    1872:	60 e0       	ldi	r22, 0x00	; 0
    1874:	5f c3       	rjmp	.+1726   	; 0x1f34 <__stack+0xe35>
    1876:	61 e4       	ldi	r22, 0x41	; 65
    1878:	c6 01       	movw	r24, r12
    187a:	0e 94 5b 56 	call	0xacb6	; 0xacb6 <TMR_SR_cmdGetRegionConfiguration>
    187e:	2b 01       	movw	r4, r22
    1880:	3c 01       	movw	r6, r24
    1882:	60 e0       	ldi	r22, 0x00	; 0
    1884:	57 c3       	rjmp	.+1710   	; 0x1f34 <__stack+0xe35>
    1886:	60 e4       	ldi	r22, 0x40	; 64
    1888:	c6 01       	movw	r24, r12
    188a:	0e 94 5b 56 	call	0xacb6	; 0xacb6 <TMR_SR_cmdGetRegionConfiguration>
    188e:	2b 01       	movw	r4, r22
    1890:	3c 01       	movw	r6, r24
    1892:	61 15       	cp	r22, r1
    1894:	71 05       	cpc	r23, r1
    1896:	81 05       	cpc	r24, r1
    1898:	91 05       	cpc	r25, r1
    189a:	09 f4       	brne	.+2      	; 0x189e <__stack+0x79f>
    189c:	3c c3       	rjmp	.+1656   	; 0x1f16 <__stack+0xe17>
    189e:	89 2f       	mov	r24, r25
    18a0:	99 27       	eor	r25, r25
    18a2:	aa 27       	eor	r26, r26
    18a4:	bb 27       	eor	r27, r27
    18a6:	02 97       	sbiw	r24, 0x02	; 2
    18a8:	a1 05       	cpc	r26, r1
    18aa:	b1 05       	cpc	r27, r1
    18ac:	09 f0       	breq	.+2      	; 0x18b0 <__stack+0x7b1>
    18ae:	35 c3       	rjmp	.+1642   	; 0x1f1a <__stack+0xe1b>
    18b0:	d5 01       	movw	r26, r10
    18b2:	1c 92       	st	X, r1
    18b4:	60 e0       	ldi	r22, 0x00	; 0
    18b6:	41 2c       	mov	r4, r1
    18b8:	51 2c       	mov	r5, r1
    18ba:	32 01       	movw	r6, r4
    18bc:	3b c3       	rjmp	.+1654   	; 0x1f34 <__stack+0xe35>
    18be:	f6 01       	movw	r30, r12
    18c0:	84 a9       	ldd	r24, Z+52	; 0x34
    18c2:	da 01       	movw	r26, r20
    18c4:	8c 93       	st	X, r24
    18c6:	60 e0       	ldi	r22, 0x00	; 0
    18c8:	41 2c       	mov	r4, r1
    18ca:	51 2c       	mov	r5, r1
    18cc:	32 01       	movw	r6, r4
    18ce:	32 c3       	rjmp	.+1636   	; 0x1f34 <__stack+0xe35>
    18d0:	b6 01       	movw	r22, r12
    18d2:	6b 5c       	subi	r22, 0xCB	; 203
    18d4:	7f 4f       	sbci	r23, 0xFF	; 255
    18d6:	c6 01       	movw	r24, r12
    18d8:	0e 94 f9 55 	call	0xabf2	; 0xabf2 <TMR_SR_cmdGetCurrentProtocol>
    18dc:	2b 01       	movw	r4, r22
    18de:	3c 01       	movw	r6, r24
    18e0:	67 2b       	or	r22, r23
    18e2:	68 2b       	or	r22, r24
    18e4:	69 2b       	or	r22, r25
    18e6:	09 f0       	breq	.+2      	; 0x18ea <__stack+0x7eb>
    18e8:	1a c3       	rjmp	.+1588   	; 0x1f1e <__stack+0xe1f>
    18ea:	f6 01       	movw	r30, r12
    18ec:	85 a9       	ldd	r24, Z+53	; 0x35
    18ee:	d5 01       	movw	r26, r10
    18f0:	8c 93       	st	X, r24
    18f2:	60 e0       	ldi	r22, 0x00	; 0
    18f4:	1f c3       	rjmp	.+1598   	; 0x1f34 <__stack+0xe35>
    18f6:	be 01       	movw	r22, r28
    18f8:	6f 5f       	subi	r22, 0xFF	; 255
    18fa:	7f 4f       	sbci	r23, 0xFF	; 255
    18fc:	c6 01       	movw	r24, r12
    18fe:	0e 94 d1 56 	call	0xada2	; 0xada2 <TMR_SR_cmdGetPowerMode>
    1902:	2b 01       	movw	r4, r22
    1904:	3c 01       	movw	r6, r24
    1906:	67 2b       	or	r22, r23
    1908:	68 2b       	or	r22, r24
    190a:	69 2b       	or	r22, r25
    190c:	29 f4       	brne	.+10     	; 0x1918 <__stack+0x819>
    190e:	89 81       	ldd	r24, Y+1	; 0x01
    1910:	f6 01       	movw	r30, r12
    1912:	ef 57       	subi	r30, 0x7F	; 127
    1914:	fc 4f       	sbci	r31, 0xFC	; 252
    1916:	80 83       	st	Z, r24
    1918:	f6 01       	movw	r30, r12
    191a:	ef 57       	subi	r30, 0x7F	; 127
    191c:	fc 4f       	sbci	r31, 0xFC	; 252
    191e:	80 81       	ld	r24, Z
    1920:	f5 01       	movw	r30, r10
    1922:	80 83       	st	Z, r24
    1924:	60 e0       	ldi	r22, 0x00	; 0
    1926:	06 c3       	rjmp	.+1548   	; 0x1f34 <__stack+0xe35>
    1928:	ba 01       	movw	r22, r20
    192a:	c6 01       	movw	r24, r12
    192c:	0e 94 02 57 	call	0xae04	; 0xae04 <TMR_SR_cmdGetUserMode>
    1930:	2b 01       	movw	r4, r22
    1932:	3c 01       	movw	r6, r24
    1934:	60 e0       	ldi	r22, 0x00	; 0
    1936:	fe c2       	rjmp	.+1532   	; 0x1f34 <__stack+0xe35>
    1938:	0f 2e       	mov	r0, r31
    193a:	f2 e1       	ldi	r31, 0x12	; 18
    193c:	2f 2e       	mov	r2, r31
    193e:	f0 2d       	mov	r31, r0
    1940:	60 e0       	ldi	r22, 0x00	; 0
    1942:	41 2c       	mov	r4, r1
    1944:	51 2c       	mov	r5, r1
    1946:	32 01       	movw	r6, r4
    1948:	f5 c2       	rjmp	.+1514   	; 0x1f34 <__stack+0xe35>
    194a:	68 94       	set
    194c:	22 24       	eor	r2, r2
    194e:	21 f8       	bld	r2, 1
    1950:	60 e0       	ldi	r22, 0x00	; 0
    1952:	41 2c       	mov	r4, r1
    1954:	51 2c       	mov	r5, r1
    1956:	32 01       	movw	r6, r4
    1958:	ed c2       	rjmp	.+1498   	; 0x1f34 <__stack+0xe35>
    195a:	21 2c       	mov	r2, r1
    195c:	60 e0       	ldi	r22, 0x00	; 0
    195e:	41 2c       	mov	r4, r1
    1960:	51 2c       	mov	r5, r1
    1962:	32 01       	movw	r6, r4
    1964:	e7 c2       	rjmp	.+1486   	; 0x1f34 <__stack+0xe35>
    1966:	22 24       	eor	r2, r2
    1968:	23 94       	inc	r2
    196a:	60 e0       	ldi	r22, 0x00	; 0
    196c:	41 2c       	mov	r4, r1
    196e:	51 2c       	mov	r5, r1
    1970:	32 01       	movw	r6, r4
    1972:	e0 c2       	rjmp	.+1472   	; 0x1f34 <__stack+0xe35>
    1974:	68 94       	set
    1976:	22 24       	eor	r2, r2
    1978:	24 f8       	bld	r2, 4
    197a:	60 e0       	ldi	r22, 0x00	; 0
    197c:	41 2c       	mov	r4, r1
    197e:	51 2c       	mov	r5, r1
    1980:	32 01       	movw	r6, r4
    1982:	d8 c2       	rjmp	.+1456   	; 0x1f34 <__stack+0xe35>
    1984:	0f 2e       	mov	r0, r31
    1986:	f1 e1       	ldi	r31, 0x11	; 17
    1988:	2f 2e       	mov	r2, r31
    198a:	f0 2d       	mov	r31, r0
    198c:	60 e0       	ldi	r22, 0x00	; 0
    198e:	41 2c       	mov	r4, r1
    1990:	51 2c       	mov	r5, r1
    1992:	32 01       	movw	r6, r4
    1994:	cf c2       	rjmp	.+1438   	; 0x1f34 <__stack+0xe35>
    1996:	0f 2e       	mov	r0, r31
    1998:	f3 e1       	ldi	r31, 0x13	; 19
    199a:	2f 2e       	mov	r2, r31
    199c:	f0 2d       	mov	r31, r0
    199e:	60 e0       	ldi	r22, 0x00	; 0
    19a0:	41 2c       	mov	r4, r1
    19a2:	51 2c       	mov	r5, r1
    19a4:	32 01       	movw	r6, r4
    19a6:	c6 c2       	rjmp	.+1420   	; 0x1f34 <__stack+0xe35>
    19a8:	f6 01       	movw	r30, r12
    19aa:	e9 50       	subi	r30, 0x09	; 9
    19ac:	fa 4f       	sbci	r31, 0xFA	; 250
    19ae:	80 81       	ld	r24, Z
    19b0:	da 01       	movw	r26, r20
    19b2:	8c 93       	st	X, r24
    19b4:	60 e0       	ldi	r22, 0x00	; 0
    19b6:	41 2c       	mov	r4, r1
    19b8:	51 2c       	mov	r5, r1
    19ba:	32 01       	movw	r6, r4
    19bc:	bb c2       	rjmp	.+1398   	; 0x1f34 <__stack+0xe35>
    19be:	0f 2e       	mov	r0, r31
    19c0:	f4 e1       	ldi	r31, 0x14	; 20
    19c2:	2f 2e       	mov	r2, r31
    19c4:	f0 2d       	mov	r31, r0
    19c6:	60 e0       	ldi	r22, 0x00	; 0
    19c8:	41 2c       	mov	r4, r1
    19ca:	51 2c       	mov	r5, r1
    19cc:	32 01       	movw	r6, r4
    19ce:	b2 c2       	rjmp	.+1380   	; 0x1f34 <__stack+0xe35>
    19d0:	0f 2e       	mov	r0, r31
    19d2:	f5 e1       	ldi	r31, 0x15	; 21
    19d4:	2f 2e       	mov	r2, r31
    19d6:	f0 2d       	mov	r31, r0
    19d8:	60 e0       	ldi	r22, 0x00	; 0
    19da:	41 2c       	mov	r4, r1
    19dc:	51 2c       	mov	r5, r1
    19de:	32 01       	movw	r6, r4
    19e0:	a9 c2       	rjmp	.+1362   	; 0x1f34 <__stack+0xe35>
    19e2:	0f 2e       	mov	r0, r31
    19e4:	f6 e1       	ldi	r31, 0x16	; 22
    19e6:	2f 2e       	mov	r2, r31
    19e8:	f0 2d       	mov	r31, r0
    19ea:	60 e0       	ldi	r22, 0x00	; 0
    19ec:	41 2c       	mov	r4, r1
    19ee:	51 2c       	mov	r5, r1
    19f0:	32 01       	movw	r6, r4
    19f2:	a0 c2       	rjmp	.+1344   	; 0x1f34 <__stack+0xe35>
    19f4:	0f 2e       	mov	r0, r31
    19f6:	f7 e1       	ldi	r31, 0x17	; 23
    19f8:	2f 2e       	mov	r2, r31
    19fa:	f0 2d       	mov	r31, r0
    19fc:	60 e0       	ldi	r22, 0x00	; 0
    19fe:	41 2c       	mov	r4, r1
    1a00:	51 2c       	mov	r5, r1
    1a02:	32 01       	movw	r6, r4
    1a04:	97 c2       	rjmp	.+1326   	; 0x1f34 <__stack+0xe35>
    1a06:	ba 01       	movw	r22, r20
    1a08:	c6 01       	movw	r24, r12
    1a0a:	0e 94 90 55 	call	0xab20	; 0xab20 <TMR_SR_cmdGetProtocolList>
    1a0e:	2b 01       	movw	r4, r22
    1a10:	3c 01       	movw	r6, r24
    1a12:	60 e0       	ldi	r22, 0x00	; 0
    1a14:	8f c2       	rjmp	.+1310   	; 0x1f34 <__stack+0xe35>
    1a16:	0f 2e       	mov	r0, r31
    1a18:	f9 e0       	ldi	r31, 0x09	; 9
    1a1a:	3f 2e       	mov	r3, r31
    1a1c:	f0 2d       	mov	r31, r0
    1a1e:	68 94       	set
    1a20:	22 24       	eor	r2, r2
    1a22:	21 f8       	bld	r2, 1
    1a24:	60 e0       	ldi	r22, 0x00	; 0
    1a26:	41 2c       	mov	r4, r1
    1a28:	51 2c       	mov	r5, r1
    1a2a:	32 01       	movw	r6, r4
    1a2c:	83 c2       	rjmp	.+1286   	; 0x1f34 <__stack+0xe35>
    1a2e:	0f 2e       	mov	r0, r31
    1a30:	fa e0       	ldi	r31, 0x0A	; 10
    1a32:	3f 2e       	mov	r3, r31
    1a34:	f0 2d       	mov	r31, r0
    1a36:	68 94       	set
    1a38:	22 24       	eor	r2, r2
    1a3a:	21 f8       	bld	r2, 1
    1a3c:	60 e0       	ldi	r22, 0x00	; 0
    1a3e:	41 2c       	mov	r4, r1
    1a40:	51 2c       	mov	r5, r1
    1a42:	32 01       	movw	r6, r4
    1a44:	77 c2       	rjmp	.+1262   	; 0x1f34 <__stack+0xe35>
    1a46:	0f 2e       	mov	r0, r31
    1a48:	fb e0       	ldi	r31, 0x0B	; 11
    1a4a:	3f 2e       	mov	r3, r31
    1a4c:	f0 2d       	mov	r31, r0
    1a4e:	68 94       	set
    1a50:	22 24       	eor	r2, r2
    1a52:	21 f8       	bld	r2, 1
    1a54:	60 e0       	ldi	r22, 0x00	; 0
    1a56:	41 2c       	mov	r4, r1
    1a58:	51 2c       	mov	r5, r1
    1a5a:	32 01       	movw	r6, r4
    1a5c:	6b c2       	rjmp	.+1238   	; 0x1f34 <__stack+0xe35>
    1a5e:	0f 2e       	mov	r0, r31
    1a60:	f4 e1       	ldi	r31, 0x14	; 20
    1a62:	3f 2e       	mov	r3, r31
    1a64:	f0 2d       	mov	r31, r0
    1a66:	68 94       	set
    1a68:	22 24       	eor	r2, r2
    1a6a:	21 f8       	bld	r2, 1
    1a6c:	60 e0       	ldi	r22, 0x00	; 0
    1a6e:	41 2c       	mov	r4, r1
    1a70:	51 2c       	mov	r5, r1
    1a72:	32 01       	movw	r6, r4
    1a74:	5f c2       	rjmp	.+1214   	; 0x1f34 <__stack+0xe35>
    1a76:	0f 2e       	mov	r0, r31
    1a78:	f5 e1       	ldi	r31, 0x15	; 21
    1a7a:	3f 2e       	mov	r3, r31
    1a7c:	f0 2d       	mov	r31, r0
    1a7e:	68 94       	set
    1a80:	22 24       	eor	r2, r2
    1a82:	21 f8       	bld	r2, 1
    1a84:	60 e0       	ldi	r22, 0x00	; 0
    1a86:	41 2c       	mov	r4, r1
    1a88:	51 2c       	mov	r5, r1
    1a8a:	32 01       	movw	r6, r4
    1a8c:	53 c2       	rjmp	.+1190   	; 0x1f34 <__stack+0xe35>
    1a8e:	0f 2e       	mov	r0, r31
    1a90:	f9 e0       	ldi	r31, 0x09	; 9
    1a92:	3f 2e       	mov	r3, r31
    1a94:	f0 2d       	mov	r31, r0
    1a96:	22 24       	eor	r2, r2
    1a98:	23 94       	inc	r2
    1a9a:	60 e0       	ldi	r22, 0x00	; 0
    1a9c:	41 2c       	mov	r4, r1
    1a9e:	51 2c       	mov	r5, r1
    1aa0:	32 01       	movw	r6, r4
    1aa2:	48 c2       	rjmp	.+1168   	; 0x1f34 <__stack+0xe35>
    1aa4:	0f 2e       	mov	r0, r31
    1aa6:	fa e0       	ldi	r31, 0x0A	; 10
    1aa8:	3f 2e       	mov	r3, r31
    1aaa:	f0 2d       	mov	r31, r0
    1aac:	22 24       	eor	r2, r2
    1aae:	23 94       	inc	r2
    1ab0:	60 e0       	ldi	r22, 0x00	; 0
    1ab2:	41 2c       	mov	r4, r1
    1ab4:	51 2c       	mov	r5, r1
    1ab6:	32 01       	movw	r6, r4
    1ab8:	3d c2       	rjmp	.+1146   	; 0x1f34 <__stack+0xe35>
    1aba:	0f 2e       	mov	r0, r31
    1abc:	fb e0       	ldi	r31, 0x0B	; 11
    1abe:	3f 2e       	mov	r3, r31
    1ac0:	f0 2d       	mov	r31, r0
    1ac2:	22 24       	eor	r2, r2
    1ac4:	23 94       	inc	r2
    1ac6:	60 e0       	ldi	r22, 0x00	; 0
    1ac8:	41 2c       	mov	r4, r1
    1aca:	51 2c       	mov	r5, r1
    1acc:	32 01       	movw	r6, r4
    1ace:	32 c2       	rjmp	.+1124   	; 0x1f34 <__stack+0xe35>
    1ad0:	0f 2e       	mov	r0, r31
    1ad2:	f4 e1       	ldi	r31, 0x14	; 20
    1ad4:	3f 2e       	mov	r3, r31
    1ad6:	f0 2d       	mov	r31, r0
    1ad8:	22 24       	eor	r2, r2
    1ada:	23 94       	inc	r2
    1adc:	60 e0       	ldi	r22, 0x00	; 0
    1ade:	41 2c       	mov	r4, r1
    1ae0:	51 2c       	mov	r5, r1
    1ae2:	32 01       	movw	r6, r4
    1ae4:	27 c2       	rjmp	.+1102   	; 0x1f34 <__stack+0xe35>
    1ae6:	0f 2e       	mov	r0, r31
    1ae8:	f5 e1       	ldi	r31, 0x15	; 21
    1aea:	3f 2e       	mov	r3, r31
    1aec:	f0 2d       	mov	r31, r0
    1aee:	22 24       	eor	r2, r2
    1af0:	23 94       	inc	r2
    1af2:	60 e0       	ldi	r22, 0x00	; 0
    1af4:	41 2c       	mov	r4, r1
    1af6:	51 2c       	mov	r5, r1
    1af8:	32 01       	movw	r6, r4
    1afa:	1c c2       	rjmp	.+1080   	; 0x1f34 <__stack+0xe35>
    1afc:	0f 2e       	mov	r0, r31
    1afe:	f9 e0       	ldi	r31, 0x09	; 9
    1b00:	3f 2e       	mov	r3, r31
    1b02:	f0 2d       	mov	r31, r0
    1b04:	0f 2e       	mov	r0, r31
    1b06:	f3 e0       	ldi	r31, 0x03	; 3
    1b08:	2f 2e       	mov	r2, r31
    1b0a:	f0 2d       	mov	r31, r0
    1b0c:	60 e0       	ldi	r22, 0x00	; 0
    1b0e:	41 2c       	mov	r4, r1
    1b10:	51 2c       	mov	r5, r1
    1b12:	32 01       	movw	r6, r4
    1b14:	0f c2       	rjmp	.+1054   	; 0x1f34 <__stack+0xe35>
    1b16:	0f 2e       	mov	r0, r31
    1b18:	fb e0       	ldi	r31, 0x0B	; 11
    1b1a:	3f 2e       	mov	r3, r31
    1b1c:	f0 2d       	mov	r31, r0
    1b1e:	0f 2e       	mov	r0, r31
    1b20:	f3 e0       	ldi	r31, 0x03	; 3
    1b22:	2f 2e       	mov	r2, r31
    1b24:	f0 2d       	mov	r31, r0
    1b26:	60 e0       	ldi	r22, 0x00	; 0
    1b28:	41 2c       	mov	r4, r1
    1b2a:	51 2c       	mov	r5, r1
    1b2c:	32 01       	movw	r6, r4
    1b2e:	02 c2       	rjmp	.+1028   	; 0x1f34 <__stack+0xe35>
    1b30:	0f 2e       	mov	r0, r31
    1b32:	f4 e1       	ldi	r31, 0x14	; 20
    1b34:	3f 2e       	mov	r3, r31
    1b36:	f0 2d       	mov	r31, r0
    1b38:	0f 2e       	mov	r0, r31
    1b3a:	f3 e0       	ldi	r31, 0x03	; 3
    1b3c:	2f 2e       	mov	r2, r31
    1b3e:	f0 2d       	mov	r31, r0
    1b40:	60 e0       	ldi	r22, 0x00	; 0
    1b42:	41 2c       	mov	r4, r1
    1b44:	51 2c       	mov	r5, r1
    1b46:	32 01       	movw	r6, r4
    1b48:	f5 c1       	rjmp	.+1002   	; 0x1f34 <__stack+0xe35>
    1b4a:	0f 2e       	mov	r0, r31
    1b4c:	f4 e1       	ldi	r31, 0x14	; 20
    1b4e:	3f 2e       	mov	r3, r31
    1b50:	f0 2d       	mov	r31, r0
    1b52:	68 94       	set
    1b54:	22 24       	eor	r2, r2
    1b56:	22 f8       	bld	r2, 2
    1b58:	60 e0       	ldi	r22, 0x00	; 0
    1b5a:	41 2c       	mov	r4, r1
    1b5c:	51 2c       	mov	r5, r1
    1b5e:	32 01       	movw	r6, r4
    1b60:	e9 c1       	rjmp	.+978    	; 0x1f34 <__stack+0xe35>
    1b62:	61 e2       	ldi	r22, 0x21	; 33
    1b64:	41 2c       	mov	r4, r1
    1b66:	51 2c       	mov	r5, r1
    1b68:	32 01       	movw	r6, r4
    1b6a:	e4 c1       	rjmp	.+968    	; 0x1f34 <__stack+0xe35>
    1b6c:	f6 01       	movw	r30, r12
    1b6e:	e8 52       	subi	r30, 0x28	; 40
    1b70:	fe 4f       	sbci	r31, 0xFE	; 254
    1b72:	80 81       	ld	r24, Z
    1b74:	91 81       	ldd	r25, Z+1	; 0x01
    1b76:	a2 81       	ldd	r26, Z+2	; 0x02
    1b78:	b3 81       	ldd	r27, Z+3	; 0x03
    1b7a:	fa 01       	movw	r30, r20
    1b7c:	80 83       	st	Z, r24
    1b7e:	91 83       	std	Z+1, r25	; 0x01
    1b80:	a2 83       	std	Z+2, r26	; 0x02
    1b82:	b3 83       	std	Z+3, r27	; 0x03
    1b84:	60 e0       	ldi	r22, 0x00	; 0
    1b86:	41 2c       	mov	r4, r1
    1b88:	51 2c       	mov	r5, r1
    1b8a:	32 01       	movw	r6, r4
    1b8c:	d3 c1       	rjmp	.+934    	; 0x1f34 <__stack+0xe35>
    1b8e:	ba 01       	movw	r22, r20
    1b90:	c6 01       	movw	r24, r12
    1b92:	0e 94 19 61 	call	0xc232	; 0xc232 <TMR_SR_cmdGetAvailableRegions>
    1b96:	2b 01       	movw	r4, r22
    1b98:	3c 01       	movw	r6, r24
    1b9a:	60 e0       	ldi	r22, 0x00	; 0
    1b9c:	cb c1       	rjmp	.+918    	; 0x1f34 <__stack+0xe35>
    1b9e:	ba 01       	movw	r22, r20
    1ba0:	c6 01       	movw	r24, r12
    1ba2:	0e 94 83 60 	call	0xc106	; 0xc106 <TMR_SR_cmdGetAvailableProtocols>
    1ba6:	2b 01       	movw	r4, r22
    1ba8:	3c 01       	movw	r6, r24
    1baa:	60 e0       	ldi	r22, 0x00	; 0
    1bac:	c3 c1       	rjmp	.+902    	; 0x1f34 <__stack+0xe35>
    1bae:	ba 01       	movw	r22, r20
    1bb0:	c6 01       	movw	r24, r12
    1bb2:	0e 94 70 61 	call	0xc2e0	; 0xc2e0 <TMR_SR_cmdGetTemperature>
    1bb6:	2b 01       	movw	r4, r22
    1bb8:	3c 01       	movw	r6, r24
    1bba:	60 e0       	ldi	r22, 0x00	; 0
    1bbc:	bb c1       	rjmp	.+886    	; 0x1f34 <__stack+0xe35>
    1bbe:	ba 01       	movw	r22, r20
    1bc0:	c6 01       	movw	r24, r12
    1bc2:	0e 94 3c 04 	call	0x878	; 0x878 <getHardwareInfo>
    1bc6:	2b 01       	movw	r4, r22
    1bc8:	3c 01       	movw	r6, r24
    1bca:	60 e0       	ldi	r22, 0x00	; 0
    1bcc:	b3 c1       	rjmp	.+870    	; 0x1f34 <__stack+0xe35>
    1bce:	ba 01       	movw	r22, r20
    1bd0:	c6 01       	movw	r24, r12
    1bd2:	0e 94 70 04 	call	0x8e0	; 0x8e0 <getSerialNumber>
    1bd6:	2b 01       	movw	r4, r22
    1bd8:	3c 01       	movw	r6, r24
    1bda:	60 e0       	ldi	r22, 0x00	; 0
    1bdc:	ab c1       	rjmp	.+854    	; 0x1f34 <__stack+0xe35>
    1bde:	f6 01       	movw	r30, r12
    1be0:	ef 58       	subi	r30, 0x8F	; 143
    1be2:	fc 4f       	sbci	r31, 0xFC	; 252
    1be4:	80 81       	ld	r24, Z
    1be6:	80 32       	cpi	r24, 0x20	; 32
    1be8:	11 f1       	breq	.+68     	; 0x1c2e <__stack+0xb2f>
    1bea:	28 f4       	brcc	.+10     	; 0x1bf6 <__stack+0xaf7>
    1bec:	88 31       	cpi	r24, 0x18	; 24
    1bee:	61 f0       	breq	.+24     	; 0x1c08 <__stack+0xb09>
    1bf0:	89 31       	cpi	r24, 0x19	; 25
    1bf2:	69 f0       	breq	.+26     	; 0x1c0e <__stack+0xb0f>
    1bf4:	4e c0       	rjmp	.+156    	; 0x1c92 <__stack+0xb93>
    1bf6:	88 33       	cpi	r24, 0x38	; 56
    1bf8:	49 f1       	breq	.+82     	; 0x1c4c <__stack+0xb4d>
    1bfa:	80 38       	cpi	r24, 0x80	; 128
    1bfc:	09 f4       	brne	.+2      	; 0x1c00 <__stack+0xb01>
    1bfe:	46 c0       	rjmp	.+140    	; 0x1c8c <__stack+0xb8d>
    1c00:	80 33       	cpi	r24, 0x30	; 48
    1c02:	09 f0       	breq	.+2      	; 0x1c06 <__stack+0xb07>
    1c04:	46 c0       	rjmp	.+140    	; 0x1c92 <__stack+0xb93>
    1c06:	48 c0       	rjmp	.+144    	; 0x1c98 <__stack+0xb99>
    1c08:	61 e5       	ldi	r22, 0x51	; 81
    1c0a:	71 e0       	ldi	r23, 0x01	; 1
    1c0c:	50 c0       	rjmp	.+160    	; 0x1cae <__stack+0xbaf>
    1c0e:	f6 01       	movw	r30, r12
    1c10:	ec 58       	subi	r30, 0x8C	; 140
    1c12:	fc 4f       	sbci	r31, 0xFC	; 252
    1c14:	80 81       	ld	r24, Z
    1c16:	82 30       	cpi	r24, 0x02	; 2
    1c18:	21 f0       	breq	.+8      	; 0x1c22 <__stack+0xb23>
    1c1a:	83 30       	cpi	r24, 0x03	; 3
    1c1c:	09 f4       	brne	.+2      	; 0x1c20 <__stack+0xb21>
    1c1e:	3f c0       	rjmp	.+126    	; 0x1c9e <__stack+0xb9f>
    1c20:	03 c0       	rjmp	.+6      	; 0x1c28 <__stack+0xb29>
    1c22:	6c e8       	ldi	r22, 0x8C	; 140
    1c24:	71 e0       	ldi	r23, 0x01	; 1
    1c26:	43 c0       	rjmp	.+134    	; 0x1cae <__stack+0xbaf>
    1c28:	61 e5       	ldi	r22, 0x51	; 81
    1c2a:	71 e0       	ldi	r23, 0x01	; 1
    1c2c:	40 c0       	rjmp	.+128    	; 0x1cae <__stack+0xbaf>
    1c2e:	f6 01       	movw	r30, r12
    1c30:	ec 58       	subi	r30, 0x8C	; 140
    1c32:	fc 4f       	sbci	r31, 0xFC	; 252
    1c34:	80 81       	ld	r24, Z
    1c36:	82 30       	cpi	r24, 0x02	; 2
    1c38:	19 f0       	breq	.+6      	; 0x1c40 <__stack+0xb41>
    1c3a:	83 30       	cpi	r24, 0x03	; 3
    1c3c:	99 f1       	breq	.+102    	; 0x1ca4 <__stack+0xba5>
    1c3e:	03 c0       	rjmp	.+6      	; 0x1c46 <__stack+0xb47>
    1c40:	64 e9       	ldi	r22, 0x94	; 148
    1c42:	71 e0       	ldi	r23, 0x01	; 1
    1c44:	34 c0       	rjmp	.+104    	; 0x1cae <__stack+0xbaf>
    1c46:	62 ea       	ldi	r22, 0xA2	; 162
    1c48:	71 e0       	ldi	r23, 0x01	; 1
    1c4a:	31 c0       	rjmp	.+98     	; 0x1cae <__stack+0xbaf>
    1c4c:	f6 01       	movw	r30, r12
    1c4e:	ed 58       	subi	r30, 0x8D	; 141
    1c50:	fc 4f       	sbci	r31, 0xFC	; 252
    1c52:	80 81       	ld	r24, Z
    1c54:	82 30       	cpi	r24, 0x02	; 2
    1c56:	71 f0       	breq	.+28     	; 0x1c74 <__stack+0xb75>
    1c58:	28 f4       	brcc	.+10     	; 0x1c64 <__stack+0xb65>
    1c5a:	88 23       	and	r24, r24
    1c5c:	41 f0       	breq	.+16     	; 0x1c6e <__stack+0xb6f>
    1c5e:	81 30       	cpi	r24, 0x01	; 1
    1c60:	21 f1       	breq	.+72     	; 0x1caa <__stack+0xbab>
    1c62:	11 c0       	rjmp	.+34     	; 0x1c86 <__stack+0xb87>
    1c64:	83 30       	cpi	r24, 0x03	; 3
    1c66:	49 f0       	breq	.+18     	; 0x1c7a <__stack+0xb7b>
    1c68:	84 30       	cpi	r24, 0x04	; 4
    1c6a:	51 f0       	breq	.+20     	; 0x1c80 <__stack+0xb81>
    1c6c:	0c c0       	rjmp	.+24     	; 0x1c86 <__stack+0xb87>
    1c6e:	6c ea       	ldi	r22, 0xAC	; 172
    1c70:	71 e0       	ldi	r23, 0x01	; 1
    1c72:	1d c0       	rjmp	.+58     	; 0x1cae <__stack+0xbaf>
    1c74:	67 ec       	ldi	r22, 0xC7	; 199
    1c76:	71 e0       	ldi	r23, 0x01	; 1
    1c78:	1a c0       	rjmp	.+52     	; 0x1cae <__stack+0xbaf>
    1c7a:	6e eb       	ldi	r22, 0xBE	; 190
    1c7c:	71 e0       	ldi	r23, 0x01	; 1
    1c7e:	17 c0       	rjmp	.+46     	; 0x1cae <__stack+0xbaf>
    1c80:	65 eb       	ldi	r22, 0xB5	; 181
    1c82:	71 e0       	ldi	r23, 0x01	; 1
    1c84:	14 c0       	rjmp	.+40     	; 0x1cae <__stack+0xbaf>
    1c86:	64 e8       	ldi	r22, 0x84	; 132
    1c88:	71 e0       	ldi	r23, 0x01	; 1
    1c8a:	11 c0       	rjmp	.+34     	; 0x1cae <__stack+0xbaf>
    1c8c:	60 e8       	ldi	r22, 0x80	; 128
    1c8e:	71 e0       	ldi	r23, 0x01	; 1
    1c90:	0e c0       	rjmp	.+28     	; 0x1cae <__stack+0xbaf>
    1c92:	64 e8       	ldi	r22, 0x84	; 132
    1c94:	71 e0       	ldi	r23, 0x01	; 1
    1c96:	0b c0       	rjmp	.+22     	; 0x1cae <__stack+0xbaf>
    1c98:	6e e6       	ldi	r22, 0x6E	; 110
    1c9a:	71 e0       	ldi	r23, 0x01	; 1
    1c9c:	08 c0       	rjmp	.+16     	; 0x1cae <__stack+0xbaf>
    1c9e:	65 e5       	ldi	r22, 0x55	; 85
    1ca0:	71 e0       	ldi	r23, 0x01	; 1
    1ca2:	05 c0       	rjmp	.+10     	; 0x1cae <__stack+0xbaf>
    1ca4:	6d e5       	ldi	r22, 0x5D	; 93
    1ca6:	71 e0       	ldi	r23, 0x01	; 1
    1ca8:	02 c0       	rjmp	.+4      	; 0x1cae <__stack+0xbaf>
    1caa:	67 e7       	ldi	r22, 0x77	; 119
    1cac:	71 e0       	ldi	r23, 0x01	; 1
    1cae:	fb 01       	movw	r30, r22
    1cb0:	01 90       	ld	r0, Z+
    1cb2:	00 20       	and	r0, r0
    1cb4:	e9 f7       	brne	.-6      	; 0x1cb0 <__stack+0xbb1>
    1cb6:	31 97       	sbiw	r30, 0x01	; 1
    1cb8:	af 01       	movw	r20, r30
    1cba:	46 1b       	sub	r20, r22
    1cbc:	57 0b       	sbc	r21, r23
    1cbe:	c5 01       	movw	r24, r10
    1cc0:	0e 94 9f 6a 	call	0xd53e	; 0xd53e <TMR_stringCopy>
    1cc4:	60 e0       	ldi	r22, 0x00	; 0
    1cc6:	41 2c       	mov	r4, r1
    1cc8:	51 2c       	mov	r5, r1
    1cca:	32 01       	movw	r6, r4
    1ccc:	33 c1       	rjmp	.+614    	; 0x1f34 <__stack+0xe35>
    1cce:	be 01       	movw	r22, r28
    1cd0:	6f 5f       	subi	r22, 0xFF	; 255
    1cd2:	7f 4f       	sbci	r23, 0xFF	; 255
    1cd4:	46 01       	movw	r8, r12
    1cd6:	f3 e9       	ldi	r31, 0x93	; 147
    1cd8:	8f 1a       	sub	r8, r31
    1cda:	fc ef       	ldi	r31, 0xFC	; 252
    1cdc:	9f 0a       	sbc	r9, r31
    1cde:	c4 01       	movw	r24, r8
    1ce0:	0c 96       	adiw	r24, 0x0c	; 12
    1ce2:	0e 94 df 02 	call	0x5be	; 0x5be <TMR_hexDottedQuad>
    1ce6:	0f 2e       	mov	r0, r31
    1ce8:	fd e2       	ldi	r31, 0x2D	; 45
    1cea:	7f 2e       	mov	r7, r31
    1cec:	f0 2d       	mov	r31, r0
    1cee:	7c 86       	std	Y+12, r7	; 0x0c
    1cf0:	be 01       	movw	r22, r28
    1cf2:	63 5f       	subi	r22, 0xF3	; 243
    1cf4:	7f 4f       	sbci	r23, 0xFF	; 255
    1cf6:	c4 01       	movw	r24, r8
    1cf8:	08 96       	adiw	r24, 0x08	; 8
    1cfa:	0e 94 df 02 	call	0x5be	; 0x5be <TMR_hexDottedQuad>
    1cfe:	78 8e       	std	Y+24, r7	; 0x18
    1d00:	82 e4       	ldi	r24, 0x42	; 66
    1d02:	89 8f       	std	Y+25, r24	; 0x19
    1d04:	8c e4       	ldi	r24, 0x4C	; 76
    1d06:	8a 8f       	std	Y+26, r24	; 0x1a
    1d08:	be 01       	movw	r22, r28
    1d0a:	65 5e       	subi	r22, 0xE5	; 229
    1d0c:	7f 4f       	sbci	r23, 0xFF	; 255
    1d0e:	c4 01       	movw	r24, r8
    1d10:	0e 94 df 02 	call	0x5be	; 0x5be <TMR_hexDottedQuad>
    1d14:	45 e2       	ldi	r20, 0x25	; 37
    1d16:	50 e0       	ldi	r21, 0x00	; 0
    1d18:	be 01       	movw	r22, r28
    1d1a:	6f 5f       	subi	r22, 0xFF	; 255
    1d1c:	7f 4f       	sbci	r23, 0xFF	; 255
    1d1e:	c5 01       	movw	r24, r10
    1d20:	0e 94 9f 6a 	call	0xd53e	; 0xd53e <TMR_stringCopy>
    1d24:	60 e0       	ldi	r22, 0x00	; 0
    1d26:	41 2c       	mov	r4, r1
    1d28:	51 2c       	mov	r5, r1
    1d2a:	32 01       	movw	r6, r4
    1d2c:	03 c1       	rjmp	.+518    	; 0x1f34 <__stack+0xe35>
    1d2e:	60 e0       	ldi	r22, 0x00	; 0
    1d30:	0f 2e       	mov	r0, r31
    1d32:	f3 e0       	ldi	r31, 0x03	; 3
    1d34:	4f 2e       	mov	r4, r31
    1d36:	51 2c       	mov	r5, r1
    1d38:	61 2c       	mov	r6, r1
    1d3a:	74 2c       	mov	r7, r4
    1d3c:	f0 2d       	mov	r31, r0
    1d3e:	fa c0       	rjmp	.+500    	; 0x1f34 <__stack+0xe35>
    1d40:	60 e0       	ldi	r22, 0x00	; 0
    1d42:	0f 2e       	mov	r0, r31
    1d44:	f3 e0       	ldi	r31, 0x03	; 3
    1d46:	4f 2e       	mov	r4, r31
    1d48:	51 2c       	mov	r5, r1
    1d4a:	61 2c       	mov	r6, r1
    1d4c:	74 2c       	mov	r7, r4
    1d4e:	f0 2d       	mov	r31, r0
    1d50:	f1 c0       	rjmp	.+482    	; 0x1f34 <__stack+0xe35>
    1d52:	60 e0       	ldi	r22, 0x00	; 0
    1d54:	0f 2e       	mov	r0, r31
    1d56:	f3 e0       	ldi	r31, 0x03	; 3
    1d58:	4f 2e       	mov	r4, r31
    1d5a:	51 2c       	mov	r5, r1
    1d5c:	61 2c       	mov	r6, r1
    1d5e:	74 2c       	mov	r7, r4
    1d60:	f0 2d       	mov	r31, r0
    1d62:	e8 c0       	rjmp	.+464    	; 0x1f34 <__stack+0xe35>
    1d64:	f6 01       	movw	r30, r12
    1d66:	eb 5e       	subi	r30, 0xEB	; 235
    1d68:	f9 4f       	sbci	r31, 0xF9	; 249
    1d6a:	60 81       	ld	r22, Z
    1d6c:	71 81       	ldd	r23, Z+1	; 0x01
    1d6e:	c6 01       	movw	r24, r12
    1d70:	0e 94 3f 65 	call	0xca7e	; 0xca7e <TMR_SR_cmdGetReaderStats>
    1d74:	2b 01       	movw	r4, r22
    1d76:	3c 01       	movw	r6, r24
    1d78:	60 e0       	ldi	r22, 0x00	; 0
    1d7a:	dc c0       	rjmp	.+440    	; 0x1f34 <__stack+0xe35>
    1d7c:	f6 01       	movw	r30, r12
    1d7e:	eb 5e       	subi	r30, 0xEB	; 235
    1d80:	f9 4f       	sbci	r31, 0xF9	; 249
    1d82:	80 81       	ld	r24, Z
    1d84:	91 81       	ldd	r25, Z+1	; 0x01
    1d86:	da 01       	movw	r26, r20
    1d88:	8d 93       	st	X+, r24
    1d8a:	9c 93       	st	X, r25
    1d8c:	60 e0       	ldi	r22, 0x00	; 0
    1d8e:	41 2c       	mov	r4, r1
    1d90:	51 2c       	mov	r5, r1
    1d92:	32 01       	movw	r6, r4
    1d94:	cf c0       	rjmp	.+414    	; 0x1f34 <__stack+0xe35>
    1d96:	6b e0       	ldi	r22, 0x0B	; 11
    1d98:	c6 01       	movw	r24, r12
    1d9a:	0e 94 a1 61 	call	0xc342	; 0xc342 <TMR_SR_cmdGetReaderStatistics>
    1d9e:	2b 01       	movw	r4, r22
    1da0:	3c 01       	movw	r6, r24
    1da2:	60 e0       	ldi	r22, 0x00	; 0
    1da4:	c7 c0       	rjmp	.+398    	; 0x1f34 <__stack+0xe35>
    1da6:	a6 01       	movw	r20, r12
    1da8:	4f 53       	subi	r20, 0x3F	; 63
    1daa:	5a 4f       	sbci	r21, 0xFA	; 250
    1dac:	62 e1       	ldi	r22, 0x12	; 18
    1dae:	c6 01       	movw	r24, r12
    1db0:	0e 94 33 57 	call	0xae66	; 0xae66 <TMR_SR_cmdGetReaderConfiguration>
    1db4:	2b 01       	movw	r4, r22
    1db6:	3c 01       	movw	r6, r24
    1db8:	61 15       	cp	r22, r1
    1dba:	71 05       	cpc	r23, r1
    1dbc:	81 05       	cpc	r24, r1
    1dbe:	91 05       	cpc	r25, r1
    1dc0:	09 f0       	breq	.+2      	; 0x1dc4 <__stack+0xcc5>
    1dc2:	55 c1       	rjmp	.+682    	; 0x206e <__stack+0xf6f>
    1dc4:	f6 01       	movw	r30, r12
    1dc6:	ef 53       	subi	r30, 0x3F	; 63
    1dc8:	fa 4f       	sbci	r31, 0xFA	; 250
    1dca:	80 81       	ld	r24, Z
    1dcc:	91 81       	ldd	r25, Z+1	; 0x01
    1dce:	81 30       	cpi	r24, 0x01	; 1
    1dd0:	91 05       	cpc	r25, r1
    1dd2:	79 f0       	breq	.+30     	; 0x1df2 <__stack+0xcf3>
    1dd4:	28 f0       	brcs	.+10     	; 0x1de0 <__stack+0xce1>
    1dd6:	82 30       	cpi	r24, 0x02	; 2
    1dd8:	91 05       	cpc	r25, r1
    1dda:	29 f0       	breq	.+10     	; 0x1de6 <__stack+0xce7>
    1ddc:	01 96       	adiw	r24, 0x01	; 1
    1dde:	31 f4       	brne	.+12     	; 0x1dec <__stack+0xced>
    1de0:	61 ed       	ldi	r22, 0xD1	; 209
    1de2:	71 e0       	ldi	r23, 0x01	; 1
    1de4:	08 c0       	rjmp	.+16     	; 0x1df6 <__stack+0xcf7>
    1de6:	63 ef       	ldi	r22, 0xF3	; 243
    1de8:	71 e0       	ldi	r23, 0x01	; 1
    1dea:	05 c0       	rjmp	.+10     	; 0x1df6 <__stack+0xcf7>
    1dec:	64 e8       	ldi	r22, 0x84	; 132
    1dee:	71 e0       	ldi	r23, 0x01	; 1
    1df0:	02 c0       	rjmp	.+4      	; 0x1df6 <__stack+0xcf7>
    1df2:	61 ee       	ldi	r22, 0xE1	; 225
    1df4:	71 e0       	ldi	r23, 0x01	; 1
    1df6:	a1 14       	cp	r10, r1
    1df8:	b1 04       	cpc	r11, r1
    1dfa:	09 f4       	brne	.+2      	; 0x1dfe <__stack+0xcff>
    1dfc:	92 c0       	rjmp	.+292    	; 0x1f22 <__stack+0xe23>
    1dfe:	fb 01       	movw	r30, r22
    1e00:	01 90       	ld	r0, Z+
    1e02:	00 20       	and	r0, r0
    1e04:	e9 f7       	brne	.-6      	; 0x1e00 <__stack+0xd01>
    1e06:	31 97       	sbiw	r30, 0x01	; 1
    1e08:	af 01       	movw	r20, r30
    1e0a:	46 1b       	sub	r20, r22
    1e0c:	57 0b       	sbc	r21, r23
    1e0e:	c5 01       	movw	r24, r10
    1e10:	0e 94 9f 6a 	call	0xd53e	; 0xd53e <TMR_stringCopy>
    1e14:	60 e0       	ldi	r22, 0x00	; 0
    1e16:	8e c0       	rjmp	.+284    	; 0x1f34 <__stack+0xe35>
    1e18:	f6 01       	movw	r30, r12
    1e1a:	ed 53       	subi	r30, 0x3D	; 61
    1e1c:	fa 4f       	sbci	r31, 0xFA	; 250
    1e1e:	80 81       	ld	r24, Z
    1e20:	91 81       	ldd	r25, Z+1	; 0x01
    1e22:	fa 01       	movw	r30, r20
    1e24:	91 83       	std	Z+1, r25	; 0x01
    1e26:	80 83       	st	Z, r24
    1e28:	60 e0       	ldi	r22, 0x00	; 0
    1e2a:	41 2c       	mov	r4, r1
    1e2c:	51 2c       	mov	r5, r1
    1e2e:	32 01       	movw	r6, r4
    1e30:	81 c0       	rjmp	.+258    	; 0x1f34 <__stack+0xe35>
    1e32:	f6 01       	movw	r30, r12
    1e34:	eb 53       	subi	r30, 0x3B	; 59
    1e36:	fa 4f       	sbci	r31, 0xFA	; 250
    1e38:	80 81       	ld	r24, Z
    1e3a:	91 81       	ldd	r25, Z+1	; 0x01
    1e3c:	da 01       	movw	r26, r20
    1e3e:	8d 93       	st	X+, r24
    1e40:	9c 93       	st	X, r25
    1e42:	60 e0       	ldi	r22, 0x00	; 0
    1e44:	41 2c       	mov	r4, r1
    1e46:	51 2c       	mov	r5, r1
    1e48:	32 01       	movw	r6, r4
    1e4a:	74 c0       	rjmp	.+232    	; 0x1f34 <__stack+0xe35>
    1e4c:	ae 01       	movw	r20, r28
    1e4e:	4f 5f       	subi	r20, 0xFF	; 255
    1e50:	5f 4f       	sbci	r21, 0xFF	; 255
    1e52:	65 e0       	ldi	r22, 0x05	; 5
    1e54:	c6 01       	movw	r24, r12
    1e56:	0e 94 72 67 	call	0xcee4	; 0xcee4 <TMR_SR_cmdGetReaderWriteTimeOut>
    1e5a:	2b 01       	movw	r4, r22
    1e5c:	3c 01       	movw	r6, r24
    1e5e:	67 2b       	or	r22, r23
    1e60:	68 2b       	or	r22, r24
    1e62:	69 2b       	or	r22, r25
    1e64:	d9 f4       	brne	.+54     	; 0x1e9c <__stack+0xd9d>
    1e66:	11 35       	cpi	r17, 0x51	; 81
    1e68:	19 f0       	breq	.+6      	; 0x1e70 <__stack+0xd71>
    1e6a:	12 35       	cpi	r17, 0x52	; 82
    1e6c:	39 f0       	breq	.+14     	; 0x1e7c <__stack+0xd7d>
    1e6e:	0c c0       	rjmp	.+24     	; 0x1e88 <__stack+0xd89>
    1e70:	8a 81       	ldd	r24, Y+2	; 0x02
    1e72:	9b 81       	ldd	r25, Y+3	; 0x03
    1e74:	f5 01       	movw	r30, r10
    1e76:	91 83       	std	Z+1, r25	; 0x01
    1e78:	80 83       	st	Z, r24
    1e7a:	0e c0       	rjmp	.+28     	; 0x1e98 <__stack+0xd99>
    1e7c:	99 81       	ldd	r25, Y+1	; 0x01
    1e7e:	81 e0       	ldi	r24, 0x01	; 1
    1e80:	89 27       	eor	r24, r25
    1e82:	d5 01       	movw	r26, r10
    1e84:	8c 93       	st	X, r24
    1e86:	08 c0       	rjmp	.+16     	; 0x1e98 <__stack+0xd99>
    1e88:	0f 2e       	mov	r0, r31
    1e8a:	f9 e0       	ldi	r31, 0x09	; 9
    1e8c:	4f 2e       	mov	r4, r31
    1e8e:	51 2c       	mov	r5, r1
    1e90:	61 2c       	mov	r6, r1
    1e92:	f3 e0       	ldi	r31, 0x03	; 3
    1e94:	7f 2e       	mov	r7, r31
    1e96:	f0 2d       	mov	r31, r0
    1e98:	60 e0       	ldi	r22, 0x00	; 0
    1e9a:	4c c0       	rjmp	.+152    	; 0x1f34 <__stack+0xe35>
    1e9c:	60 e0       	ldi	r22, 0x00	; 0
    1e9e:	4a c0       	rjmp	.+148    	; 0x1f34 <__stack+0xe35>
    1ea0:	f6 01       	movw	r30, r12
    1ea2:	e7 5e       	subi	r30, 0xE7	; 231
    1ea4:	f9 4f       	sbci	r31, 0xF9	; 249
    1ea6:	80 81       	ld	r24, Z
    1ea8:	91 81       	ldd	r25, Z+1	; 0x01
    1eaa:	fa 01       	movw	r30, r20
    1eac:	91 83       	std	Z+1, r25	; 0x01
    1eae:	80 83       	st	Z, r24
    1eb0:	60 e0       	ldi	r22, 0x00	; 0
    1eb2:	41 2c       	mov	r4, r1
    1eb4:	51 2c       	mov	r5, r1
    1eb6:	32 01       	movw	r6, r4
    1eb8:	3d c0       	rjmp	.+122    	; 0x1f34 <__stack+0xe35>
    1eba:	ba 01       	movw	r22, r20
    1ebc:	c6 01       	movw	r24, r12
    1ebe:	0e 94 7c 54 	call	0xa8f8	; 0xa8f8 <TMR_SR_cmdGetQuantizationStep>
    1ec2:	2b 01       	movw	r4, r22
    1ec4:	3c 01       	movw	r6, r24
    1ec6:	60 e0       	ldi	r22, 0x00	; 0
    1ec8:	35 c0       	rjmp	.+106    	; 0x1f34 <__stack+0xe35>
    1eca:	ba 01       	movw	r22, r20
    1ecc:	c6 01       	movw	r24, r12
    1ece:	0e 94 7f 54 	call	0xa8fe	; 0xa8fe <TMR_SR_cmdGetMinimumFrequency>
    1ed2:	2b 01       	movw	r4, r22
    1ed4:	3c 01       	movw	r6, r24
    1ed6:	60 e0       	ldi	r22, 0x00	; 0
    1ed8:	2d c0       	rjmp	.+90     	; 0x1f34 <__stack+0xe35>
    1eda:	ba 01       	movw	r22, r20
    1edc:	c6 01       	movw	r24, r12
    1ede:	0e 94 17 03 	call	0x62e	; 0x62e <TMR_SR_cmdGetPerAntennaTime>
    1ee2:	2b 01       	movw	r4, r22
    1ee4:	3c 01       	movw	r6, r24
    1ee6:	60 e0       	ldi	r22, 0x00	; 0
    1ee8:	25 c0       	rjmp	.+74     	; 0x1f34 <__stack+0xe35>
    1eea:	60 e0       	ldi	r22, 0x00	; 0
    1eec:	0f 2e       	mov	r0, r31
    1eee:	f9 e0       	ldi	r31, 0x09	; 9
    1ef0:	4f 2e       	mov	r4, r31
    1ef2:	51 2c       	mov	r5, r1
    1ef4:	61 2c       	mov	r6, r1
    1ef6:	f3 e0       	ldi	r31, 0x03	; 3
    1ef8:	7f 2e       	mov	r7, r31
    1efa:	f0 2d       	mov	r31, r0
    1efc:	1b c0       	rjmp	.+54     	; 0x1f34 <__stack+0xe35>
    1efe:	64 e0       	ldi	r22, 0x04	; 4
    1f00:	41 2c       	mov	r4, r1
    1f02:	51 2c       	mov	r5, r1
    1f04:	32 01       	movw	r6, r4
    1f06:	16 c0       	rjmp	.+44     	; 0x1f34 <__stack+0xe35>
    1f08:	60 e0       	ldi	r22, 0x00	; 0
    1f0a:	41 2c       	mov	r4, r1
    1f0c:	51 2c       	mov	r5, r1
    1f0e:	32 01       	movw	r6, r4
    1f10:	11 c0       	rjmp	.+34     	; 0x1f34 <__stack+0xe35>
    1f12:	60 e0       	ldi	r22, 0x00	; 0
    1f14:	0f c0       	rjmp	.+30     	; 0x1f34 <__stack+0xe35>
    1f16:	60 e0       	ldi	r22, 0x00	; 0
    1f18:	0d c0       	rjmp	.+26     	; 0x1f34 <__stack+0xe35>
    1f1a:	60 e0       	ldi	r22, 0x00	; 0
    1f1c:	0b c0       	rjmp	.+22     	; 0x1f34 <__stack+0xe35>
    1f1e:	60 e0       	ldi	r22, 0x00	; 0
    1f20:	09 c0       	rjmp	.+18     	; 0x1f34 <__stack+0xe35>
    1f22:	60 e0       	ldi	r22, 0x00	; 0
    1f24:	0f 2e       	mov	r0, r31
    1f26:	fe e0       	ldi	r31, 0x0E	; 14
    1f28:	4f 2e       	mov	r4, r31
    1f2a:	51 2c       	mov	r5, r1
    1f2c:	61 2c       	mov	r6, r1
    1f2e:	f3 e0       	ldi	r31, 0x03	; 3
    1f30:	7f 2e       	mov	r7, r31
    1f32:	f0 2d       	mov	r31, r0
    1f34:	81 2f       	mov	r24, r17
    1f36:	90 e0       	ldi	r25, 0x00	; 0
    1f38:	fc 01       	movw	r30, r24
    1f3a:	37 97       	sbiw	r30, 0x07	; 7
    1f3c:	e8 36       	cpi	r30, 0x68	; 104
    1f3e:	f1 05       	cpc	r31, r1
    1f40:	a0 f4       	brcc	.+40     	; 0x1f6a <__stack+0xe6b>
    1f42:	ea 54       	subi	r30, 0x4A	; 74
    1f44:	ff 4f       	sbci	r31, 0xFF	; 255
    1f46:	0c 94 d0 74 	jmp	0xe9a0	; 0xe9a0 <__tablejump2__>
    1f4a:	a5 01       	movw	r20, r10
    1f4c:	c6 01       	movw	r24, r12
    1f4e:	0e 94 33 57 	call	0xae66	; 0xae66 <TMR_SR_cmdGetReaderConfiguration>
    1f52:	2b 01       	movw	r4, r22
    1f54:	3c 01       	movw	r6, r24
    1f56:	09 c0       	rjmp	.+18     	; 0x1f6a <__stack+0xe6b>
    1f58:	95 01       	movw	r18, r10
    1f5a:	43 2d       	mov	r20, r3
    1f5c:	52 2d       	mov	r21, r2
    1f5e:	63 2d       	mov	r22, r3
    1f60:	c6 01       	movw	r24, r12
    1f62:	0e 94 cd 57 	call	0xaf9a	; 0xaf9a <TMR_SR_cmdGetProtocolConfiguration>
    1f66:	2b 01       	movw	r4, r22
    1f68:	3c 01       	movw	r6, r24
    1f6a:	f7 01       	movw	r30, r14
    1f6c:	ef 57       	subi	r30, 0x7F	; 127
    1f6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f70:	ee 0f       	add	r30, r30
    1f72:	ff 1f       	adc	r31, r31
    1f74:	ee 0f       	add	r30, r30
    1f76:	ff 1f       	adc	r31, r31
    1f78:	c6 01       	movw	r24, r12
    1f7a:	80 58       	subi	r24, 0x80	; 128
    1f7c:	9e 4f       	sbci	r25, 0xFE	; 254
    1f7e:	e8 0f       	add	r30, r24
    1f80:	f9 1f       	adc	r31, r25
    1f82:	80 81       	ld	r24, Z
    1f84:	91 81       	ldd	r25, Z+1	; 0x01
    1f86:	a2 81       	ldd	r26, Z+2	; 0x02
    1f88:	b3 81       	ldd	r27, Z+3	; 0x03
    1f8a:	00 2e       	mov	r0, r16
    1f8c:	04 c0       	rjmp	.+8      	; 0x1f96 <__stack+0xe97>
    1f8e:	b6 95       	lsr	r27
    1f90:	a7 95       	ror	r26
    1f92:	97 95       	ror	r25
    1f94:	87 95       	ror	r24
    1f96:	0a 94       	dec	r0
    1f98:	d2 f7       	brpl	.-12     	; 0x1f8e <__stack+0xe8f>
    1f9a:	80 fd       	sbrc	r24, 0
    1f9c:	6c c0       	rjmp	.+216    	; 0x2076 <__stack+0xf77>
    1f9e:	41 14       	cp	r4, r1
    1fa0:	51 04       	cpc	r5, r1
    1fa2:	61 04       	cpc	r6, r1
    1fa4:	71 04       	cpc	r7, r1
    1fa6:	39 f0       	breq	.+14     	; 0x1fb6 <__stack+0xeb7>
    1fa8:	f3 e1       	ldi	r31, 0x13	; 19
    1faa:	4f 16       	cp	r4, r31
    1fac:	51 04       	cpc	r5, r1
    1fae:	61 04       	cpc	r6, r1
    1fb0:	f3 e0       	ldi	r31, 0x03	; 3
    1fb2:	7f 06       	cpc	r7, r31
    1fb4:	29 f5       	brne	.+74     	; 0x2000 <__stack+0xf01>
    1fb6:	41 e0       	ldi	r20, 0x01	; 1
    1fb8:	50 e0       	ldi	r21, 0x00	; 0
    1fba:	60 e0       	ldi	r22, 0x00	; 0
    1fbc:	70 e0       	ldi	r23, 0x00	; 0
    1fbe:	00 2e       	mov	r0, r16
    1fc0:	04 c0       	rjmp	.+8      	; 0x1fca <__stack+0xecb>
    1fc2:	44 0f       	add	r20, r20
    1fc4:	55 1f       	adc	r21, r21
    1fc6:	66 1f       	adc	r22, r22
    1fc8:	77 1f       	adc	r23, r23
    1fca:	0a 94       	dec	r0
    1fcc:	d2 f7       	brpl	.-12     	; 0x1fc2 <__stack+0xec3>
    1fce:	c7 01       	movw	r24, r14
    1fd0:	8b 57       	subi	r24, 0x7B	; 123
    1fd2:	9f 4f       	sbci	r25, 0xFF	; 255
    1fd4:	88 0f       	add	r24, r24
    1fd6:	99 1f       	adc	r25, r25
    1fd8:	88 0f       	add	r24, r24
    1fda:	99 1f       	adc	r25, r25
    1fdc:	96 01       	movw	r18, r12
    1fde:	20 58       	subi	r18, 0x80	; 128
    1fe0:	3e 4f       	sbci	r19, 0xFE	; 254
    1fe2:	f9 01       	movw	r30, r18
    1fe4:	e8 0f       	add	r30, r24
    1fe6:	f9 1f       	adc	r31, r25
    1fe8:	80 81       	ld	r24, Z
    1fea:	91 81       	ldd	r25, Z+1	; 0x01
    1fec:	a2 81       	ldd	r26, Z+2	; 0x02
    1fee:	b3 81       	ldd	r27, Z+3	; 0x03
    1ff0:	48 2b       	or	r20, r24
    1ff2:	59 2b       	or	r21, r25
    1ff4:	6a 2b       	or	r22, r26
    1ff6:	7b 2b       	or	r23, r27
    1ff8:	40 83       	st	Z, r20
    1ffa:	51 83       	std	Z+1, r21	; 0x01
    1ffc:	62 83       	std	Z+2, r22	; 0x02
    1ffe:	73 83       	std	Z+3, r23	; 0x03
    2000:	81 e0       	ldi	r24, 0x01	; 1
    2002:	90 e0       	ldi	r25, 0x00	; 0
    2004:	a0 e0       	ldi	r26, 0x00	; 0
    2006:	b0 e0       	ldi	r27, 0x00	; 0
    2008:	04 c0       	rjmp	.+8      	; 0x2012 <__stack+0xf13>
    200a:	88 0f       	add	r24, r24
    200c:	99 1f       	adc	r25, r25
    200e:	aa 1f       	adc	r26, r26
    2010:	bb 1f       	adc	r27, r27
    2012:	0a 95       	dec	r16
    2014:	d2 f7       	brpl	.-12     	; 0x200a <__stack+0xf0b>
    2016:	20 e8       	ldi	r18, 0x80	; 128
    2018:	c2 1a       	sub	r12, r18
    201a:	2e ef       	ldi	r18, 0xFE	; 254
    201c:	d2 0a       	sbc	r13, r18
    201e:	31 e8       	ldi	r19, 0x81	; 129
    2020:	e3 0e       	add	r14, r19
    2022:	f1 1c       	adc	r15, r1
    2024:	ee 0c       	add	r14, r14
    2026:	ff 1c       	adc	r15, r15
    2028:	ee 0c       	add	r14, r14
    202a:	ff 1c       	adc	r15, r15
    202c:	f6 01       	movw	r30, r12
    202e:	ee 0d       	add	r30, r14
    2030:	ff 1d       	adc	r31, r15
    2032:	40 81       	ld	r20, Z
    2034:	51 81       	ldd	r21, Z+1	; 0x01
    2036:	62 81       	ldd	r22, Z+2	; 0x02
    2038:	73 81       	ldd	r23, Z+3	; 0x03
    203a:	84 2b       	or	r24, r20
    203c:	95 2b       	or	r25, r21
    203e:	a6 2b       	or	r26, r22
    2040:	b7 2b       	or	r27, r23
    2042:	80 83       	st	Z, r24
    2044:	91 83       	std	Z+1, r25	; 0x01
    2046:	a2 83       	std	Z+2, r26	; 0x02
    2048:	b3 83       	std	Z+3, r27	; 0x03
    204a:	64 2d       	mov	r22, r4
    204c:	75 2d       	mov	r23, r5
    204e:	86 2d       	mov	r24, r6
    2050:	97 2d       	mov	r25, r7
    2052:	15 c0       	rjmp	.+42     	; 0x207e <__stack+0xf7f>
    2054:	69 e0       	ldi	r22, 0x09	; 9
    2056:	70 e0       	ldi	r23, 0x00	; 0
    2058:	80 e0       	ldi	r24, 0x00	; 0
    205a:	93 e0       	ldi	r25, 0x03	; 3
    205c:	10 c0       	rjmp	.+32     	; 0x207e <__stack+0xf7f>
    205e:	75 2d       	mov	r23, r5
    2060:	86 2d       	mov	r24, r6
    2062:	97 2d       	mov	r25, r7
    2064:	0c c0       	rjmp	.+24     	; 0x207e <__stack+0xf7f>
    2066:	75 2d       	mov	r23, r5
    2068:	86 2d       	mov	r24, r6
    206a:	97 2d       	mov	r25, r7
    206c:	08 c0       	rjmp	.+16     	; 0x207e <__stack+0xf7f>
    206e:	75 2d       	mov	r23, r5
    2070:	86 2d       	mov	r24, r6
    2072:	97 2d       	mov	r25, r7
    2074:	04 c0       	rjmp	.+8      	; 0x207e <__stack+0xf7f>
    2076:	64 2d       	mov	r22, r4
    2078:	75 2d       	mov	r23, r5
    207a:	86 2d       	mov	r24, r6
    207c:	97 2d       	mov	r25, r7
    207e:	cc 53       	subi	r28, 0x3C	; 60
    2080:	df 4f       	sbci	r29, 0xFF	; 255
    2082:	0f b6       	in	r0, 0x3f	; 63
    2084:	f8 94       	cli
    2086:	de bf       	out	0x3e, r29	; 62
    2088:	0f be       	out	0x3f, r0	; 63
    208a:	cd bf       	out	0x3d, r28	; 61
    208c:	df 91       	pop	r29
    208e:	cf 91       	pop	r28
    2090:	1f 91       	pop	r17
    2092:	0f 91       	pop	r16
    2094:	ff 90       	pop	r15
    2096:	ef 90       	pop	r14
    2098:	df 90       	pop	r13
    209a:	cf 90       	pop	r12
    209c:	bf 90       	pop	r11
    209e:	af 90       	pop	r10
    20a0:	9f 90       	pop	r9
    20a2:	8f 90       	pop	r8
    20a4:	7f 90       	pop	r7
    20a6:	6f 90       	pop	r6
    20a8:	5f 90       	pop	r5
    20aa:	4f 90       	pop	r4
    20ac:	3f 90       	pop	r3
    20ae:	2f 90       	pop	r2
    20b0:	08 95       	ret

000020b2 <setPortValues>:
    20b2:	8f 92       	push	r8
    20b4:	9f 92       	push	r9
    20b6:	af 92       	push	r10
    20b8:	bf 92       	push	r11
    20ba:	cf 92       	push	r12
    20bc:	df 92       	push	r13
    20be:	ef 92       	push	r14
    20c0:	ff 92       	push	r15
    20c2:	0f 93       	push	r16
    20c4:	1f 93       	push	r17
    20c6:	cf 93       	push	r28
    20c8:	df 93       	push	r29
    20ca:	cd b7       	in	r28, 0x3d	; 61
    20cc:	de b7       	in	r29, 0x3e	; 62
    20ce:	c0 5c       	subi	r28, 0xC0	; 192
    20d0:	d1 40       	sbci	r29, 0x01	; 1
    20d2:	0f b6       	in	r0, 0x3f	; 63
    20d4:	f8 94       	cli
    20d6:	de bf       	out	0x3e, r29	; 62
    20d8:	0f be       	out	0x3f, r0	; 63
    20da:	cd bf       	out	0x3d, r28	; 61
    20dc:	6c 01       	movw	r12, r24
    20de:	8b 01       	movw	r16, r22
    20e0:	7a 01       	movw	r14, r20
    20e2:	fc 01       	movw	r30, r24
    20e4:	ec 52       	subi	r30, 0x2C	; 44
    20e6:	fe 4f       	sbci	r31, 0xFE	; 254
    20e8:	80 81       	ld	r24, Z
    20ea:	91 81       	ldd	r25, Z+1	; 0x01
    20ec:	89 2b       	or	r24, r25
    20ee:	59 f4       	brne	.+22     	; 0x2106 <setPortValues+0x54>
    20f0:	c6 01       	movw	r24, r12
    20f2:	0e 94 a0 05 	call	0xb40	; 0xb40 <initTxRxMapFromPorts>
    20f6:	4b 01       	movw	r8, r22
    20f8:	5c 01       	movw	r10, r24
    20fa:	61 15       	cp	r22, r1
    20fc:	71 05       	cpc	r23, r1
    20fe:	81 05       	cpc	r24, r1
    2100:	91 05       	cpc	r25, r1
    2102:	09 f0       	breq	.+2      	; 0x2106 <setPortValues+0x54>
    2104:	89 c0       	rjmp	.+274    	; 0x2218 <setPortValues+0x166>
    2106:	f6 01       	movw	r30, r12
    2108:	ec 52       	subi	r30, 0x2C	; 44
    210a:	fe 4f       	sbci	r31, 0xFE	; 254
    210c:	a0 81       	ld	r26, Z
    210e:	b1 81       	ldd	r27, Z+1	; 0x01
    2110:	13 96       	adiw	r26, 0x03	; 3
    2112:	bc 90       	ld	r11, X
    2114:	13 97       	sbiw	r26, 0x03	; 3
    2116:	e6 5c       	subi	r30, 0xC6	; 198
    2118:	fb 4f       	sbci	r31, 0xFB	; 251
    211a:	81 e0       	ldi	r24, 0x01	; 1
    211c:	8e 0d       	add	r24, r14
    211e:	80 83       	st	Z, r24
    2120:	20 e0       	ldi	r18, 0x00	; 0
    2122:	30 e0       	ldi	r19, 0x00	; 0
    2124:	6a c0       	rjmp	.+212    	; 0x21fa <setPortValues+0x148>
    2126:	6d 91       	ld	r22, X+
    2128:	7c 91       	ld	r23, X
    212a:	11 97       	sbiw	r26, 0x01	; 1
    212c:	fc 01       	movw	r30, r24
    212e:	ee 0f       	add	r30, r30
    2130:	ff 1f       	adc	r31, r31
    2132:	e8 0f       	add	r30, r24
    2134:	f9 1f       	adc	r31, r25
    2136:	e6 0f       	add	r30, r22
    2138:	f7 1f       	adc	r31, r23
    213a:	a0 80       	ld	r10, Z
    213c:	f8 01       	movw	r30, r16
    213e:	60 81       	ld	r22, Z
    2140:	71 81       	ldd	r23, Z+1	; 0x01
    2142:	f9 01       	movw	r30, r18
    2144:	ee 0f       	add	r30, r30
    2146:	ff 1f       	adc	r31, r31
    2148:	ee 0f       	add	r30, r30
    214a:	ff 1f       	adc	r31, r31
    214c:	e2 0f       	add	r30, r18
    214e:	f3 1f       	adc	r31, r19
    2150:	e6 0f       	add	r30, r22
    2152:	f7 1f       	adc	r31, r23
    2154:	60 81       	ld	r22, Z
    2156:	a6 16       	cp	r10, r22
    2158:	49 f0       	breq	.+18     	; 0x216c <setPortValues+0xba>
    215a:	01 96       	adiw	r24, 0x01	; 1
    215c:	02 c0       	rjmp	.+4      	; 0x2162 <setPortValues+0xb0>
    215e:	80 e0       	ldi	r24, 0x00	; 0
    2160:	90 e0       	ldi	r25, 0x00	; 0
    2162:	4b 2d       	mov	r20, r11
    2164:	50 e0       	ldi	r21, 0x00	; 0
    2166:	84 17       	cp	r24, r20
    2168:	95 07       	cpc	r25, r21
    216a:	e8 f2       	brcs	.-70     	; 0x2126 <setPortValues+0x74>
    216c:	84 17       	cp	r24, r20
    216e:	95 07       	cpc	r25, r21
    2170:	09 f4       	brne	.+2      	; 0x2174 <setPortValues+0xc2>
    2172:	56 c0       	rjmp	.+172    	; 0x2220 <setPortValues+0x16e>
    2174:	4d 91       	ld	r20, X+
    2176:	5c 91       	ld	r21, X
    2178:	11 97       	sbiw	r26, 0x01	; 1
    217a:	fc 01       	movw	r30, r24
    217c:	ee 0f       	add	r30, r30
    217e:	ff 1f       	adc	r31, r31
    2180:	e8 0f       	add	r30, r24
    2182:	f9 1f       	adc	r31, r25
    2184:	e4 0f       	add	r30, r20
    2186:	f5 1f       	adc	r31, r21
    2188:	41 81       	ldd	r20, Z+1	; 0x01
    218a:	f9 01       	movw	r30, r18
    218c:	ee 0f       	add	r30, r30
    218e:	ff 1f       	adc	r31, r31
    2190:	ee 0f       	add	r30, r30
    2192:	ff 1f       	adc	r31, r31
    2194:	ee 0f       	add	r30, r30
    2196:	ff 1f       	adc	r31, r31
    2198:	e2 1b       	sub	r30, r18
    219a:	f3 0b       	sbc	r31, r19
    219c:	61 e0       	ldi	r22, 0x01	; 1
    219e:	70 e0       	ldi	r23, 0x00	; 0
    21a0:	6c 0f       	add	r22, r28
    21a2:	7d 1f       	adc	r23, r29
    21a4:	e6 0f       	add	r30, r22
    21a6:	f7 1f       	adc	r31, r23
    21a8:	40 83       	st	Z, r20
    21aa:	ac 01       	movw	r20, r24
    21ac:	44 0f       	add	r20, r20
    21ae:	55 1f       	adc	r21, r21
    21b0:	44 0f       	add	r20, r20
    21b2:	55 1f       	adc	r21, r21
    21b4:	44 0f       	add	r20, r20
    21b6:	55 1f       	adc	r21, r21
    21b8:	fa 01       	movw	r30, r20
    21ba:	e8 1b       	sub	r30, r24
    21bc:	f9 0b       	sbc	r31, r25
    21be:	cf 01       	movw	r24, r30
    21c0:	01 96       	adiw	r24, 0x01	; 1
    21c2:	86 0f       	add	r24, r22
    21c4:	97 1f       	adc	r25, r23
    21c6:	a7 01       	movw	r20, r14
    21c8:	44 0f       	add	r20, r20
    21ca:	55 1f       	adc	r21, r21
    21cc:	84 0f       	add	r24, r20
    21ce:	95 1f       	adc	r25, r21
    21d0:	f8 01       	movw	r30, r16
    21d2:	40 81       	ld	r20, Z
    21d4:	51 81       	ldd	r21, Z+1	; 0x01
    21d6:	f9 01       	movw	r30, r18
    21d8:	ee 0f       	add	r30, r30
    21da:	ff 1f       	adc	r31, r31
    21dc:	ee 0f       	add	r30, r30
    21de:	ff 1f       	adc	r31, r31
    21e0:	e2 0f       	add	r30, r18
    21e2:	f3 1f       	adc	r31, r19
    21e4:	e4 0f       	add	r30, r20
    21e6:	f5 1f       	adc	r31, r21
    21e8:	41 81       	ldd	r20, Z+1	; 0x01
    21ea:	52 81       	ldd	r21, Z+2	; 0x02
    21ec:	63 81       	ldd	r22, Z+3	; 0x03
    21ee:	74 81       	ldd	r23, Z+4	; 0x04
    21f0:	fc 01       	movw	r30, r24
    21f2:	51 83       	std	Z+1, r21	; 0x01
    21f4:	40 83       	st	Z, r20
    21f6:	2f 5f       	subi	r18, 0xFF	; 255
    21f8:	3f 4f       	sbci	r19, 0xFF	; 255
    21fa:	f8 01       	movw	r30, r16
    21fc:	63 81       	ldd	r22, Z+3	; 0x03
    21fe:	86 2f       	mov	r24, r22
    2200:	90 e0       	ldi	r25, 0x00	; 0
    2202:	28 17       	cp	r18, r24
    2204:	39 07       	cpc	r19, r25
    2206:	08 f4       	brcc	.+2      	; 0x220a <setPortValues+0x158>
    2208:	aa cf       	rjmp	.-172    	; 0x215e <setPortValues+0xac>
    220a:	ae 01       	movw	r20, r28
    220c:	4f 5f       	subi	r20, 0xFF	; 255
    220e:	5f 4f       	sbci	r21, 0xFF	; 255
    2210:	c6 01       	movw	r24, r12
    2212:	0e 94 63 4a 	call	0x94c6	; 0x94c6 <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime>
    2216:	08 c0       	rjmp	.+16     	; 0x2228 <setPortValues+0x176>
    2218:	79 2d       	mov	r23, r9
    221a:	8a 2d       	mov	r24, r10
    221c:	9b 2d       	mov	r25, r11
    221e:	04 c0       	rjmp	.+8      	; 0x2228 <setPortValues+0x176>
    2220:	64 e0       	ldi	r22, 0x04	; 4
    2222:	70 e0       	ldi	r23, 0x00	; 0
    2224:	80 e0       	ldi	r24, 0x00	; 0
    2226:	93 e0       	ldi	r25, 0x03	; 3
    2228:	c0 54       	subi	r28, 0x40	; 64
    222a:	de 4f       	sbci	r29, 0xFE	; 254
    222c:	0f b6       	in	r0, 0x3f	; 63
    222e:	f8 94       	cli
    2230:	de bf       	out	0x3e, r29	; 62
    2232:	0f be       	out	0x3f, r0	; 63
    2234:	cd bf       	out	0x3d, r28	; 61
    2236:	df 91       	pop	r29
    2238:	cf 91       	pop	r28
    223a:	1f 91       	pop	r17
    223c:	0f 91       	pop	r16
    223e:	ff 90       	pop	r15
    2240:	ef 90       	pop	r14
    2242:	df 90       	pop	r13
    2244:	cf 90       	pop	r12
    2246:	bf 90       	pop	r11
    2248:	af 90       	pop	r10
    224a:	9f 90       	pop	r9
    224c:	8f 90       	pop	r8
    224e:	08 95       	ret

00002250 <TMR_SR_boot>:
    2250:	cf 92       	push	r12
    2252:	df 92       	push	r13
    2254:	ef 92       	push	r14
    2256:	ff 92       	push	r15
    2258:	0f 93       	push	r16
    225a:	1f 93       	push	r17
    225c:	cf 93       	push	r28
    225e:	df 93       	push	r29
    2260:	ec 01       	movw	r28, r24
    2262:	fc 01       	movw	r30, r24
    2264:	e3 58       	subi	r30, 0x83	; 131
    2266:	fc 4f       	sbci	r31, 0xFC	; 252
    2268:	80 81       	ld	r24, Z
    226a:	91 81       	ldd	r25, Z+1	; 0x01
    226c:	a2 81       	ldd	r26, Z+2	; 0x02
    226e:	b3 81       	ldd	r27, Z+3	; 0x03
    2270:	89 2b       	or	r24, r25
    2272:	8a 2b       	or	r24, r26
    2274:	8b 2b       	or	r24, r27
    2276:	51 f4       	brne	.+20     	; 0x228c <TMR_SR_boot+0x3c>
    2278:	ce 01       	movw	r24, r28
    227a:	0e 94 ba 37 	call	0x6f74	; 0x6f74 <TMR_SR_cmdBootFirmware>
    227e:	8b 01       	movw	r16, r22
    2280:	9c 01       	movw	r18, r24
    2282:	67 2b       	or	r22, r23
    2284:	68 2b       	or	r22, r24
    2286:	69 2b       	or	r22, r25
    2288:	21 f0       	breq	.+8      	; 0x2292 <TMR_SR_boot+0x42>
    228a:	6f c0       	rjmp	.+222    	; 0x236a <TMR_SR_boot+0x11a>
    228c:	00 e0       	ldi	r16, 0x00	; 0
    228e:	10 e0       	ldi	r17, 0x00	; 0
    2290:	98 01       	movw	r18, r16
    2292:	80 e1       	ldi	r24, 0x10	; 16
    2294:	fe 01       	movw	r30, r28
    2296:	ec 56       	subi	r30, 0x6C	; 108
    2298:	fc 4f       	sbci	r31, 0xFC	; 252
    229a:	df 01       	movw	r26, r30
    229c:	1d 92       	st	X+, r1
    229e:	8a 95       	dec	r24
    22a0:	e9 f7       	brne	.-6      	; 0x229c <TMR_SR_boot+0x4c>
    22a2:	81 e0       	ldi	r24, 0x01	; 1
    22a4:	90 e0       	ldi	r25, 0x00	; 0
    22a6:	34 c0       	rjmp	.+104    	; 0x2310 <TMR_SR_boot+0xc0>
    22a8:	fc 01       	movw	r30, r24
    22aa:	99 23       	and	r25, r25
    22ac:	0c f4       	brge	.+2      	; 0x22b0 <TMR_SR_boot+0x60>
    22ae:	7f 96       	adiw	r30, 0x1f	; 31
    22b0:	f5 95       	asr	r31
    22b2:	e7 95       	ror	r30
    22b4:	f5 95       	asr	r31
    22b6:	e7 95       	ror	r30
    22b8:	f5 95       	asr	r31
    22ba:	e7 95       	ror	r30
    22bc:	f5 95       	asr	r31
    22be:	e7 95       	ror	r30
    22c0:	f5 95       	asr	r31
    22c2:	e7 95       	ror	r30
    22c4:	dc 01       	movw	r26, r24
    22c6:	af 71       	andi	r26, 0x1F	; 31
    22c8:	bb 27       	eor	r27, r27
    22ca:	41 e0       	ldi	r20, 0x01	; 1
    22cc:	50 e0       	ldi	r21, 0x00	; 0
    22ce:	60 e0       	ldi	r22, 0x00	; 0
    22d0:	70 e0       	ldi	r23, 0x00	; 0
    22d2:	04 c0       	rjmp	.+8      	; 0x22dc <TMR_SR_boot+0x8c>
    22d4:	44 0f       	add	r20, r20
    22d6:	55 1f       	adc	r21, r21
    22d8:	66 1f       	adc	r22, r22
    22da:	77 1f       	adc	r23, r23
    22dc:	aa 95       	dec	r26
    22de:	d2 f7       	brpl	.-12     	; 0x22d4 <TMR_SR_boot+0x84>
    22e0:	eb 57       	subi	r30, 0x7B	; 123
    22e2:	ff 4f       	sbci	r31, 0xFF	; 255
    22e4:	ee 0f       	add	r30, r30
    22e6:	ff 1f       	adc	r31, r31
    22e8:	ee 0f       	add	r30, r30
    22ea:	ff 1f       	adc	r31, r31
    22ec:	de 01       	movw	r26, r28
    22ee:	a0 58       	subi	r26, 0x80	; 128
    22f0:	be 4f       	sbci	r27, 0xFE	; 254
    22f2:	ea 0f       	add	r30, r26
    22f4:	fb 1f       	adc	r31, r27
    22f6:	c0 80       	ld	r12, Z
    22f8:	d1 80       	ldd	r13, Z+1	; 0x01
    22fa:	e2 80       	ldd	r14, Z+2	; 0x02
    22fc:	f3 80       	ldd	r15, Z+3	; 0x03
    22fe:	4c 29       	or	r20, r12
    2300:	5d 29       	or	r21, r13
    2302:	6e 29       	or	r22, r14
    2304:	7f 29       	or	r23, r15
    2306:	40 83       	st	Z, r20
    2308:	51 83       	std	Z+1, r21	; 0x01
    230a:	62 83       	std	Z+2, r22	; 0x02
    230c:	73 83       	std	Z+3, r23	; 0x03
    230e:	01 96       	adiw	r24, 0x01	; 1
    2310:	81 37       	cpi	r24, 0x71	; 113
    2312:	91 05       	cpc	r25, r1
    2314:	4c f2       	brlt	.-110    	; 0x22a8 <TMR_SR_boot+0x58>
    2316:	80 e0       	ldi	r24, 0x00	; 0
    2318:	90 e0       	ldi	r25, 0x00	; 0
    231a:	1e c0       	rjmp	.+60     	; 0x2358 <TMR_SR_boot+0x108>
    231c:	dc 01       	movw	r26, r24
    231e:	ab 57       	subi	r26, 0x7B	; 123
    2320:	bf 4f       	sbci	r27, 0xFF	; 255
    2322:	aa 0f       	add	r26, r26
    2324:	bb 1f       	adc	r27, r27
    2326:	aa 0f       	add	r26, r26
    2328:	bb 1f       	adc	r27, r27
    232a:	ae 01       	movw	r20, r28
    232c:	40 58       	subi	r20, 0x80	; 128
    232e:	5e 4f       	sbci	r21, 0xFE	; 254
    2330:	a4 0f       	add	r26, r20
    2332:	b5 1f       	adc	r27, r21
    2334:	cd 90       	ld	r12, X+
    2336:	dd 90       	ld	r13, X+
    2338:	ed 90       	ld	r14, X+
    233a:	fc 90       	ld	r15, X
    233c:	fc 01       	movw	r30, r24
    233e:	ef 57       	subi	r30, 0x7F	; 127
    2340:	ff 4f       	sbci	r31, 0xFF	; 255
    2342:	ee 0f       	add	r30, r30
    2344:	ff 1f       	adc	r31, r31
    2346:	ee 0f       	add	r30, r30
    2348:	ff 1f       	adc	r31, r31
    234a:	e4 0f       	add	r30, r20
    234c:	f5 1f       	adc	r31, r21
    234e:	c0 82       	st	Z, r12
    2350:	d1 82       	std	Z+1, r13	; 0x01
    2352:	e2 82       	std	Z+2, r14	; 0x02
    2354:	f3 82       	std	Z+3, r15	; 0x03
    2356:	01 96       	adiw	r24, 0x01	; 1
    2358:	84 30       	cpi	r24, 0x04	; 4
    235a:	91 05       	cpc	r25, r1
    235c:	fc f2       	brlt	.-66     	; 0x231c <TMR_SR_boot+0xcc>
    235e:	fe 01       	movw	r30, r28
    2360:	ee 57       	subi	r30, 0x7E	; 126
    2362:	fc 4f       	sbci	r31, 0xFC	; 252
    2364:	80 81       	ld	r24, Z
    2366:	8d ab       	std	Y+53, r24	; 0x35
    2368:	1c aa       	std	Y+52, r1	; 0x34
    236a:	c9 01       	movw	r24, r18
    236c:	b8 01       	movw	r22, r16
    236e:	df 91       	pop	r29
    2370:	cf 91       	pop	r28
    2372:	1f 91       	pop	r17
    2374:	0f 91       	pop	r16
    2376:	ff 90       	pop	r15
    2378:	ef 90       	pop	r14
    237a:	df 90       	pop	r13
    237c:	cf 90       	pop	r12
    237e:	08 95       	ret

00002380 <TMR_SR_getVersion>:
    2380:	0f 93       	push	r16
    2382:	1f 93       	push	r17
    2384:	cf 93       	push	r28
    2386:	df 93       	push	r29
    2388:	ec 01       	movw	r28, r24
    238a:	8c 01       	movw	r16, r24
    238c:	00 58       	subi	r16, 0x80	; 128
    238e:	1e 4f       	sbci	r17, 0xFE	; 254
    2390:	d8 01       	movw	r26, r16
    2392:	18 96       	adiw	r26, 0x08	; 8
    2394:	ed 91       	ld	r30, X+
    2396:	fc 91       	ld	r31, X
    2398:	19 97       	sbiw	r26, 0x09	; 9
    239a:	30 97       	sbiw	r30, 0x00	; 0
    239c:	69 f0       	breq	.+26     	; 0x23b8 <TMR_SR_getVersion+0x38>
    239e:	a0 5b       	subi	r26, 0xB0	; 176
    23a0:	bf 4f       	sbci	r27, 0xFF	; 255
    23a2:	4d 91       	ld	r20, X+
    23a4:	5d 91       	ld	r21, X+
    23a6:	6d 91       	ld	r22, X+
    23a8:	7c 91       	ld	r23, X
    23aa:	c8 01       	movw	r24, r16
    23ac:	09 95       	icall
    23ae:	61 15       	cp	r22, r1
    23b0:	71 05       	cpc	r23, r1
    23b2:	81 05       	cpc	r24, r1
    23b4:	91 05       	cpc	r25, r1
    23b6:	c9 f5       	brne	.+114    	; 0x242a <TMR_SR_getVersion+0xaa>
    23b8:	fe 01       	movw	r30, r28
    23ba:	e0 58       	subi	r30, 0x80	; 128
    23bc:	fe 4f       	sbci	r31, 0xFE	; 254
    23be:	04 84       	ldd	r0, Z+12	; 0x0c
    23c0:	f5 85       	ldd	r31, Z+13	; 0x0d
    23c2:	e0 2d       	mov	r30, r0
    23c4:	c8 01       	movw	r24, r16
    23c6:	09 95       	icall
    23c8:	61 15       	cp	r22, r1
    23ca:	71 05       	cpc	r23, r1
    23cc:	81 05       	cpc	r24, r1
    23ce:	91 05       	cpc	r25, r1
    23d0:	01 f1       	breq	.+64     	; 0x2412 <TMR_SR_getVersion+0x92>
    23d2:	62 30       	cpi	r22, 0x02	; 2
    23d4:	71 05       	cpc	r23, r1
    23d6:	81 05       	cpc	r24, r1
    23d8:	b3 e0       	ldi	r27, 0x03	; 3
    23da:	9b 07       	cpc	r25, r27
    23dc:	51 f5       	brne	.+84     	; 0x2432 <TMR_SR_getVersion+0xb2>
    23de:	19 c0       	rjmp	.+50     	; 0x2412 <TMR_SR_getVersion+0x92>
    23e0:	21 e0       	ldi	r18, 0x01	; 1
    23e2:	2d 83       	std	Y+5, r18	; 0x05
    23e4:	46 2f       	mov	r20, r22
    23e6:	37 2f       	mov	r19, r23
    23e8:	28 2f       	mov	r18, r24
    23ea:	2a c0       	rjmp	.+84     	; 0x2440 <TMR_SR_getVersion+0xc0>
    23ec:	67 30       	cpi	r22, 0x07	; 7
    23ee:	71 05       	cpc	r23, r1
    23f0:	81 05       	cpc	r24, r1
    23f2:	21 e0       	ldi	r18, 0x01	; 1
    23f4:	92 07       	cpc	r25, r18
    23f6:	69 f0       	breq	.+26     	; 0x2412 <TMR_SR_getVersion+0x92>
    23f8:	61 30       	cpi	r22, 0x01	; 1
    23fa:	71 05       	cpc	r23, r1
    23fc:	81 05       	cpc	r24, r1
    23fe:	a1 e0       	ldi	r26, 0x01	; 1
    2400:	9a 07       	cpc	r25, r26
    2402:	d9 f0       	breq	.+54     	; 0x243a <TMR_SR_getVersion+0xba>
    2404:	81 e0       	ldi	r24, 0x01	; 1
    2406:	8d 83       	std	Y+5, r24	; 0x05
    2408:	41 e0       	ldi	r20, 0x01	; 1
    240a:	30 e0       	ldi	r19, 0x00	; 0
    240c:	20 e0       	ldi	r18, 0x00	; 0
    240e:	90 e0       	ldi	r25, 0x00	; 0
    2410:	17 c0       	rjmp	.+46     	; 0x2440 <TMR_SR_getVersion+0xc0>
    2412:	be 01       	movw	r22, r28
    2414:	63 59       	subi	r22, 0x93	; 147
    2416:	7c 4f       	sbci	r23, 0xFC	; 252
    2418:	ce 01       	movw	r24, r28
    241a:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <TMR_SR_cmdVersion>
    241e:	61 15       	cp	r22, r1
    2420:	71 05       	cpc	r23, r1
    2422:	81 05       	cpc	r24, r1
    2424:	91 05       	cpc	r25, r1
    2426:	11 f7       	brne	.-60     	; 0x23ec <TMR_SR_getVersion+0x6c>
    2428:	db cf       	rjmp	.-74     	; 0x23e0 <TMR_SR_getVersion+0x60>
    242a:	46 2f       	mov	r20, r22
    242c:	37 2f       	mov	r19, r23
    242e:	28 2f       	mov	r18, r24
    2430:	07 c0       	rjmp	.+14     	; 0x2440 <TMR_SR_getVersion+0xc0>
    2432:	46 2f       	mov	r20, r22
    2434:	37 2f       	mov	r19, r23
    2436:	28 2f       	mov	r18, r24
    2438:	03 c0       	rjmp	.+6      	; 0x2440 <TMR_SR_getVersion+0xc0>
    243a:	46 2f       	mov	r20, r22
    243c:	37 2f       	mov	r19, r23
    243e:	28 2f       	mov	r18, r24
    2440:	64 2f       	mov	r22, r20
    2442:	73 2f       	mov	r23, r19
    2444:	82 2f       	mov	r24, r18
    2446:	df 91       	pop	r29
    2448:	cf 91       	pop	r28
    244a:	1f 91       	pop	r17
    244c:	0f 91       	pop	r16
    244e:	08 95       	ret

00002450 <TMR_SR_connect>:
    2450:	cf 92       	push	r12
    2452:	df 92       	push	r13
    2454:	ef 92       	push	r14
    2456:	ff 92       	push	r15
    2458:	0f 93       	push	r16
    245a:	1f 93       	push	r17
    245c:	cf 93       	push	r28
    245e:	df 93       	push	r29
    2460:	ec 01       	movw	r28, r24
    2462:	8c 01       	movw	r16, r24
    2464:	00 58       	subi	r16, 0x80	; 128
    2466:	1e 4f       	sbci	r17, 0xFE	; 254
    2468:	8d 81       	ldd	r24, Y+5	; 0x05
    246a:	81 11       	cpse	r24, r1
    246c:	0c c0       	rjmp	.+24     	; 0x2486 <TMR_SR_connect+0x36>
    246e:	f8 01       	movw	r30, r16
    2470:	02 80       	ldd	r0, Z+2	; 0x02
    2472:	f3 81       	ldd	r31, Z+3	; 0x03
    2474:	e0 2d       	mov	r30, r0
    2476:	c8 01       	movw	r24, r16
    2478:	09 95       	icall
    247a:	61 15       	cp	r22, r1
    247c:	71 05       	cpc	r23, r1
    247e:	81 05       	cpc	r24, r1
    2480:	91 05       	cpc	r25, r1
    2482:	09 f0       	breq	.+2      	; 0x2486 <TMR_SR_connect+0x36>
    2484:	49 c0       	rjmp	.+146    	; 0x2518 <TMR_SR_connect+0xc8>
    2486:	ce 01       	movw	r24, r28
    2488:	7b df       	rcall	.-266    	; 0x2380 <TMR_SR_getVersion>
    248a:	6b 01       	movw	r12, r22
    248c:	7c 01       	movw	r14, r24
    248e:	61 15       	cp	r22, r1
    2490:	71 05       	cpc	r23, r1
    2492:	81 05       	cpc	r24, r1
    2494:	91 05       	cpc	r25, r1
    2496:	89 f0       	breq	.+34     	; 0x24ba <TMR_SR_connect+0x6a>
    2498:	61 30       	cpi	r22, 0x01	; 1
    249a:	71 05       	cpc	r23, r1
    249c:	81 05       	cpc	r24, r1
    249e:	91 05       	cpc	r25, r1
    24a0:	09 f4       	brne	.+2      	; 0x24a4 <TMR_SR_connect+0x54>
    24a2:	3e c0       	rjmp	.+124    	; 0x2520 <TMR_SR_connect+0xd0>
    24a4:	c0 58       	subi	r28, 0x80	; 128
    24a6:	de 4f       	sbci	r29, 0xFE	; 254
    24a8:	ea 85       	ldd	r30, Y+10	; 0x0a
    24aa:	fb 85       	ldd	r31, Y+11	; 0x0b
    24ac:	c8 01       	movw	r24, r16
    24ae:	09 95       	icall
    24b0:	4c 2d       	mov	r20, r12
    24b2:	3d 2d       	mov	r19, r13
    24b4:	2e 2d       	mov	r18, r14
    24b6:	9f 2d       	mov	r25, r15
    24b8:	3f c0       	rjmp	.+126    	; 0x2538 <TMR_SR_connect+0xe8>
    24ba:	fe 01       	movw	r30, r28
    24bc:	ef 58       	subi	r30, 0x8F	; 143
    24be:	fc 4f       	sbci	r31, 0xFC	; 252
    24c0:	80 81       	ld	r24, Z
    24c2:	98 ee       	ldi	r25, 0xE8	; 232
    24c4:	98 0f       	add	r25, r24
    24c6:	92 30       	cpi	r25, 0x02	; 2
    24c8:	20 f0       	brcs	.+8      	; 0x24d2 <TMR_SR_connect+0x82>
    24ca:	80 32       	cpi	r24, 0x20	; 32
    24cc:	11 f0       	breq	.+4      	; 0x24d2 <TMR_SR_connect+0x82>
    24ce:	80 33       	cpi	r24, 0x30	; 48
    24d0:	29 f4       	brne	.+10     	; 0x24dc <TMR_SR_connect+0x8c>
    24d2:	81 e0       	ldi	r24, 0x01	; 1
    24d4:	fe 01       	movw	r30, r28
    24d6:	e6 50       	subi	r30, 0x06	; 6
    24d8:	fa 4f       	sbci	r31, 0xFA	; 250
    24da:	80 83       	st	Z, r24
    24dc:	ce 01       	movw	r24, r28
    24de:	0e 94 35 6b 	call	0xd66a	; 0xd66a <checkForAvailableFeatures>
    24e2:	fe 01       	movw	r30, r28
    24e4:	e0 53       	subi	r30, 0x30	; 48
    24e6:	fe 4f       	sbci	r31, 0xFE	; 254
    24e8:	40 81       	ld	r20, Z
    24ea:	51 81       	ldd	r21, Z+1	; 0x01
    24ec:	62 81       	ldd	r22, Z+2	; 0x02
    24ee:	73 81       	ldd	r23, Z+3	; 0x03
    24f0:	ce 01       	movw	r24, r28
    24f2:	ae de       	rcall	.-676    	; 0x2250 <TMR_SR_boot>
    24f4:	61 15       	cp	r22, r1
    24f6:	71 05       	cpc	r23, r1
    24f8:	81 05       	cpc	r24, r1
    24fa:	91 05       	cpc	r25, r1
    24fc:	b1 f0       	breq	.+44     	; 0x252a <TMR_SR_connect+0xda>
    24fe:	63 31       	cpi	r22, 0x13	; 19
    2500:	71 05       	cpc	r23, r1
    2502:	81 05       	cpc	r24, r1
    2504:	23 e0       	ldi	r18, 0x03	; 3
    2506:	92 07       	cpc	r25, r18
    2508:	a1 f4       	brne	.+40     	; 0x2532 <TMR_SR_connect+0xe2>
    250a:	81 e0       	ldi	r24, 0x01	; 1
    250c:	8d 83       	std	Y+5, r24	; 0x05
    250e:	41 e0       	ldi	r20, 0x01	; 1
    2510:	30 e0       	ldi	r19, 0x00	; 0
    2512:	20 e0       	ldi	r18, 0x00	; 0
    2514:	90 e0       	ldi	r25, 0x00	; 0
    2516:	10 c0       	rjmp	.+32     	; 0x2538 <TMR_SR_connect+0xe8>
    2518:	46 2f       	mov	r20, r22
    251a:	37 2f       	mov	r19, r23
    251c:	28 2f       	mov	r18, r24
    251e:	0c c0       	rjmp	.+24     	; 0x2538 <TMR_SR_connect+0xe8>
    2520:	46 2f       	mov	r20, r22
    2522:	3d 2d       	mov	r19, r13
    2524:	2e 2d       	mov	r18, r14
    2526:	9f 2d       	mov	r25, r15
    2528:	07 c0       	rjmp	.+14     	; 0x2538 <TMR_SR_connect+0xe8>
    252a:	46 2f       	mov	r20, r22
    252c:	37 2f       	mov	r19, r23
    252e:	28 2f       	mov	r18, r24
    2530:	03 c0       	rjmp	.+6      	; 0x2538 <TMR_SR_connect+0xe8>
    2532:	46 2f       	mov	r20, r22
    2534:	37 2f       	mov	r19, r23
    2536:	28 2f       	mov	r18, r24
    2538:	64 2f       	mov	r22, r20
    253a:	73 2f       	mov	r23, r19
    253c:	82 2f       	mov	r24, r18
    253e:	df 91       	pop	r29
    2540:	cf 91       	pop	r28
    2542:	1f 91       	pop	r17
    2544:	0f 91       	pop	r16
    2546:	ff 90       	pop	r15
    2548:	ef 90       	pop	r14
    254a:	df 90       	pop	r13
    254c:	cf 90       	pop	r12
    254e:	08 95       	ret

00002550 <validateParams>:
    2550:	cf 92       	push	r12
    2552:	df 92       	push	r13
    2554:	ff 92       	push	r15
    2556:	0f 93       	push	r16
    2558:	1f 93       	push	r17
    255a:	cf 93       	push	r28
    255c:	df 93       	push	r29
    255e:	bc 01       	movw	r22, r24
    2560:	ec 01       	movw	r28, r24
    2562:	0e 81       	ldd	r16, Y+6	; 0x06
    2564:	1f 81       	ldd	r17, Y+7	; 0x07
    2566:	f8 01       	movw	r30, r16
    2568:	40 81       	ld	r20, Z
    256a:	51 81       	ldd	r21, Z+1	; 0x01
    256c:	91 e0       	ldi	r25, 0x01	; 1
    256e:	f1 2c       	mov	r15, r1
    2570:	5e c0       	rjmp	.+188    	; 0x262e <validateParams+0xde>
    2572:	e9 2f       	mov	r30, r25
    2574:	f0 e0       	ldi	r31, 0x00	; 0
    2576:	ee 0f       	add	r30, r30
    2578:	ff 1f       	adc	r31, r31
    257a:	e0 0f       	add	r30, r16
    257c:	f1 1f       	adc	r31, r17
    257e:	a0 81       	ld	r26, Z
    2580:	b1 81       	ldd	r27, Z+1	; 0x01
    2582:	ea 01       	movw	r28, r20
    2584:	3c 85       	ldd	r19, Y+12	; 0x0c
    2586:	1c 96       	adiw	r26, 0x0c	; 12
    2588:	8c 91       	ld	r24, X
    258a:	1c 97       	sbiw	r26, 0x0c	; 12
    258c:	38 13       	cpse	r19, r24
    258e:	54 c0       	rjmp	.+168    	; 0x2638 <validateParams+0xe8>
    2590:	ef 85       	ldd	r30, Y+15	; 0x0f
    2592:	f8 89       	ldd	r31, Y+16	; 0x10
    2594:	30 97       	sbiw	r30, 0x00	; 0
    2596:	21 f5       	brne	.+72     	; 0x25e0 <validateParams+0x90>
    2598:	1f 96       	adiw	r26, 0x0f	; 15
    259a:	2d 91       	ld	r18, X+
    259c:	3c 91       	ld	r19, X
    259e:	50 97       	sbiw	r26, 0x10	; 16
    25a0:	23 2b       	or	r18, r19
    25a2:	f1 f4       	brne	.+60     	; 0x25e0 <validateParams+0x90>
    25a4:	cd 84       	ldd	r12, Y+13	; 0x0d
    25a6:	de 84       	ldd	r13, Y+14	; 0x0e
    25a8:	c1 14       	cp	r12, r1
    25aa:	d1 04       	cpc	r13, r1
    25ac:	41 f4       	brne	.+16     	; 0x25be <validateParams+0x6e>
    25ae:	1d 96       	adiw	r26, 0x0d	; 13
    25b0:	2d 91       	ld	r18, X+
    25b2:	3c 91       	ld	r19, X
    25b4:	1e 97       	sbiw	r26, 0x0e	; 14
    25b6:	23 2b       	or	r18, r19
    25b8:	11 f4       	brne	.+4      	; 0x25be <validateParams+0x6e>
    25ba:	f3 94       	inc	r15
    25bc:	11 c0       	rjmp	.+34     	; 0x25e0 <validateParams+0x90>
    25be:	c1 14       	cp	r12, r1
    25c0:	d1 04       	cpc	r13, r1
    25c2:	71 f0       	breq	.+28     	; 0x25e0 <validateParams+0x90>
    25c4:	1d 96       	adiw	r26, 0x0d	; 13
    25c6:	2d 91       	ld	r18, X+
    25c8:	3c 91       	ld	r19, X
    25ca:	1e 97       	sbiw	r26, 0x0e	; 14
    25cc:	21 15       	cp	r18, r1
    25ce:	31 05       	cpc	r19, r1
    25d0:	39 f0       	breq	.+14     	; 0x25e0 <validateParams+0x90>
    25d2:	e6 01       	movw	r28, r12
    25d4:	d8 80       	ld	r13, Y
    25d6:	e9 01       	movw	r28, r18
    25d8:	88 81       	ld	r24, Y
    25da:	d8 12       	cpse	r13, r24
    25dc:	01 c0       	rjmp	.+2      	; 0x25e0 <validateParams+0x90>
    25de:	f3 94       	inc	r15
    25e0:	30 97       	sbiw	r30, 0x00	; 0
    25e2:	21 f1       	breq	.+72     	; 0x262c <validateParams+0xdc>
    25e4:	1f 96       	adiw	r26, 0x0f	; 15
    25e6:	cd 91       	ld	r28, X+
    25e8:	dc 91       	ld	r29, X
    25ea:	50 97       	sbiw	r26, 0x10	; 16
    25ec:	20 97       	sbiw	r28, 0x00	; 0
    25ee:	f1 f0       	breq	.+60     	; 0x262c <validateParams+0xdc>
    25f0:	20 81       	ld	r18, Z
    25f2:	88 81       	ld	r24, Y
    25f4:	28 13       	cpse	r18, r24
    25f6:	1a c0       	rjmp	.+52     	; 0x262c <validateParams+0xdc>
    25f8:	ea 01       	movw	r28, r20
    25fa:	ed 85       	ldd	r30, Y+13	; 0x0d
    25fc:	fe 85       	ldd	r31, Y+14	; 0x0e
    25fe:	30 97       	sbiw	r30, 0x00	; 0
    2600:	41 f4       	brne	.+16     	; 0x2612 <validateParams+0xc2>
    2602:	1d 96       	adiw	r26, 0x0d	; 13
    2604:	2d 91       	ld	r18, X+
    2606:	3c 91       	ld	r19, X
    2608:	1e 97       	sbiw	r26, 0x0e	; 14
    260a:	23 2b       	or	r18, r19
    260c:	11 f4       	brne	.+4      	; 0x2612 <validateParams+0xc2>
    260e:	f3 94       	inc	r15
    2610:	0d c0       	rjmp	.+26     	; 0x262c <validateParams+0xdc>
    2612:	30 97       	sbiw	r30, 0x00	; 0
    2614:	59 f0       	breq	.+22     	; 0x262c <validateParams+0xdc>
    2616:	1d 96       	adiw	r26, 0x0d	; 13
    2618:	0d 90       	ld	r0, X+
    261a:	bc 91       	ld	r27, X
    261c:	a0 2d       	mov	r26, r0
    261e:	10 97       	sbiw	r26, 0x00	; 0
    2620:	29 f0       	breq	.+10     	; 0x262c <validateParams+0xdc>
    2622:	20 81       	ld	r18, Z
    2624:	8c 91       	ld	r24, X
    2626:	28 13       	cpse	r18, r24
    2628:	01 c0       	rjmp	.+2      	; 0x262c <validateParams+0xdc>
    262a:	f3 94       	inc	r15
    262c:	9f 5f       	subi	r25, 0xFF	; 255
    262e:	fb 01       	movw	r30, r22
    2630:	24 85       	ldd	r18, Z+12	; 0x0c
    2632:	92 17       	cp	r25, r18
    2634:	08 f4       	brcc	.+2      	; 0x2638 <validateParams+0xe8>
    2636:	9d cf       	rjmp	.-198    	; 0x2572 <validateParams+0x22>
    2638:	4f 2d       	mov	r20, r15
    263a:	50 e0       	ldi	r21, 0x00	; 0
    263c:	82 2f       	mov	r24, r18
    263e:	90 e0       	ldi	r25, 0x00	; 0
    2640:	01 97       	sbiw	r24, 0x01	; 1
    2642:	48 17       	cp	r20, r24
    2644:	59 07       	cpc	r21, r25
    2646:	11 f0       	breq	.+4      	; 0x264c <validateParams+0xfc>
    2648:	80 e0       	ldi	r24, 0x00	; 0
    264a:	01 c0       	rjmp	.+2      	; 0x264e <validateParams+0xfe>
    264c:	81 e0       	ldi	r24, 0x01	; 1
    264e:	df 91       	pop	r29
    2650:	cf 91       	pop	r28
    2652:	1f 91       	pop	r17
    2654:	0f 91       	pop	r16
    2656:	ff 90       	pop	r15
    2658:	df 90       	pop	r13
    265a:	cf 90       	pop	r12
    265c:	08 95       	ret

0000265e <setAntennaReadTimeHelper>:
    265e:	2f 92       	push	r2
    2660:	3f 92       	push	r3
    2662:	4f 92       	push	r4
    2664:	5f 92       	push	r5
    2666:	6f 92       	push	r6
    2668:	7f 92       	push	r7
    266a:	8f 92       	push	r8
    266c:	9f 92       	push	r9
    266e:	af 92       	push	r10
    2670:	bf 92       	push	r11
    2672:	cf 92       	push	r12
    2674:	df 92       	push	r13
    2676:	ef 92       	push	r14
    2678:	ff 92       	push	r15
    267a:	0f 93       	push	r16
    267c:	1f 93       	push	r17
    267e:	cf 93       	push	r28
    2680:	df 93       	push	r29
    2682:	cd b7       	in	r28, 0x3d	; 61
    2684:	de b7       	in	r29, 0x3e	; 62
    2686:	60 97       	sbiw	r28, 0x10	; 16
    2688:	0f b6       	in	r0, 0x3f	; 63
    268a:	f8 94       	cli
    268c:	de bf       	out	0x3e, r29	; 62
    268e:	0f be       	out	0x3f, r0	; 63
    2690:	cd bf       	out	0x3d, r28	; 61
    2692:	4c 01       	movw	r8, r24
    2694:	1b 01       	movw	r2, r22
    2696:	5e 83       	std	Y+6, r21	; 0x06
    2698:	4d 83       	std	Y+5, r20	; 0x05
    269a:	0f 83       	std	Y+7, r16	; 0x07
    269c:	18 87       	std	Y+8, r17	; 0x08
    269e:	29 87       	std	Y+9, r18	; 0x09
    26a0:	3a 87       	std	Y+10, r19	; 0x0a
    26a2:	cb 86       	std	Y+11, r12	; 0x0b
    26a4:	dc 86       	std	Y+12, r13	; 0x0c
    26a6:	ed 86       	std	Y+13, r14	; 0x0d
    26a8:	fe 86       	std	Y+14, r15	; 0x0e
    26aa:	fc 01       	movw	r30, r24
    26ac:	ec 52       	subi	r30, 0x2C	; 44
    26ae:	fe 4f       	sbci	r31, 0xFE	; 254
    26b0:	80 81       	ld	r24, Z
    26b2:	91 81       	ldd	r25, Z+1	; 0x01
    26b4:	98 8b       	std	Y+16, r25	; 0x10
    26b6:	8f 87       	std	Y+15, r24	; 0x0f
    26b8:	db 01       	movw	r26, r22
    26ba:	8c 91       	ld	r24, X
    26bc:	81 30       	cpi	r24, 0x01	; 1
    26be:	79 f0       	breq	.+30     	; 0x26de <setAntennaReadTimeHelper+0x80>
    26c0:	82 30       	cpi	r24, 0x02	; 2
    26c2:	09 f4       	brne	.+2      	; 0x26c6 <setAntennaReadTimeHelper+0x68>
    26c4:	34 c1       	rjmp	.+616    	; 0x292e <setAntennaReadTimeHelper+0x2d0>
    26c6:	41 c1       	rjmp	.+642    	; 0x294a <setAntennaReadTimeHelper+0x2ec>
    26c8:	f1 01       	movw	r30, r2
    26ca:	26 81       	ldd	r18, Z+6	; 0x06
    26cc:	37 81       	ldd	r19, Z+7	; 0x07
    26ce:	f9 01       	movw	r30, r18
    26d0:	e8 0f       	add	r30, r24
    26d2:	f9 1f       	adc	r31, r25
    26d4:	80 81       	ld	r24, Z
    26d6:	81 11       	cpse	r24, r1
    26d8:	5f 5f       	subi	r21, 0xFF	; 255
    26da:	4f 5f       	subi	r20, 0xFF	; 255
    26dc:	02 c0       	rjmp	.+4      	; 0x26e2 <setAntennaReadTimeHelper+0x84>
    26de:	40 e0       	ldi	r20, 0x00	; 0
    26e0:	50 e0       	ldi	r21, 0x00	; 0
    26e2:	84 2f       	mov	r24, r20
    26e4:	90 e0       	ldi	r25, 0x00	; 0
    26e6:	d1 01       	movw	r26, r2
    26e8:	1a 96       	adiw	r26, 0x0a	; 10
    26ea:	2d 91       	ld	r18, X+
    26ec:	3c 91       	ld	r19, X
    26ee:	1b 97       	sbiw	r26, 0x0b	; 11
    26f0:	82 17       	cp	r24, r18
    26f2:	93 07       	cpc	r25, r19
    26f4:	48 f3       	brcs	.-46     	; 0x26c8 <setAntennaReadTimeHelper+0x6a>
    26f6:	85 2f       	mov	r24, r21
    26f8:	90 e0       	ldi	r25, 0x00	; 0
    26fa:	28 17       	cp	r18, r24
    26fc:	39 07       	cpc	r19, r25
    26fe:	09 f0       	breq	.+2      	; 0x2702 <setAntennaReadTimeHelper+0xa4>
    2700:	2e c1       	rjmp	.+604    	; 0x295e <setAntennaReadTimeHelper+0x300>
    2702:	55 23       	and	r21, r21
    2704:	d9 f0       	breq	.+54     	; 0x273c <setAntennaReadTimeHelper+0xde>
    2706:	45 2e       	mov	r4, r21
    2708:	51 2c       	mov	r5, r1
    270a:	61 2c       	mov	r6, r1
    270c:	71 2c       	mov	r7, r1
    270e:	6f 81       	ldd	r22, Y+7	; 0x07
    2710:	78 85       	ldd	r23, Y+8	; 0x08
    2712:	89 85       	ldd	r24, Y+9	; 0x09
    2714:	9a 85       	ldd	r25, Y+10	; 0x0a
    2716:	a3 01       	movw	r20, r6
    2718:	92 01       	movw	r18, r4
    271a:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    271e:	69 01       	movw	r12, r18
    2720:	7a 01       	movw	r14, r20
    2722:	6b 85       	ldd	r22, Y+11	; 0x0b
    2724:	7c 85       	ldd	r23, Y+12	; 0x0c
    2726:	8d 85       	ldd	r24, Y+13	; 0x0d
    2728:	9e 85       	ldd	r25, Y+14	; 0x0e
    272a:	a3 01       	movw	r20, r6
    272c:	92 01       	movw	r18, r4
    272e:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    2732:	29 83       	std	Y+1, r18	; 0x01
    2734:	3a 83       	std	Y+2, r19	; 0x02
    2736:	4b 83       	std	Y+3, r20	; 0x03
    2738:	5c 83       	std	Y+4, r21	; 0x04
    273a:	07 c0       	rjmp	.+14     	; 0x274a <setAntennaReadTimeHelper+0xec>
    273c:	19 82       	std	Y+1, r1	; 0x01
    273e:	1a 82       	std	Y+2, r1	; 0x02
    2740:	1b 82       	std	Y+3, r1	; 0x03
    2742:	1c 82       	std	Y+4, r1	; 0x04
    2744:	c1 2c       	mov	r12, r1
    2746:	d1 2c       	mov	r13, r1
    2748:	76 01       	movw	r14, r12
    274a:	50 e0       	ldi	r21, 0x00	; 0
    274c:	15 2f       	mov	r17, r21
    274e:	78 c0       	rjmp	.+240    	; 0x2840 <setAntennaReadTimeHelper+0x1e2>
    2750:	d1 01       	movw	r26, r2
    2752:	16 96       	adiw	r26, 0x06	; 6
    2754:	ed 91       	ld	r30, X+
    2756:	fc 91       	ld	r31, X
    2758:	17 97       	sbiw	r26, 0x07	; 7
    275a:	e6 0f       	add	r30, r22
    275c:	f7 1f       	adc	r31, r23
    275e:	30 81       	ld	r19, Z
    2760:	ef 85       	ldd	r30, Y+15	; 0x0f
    2762:	f8 89       	ldd	r31, Y+16	; 0x10
    2764:	40 81       	ld	r20, Z
    2766:	51 81       	ldd	r21, Z+1	; 0x01
    2768:	82 2f       	mov	r24, r18
    276a:	90 e0       	ldi	r25, 0x00	; 0
    276c:	fc 01       	movw	r30, r24
    276e:	ee 0f       	add	r30, r30
    2770:	ff 1f       	adc	r31, r31
    2772:	8e 0f       	add	r24, r30
    2774:	9f 1f       	adc	r25, r31
    2776:	fa 01       	movw	r30, r20
    2778:	e8 0f       	add	r30, r24
    277a:	f9 1f       	adc	r31, r25
    277c:	80 81       	ld	r24, Z
    277e:	38 13       	cpse	r19, r24
    2780:	54 c0       	rjmp	.+168    	; 0x282a <setAntennaReadTimeHelper+0x1cc>
    2782:	ad 81       	ldd	r26, Y+5	; 0x05
    2784:	be 81       	ldd	r27, Y+6	; 0x06
    2786:	4d 91       	ld	r20, X+
    2788:	5c 91       	ld	r21, X
    278a:	30 91 d2 0b 	lds	r19, 0x0BD2	; 0x800bd2 <idx.7338>
    278e:	83 2f       	mov	r24, r19
    2790:	90 e0       	ldi	r25, 0x00	; 0
    2792:	5c 01       	movw	r10, r24
    2794:	aa 0c       	add	r10, r10
    2796:	bb 1c       	adc	r11, r11
    2798:	aa 0c       	add	r10, r10
    279a:	bb 1c       	adc	r11, r11
    279c:	8a 0d       	add	r24, r10
    279e:	9b 1d       	adc	r25, r11
    27a0:	48 0f       	add	r20, r24
    27a2:	59 1f       	adc	r21, r25
    27a4:	e1 81       	ldd	r30, Z+1	; 0x01
    27a6:	da 01       	movw	r26, r20
    27a8:	ec 93       	st	X, r30
    27aa:	ed 81       	ldd	r30, Y+5	; 0x05
    27ac:	fe 81       	ldd	r31, Y+6	; 0x06
    27ae:	a0 80       	ld	r10, Z
    27b0:	b1 80       	ldd	r11, Z+1	; 0x01
    27b2:	3f 5f       	subi	r19, 0xFF	; 255
    27b4:	30 93 d2 0b 	sts	0x0BD2, r19	; 0x800bd2 <idx.7338>
    27b8:	f5 01       	movw	r30, r10
    27ba:	e8 0f       	add	r30, r24
    27bc:	f9 1f       	adc	r31, r25
    27be:	c1 82       	std	Z+1, r12	; 0x01
    27c0:	d2 82       	std	Z+2, r13	; 0x02
    27c2:	e3 82       	std	Z+3, r14	; 0x03
    27c4:	f4 82       	std	Z+4, r15	; 0x04
    27c6:	f4 01       	movw	r30, r8
    27c8:	ea 58       	subi	r30, 0x8A	; 138
    27ca:	ff 4f       	sbci	r31, 0xFF	; 255
    27cc:	80 81       	ld	r24, Z
    27ce:	88 23       	and	r24, r24
    27d0:	61 f1       	breq	.+88     	; 0x282a <setAntennaReadTimeHelper+0x1cc>
    27d2:	d4 01       	movw	r26, r8
    27d4:	1c 96       	adiw	r26, 0x0c	; 12
    27d6:	4d 90       	ld	r4, X+
    27d8:	5d 90       	ld	r5, X+
    27da:	6d 90       	ld	r6, X+
    27dc:	7c 90       	ld	r7, X
    27de:	1f 97       	sbiw	r26, 0x0f	; 15
    27e0:	45 28       	or	r4, r5
    27e2:	46 28       	or	r4, r6
    27e4:	47 28       	or	r4, r7
    27e6:	09 f1       	breq	.+66     	; 0x282a <setAntennaReadTimeHelper+0x1cc>
    27e8:	ad 81       	ldd	r26, Y+5	; 0x05
    27ea:	be 81       	ldd	r27, Y+6	; 0x06
    27ec:	ed 91       	ld	r30, X+
    27ee:	fc 91       	ld	r31, X
    27f0:	11 97       	sbiw	r26, 0x01	; 1
    27f2:	83 2f       	mov	r24, r19
    27f4:	90 e0       	ldi	r25, 0x00	; 0
    27f6:	ac 01       	movw	r20, r24
    27f8:	44 0f       	add	r20, r20
    27fa:	55 1f       	adc	r21, r21
    27fc:	44 0f       	add	r20, r20
    27fe:	55 1f       	adc	r21, r21
    2800:	84 0f       	add	r24, r20
    2802:	95 1f       	adc	r25, r21
    2804:	e8 0f       	add	r30, r24
    2806:	f9 1f       	adc	r31, r25
    2808:	10 82       	st	Z, r1
    280a:	4d 91       	ld	r20, X+
    280c:	5c 91       	ld	r21, X
    280e:	3f 5f       	subi	r19, 0xFF	; 255
    2810:	30 93 d2 0b 	sts	0x0BD2, r19	; 0x800bd2 <idx.7338>
    2814:	fa 01       	movw	r30, r20
    2816:	e8 0f       	add	r30, r24
    2818:	f9 1f       	adc	r31, r25
    281a:	89 81       	ldd	r24, Y+1	; 0x01
    281c:	9a 81       	ldd	r25, Y+2	; 0x02
    281e:	ab 81       	ldd	r26, Y+3	; 0x03
    2820:	bc 81       	ldd	r27, Y+4	; 0x04
    2822:	81 83       	std	Z+1, r24	; 0x01
    2824:	92 83       	std	Z+2, r25	; 0x02
    2826:	a3 83       	std	Z+3, r26	; 0x03
    2828:	b4 83       	std	Z+4, r27	; 0x04
    282a:	2f 5f       	subi	r18, 0xFF	; 255
    282c:	01 c0       	rjmp	.+2      	; 0x2830 <setAntennaReadTimeHelper+0x1d2>
    282e:	20 e0       	ldi	r18, 0x00	; 0
    2830:	af 85       	ldd	r26, Y+15	; 0x0f
    2832:	b8 89       	ldd	r27, Y+16	; 0x10
    2834:	13 96       	adiw	r26, 0x03	; 3
    2836:	8c 91       	ld	r24, X
    2838:	28 17       	cp	r18, r24
    283a:	08 f4       	brcc	.+2      	; 0x283e <setAntennaReadTimeHelper+0x1e0>
    283c:	89 cf       	rjmp	.-238    	; 0x2750 <setAntennaReadTimeHelper+0xf2>
    283e:	1f 5f       	subi	r17, 0xFF	; 255
    2840:	61 2f       	mov	r22, r17
    2842:	70 e0       	ldi	r23, 0x00	; 0
    2844:	f1 01       	movw	r30, r2
    2846:	82 85       	ldd	r24, Z+10	; 0x0a
    2848:	93 85       	ldd	r25, Z+11	; 0x0b
    284a:	68 17       	cp	r22, r24
    284c:	79 07       	cpc	r23, r25
    284e:	78 f3       	brcs	.-34     	; 0x282e <setAntennaReadTimeHelper+0x1d0>
    2850:	40 e0       	ldi	r20, 0x00	; 0
    2852:	30 e0       	ldi	r19, 0x00	; 0
    2854:	20 e0       	ldi	r18, 0x00	; 0
    2856:	90 e0       	ldi	r25, 0x00	; 0
    2858:	7c c0       	rjmp	.+248    	; 0x2952 <setAntennaReadTimeHelper+0x2f4>
    285a:	d1 01       	movw	r26, r2
    285c:	16 96       	adiw	r26, 0x06	; 6
    285e:	2d 91       	ld	r18, X+
    2860:	3c 91       	ld	r19, X
    2862:	17 97       	sbiw	r26, 0x07	; 7
    2864:	bf 85       	ldd	r27, Y+15	; 0x0f
    2866:	eb 2f       	mov	r30, r27
    2868:	f0 e0       	ldi	r31, 0x00	; 0
    286a:	ee 0f       	add	r30, r30
    286c:	ff 1f       	adc	r31, r31
    286e:	e2 0f       	add	r30, r18
    2870:	f3 1f       	adc	r31, r19
    2872:	a0 80       	ld	r10, Z
    2874:	b1 80       	ldd	r11, Z+1	; 0x01
    2876:	f1 01       	movw	r30, r2
    2878:	c1 80       	ldd	r12, Z+1	; 0x01
    287a:	d2 80       	ldd	r13, Z+2	; 0x02
    287c:	e3 80       	ldd	r14, Z+3	; 0x03
    287e:	f4 80       	ldd	r15, Z+4	; 0x04
    2880:	c1 14       	cp	r12, r1
    2882:	d1 04       	cpc	r13, r1
    2884:	e1 04       	cpc	r14, r1
    2886:	f1 04       	cpc	r15, r1
    2888:	31 f1       	breq	.+76     	; 0x28d6 <setAntennaReadTimeHelper+0x278>
    288a:	d5 01       	movw	r26, r10
    288c:	11 96       	adiw	r26, 0x01	; 1
    288e:	4d 90       	ld	r4, X+
    2890:	5d 90       	ld	r5, X+
    2892:	6d 90       	ld	r6, X+
    2894:	7c 90       	ld	r7, X
    2896:	14 97       	sbiw	r26, 0x04	; 4
    2898:	2f 81       	ldd	r18, Y+7	; 0x07
    289a:	38 85       	ldd	r19, Y+8	; 0x08
    289c:	49 85       	ldd	r20, Y+9	; 0x09
    289e:	5a 85       	ldd	r21, Y+10	; 0x0a
    28a0:	c3 01       	movw	r24, r6
    28a2:	b2 01       	movw	r22, r4
    28a4:	0e 94 78 74 	call	0xe8f0	; 0xe8f0 <__mulsi3>
    28a8:	a7 01       	movw	r20, r14
    28aa:	96 01       	movw	r18, r12
    28ac:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    28b0:	29 83       	std	Y+1, r18	; 0x01
    28b2:	3a 83       	std	Y+2, r19	; 0x02
    28b4:	4b 83       	std	Y+3, r20	; 0x03
    28b6:	5c 83       	std	Y+4, r21	; 0x04
    28b8:	2b 85       	ldd	r18, Y+11	; 0x0b
    28ba:	3c 85       	ldd	r19, Y+12	; 0x0c
    28bc:	4d 85       	ldd	r20, Y+13	; 0x0d
    28be:	5e 85       	ldd	r21, Y+14	; 0x0e
    28c0:	c3 01       	movw	r24, r6
    28c2:	b2 01       	movw	r22, r4
    28c4:	0e 94 78 74 	call	0xe8f0	; 0xe8f0 <__mulsi3>
    28c8:	a7 01       	movw	r20, r14
    28ca:	96 01       	movw	r18, r12
    28cc:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    28d0:	69 01       	movw	r12, r18
    28d2:	7a 01       	movw	r14, r20
    28d4:	1a c0       	rjmp	.+52     	; 0x290a <setAntennaReadTimeHelper+0x2ac>
    28d6:	c8 2e       	mov	r12, r24
    28d8:	d1 2c       	mov	r13, r1
    28da:	e1 2c       	mov	r14, r1
    28dc:	f1 2c       	mov	r15, r1
    28de:	6f 81       	ldd	r22, Y+7	; 0x07
    28e0:	78 85       	ldd	r23, Y+8	; 0x08
    28e2:	89 85       	ldd	r24, Y+9	; 0x09
    28e4:	9a 85       	ldd	r25, Y+10	; 0x0a
    28e6:	a7 01       	movw	r20, r14
    28e8:	96 01       	movw	r18, r12
    28ea:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    28ee:	29 83       	std	Y+1, r18	; 0x01
    28f0:	3a 83       	std	Y+2, r19	; 0x02
    28f2:	4b 83       	std	Y+3, r20	; 0x03
    28f4:	5c 83       	std	Y+4, r21	; 0x04
    28f6:	6b 85       	ldd	r22, Y+11	; 0x0b
    28f8:	7c 85       	ldd	r23, Y+12	; 0x0c
    28fa:	8d 85       	ldd	r24, Y+13	; 0x0d
    28fc:	9e 85       	ldd	r25, Y+14	; 0x0e
    28fe:	a7 01       	movw	r20, r14
    2900:	96 01       	movw	r18, r12
    2902:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    2906:	69 01       	movw	r12, r18
    2908:	7a 01       	movw	r14, r20
    290a:	09 81       	ldd	r16, Y+1	; 0x01
    290c:	1a 81       	ldd	r17, Y+2	; 0x02
    290e:	2b 81       	ldd	r18, Y+3	; 0x03
    2910:	3c 81       	ldd	r19, Y+4	; 0x04
    2912:	4d 81       	ldd	r20, Y+5	; 0x05
    2914:	5e 81       	ldd	r21, Y+6	; 0x06
    2916:	b5 01       	movw	r22, r10
    2918:	c4 01       	movw	r24, r8
    291a:	a1 de       	rcall	.-702    	; 0x265e <setAntennaReadTimeHelper>
    291c:	61 15       	cp	r22, r1
    291e:	71 05       	cpc	r23, r1
    2920:	81 05       	cpc	r24, r1
    2922:	91 05       	cpc	r25, r1
    2924:	09 f5       	brne	.+66     	; 0x2968 <setAntennaReadTimeHelper+0x30a>
    2926:	bf 85       	ldd	r27, Y+15	; 0x0f
    2928:	bf 5f       	subi	r27, 0xFF	; 255
    292a:	bf 87       	std	Y+15, r27	; 0x0f
    292c:	02 c0       	rjmp	.+4      	; 0x2932 <setAntennaReadTimeHelper+0x2d4>
    292e:	e0 e0       	ldi	r30, 0x00	; 0
    2930:	ef 87       	std	Y+15, r30	; 0x0f
    2932:	d1 01       	movw	r26, r2
    2934:	1c 96       	adiw	r26, 0x0c	; 12
    2936:	8c 91       	ld	r24, X
    2938:	bf 85       	ldd	r27, Y+15	; 0x0f
    293a:	b8 17       	cp	r27, r24
    293c:	08 f4       	brcc	.+2      	; 0x2940 <setAntennaReadTimeHelper+0x2e2>
    293e:	8d cf       	rjmp	.-230    	; 0x285a <setAntennaReadTimeHelper+0x1fc>
    2940:	40 e0       	ldi	r20, 0x00	; 0
    2942:	30 e0       	ldi	r19, 0x00	; 0
    2944:	20 e0       	ldi	r18, 0x00	; 0
    2946:	90 e0       	ldi	r25, 0x00	; 0
    2948:	04 c0       	rjmp	.+8      	; 0x2952 <setAntennaReadTimeHelper+0x2f4>
    294a:	41 e0       	ldi	r20, 0x01	; 1
    294c:	30 e0       	ldi	r19, 0x00	; 0
    294e:	20 e0       	ldi	r18, 0x00	; 0
    2950:	93 e0       	ldi	r25, 0x03	; 3
    2952:	80 91 d2 0b 	lds	r24, 0x0BD2	; 0x800bd2 <idx.7338>
    2956:	ed 81       	ldd	r30, Y+5	; 0x05
    2958:	fe 81       	ldd	r31, Y+6	; 0x06
    295a:	83 83       	std	Z+3, r24	; 0x03
    295c:	08 c0       	rjmp	.+16     	; 0x296e <setAntennaReadTimeHelper+0x310>
    295e:	47 e0       	ldi	r20, 0x07	; 7
    2960:	35 e0       	ldi	r19, 0x05	; 5
    2962:	20 e0       	ldi	r18, 0x00	; 0
    2964:	92 e0       	ldi	r25, 0x02	; 2
    2966:	03 c0       	rjmp	.+6      	; 0x296e <setAntennaReadTimeHelper+0x310>
    2968:	46 2f       	mov	r20, r22
    296a:	37 2f       	mov	r19, r23
    296c:	28 2f       	mov	r18, r24
    296e:	64 2f       	mov	r22, r20
    2970:	73 2f       	mov	r23, r19
    2972:	82 2f       	mov	r24, r18
    2974:	60 96       	adiw	r28, 0x10	; 16
    2976:	0f b6       	in	r0, 0x3f	; 63
    2978:	f8 94       	cli
    297a:	de bf       	out	0x3e, r29	; 62
    297c:	0f be       	out	0x3f, r0	; 63
    297e:	cd bf       	out	0x3d, r28	; 61
    2980:	df 91       	pop	r29
    2982:	cf 91       	pop	r28
    2984:	1f 91       	pop	r17
    2986:	0f 91       	pop	r16
    2988:	ff 90       	pop	r15
    298a:	ef 90       	pop	r14
    298c:	df 90       	pop	r13
    298e:	cf 90       	pop	r12
    2990:	bf 90       	pop	r11
    2992:	af 90       	pop	r10
    2994:	9f 90       	pop	r9
    2996:	8f 90       	pop	r8
    2998:	7f 90       	pop	r7
    299a:	6f 90       	pop	r6
    299c:	5f 90       	pop	r5
    299e:	4f 90       	pop	r4
    29a0:	3f 90       	pop	r3
    29a2:	2f 90       	pop	r2
    29a4:	08 95       	ret

000029a6 <setAntennaReadTimeList>:
    29a6:	af 92       	push	r10
    29a8:	bf 92       	push	r11
    29aa:	cf 92       	push	r12
    29ac:	df 92       	push	r13
    29ae:	ef 92       	push	r14
    29b0:	ff 92       	push	r15
    29b2:	0f 93       	push	r16
    29b4:	1f 93       	push	r17
    29b6:	cf 93       	push	r28
    29b8:	df 93       	push	r29
    29ba:	cd b7       	in	r28, 0x3d	; 61
    29bc:	de b7       	in	r29, 0x3e	; 62
    29be:	c4 54       	subi	r28, 0x44	; 68
    29c0:	d1 40       	sbci	r29, 0x01	; 1
    29c2:	0f b6       	in	r0, 0x3f	; 63
    29c4:	f8 94       	cli
    29c6:	de bf       	out	0x3e, r29	; 62
    29c8:	0f be       	out	0x3f, r0	; 63
    29ca:	cd bf       	out	0x3d, r28	; 61
    29cc:	5c 01       	movw	r10, r24
    29ce:	fc 01       	movw	r30, r24
    29d0:	ea 58       	subi	r30, 0x8A	; 138
    29d2:	ff 4f       	sbci	r31, 0xFF	; 255
    29d4:	80 81       	ld	r24, Z
    29d6:	88 23       	and	r24, r24
    29d8:	51 f0       	breq	.+20     	; 0x29ee <setAntennaReadTimeList+0x48>
    29da:	f5 01       	movw	r30, r10
    29dc:	00 85       	ldd	r16, Z+8	; 0x08
    29de:	11 85       	ldd	r17, Z+9	; 0x09
    29e0:	22 85       	ldd	r18, Z+10	; 0x0a
    29e2:	33 85       	ldd	r19, Z+11	; 0x0b
    29e4:	c4 84       	ldd	r12, Z+12	; 0x0c
    29e6:	d5 84       	ldd	r13, Z+13	; 0x0d
    29e8:	e6 84       	ldd	r14, Z+14	; 0x0e
    29ea:	f7 84       	ldd	r15, Z+15	; 0x0f
    29ec:	08 c0       	rjmp	.+16     	; 0x29fe <setAntennaReadTimeList+0x58>
    29ee:	f5 01       	movw	r30, r10
    29f0:	00 89       	ldd	r16, Z+16	; 0x10
    29f2:	11 89       	ldd	r17, Z+17	; 0x11
    29f4:	22 89       	ldd	r18, Z+18	; 0x12
    29f6:	33 89       	ldd	r19, Z+19	; 0x13
    29f8:	c1 2c       	mov	r12, r1
    29fa:	d1 2c       	mov	r13, r1
    29fc:	76 01       	movw	r14, r12
    29fe:	ce 01       	movw	r24, r28
    2a00:	05 96       	adiw	r24, 0x05	; 5
    2a02:	9a 83       	std	Y+2, r25	; 0x02
    2a04:	89 83       	std	Y+1, r24	; 0x01
    2a06:	80 e4       	ldi	r24, 0x40	; 64
    2a08:	8b 83       	std	Y+3, r24	; 0x03
    2a0a:	f5 01       	movw	r30, r10
    2a0c:	62 a9       	ldd	r22, Z+50	; 0x32
    2a0e:	73 a9       	ldd	r23, Z+51	; 0x33
    2a10:	ae 01       	movw	r20, r28
    2a12:	4f 5f       	subi	r20, 0xFF	; 255
    2a14:	5f 4f       	sbci	r21, 0xFF	; 255
    2a16:	c5 01       	movw	r24, r10
    2a18:	22 de       	rcall	.-956    	; 0x265e <setAntennaReadTimeHelper>
    2a1a:	61 15       	cp	r22, r1
    2a1c:	71 05       	cpc	r23, r1
    2a1e:	81 05       	cpc	r24, r1
    2a20:	91 05       	cpc	r25, r1
    2a22:	51 f4       	brne	.+20     	; 0x2a38 <setAntennaReadTimeList+0x92>
    2a24:	be 01       	movw	r22, r28
    2a26:	6f 5f       	subi	r22, 0xFF	; 255
    2a28:	7f 4f       	sbci	r23, 0xFF	; 255
    2a2a:	c5 01       	movw	r24, r10
    2a2c:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <TMR_SR_cmdSetPerAntennaTime>
    2a30:	46 2f       	mov	r20, r22
    2a32:	37 2f       	mov	r19, r23
    2a34:	28 2f       	mov	r18, r24
    2a36:	03 c0       	rjmp	.+6      	; 0x2a3e <setAntennaReadTimeList+0x98>
    2a38:	46 2f       	mov	r20, r22
    2a3a:	37 2f       	mov	r19, r23
    2a3c:	28 2f       	mov	r18, r24
    2a3e:	64 2f       	mov	r22, r20
    2a40:	73 2f       	mov	r23, r19
    2a42:	82 2f       	mov	r24, r18
    2a44:	cc 5b       	subi	r28, 0xBC	; 188
    2a46:	de 4f       	sbci	r29, 0xFE	; 254
    2a48:	0f b6       	in	r0, 0x3f	; 63
    2a4a:	f8 94       	cli
    2a4c:	de bf       	out	0x3e, r29	; 62
    2a4e:	0f be       	out	0x3f, r0	; 63
    2a50:	cd bf       	out	0x3d, r28	; 61
    2a52:	df 91       	pop	r29
    2a54:	cf 91       	pop	r28
    2a56:	1f 91       	pop	r17
    2a58:	0f 91       	pop	r16
    2a5a:	ff 90       	pop	r15
    2a5c:	ef 90       	pop	r14
    2a5e:	df 90       	pop	r13
    2a60:	cf 90       	pop	r12
    2a62:	bf 90       	pop	r11
    2a64:	af 90       	pop	r10
    2a66:	08 95       	ret

00002a68 <compareAntennas>:
    2a68:	cf 92       	push	r12
    2a6a:	df 92       	push	r13
    2a6c:	ff 92       	push	r15
    2a6e:	0f 93       	push	r16
    2a70:	1f 93       	push	r17
    2a72:	cf 93       	push	r28
    2a74:	df 93       	push	r29
    2a76:	ec 01       	movw	r28, r24
    2a78:	90 e0       	ldi	r25, 0x00	; 0
    2a7a:	00 e0       	ldi	r16, 0x00	; 0
    2a7c:	10 e0       	ldi	r17, 0x00	; 0
    2a7e:	44 c0       	rjmp	.+136    	; 0x2b08 <compareAntennas+0xa0>
    2a80:	28 81       	ld	r18, Y
    2a82:	39 81       	ldd	r19, Y+1	; 0x01
    2a84:	f9 01       	movw	r30, r18
    2a86:	a0 81       	ld	r26, Z
    2a88:	b1 81       	ldd	r27, Z+1	; 0x01
    2a8a:	e9 2f       	mov	r30, r25
    2a8c:	f0 e0       	ldi	r31, 0x00	; 0
    2a8e:	ee 0f       	add	r30, r30
    2a90:	ff 1f       	adc	r31, r31
    2a92:	e2 0f       	add	r30, r18
    2a94:	f3 1f       	adc	r31, r19
    2a96:	60 81       	ld	r22, Z
    2a98:	71 81       	ldd	r23, Z+1	; 0x01
    2a9a:	1a 96       	adiw	r26, 0x0a	; 10
    2a9c:	2d 91       	ld	r18, X+
    2a9e:	3c 91       	ld	r19, X
    2aa0:	1b 97       	sbiw	r26, 0x0b	; 11
    2aa2:	21 15       	cp	r18, r1
    2aa4:	31 05       	cpc	r19, r1
    2aa6:	39 f1       	breq	.+78     	; 0x2af6 <compareAntennas+0x8e>
    2aa8:	fb 01       	movw	r30, r22
    2aaa:	42 85       	ldd	r20, Z+10	; 0x0a
    2aac:	53 85       	ldd	r21, Z+11	; 0x0b
    2aae:	41 15       	cp	r20, r1
    2ab0:	51 05       	cpc	r21, r1
    2ab2:	09 f1       	breq	.+66     	; 0x2af6 <compareAntennas+0x8e>
    2ab4:	24 17       	cp	r18, r20
    2ab6:	35 07       	cpc	r19, r21
    2ab8:	31 f5       	brne	.+76     	; 0x2b06 <compareAntennas+0x9e>
    2aba:	12 c0       	rjmp	.+36     	; 0x2ae0 <compareAntennas+0x78>
    2abc:	16 96       	adiw	r26, 0x06	; 6
    2abe:	ed 91       	ld	r30, X+
    2ac0:	fc 91       	ld	r31, X
    2ac2:	17 97       	sbiw	r26, 0x07	; 7
    2ac4:	e4 0f       	add	r30, r20
    2ac6:	f5 1f       	adc	r31, r21
    2ac8:	f0 80       	ld	r15, Z
    2aca:	fb 01       	movw	r30, r22
    2acc:	c6 80       	ldd	r12, Z+6	; 0x06
    2ace:	d7 80       	ldd	r13, Z+7	; 0x07
    2ad0:	f6 01       	movw	r30, r12
    2ad2:	e4 0f       	add	r30, r20
    2ad4:	f5 1f       	adc	r31, r21
    2ad6:	e0 81       	ld	r30, Z
    2ad8:	fe 12       	cpse	r15, r30
    2ada:	08 c0       	rjmp	.+16     	; 0x2aec <compareAntennas+0x84>
    2adc:	8f 5f       	subi	r24, 0xFF	; 255
    2ade:	01 c0       	rjmp	.+2      	; 0x2ae2 <compareAntennas+0x7a>
    2ae0:	80 e0       	ldi	r24, 0x00	; 0
    2ae2:	48 2f       	mov	r20, r24
    2ae4:	50 e0       	ldi	r21, 0x00	; 0
    2ae6:	42 17       	cp	r20, r18
    2ae8:	53 07       	cpc	r21, r19
    2aea:	40 f3       	brcs	.-48     	; 0x2abc <compareAntennas+0x54>
    2aec:	24 17       	cp	r18, r20
    2aee:	35 07       	cpc	r19, r21
    2af0:	51 f4       	brne	.+20     	; 0x2b06 <compareAntennas+0x9e>
    2af2:	0f 5f       	subi	r16, 0xFF	; 255
    2af4:	08 c0       	rjmp	.+16     	; 0x2b06 <compareAntennas+0x9e>
    2af6:	23 2b       	or	r18, r19
    2af8:	59 f4       	brne	.+22     	; 0x2b10 <compareAntennas+0xa8>
    2afa:	fb 01       	movw	r30, r22
    2afc:	22 85       	ldd	r18, Z+10	; 0x0a
    2afe:	33 85       	ldd	r19, Z+11	; 0x0b
    2b00:	23 2b       	or	r18, r19
    2b02:	31 f4       	brne	.+12     	; 0x2b10 <compareAntennas+0xa8>
    2b04:	1f 5f       	subi	r17, 0xFF	; 255
    2b06:	9f 5f       	subi	r25, 0xFF	; 255
    2b08:	8e 81       	ldd	r24, Y+6	; 0x06
    2b0a:	98 17       	cp	r25, r24
    2b0c:	08 f4       	brcc	.+2      	; 0x2b10 <compareAntennas+0xa8>
    2b0e:	b8 cf       	rjmp	.-144    	; 0x2a80 <compareAntennas+0x18>
    2b10:	08 17       	cp	r16, r24
    2b12:	21 f0       	breq	.+8      	; 0x2b1c <compareAntennas+0xb4>
    2b14:	18 17       	cp	r17, r24
    2b16:	21 f0       	breq	.+8      	; 0x2b20 <compareAntennas+0xb8>
    2b18:	80 e0       	ldi	r24, 0x00	; 0
    2b1a:	03 c0       	rjmp	.+6      	; 0x2b22 <compareAntennas+0xba>
    2b1c:	81 e0       	ldi	r24, 0x01	; 1
    2b1e:	01 c0       	rjmp	.+2      	; 0x2b22 <compareAntennas+0xba>
    2b20:	81 e0       	ldi	r24, 0x01	; 1
    2b22:	df 91       	pop	r29
    2b24:	cf 91       	pop	r28
    2b26:	1f 91       	pop	r17
    2b28:	0f 91       	pop	r16
    2b2a:	ff 90       	pop	r15
    2b2c:	df 90       	pop	r13
    2b2e:	cf 90       	pop	r12
    2b30:	08 95       	ret

00002b32 <prepForSearch>:
    2b32:	cf 92       	push	r12
    2b34:	df 92       	push	r13
    2b36:	ef 92       	push	r14
    2b38:	ff 92       	push	r15
    2b3a:	0f 93       	push	r16
    2b3c:	1f 93       	push	r17
    2b3e:	cf 93       	push	r28
    2b40:	df 93       	push	r29
    2b42:	8c 01       	movw	r16, r24
    2b44:	eb 01       	movw	r28, r22
    2b46:	fc 01       	movw	r30, r24
    2b48:	ec 52       	subi	r30, 0x2C	; 44
    2b4a:	fe 4f       	sbci	r31, 0xFE	; 254
    2b4c:	80 81       	ld	r24, Z
    2b4e:	91 81       	ldd	r25, Z+1	; 0x01
    2b50:	89 2b       	or	r24, r25
    2b52:	51 f4       	brne	.+20     	; 0x2b68 <prepForSearch+0x36>
    2b54:	c8 01       	movw	r24, r16
    2b56:	0e 94 a0 05 	call	0xb40	; 0xb40 <initTxRxMapFromPorts>
    2b5a:	6b 01       	movw	r12, r22
    2b5c:	7c 01       	movw	r14, r24
    2b5e:	67 2b       	or	r22, r23
    2b60:	68 2b       	or	r22, r24
    2b62:	69 2b       	or	r22, r25
    2b64:	21 f0       	breq	.+8      	; 0x2b6e <prepForSearch+0x3c>
    2b66:	59 c0       	rjmp	.+178    	; 0x2c1a <prepForSearch+0xe8>
    2b68:	c1 2c       	mov	r12, r1
    2b6a:	d1 2c       	mov	r13, r1
    2b6c:	76 01       	movw	r14, r12
    2b6e:	88 81       	ld	r24, Y
    2b70:	81 30       	cpi	r24, 0x01	; 1
    2b72:	19 f0       	breq	.+6      	; 0x2b7a <prepForSearch+0x48>
    2b74:	82 30       	cpi	r24, 0x02	; 2
    2b76:	a9 f0       	breq	.+42     	; 0x2ba2 <prepForSearch+0x70>
    2b78:	40 c0       	rjmp	.+128    	; 0x2bfa <prepForSearch+0xc8>
    2b7a:	f8 01       	movw	r30, r16
    2b7c:	e9 5e       	subi	r30, 0xE9	; 233
    2b7e:	f9 4f       	sbci	r31, 0xF9	; 249
    2b80:	80 81       	ld	r24, Z
    2b82:	81 11       	cpse	r24, r1
    2b84:	4a c0       	rjmp	.+148    	; 0x2c1a <prepForSearch+0xe8>
    2b86:	be 01       	movw	r22, r28
    2b88:	6a 5f       	subi	r22, 0xFA	; 250
    2b8a:	7f 4f       	sbci	r23, 0xFF	; 255
    2b8c:	8a 85       	ldd	r24, Y+10	; 0x0a
    2b8e:	9b 85       	ldd	r25, Y+11	; 0x0b
    2b90:	89 2b       	or	r24, r25
    2b92:	09 f4       	brne	.+2      	; 0x2b96 <prepForSearch+0x64>
    2b94:	42 c0       	rjmp	.+132    	; 0x2c1a <prepForSearch+0xe8>
    2b96:	c8 01       	movw	r24, r16
    2b98:	0e 94 a1 03 	call	0x742	; 0x742 <setAntennaList>
    2b9c:	6b 01       	movw	r12, r22
    2b9e:	7c 01       	movw	r14, r24
    2ba0:	3c c0       	rjmp	.+120    	; 0x2c1a <prepForSearch+0xe8>
    2ba2:	ce 01       	movw	r24, r28
    2ba4:	d5 dc       	rcall	.-1622   	; 0x2550 <validateParams>
    2ba6:	88 23       	and	r24, r24
    2ba8:	59 f0       	breq	.+22     	; 0x2bc0 <prepForSearch+0x8e>
    2baa:	f8 01       	movw	r30, r16
    2bac:	e9 5e       	subi	r30, 0xE9	; 233
    2bae:	f9 4f       	sbci	r31, 0xF9	; 249
    2bb0:	80 81       	ld	r24, Z
    2bb2:	81 11       	cpse	r24, r1
    2bb4:	32 c0       	rjmp	.+100    	; 0x2c1a <prepForSearch+0xe8>
    2bb6:	c8 01       	movw	r24, r16
    2bb8:	f6 de       	rcall	.-532    	; 0x29a6 <setAntennaReadTimeList>
    2bba:	6b 01       	movw	r12, r22
    2bbc:	7c 01       	movw	r14, r24
    2bbe:	2d c0       	rjmp	.+90     	; 0x2c1a <prepForSearch+0xe8>
    2bc0:	ce 01       	movw	r24, r28
    2bc2:	06 96       	adiw	r24, 0x06	; 6
    2bc4:	51 df       	rcall	.-350    	; 0x2a68 <compareAntennas>
    2bc6:	88 23       	and	r24, r24
    2bc8:	09 f1       	breq	.+66     	; 0x2c0c <prepForSearch+0xda>
    2bca:	ee 81       	ldd	r30, Y+6	; 0x06
    2bcc:	ff 81       	ldd	r31, Y+7	; 0x07
    2bce:	01 90       	ld	r0, Z+
    2bd0:	f0 81       	ld	r31, Z
    2bd2:	e0 2d       	mov	r30, r0
    2bd4:	bf 01       	movw	r22, r30
    2bd6:	6a 5f       	subi	r22, 0xFA	; 250
    2bd8:	7f 4f       	sbci	r23, 0xFF	; 255
    2bda:	d8 01       	movw	r26, r16
    2bdc:	a9 5e       	subi	r26, 0xE9	; 233
    2bde:	b9 4f       	sbci	r27, 0xF9	; 249
    2be0:	8c 91       	ld	r24, X
    2be2:	81 11       	cpse	r24, r1
    2be4:	1a c0       	rjmp	.+52     	; 0x2c1a <prepForSearch+0xe8>
    2be6:	82 85       	ldd	r24, Z+10	; 0x0a
    2be8:	93 85       	ldd	r25, Z+11	; 0x0b
    2bea:	89 2b       	or	r24, r25
    2bec:	b1 f0       	breq	.+44     	; 0x2c1a <prepForSearch+0xe8>
    2bee:	c8 01       	movw	r24, r16
    2bf0:	0e 94 a1 03 	call	0x742	; 0x742 <setAntennaList>
    2bf4:	6b 01       	movw	r12, r22
    2bf6:	7c 01       	movw	r14, r24
    2bf8:	10 c0       	rjmp	.+32     	; 0x2c1a <prepForSearch+0xe8>
    2bfa:	0f 2e       	mov	r0, r31
    2bfc:	cc 24       	eor	r12, r12
    2bfe:	c3 94       	inc	r12
    2c00:	d1 2c       	mov	r13, r1
    2c02:	e1 2c       	mov	r14, r1
    2c04:	f3 e0       	ldi	r31, 0x03	; 3
    2c06:	ff 2e       	mov	r15, r31
    2c08:	f0 2d       	mov	r31, r0
    2c0a:	07 c0       	rjmp	.+14     	; 0x2c1a <prepForSearch+0xe8>
    2c0c:	0f 2e       	mov	r0, r31
    2c0e:	f3 e0       	ldi	r31, 0x03	; 3
    2c10:	cf 2e       	mov	r12, r31
    2c12:	d1 2c       	mov	r13, r1
    2c14:	e1 2c       	mov	r14, r1
    2c16:	fc 2c       	mov	r15, r12
    2c18:	f0 2d       	mov	r31, r0
    2c1a:	c7 01       	movw	r24, r14
    2c1c:	b6 01       	movw	r22, r12
    2c1e:	df 91       	pop	r29
    2c20:	cf 91       	pop	r28
    2c22:	1f 91       	pop	r17
    2c24:	0f 91       	pop	r16
    2c26:	ff 90       	pop	r15
    2c28:	ef 90       	pop	r14
    2c2a:	df 90       	pop	r13
    2c2c:	cf 90       	pop	r12
    2c2e:	08 95       	ret

00002c30 <TMR_SR_paramSet>:
    2c30:	2f 92       	push	r2
    2c32:	3f 92       	push	r3
    2c34:	4f 92       	push	r4
    2c36:	5f 92       	push	r5
    2c38:	6f 92       	push	r6
    2c3a:	7f 92       	push	r7
    2c3c:	8f 92       	push	r8
    2c3e:	9f 92       	push	r9
    2c40:	af 92       	push	r10
    2c42:	bf 92       	push	r11
    2c44:	cf 92       	push	r12
    2c46:	df 92       	push	r13
    2c48:	ef 92       	push	r14
    2c4a:	ff 92       	push	r15
    2c4c:	0f 93       	push	r16
    2c4e:	1f 93       	push	r17
    2c50:	cf 93       	push	r28
    2c52:	df 93       	push	r29
    2c54:	cd b7       	in	r28, 0x3d	; 61
    2c56:	de b7       	in	r29, 0x3e	; 62
    2c58:	a2 97       	sbiw	r28, 0x22	; 34
    2c5a:	0f b6       	in	r0, 0x3f	; 63
    2c5c:	f8 94       	cli
    2c5e:	de bf       	out	0x3e, r29	; 62
    2c60:	0f be       	out	0x3f, r0	; 63
    2c62:	cd bf       	out	0x3d, r28	; 61
    2c64:	6c 01       	movw	r12, r24
    2c66:	f6 2e       	mov	r15, r22
    2c68:	5a 01       	movw	r10, r20
    2c6a:	0f 2e       	mov	r0, r31
    2c6c:	f5 e0       	ldi	r31, 0x05	; 5
    2c6e:	ef 2e       	mov	r14, r31
    2c70:	f0 2d       	mov	r31, r0
    2c72:	06 2f       	mov	r16, r22
    2c74:	02 95       	swap	r16
    2c76:	06 95       	lsr	r16
    2c78:	07 70       	andi	r16, 0x07	; 7
    2c7a:	10 e0       	ldi	r17, 0x00	; 0
    2c7c:	80 58       	subi	r24, 0x80	; 128
    2c7e:	9e 4f       	sbci	r25, 0xFE	; 254
    2c80:	f8 01       	movw	r30, r16
    2c82:	ef 57       	subi	r30, 0x7F	; 127
    2c84:	ff 4f       	sbci	r31, 0xFF	; 255
    2c86:	ee 0f       	add	r30, r30
    2c88:	ff 1f       	adc	r31, r31
    2c8a:	ee 0f       	add	r30, r30
    2c8c:	ff 1f       	adc	r31, r31
    2c8e:	e8 0f       	add	r30, r24
    2c90:	f9 1f       	adc	r31, r25
    2c92:	80 81       	ld	r24, Z
    2c94:	91 81       	ldd	r25, Z+1	; 0x01
    2c96:	a2 81       	ldd	r26, Z+2	; 0x02
    2c98:	b3 81       	ldd	r27, Z+3	; 0x03
    2c9a:	26 2f       	mov	r18, r22
    2c9c:	2f 71       	andi	r18, 0x1F	; 31
    2c9e:	92 2e       	mov	r9, r18
    2ca0:	04 c0       	rjmp	.+8      	; 0x2caa <TMR_SR_paramSet+0x7a>
    2ca2:	b6 95       	lsr	r27
    2ca4:	a7 95       	ror	r26
    2ca6:	97 95       	ror	r25
    2ca8:	87 95       	ror	r24
    2caa:	2a 95       	dec	r18
    2cac:	d2 f7       	brpl	.-12     	; 0x2ca2 <TMR_SR_paramSet+0x72>
    2cae:	80 fd       	sbrc	r24, 0
    2cb0:	03 c0       	rjmp	.+6      	; 0x2cb8 <TMR_SR_paramSet+0x88>
    2cb2:	c6 01       	movw	r24, r12
    2cb4:	0e 94 18 6d 	call	0xda30	; 0xda30 <TMR_paramProbe>
    2cb8:	f8 01       	movw	r30, r16
    2cba:	ef 57       	subi	r30, 0x7F	; 127
    2cbc:	ff 4f       	sbci	r31, 0xFF	; 255
    2cbe:	ee 0f       	add	r30, r30
    2cc0:	ff 1f       	adc	r31, r31
    2cc2:	ee 0f       	add	r30, r30
    2cc4:	ff 1f       	adc	r31, r31
    2cc6:	c6 01       	movw	r24, r12
    2cc8:	80 58       	subi	r24, 0x80	; 128
    2cca:	9e 4f       	sbci	r25, 0xFE	; 254
    2ccc:	e8 0f       	add	r30, r24
    2cce:	f9 1f       	adc	r31, r25
    2cd0:	80 81       	ld	r24, Z
    2cd2:	91 81       	ldd	r25, Z+1	; 0x01
    2cd4:	a2 81       	ldd	r26, Z+2	; 0x02
    2cd6:	b3 81       	ldd	r27, Z+3	; 0x03
    2cd8:	09 2c       	mov	r0, r9
    2cda:	04 c0       	rjmp	.+8      	; 0x2ce4 <TMR_SR_paramSet+0xb4>
    2cdc:	b6 95       	lsr	r27
    2cde:	a7 95       	ror	r26
    2ce0:	97 95       	ror	r25
    2ce2:	87 95       	ror	r24
    2ce4:	0a 94       	dec	r0
    2ce6:	d2 f7       	brpl	.-12     	; 0x2cdc <TMR_SR_paramSet+0xac>
    2ce8:	80 ff       	sbrs	r24, 0
    2cea:	18 c0       	rjmp	.+48     	; 0x2d1c <TMR_SR_paramSet+0xec>
    2cec:	0b 57       	subi	r16, 0x7B	; 123
    2cee:	1f 4f       	sbci	r17, 0xFF	; 255
    2cf0:	00 0f       	add	r16, r16
    2cf2:	11 1f       	adc	r17, r17
    2cf4:	00 0f       	add	r16, r16
    2cf6:	11 1f       	adc	r17, r17
    2cf8:	f6 01       	movw	r30, r12
    2cfa:	e0 58       	subi	r30, 0x80	; 128
    2cfc:	fe 4f       	sbci	r31, 0xFE	; 254
    2cfe:	e0 0f       	add	r30, r16
    2d00:	f1 1f       	adc	r31, r17
    2d02:	80 81       	ld	r24, Z
    2d04:	91 81       	ldd	r25, Z+1	; 0x01
    2d06:	a2 81       	ldd	r26, Z+2	; 0x02
    2d08:	b3 81       	ldd	r27, Z+3	; 0x03
    2d0a:	04 c0       	rjmp	.+8      	; 0x2d14 <TMR_SR_paramSet+0xe4>
    2d0c:	b6 95       	lsr	r27
    2d0e:	a7 95       	ror	r26
    2d10:	97 95       	ror	r25
    2d12:	87 95       	ror	r24
    2d14:	9a 94       	dec	r9
    2d16:	d2 f7       	brpl	.-12     	; 0x2d0c <TMR_SR_paramSet+0xdc>
    2d18:	80 ff       	sbrs	r24, 0
    2d1a:	ad c6       	rjmp	.+3418   	; 0x3a76 <TMR_SR_paramSet+0xe46>
    2d1c:	8f 2d       	mov	r24, r15
    2d1e:	90 e0       	ldi	r25, 0x00	; 0
    2d20:	fc 01       	movw	r30, r24
    2d22:	31 97       	sbiw	r30, 0x01	; 1
    2d24:	e0 37       	cpi	r30, 0x70	; 112
    2d26:	f1 05       	cpc	r31, r1
    2d28:	08 f0       	brcs	.+2      	; 0x2d2c <TMR_SR_paramSet+0xfc>
    2d2a:	c6 c5       	rjmp	.+2956   	; 0x38b8 <TMR_SR_paramSet+0xc88>
    2d2c:	e2 5e       	subi	r30, 0xE2	; 226
    2d2e:	fe 4f       	sbci	r31, 0xFE	; 254
    2d30:	0c 94 d0 74 	jmp	0xe9a0	; 0xe9a0 <__tablejump2__>
    2d34:	60 e0       	ldi	r22, 0x00	; 0
    2d36:	0f 2e       	mov	r0, r31
    2d38:	f5 e0       	ldi	r31, 0x05	; 5
    2d3a:	4f 2e       	mov	r4, r31
    2d3c:	51 2c       	mov	r5, r1
    2d3e:	61 2c       	mov	r6, r1
    2d40:	f3 e0       	ldi	r31, 0x03	; 3
    2d42:	7f 2e       	mov	r7, r31
    2d44:	f0 2d       	mov	r31, r0
    2d46:	06 c6       	rjmp	.+3084   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2d48:	d5 01       	movw	r26, r10
    2d4a:	6c 91       	ld	r22, X
    2d4c:	c6 01       	movw	r24, r12
    2d4e:	0e 94 8f 4c 	call	0x991e	; 0x991e <TMR_SR_cmdSetRegion>
    2d52:	2b 01       	movw	r4, r22
    2d54:	3c 01       	movw	r6, r24
    2d56:	67 2b       	or	r22, r23
    2d58:	68 2b       	or	r22, r24
    2d5a:	69 2b       	or	r22, r25
    2d5c:	09 f0       	breq	.+2      	; 0x2d60 <TMR_SR_paramSet+0x130>
    2d5e:	bb c5       	rjmp	.+2934   	; 0x38d6 <TMR_SR_paramSet+0xca6>
    2d60:	f5 01       	movw	r30, r10
    2d62:	80 81       	ld	r24, Z
    2d64:	f6 01       	movw	r30, r12
    2d66:	ec 51       	subi	r30, 0x1C	; 28
    2d68:	fe 4f       	sbci	r31, 0xFE	; 254
    2d6a:	80 83       	st	Z, r24
    2d6c:	60 e0       	ldi	r22, 0x00	; 0
    2d6e:	f2 c5       	rjmp	.+3044   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2d70:	d5 01       	movw	r26, r10
    2d72:	8c 91       	ld	r24, X
    2d74:	88 23       	and	r24, r24
    2d76:	59 f0       	breq	.+22     	; 0x2d8e <TMR_SR_paramSet+0x15e>
    2d78:	f6 01       	movw	r30, r12
    2d7a:	e8 5e       	subi	r30, 0xE8	; 232
    2d7c:	f9 4f       	sbci	r31, 0xF9	; 249
    2d7e:	80 81       	ld	r24, Z
    2d80:	88 60       	ori	r24, 0x08	; 8
    2d82:	80 83       	st	Z, r24
    2d84:	60 e0       	ldi	r22, 0x00	; 0
    2d86:	41 2c       	mov	r4, r1
    2d88:	51 2c       	mov	r5, r1
    2d8a:	32 01       	movw	r6, r4
    2d8c:	e3 c5       	rjmp	.+3014   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2d8e:	f6 01       	movw	r30, r12
    2d90:	e8 5e       	subi	r30, 0xE8	; 232
    2d92:	f9 4f       	sbci	r31, 0xF9	; 249
    2d94:	80 81       	ld	r24, Z
    2d96:	87 7f       	andi	r24, 0xF7	; 247
    2d98:	80 83       	st	Z, r24
    2d9a:	60 e0       	ldi	r22, 0x00	; 0
    2d9c:	41 2c       	mov	r4, r1
    2d9e:	51 2c       	mov	r5, r1
    2da0:	32 01       	movw	r6, r4
    2da2:	d8 c5       	rjmp	.+2992   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2da4:	f5 01       	movw	r30, r10
    2da6:	80 81       	ld	r24, Z
    2da8:	88 23       	and	r24, r24
    2daa:	59 f0       	breq	.+22     	; 0x2dc2 <TMR_SR_paramSet+0x192>
    2dac:	f6 01       	movw	r30, r12
    2dae:	e8 5e       	subi	r30, 0xE8	; 232
    2db0:	f9 4f       	sbci	r31, 0xF9	; 249
    2db2:	80 81       	ld	r24, Z
    2db4:	82 60       	ori	r24, 0x02	; 2
    2db6:	80 83       	st	Z, r24
    2db8:	60 e0       	ldi	r22, 0x00	; 0
    2dba:	41 2c       	mov	r4, r1
    2dbc:	51 2c       	mov	r5, r1
    2dbe:	32 01       	movw	r6, r4
    2dc0:	c9 c5       	rjmp	.+2962   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2dc2:	f6 01       	movw	r30, r12
    2dc4:	e8 5e       	subi	r30, 0xE8	; 232
    2dc6:	f9 4f       	sbci	r31, 0xF9	; 249
    2dc8:	80 81       	ld	r24, Z
    2dca:	8d 7f       	andi	r24, 0xFD	; 253
    2dcc:	80 83       	st	Z, r24
    2dce:	60 e0       	ldi	r22, 0x00	; 0
    2dd0:	41 2c       	mov	r4, r1
    2dd2:	51 2c       	mov	r5, r1
    2dd4:	32 01       	movw	r6, r4
    2dd6:	be c5       	rjmp	.+2940   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2dd8:	d5 01       	movw	r26, r10
    2dda:	8c 91       	ld	r24, X
    2ddc:	88 23       	and	r24, r24
    2dde:	59 f0       	breq	.+22     	; 0x2df6 <TMR_SR_paramSet+0x1c6>
    2de0:	f6 01       	movw	r30, r12
    2de2:	e8 5e       	subi	r30, 0xE8	; 232
    2de4:	f9 4f       	sbci	r31, 0xF9	; 249
    2de6:	80 81       	ld	r24, Z
    2de8:	84 60       	ori	r24, 0x04	; 4
    2dea:	80 83       	st	Z, r24
    2dec:	60 e0       	ldi	r22, 0x00	; 0
    2dee:	41 2c       	mov	r4, r1
    2df0:	51 2c       	mov	r5, r1
    2df2:	32 01       	movw	r6, r4
    2df4:	af c5       	rjmp	.+2910   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2df6:	f6 01       	movw	r30, r12
    2df8:	e8 5e       	subi	r30, 0xE8	; 232
    2dfa:	f9 4f       	sbci	r31, 0xF9	; 249
    2dfc:	80 81       	ld	r24, Z
    2dfe:	8b 7f       	andi	r24, 0xFB	; 251
    2e00:	80 83       	st	Z, r24
    2e02:	60 e0       	ldi	r22, 0x00	; 0
    2e04:	41 2c       	mov	r4, r1
    2e06:	51 2c       	mov	r5, r1
    2e08:	32 01       	movw	r6, r4
    2e0a:	a4 c5       	rjmp	.+2888   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2e0c:	86 01       	movw	r16, r12
    2e0e:	00 58       	subi	r16, 0x80	; 128
    2e10:	1e 4f       	sbci	r17, 0xFE	; 254
    2e12:	f5 01       	movw	r30, r10
    2e14:	40 81       	ld	r20, Z
    2e16:	51 81       	ldd	r21, Z+1	; 0x01
    2e18:	62 81       	ldd	r22, Z+2	; 0x02
    2e1a:	73 81       	ldd	r23, Z+3	; 0x03
    2e1c:	f6 01       	movw	r30, r12
    2e1e:	e0 53       	subi	r30, 0x30	; 48
    2e20:	fe 4f       	sbci	r31, 0xFE	; 254
    2e22:	40 83       	st	Z, r20
    2e24:	51 83       	std	Z+1, r21	; 0x01
    2e26:	62 83       	std	Z+2, r22	; 0x02
    2e28:	73 83       	std	Z+3, r23	; 0x03
    2e2a:	d6 01       	movw	r26, r12
    2e2c:	15 96       	adiw	r26, 0x05	; 5
    2e2e:	8c 91       	ld	r24, X
    2e30:	88 23       	and	r24, r24
    2e32:	09 f4       	brne	.+2      	; 0x2e36 <TMR_SR_paramSet+0x206>
    2e34:	52 c5       	rjmp	.+2724   	; 0x38da <TMR_SR_paramSet+0xcaa>
    2e36:	f8 01       	movw	r30, r16
    2e38:	80 85       	ldd	r24, Z+8	; 0x08
    2e3a:	91 85       	ldd	r25, Z+9	; 0x09
    2e3c:	89 2b       	or	r24, r25
    2e3e:	09 f4       	brne	.+2      	; 0x2e42 <TMR_SR_paramSet+0x212>
    2e40:	51 c5       	rjmp	.+2722   	; 0x38e4 <TMR_SR_paramSet+0xcb4>
    2e42:	c6 01       	movw	r24, r12
    2e44:	0e 94 fe 37 	call	0x6ffc	; 0x6ffc <TMR_SR_cmdSetBaudRate>
    2e48:	2b 01       	movw	r4, r22
    2e4a:	3c 01       	movw	r6, r24
    2e4c:	67 2b       	or	r22, r23
    2e4e:	68 2b       	or	r22, r24
    2e50:	69 2b       	or	r22, r25
    2e52:	09 f0       	breq	.+2      	; 0x2e56 <TMR_SR_paramSet+0x226>
    2e54:	4c c5       	rjmp	.+2712   	; 0x38ee <TMR_SR_paramSet+0xcbe>
    2e56:	f8 01       	movw	r30, r16
    2e58:	00 84       	ldd	r0, Z+8	; 0x08
    2e5a:	f1 85       	ldd	r31, Z+9	; 0x09
    2e5c:	e0 2d       	mov	r30, r0
    2e5e:	d6 01       	movw	r26, r12
    2e60:	a0 53       	subi	r26, 0x30	; 48
    2e62:	be 4f       	sbci	r27, 0xFE	; 254
    2e64:	4d 91       	ld	r20, X+
    2e66:	5d 91       	ld	r21, X+
    2e68:	6d 91       	ld	r22, X+
    2e6a:	7c 91       	ld	r23, X
    2e6c:	c8 01       	movw	r24, r16
    2e6e:	09 95       	icall
    2e70:	60 e0       	ldi	r22, 0x00	; 0
    2e72:	70 c5       	rjmp	.+2784   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2e74:	f5 01       	movw	r30, r10
    2e76:	24 81       	ldd	r18, Z+4	; 0x04
    2e78:	35 81       	ldd	r19, Z+5	; 0x05
    2e7a:	f6 01       	movw	r30, r12
    2e7c:	e4 53       	subi	r30, 0x34	; 52
    2e7e:	fa 4f       	sbci	r31, 0xFA	; 250
    2e80:	80 81       	ld	r24, Z
    2e82:	91 81       	ldd	r25, Z+1	; 0x01
    2e84:	82 17       	cp	r24, r18
    2e86:	93 07       	cpc	r25, r19
    2e88:	08 f4       	brcc	.+2      	; 0x2e8c <TMR_SR_paramSet+0x25c>
    2e8a:	33 c5       	rjmp	.+2662   	; 0x38f2 <TMR_SR_paramSet+0xcc2>
    2e8c:	20 e0       	ldi	r18, 0x00	; 0
    2e8e:	1c c0       	rjmp	.+56     	; 0x2ec8 <TMR_SR_paramSet+0x298>
    2e90:	f6 01       	movw	r30, r12
    2e92:	e6 53       	subi	r30, 0x36	; 54
    2e94:	fa 4f       	sbci	r31, 0xFA	; 250
    2e96:	01 90       	ld	r0, Z+
    2e98:	f0 81       	ld	r31, Z
    2e9a:	e0 2d       	mov	r30, r0
    2e9c:	88 0f       	add	r24, r24
    2e9e:	99 1f       	adc	r25, r25
    2ea0:	88 0f       	add	r24, r24
    2ea2:	99 1f       	adc	r25, r25
    2ea4:	e8 0f       	add	r30, r24
    2ea6:	f9 1f       	adc	r31, r25
    2ea8:	d5 01       	movw	r26, r10
    2eaa:	4d 91       	ld	r20, X+
    2eac:	5c 91       	ld	r21, X
    2eae:	da 01       	movw	r26, r20
    2eb0:	a8 0f       	add	r26, r24
    2eb2:	b9 1f       	adc	r27, r25
    2eb4:	8d 91       	ld	r24, X+
    2eb6:	9d 91       	ld	r25, X+
    2eb8:	0d 90       	ld	r0, X+
    2eba:	bc 91       	ld	r27, X
    2ebc:	a0 2d       	mov	r26, r0
    2ebe:	80 83       	st	Z, r24
    2ec0:	91 83       	std	Z+1, r25	; 0x01
    2ec2:	a2 83       	std	Z+2, r26	; 0x02
    2ec4:	b3 83       	std	Z+3, r27	; 0x03
    2ec6:	2f 5f       	subi	r18, 0xFF	; 255
    2ec8:	82 2f       	mov	r24, r18
    2eca:	90 e0       	ldi	r25, 0x00	; 0
    2ecc:	f5 01       	movw	r30, r10
    2ece:	44 81       	ldd	r20, Z+4	; 0x04
    2ed0:	55 81       	ldd	r21, Z+5	; 0x05
    2ed2:	84 17       	cp	r24, r20
    2ed4:	95 07       	cpc	r25, r21
    2ed6:	e0 f2       	brcs	.-72     	; 0x2e90 <TMR_SR_paramSet+0x260>
    2ed8:	f6 01       	movw	r30, r12
    2eda:	e2 53       	subi	r30, 0x32	; 50
    2edc:	fa 4f       	sbci	r31, 0xFA	; 250
    2ede:	51 83       	std	Z+1, r21	; 0x01
    2ee0:	40 83       	st	Z, r20
    2ee2:	60 e0       	ldi	r22, 0x00	; 0
    2ee4:	41 2c       	mov	r4, r1
    2ee6:	51 2c       	mov	r5, r1
    2ee8:	32 01       	movw	r6, r4
    2eea:	34 c5       	rjmp	.+2664   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2eec:	f5 01       	movw	r30, r10
    2eee:	80 81       	ld	r24, Z
    2ef0:	91 81       	ldd	r25, Z+1	; 0x01
    2ef2:	a2 81       	ldd	r26, Z+2	; 0x02
    2ef4:	b3 81       	ldd	r27, Z+3	; 0x03
    2ef6:	f6 01       	movw	r30, r12
    2ef8:	e0 52       	subi	r30, 0x20	; 32
    2efa:	fe 4f       	sbci	r31, 0xFE	; 254
    2efc:	80 83       	st	Z, r24
    2efe:	91 83       	std	Z+1, r25	; 0x01
    2f00:	a2 83       	std	Z+2, r26	; 0x02
    2f02:	b3 83       	std	Z+3, r27	; 0x03
    2f04:	60 e0       	ldi	r22, 0x00	; 0
    2f06:	41 2c       	mov	r4, r1
    2f08:	51 2c       	mov	r5, r1
    2f0a:	32 01       	movw	r6, r4
    2f0c:	23 c5       	rjmp	.+2630   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2f0e:	f5 01       	movw	r30, r10
    2f10:	80 81       	ld	r24, Z
    2f12:	91 81       	ldd	r25, Z+1	; 0x01
    2f14:	a2 81       	ldd	r26, Z+2	; 0x02
    2f16:	b3 81       	ldd	r27, Z+3	; 0x03
    2f18:	f6 01       	movw	r30, r12
    2f1a:	e4 52       	subi	r30, 0x24	; 36
    2f1c:	fe 4f       	sbci	r31, 0xFE	; 254
    2f1e:	80 83       	st	Z, r24
    2f20:	91 83       	std	Z+1, r25	; 0x01
    2f22:	a2 83       	std	Z+2, r26	; 0x02
    2f24:	b3 83       	std	Z+3, r27	; 0x03
    2f26:	81 e0       	ldi	r24, 0x01	; 1
    2f28:	e3 51       	subi	r30, 0x13	; 19
    2f2a:	fc 4f       	sbci	r31, 0xFC	; 252
    2f2c:	80 83       	st	Z, r24
    2f2e:	60 e0       	ldi	r22, 0x00	; 0
    2f30:	41 2c       	mov	r4, r1
    2f32:	51 2c       	mov	r5, r1
    2f34:	32 01       	movw	r6, r4
    2f36:	0e c5       	rjmp	.+2588   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2f38:	a5 01       	movw	r20, r10
    2f3a:	6b e0       	ldi	r22, 0x0B	; 11
    2f3c:	c6 01       	movw	r24, r12
    2f3e:	0e 94 9d 4d 	call	0x9b3a	; 0x9b3a <TMR_SR_cmdSetReaderConfiguration>
    2f42:	2b 01       	movw	r4, r22
    2f44:	3c 01       	movw	r6, r24
    2f46:	60 e0       	ldi	r22, 0x00	; 0
    2f48:	05 c5       	rjmp	.+2570   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2f4a:	f5 01       	movw	r30, r10
    2f4c:	80 81       	ld	r24, Z
    2f4e:	91 81       	ldd	r25, Z+1	; 0x01
    2f50:	a2 81       	ldd	r26, Z+2	; 0x02
    2f52:	b3 81       	ldd	r27, Z+3	; 0x03
    2f54:	8f 3f       	cpi	r24, 0xFF	; 255
    2f56:	ff ef       	ldi	r31, 0xFF	; 255
    2f58:	9f 07       	cpc	r25, r31
    2f5a:	af 07       	cpc	r26, r31
    2f5c:	bf 07       	cpc	r27, r31
    2f5e:	19 f4       	brne	.+6      	; 0x2f66 <TMR_SR_paramSet+0x336>
    2f60:	80 e0       	ldi	r24, 0x00	; 0
    2f62:	90 e0       	ldi	r25, 0x00	; 0
    2f64:	dc 01       	movw	r26, r24
    2f66:	89 83       	std	Y+1, r24	; 0x01
    2f68:	9a 83       	std	Y+2, r25	; 0x02
    2f6a:	ab 83       	std	Y+3, r26	; 0x03
    2f6c:	bc 83       	std	Y+4, r27	; 0x04
    2f6e:	ae 01       	movw	r20, r28
    2f70:	4f 5f       	subi	r20, 0xFF	; 255
    2f72:	5f 4f       	sbci	r21, 0xFF	; 255
    2f74:	6d e0       	ldi	r22, 0x0D	; 13
    2f76:	c6 01       	movw	r24, r12
    2f78:	0e 94 9d 4d 	call	0x9b3a	; 0x9b3a <TMR_SR_cmdSetReaderConfiguration>
    2f7c:	2b 01       	movw	r4, r22
    2f7e:	3c 01       	movw	r6, r24
    2f80:	60 e0       	ldi	r22, 0x00	; 0
    2f82:	e8 c4       	rjmp	.+2512   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2f84:	a5 01       	movw	r20, r10
    2f86:	6c e0       	ldi	r22, 0x0C	; 12
    2f88:	c6 01       	movw	r24, r12
    2f8a:	0e 94 9d 4d 	call	0x9b3a	; 0x9b3a <TMR_SR_cmdSetReaderConfiguration>
    2f8e:	2b 01       	movw	r4, r22
    2f90:	3c 01       	movw	r6, r24
    2f92:	67 2b       	or	r22, r23
    2f94:	68 2b       	or	r22, r24
    2f96:	69 2b       	or	r22, r25
    2f98:	09 f0       	breq	.+2      	; 0x2f9c <TMR_SR_paramSet+0x36c>
    2f9a:	b5 c4       	rjmp	.+2410   	; 0x3906 <TMR_SR_paramSet+0xcd6>
    2f9c:	d5 01       	movw	r26, r10
    2f9e:	8c 91       	ld	r24, X
    2fa0:	f6 01       	movw	r30, r12
    2fa2:	e9 53       	subi	r30, 0x39	; 57
    2fa4:	fa 4f       	sbci	r31, 0xFA	; 250
    2fa6:	80 83       	st	Z, r24
    2fa8:	81 e0       	ldi	r24, 0x01	; 1
    2faa:	31 96       	adiw	r30, 0x01	; 1
    2fac:	80 83       	st	Z, r24
    2fae:	60 e0       	ldi	r22, 0x00	; 0
    2fb0:	d1 c4       	rjmp	.+2466   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2fb2:	f5 01       	movw	r30, r10
    2fb4:	40 81       	ld	r20, Z
    2fb6:	51 81       	ldd	r21, Z+1	; 0x01
    2fb8:	62 81       	ldd	r22, Z+2	; 0x02
    2fba:	73 81       	ldd	r23, Z+3	; 0x03
    2fbc:	c6 01       	movw	r24, r12
    2fbe:	0e 94 3e 4b 	call	0x967c	; 0x967c <TMR_SR_cmdSetReadTxPower>
    2fc2:	2b 01       	movw	r4, r22
    2fc4:	3c 01       	movw	r6, r24
    2fc6:	60 e0       	ldi	r22, 0x00	; 0
    2fc8:	c5 c4       	rjmp	.+2442   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2fca:	d5 01       	movw	r26, r10
    2fcc:	4d 91       	ld	r20, X+
    2fce:	5d 91       	ld	r21, X+
    2fd0:	6d 91       	ld	r22, X+
    2fd2:	7c 91       	ld	r23, X
    2fd4:	c6 01       	movw	r24, r12
    2fd6:	0e 94 ee 4b 	call	0x97dc	; 0x97dc <TMR_SR_cmdSetWriteTxPower>
    2fda:	2b 01       	movw	r4, r22
    2fdc:	3c 01       	movw	r6, r24
    2fde:	60 e0       	ldi	r22, 0x00	; 0
    2fe0:	b9 c4       	rjmp	.+2418   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2fe2:	40 e0       	ldi	r20, 0x00	; 0
    2fe4:	50 e0       	ldi	r21, 0x00	; 0
    2fe6:	b5 01       	movw	r22, r10
    2fe8:	c6 01       	movw	r24, r12
    2fea:	63 d8       	rcall	.-3898   	; 0x20b2 <setPortValues>
    2fec:	2b 01       	movw	r4, r22
    2fee:	3c 01       	movw	r6, r24
    2ff0:	60 e0       	ldi	r22, 0x00	; 0
    2ff2:	b0 c4       	rjmp	.+2400   	; 0x3954 <TMR_SR_paramSet+0xd24>
    2ff4:	41 e0       	ldi	r20, 0x01	; 1
    2ff6:	50 e0       	ldi	r21, 0x00	; 0
    2ff8:	b5 01       	movw	r22, r10
    2ffa:	c6 01       	movw	r24, r12
    2ffc:	5a d8       	rcall	.-3916   	; 0x20b2 <setPortValues>
    2ffe:	2b 01       	movw	r4, r22
    3000:	3c 01       	movw	r6, r24
    3002:	60 e0       	ldi	r22, 0x00	; 0
    3004:	a7 c4       	rjmp	.+2382   	; 0x3954 <TMR_SR_paramSet+0xd24>
    3006:	42 e0       	ldi	r20, 0x02	; 2
    3008:	50 e0       	ldi	r21, 0x00	; 0
    300a:	b5 01       	movw	r22, r10
    300c:	c6 01       	movw	r24, r12
    300e:	51 d8       	rcall	.-3934   	; 0x20b2 <setPortValues>
    3010:	2b 01       	movw	r4, r22
    3012:	3c 01       	movw	r6, r24
    3014:	60 e0       	ldi	r22, 0x00	; 0
    3016:	9e c4       	rjmp	.+2364   	; 0x3954 <TMR_SR_paramSet+0xd24>
    3018:	64 e0       	ldi	r22, 0x04	; 4
    301a:	41 2c       	mov	r4, r1
    301c:	51 2c       	mov	r5, r1
    301e:	32 01       	movw	r6, r4
    3020:	99 c4       	rjmp	.+2354   	; 0x3954 <TMR_SR_paramSet+0xd24>
    3022:	66 e0       	ldi	r22, 0x06	; 6
    3024:	41 2c       	mov	r4, r1
    3026:	51 2c       	mov	r5, r1
    3028:	32 01       	movw	r6, r4
    302a:	94 c4       	rjmp	.+2344   	; 0x3954 <TMR_SR_paramSet+0xd24>
    302c:	60 e0       	ldi	r22, 0x00	; 0
    302e:	41 2c       	mov	r4, r1
    3030:	51 2c       	mov	r5, r1
    3032:	32 01       	movw	r6, r4
    3034:	8f c4       	rjmp	.+2334   	; 0x3954 <TMR_SR_paramSet+0xd24>
    3036:	68 e0       	ldi	r22, 0x08	; 8
    3038:	41 2c       	mov	r4, r1
    303a:	51 2c       	mov	r5, r1
    303c:	32 01       	movw	r6, r4
    303e:	8a c4       	rjmp	.+2324   	; 0x3954 <TMR_SR_paramSet+0xd24>
    3040:	f6 01       	movw	r30, r12
    3042:	ef 5f       	subi	r30, 0xFF	; 255
    3044:	f9 4f       	sbci	r31, 0xF9	; 249
    3046:	10 82       	st	Z, r1
    3048:	40 e0       	ldi	r20, 0x00	; 0
    304a:	50 e0       	ldi	r21, 0x00	; 0
    304c:	18 c0       	rjmp	.+48     	; 0x307e <TMR_SR_paramSet+0x44e>
    304e:	d5 01       	movw	r26, r10
    3050:	ed 91       	ld	r30, X+
    3052:	fc 91       	ld	r31, X
    3054:	e4 0f       	add	r30, r20
    3056:	f5 1f       	adc	r31, r21
    3058:	20 81       	ld	r18, Z
    305a:	30 e0       	ldi	r19, 0x00	; 0
    305c:	21 50       	subi	r18, 0x01	; 1
    305e:	31 09       	sbc	r19, r1
    3060:	81 e0       	ldi	r24, 0x01	; 1
    3062:	90 e0       	ldi	r25, 0x00	; 0
    3064:	02 c0       	rjmp	.+4      	; 0x306a <TMR_SR_paramSet+0x43a>
    3066:	88 0f       	add	r24, r24
    3068:	99 1f       	adc	r25, r25
    306a:	2a 95       	dec	r18
    306c:	e2 f7       	brpl	.-8      	; 0x3066 <TMR_SR_paramSet+0x436>
    306e:	f6 01       	movw	r30, r12
    3070:	ef 5f       	subi	r30, 0xFF	; 255
    3072:	f9 4f       	sbci	r31, 0xF9	; 249
    3074:	90 81       	ld	r25, Z
    3076:	89 2b       	or	r24, r25
    3078:	80 83       	st	Z, r24
    307a:	4f 5f       	subi	r20, 0xFF	; 255
    307c:	5f 4f       	sbci	r21, 0xFF	; 255
    307e:	f5 01       	movw	r30, r10
    3080:	84 81       	ldd	r24, Z+4	; 0x04
    3082:	95 81       	ldd	r25, Z+5	; 0x05
    3084:	48 17       	cp	r20, r24
    3086:	59 07       	cpc	r21, r25
    3088:	28 f4       	brcc	.+10     	; 0x3094 <TMR_SR_paramSet+0x464>
    308a:	82 81       	ldd	r24, Z+2	; 0x02
    308c:	93 81       	ldd	r25, Z+3	; 0x03
    308e:	48 17       	cp	r20, r24
    3090:	59 07       	cpc	r21, r25
    3092:	e8 f2       	brcs	.-70     	; 0x304e <TMR_SR_paramSet+0x41e>
    3094:	a6 01       	movw	r20, r12
    3096:	4f 5f       	subi	r20, 0xFF	; 255
    3098:	59 4f       	sbci	r21, 0xF9	; 249
    309a:	63 e0       	ldi	r22, 0x03	; 3
    309c:	c6 01       	movw	r24, r12
    309e:	0e 94 9d 4d 	call	0x9b3a	; 0x9b3a <TMR_SR_cmdSetReaderConfiguration>
    30a2:	2b 01       	movw	r4, r22
    30a4:	3c 01       	movw	r6, r24
    30a6:	67 2b       	or	r22, r23
    30a8:	68 2b       	or	r22, r24
    30aa:	69 2b       	or	r22, r25
    30ac:	09 f0       	breq	.+2      	; 0x30b0 <TMR_SR_paramSet+0x480>
    30ae:	2d c4       	rjmp	.+2138   	; 0x390a <TMR_SR_paramSet+0xcda>
    30b0:	81 e0       	ldi	r24, 0x01	; 1
    30b2:	f6 01       	movw	r30, r12
    30b4:	ee 50       	subi	r30, 0x0E	; 14
    30b6:	fa 4f       	sbci	r31, 0xFA	; 250
    30b8:	80 83       	st	Z, r24
    30ba:	c6 01       	movw	r24, r12
    30bc:	0e 94 a0 05 	call	0xb40	; 0xb40 <initTxRxMapFromPorts>
    30c0:	2b 01       	movw	r4, r22
    30c2:	3c 01       	movw	r6, r24
    30c4:	60 e0       	ldi	r22, 0x00	; 0
    30c6:	46 c4       	rjmp	.+2188   	; 0x3954 <TMR_SR_paramSet+0xd24>
    30c8:	19 82       	std	Y+1, r1	; 0x01
    30ca:	40 e0       	ldi	r20, 0x00	; 0
    30cc:	50 e0       	ldi	r21, 0x00	; 0
    30ce:	15 c0       	rjmp	.+42     	; 0x30fa <TMR_SR_paramSet+0x4ca>
    30d0:	d5 01       	movw	r26, r10
    30d2:	ed 91       	ld	r30, X+
    30d4:	fc 91       	ld	r31, X
    30d6:	e4 0f       	add	r30, r20
    30d8:	f5 1f       	adc	r31, r21
    30da:	20 81       	ld	r18, Z
    30dc:	30 e0       	ldi	r19, 0x00	; 0
    30de:	21 50       	subi	r18, 0x01	; 1
    30e0:	31 09       	sbc	r19, r1
    30e2:	81 e0       	ldi	r24, 0x01	; 1
    30e4:	90 e0       	ldi	r25, 0x00	; 0
    30e6:	02 c0       	rjmp	.+4      	; 0x30ec <TMR_SR_paramSet+0x4bc>
    30e8:	88 0f       	add	r24, r24
    30ea:	99 1f       	adc	r25, r25
    30ec:	2a 95       	dec	r18
    30ee:	e2 f7       	brpl	.-8      	; 0x30e8 <TMR_SR_paramSet+0x4b8>
    30f0:	99 81       	ldd	r25, Y+1	; 0x01
    30f2:	89 2b       	or	r24, r25
    30f4:	89 83       	std	Y+1, r24	; 0x01
    30f6:	4f 5f       	subi	r20, 0xFF	; 255
    30f8:	5f 4f       	sbci	r21, 0xFF	; 255
    30fa:	f5 01       	movw	r30, r10
    30fc:	84 81       	ldd	r24, Z+4	; 0x04
    30fe:	95 81       	ldd	r25, Z+5	; 0x05
    3100:	48 17       	cp	r20, r24
    3102:	59 07       	cpc	r21, r25
    3104:	28 f4       	brcc	.+10     	; 0x3110 <TMR_SR_paramSet+0x4e0>
    3106:	82 81       	ldd	r24, Z+2	; 0x02
    3108:	93 81       	ldd	r25, Z+3	; 0x03
    310a:	48 17       	cp	r20, r24
    310c:	59 07       	cpc	r21, r25
    310e:	00 f3       	brcs	.-64     	; 0x30d0 <TMR_SR_paramSet+0x4a0>
    3110:	ae 01       	movw	r20, r28
    3112:	4f 5f       	subi	r20, 0xFF	; 255
    3114:	5f 4f       	sbci	r21, 0xFF	; 255
    3116:	6e e1       	ldi	r22, 0x1E	; 30
    3118:	c6 01       	movw	r24, r12
    311a:	0e 94 9d 4d 	call	0x9b3a	; 0x9b3a <TMR_SR_cmdSetReaderConfiguration>
    311e:	2b 01       	movw	r4, r22
    3120:	3c 01       	movw	r6, r24
    3122:	60 e0       	ldi	r22, 0x00	; 0
    3124:	17 c4       	rjmp	.+2094   	; 0x3954 <TMR_SR_paramSet+0xd24>
    3126:	f6 01       	movw	r30, r12
    3128:	ec 52       	subi	r30, 0x2C	; 44
    312a:	fe 4f       	sbci	r31, 0xFE	; 254
    312c:	80 81       	ld	r24, Z
    312e:	91 81       	ldd	r25, Z+1	; 0x01
    3130:	89 2b       	or	r24, r25
    3132:	59 f4       	brne	.+22     	; 0x314a <TMR_SR_paramSet+0x51a>
    3134:	c6 01       	movw	r24, r12
    3136:	0e 94 a0 05 	call	0xb40	; 0xb40 <initTxRxMapFromPorts>
    313a:	2b 01       	movw	r4, r22
    313c:	3c 01       	movw	r6, r24
    313e:	61 15       	cp	r22, r1
    3140:	71 05       	cpc	r23, r1
    3142:	81 05       	cpc	r24, r1
    3144:	91 05       	cpc	r25, r1
    3146:	21 f0       	breq	.+8      	; 0x3150 <TMR_SR_paramSet+0x520>
    3148:	9b c4       	rjmp	.+2358   	; 0x3a80 <TMR_SR_paramSet+0xe50>
    314a:	41 2c       	mov	r4, r1
    314c:	51 2c       	mov	r5, r1
    314e:	32 01       	movw	r6, r4
    3150:	f6 01       	movw	r30, r12
    3152:	ec 52       	subi	r30, 0x2C	; 44
    3154:	fe 4f       	sbci	r31, 0xFE	; 254
    3156:	80 81       	ld	r24, Z
    3158:	91 81       	ldd	r25, Z+1	; 0x01
    315a:	98 a3       	std	Y+32, r25	; 0x20
    315c:	8f 8f       	std	Y+31, r24	; 0x1f
    315e:	d5 01       	movw	r26, r10
    3160:	13 96       	adiw	r26, 0x03	; 3
    3162:	2c 90       	ld	r2, X
    3164:	fc 01       	movw	r30, r24
    3166:	83 80       	ldd	r8, Z+3	; 0x03
    3168:	82 14       	cp	r8, r2
    316a:	08 f4       	brcc	.+2      	; 0x316e <TMR_SR_paramSet+0x53e>
    316c:	d0 c3       	rjmp	.+1952   	; 0x390e <TMR_SR_paramSet+0xcde>
    316e:	20 e0       	ldi	r18, 0x00	; 0
    3170:	30 e0       	ldi	r19, 0x00	; 0
    3172:	91 2c       	mov	r9, r1
    3174:	56 c0       	rjmp	.+172    	; 0x3222 <TMR_SR_paramSet+0x5f2>
    3176:	d5 01       	movw	r26, r10
    3178:	6d 91       	ld	r22, X+
    317a:	7c 91       	ld	r23, X
    317c:	f9 01       	movw	r30, r18
    317e:	ee 0f       	add	r30, r30
    3180:	ff 1f       	adc	r31, r31
    3182:	e2 0f       	add	r30, r18
    3184:	f3 1f       	adc	r31, r19
    3186:	e6 0f       	add	r30, r22
    3188:	f7 1f       	adc	r31, r23
    318a:	91 80       	ldd	r9, Z+1	; 0x01
    318c:	af 8d       	ldd	r26, Y+31	; 0x1f
    318e:	b8 a1       	ldd	r27, Y+32	; 0x20
    3190:	6d 91       	ld	r22, X+
    3192:	7c 91       	ld	r23, X
    3194:	dc 01       	movw	r26, r24
    3196:	aa 0f       	add	r26, r26
    3198:	bb 1f       	adc	r27, r27
    319a:	a8 0f       	add	r26, r24
    319c:	b9 1f       	adc	r27, r25
    319e:	a6 0f       	add	r26, r22
    31a0:	b7 1f       	adc	r27, r23
    31a2:	6c 91       	ld	r22, X
    31a4:	96 12       	cpse	r9, r22
    31a6:	03 c0       	rjmp	.+6      	; 0x31ae <TMR_SR_paramSet+0x57e>
    31a8:	62 81       	ldd	r22, Z+2	; 0x02
    31aa:	96 16       	cp	r9, r22
    31ac:	49 f0       	breq	.+18     	; 0x31c0 <TMR_SR_paramSet+0x590>
    31ae:	01 96       	adiw	r24, 0x01	; 1
    31b0:	02 c0       	rjmp	.+4      	; 0x31b6 <TMR_SR_paramSet+0x586>
    31b2:	80 e0       	ldi	r24, 0x00	; 0
    31b4:	90 e0       	ldi	r25, 0x00	; 0
    31b6:	48 2d       	mov	r20, r8
    31b8:	50 e0       	ldi	r21, 0x00	; 0
    31ba:	84 17       	cp	r24, r20
    31bc:	95 07       	cpc	r25, r21
    31be:	d8 f2       	brcs	.-74     	; 0x3176 <TMR_SR_paramSet+0x546>
    31c0:	84 17       	cp	r24, r20
    31c2:	95 07       	cpc	r25, r21
    31c4:	09 f4       	brne	.+2      	; 0x31c8 <TMR_SR_paramSet+0x598>
    31c6:	60 c4       	rjmp	.+2240   	; 0x3a88 <TMR_SR_paramSet+0xe58>
    31c8:	f9 01       	movw	r30, r18
    31ca:	31 96       	adiw	r30, 0x01	; 1
    31cc:	fa a3       	std	Y+34, r31	; 0x22
    31ce:	e9 a3       	std	Y+33, r30	; 0x21
    31d0:	af 01       	movw	r20, r30
    31d2:	1f c0       	rjmp	.+62     	; 0x3212 <TMR_SR_paramSet+0x5e2>
    31d4:	d5 01       	movw	r26, r10
    31d6:	6d 91       	ld	r22, X+
    31d8:	7c 91       	ld	r23, X
    31da:	f9 01       	movw	r30, r18
    31dc:	ee 0f       	add	r30, r30
    31de:	ff 1f       	adc	r31, r31
    31e0:	e2 0f       	add	r30, r18
    31e2:	f3 1f       	adc	r31, r19
    31e4:	e6 0f       	add	r30, r22
    31e6:	f7 1f       	adc	r31, r23
    31e8:	90 80       	ld	r9, Z
    31ea:	ca 01       	movw	r24, r20
    31ec:	88 0f       	add	r24, r24
    31ee:	99 1f       	adc	r25, r25
    31f0:	84 0f       	add	r24, r20
    31f2:	95 1f       	adc	r25, r21
    31f4:	db 01       	movw	r26, r22
    31f6:	a8 0f       	add	r26, r24
    31f8:	b9 1f       	adc	r27, r25
    31fa:	8c 91       	ld	r24, X
    31fc:	98 16       	cp	r9, r24
    31fe:	09 f4       	brne	.+2      	; 0x3202 <TMR_SR_paramSet+0x5d2>
    3200:	48 c4       	rjmp	.+2192   	; 0x3a92 <TMR_SR_paramSet+0xe62>
    3202:	91 81       	ldd	r25, Z+1	; 0x01
    3204:	11 96       	adiw	r26, 0x01	; 1
    3206:	8c 91       	ld	r24, X
    3208:	98 17       	cp	r25, r24
    320a:	09 f4       	brne	.+2      	; 0x320e <TMR_SR_paramSet+0x5de>
    320c:	47 c4       	rjmp	.+2190   	; 0x3a9c <TMR_SR_paramSet+0xe6c>
    320e:	4f 5f       	subi	r20, 0xFF	; 255
    3210:	5f 4f       	sbci	r21, 0xFF	; 255
    3212:	40 17       	cp	r20, r16
    3214:	51 07       	cpc	r21, r17
    3216:	f0 f2       	brcs	.-68     	; 0x31d4 <TMR_SR_paramSet+0x5a4>
    3218:	99 24       	eor	r9, r9
    321a:	93 94       	inc	r9
    321c:	92 0e       	add	r9, r18
    321e:	29 a1       	ldd	r18, Y+33	; 0x21
    3220:	3a a1       	ldd	r19, Y+34	; 0x22
    3222:	02 2d       	mov	r16, r2
    3224:	10 e0       	ldi	r17, 0x00	; 0
    3226:	20 17       	cp	r18, r16
    3228:	31 07       	cpc	r19, r17
    322a:	18 f2       	brcs	.-122    	; 0x31b2 <TMR_SR_paramSet+0x582>
    322c:	40 e0       	ldi	r20, 0x00	; 0
    322e:	50 e0       	ldi	r21, 0x00	; 0
    3230:	19 c0       	rjmp	.+50     	; 0x3264 <TMR_SR_paramSet+0x634>
    3232:	af 8d       	ldd	r26, Y+31	; 0x1f
    3234:	b8 a1       	ldd	r27, Y+32	; 0x20
    3236:	ed 91       	ld	r30, X+
    3238:	fc 91       	ld	r31, X
    323a:	9a 01       	movw	r18, r20
    323c:	22 0f       	add	r18, r18
    323e:	33 1f       	adc	r19, r19
    3240:	24 0f       	add	r18, r20
    3242:	35 1f       	adc	r19, r21
    3244:	e2 0f       	add	r30, r18
    3246:	f3 1f       	adc	r31, r19
    3248:	d5 01       	movw	r26, r10
    324a:	6d 91       	ld	r22, X+
    324c:	7c 91       	ld	r23, X
    324e:	db 01       	movw	r26, r22
    3250:	a2 0f       	add	r26, r18
    3252:	b3 1f       	adc	r27, r19
    3254:	8d 91       	ld	r24, X+
    3256:	9d 91       	ld	r25, X+
    3258:	ac 91       	ld	r26, X
    325a:	80 83       	st	Z, r24
    325c:	91 83       	std	Z+1, r25	; 0x01
    325e:	a2 83       	std	Z+2, r26	; 0x02
    3260:	4f 5f       	subi	r20, 0xFF	; 255
    3262:	5f 4f       	sbci	r21, 0xFF	; 255
    3264:	29 2d       	mov	r18, r9
    3266:	30 e0       	ldi	r19, 0x00	; 0
    3268:	42 17       	cp	r20, r18
    326a:	53 07       	cpc	r21, r19
    326c:	10 f3       	brcs	.-60     	; 0x3232 <TMR_SR_paramSet+0x602>
    326e:	ef 8d       	ldd	r30, Y+31	; 0x1f
    3270:	f8 a1       	ldd	r31, Y+32	; 0x20
    3272:	93 82       	std	Z+3, r9	; 0x03
    3274:	81 e0       	ldi	r24, 0x01	; 1
    3276:	f6 01       	movw	r30, r12
    3278:	ee 50       	subi	r30, 0x0E	; 14
    327a:	fa 4f       	sbci	r31, 0xFA	; 250
    327c:	80 83       	st	Z, r24
    327e:	60 e0       	ldi	r22, 0x00	; 0
    3280:	69 c3       	rjmp	.+1746   	; 0x3954 <TMR_SR_paramSet+0xd24>
    3282:	d5 01       	movw	r26, r10
    3284:	4d 91       	ld	r20, X+
    3286:	5c 91       	ld	r21, X
    3288:	11 97       	sbiw	r26, 0x01	; 1
    328a:	14 96       	adiw	r26, 0x04	; 4
    328c:	6c 91       	ld	r22, X
    328e:	c6 01       	movw	r24, r12
    3290:	0e 94 f1 4b 	call	0x97e2	; 0x97e2 <TMR_SR_cmdSetFrequencyHopTable>
    3294:	2b 01       	movw	r4, r22
    3296:	3c 01       	movw	r6, r24
    3298:	60 e0       	ldi	r22, 0x00	; 0
    329a:	5c c3       	rjmp	.+1720   	; 0x3954 <TMR_SR_paramSet+0xd24>
    329c:	f5 01       	movw	r30, r10
    329e:	40 81       	ld	r20, Z
    32a0:	51 81       	ldd	r21, Z+1	; 0x01
    32a2:	62 81       	ldd	r22, Z+2	; 0x02
    32a4:	73 81       	ldd	r23, Z+3	; 0x03
    32a6:	21 e0       	ldi	r18, 0x01	; 1
    32a8:	c6 01       	movw	r24, r12
    32aa:	0e 94 64 4c 	call	0x98c8	; 0x98c8 <TMR_SR_cmdSetFrequencyHopTableOption>
    32ae:	2b 01       	movw	r4, r22
    32b0:	3c 01       	movw	r6, r24
    32b2:	60 e0       	ldi	r22, 0x00	; 0
    32b4:	4f c3       	rjmp	.+1694   	; 0x3954 <TMR_SR_paramSet+0xd24>
    32b6:	d5 01       	movw	r26, r10
    32b8:	4d 91       	ld	r20, X+
    32ba:	5c 91       	ld	r21, X
    32bc:	f6 01       	movw	r30, r12
    32be:	ec 51       	subi	r30, 0x1C	; 28
    32c0:	fe 4f       	sbci	r31, 0xFE	; 254
    32c2:	60 81       	ld	r22, Z
    32c4:	c6 01       	movw	r24, r12
    32c6:	0e 94 18 4d 	call	0x9a30	; 0x9a30 <TMR_SR_cmdSetRegionDwellTime>
    32ca:	2b 01       	movw	r4, r22
    32cc:	3c 01       	movw	r6, r24
    32ce:	60 e0       	ldi	r22, 0x00	; 0
    32d0:	41 c3       	rjmp	.+1666   	; 0x3954 <TMR_SR_paramSet+0xd24>
    32d2:	f5 01       	movw	r30, r10
    32d4:	40 81       	ld	r20, Z
    32d6:	f6 01       	movw	r30, r12
    32d8:	ec 51       	subi	r30, 0x1C	; 28
    32da:	fe 4f       	sbci	r31, 0xFE	; 254
    32dc:	60 81       	ld	r22, Z
    32de:	c6 01       	movw	r24, r12
    32e0:	0e 94 15 4d 	call	0x9a2a	; 0x9a2a <TMR_SR_cmdSetRegionDwellTimeEnable>
    32e4:	2b 01       	movw	r4, r22
    32e6:	3c 01       	movw	r6, r24
    32e8:	60 e0       	ldi	r22, 0x00	; 0
    32ea:	34 c3       	rjmp	.+1640   	; 0x3954 <TMR_SR_paramSet+0xd24>
    32ec:	d5 01       	movw	r26, r10
    32ee:	4c 91       	ld	r20, X
    32f0:	f6 01       	movw	r30, r12
    32f2:	ec 51       	subi	r30, 0x1C	; 28
    32f4:	fe 4f       	sbci	r31, 0xFE	; 254
    32f6:	60 81       	ld	r22, Z
    32f8:	c6 01       	movw	r24, r12
    32fa:	0e 94 44 4d 	call	0x9a88	; 0x9a88 <TMR_SR_cmdSetRegionLbtThreshold>
    32fe:	2b 01       	movw	r4, r22
    3300:	3c 01       	movw	r6, r24
    3302:	60 e0       	ldi	r22, 0x00	; 0
    3304:	27 c3       	rjmp	.+1614   	; 0x3954 <TMR_SR_paramSet+0xd24>
    3306:	f5 01       	movw	r30, r10
    3308:	40 81       	ld	r20, Z
    330a:	f6 01       	movw	r30, r12
    330c:	ec 51       	subi	r30, 0x1C	; 28
    330e:	fe 4f       	sbci	r31, 0xFE	; 254
    3310:	60 81       	ld	r22, Z
    3312:	c6 01       	movw	r24, r12
    3314:	0e 94 6f 4d 	call	0x9ade	; 0x9ade <TMR_SR_cmdSetRegionLbt>
    3318:	2b 01       	movw	r4, r22
    331a:	3c 01       	movw	r6, r24
    331c:	60 e0       	ldi	r22, 0x00	; 0
    331e:	1a c3       	rjmp	.+1588   	; 0x3954 <TMR_SR_paramSet+0xd24>
    3320:	f6 01       	movw	r30, r12
    3322:	ec 52       	subi	r30, 0x2C	; 44
    3324:	fe 4f       	sbci	r31, 0xFE	; 254
    3326:	80 81       	ld	r24, Z
    3328:	91 81       	ldd	r25, Z+1	; 0x01
    332a:	89 2b       	or	r24, r25
    332c:	59 f4       	brne	.+22     	; 0x3344 <TMR_SR_paramSet+0x714>
    332e:	c6 01       	movw	r24, r12
    3330:	0e 94 a0 05 	call	0xb40	; 0xb40 <initTxRxMapFromPorts>
    3334:	8b 01       	movw	r16, r22
    3336:	9c 01       	movw	r18, r24
    3338:	61 15       	cp	r22, r1
    333a:	71 05       	cpc	r23, r1
    333c:	81 05       	cpc	r24, r1
    333e:	91 05       	cpc	r25, r1
    3340:	09 f0       	breq	.+2      	; 0x3344 <TMR_SR_paramSet+0x714>
    3342:	b1 c3       	rjmp	.+1890   	; 0x3aa6 <TMR_SR_paramSet+0xe76>
    3344:	f6 01       	movw	r30, r12
    3346:	ec 52       	subi	r30, 0x2C	; 44
    3348:	fe 4f       	sbci	r31, 0xFE	; 254
    334a:	a0 81       	ld	r26, Z
    334c:	b1 81       	ldd	r27, Z+1	; 0x01
    334e:	f5 01       	movw	r30, r10
    3350:	60 81       	ld	r22, Z
    3352:	80 e0       	ldi	r24, 0x00	; 0
    3354:	19 c0       	rjmp	.+50     	; 0x3388 <TMR_SR_paramSet+0x758>
    3356:	ed 91       	ld	r30, X+
    3358:	fc 91       	ld	r31, X
    335a:	11 97       	sbiw	r26, 0x01	; 1
    335c:	28 2f       	mov	r18, r24
    335e:	30 e0       	ldi	r19, 0x00	; 0
    3360:	a9 01       	movw	r20, r18
    3362:	44 0f       	add	r20, r20
    3364:	55 1f       	adc	r21, r21
    3366:	24 0f       	add	r18, r20
    3368:	35 1f       	adc	r19, r21
    336a:	e2 0f       	add	r30, r18
    336c:	f3 1f       	adc	r31, r19
    336e:	90 81       	ld	r25, Z
    3370:	69 13       	cpse	r22, r25
    3372:	09 c0       	rjmp	.+18     	; 0x3386 <TMR_SR_paramSet+0x756>
    3374:	f6 01       	movw	r30, r12
    3376:	64 ab       	std	Z+52, r22	; 0x34
    3378:	8d 91       	ld	r24, X+
    337a:	9c 91       	ld	r25, X
    337c:	fc 01       	movw	r30, r24
    337e:	e2 0f       	add	r30, r18
    3380:	f3 1f       	adc	r31, r19
    3382:	61 81       	ldd	r22, Z+1	; 0x01
    3384:	0b c0       	rjmp	.+22     	; 0x339c <TMR_SR_paramSet+0x76c>
    3386:	8f 5f       	subi	r24, 0xFF	; 255
    3388:	13 96       	adiw	r26, 0x03	; 3
    338a:	9c 91       	ld	r25, X
    338c:	13 97       	sbiw	r26, 0x03	; 3
    338e:	89 17       	cp	r24, r25
    3390:	28 f4       	brcc	.+10     	; 0x339c <TMR_SR_paramSet+0x76c>
    3392:	12 96       	adiw	r26, 0x02	; 2
    3394:	9c 91       	ld	r25, X
    3396:	12 97       	sbiw	r26, 0x02	; 2
    3398:	89 17       	cp	r24, r25
    339a:	e8 f2       	brcs	.-70     	; 0x3356 <TMR_SR_paramSet+0x726>
    339c:	66 23       	and	r22, r22
    339e:	09 f4       	brne	.+2      	; 0x33a2 <TMR_SR_paramSet+0x772>
    33a0:	c0 c2       	rjmp	.+1408   	; 0x3922 <TMR_SR_paramSet+0xcf2>
    33a2:	40 e0       	ldi	r20, 0x00	; 0
    33a4:	c6 01       	movw	r24, r12
    33a6:	0e 94 c4 49 	call	0x9388	; 0x9388 <TMR_SR_cmdSetTxRxPorts>
    33aa:	2b 01       	movw	r4, r22
    33ac:	3c 01       	movw	r6, r24
    33ae:	60 e0       	ldi	r22, 0x00	; 0
    33b0:	d1 c2       	rjmp	.+1442   	; 0x3954 <TMR_SR_paramSet+0xd24>
    33b2:	d5 01       	movw	r26, r10
    33b4:	6c 91       	ld	r22, X
    33b6:	c6 01       	movw	r24, r12
    33b8:	0e 94 11 04 	call	0x822	; 0x822 <setProtocol>
    33bc:	2b 01       	movw	r4, r22
    33be:	3c 01       	movw	r6, r24
    33c0:	67 2b       	or	r22, r23
    33c2:	68 2b       	or	r22, r24
    33c4:	69 2b       	or	r22, r25
    33c6:	09 f0       	breq	.+2      	; 0x33ca <TMR_SR_paramSet+0x79a>
    33c8:	b6 c2       	rjmp	.+1388   	; 0x3936 <TMR_SR_paramSet+0xd06>
    33ca:	f5 01       	movw	r30, r10
    33cc:	80 81       	ld	r24, Z
    33ce:	d6 01       	movw	r26, r12
    33d0:	d5 96       	adiw	r26, 0x35	; 53
    33d2:	8c 93       	st	X, r24
    33d4:	f6 01       	movw	r30, r12
    33d6:	ee 5d       	subi	r30, 0xDE	; 222
    33d8:	f9 4f       	sbci	r31, 0xF9	; 249
    33da:	10 82       	st	Z, r1
    33dc:	60 e0       	ldi	r22, 0x00	; 0
    33de:	ba c2       	rjmp	.+1396   	; 0x3954 <TMR_SR_paramSet+0xd24>
    33e0:	8e e1       	ldi	r24, 0x1E	; 30
    33e2:	f5 01       	movw	r30, r10
    33e4:	de 01       	movw	r26, r28
    33e6:	11 96       	adiw	r26, 0x01	; 1
    33e8:	01 90       	ld	r0, Z+
    33ea:	0d 92       	st	X+, r0
    33ec:	8a 95       	dec	r24
    33ee:	e1 f7       	brne	.-8      	; 0x33e8 <TMR_SR_paramSet+0x7b8>
    33f0:	f6 01       	movw	r30, r12
    33f2:	e9 5e       	subi	r30, 0xE9	; 233
    33f4:	f9 4f       	sbci	r31, 0xF9	; 249
    33f6:	10 82       	st	Z, r1
    33f8:	ea 59       	subi	r30, 0x9A	; 154
    33fa:	f2 40       	sbci	r31, 0x02	; 2
    33fc:	00 81       	ld	r16, Z
    33fe:	11 81       	ldd	r17, Z+1	; 0x01
    3400:	22 81       	ldd	r18, Z+2	; 0x02
    3402:	33 81       	ldd	r19, Z+3	; 0x03
    3404:	e9 5a       	subi	r30, 0xA9	; 169
    3406:	f1 40       	sbci	r31, 0x01	; 1
    3408:	40 81       	ld	r20, Z
    340a:	51 81       	ldd	r21, Z+1	; 0x01
    340c:	be 01       	movw	r22, r28
    340e:	6f 5f       	subi	r22, 0xFF	; 255
    3410:	7f 4f       	sbci	r23, 0xFF	; 255
    3412:	c6 01       	movw	r24, r12
    3414:	0e 94 c1 6a 	call	0xd582	; 0xd582 <validateReadPlan>
    3418:	2b 01       	movw	r4, r22
    341a:	3c 01       	movw	r6, r24
    341c:	61 15       	cp	r22, r1
    341e:	71 05       	cpc	r23, r1
    3420:	81 05       	cpc	r24, r1
    3422:	91 05       	cpc	r25, r1
    3424:	a1 f5       	brne	.+104    	; 0x348e <TMR_SR_paramSet+0x85e>
    3426:	f5 01       	movw	r30, r10
    3428:	80 81       	ld	r24, Z
    342a:	81 30       	cpi	r24, 0x01	; 1
    342c:	21 f5       	brne	.+72     	; 0x3476 <TMR_SR_paramSet+0x846>
    342e:	f6 01       	movw	r30, r12
    3430:	ee 5d       	subi	r30, 0xDE	; 222
    3432:	f9 4f       	sbci	r31, 0xF9	; 249
    3434:	80 81       	ld	r24, Z
    3436:	81 11       	cpse	r24, r1
    3438:	0d c0       	rjmp	.+26     	; 0x3454 <TMR_SR_paramSet+0x824>
    343a:	d5 01       	movw	r26, r10
    343c:	1c 96       	adiw	r26, 0x0c	; 12
    343e:	6c 91       	ld	r22, X
    3440:	c6 01       	movw	r24, r12
    3442:	0e 94 11 04 	call	0x822	; 0x822 <setProtocol>
    3446:	8b 01       	movw	r16, r22
    3448:	9c 01       	movw	r18, r24
    344a:	61 15       	cp	r22, r1
    344c:	71 05       	cpc	r23, r1
    344e:	81 05       	cpc	r24, r1
    3450:	91 05       	cpc	r25, r1
    3452:	09 f5       	brne	.+66     	; 0x3496 <TMR_SR_paramSet+0x866>
    3454:	be 01       	movw	r22, r28
    3456:	6f 5f       	subi	r22, 0xFF	; 255
    3458:	7f 4f       	sbci	r23, 0xFF	; 255
    345a:	c6 01       	movw	r24, r12
    345c:	6a db       	rcall	.-2348   	; 0x2b32 <prepForSearch>
    345e:	2b 01       	movw	r4, r22
    3460:	3c 01       	movw	r6, r24
    3462:	61 15       	cp	r22, r1
    3464:	71 05       	cpc	r23, r1
    3466:	81 05       	cpc	r24, r1
    3468:	91 05       	cpc	r25, r1
    346a:	c9 f4       	brne	.+50     	; 0x349e <TMR_SR_paramSet+0x86e>
    346c:	81 e0       	ldi	r24, 0x01	; 1
    346e:	f6 01       	movw	r30, r12
    3470:	e9 5e       	subi	r30, 0xE9	; 233
    3472:	f9 4f       	sbci	r31, 0xF9	; 249
    3474:	80 83       	st	Z, r24
    3476:	f6 01       	movw	r30, r12
    3478:	a2 a9       	ldd	r26, Z+50	; 0x32
    347a:	b3 a9       	ldd	r27, Z+51	; 0x33
    347c:	8e e1       	ldi	r24, 0x1E	; 30
    347e:	fe 01       	movw	r30, r28
    3480:	31 96       	adiw	r30, 0x01	; 1
    3482:	01 90       	ld	r0, Z+
    3484:	0d 92       	st	X+, r0
    3486:	8a 95       	dec	r24
    3488:	e1 f7       	brne	.-8      	; 0x3482 <TMR_SR_paramSet+0x852>
    348a:	60 e0       	ldi	r22, 0x00	; 0
    348c:	63 c2       	rjmp	.+1222   	; 0x3954 <TMR_SR_paramSet+0xd24>
    348e:	75 2d       	mov	r23, r5
    3490:	86 2d       	mov	r24, r6
    3492:	97 2d       	mov	r25, r7
    3494:	1e c3       	rjmp	.+1596   	; 0x3ad2 <TMR_SR_paramSet+0xea2>
    3496:	71 2f       	mov	r23, r17
    3498:	82 2f       	mov	r24, r18
    349a:	93 2f       	mov	r25, r19
    349c:	1a c3       	rjmp	.+1588   	; 0x3ad2 <TMR_SR_paramSet+0xea2>
    349e:	75 2d       	mov	r23, r5
    34a0:	86 2d       	mov	r24, r6
    34a2:	97 2d       	mov	r25, r7
    34a4:	16 c3       	rjmp	.+1580   	; 0x3ad2 <TMR_SR_paramSet+0xea2>
    34a6:	f0 e1       	ldi	r31, 0x10	; 16
    34a8:	ff 12       	cpse	r15, r31
    34aa:	03 c0       	rjmp	.+6      	; 0x34b2 <TMR_SR_paramSet+0x882>
    34ac:	81 2c       	mov	r8, r1
    34ae:	91 2c       	mov	r9, r1
    34b0:	05 c0       	rjmp	.+10     	; 0x34bc <TMR_SR_paramSet+0x88c>
    34b2:	0f 2e       	mov	r0, r31
    34b4:	fe e1       	ldi	r31, 0x1E	; 30
    34b6:	8f 2e       	mov	r8, r31
    34b8:	91 2c       	mov	r9, r1
    34ba:	f0 2d       	mov	r31, r0
    34bc:	20 e0       	ldi	r18, 0x00	; 0
    34be:	30 e0       	ldi	r19, 0x00	; 0
    34c0:	26 c0       	rjmp	.+76     	; 0x350e <TMR_SR_paramSet+0x8de>
    34c2:	80 e1       	ldi	r24, 0x10	; 16
    34c4:	f8 12       	cpse	r15, r24
    34c6:	10 c0       	rjmp	.+32     	; 0x34e8 <TMR_SR_paramSet+0x8b8>
    34c8:	d5 01       	movw	r26, r10
    34ca:	8d 91       	ld	r24, X+
    34cc:	9c 91       	ld	r25, X
    34ce:	e8 0f       	add	r30, r24
    34d0:	f9 1f       	adc	r31, r25
    34d2:	81 e0       	ldi	r24, 0x01	; 1
    34d4:	90 e0       	ldi	r25, 0x00	; 0
    34d6:	00 80       	ld	r0, Z
    34d8:	02 c0       	rjmp	.+4      	; 0x34de <TMR_SR_paramSet+0x8ae>
    34da:	88 0f       	add	r24, r24
    34dc:	99 1f       	adc	r25, r25
    34de:	0a 94       	dec	r0
    34e0:	e2 f7       	brpl	.-8      	; 0x34da <TMR_SR_paramSet+0x8aa>
    34e2:	88 2a       	or	r8, r24
    34e4:	99 2a       	or	r9, r25
    34e6:	11 c0       	rjmp	.+34     	; 0x350a <TMR_SR_paramSet+0x8da>
    34e8:	d5 01       	movw	r26, r10
    34ea:	8d 91       	ld	r24, X+
    34ec:	9c 91       	ld	r25, X
    34ee:	e8 0f       	add	r30, r24
    34f0:	f9 1f       	adc	r31, r25
    34f2:	81 e0       	ldi	r24, 0x01	; 1
    34f4:	90 e0       	ldi	r25, 0x00	; 0
    34f6:	00 80       	ld	r0, Z
    34f8:	02 c0       	rjmp	.+4      	; 0x34fe <TMR_SR_paramSet+0x8ce>
    34fa:	88 0f       	add	r24, r24
    34fc:	99 1f       	adc	r25, r25
    34fe:	0a 94       	dec	r0
    3500:	e2 f7       	brpl	.-8      	; 0x34fa <TMR_SR_paramSet+0x8ca>
    3502:	80 95       	com	r24
    3504:	90 95       	com	r25
    3506:	88 22       	and	r8, r24
    3508:	99 22       	and	r9, r25
    350a:	2f 5f       	subi	r18, 0xFF	; 255
    350c:	3f 4f       	sbci	r19, 0xFF	; 255
    350e:	f5 01       	movw	r30, r10
    3510:	84 81       	ldd	r24, Z+4	; 0x04
    3512:	95 81       	ldd	r25, Z+5	; 0x05
    3514:	f9 01       	movw	r30, r18
    3516:	28 17       	cp	r18, r24
    3518:	39 07       	cpc	r19, r25
    351a:	80 f5       	brcc	.+96     	; 0x357c <TMR_SR_paramSet+0x94c>
    351c:	d5 01       	movw	r26, r10
    351e:	12 96       	adiw	r26, 0x02	; 2
    3520:	8d 91       	ld	r24, X+
    3522:	9c 91       	ld	r25, X
    3524:	13 97       	sbiw	r26, 0x03	; 3
    3526:	28 17       	cp	r18, r24
    3528:	39 07       	cpc	r19, r25
    352a:	58 f2       	brcs	.-106    	; 0x34c2 <TMR_SR_paramSet+0x892>
    352c:	00 e0       	ldi	r16, 0x00	; 0
    352e:	10 e0       	ldi	r17, 0x00	; 0
    3530:	41 2c       	mov	r4, r1
    3532:	51 2c       	mov	r5, r1
    3534:	32 01       	movw	r6, r4
    3536:	27 c0       	rjmp	.+78     	; 0x3586 <TMR_SR_paramSet+0x956>
    3538:	d5 01       	movw	r26, r10
    353a:	ed 91       	ld	r30, X+
    353c:	fc 91       	ld	r31, X
    353e:	e0 0f       	add	r30, r16
    3540:	f1 1f       	adc	r31, r17
    3542:	60 81       	ld	r22, Z
    3544:	81 e0       	ldi	r24, 0x01	; 1
    3546:	90 e0       	ldi	r25, 0x00	; 0
    3548:	06 2e       	mov	r0, r22
    354a:	02 c0       	rjmp	.+4      	; 0x3550 <TMR_SR_paramSet+0x920>
    354c:	88 0f       	add	r24, r24
    354e:	99 1f       	adc	r25, r25
    3550:	0a 94       	dec	r0
    3552:	e2 f7       	brpl	.-8      	; 0x354c <TMR_SR_paramSet+0x91c>
    3554:	88 21       	and	r24, r8
    3556:	99 21       	and	r25, r9
    3558:	41 e0       	ldi	r20, 0x01	; 1
    355a:	89 2b       	or	r24, r25
    355c:	09 f4       	brne	.+2      	; 0x3560 <TMR_SR_paramSet+0x930>
    355e:	40 e0       	ldi	r20, 0x00	; 0
    3560:	c6 01       	movw	r24, r12
    3562:	0e 94 56 55 	call	0xaaac	; 0xaaac <TMR_SR_cmdSetGPIODirection>
    3566:	2b 01       	movw	r4, r22
    3568:	3c 01       	movw	r6, r24
    356a:	61 15       	cp	r22, r1
    356c:	71 05       	cpc	r23, r1
    356e:	81 05       	cpc	r24, r1
    3570:	91 05       	cpc	r25, r1
    3572:	09 f0       	breq	.+2      	; 0x3576 <TMR_SR_paramSet+0x946>
    3574:	9c c2       	rjmp	.+1336   	; 0x3aae <TMR_SR_paramSet+0xe7e>
    3576:	0f 5f       	subi	r16, 0xFF	; 255
    3578:	1f 4f       	sbci	r17, 0xFF	; 255
    357a:	05 c0       	rjmp	.+10     	; 0x3586 <TMR_SR_paramSet+0x956>
    357c:	00 e0       	ldi	r16, 0x00	; 0
    357e:	10 e0       	ldi	r17, 0x00	; 0
    3580:	41 2c       	mov	r4, r1
    3582:	51 2c       	mov	r5, r1
    3584:	32 01       	movw	r6, r4
    3586:	f5 01       	movw	r30, r10
    3588:	84 81       	ldd	r24, Z+4	; 0x04
    358a:	95 81       	ldd	r25, Z+5	; 0x05
    358c:	08 17       	cp	r16, r24
    358e:	19 07       	cpc	r17, r25
    3590:	98 f2       	brcs	.-90     	; 0x3538 <TMR_SR_paramSet+0x908>
    3592:	60 e0       	ldi	r22, 0x00	; 0
    3594:	df c1       	rjmp	.+958    	; 0x3954 <TMR_SR_paramSet+0xd24>
    3596:	d5 01       	movw	r26, r10
    3598:	6c 91       	ld	r22, X
    359a:	c6 01       	movw	r24, r12
    359c:	0e 94 97 4d 	call	0x9b2e	; 0x9b2e <TMR_SR_cmdSetPowerMode>
    35a0:	2b 01       	movw	r4, r22
    35a2:	3c 01       	movw	r6, r24
    35a4:	67 2b       	or	r22, r23
    35a6:	68 2b       	or	r22, r24
    35a8:	69 2b       	or	r22, r25
    35aa:	09 f0       	breq	.+2      	; 0x35ae <TMR_SR_paramSet+0x97e>
    35ac:	c6 c1       	rjmp	.+908    	; 0x393a <TMR_SR_paramSet+0xd0a>
    35ae:	f5 01       	movw	r30, r10
    35b0:	80 81       	ld	r24, Z
    35b2:	f6 01       	movw	r30, r12
    35b4:	ef 57       	subi	r30, 0x7F	; 127
    35b6:	fc 4f       	sbci	r31, 0xFC	; 252
    35b8:	80 83       	st	Z, r24
    35ba:	60 e0       	ldi	r22, 0x00	; 0
    35bc:	cb c1       	rjmp	.+918    	; 0x3954 <TMR_SR_paramSet+0xd24>
    35be:	d5 01       	movw	r26, r10
    35c0:	6c 91       	ld	r22, X
    35c2:	c6 01       	movw	r24, r12
    35c4:	0e 94 9a 4d 	call	0x9b34	; 0x9b34 <TMR_SR_cmdSetUserMode>
    35c8:	2b 01       	movw	r4, r22
    35ca:	3c 01       	movw	r6, r24
    35cc:	60 e0       	ldi	r22, 0x00	; 0
    35ce:	c2 c1       	rjmp	.+900    	; 0x3954 <TMR_SR_paramSet+0xd24>
    35d0:	0f 2e       	mov	r0, r31
    35d2:	f2 e1       	ldi	r31, 0x12	; 18
    35d4:	3f 2e       	mov	r3, r31
    35d6:	f0 2d       	mov	r31, r0
    35d8:	60 e0       	ldi	r22, 0x00	; 0
    35da:	41 2c       	mov	r4, r1
    35dc:	51 2c       	mov	r5, r1
    35de:	32 01       	movw	r6, r4
    35e0:	b9 c1       	rjmp	.+882    	; 0x3954 <TMR_SR_paramSet+0xd24>
    35e2:	68 94       	set
    35e4:	33 24       	eor	r3, r3
    35e6:	31 f8       	bld	r3, 1
    35e8:	60 e0       	ldi	r22, 0x00	; 0
    35ea:	41 2c       	mov	r4, r1
    35ec:	51 2c       	mov	r5, r1
    35ee:	32 01       	movw	r6, r4
    35f0:	b1 c1       	rjmp	.+866    	; 0x3954 <TMR_SR_paramSet+0xd24>
    35f2:	31 2c       	mov	r3, r1
    35f4:	60 e0       	ldi	r22, 0x00	; 0
    35f6:	41 2c       	mov	r4, r1
    35f8:	51 2c       	mov	r5, r1
    35fa:	32 01       	movw	r6, r4
    35fc:	ab c1       	rjmp	.+854    	; 0x3954 <TMR_SR_paramSet+0xd24>
    35fe:	33 24       	eor	r3, r3
    3600:	33 94       	inc	r3
    3602:	60 e0       	ldi	r22, 0x00	; 0
    3604:	41 2c       	mov	r4, r1
    3606:	51 2c       	mov	r5, r1
    3608:	32 01       	movw	r6, r4
    360a:	a4 c1       	rjmp	.+840    	; 0x3954 <TMR_SR_paramSet+0xd24>
    360c:	68 94       	set
    360e:	33 24       	eor	r3, r3
    3610:	34 f8       	bld	r3, 4
    3612:	60 e0       	ldi	r22, 0x00	; 0
    3614:	41 2c       	mov	r4, r1
    3616:	51 2c       	mov	r5, r1
    3618:	32 01       	movw	r6, r4
    361a:	9c c1       	rjmp	.+824    	; 0x3954 <TMR_SR_paramSet+0xd24>
    361c:	0f 2e       	mov	r0, r31
    361e:	f1 e1       	ldi	r31, 0x11	; 17
    3620:	3f 2e       	mov	r3, r31
    3622:	f0 2d       	mov	r31, r0
    3624:	60 e0       	ldi	r22, 0x00	; 0
    3626:	41 2c       	mov	r4, r1
    3628:	51 2c       	mov	r5, r1
    362a:	32 01       	movw	r6, r4
    362c:	93 c1       	rjmp	.+806    	; 0x3954 <TMR_SR_paramSet+0xd24>
    362e:	f5 01       	movw	r30, r10
    3630:	80 81       	ld	r24, Z
    3632:	f6 01       	movw	r30, r12
    3634:	e9 50       	subi	r30, 0x09	; 9
    3636:	fa 4f       	sbci	r31, 0xFA	; 250
    3638:	80 83       	st	Z, r24
    363a:	60 e0       	ldi	r22, 0x00	; 0
    363c:	41 2c       	mov	r4, r1
    363e:	51 2c       	mov	r5, r1
    3640:	32 01       	movw	r6, r4
    3642:	88 c1       	rjmp	.+784    	; 0x3954 <TMR_SR_paramSet+0xd24>
    3644:	0f 2e       	mov	r0, r31
    3646:	f3 e1       	ldi	r31, 0x13	; 19
    3648:	3f 2e       	mov	r3, r31
    364a:	f0 2d       	mov	r31, r0
    364c:	60 e0       	ldi	r22, 0x00	; 0
    364e:	41 2c       	mov	r4, r1
    3650:	51 2c       	mov	r5, r1
    3652:	32 01       	movw	r6, r4
    3654:	7f c1       	rjmp	.+766    	; 0x3954 <TMR_SR_paramSet+0xd24>
    3656:	0f 2e       	mov	r0, r31
    3658:	f5 e1       	ldi	r31, 0x15	; 21
    365a:	3f 2e       	mov	r3, r31
    365c:	f0 2d       	mov	r31, r0
    365e:	60 e0       	ldi	r22, 0x00	; 0
    3660:	41 2c       	mov	r4, r1
    3662:	51 2c       	mov	r5, r1
    3664:	32 01       	movw	r6, r4
    3666:	76 c1       	rjmp	.+748    	; 0x3954 <TMR_SR_paramSet+0xd24>
    3668:	0f 2e       	mov	r0, r31
    366a:	f6 e1       	ldi	r31, 0x16	; 22
    366c:	3f 2e       	mov	r3, r31
    366e:	f0 2d       	mov	r31, r0
    3670:	60 e0       	ldi	r22, 0x00	; 0
    3672:	41 2c       	mov	r4, r1
    3674:	51 2c       	mov	r5, r1
    3676:	32 01       	movw	r6, r4
    3678:	6d c1       	rjmp	.+730    	; 0x3954 <TMR_SR_paramSet+0xd24>
    367a:	0f 2e       	mov	r0, r31
    367c:	f7 e1       	ldi	r31, 0x17	; 23
    367e:	3f 2e       	mov	r3, r31
    3680:	f0 2d       	mov	r31, r0
    3682:	60 e0       	ldi	r22, 0x00	; 0
    3684:	41 2c       	mov	r4, r1
    3686:	51 2c       	mov	r5, r1
    3688:	32 01       	movw	r6, r4
    368a:	64 c1       	rjmp	.+712    	; 0x3954 <TMR_SR_paramSet+0xd24>
    368c:	b5 01       	movw	r22, r10
    368e:	c6 01       	movw	r24, r12
    3690:	0e 94 41 4b 	call	0x9682	; 0x9682 <TMR_SR_cmdSetProtocolList>
    3694:	2b 01       	movw	r4, r22
    3696:	3c 01       	movw	r6, r24
    3698:	67 2b       	or	r22, r23
    369a:	68 2b       	or	r22, r24
    369c:	69 2b       	or	r22, r25
    369e:	09 f0       	breq	.+2      	; 0x36a2 <TMR_SR_paramSet+0xa72>
    36a0:	4e c1       	rjmp	.+668    	; 0x393e <TMR_SR_paramSet+0xd0e>
    36a2:	81 e0       	ldi	r24, 0x01	; 1
    36a4:	f6 01       	movw	r30, r12
    36a6:	ee 5d       	subi	r30, 0xDE	; 222
    36a8:	f9 4f       	sbci	r31, 0xF9	; 249
    36aa:	80 83       	st	Z, r24
    36ac:	60 e0       	ldi	r22, 0x00	; 0
    36ae:	52 c1       	rjmp	.+676    	; 0x3954 <TMR_SR_paramSet+0xd24>
    36b0:	0f 2e       	mov	r0, r31
    36b2:	f9 e0       	ldi	r31, 0x09	; 9
    36b4:	ef 2e       	mov	r14, r31
    36b6:	f0 2d       	mov	r31, r0
    36b8:	68 94       	set
    36ba:	33 24       	eor	r3, r3
    36bc:	31 f8       	bld	r3, 1
    36be:	60 e0       	ldi	r22, 0x00	; 0
    36c0:	41 2c       	mov	r4, r1
    36c2:	51 2c       	mov	r5, r1
    36c4:	32 01       	movw	r6, r4
    36c6:	46 c1       	rjmp	.+652    	; 0x3954 <TMR_SR_paramSet+0xd24>
    36c8:	0f 2e       	mov	r0, r31
    36ca:	fa e0       	ldi	r31, 0x0A	; 10
    36cc:	ef 2e       	mov	r14, r31
    36ce:	f0 2d       	mov	r31, r0
    36d0:	68 94       	set
    36d2:	33 24       	eor	r3, r3
    36d4:	31 f8       	bld	r3, 1
    36d6:	60 e0       	ldi	r22, 0x00	; 0
    36d8:	41 2c       	mov	r4, r1
    36da:	51 2c       	mov	r5, r1
    36dc:	32 01       	movw	r6, r4
    36de:	3a c1       	rjmp	.+628    	; 0x3954 <TMR_SR_paramSet+0xd24>
    36e0:	0f 2e       	mov	r0, r31
    36e2:	fb e0       	ldi	r31, 0x0B	; 11
    36e4:	ef 2e       	mov	r14, r31
    36e6:	f0 2d       	mov	r31, r0
    36e8:	68 94       	set
    36ea:	33 24       	eor	r3, r3
    36ec:	31 f8       	bld	r3, 1
    36ee:	60 e0       	ldi	r22, 0x00	; 0
    36f0:	41 2c       	mov	r4, r1
    36f2:	51 2c       	mov	r5, r1
    36f4:	32 01       	movw	r6, r4
    36f6:	2e c1       	rjmp	.+604    	; 0x3954 <TMR_SR_paramSet+0xd24>
    36f8:	0f 2e       	mov	r0, r31
    36fa:	f4 e1       	ldi	r31, 0x14	; 20
    36fc:	ef 2e       	mov	r14, r31
    36fe:	f0 2d       	mov	r31, r0
    3700:	68 94       	set
    3702:	33 24       	eor	r3, r3
    3704:	31 f8       	bld	r3, 1
    3706:	60 e0       	ldi	r22, 0x00	; 0
    3708:	41 2c       	mov	r4, r1
    370a:	51 2c       	mov	r5, r1
    370c:	32 01       	movw	r6, r4
    370e:	22 c1       	rjmp	.+580    	; 0x3954 <TMR_SR_paramSet+0xd24>
    3710:	0f 2e       	mov	r0, r31
    3712:	f5 e1       	ldi	r31, 0x15	; 21
    3714:	ef 2e       	mov	r14, r31
    3716:	f0 2d       	mov	r31, r0
    3718:	68 94       	set
    371a:	33 24       	eor	r3, r3
    371c:	31 f8       	bld	r3, 1
    371e:	60 e0       	ldi	r22, 0x00	; 0
    3720:	41 2c       	mov	r4, r1
    3722:	51 2c       	mov	r5, r1
    3724:	32 01       	movw	r6, r4
    3726:	16 c1       	rjmp	.+556    	; 0x3954 <TMR_SR_paramSet+0xd24>
    3728:	0f 2e       	mov	r0, r31
    372a:	f4 e1       	ldi	r31, 0x14	; 20
    372c:	ef 2e       	mov	r14, r31
    372e:	f0 2d       	mov	r31, r0
    3730:	68 94       	set
    3732:	33 24       	eor	r3, r3
    3734:	32 f8       	bld	r3, 2
    3736:	60 e0       	ldi	r22, 0x00	; 0
    3738:	41 2c       	mov	r4, r1
    373a:	51 2c       	mov	r5, r1
    373c:	32 01       	movw	r6, r4
    373e:	0a c1       	rjmp	.+532    	; 0x3954 <TMR_SR_paramSet+0xd24>
    3740:	61 e2       	ldi	r22, 0x21	; 33
    3742:	41 2c       	mov	r4, r1
    3744:	51 2c       	mov	r5, r1
    3746:	32 01       	movw	r6, r4
    3748:	05 c1       	rjmp	.+522    	; 0x3954 <TMR_SR_paramSet+0xd24>
    374a:	f5 01       	movw	r30, r10
    374c:	80 81       	ld	r24, Z
    374e:	91 81       	ldd	r25, Z+1	; 0x01
    3750:	a2 81       	ldd	r26, Z+2	; 0x02
    3752:	b3 81       	ldd	r27, Z+3	; 0x03
    3754:	f6 01       	movw	r30, r12
    3756:	e8 52       	subi	r30, 0x28	; 40
    3758:	fe 4f       	sbci	r31, 0xFE	; 254
    375a:	80 83       	st	Z, r24
    375c:	91 83       	std	Z+1, r25	; 0x01
    375e:	a2 83       	std	Z+2, r26	; 0x02
    3760:	b3 83       	std	Z+3, r27	; 0x03
    3762:	60 e0       	ldi	r22, 0x00	; 0
    3764:	41 2c       	mov	r4, r1
    3766:	51 2c       	mov	r5, r1
    3768:	32 01       	movw	r6, r4
    376a:	f4 c0       	rjmp	.+488    	; 0x3954 <TMR_SR_paramSet+0xd24>
    376c:	d5 01       	movw	r26, r10
    376e:	14 96       	adiw	r26, 0x04	; 4
    3770:	2d 91       	ld	r18, X+
    3772:	3c 91       	ld	r19, X
    3774:	15 97       	sbiw	r26, 0x05	; 5
    3776:	4d 91       	ld	r20, X+
    3778:	5c 91       	ld	r21, X
    377a:	61 e0       	ldi	r22, 0x01	; 1
    377c:	c6 01       	movw	r24, r12
    377e:	0e 94 11 4e 	call	0x9c22	; 0x9c22 <TMR_SR_cmdSetProtocolLicenseKey>
    3782:	2b 01       	movw	r4, r22
    3784:	3c 01       	movw	r6, r24
    3786:	60 e0       	ldi	r22, 0x00	; 0
    3788:	e5 c0       	rjmp	.+458    	; 0x3954 <TMR_SR_paramSet+0xd24>
    378a:	a1 14       	cp	r10, r1
    378c:	b1 04       	cpc	r11, r1
    378e:	09 f4       	brne	.+2      	; 0x3792 <TMR_SR_paramSet+0xb62>
    3790:	d8 c0       	rjmp	.+432    	; 0x3942 <TMR_SR_paramSet+0xd12>
    3792:	d5 01       	movw	r26, r10
    3794:	11 96       	adiw	r26, 0x01	; 1
    3796:	ed 91       	ld	r30, X+
    3798:	fc 91       	ld	r31, X
    379a:	12 97       	sbiw	r26, 0x02	; 2
    379c:	24 81       	ldd	r18, Z+4	; 0x04
    379e:	35 81       	ldd	r19, Z+5	; 0x05
    37a0:	40 81       	ld	r20, Z
    37a2:	51 81       	ldd	r21, Z+1	; 0x01
    37a4:	6c 91       	ld	r22, X
    37a6:	c6 01       	movw	r24, r12
    37a8:	0e 94 11 4e 	call	0x9c22	; 0x9c22 <TMR_SR_cmdSetProtocolLicenseKey>
    37ac:	2b 01       	movw	r4, r22
    37ae:	3c 01       	movw	r6, r24
    37b0:	60 e0       	ldi	r22, 0x00	; 0
    37b2:	d0 c0       	rjmp	.+416    	; 0x3954 <TMR_SR_paramSet+0xd24>
    37b4:	f5 01       	movw	r30, r10
    37b6:	40 81       	ld	r20, Z
    37b8:	61 81       	ldd	r22, Z+1	; 0x01
    37ba:	21 e0       	ldi	r18, 0x01	; 1
    37bc:	c6 01       	movw	r24, r12
    37be:	0e 94 1f 5d 	call	0xba3e	; 0xba3e <TMR_SR_cmdSetUserProfile>
    37c2:	2b 01       	movw	r4, r22
    37c4:	3c 01       	movw	r6, r24
    37c6:	60 e0       	ldi	r22, 0x00	; 0
    37c8:	c5 c0       	rjmp	.+394    	; 0x3954 <TMR_SR_paramSet+0xd24>
    37ca:	6b e0       	ldi	r22, 0x0B	; 11
    37cc:	c6 01       	movw	r24, r12
    37ce:	0e 94 0b 63 	call	0xc616	; 0xc616 <TMR_SR_cmdResetReaderStatistics>
    37d2:	2b 01       	movw	r4, r22
    37d4:	3c 01       	movw	r6, r24
    37d6:	60 e0       	ldi	r22, 0x00	; 0
    37d8:	bd c0       	rjmp	.+378    	; 0x3954 <TMR_SR_paramSet+0xd24>
    37da:	61 ec       	ldi	r22, 0xC1	; 193
    37dc:	7f e0       	ldi	r23, 0x0F	; 15
    37de:	c6 01       	movw	r24, r12
    37e0:	0e 94 d7 66 	call	0xcdae	; 0xcdae <TMR_SR_cmdResetReaderStats>
    37e4:	2b 01       	movw	r4, r22
    37e6:	3c 01       	movw	r6, r24
    37e8:	60 e0       	ldi	r22, 0x00	; 0
    37ea:	b4 c0       	rjmp	.+360    	; 0x3954 <TMR_SR_paramSet+0xd24>
    37ec:	d5 01       	movw	r26, r10
    37ee:	8d 91       	ld	r24, X+
    37f0:	9c 91       	ld	r25, X
    37f2:	f6 01       	movw	r30, r12
    37f4:	eb 5e       	subi	r30, 0xEB	; 235
    37f6:	f9 4f       	sbci	r31, 0xF9	; 249
    37f8:	91 83       	std	Z+1, r25	; 0x01
    37fa:	80 83       	st	Z, r24
    37fc:	60 e0       	ldi	r22, 0x00	; 0
    37fe:	41 2c       	mov	r4, r1
    3800:	51 2c       	mov	r5, r1
    3802:	32 01       	movw	r6, r4
    3804:	a7 c0       	rjmp	.+334    	; 0x3954 <TMR_SR_paramSet+0xd24>
    3806:	ae 01       	movw	r20, r28
    3808:	4f 5f       	subi	r20, 0xFF	; 255
    380a:	5f 4f       	sbci	r21, 0xFF	; 255
    380c:	65 e0       	ldi	r22, 0x05	; 5
    380e:	c6 01       	movw	r24, r12
    3810:	0e 94 72 67 	call	0xcee4	; 0xcee4 <TMR_SR_cmdGetReaderWriteTimeOut>
    3814:	2b 01       	movw	r4, r22
    3816:	3c 01       	movw	r6, r24
    3818:	67 2b       	or	r22, r23
    381a:	68 2b       	or	r22, r24
    381c:	69 2b       	or	r22, r25
    381e:	d9 f4       	brne	.+54     	; 0x3856 <TMR_SR_paramSet+0xc26>
    3820:	b1 e5       	ldi	r27, 0x51	; 81
    3822:	fb 16       	cp	r15, r27
    3824:	21 f0       	breq	.+8      	; 0x382e <TMR_SR_paramSet+0xbfe>
    3826:	e2 e5       	ldi	r30, 0x52	; 82
    3828:	fe 16       	cp	r15, r30
    382a:	39 f0       	breq	.+14     	; 0x383a <TMR_SR_paramSet+0xc0a>
    382c:	0b c0       	rjmp	.+22     	; 0x3844 <TMR_SR_paramSet+0xc14>
    382e:	d5 01       	movw	r26, r10
    3830:	8d 91       	ld	r24, X+
    3832:	9c 91       	ld	r25, X
    3834:	9b 83       	std	Y+3, r25	; 0x03
    3836:	8a 83       	std	Y+2, r24	; 0x02
    3838:	05 c0       	rjmp	.+10     	; 0x3844 <TMR_SR_paramSet+0xc14>
    383a:	f5 01       	movw	r30, r10
    383c:	90 81       	ld	r25, Z
    383e:	81 e0       	ldi	r24, 0x01	; 1
    3840:	89 27       	eor	r24, r25
    3842:	89 83       	std	Y+1, r24	; 0x01
    3844:	ae 01       	movw	r20, r28
    3846:	4f 5f       	subi	r20, 0xFF	; 255
    3848:	5f 4f       	sbci	r21, 0xFF	; 255
    384a:	65 e0       	ldi	r22, 0x05	; 5
    384c:	c6 01       	movw	r24, r12
    384e:	0e 94 be 67 	call	0xcf7c	; 0xcf7c <TMR_SR_cmdSetReaderWriteTimeOut>
    3852:	2b 01       	movw	r4, r22
    3854:	3c 01       	movw	r6, r24
    3856:	60 e0       	ldi	r22, 0x00	; 0
    3858:	7d c0       	rjmp	.+250    	; 0x3954 <TMR_SR_paramSet+0xd24>
    385a:	d5 01       	movw	r26, r10
    385c:	8d 91       	ld	r24, X+
    385e:	9c 91       	ld	r25, X
    3860:	f6 01       	movw	r30, r12
    3862:	e7 5e       	subi	r30, 0xE7	; 231
    3864:	f9 4f       	sbci	r31, 0xF9	; 249
    3866:	91 83       	std	Z+1, r25	; 0x01
    3868:	80 83       	st	Z, r24
    386a:	60 e0       	ldi	r22, 0x00	; 0
    386c:	41 2c       	mov	r4, r1
    386e:	51 2c       	mov	r5, r1
    3870:	32 01       	movw	r6, r4
    3872:	70 c0       	rjmp	.+224    	; 0x3954 <TMR_SR_paramSet+0xd24>
    3874:	f5 01       	movw	r30, r10
    3876:	40 81       	ld	r20, Z
    3878:	51 81       	ldd	r21, Z+1	; 0x01
    387a:	62 81       	ldd	r22, Z+2	; 0x02
    387c:	73 81       	ldd	r23, Z+3	; 0x03
    387e:	22 e0       	ldi	r18, 0x02	; 2
    3880:	c6 01       	movw	r24, r12
    3882:	0e 94 64 4c 	call	0x98c8	; 0x98c8 <TMR_SR_cmdSetFrequencyHopTableOption>
    3886:	2b 01       	movw	r4, r22
    3888:	3c 01       	movw	r6, r24
    388a:	60 e0       	ldi	r22, 0x00	; 0
    388c:	63 c0       	rjmp	.+198    	; 0x3954 <TMR_SR_paramSet+0xd24>
    388e:	d5 01       	movw	r26, r10
    3890:	4d 91       	ld	r20, X+
    3892:	5d 91       	ld	r21, X+
    3894:	6d 91       	ld	r22, X+
    3896:	7c 91       	ld	r23, X
    3898:	23 e0       	ldi	r18, 0x03	; 3
    389a:	c6 01       	movw	r24, r12
    389c:	0e 94 64 4c 	call	0x98c8	; 0x98c8 <TMR_SR_cmdSetFrequencyHopTableOption>
    38a0:	2b 01       	movw	r4, r22
    38a2:	3c 01       	movw	r6, r24
    38a4:	60 e0       	ldi	r22, 0x00	; 0
    38a6:	56 c0       	rjmp	.+172    	; 0x3954 <TMR_SR_paramSet+0xd24>
    38a8:	b5 01       	movw	r22, r10
    38aa:	c6 01       	movw	r24, r12
    38ac:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <TMR_SR_cmdSetPerAntennaTime>
    38b0:	2b 01       	movw	r4, r22
    38b2:	3c 01       	movw	r6, r24
    38b4:	60 e0       	ldi	r22, 0x00	; 0
    38b6:	4e c0       	rjmp	.+156    	; 0x3954 <TMR_SR_paramSet+0xd24>
    38b8:	60 e0       	ldi	r22, 0x00	; 0
    38ba:	0f 2e       	mov	r0, r31
    38bc:	f9 e0       	ldi	r31, 0x09	; 9
    38be:	4f 2e       	mov	r4, r31
    38c0:	51 2c       	mov	r5, r1
    38c2:	61 2c       	mov	r6, r1
    38c4:	f3 e0       	ldi	r31, 0x03	; 3
    38c6:	7f 2e       	mov	r7, r31
    38c8:	f0 2d       	mov	r31, r0
    38ca:	44 c0       	rjmp	.+136    	; 0x3954 <TMR_SR_paramSet+0xd24>
    38cc:	6a e0       	ldi	r22, 0x0A	; 10
    38ce:	41 2c       	mov	r4, r1
    38d0:	51 2c       	mov	r5, r1
    38d2:	32 01       	movw	r6, r4
    38d4:	3f c0       	rjmp	.+126    	; 0x3954 <TMR_SR_paramSet+0xd24>
    38d6:	60 e0       	ldi	r22, 0x00	; 0
    38d8:	3d c0       	rjmp	.+122    	; 0x3954 <TMR_SR_paramSet+0xd24>
    38da:	60 e0       	ldi	r22, 0x00	; 0
    38dc:	41 2c       	mov	r4, r1
    38de:	51 2c       	mov	r5, r1
    38e0:	32 01       	movw	r6, r4
    38e2:	38 c0       	rjmp	.+112    	; 0x3954 <TMR_SR_paramSet+0xd24>
    38e4:	60 e0       	ldi	r22, 0x00	; 0
    38e6:	41 2c       	mov	r4, r1
    38e8:	51 2c       	mov	r5, r1
    38ea:	32 01       	movw	r6, r4
    38ec:	33 c0       	rjmp	.+102    	; 0x3954 <TMR_SR_paramSet+0xd24>
    38ee:	60 e0       	ldi	r22, 0x00	; 0
    38f0:	31 c0       	rjmp	.+98     	; 0x3954 <TMR_SR_paramSet+0xd24>
    38f2:	60 e0       	ldi	r22, 0x00	; 0
    38f4:	0f 2e       	mov	r0, r31
    38f6:	f6 e0       	ldi	r31, 0x06	; 6
    38f8:	4f 2e       	mov	r4, r31
    38fa:	51 2c       	mov	r5, r1
    38fc:	61 2c       	mov	r6, r1
    38fe:	f3 e0       	ldi	r31, 0x03	; 3
    3900:	7f 2e       	mov	r7, r31
    3902:	f0 2d       	mov	r31, r0
    3904:	27 c0       	rjmp	.+78     	; 0x3954 <TMR_SR_paramSet+0xd24>
    3906:	60 e0       	ldi	r22, 0x00	; 0
    3908:	25 c0       	rjmp	.+74     	; 0x3954 <TMR_SR_paramSet+0xd24>
    390a:	60 e0       	ldi	r22, 0x00	; 0
    390c:	23 c0       	rjmp	.+70     	; 0x3954 <TMR_SR_paramSet+0xd24>
    390e:	60 e0       	ldi	r22, 0x00	; 0
    3910:	0f 2e       	mov	r0, r31
    3912:	f6 e0       	ldi	r31, 0x06	; 6
    3914:	4f 2e       	mov	r4, r31
    3916:	51 2c       	mov	r5, r1
    3918:	61 2c       	mov	r6, r1
    391a:	f3 e0       	ldi	r31, 0x03	; 3
    391c:	7f 2e       	mov	r7, r31
    391e:	f0 2d       	mov	r31, r0
    3920:	19 c0       	rjmp	.+50     	; 0x3954 <TMR_SR_paramSet+0xd24>
    3922:	60 e0       	ldi	r22, 0x00	; 0
    3924:	0f 2e       	mov	r0, r31
    3926:	f4 e0       	ldi	r31, 0x04	; 4
    3928:	4f 2e       	mov	r4, r31
    392a:	51 2c       	mov	r5, r1
    392c:	61 2c       	mov	r6, r1
    392e:	f3 e0       	ldi	r31, 0x03	; 3
    3930:	7f 2e       	mov	r7, r31
    3932:	f0 2d       	mov	r31, r0
    3934:	0f c0       	rjmp	.+30     	; 0x3954 <TMR_SR_paramSet+0xd24>
    3936:	60 e0       	ldi	r22, 0x00	; 0
    3938:	0d c0       	rjmp	.+26     	; 0x3954 <TMR_SR_paramSet+0xd24>
    393a:	60 e0       	ldi	r22, 0x00	; 0
    393c:	0b c0       	rjmp	.+22     	; 0x3954 <TMR_SR_paramSet+0xd24>
    393e:	60 e0       	ldi	r22, 0x00	; 0
    3940:	09 c0       	rjmp	.+18     	; 0x3954 <TMR_SR_paramSet+0xd24>
    3942:	60 e0       	ldi	r22, 0x00	; 0
    3944:	0f 2e       	mov	r0, r31
    3946:	44 24       	eor	r4, r4
    3948:	43 94       	inc	r4
    394a:	51 2c       	mov	r5, r1
    394c:	61 2c       	mov	r6, r1
    394e:	f3 e0       	ldi	r31, 0x03	; 3
    3950:	7f 2e       	mov	r7, r31
    3952:	f0 2d       	mov	r31, r0
    3954:	8f 2d       	mov	r24, r15
    3956:	90 e0       	ldi	r25, 0x00	; 0
    3958:	fc 01       	movw	r30, r24
    395a:	37 97       	sbiw	r30, 0x07	; 7
    395c:	e8 36       	cpi	r30, 0x68	; 104
    395e:	f1 05       	cpc	r31, r1
    3960:	08 f0       	brcs	.+2      	; 0x3964 <TMR_SR_paramSet+0xd34>
    3962:	a9 c0       	rjmp	.+338    	; 0x3ab6 <TMR_SR_paramSet+0xe86>
    3964:	e2 57       	subi	r30, 0x72	; 114
    3966:	fe 4f       	sbci	r31, 0xFE	; 254
    3968:	0c 94 d0 74 	jmp	0xe9a0	; 0xe9a0 <__tablejump2__>
    396c:	a5 01       	movw	r20, r10
    396e:	c6 01       	movw	r24, r12
    3970:	0e 94 9d 4d 	call	0x9b3a	; 0x9b3a <TMR_SR_cmdSetReaderConfiguration>
    3974:	ae c0       	rjmp	.+348    	; 0x3ad2 <TMR_SR_paramSet+0xea2>
    3976:	a1 14       	cp	r10, r1
    3978:	b1 04       	cpc	r11, r1
    397a:	49 f4       	brne	.+18     	; 0x398e <TMR_SR_paramSet+0xd5e>
    397c:	f6 01       	movw	r30, r12
    397e:	e7 50       	subi	r30, 0x07	; 7
    3980:	fa 4f       	sbci	r31, 0xFA	; 250
    3982:	10 82       	st	Z, r1
    3984:	64 2d       	mov	r22, r4
    3986:	75 2d       	mov	r23, r5
    3988:	86 2d       	mov	r24, r6
    398a:	97 2d       	mov	r25, r7
    398c:	a2 c0       	rjmp	.+324    	; 0x3ad2 <TMR_SR_paramSet+0xea2>
    398e:	f5 01       	movw	r30, r10
    3990:	80 81       	ld	r24, Z
    3992:	91 81       	ldd	r25, Z+1	; 0x01
    3994:	a2 81       	ldd	r26, Z+2	; 0x02
    3996:	b3 81       	ldd	r27, Z+3	; 0x03
    3998:	8f 3f       	cpi	r24, 0xFF	; 255
    399a:	ff ef       	ldi	r31, 0xFF	; 255
    399c:	9f 07       	cpc	r25, r31
    399e:	af 07       	cpc	r26, r31
    39a0:	bf 07       	cpc	r27, r31
    39a2:	0c f4       	brge	.+2      	; 0x39a6 <TMR_SR_paramSet+0xd76>
    39a4:	8d c0       	rjmp	.+282    	; 0x3ac0 <TMR_SR_paramSet+0xe90>
    39a6:	f5 01       	movw	r30, r10
    39a8:	44 81       	ldd	r20, Z+4	; 0x04
    39aa:	55 81       	ldd	r21, Z+5	; 0x05
    39ac:	66 81       	ldd	r22, Z+6	; 0x06
    39ae:	77 81       	ldd	r23, Z+7	; 0x07
    39b0:	4f 3f       	cpi	r20, 0xFF	; 255
    39b2:	ff ef       	ldi	r31, 0xFF	; 255
    39b4:	5f 07       	cpc	r21, r31
    39b6:	6f 07       	cpc	r22, r31
    39b8:	7f 07       	cpc	r23, r31
    39ba:	0c f4       	brge	.+2      	; 0x39be <TMR_SR_paramSet+0xd8e>
    39bc:	86 c0       	rjmp	.+268    	; 0x3aca <TMR_SR_paramSet+0xe9a>
    39be:	8f 3f       	cpi	r24, 0xFF	; 255
    39c0:	9f 4f       	sbci	r25, 0xFF	; 255
    39c2:	af 4f       	sbci	r26, 0xFF	; 255
    39c4:	bf 4f       	sbci	r27, 0xFF	; 255
    39c6:	79 f4       	brne	.+30     	; 0x39e6 <TMR_SR_paramSet+0xdb6>
    39c8:	4f 3f       	cpi	r20, 0xFF	; 255
    39ca:	5f 4f       	sbci	r21, 0xFF	; 255
    39cc:	6f 4f       	sbci	r22, 0xFF	; 255
    39ce:	7f 4f       	sbci	r23, 0xFF	; 255
    39d0:	51 f4       	brne	.+20     	; 0x39e6 <TMR_SR_paramSet+0xdb6>
    39d2:	f6 01       	movw	r30, r12
    39d4:	e7 50       	subi	r30, 0x07	; 7
    39d6:	fa 4f       	sbci	r31, 0xFA	; 250
    39d8:	81 e0       	ldi	r24, 0x01	; 1
    39da:	80 83       	st	Z, r24
    39dc:	64 2d       	mov	r22, r4
    39de:	75 2d       	mov	r23, r5
    39e0:	86 2d       	mov	r24, r6
    39e2:	97 2d       	mov	r25, r7
    39e4:	76 c0       	rjmp	.+236    	; 0x3ad2 <TMR_SR_paramSet+0xea2>
    39e6:	9e 01       	movw	r18, r28
    39e8:	2f 5f       	subi	r18, 0xFF	; 255
    39ea:	3f 4f       	sbci	r19, 0xFF	; 255
    39ec:	4e 2d       	mov	r20, r14
    39ee:	53 2d       	mov	r21, r3
    39f0:	6e 2d       	mov	r22, r14
    39f2:	c6 01       	movw	r24, r12
    39f4:	0e 94 cd 57 	call	0xaf9a	; 0xaf9a <TMR_SR_cmdGetProtocolConfiguration>
    39f8:	8b 01       	movw	r16, r22
    39fa:	9c 01       	movw	r18, r24
    39fc:	61 15       	cp	r22, r1
    39fe:	71 05       	cpc	r23, r1
    3a00:	81 05       	cpc	r24, r1
    3a02:	91 05       	cpc	r25, r1
    3a04:	61 f5       	brne	.+88     	; 0x3a5e <TMR_SR_paramSet+0xe2e>
    3a06:	81 e0       	ldi	r24, 0x01	; 1
    3a08:	f6 01       	movw	r30, r12
    3a0a:	e7 50       	subi	r30, 0x07	; 7
    3a0c:	fa 4f       	sbci	r31, 0xFA	; 250
    3a0e:	80 83       	st	Z, r24
    3a10:	f5 01       	movw	r30, r10
    3a12:	80 81       	ld	r24, Z
    3a14:	91 81       	ldd	r25, Z+1	; 0x01
    3a16:	a2 81       	ldd	r26, Z+2	; 0x02
    3a18:	b3 81       	ldd	r27, Z+3	; 0x03
    3a1a:	8f 3f       	cpi	r24, 0xFF	; 255
    3a1c:	9f 4f       	sbci	r25, 0xFF	; 255
    3a1e:	af 4f       	sbci	r26, 0xFF	; 255
    3a20:	bf 4f       	sbci	r27, 0xFF	; 255
    3a22:	49 f4       	brne	.+18     	; 0x3a36 <TMR_SR_paramSet+0xe06>
    3a24:	89 81       	ldd	r24, Y+1	; 0x01
    3a26:	9a 81       	ldd	r25, Y+2	; 0x02
    3a28:	ab 81       	ldd	r26, Y+3	; 0x03
    3a2a:	bc 81       	ldd	r27, Y+4	; 0x04
    3a2c:	f5 01       	movw	r30, r10
    3a2e:	80 83       	st	Z, r24
    3a30:	91 83       	std	Z+1, r25	; 0x01
    3a32:	a2 83       	std	Z+2, r26	; 0x02
    3a34:	b3 83       	std	Z+3, r27	; 0x03
    3a36:	f5 01       	movw	r30, r10
    3a38:	84 81       	ldd	r24, Z+4	; 0x04
    3a3a:	95 81       	ldd	r25, Z+5	; 0x05
    3a3c:	a6 81       	ldd	r26, Z+6	; 0x06
    3a3e:	b7 81       	ldd	r27, Z+7	; 0x07
    3a40:	8f 3f       	cpi	r24, 0xFF	; 255
    3a42:	9f 4f       	sbci	r25, 0xFF	; 255
    3a44:	af 4f       	sbci	r26, 0xFF	; 255
    3a46:	bf 4f       	sbci	r27, 0xFF	; 255
    3a48:	71 f4       	brne	.+28     	; 0x3a66 <TMR_SR_paramSet+0xe36>
    3a4a:	8d 81       	ldd	r24, Y+5	; 0x05
    3a4c:	9e 81       	ldd	r25, Y+6	; 0x06
    3a4e:	af 81       	ldd	r26, Y+7	; 0x07
    3a50:	b8 85       	ldd	r27, Y+8	; 0x08
    3a52:	f5 01       	movw	r30, r10
    3a54:	84 83       	std	Z+4, r24	; 0x04
    3a56:	95 83       	std	Z+5, r25	; 0x05
    3a58:	a6 83       	std	Z+6, r26	; 0x06
    3a5a:	b7 83       	std	Z+7, r27	; 0x07
    3a5c:	04 c0       	rjmp	.+8      	; 0x3a66 <TMR_SR_paramSet+0xe36>
    3a5e:	71 2f       	mov	r23, r17
    3a60:	82 2f       	mov	r24, r18
    3a62:	93 2f       	mov	r25, r19
    3a64:	36 c0       	rjmp	.+108    	; 0x3ad2 <TMR_SR_paramSet+0xea2>
    3a66:	95 01       	movw	r18, r10
    3a68:	4e 2d       	mov	r20, r14
    3a6a:	53 2d       	mov	r21, r3
    3a6c:	6e 2d       	mov	r22, r14
    3a6e:	c6 01       	movw	r24, r12
    3a70:	0e 94 a4 4e 	call	0x9d48	; 0x9d48 <TMR_SR_cmdSetProtocolConfiguration>
    3a74:	2e c0       	rjmp	.+92     	; 0x3ad2 <TMR_SR_paramSet+0xea2>
    3a76:	69 e0       	ldi	r22, 0x09	; 9
    3a78:	70 e0       	ldi	r23, 0x00	; 0
    3a7a:	80 e0       	ldi	r24, 0x00	; 0
    3a7c:	93 e0       	ldi	r25, 0x03	; 3
    3a7e:	29 c0       	rjmp	.+82     	; 0x3ad2 <TMR_SR_paramSet+0xea2>
    3a80:	75 2d       	mov	r23, r5
    3a82:	86 2d       	mov	r24, r6
    3a84:	97 2d       	mov	r25, r7
    3a86:	25 c0       	rjmp	.+74     	; 0x3ad2 <TMR_SR_paramSet+0xea2>
    3a88:	64 e0       	ldi	r22, 0x04	; 4
    3a8a:	70 e0       	ldi	r23, 0x00	; 0
    3a8c:	80 e0       	ldi	r24, 0x00	; 0
    3a8e:	93 e0       	ldi	r25, 0x03	; 3
    3a90:	20 c0       	rjmp	.+64     	; 0x3ad2 <TMR_SR_paramSet+0xea2>
    3a92:	67 e0       	ldi	r22, 0x07	; 7
    3a94:	75 e0       	ldi	r23, 0x05	; 5
    3a96:	80 e0       	ldi	r24, 0x00	; 0
    3a98:	92 e0       	ldi	r25, 0x02	; 2
    3a9a:	1b c0       	rjmp	.+54     	; 0x3ad2 <TMR_SR_paramSet+0xea2>
    3a9c:	67 e0       	ldi	r22, 0x07	; 7
    3a9e:	75 e0       	ldi	r23, 0x05	; 5
    3aa0:	80 e0       	ldi	r24, 0x00	; 0
    3aa2:	92 e0       	ldi	r25, 0x02	; 2
    3aa4:	16 c0       	rjmp	.+44     	; 0x3ad2 <TMR_SR_paramSet+0xea2>
    3aa6:	71 2f       	mov	r23, r17
    3aa8:	82 2f       	mov	r24, r18
    3aaa:	93 2f       	mov	r25, r19
    3aac:	12 c0       	rjmp	.+36     	; 0x3ad2 <TMR_SR_paramSet+0xea2>
    3aae:	75 2d       	mov	r23, r5
    3ab0:	86 2d       	mov	r24, r6
    3ab2:	97 2d       	mov	r25, r7
    3ab4:	0e c0       	rjmp	.+28     	; 0x3ad2 <TMR_SR_paramSet+0xea2>
    3ab6:	64 2d       	mov	r22, r4
    3ab8:	75 2d       	mov	r23, r5
    3aba:	86 2d       	mov	r24, r6
    3abc:	97 2d       	mov	r25, r7
    3abe:	09 c0       	rjmp	.+18     	; 0x3ad2 <TMR_SR_paramSet+0xea2>
    3ac0:	6e e0       	ldi	r22, 0x0E	; 14
    3ac2:	70 e0       	ldi	r23, 0x00	; 0
    3ac4:	80 e0       	ldi	r24, 0x00	; 0
    3ac6:	93 e0       	ldi	r25, 0x03	; 3
    3ac8:	04 c0       	rjmp	.+8      	; 0x3ad2 <TMR_SR_paramSet+0xea2>
    3aca:	6e e0       	ldi	r22, 0x0E	; 14
    3acc:	70 e0       	ldi	r23, 0x00	; 0
    3ace:	80 e0       	ldi	r24, 0x00	; 0
    3ad0:	93 e0       	ldi	r25, 0x03	; 3
    3ad2:	a2 96       	adiw	r28, 0x22	; 34
    3ad4:	0f b6       	in	r0, 0x3f	; 63
    3ad6:	f8 94       	cli
    3ad8:	de bf       	out	0x3e, r29	; 62
    3ada:	0f be       	out	0x3f, r0	; 63
    3adc:	cd bf       	out	0x3d, r28	; 61
    3ade:	df 91       	pop	r29
    3ae0:	cf 91       	pop	r28
    3ae2:	1f 91       	pop	r17
    3ae4:	0f 91       	pop	r16
    3ae6:	ff 90       	pop	r15
    3ae8:	ef 90       	pop	r14
    3aea:	df 90       	pop	r13
    3aec:	cf 90       	pop	r12
    3aee:	bf 90       	pop	r11
    3af0:	af 90       	pop	r10
    3af2:	9f 90       	pop	r9
    3af4:	8f 90       	pop	r8
    3af6:	7f 90       	pop	r7
    3af8:	6f 90       	pop	r6
    3afa:	5f 90       	pop	r5
    3afc:	4f 90       	pop	r4
    3afe:	3f 90       	pop	r3
    3b00:	2f 90       	pop	r2
    3b02:	08 95       	ret

00003b04 <TMR_SR_hasMoreTags>:
    3b04:	af 92       	push	r10
    3b06:	bf 92       	push	r11
    3b08:	cf 92       	push	r12
    3b0a:	df 92       	push	r13
    3b0c:	ef 92       	push	r14
    3b0e:	ff 92       	push	r15
    3b10:	0f 93       	push	r16
    3b12:	1f 93       	push	r17
    3b14:	cf 93       	push	r28
    3b16:	df 93       	push	r29
    3b18:	fc 01       	movw	r30, r24
    3b1a:	ea 58       	subi	r30, 0x8A	; 138
    3b1c:	ff 4f       	sbci	r31, 0xFF	; 255
    3b1e:	20 81       	ld	r18, Z
    3b20:	22 23       	and	r18, r18
    3b22:	09 f4       	brne	.+2      	; 0x3b26 <TMR_SR_hasMoreTags+0x22>
    3b24:	b8 c1       	rjmp	.+880    	; 0x3e96 <TMR_SR_hasMoreTags+0x392>
    3b26:	e7 5b       	subi	r30, 0xB7	; 183
    3b28:	fb 4f       	sbci	r31, 0xFB	; 251
    3b2a:	20 81       	ld	r18, Z
    3b2c:	21 11       	cpse	r18, r1
    3b2e:	b3 c1       	rjmp	.+870    	; 0x3e96 <TMR_SR_hasMoreTags+0x392>
    3b30:	ec 01       	movw	r28, r24
    3b32:	5c 01       	movw	r10, r24
    3b34:	82 e4       	ldi	r24, 0x42	; 66
    3b36:	a8 1a       	sub	r10, r24
    3b38:	8c ef       	ldi	r24, 0xFC	; 252
    3b3a:	b8 0a       	sbc	r11, r24
    3b3c:	e7 50       	subi	r30, 0x07	; 7
    3b3e:	f1 40       	sbci	r31, 0x01	; 1
    3b40:	00 81       	ld	r16, Z
    3b42:	11 81       	ldd	r17, Z+1	; 0x01
    3b44:	22 81       	ldd	r18, Z+2	; 0x02
    3b46:	33 81       	ldd	r19, Z+3	; 0x03
    3b48:	42 e2       	ldi	r20, 0x22	; 34
    3b4a:	b5 01       	movw	r22, r10
    3b4c:	ce 01       	movw	r24, r28
    3b4e:	0e 94 73 33 	call	0x66e6	; 0x66e6 <TMR_SR_receiveMessage>
    3b52:	6b 01       	movw	r12, r22
    3b54:	7c 01       	movw	r14, r24
    3b56:	67 2b       	or	r22, r23
    3b58:	68 2b       	or	r22, r24
    3b5a:	69 2b       	or	r22, r25
    3b5c:	09 f4       	brne	.+2      	; 0x3b60 <TMR_SR_hasMoreTags+0x5c>
    3b5e:	48 c0       	rjmp	.+144    	; 0x3bf0 <TMR_SR_hasMoreTags+0xec>
    3b60:	91 e0       	ldi	r25, 0x01	; 1
    3b62:	c9 16       	cp	r12, r25
    3b64:	96 e0       	ldi	r25, 0x06	; 6
    3b66:	d9 06       	cpc	r13, r25
    3b68:	e1 04       	cpc	r14, r1
    3b6a:	92 e0       	ldi	r25, 0x02	; 2
    3b6c:	f9 06       	cpc	r15, r25
    3b6e:	09 f4       	brne	.+2      	; 0x3b72 <TMR_SR_hasMoreTags+0x6e>
    3b70:	3f c0       	rjmp	.+126    	; 0x3bf0 <TMR_SR_hasMoreTags+0xec>
    3b72:	fe 01       	movw	r30, r28
    3b74:	ed 53       	subi	r30, 0x3D	; 61
    3b76:	fc 4f       	sbci	r31, 0xFC	; 252
    3b78:	80 81       	ld	r24, Z
    3b7a:	84 30       	cpi	r24, 0x04	; 4
    3b7c:	21 f4       	brne	.+8      	; 0x3b86 <TMR_SR_hasMoreTags+0x82>
    3b7e:	33 97       	sbiw	r30, 0x03	; 3
    3b80:	80 81       	ld	r24, Z
    3b82:	8f 32       	cpi	r24, 0x2F	; 47
    3b84:	a9 f1       	breq	.+106    	; 0x3bf0 <TMR_SR_hasMoreTags+0xec>
    3b86:	fe 01       	movw	r30, r28
    3b88:	ef 50       	subi	r30, 0x0F	; 15
    3b8a:	fa 4f       	sbci	r31, 0xFA	; 250
    3b8c:	10 82       	st	Z, r1
    3b8e:	e7 52       	subi	r30, 0x27	; 39
    3b90:	f2 40       	sbci	r31, 0x02	; 2
    3b92:	40 81       	ld	r20, Z
    3b94:	50 e0       	ldi	r21, 0x00	; 0
    3b96:	60 e0       	ldi	r22, 0x00	; 0
    3b98:	70 e0       	ldi	r23, 0x00	; 0
    3b9a:	74 2f       	mov	r23, r20
    3b9c:	66 27       	eor	r22, r22
    3b9e:	55 27       	eor	r21, r21
    3ba0:	44 27       	eor	r20, r20
    3ba2:	31 96       	adiw	r30, 0x01	; 1
    3ba4:	80 81       	ld	r24, Z
    3ba6:	90 e0       	ldi	r25, 0x00	; 0
    3ba8:	a0 e0       	ldi	r26, 0x00	; 0
    3baa:	b0 e0       	ldi	r27, 0x00	; 0
    3bac:	dc 01       	movw	r26, r24
    3bae:	99 27       	eor	r25, r25
    3bb0:	88 27       	eor	r24, r24
    3bb2:	48 2b       	or	r20, r24
    3bb4:	59 2b       	or	r21, r25
    3bb6:	6a 2b       	or	r22, r26
    3bb8:	7b 2b       	or	r23, r27
    3bba:	31 96       	adiw	r30, 0x01	; 1
    3bbc:	80 81       	ld	r24, Z
    3bbe:	90 e0       	ldi	r25, 0x00	; 0
    3bc0:	a0 e0       	ldi	r26, 0x00	; 0
    3bc2:	b0 e0       	ldi	r27, 0x00	; 0
    3bc4:	ba 2f       	mov	r27, r26
    3bc6:	a9 2f       	mov	r26, r25
    3bc8:	98 2f       	mov	r25, r24
    3bca:	88 27       	eor	r24, r24
    3bcc:	48 2b       	or	r20, r24
    3bce:	59 2b       	or	r21, r25
    3bd0:	6a 2b       	or	r22, r26
    3bd2:	7b 2b       	or	r23, r27
    3bd4:	31 96       	adiw	r30, 0x01	; 1
    3bd6:	80 81       	ld	r24, Z
    3bd8:	48 2b       	or	r20, r24
    3bda:	c4 55       	subi	r28, 0x54	; 84
    3bdc:	dc 4f       	sbci	r29, 0xFC	; 252
    3bde:	48 83       	st	Y, r20
    3be0:	59 83       	std	Y+1, r21	; 0x01
    3be2:	6a 83       	std	Y+2, r22	; 0x02
    3be4:	7b 83       	std	Y+3, r23	; 0x03
    3be6:	6c 2d       	mov	r22, r12
    3be8:	7d 2d       	mov	r23, r13
    3bea:	8e 2d       	mov	r24, r14
    3bec:	9f 2d       	mov	r25, r15
    3bee:	a0 c1       	rjmp	.+832    	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3bf0:	c1 14       	cp	r12, r1
    3bf2:	d1 04       	cpc	r13, r1
    3bf4:	e1 04       	cpc	r14, r1
    3bf6:	f1 04       	cpc	r15, r1
    3bf8:	39 f4       	brne	.+14     	; 0x3c08 <TMR_SR_hasMoreTags+0x104>
    3bfa:	fe 01       	movw	r30, r28
    3bfc:	e1 54       	subi	r30, 0x41	; 65
    3bfe:	fc 4f       	sbci	r31, 0xFC	; 252
    3c00:	80 81       	ld	r24, Z
    3c02:	88 23       	and	r24, r24
    3c04:	09 f4       	brne	.+2      	; 0x3c08 <TMR_SR_hasMoreTags+0x104>
    3c06:	5a c1       	rjmp	.+692    	; 0x3ebc <TMR_SR_hasMoreTags+0x3b8>
    3c08:	fe 01       	movw	r30, r28
    3c0a:	e0 54       	subi	r30, 0x40	; 64
    3c0c:	fc 4f       	sbci	r31, 0xFC	; 252
    3c0e:	80 81       	ld	r24, Z
    3c10:	8f 32       	cpi	r24, 0x2F	; 47
    3c12:	11 f0       	breq	.+4      	; 0x3c18 <TMR_SR_hasMoreTags+0x114>
    3c14:	82 32       	cpi	r24, 0x22	; 34
    3c16:	49 f4       	brne	.+18     	; 0x3c2a <TMR_SR_hasMoreTags+0x126>
    3c18:	91 e0       	ldi	r25, 0x01	; 1
    3c1a:	c9 16       	cp	r12, r25
    3c1c:	96 e0       	ldi	r25, 0x06	; 6
    3c1e:	d9 06       	cpc	r13, r25
    3c20:	e1 04       	cpc	r14, r1
    3c22:	92 e0       	ldi	r25, 0x02	; 2
    3c24:	f9 06       	cpc	r15, r25
    3c26:	09 f4       	brne	.+2      	; 0x3c2a <TMR_SR_hasMoreTags+0x126>
    3c28:	4e c1       	rjmp	.+668    	; 0x3ec6 <TMR_SR_hasMoreTags+0x3c2>
    3c2a:	8f 32       	cpi	r24, 0x2F	; 47
    3c2c:	69 f5       	brne	.+90     	; 0x3c88 <TMR_SR_hasMoreTags+0x184>
    3c2e:	fe 01       	movw	r30, r28
    3c30:	ed 53       	subi	r30, 0x3D	; 61
    3c32:	fc 4f       	sbci	r31, 0xFC	; 252
    3c34:	80 81       	ld	r24, Z
    3c36:	82 30       	cpi	r24, 0x02	; 2
    3c38:	61 f4       	brne	.+24     	; 0x3c52 <TMR_SR_hasMoreTags+0x14e>
    3c3a:	e8 5c       	subi	r30, 0xC8	; 200
    3c3c:	fd 4f       	sbci	r31, 0xFD	; 253
    3c3e:	81 e0       	ldi	r24, 0x01	; 1
    3c40:	80 83       	st	Z, r24
    3c42:	cf 50       	subi	r28, 0x0F	; 15
    3c44:	da 4f       	sbci	r29, 0xFA	; 250
    3c46:	18 82       	st	Y, r1
    3c48:	6f e0       	ldi	r22, 0x0F	; 15
    3c4a:	70 e0       	ldi	r23, 0x00	; 0
    3c4c:	80 e0       	ldi	r24, 0x00	; 0
    3c4e:	93 e0       	ldi	r25, 0x03	; 3
    3c50:	6f c1       	rjmp	.+734    	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3c52:	83 30       	cpi	r24, 0x03	; 3
    3c54:	09 f4       	brne	.+2      	; 0x3c58 <TMR_SR_hasMoreTags+0x154>
    3c56:	3c c1       	rjmp	.+632    	; 0x3ed0 <TMR_SR_hasMoreTags+0x3cc>
    3c58:	84 30       	cpi	r24, 0x04	; 4
    3c5a:	09 f0       	breq	.+2      	; 0x3c5e <TMR_SR_hasMoreTags+0x15a>
    3c5c:	3e c1       	rjmp	.+636    	; 0x3eda <TMR_SR_hasMoreTags+0x3d6>
    3c5e:	fe 01       	movw	r30, r28
    3c60:	e1 54       	subi	r30, 0x41	; 65
    3c62:	fc 4f       	sbci	r31, 0xFC	; 252
    3c64:	40 81       	ld	r20, Z
    3c66:	50 e0       	ldi	r21, 0x00	; 0
    3c68:	4b 5f       	subi	r20, 0xFB	; 251
    3c6a:	5f 4f       	sbci	r21, 0xFF	; 255
    3c6c:	b5 01       	movw	r22, r10
    3c6e:	ce 01       	movw	r24, r28
    3c70:	85 58       	subi	r24, 0x85	; 133
    3c72:	9f 4f       	sbci	r25, 0xFF	; 255
    3c74:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    3c78:	c6 58       	subi	r28, 0x86	; 134
    3c7a:	df 4f       	sbci	r29, 0xFF	; 255
    3c7c:	18 82       	st	Y, r1
    3c7e:	68 e0       	ldi	r22, 0x08	; 8
    3c80:	70 e0       	ldi	r23, 0x00	; 0
    3c82:	80 e0       	ldi	r24, 0x00	; 0
    3c84:	93 e0       	ldi	r25, 0x03	; 3
    3c86:	54 c1       	rjmp	.+680    	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3c88:	82 32       	cpi	r24, 0x22	; 34
    3c8a:	09 f0       	breq	.+2      	; 0x3c8e <TMR_SR_hasMoreTags+0x18a>
    3c8c:	5d c0       	rjmp	.+186    	; 0x3d48 <TMR_SR_hasMoreTags+0x244>
    3c8e:	fe 01       	movw	r30, r28
    3c90:	e1 54       	subi	r30, 0x41	; 65
    3c92:	fc 4f       	sbci	r31, 0xFC	; 252
    3c94:	80 81       	ld	r24, Z
    3c96:	87 30       	cpi	r24, 0x07	; 7
    3c98:	09 f0       	breq	.+2      	; 0x3c9c <TMR_SR_hasMoreTags+0x198>
    3c9a:	5d c0       	rjmp	.+186    	; 0x3d56 <TMR_SR_hasMoreTags+0x252>
    3c9c:	32 96       	adiw	r30, 0x02	; 2
    3c9e:	80 81       	ld	r24, Z
    3ca0:	81 11       	cpse	r24, r1
    3ca2:	59 c0       	rjmp	.+178    	; 0x3d56 <TMR_SR_hasMoreTags+0x252>
    3ca4:	31 96       	adiw	r30, 0x01	; 1
    3ca6:	80 81       	ld	r24, Z
    3ca8:	81 11       	cpse	r24, r1
    3caa:	55 c0       	rjmp	.+170    	; 0x3d56 <TMR_SR_hasMoreTags+0x252>
    3cac:	31 96       	adiw	r30, 0x01	; 1
    3cae:	20 81       	ld	r18, Z
    3cb0:	31 96       	adiw	r30, 0x01	; 1
    3cb2:	80 81       	ld	r24, Z
    3cb4:	90 e0       	ldi	r25, 0x00	; 0
    3cb6:	98 2f       	mov	r25, r24
    3cb8:	88 27       	eor	r24, r24
    3cba:	31 96       	adiw	r30, 0x01	; 1
    3cbc:	30 81       	ld	r19, Z
    3cbe:	83 2b       	or	r24, r19
    3cc0:	20 ff       	sbrs	r18, 0
    3cc2:	10 c1       	rjmp	.+544    	; 0x3ee4 <TMR_SR_hasMoreTags+0x3e0>
    3cc4:	e9 5c       	subi	r30, 0xC9	; 201
    3cc6:	fd 4f       	sbci	r31, 0xFD	; 253
    3cc8:	20 81       	ld	r18, Z
    3cca:	22 23       	and	r18, r18
    3ccc:	09 f4       	brne	.+2      	; 0x3cd0 <TMR_SR_hasMoreTags+0x1cc>
    3cce:	0f c1       	rjmp	.+542    	; 0x3eee <TMR_SR_hasMoreTags+0x3ea>
    3cd0:	86 ff       	sbrs	r24, 6
    3cd2:	12 c1       	rjmp	.+548    	; 0x3ef8 <TMR_SR_hasMoreTags+0x3f4>
    3cd4:	e6 53       	subi	r30, 0x36	; 54
    3cd6:	f2 40       	sbci	r31, 0x02	; 2
    3cd8:	80 81       	ld	r24, Z
    3cda:	90 e0       	ldi	r25, 0x00	; 0
    3cdc:	a0 e0       	ldi	r26, 0x00	; 0
    3cde:	b0 e0       	ldi	r27, 0x00	; 0
    3ce0:	78 2f       	mov	r23, r24
    3ce2:	66 27       	eor	r22, r22
    3ce4:	55 27       	eor	r21, r21
    3ce6:	44 27       	eor	r20, r20
    3ce8:	31 96       	adiw	r30, 0x01	; 1
    3cea:	80 81       	ld	r24, Z
    3cec:	90 e0       	ldi	r25, 0x00	; 0
    3cee:	a0 e0       	ldi	r26, 0x00	; 0
    3cf0:	b0 e0       	ldi	r27, 0x00	; 0
    3cf2:	dc 01       	movw	r26, r24
    3cf4:	99 27       	eor	r25, r25
    3cf6:	88 27       	eor	r24, r24
    3cf8:	84 2b       	or	r24, r20
    3cfa:	95 2b       	or	r25, r21
    3cfc:	a6 2b       	or	r26, r22
    3cfe:	b7 2b       	or	r27, r23
    3d00:	31 96       	adiw	r30, 0x01	; 1
    3d02:	40 81       	ld	r20, Z
    3d04:	50 e0       	ldi	r21, 0x00	; 0
    3d06:	60 e0       	ldi	r22, 0x00	; 0
    3d08:	70 e0       	ldi	r23, 0x00	; 0
    3d0a:	76 2f       	mov	r23, r22
    3d0c:	65 2f       	mov	r22, r21
    3d0e:	54 2f       	mov	r21, r20
    3d10:	44 27       	eor	r20, r20
    3d12:	84 2b       	or	r24, r20
    3d14:	95 2b       	or	r25, r21
    3d16:	a6 2b       	or	r26, r22
    3d18:	b7 2b       	or	r27, r23
    3d1a:	31 96       	adiw	r30, 0x01	; 1
    3d1c:	20 81       	ld	r18, Z
    3d1e:	82 2b       	or	r24, r18
    3d20:	ec 5c       	subi	r30, 0xCC	; 204
    3d22:	fd 4f       	sbci	r31, 0xFD	; 253
    3d24:	40 81       	ld	r20, Z
    3d26:	51 81       	ldd	r21, Z+1	; 0x01
    3d28:	62 81       	ldd	r22, Z+2	; 0x02
    3d2a:	73 81       	ldd	r23, Z+3	; 0x03
    3d2c:	84 17       	cp	r24, r20
    3d2e:	95 07       	cpc	r25, r21
    3d30:	a6 07       	cpc	r26, r22
    3d32:	b7 07       	cpc	r27, r23
    3d34:	08 f4       	brcc	.+2      	; 0x3d38 <TMR_SR_hasMoreTags+0x234>
    3d36:	e5 c0       	rjmp	.+458    	; 0x3f02 <TMR_SR_hasMoreTags+0x3fe>
    3d38:	ce 01       	movw	r24, r28
    3d3a:	0e 94 30 67 	call	0xce60	; 0xce60 <TMR_SR_cmdStopReading>
    3d3e:	68 e0       	ldi	r22, 0x08	; 8
    3d40:	70 e0       	ldi	r23, 0x00	; 0
    3d42:	80 e0       	ldi	r24, 0x00	; 0
    3d44:	93 e0       	ldi	r25, 0x03	; 3
    3d46:	f4 c0       	rjmp	.+488    	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3d48:	fe 01       	movw	r30, r28
    3d4a:	e1 54       	subi	r30, 0x41	; 65
    3d4c:	fc 4f       	sbci	r31, 0xFC	; 252
    3d4e:	80 81       	ld	r24, Z
    3d50:	86 30       	cpi	r24, 0x06	; 6
    3d52:	08 f4       	brcc	.+2      	; 0x3d56 <TMR_SR_hasMoreTags+0x252>
    3d54:	db c0       	rjmp	.+438    	; 0x3f0c <TMR_SR_hasMoreTags+0x408>
    3d56:	80 91 de 0b 	lds	r24, 0x0BDE	; 0x800bde <isMultiSelectEnabled>
    3d5a:	81 11       	cpse	r24, r1
    3d5c:	07 c0       	rjmp	.+14     	; 0x3d6c <TMR_SR_hasMoreTags+0x268>
    3d5e:	fe 01       	movw	r30, r28
    3d60:	e3 5f       	subi	r30, 0xF3	; 243
    3d62:	f9 4f       	sbci	r31, 0xF9	; 249
    3d64:	80 81       	ld	r24, Z
    3d66:	81 11       	cpse	r24, r1
    3d68:	03 c0       	rjmp	.+6      	; 0x3d70 <TMR_SR_hasMoreTags+0x26c>
    3d6a:	03 c0       	rjmp	.+6      	; 0x3d72 <TMR_SR_hasMoreTags+0x26e>
    3d6c:	81 e0       	ldi	r24, 0x01	; 1
    3d6e:	01 c0       	rjmp	.+2      	; 0x3d72 <TMR_SR_hasMoreTags+0x26e>
    3d70:	81 e0       	ldi	r24, 0x01	; 1
    3d72:	e8 2f       	mov	r30, r24
    3d74:	f0 e0       	ldi	r31, 0x00	; 0
    3d76:	35 96       	adiw	r30, 0x05	; 5
    3d78:	ea 0d       	add	r30, r10
    3d7a:	fb 1d       	adc	r31, r11
    3d7c:	90 81       	ld	r25, Z
    3d7e:	94 ff       	sbrs	r25, 4
    3d80:	03 c0       	rjmp	.+6      	; 0x3d88 <TMR_SR_hasMoreTags+0x284>
    3d82:	1a e0       	ldi	r17, 0x0A	; 10
    3d84:	18 0f       	add	r17, r24
    3d86:	02 c0       	rjmp	.+4      	; 0x3d8c <TMR_SR_hasMoreTags+0x288>
    3d88:	18 e0       	ldi	r17, 0x08	; 8
    3d8a:	18 0f       	add	r17, r24
    3d8c:	f5 01       	movw	r30, r10
    3d8e:	e1 0f       	add	r30, r17
    3d90:	f1 1d       	adc	r31, r1
    3d92:	80 81       	ld	r24, Z
    3d94:	81 30       	cpi	r24, 0x01	; 1
    3d96:	91 f0       	breq	.+36     	; 0x3dbc <TMR_SR_hasMoreTags+0x2b8>
    3d98:	10 f1       	brcs	.+68     	; 0x3dde <TMR_SR_hasMoreTags+0x2da>
    3d9a:	82 30       	cpi	r24, 0x02	; 2
    3d9c:	09 f0       	breq	.+2      	; 0x3da0 <TMR_SR_hasMoreTags+0x29c>
    3d9e:	bb c0       	rjmp	.+374    	; 0x3f16 <TMR_SR_hasMoreTags+0x412>
    3da0:	fe 01       	movw	r30, r28
    3da2:	e8 58       	subi	r30, 0x88	; 136
    3da4:	ff 4f       	sbci	r31, 0xFF	; 255
    3da6:	81 e0       	ldi	r24, 0x01	; 1
    3da8:	80 83       	st	Z, r24
    3daa:	c2 54       	subi	r28, 0x42	; 66
    3dac:	db 4f       	sbci	r29, 0xFB	; 251
    3dae:	89 e0       	ldi	r24, 0x09	; 9
    3db0:	88 83       	st	Y, r24
    3db2:	60 e0       	ldi	r22, 0x00	; 0
    3db4:	70 e0       	ldi	r23, 0x00	; 0
    3db6:	80 e0       	ldi	r24, 0x00	; 0
    3db8:	90 e0       	ldi	r25, 0x00	; 0
    3dba:	ba c0       	rjmp	.+372    	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3dbc:	fe 01       	movw	r30, r28
    3dbe:	e8 58       	subi	r30, 0x88	; 136
    3dc0:	ff 4f       	sbci	r31, 0xFF	; 255
    3dc2:	10 82       	st	Z, r1
    3dc4:	e9 5b       	subi	r30, 0xB9	; 185
    3dc6:	fb 4f       	sbci	r31, 0xFB	; 251
    3dc8:	81 e0       	ldi	r24, 0x01	; 1
    3dca:	80 83       	st	Z, r24
    3dcc:	c2 54       	subi	r28, 0x42	; 66
    3dce:	db 4f       	sbci	r29, 0xFB	; 251
    3dd0:	8b e0       	ldi	r24, 0x0B	; 11
    3dd2:	88 83       	st	Y, r24
    3dd4:	60 e0       	ldi	r22, 0x00	; 0
    3dd6:	70 e0       	ldi	r23, 0x00	; 0
    3dd8:	80 e0       	ldi	r24, 0x00	; 0
    3dda:	90 e0       	ldi	r25, 0x00	; 0
    3ddc:	a9 c0       	rjmp	.+338    	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3dde:	fe 01       	movw	r30, r28
    3de0:	ef 50       	subi	r30, 0x0F	; 15
    3de2:	fa 4f       	sbci	r31, 0xFA	; 250
    3de4:	10 82       	st	Z, r1
    3de6:	e5 53       	subi	r30, 0x35	; 53
    3de8:	f2 40       	sbci	r31, 0x02	; 2
    3dea:	11 82       	std	Z+1, r1	; 0x01
    3dec:	10 82       	st	Z, r1
    3dee:	e7 5c       	subi	r30, 0xC7	; 199
    3df0:	fd 4f       	sbci	r31, 0xFD	; 253
    3df2:	80 81       	ld	r24, Z
    3df4:	82 30       	cpi	r24, 0x02	; 2
    3df6:	91 f0       	breq	.+36     	; 0x3e1c <TMR_SR_hasMoreTags+0x318>
    3df8:	af 01       	movw	r20, r30
    3dfa:	62 e1       	ldi	r22, 0x12	; 18
    3dfc:	ce 01       	movw	r24, r28
    3dfe:	0e 94 7e 6b 	call	0xd6fc	; 0xd6fc <TMR_paramSet>
    3e02:	6b 01       	movw	r12, r22
    3e04:	7c 01       	movw	r14, r24
    3e06:	61 15       	cp	r22, r1
    3e08:	71 05       	cpc	r23, r1
    3e0a:	81 05       	cpc	r24, r1
    3e0c:	91 05       	cpc	r25, r1
    3e0e:	09 f0       	breq	.+2      	; 0x3e12 <TMR_SR_hasMoreTags+0x30e>
    3e10:	87 c0       	rjmp	.+270    	; 0x3f20 <TMR_SR_hasMoreTags+0x41c>
    3e12:	82 e0       	ldi	r24, 0x02	; 2
    3e14:	fe 01       	movw	r30, r28
    3e16:	eb 50       	subi	r30, 0x0B	; 11
    3e18:	fa 4f       	sbci	r31, 0xFA	; 250
    3e1a:	80 83       	st	Z, r24
    3e1c:	ea a9       	ldd	r30, Y+50	; 0x32
    3e1e:	fb a9       	ldd	r31, Y+51	; 0x33
    3e20:	87 85       	ldd	r24, Z+15	; 0x0f
    3e22:	90 89       	ldd	r25, Z+16	; 0x10
    3e24:	89 2b       	or	r24, r25
    3e26:	61 f1       	breq	.+88     	; 0x3e80 <TMR_SR_hasMoreTags+0x37c>
    3e28:	89 e0       	ldi	r24, 0x09	; 9
    3e2a:	81 0f       	add	r24, r17
    3e2c:	95 01       	movw	r18, r10
    3e2e:	28 0f       	add	r18, r24
    3e30:	31 1d       	adc	r19, r1
    3e32:	f9 01       	movw	r30, r18
    3e34:	32 97       	sbiw	r30, 0x02	; 2
    3e36:	80 81       	ld	r24, Z
    3e38:	90 e0       	ldi	r25, 0x00	; 0
    3e3a:	98 2f       	mov	r25, r24
    3e3c:	88 27       	eor	r24, r24
    3e3e:	31 96       	adiw	r30, 0x01	; 1
    3e40:	20 81       	ld	r18, Z
    3e42:	82 2b       	or	r24, r18
    3e44:	fe 01       	movw	r30, r28
    3e46:	ed 53       	subi	r30, 0x3D	; 61
    3e48:	fa 4f       	sbci	r31, 0xFA	; 250
    3e4a:	20 81       	ld	r18, Z
    3e4c:	31 81       	ldd	r19, Z+1	; 0x01
    3e4e:	82 0f       	add	r24, r18
    3e50:	93 1f       	adc	r25, r19
    3e52:	91 83       	std	Z+1, r25	; 0x01
    3e54:	80 83       	st	Z, r24
    3e56:	8b e0       	ldi	r24, 0x0B	; 11
    3e58:	81 0f       	add	r24, r17
    3e5a:	a8 0e       	add	r10, r24
    3e5c:	b1 1c       	adc	r11, r1
    3e5e:	f5 01       	movw	r30, r10
    3e60:	32 97       	sbiw	r30, 0x02	; 2
    3e62:	80 81       	ld	r24, Z
    3e64:	90 e0       	ldi	r25, 0x00	; 0
    3e66:	98 2f       	mov	r25, r24
    3e68:	88 27       	eor	r24, r24
    3e6a:	31 96       	adiw	r30, 0x01	; 1
    3e6c:	20 81       	ld	r18, Z
    3e6e:	82 2b       	or	r24, r18
    3e70:	cb 53       	subi	r28, 0x3B	; 59
    3e72:	da 4f       	sbci	r29, 0xFA	; 250
    3e74:	28 81       	ld	r18, Y
    3e76:	39 81       	ldd	r19, Y+1	; 0x01
    3e78:	82 0f       	add	r24, r18
    3e7a:	93 1f       	adc	r25, r19
    3e7c:	99 83       	std	Y+1, r25	; 0x01
    3e7e:	88 83       	st	Y, r24
    3e80:	c1 14       	cp	r12, r1
    3e82:	d1 04       	cpc	r13, r1
    3e84:	e1 04       	cpc	r14, r1
    3e86:	f1 04       	cpc	r15, r1
    3e88:	09 f0       	breq	.+2      	; 0x3e8c <TMR_SR_hasMoreTags+0x388>
    3e8a:	4e c0       	rjmp	.+156    	; 0x3f28 <TMR_SR_hasMoreTags+0x424>
    3e8c:	68 e0       	ldi	r22, 0x08	; 8
    3e8e:	70 e0       	ldi	r23, 0x00	; 0
    3e90:	80 e0       	ldi	r24, 0x00	; 0
    3e92:	93 e0       	ldi	r25, 0x03	; 3
    3e94:	4d c0       	rjmp	.+154    	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3e96:	fc 01       	movw	r30, r24
    3e98:	e4 54       	subi	r30, 0x44	; 68
    3e9a:	fc 4f       	sbci	r31, 0xFC	; 252
    3e9c:	80 81       	ld	r24, Z
    3e9e:	91 81       	ldd	r25, Z+1	; 0x01
    3ea0:	18 16       	cp	r1, r24
    3ea2:	19 06       	cpc	r1, r25
    3ea4:	2c f4       	brge	.+10     	; 0x3eb0 <TMR_SR_hasMoreTags+0x3ac>
    3ea6:	20 e0       	ldi	r18, 0x00	; 0
    3ea8:	70 e0       	ldi	r23, 0x00	; 0
    3eaa:	80 e0       	ldi	r24, 0x00	; 0
    3eac:	90 e0       	ldi	r25, 0x00	; 0
    3eae:	04 c0       	rjmp	.+8      	; 0x3eb8 <TMR_SR_hasMoreTags+0x3b4>
    3eb0:	28 e0       	ldi	r18, 0x08	; 8
    3eb2:	70 e0       	ldi	r23, 0x00	; 0
    3eb4:	80 e0       	ldi	r24, 0x00	; 0
    3eb6:	93 e0       	ldi	r25, 0x03	; 3
    3eb8:	62 2f       	mov	r22, r18
    3eba:	3a c0       	rjmp	.+116    	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3ebc:	60 e0       	ldi	r22, 0x00	; 0
    3ebe:	74 e0       	ldi	r23, 0x04	; 4
    3ec0:	80 e0       	ldi	r24, 0x00	; 0
    3ec2:	92 e0       	ldi	r25, 0x02	; 2
    3ec4:	35 c0       	rjmp	.+106    	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3ec6:	6c 2d       	mov	r22, r12
    3ec8:	7d 2d       	mov	r23, r13
    3eca:	8e 2d       	mov	r24, r14
    3ecc:	9f 2d       	mov	r25, r15
    3ece:	30 c0       	rjmp	.+96     	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3ed0:	64 e0       	ldi	r22, 0x04	; 4
    3ed2:	76 e0       	ldi	r23, 0x06	; 6
    3ed4:	80 e0       	ldi	r24, 0x00	; 0
    3ed6:	92 e0       	ldi	r25, 0x02	; 2
    3ed8:	2b c0       	rjmp	.+86     	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3eda:	68 e0       	ldi	r22, 0x08	; 8
    3edc:	70 e0       	ldi	r23, 0x00	; 0
    3ede:	80 e0       	ldi	r24, 0x00	; 0
    3ee0:	93 e0       	ldi	r25, 0x03	; 3
    3ee2:	26 c0       	rjmp	.+76     	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3ee4:	68 e0       	ldi	r22, 0x08	; 8
    3ee6:	70 e0       	ldi	r23, 0x00	; 0
    3ee8:	80 e0       	ldi	r24, 0x00	; 0
    3eea:	93 e0       	ldi	r25, 0x03	; 3
    3eec:	21 c0       	rjmp	.+66     	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3eee:	68 e0       	ldi	r22, 0x08	; 8
    3ef0:	70 e0       	ldi	r23, 0x00	; 0
    3ef2:	80 e0       	ldi	r24, 0x00	; 0
    3ef4:	93 e0       	ldi	r25, 0x03	; 3
    3ef6:	1c c0       	rjmp	.+56     	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3ef8:	68 e0       	ldi	r22, 0x08	; 8
    3efa:	70 e0       	ldi	r23, 0x00	; 0
    3efc:	80 e0       	ldi	r24, 0x00	; 0
    3efe:	93 e0       	ldi	r25, 0x03	; 3
    3f00:	17 c0       	rjmp	.+46     	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3f02:	68 e0       	ldi	r22, 0x08	; 8
    3f04:	70 e0       	ldi	r23, 0x00	; 0
    3f06:	80 e0       	ldi	r24, 0x00	; 0
    3f08:	93 e0       	ldi	r25, 0x03	; 3
    3f0a:	12 c0       	rjmp	.+36     	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3f0c:	64 e0       	ldi	r22, 0x04	; 4
    3f0e:	70 e0       	ldi	r23, 0x00	; 0
    3f10:	80 e0       	ldi	r24, 0x00	; 0
    3f12:	91 e0       	ldi	r25, 0x01	; 1
    3f14:	0d c0       	rjmp	.+26     	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3f16:	64 e0       	ldi	r22, 0x04	; 4
    3f18:	70 e0       	ldi	r23, 0x00	; 0
    3f1a:	80 e0       	ldi	r24, 0x00	; 0
    3f1c:	91 e0       	ldi	r25, 0x01	; 1
    3f1e:	08 c0       	rjmp	.+16     	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3f20:	7d 2d       	mov	r23, r13
    3f22:	8e 2d       	mov	r24, r14
    3f24:	9f 2d       	mov	r25, r15
    3f26:	04 c0       	rjmp	.+8      	; 0x3f30 <TMR_SR_hasMoreTags+0x42c>
    3f28:	6c 2d       	mov	r22, r12
    3f2a:	7d 2d       	mov	r23, r13
    3f2c:	8e 2d       	mov	r24, r14
    3f2e:	9f 2d       	mov	r25, r15
    3f30:	df 91       	pop	r29
    3f32:	cf 91       	pop	r28
    3f34:	1f 91       	pop	r17
    3f36:	0f 91       	pop	r16
    3f38:	ff 90       	pop	r15
    3f3a:	ef 90       	pop	r14
    3f3c:	df 90       	pop	r13
    3f3e:	cf 90       	pop	r12
    3f40:	bf 90       	pop	r11
    3f42:	af 90       	pop	r10
    3f44:	08 95       	ret

00003f46 <TMR_SR_getNextTag>:
    3f46:	4f 92       	push	r4
    3f48:	5f 92       	push	r5
    3f4a:	6f 92       	push	r6
    3f4c:	7f 92       	push	r7
    3f4e:	af 92       	push	r10
    3f50:	bf 92       	push	r11
    3f52:	cf 92       	push	r12
    3f54:	df 92       	push	r13
    3f56:	ef 92       	push	r14
    3f58:	ff 92       	push	r15
    3f5a:	0f 93       	push	r16
    3f5c:	1f 93       	push	r17
    3f5e:	cf 93       	push	r28
    3f60:	df 93       	push	r29
    3f62:	1f 92       	push	r1
    3f64:	cd b7       	in	r28, 0x3d	; 61
    3f66:	de b7       	in	r29, 0x3e	; 62
    3f68:	6c 01       	movw	r12, r24
    3f6a:	20 e8       	ldi	r18, 0x80	; 128
    3f6c:	c2 1a       	sub	r12, r18
    3f6e:	2e ef       	ldi	r18, 0xFE	; 254
    3f70:	d2 0a       	sbc	r13, r18
    3f72:	8c 01       	movw	r16, r24
    3f74:	02 54       	subi	r16, 0x42	; 66
    3f76:	1c 4f       	sbci	r17, 0xFC	; 252
    3f78:	fc 01       	movw	r30, r24
    3f7a:	e4 54       	subi	r30, 0x44	; 68
    3f7c:	fc 4f       	sbci	r31, 0xFC	; 252
    3f7e:	20 81       	ld	r18, Z
    3f80:	31 81       	ldd	r19, Z+1	; 0x01
    3f82:	23 2b       	or	r18, r19
    3f84:	09 f4       	brne	.+2      	; 0x3f88 <TMR_SR_getNextTag+0x42>
    3f86:	d1 c0       	rjmp	.+418    	; 0x412a <TMR_SR_getNextTag+0x1e4>
    3f88:	5b 01       	movw	r10, r22
    3f8a:	7c 01       	movw	r14, r24
    3f8c:	ed 5f       	subi	r30, 0xFD	; 253
    3f8e:	fe 4f       	sbci	r31, 0xFE	; 254
    3f90:	80 81       	ld	r24, Z
    3f92:	81 11       	cpse	r24, r1
    3f94:	50 c0       	rjmp	.+160    	; 0x4036 <TMR_SR_getNextTag+0xf0>
    3f96:	e9 54       	subi	r30, 0x49	; 73
    3f98:	f4 40       	sbci	r31, 0x04	; 4
    3f9a:	80 81       	ld	r24, Z
    3f9c:	88 23       	and	r24, r24
    3f9e:	59 f0       	breq	.+22     	; 0x3fb6 <TMR_SR_getNextTag+0x70>
    3fa0:	c7 01       	movw	r24, r14
    3fa2:	b0 dd       	rcall	.-1184   	; 0x3b04 <TMR_SR_hasMoreTags>
    3fa4:	2b 01       	movw	r4, r22
    3fa6:	3c 01       	movw	r6, r24
    3fa8:	61 15       	cp	r22, r1
    3faa:	71 05       	cpc	r23, r1
    3fac:	81 05       	cpc	r24, r1
    3fae:	91 05       	cpc	r25, r1
    3fb0:	09 f4       	brne	.+2      	; 0x3fb4 <TMR_SR_getNextTag+0x6e>
    3fb2:	41 c0       	rjmp	.+130    	; 0x4036 <TMR_SR_getNextTag+0xf0>
    3fb4:	bf c0       	rjmp	.+382    	; 0x4134 <TMR_SR_getNextTag+0x1ee>
    3fb6:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    3fba:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    3fbe:	01 96       	adiw	r24, 0x01	; 1
    3fc0:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    3fc4:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    3fc8:	89 e2       	ldi	r24, 0x29	; 41
    3fca:	f8 01       	movw	r30, r16
    3fcc:	82 83       	std	Z+2, r24	; 0x02
    3fce:	f7 01       	movw	r30, r14
    3fd0:	e7 5e       	subi	r30, 0xE7	; 231
    3fd2:	f9 4f       	sbci	r31, 0xF9	; 249
    3fd4:	20 81       	ld	r18, Z
    3fd6:	31 81       	ldd	r19, Z+1	; 0x01
    3fd8:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    3fdc:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    3fe0:	02 96       	adiw	r24, 0x02	; 2
    3fe2:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    3fe6:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    3fea:	f8 01       	movw	r30, r16
    3fec:	33 83       	std	Z+3, r19	; 0x03
    3fee:	24 83       	std	Z+4, r18	; 0x04
    3ff0:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    3ff4:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    3ff8:	01 96       	adiw	r24, 0x01	; 1
    3ffa:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    3ffe:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    4002:	86 e0       	ldi	r24, 0x06	; 6
    4004:	89 83       	std	Y+1, r24	; 0x01
    4006:	15 82       	std	Z+5, r1	; 0x05
    4008:	46 e0       	ldi	r20, 0x06	; 6
    400a:	b8 01       	movw	r22, r16
    400c:	c7 01       	movw	r24, r14
    400e:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    4012:	2b 01       	movw	r4, r22
    4014:	3c 01       	movw	r6, r24
    4016:	61 15       	cp	r22, r1
    4018:	71 05       	cpc	r23, r1
    401a:	81 05       	cpc	r24, r1
    401c:	91 05       	cpc	r25, r1
    401e:	09 f0       	breq	.+2      	; 0x4022 <TMR_SR_getNextTag+0xdc>
    4020:	8d c0       	rjmp	.+282    	; 0x413c <TMR_SR_getNextTag+0x1f6>
    4022:	f7 01       	movw	r30, r14
    4024:	ea 53       	subi	r30, 0x3A	; 58
    4026:	fc 4f       	sbci	r31, 0xFC	; 252
    4028:	80 81       	ld	r24, Z
    402a:	e7 50       	subi	r30, 0x07	; 7
    402c:	ff 4f       	sbci	r31, 0xFF	; 255
    402e:	80 83       	st	Z, r24
    4030:	89 e0       	ldi	r24, 0x09	; 9
    4032:	31 97       	sbiw	r30, 0x01	; 1
    4034:	80 83       	st	Z, r24
    4036:	f7 01       	movw	r30, r14
    4038:	e2 54       	subi	r30, 0x42	; 66
    403a:	fb 4f       	sbci	r31, 0xFB	; 251
    403c:	80 81       	ld	r24, Z
    403e:	89 83       	std	Y+1, r24	; 0x01
    4040:	32 96       	adiw	r30, 0x02	; 2
    4042:	90 81       	ld	r25, Z
    4044:	92 32       	cpi	r25, 0x22	; 34
    4046:	b1 f5       	brne	.+108    	; 0x40b4 <TMR_SR_getNextTag+0x16e>
    4048:	90 91 de 0b 	lds	r25, 0x0BDE	; 0x800bde <isMultiSelectEnabled>
    404c:	99 23       	and	r25, r25
    404e:	21 f0       	breq	.+8      	; 0x4058 <TMR_SR_getNextTag+0x112>
    4050:	8f 5f       	subi	r24, 0xFF	; 255
    4052:	89 83       	std	Y+1, r24	; 0x01
    4054:	e1 e0       	ldi	r30, 0x01	; 1
    4056:	01 c0       	rjmp	.+2      	; 0x405a <TMR_SR_getNextTag+0x114>
    4058:	e0 e0       	ldi	r30, 0x00	; 0
    405a:	d7 01       	movw	r26, r14
    405c:	aa 58       	subi	r26, 0x8A	; 138
    405e:	bf 4f       	sbci	r27, 0xFF	; 255
    4060:	8c 91       	ld	r24, X
    4062:	88 23       	and	r24, r24
    4064:	21 f0       	breq	.+8      	; 0x406e <TMR_SR_getNextTag+0x128>
    4066:	ae 2f       	mov	r26, r30
    4068:	b0 e0       	ldi	r27, 0x00	; 0
    406a:	18 96       	adiw	r26, 0x08	; 8
    406c:	03 c0       	rjmp	.+6      	; 0x4074 <TMR_SR_getNextTag+0x12e>
    406e:	ae 2f       	mov	r26, r30
    4070:	b0 e0       	ldi	r27, 0x00	; 0
    4072:	15 96       	adiw	r26, 0x05	; 5
    4074:	a0 0f       	add	r26, r16
    4076:	b1 1f       	adc	r27, r17
    4078:	4c 91       	ld	r20, X
    407a:	50 e0       	ldi	r21, 0x00	; 0
    407c:	54 2f       	mov	r21, r20
    407e:	44 27       	eor	r20, r20
    4080:	88 23       	and	r24, r24
    4082:	19 f0       	breq	.+6      	; 0x408a <TMR_SR_getNextTag+0x144>
    4084:	f0 e0       	ldi	r31, 0x00	; 0
    4086:	39 96       	adiw	r30, 0x09	; 9
    4088:	02 c0       	rjmp	.+4      	; 0x408e <TMR_SR_getNextTag+0x148>
    408a:	f0 e0       	ldi	r31, 0x00	; 0
    408c:	36 96       	adiw	r30, 0x06	; 6
    408e:	e0 0f       	add	r30, r16
    4090:	f1 1f       	adc	r31, r17
    4092:	80 81       	ld	r24, Z
    4094:	48 2b       	or	r20, r24
    4096:	9e 01       	movw	r18, r28
    4098:	2f 5f       	subi	r18, 0xFF	; 255
    409a:	3f 4f       	sbci	r19, 0xFF	; 255
    409c:	b5 01       	movw	r22, r10
    409e:	c7 01       	movw	r24, r14
    40a0:	0e 94 cd 46 	call	0x8d9a	; 0x8d9a <TMR_SR_parseMetadataFromMessage>
    40a4:	2b 01       	movw	r4, r22
    40a6:	3c 01       	movw	r6, r24
    40a8:	61 15       	cp	r22, r1
    40aa:	71 05       	cpc	r23, r1
    40ac:	81 05       	cpc	r24, r1
    40ae:	91 05       	cpc	r25, r1
    40b0:	09 f0       	breq	.+2      	; 0x40b4 <TMR_SR_getNextTag+0x16e>
    40b2:	48 c0       	rjmp	.+144    	; 0x4144 <TMR_SR_getNextTag+0x1fe>
    40b4:	89 81       	ldd	r24, Y+1	; 0x01
    40b6:	f7 01       	movw	r30, r14
    40b8:	e2 54       	subi	r30, 0x42	; 66
    40ba:	fb 4f       	sbci	r31, 0xFB	; 251
    40bc:	80 83       	st	Z, r24
    40be:	b6 01       	movw	r22, r12
    40c0:	c5 01       	movw	r24, r10
    40c2:	0e 94 3a 48 	call	0x9074	; 0x9074 <TMR_SR_postprocessReaderSpecificMetadata>
    40c6:	f7 01       	movw	r30, r14
    40c8:	e1 54       	subi	r30, 0x41	; 65
    40ca:	fb 4f       	sbci	r31, 0xFB	; 251
    40cc:	80 81       	ld	r24, Z
    40ce:	81 50       	subi	r24, 0x01	; 1
    40d0:	80 83       	st	Z, r24
    40d2:	e9 54       	subi	r30, 0x49	; 73
    40d4:	f4 40       	sbci	r31, 0x04	; 4
    40d6:	80 81       	ld	r24, Z
    40d8:	81 11       	cpse	r24, r1
    40da:	1d c0       	rjmp	.+58     	; 0x4116 <TMR_SR_getNextTag+0x1d0>
    40dc:	ea 5b       	subi	r30, 0xBA	; 186
    40de:	fc 4f       	sbci	r31, 0xFC	; 252
    40e0:	80 81       	ld	r24, Z
    40e2:	91 81       	ldd	r25, Z+1	; 0x01
    40e4:	01 97       	sbiw	r24, 0x01	; 1
    40e6:	91 83       	std	Z+1, r25	; 0x01
    40e8:	80 83       	st	Z, r24
    40ea:	89 2b       	or	r24, r25
    40ec:	51 f4       	brne	.+20     	; 0x4102 <TMR_SR_getNextTag+0x1bc>
    40ee:	c7 01       	movw	r24, r14
    40f0:	0e 94 aa 43 	call	0x8754	; 0x8754 <TMR_SR_cmdClearTagBuffer>
    40f4:	2b 01       	movw	r4, r22
    40f6:	3c 01       	movw	r6, r24
    40f8:	61 15       	cp	r22, r1
    40fa:	71 05       	cpc	r23, r1
    40fc:	81 05       	cpc	r24, r1
    40fe:	91 05       	cpc	r25, r1
    4100:	29 f5       	brne	.+74     	; 0x414c <TMR_SR_getNextTag+0x206>
    4102:	f7 01       	movw	r30, r14
    4104:	e4 54       	subi	r30, 0x44	; 68
    4106:	fc 4f       	sbci	r31, 0xFC	; 252
    4108:	80 81       	ld	r24, Z
    410a:	91 81       	ldd	r25, Z+1	; 0x01
    410c:	89 2b       	or	r24, r25
    410e:	19 f4       	brne	.+6      	; 0x4116 <TMR_SR_getNextTag+0x1d0>
    4110:	e4 5c       	subi	r30, 0xC4	; 196
    4112:	fd 4f       	sbci	r31, 0xFD	; 253
    4114:	10 82       	st	Z, r1
    4116:	f5 01       	movw	r30, r10
    4118:	ea 5a       	subi	r30, 0xAA	; 170
    411a:	fc 4f       	sbci	r31, 0xFC	; 252
    411c:	f1 82       	std	Z+1, r15	; 0x01
    411e:	e0 82       	st	Z, r14
    4120:	60 e0       	ldi	r22, 0x00	; 0
    4122:	70 e0       	ldi	r23, 0x00	; 0
    4124:	80 e0       	ldi	r24, 0x00	; 0
    4126:	90 e0       	ldi	r25, 0x00	; 0
    4128:	14 c0       	rjmp	.+40     	; 0x4152 <TMR_SR_getNextTag+0x20c>
    412a:	68 e0       	ldi	r22, 0x08	; 8
    412c:	70 e0       	ldi	r23, 0x00	; 0
    412e:	80 e0       	ldi	r24, 0x00	; 0
    4130:	93 e0       	ldi	r25, 0x03	; 3
    4132:	0f c0       	rjmp	.+30     	; 0x4152 <TMR_SR_getNextTag+0x20c>
    4134:	75 2d       	mov	r23, r5
    4136:	86 2d       	mov	r24, r6
    4138:	97 2d       	mov	r25, r7
    413a:	0b c0       	rjmp	.+22     	; 0x4152 <TMR_SR_getNextTag+0x20c>
    413c:	75 2d       	mov	r23, r5
    413e:	86 2d       	mov	r24, r6
    4140:	97 2d       	mov	r25, r7
    4142:	07 c0       	rjmp	.+14     	; 0x4152 <TMR_SR_getNextTag+0x20c>
    4144:	75 2d       	mov	r23, r5
    4146:	86 2d       	mov	r24, r6
    4148:	97 2d       	mov	r25, r7
    414a:	03 c0       	rjmp	.+6      	; 0x4152 <TMR_SR_getNextTag+0x20c>
    414c:	75 2d       	mov	r23, r5
    414e:	86 2d       	mov	r24, r6
    4150:	97 2d       	mov	r25, r7
    4152:	0f 90       	pop	r0
    4154:	df 91       	pop	r29
    4156:	cf 91       	pop	r28
    4158:	1f 91       	pop	r17
    415a:	0f 91       	pop	r16
    415c:	ff 90       	pop	r15
    415e:	ef 90       	pop	r14
    4160:	df 90       	pop	r13
    4162:	cf 90       	pop	r12
    4164:	bf 90       	pop	r11
    4166:	af 90       	pop	r10
    4168:	7f 90       	pop	r7
    416a:	6f 90       	pop	r6
    416c:	5f 90       	pop	r5
    416e:	4f 90       	pop	r4
    4170:	08 95       	ret

00004172 <TMR_SR_SerialReader_init>:
    4172:	0f 93       	push	r16
    4174:	1f 93       	push	r17
    4176:	cf 93       	push	r28
    4178:	df 93       	push	r29
    417a:	cd b7       	in	r28, 0x3d	; 61
    417c:	de b7       	in	r29, 0x3e	; 62
    417e:	a0 97       	sbiw	r28, 0x20	; 32
    4180:	0f b6       	in	r0, 0x3f	; 63
    4182:	f8 94       	cli
    4184:	de bf       	out	0x3e, r29	; 62
    4186:	0f be       	out	0x3f, r0	; 63
    4188:	cd bf       	out	0x3d, r28	; 61
    418a:	22 e0       	ldi	r18, 0x02	; 2
    418c:	dc 01       	movw	r26, r24
    418e:	14 96       	adiw	r26, 0x04	; 4
    4190:	2c 93       	st	X, r18
    4192:	fc 01       	movw	r30, r24
    4194:	e0 5e       	subi	r30, 0xE0	; 224
    4196:	f9 4f       	sbci	r31, 0xF9	; 249
    4198:	40 e3       	ldi	r20, 0x30	; 48
    419a:	57 e6       	ldi	r21, 0x67	; 103
    419c:	51 83       	std	Z+1, r21	; 0x01
    419e:	40 83       	st	Z, r20
    41a0:	32 97       	sbiw	r30, 0x02	; 2
    41a2:	48 e1       	ldi	r20, 0x18	; 24
    41a4:	56 e1       	ldi	r21, 0x16	; 22
    41a6:	51 83       	std	Z+1, r21	; 0x01
    41a8:	40 83       	st	Z, r20
    41aa:	32 97       	sbiw	r30, 0x02	; 2
    41ac:	45 ec       	ldi	r20, 0xC5	; 197
    41ae:	57 e0       	ldi	r21, 0x07	; 7
    41b0:	51 83       	std	Z+1, r21	; 0x01
    41b2:	40 83       	st	Z, r20
    41b4:	e8 59       	subi	r30, 0x98	; 152
    41b6:	f2 40       	sbci	r31, 0x02	; 2
    41b8:	30 e1       	ldi	r19, 0x10	; 16
    41ba:	df 01       	movw	r26, r30
    41bc:	1d 92       	st	X+, r1
    41be:	3a 95       	dec	r19
    41c0:	e9 f7       	brne	.-6      	; 0x41bc <TMR_SR_SerialReader_init+0x4a>
    41c2:	e4 5b       	subi	r30, 0xB4	; 180
    41c4:	f1 40       	sbci	r31, 0x01	; 1
    41c6:	40 e0       	ldi	r20, 0x00	; 0
    41c8:	52 ec       	ldi	r21, 0xC2	; 194
    41ca:	61 e0       	ldi	r22, 0x01	; 1
    41cc:	70 e0       	ldi	r23, 0x00	; 0
    41ce:	40 83       	st	Z, r20
    41d0:	51 83       	std	Z+1, r21	; 0x01
    41d2:	62 83       	std	Z+2, r22	; 0x02
    41d4:	73 83       	std	Z+3, r23	; 0x03
    41d6:	ee 54       	subi	r30, 0x4E	; 78
    41d8:	fe 4f       	sbci	r31, 0xFE	; 254
    41da:	10 82       	st	Z, r1
    41dc:	71 97       	sbiw	r30, 0x11	; 17
    41de:	3f ef       	ldi	r19, 0xFF	; 255
    41e0:	30 83       	st	Z, r19
    41e2:	70 96       	adiw	r30, 0x10	; 16
    41e4:	35 e0       	ldi	r19, 0x05	; 5
    41e6:	30 83       	st	Z, r19
    41e8:	e5 5a       	subi	r30, 0xA5	; 165
    41ea:	f1 40       	sbci	r31, 0x01	; 1
    41ec:	48 e8       	ldi	r20, 0x88	; 136
    41ee:	53 e1       	ldi	r21, 0x13	; 19
    41f0:	60 e0       	ldi	r22, 0x00	; 0
    41f2:	70 e0       	ldi	r23, 0x00	; 0
    41f4:	40 83       	st	Z, r20
    41f6:	51 83       	std	Z+1, r21	; 0x01
    41f8:	62 83       	std	Z+2, r22	; 0x02
    41fa:	73 83       	std	Z+3, r23	; 0x03
    41fc:	34 96       	adiw	r30, 0x04	; 4
    41fe:	48 ee       	ldi	r20, 0xE8	; 232
    4200:	53 e0       	ldi	r21, 0x03	; 3
    4202:	60 e0       	ldi	r22, 0x00	; 0
    4204:	70 e0       	ldi	r23, 0x00	; 0
    4206:	40 83       	st	Z, r20
    4208:	51 83       	std	Z+1, r21	; 0x01
    420a:	62 83       	std	Z+2, r22	; 0x02
    420c:	73 83       	std	Z+3, r23	; 0x03
    420e:	34 96       	adiw	r30, 0x04	; 4
    4210:	20 83       	st	Z, r18
    4212:	e8 52       	subi	r30, 0x28	; 40
    4214:	fe 4f       	sbci	r31, 0xFE	; 254
    4216:	11 82       	std	Z+1, r1	; 0x01
    4218:	10 82       	st	Z, r1
    421a:	ed 5f       	subi	r30, 0xFD	; 253
    421c:	fe 4f       	sbci	r31, 0xFE	; 254
    421e:	10 82       	st	Z, r1
    4220:	e7 50       	subi	r30, 0x07	; 7
    4222:	f1 40       	sbci	r31, 0x01	; 1
    4224:	10 82       	st	Z, r1
    4226:	11 82       	std	Z+1, r1	; 0x01
    4228:	12 82       	std	Z+2, r1	; 0x02
    422a:	13 82       	std	Z+3, r1	; 0x03
    422c:	e4 5c       	subi	r30, 0xC4	; 196
    422e:	fd 4f       	sbci	r31, 0xFD	; 253
    4230:	10 82       	st	Z, r1
    4232:	ec 51       	subi	r30, 0x1C	; 28
    4234:	f4 40       	sbci	r31, 0x04	; 4
    4236:	10 82       	st	Z, r1
    4238:	11 82       	std	Z+1, r1	; 0x01
    423a:	12 82       	std	Z+2, r1	; 0x02
    423c:	13 82       	std	Z+3, r1	; 0x03
    423e:	e3 5e       	subi	r30, 0xE3	; 227
    4240:	fb 4f       	sbci	r31, 0xFB	; 251
    4242:	20 83       	st	Z, r18
    4244:	32 96       	adiw	r30, 0x02	; 2
    4246:	10 82       	st	Z, r1
    4248:	31 96       	adiw	r30, 0x01	; 1
    424a:	10 82       	st	Z, r1
    424c:	31 96       	adiw	r30, 0x01	; 1
    424e:	10 82       	st	Z, r1
    4250:	36 97       	sbiw	r30, 0x06	; 6
    4252:	21 e0       	ldi	r18, 0x01	; 1
    4254:	20 83       	st	Z, r18
    4256:	f0 97       	sbiw	r30, 0x30	; 48
    4258:	11 82       	std	Z+1, r1	; 0x01
    425a:	10 82       	st	Z, r1
    425c:	32 96       	adiw	r30, 0x02	; 2
    425e:	11 82       	std	Z+1, r1	; 0x01
    4260:	10 82       	st	Z, r1
    4262:	32 96       	adiw	r30, 0x02	; 2
    4264:	20 83       	st	Z, r18
    4266:	31 96       	adiw	r30, 0x01	; 1
    4268:	10 82       	st	Z, r1
    426a:	31 96       	adiw	r30, 0x01	; 1
    426c:	10 82       	st	Z, r1
    426e:	9c 01       	movw	r18, r24
    4270:	20 53       	subi	r18, 0x30	; 48
    4272:	3a 4f       	sbci	r19, 0xFA	; 250
    4274:	31 96       	adiw	r30, 0x01	; 1
    4276:	31 83       	std	Z+1, r19	; 0x01
    4278:	20 83       	st	Z, r18
    427a:	32 96       	adiw	r30, 0x02	; 2
    427c:	48 e0       	ldi	r20, 0x08	; 8
    427e:	50 e0       	ldi	r21, 0x00	; 0
    4280:	51 83       	std	Z+1, r21	; 0x01
    4282:	40 83       	st	Z, r20
    4284:	22 50       	subi	r18, 0x02	; 2
    4286:	31 09       	sbc	r19, r1
    4288:	f9 01       	movw	r30, r18
    428a:	11 82       	std	Z+1, r1	; 0x01
    428c:	10 82       	st	Z, r1
    428e:	b2 96       	adiw	r30, 0x22	; 34
    4290:	10 82       	st	Z, r1
    4292:	31 96       	adiw	r30, 0x01	; 1
    4294:	10 82       	st	Z, r1
    4296:	e5 54       	subi	r30, 0x45	; 69
    4298:	f2 40       	sbci	r31, 0x02	; 2
    429a:	10 82       	st	Z, r1
    429c:	11 82       	std	Z+1, r1	; 0x01
    429e:	12 82       	std	Z+2, r1	; 0x02
    42a0:	13 82       	std	Z+3, r1	; 0x03
    42a2:	e8 5d       	subi	r30, 0xD8	; 216
    42a4:	f1 40       	sbci	r31, 0x01	; 1
    42a6:	11 82       	std	Z+1, r1	; 0x01
    42a8:	10 82       	st	Z, r1
    42aa:	32 96       	adiw	r30, 0x02	; 2
    42ac:	11 82       	std	Z+1, r1	; 0x01
    42ae:	10 82       	st	Z, r1
    42b0:	e4 5e       	subi	r30, 0xE4	; 228
    42b2:	fb 4f       	sbci	r31, 0xFB	; 251
    42b4:	10 82       	st	Z, r1
    42b6:	38 96       	adiw	r30, 0x08	; 8
    42b8:	10 82       	st	Z, r1
    42ba:	60 e2       	ldi	r22, 0x20	; 32
    42bc:	e0 e2       	ldi	r30, 0x20	; 32
    42be:	f1 e0       	ldi	r31, 0x01	; 1
    42c0:	de 01       	movw	r26, r28
    42c2:	11 96       	adiw	r26, 0x01	; 1
    42c4:	01 90       	ld	r0, Z+
    42c6:	0d 92       	st	X+, r0
    42c8:	6a 95       	dec	r22
    42ca:	e1 f7       	brne	.-8      	; 0x42c4 <TMR_SR_SerialReader_init+0x152>
    42cc:	d9 01       	movw	r26, r18
    42ce:	4d 93       	st	X+, r20
    42d0:	5c 93       	st	X, r21
    42d2:	40 e0       	ldi	r20, 0x00	; 0
    42d4:	50 e0       	ldi	r21, 0x00	; 0
    42d6:	1d c0       	rjmp	.+58     	; 0x4312 <TMR_SR_SerialReader_init+0x1a0>
    42d8:	fc 01       	movw	r30, r24
    42da:	e6 53       	subi	r30, 0x36	; 54
    42dc:	fa 4f       	sbci	r31, 0xFA	; 250
    42de:	01 90       	ld	r0, Z+
    42e0:	f0 81       	ld	r31, Z
    42e2:	e0 2d       	mov	r30, r0
    42e4:	9a 01       	movw	r18, r20
    42e6:	22 0f       	add	r18, r18
    42e8:	33 1f       	adc	r19, r19
    42ea:	22 0f       	add	r18, r18
    42ec:	33 1f       	adc	r19, r19
    42ee:	e2 0f       	add	r30, r18
    42f0:	f3 1f       	adc	r31, r19
    42f2:	a1 e0       	ldi	r26, 0x01	; 1
    42f4:	b0 e0       	ldi	r27, 0x00	; 0
    42f6:	ac 0f       	add	r26, r28
    42f8:	bd 1f       	adc	r27, r29
    42fa:	a2 0f       	add	r26, r18
    42fc:	b3 1f       	adc	r27, r19
    42fe:	0d 91       	ld	r16, X+
    4300:	1d 91       	ld	r17, X+
    4302:	2d 91       	ld	r18, X+
    4304:	3c 91       	ld	r19, X
    4306:	00 83       	st	Z, r16
    4308:	11 83       	std	Z+1, r17	; 0x01
    430a:	22 83       	std	Z+2, r18	; 0x02
    430c:	33 83       	std	Z+3, r19	; 0x03
    430e:	4f 5f       	subi	r20, 0xFF	; 255
    4310:	5f 4f       	sbci	r21, 0xFF	; 255
    4312:	48 30       	cpi	r20, 0x08	; 8
    4314:	51 05       	cpc	r21, r1
    4316:	04 f3       	brlt	.-64     	; 0x42d8 <TMR_SR_SerialReader_init+0x166>
    4318:	0e 94 8b 6c 	call	0xd916	; 0xd916 <TMR_reader_init_internal>
    431c:	a0 96       	adiw	r28, 0x20	; 32
    431e:	0f b6       	in	r0, 0x3f	; 63
    4320:	f8 94       	cli
    4322:	de bf       	out	0x3e, r29	; 62
    4324:	0f be       	out	0x3f, r0	; 63
    4326:	cd bf       	out	0x3d, r28	; 61
    4328:	df 91       	pop	r29
    432a:	cf 91       	pop	r28
    432c:	1f 91       	pop	r17
    432e:	0f 91       	pop	r16
    4330:	08 95       	ret

00004332 <getReadExtParams>:
    4332:	9f 92       	push	r9
    4334:	af 92       	push	r10
    4336:	bf 92       	push	r11
    4338:	cf 92       	push	r12
    433a:	df 92       	push	r13
    433c:	ef 92       	push	r14
    433e:	ff 92       	push	r15
    4340:	0f 93       	push	r16
    4342:	1f 93       	push	r17
    4344:	cf 93       	push	r28
    4346:	df 93       	push	r29
    4348:	cd b7       	in	r28, 0x3d	; 61
    434a:	de b7       	in	r29, 0x3e	; 62
    434c:	28 97       	sbiw	r28, 0x08	; 8
    434e:	0f b6       	in	r0, 0x3f	; 63
    4350:	f8 94       	cli
    4352:	de bf       	out	0x3e, r29	; 62
    4354:	0f be       	out	0x3f, r0	; 63
    4356:	cd bf       	out	0x3d, r28	; 61
    4358:	fc 01       	movw	r30, r24
    435a:	8b 01       	movw	r16, r22
    435c:	90 80       	ld	r9, Z
    435e:	a1 80       	ldd	r10, Z+1	; 0x01
    4360:	b2 80       	ldd	r11, Z+2	; 0x02
    4362:	c3 80       	ldd	r12, Z+3	; 0x03
    4364:	d4 80       	ldd	r13, Z+4	; 0x04
    4366:	e5 80       	ldd	r14, Z+5	; 0x05
    4368:	f6 80       	ldd	r15, Z+6	; 0x06
    436a:	b7 81       	ldd	r27, Z+7	; 0x07
    436c:	29 2d       	mov	r18, r9
    436e:	3a 2d       	mov	r19, r10
    4370:	4b 2d       	mov	r20, r11
    4372:	5c 2d       	mov	r21, r12
    4374:	6d 2d       	mov	r22, r13
    4376:	7e 2d       	mov	r23, r14
    4378:	8f 2d       	mov	r24, r15
    437a:	9b 2f       	mov	r25, r27
    437c:	a0 e2       	ldi	r26, 0x20	; 32
    437e:	0e 94 2c 75 	call	0xea58	; 0xea58 <__cmpdi2_s8>
    4382:	81 f0       	breq	.+32     	; 0x43a4 <getReadExtParams+0x72>
    4384:	20 38       	cpi	r18, 0x80	; 128
    4386:	31 05       	cpc	r19, r1
    4388:	41 05       	cpc	r20, r1
    438a:	51 05       	cpc	r21, r1
    438c:	61 05       	cpc	r22, r1
    438e:	71 05       	cpc	r23, r1
    4390:	81 05       	cpc	r24, r1
    4392:	91 05       	cpc	r25, r1
    4394:	09 f4       	brne	.+2      	; 0x4398 <getReadExtParams+0x66>
    4396:	f1 c0       	rjmp	.+482    	; 0x457a <getReadExtParams+0x248>
    4398:	a0 e1       	ldi	r26, 0x10	; 16
    439a:	0e 94 2c 75 	call	0xea58	; 0xea58 <__cmpdi2_s8>
    439e:	09 f0       	breq	.+2      	; 0x43a2 <getReadExtParams+0x70>
    43a0:	0d c1       	rjmp	.+538    	; 0x45bc <getReadExtParams+0x28a>
    43a2:	eb c0       	rjmp	.+470    	; 0x457a <getReadExtParams+0x248>
    43a4:	88 e0       	ldi	r24, 0x08	; 8
    43a6:	7b 96       	adiw	r30, 0x1b	; 27
    43a8:	de 01       	movw	r26, r28
    43aa:	11 96       	adiw	r26, 0x01	; 1
    43ac:	01 90       	ld	r0, Z+
    43ae:	0d 92       	st	X+, r0
    43b0:	8a 95       	dec	r24
    43b2:	e1 f7       	brne	.-8      	; 0x43ac <getReadExtParams+0x7a>
    43b4:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    43b8:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    43bc:	01 96       	adiw	r24, 0x01	; 1
    43be:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    43c2:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    43c6:	f8 01       	movw	r30, r16
    43c8:	20 81       	ld	r18, Z
    43ca:	31 81       	ldd	r19, Z+1	; 0x01
    43cc:	84 81       	ldd	r24, Z+4	; 0x04
    43ce:	95 81       	ldd	r25, Z+5	; 0x05
    43d0:	ac 01       	movw	r20, r24
    43d2:	4f 5f       	subi	r20, 0xFF	; 255
    43d4:	5f 4f       	sbci	r21, 0xFF	; 255
    43d6:	55 83       	std	Z+5, r21	; 0x05
    43d8:	44 83       	std	Z+4, r20	; 0x04
    43da:	d9 01       	movw	r26, r18
    43dc:	a8 0f       	add	r26, r24
    43de:	b9 1f       	adc	r27, r25
    43e0:	fd 80       	ldd	r15, Y+5	; 0x05
    43e2:	fc 92       	st	X, r15
    43e4:	29 81       	ldd	r18, Y+1	; 0x01
    43e6:	3a 81       	ldd	r19, Y+2	; 0x02
    43e8:	4b 81       	ldd	r20, Y+3	; 0x03
    43ea:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    43ee:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    43f2:	03 96       	adiw	r24, 0x03	; 3
    43f4:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    43f8:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    43fc:	60 81       	ld	r22, Z
    43fe:	71 81       	ldd	r23, Z+1	; 0x01
    4400:	84 81       	ldd	r24, Z+4	; 0x04
    4402:	95 81       	ldd	r25, Z+5	; 0x05
    4404:	dc 01       	movw	r26, r24
    4406:	11 96       	adiw	r26, 0x01	; 1
    4408:	b5 83       	std	Z+5, r27	; 0x05
    440a:	a4 83       	std	Z+4, r26	; 0x04
    440c:	db 01       	movw	r26, r22
    440e:	a8 0f       	add	r26, r24
    4410:	b9 1f       	adc	r27, r25
    4412:	4c 93       	st	X, r20
    4414:	40 81       	ld	r20, Z
    4416:	51 81       	ldd	r21, Z+1	; 0x01
    4418:	84 81       	ldd	r24, Z+4	; 0x04
    441a:	95 81       	ldd	r25, Z+5	; 0x05
    441c:	bc 01       	movw	r22, r24
    441e:	6f 5f       	subi	r22, 0xFF	; 255
    4420:	7f 4f       	sbci	r23, 0xFF	; 255
    4422:	75 83       	std	Z+5, r23	; 0x05
    4424:	64 83       	std	Z+4, r22	; 0x04
    4426:	da 01       	movw	r26, r20
    4428:	a8 0f       	add	r26, r24
    442a:	b9 1f       	adc	r27, r25
    442c:	3c 93       	st	X, r19
    442e:	40 81       	ld	r20, Z
    4430:	51 81       	ldd	r21, Z+1	; 0x01
    4432:	84 81       	ldd	r24, Z+4	; 0x04
    4434:	95 81       	ldd	r25, Z+5	; 0x05
    4436:	bc 01       	movw	r22, r24
    4438:	6f 5f       	subi	r22, 0xFF	; 255
    443a:	7f 4f       	sbci	r23, 0xFF	; 255
    443c:	75 83       	std	Z+5, r23	; 0x05
    443e:	64 83       	std	Z+4, r22	; 0x04
    4440:	da 01       	movw	r26, r20
    4442:	a8 0f       	add	r26, r24
    4444:	b9 1f       	adc	r27, r25
    4446:	2c 93       	st	X, r18
    4448:	8f 2d       	mov	r24, r15
    444a:	90 e0       	ldi	r25, 0x00	; 0
    444c:	fc 01       	movw	r30, r24
    444e:	31 97       	sbiw	r30, 0x01	; 1
    4450:	eb 30       	cpi	r30, 0x0B	; 11
    4452:	f1 05       	cpc	r31, r1
    4454:	08 f0       	brcs	.+2      	; 0x4458 <getReadExtParams+0x126>
    4456:	8c c0       	rjmp	.+280    	; 0x4570 <getReadExtParams+0x23e>
    4458:	ea 50       	subi	r30, 0x0A	; 10
    445a:	fe 4f       	sbci	r31, 0xFE	; 254
    445c:	0c 94 d0 74 	jmp	0xe9a0	; 0xe9a0 <__tablejump2__>
    4460:	60 e0       	ldi	r22, 0x00	; 0
    4462:	70 e0       	ldi	r23, 0x00	; 0
    4464:	cb 01       	movw	r24, r22
    4466:	ae c0       	rjmp	.+348    	; 0x45c4 <getReadExtParams+0x292>
    4468:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    446c:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    4470:	01 96       	adiw	r24, 0x01	; 1
    4472:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    4476:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    447a:	d8 01       	movw	r26, r16
    447c:	2d 91       	ld	r18, X+
    447e:	3c 91       	ld	r19, X
    4480:	11 97       	sbiw	r26, 0x01	; 1
    4482:	14 96       	adiw	r26, 0x04	; 4
    4484:	8d 91       	ld	r24, X+
    4486:	9c 91       	ld	r25, X
    4488:	15 97       	sbiw	r26, 0x05	; 5
    448a:	ac 01       	movw	r20, r24
    448c:	4f 5f       	subi	r20, 0xFF	; 255
    448e:	5f 4f       	sbci	r21, 0xFF	; 255
    4490:	15 96       	adiw	r26, 0x05	; 5
    4492:	5c 93       	st	X, r21
    4494:	4e 93       	st	-X, r20
    4496:	14 97       	sbiw	r26, 0x04	; 4
    4498:	f9 01       	movw	r30, r18
    449a:	e8 0f       	add	r30, r24
    449c:	f9 1f       	adc	r31, r25
    449e:	2e 81       	ldd	r18, Y+6	; 0x06
    44a0:	20 83       	st	Z, r18
    44a2:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    44a6:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    44aa:	01 96       	adiw	r24, 0x01	; 1
    44ac:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    44b0:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    44b4:	2d 91       	ld	r18, X+
    44b6:	3c 91       	ld	r19, X
    44b8:	11 97       	sbiw	r26, 0x01	; 1
    44ba:	14 96       	adiw	r26, 0x04	; 4
    44bc:	8d 91       	ld	r24, X+
    44be:	9c 91       	ld	r25, X
    44c0:	15 97       	sbiw	r26, 0x05	; 5
    44c2:	ac 01       	movw	r20, r24
    44c4:	4f 5f       	subi	r20, 0xFF	; 255
    44c6:	5f 4f       	sbci	r21, 0xFF	; 255
    44c8:	15 96       	adiw	r26, 0x05	; 5
    44ca:	5c 93       	st	X, r21
    44cc:	4e 93       	st	-X, r20
    44ce:	14 97       	sbiw	r26, 0x04	; 4
    44d0:	f9 01       	movw	r30, r18
    44d2:	e8 0f       	add	r30, r24
    44d4:	f9 1f       	adc	r31, r25
    44d6:	2f 81       	ldd	r18, Y+7	; 0x07
    44d8:	20 83       	st	Z, r18
    44da:	60 e0       	ldi	r22, 0x00	; 0
    44dc:	70 e0       	ldi	r23, 0x00	; 0
    44de:	cb 01       	movw	r24, r22
    44e0:	71 c0       	rjmp	.+226    	; 0x45c4 <getReadExtParams+0x292>
    44e2:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    44e6:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    44ea:	01 96       	adiw	r24, 0x01	; 1
    44ec:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    44f0:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    44f4:	f8 01       	movw	r30, r16
    44f6:	20 81       	ld	r18, Z
    44f8:	31 81       	ldd	r19, Z+1	; 0x01
    44fa:	84 81       	ldd	r24, Z+4	; 0x04
    44fc:	95 81       	ldd	r25, Z+5	; 0x05
    44fe:	ac 01       	movw	r20, r24
    4500:	4f 5f       	subi	r20, 0xFF	; 255
    4502:	5f 4f       	sbci	r21, 0xFF	; 255
    4504:	55 83       	std	Z+5, r21	; 0x05
    4506:	44 83       	std	Z+4, r20	; 0x04
    4508:	f9 01       	movw	r30, r18
    450a:	e8 0f       	add	r30, r24
    450c:	f9 1f       	adc	r31, r25
    450e:	2e 81       	ldd	r18, Y+6	; 0x06
    4510:	20 83       	st	Z, r18
    4512:	60 e0       	ldi	r22, 0x00	; 0
    4514:	70 e0       	ldi	r23, 0x00	; 0
    4516:	cb 01       	movw	r24, r22
    4518:	55 c0       	rjmp	.+170    	; 0x45c4 <getReadExtParams+0x292>
    451a:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    451e:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    4522:	01 96       	adiw	r24, 0x01	; 1
    4524:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    4528:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    452c:	d8 01       	movw	r26, r16
    452e:	2d 91       	ld	r18, X+
    4530:	3c 91       	ld	r19, X
    4532:	11 97       	sbiw	r26, 0x01	; 1
    4534:	14 96       	adiw	r26, 0x04	; 4
    4536:	8d 91       	ld	r24, X+
    4538:	9c 91       	ld	r25, X
    453a:	15 97       	sbiw	r26, 0x05	; 5
    453c:	ac 01       	movw	r20, r24
    453e:	4f 5f       	subi	r20, 0xFF	; 255
    4540:	5f 4f       	sbci	r21, 0xFF	; 255
    4542:	15 96       	adiw	r26, 0x05	; 5
    4544:	5c 93       	st	X, r21
    4546:	4e 93       	st	-X, r20
    4548:	14 97       	sbiw	r26, 0x04	; 4
    454a:	f9 01       	movw	r30, r18
    454c:	e8 0f       	add	r30, r24
    454e:	f9 1f       	adc	r31, r25
    4550:	28 85       	ldd	r18, Y+8	; 0x08
    4552:	20 83       	st	Z, r18
    4554:	60 e0       	ldi	r22, 0x00	; 0
    4556:	70 e0       	ldi	r23, 0x00	; 0
    4558:	cb 01       	movw	r24, r22
    455a:	34 c0       	rjmp	.+104    	; 0x45c4 <getReadExtParams+0x292>
    455c:	f8 01       	movw	r30, r16
    455e:	84 81       	ldd	r24, Z+4	; 0x04
    4560:	95 81       	ldd	r25, Z+5	; 0x05
    4562:	03 97       	sbiw	r24, 0x03	; 3
    4564:	95 83       	std	Z+5, r25	; 0x05
    4566:	84 83       	std	Z+4, r24	; 0x04
    4568:	60 e0       	ldi	r22, 0x00	; 0
    456a:	70 e0       	ldi	r23, 0x00	; 0
    456c:	cb 01       	movw	r24, r22
    456e:	2a c0       	rjmp	.+84     	; 0x45c4 <getReadExtParams+0x292>
    4570:	61 e0       	ldi	r22, 0x01	; 1
    4572:	70 e0       	ldi	r23, 0x00	; 0
    4574:	80 e0       	ldi	r24, 0x00	; 0
    4576:	93 e0       	ldi	r25, 0x03	; 3
    4578:	25 c0       	rjmp	.+74     	; 0x45c4 <getReadExtParams+0x292>
    457a:	23 8d       	ldd	r18, Z+27	; 0x1b
    457c:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    4580:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    4584:	01 96       	adiw	r24, 0x01	; 1
    4586:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    458a:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    458e:	d8 01       	movw	r26, r16
    4590:	4d 91       	ld	r20, X+
    4592:	5c 91       	ld	r21, X
    4594:	11 97       	sbiw	r26, 0x01	; 1
    4596:	14 96       	adiw	r26, 0x04	; 4
    4598:	8d 91       	ld	r24, X+
    459a:	9c 91       	ld	r25, X
    459c:	15 97       	sbiw	r26, 0x05	; 5
    459e:	bc 01       	movw	r22, r24
    45a0:	6f 5f       	subi	r22, 0xFF	; 255
    45a2:	7f 4f       	sbci	r23, 0xFF	; 255
    45a4:	15 96       	adiw	r26, 0x05	; 5
    45a6:	7c 93       	st	X, r23
    45a8:	6e 93       	st	-X, r22
    45aa:	14 97       	sbiw	r26, 0x04	; 4
    45ac:	fa 01       	movw	r30, r20
    45ae:	e8 0f       	add	r30, r24
    45b0:	f9 1f       	adc	r31, r25
    45b2:	20 83       	st	Z, r18
    45b4:	60 e0       	ldi	r22, 0x00	; 0
    45b6:	70 e0       	ldi	r23, 0x00	; 0
    45b8:	cb 01       	movw	r24, r22
    45ba:	04 c0       	rjmp	.+8      	; 0x45c4 <getReadExtParams+0x292>
    45bc:	61 e0       	ldi	r22, 0x01	; 1
    45be:	70 e0       	ldi	r23, 0x00	; 0
    45c0:	80 e0       	ldi	r24, 0x00	; 0
    45c2:	93 e0       	ldi	r25, 0x03	; 3
    45c4:	28 96       	adiw	r28, 0x08	; 8
    45c6:	0f b6       	in	r0, 0x3f	; 63
    45c8:	f8 94       	cli
    45ca:	de bf       	out	0x3e, r29	; 62
    45cc:	0f be       	out	0x3f, r0	; 63
    45ce:	cd bf       	out	0x3d, r28	; 61
    45d0:	df 91       	pop	r29
    45d2:	cf 91       	pop	r28
    45d4:	1f 91       	pop	r17
    45d6:	0f 91       	pop	r16
    45d8:	ff 90       	pop	r15
    45da:	ef 90       	pop	r14
    45dc:	df 90       	pop	r13
    45de:	cf 90       	pop	r12
    45e0:	bf 90       	pop	r11
    45e2:	af 90       	pop	r10
    45e4:	9f 90       	pop	r9
    45e6:	08 95       	ret

000045e8 <getWriteExtParams>:
    45e8:	9f 92       	push	r9
    45ea:	af 92       	push	r10
    45ec:	bf 92       	push	r11
    45ee:	cf 92       	push	r12
    45f0:	df 92       	push	r13
    45f2:	ef 92       	push	r14
    45f4:	ff 92       	push	r15
    45f6:	0f 93       	push	r16
    45f8:	1f 93       	push	r17
    45fa:	cf 93       	push	r28
    45fc:	df 93       	push	r29
    45fe:	cd b7       	in	r28, 0x3d	; 61
    4600:	de b7       	in	r29, 0x3e	; 62
    4602:	2f 97       	sbiw	r28, 0x0f	; 15
    4604:	0f b6       	in	r0, 0x3f	; 63
    4606:	f8 94       	cli
    4608:	de bf       	out	0x3e, r29	; 62
    460a:	0f be       	out	0x3f, r0	; 63
    460c:	cd bf       	out	0x3d, r28	; 61
    460e:	fc 01       	movw	r30, r24
    4610:	8b 01       	movw	r16, r22
    4612:	90 80       	ld	r9, Z
    4614:	a1 80       	ldd	r10, Z+1	; 0x01
    4616:	b2 80       	ldd	r11, Z+2	; 0x02
    4618:	c3 80       	ldd	r12, Z+3	; 0x03
    461a:	d4 80       	ldd	r13, Z+4	; 0x04
    461c:	e5 80       	ldd	r14, Z+5	; 0x05
    461e:	f6 80       	ldd	r15, Z+6	; 0x06
    4620:	b7 81       	ldd	r27, Z+7	; 0x07
    4622:	29 2d       	mov	r18, r9
    4624:	3a 2d       	mov	r19, r10
    4626:	4b 2d       	mov	r20, r11
    4628:	5c 2d       	mov	r21, r12
    462a:	6d 2d       	mov	r22, r13
    462c:	7e 2d       	mov	r23, r14
    462e:	8f 2d       	mov	r24, r15
    4630:	9b 2f       	mov	r25, r27
    4632:	a0 e2       	ldi	r26, 0x20	; 32
    4634:	0e 94 2c 75 	call	0xea58	; 0xea58 <__cmpdi2_s8>
    4638:	59 f0       	breq	.+22     	; 0x4650 <getWriteExtParams+0x68>
    463a:	20 38       	cpi	r18, 0x80	; 128
    463c:	31 05       	cpc	r19, r1
    463e:	41 05       	cpc	r20, r1
    4640:	51 05       	cpc	r21, r1
    4642:	61 05       	cpc	r22, r1
    4644:	71 05       	cpc	r23, r1
    4646:	81 05       	cpc	r24, r1
    4648:	91 05       	cpc	r25, r1
    464a:	09 f4       	brne	.+2      	; 0x464e <getWriteExtParams+0x66>
    464c:	b1 c1       	rjmp	.+866    	; 0x49b0 <getWriteExtParams+0x3c8>
    464e:	d1 c1       	rjmp	.+930    	; 0x49f2 <getWriteExtParams+0x40a>
    4650:	8f e0       	ldi	r24, 0x0F	; 15
    4652:	7b 96       	adiw	r30, 0x1b	; 27
    4654:	de 01       	movw	r26, r28
    4656:	11 96       	adiw	r26, 0x01	; 1
    4658:	01 90       	ld	r0, Z+
    465a:	0d 92       	st	X+, r0
    465c:	8a 95       	dec	r24
    465e:	e1 f7       	brne	.-8      	; 0x4658 <getWriteExtParams+0x70>
    4660:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    4664:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    4668:	01 96       	adiw	r24, 0x01	; 1
    466a:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    466e:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    4672:	f8 01       	movw	r30, r16
    4674:	20 81       	ld	r18, Z
    4676:	31 81       	ldd	r19, Z+1	; 0x01
    4678:	84 81       	ldd	r24, Z+4	; 0x04
    467a:	95 81       	ldd	r25, Z+5	; 0x05
    467c:	ac 01       	movw	r20, r24
    467e:	4f 5f       	subi	r20, 0xFF	; 255
    4680:	5f 4f       	sbci	r21, 0xFF	; 255
    4682:	55 83       	std	Z+5, r21	; 0x05
    4684:	44 83       	std	Z+4, r20	; 0x04
    4686:	f9 01       	movw	r30, r18
    4688:	e8 0f       	add	r30, r24
    468a:	f9 1f       	adc	r31, r25
    468c:	29 85       	ldd	r18, Y+9	; 0x09
    468e:	20 83       	st	Z, r18
    4690:	39 81       	ldd	r19, Y+1	; 0x01
    4692:	4a 81       	ldd	r20, Y+2	; 0x02
    4694:	5b 81       	ldd	r21, Y+3	; 0x03
    4696:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    469a:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    469e:	03 96       	adiw	r24, 0x03	; 3
    46a0:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    46a4:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    46a8:	d8 01       	movw	r26, r16
    46aa:	6d 91       	ld	r22, X+
    46ac:	7c 91       	ld	r23, X
    46ae:	11 97       	sbiw	r26, 0x01	; 1
    46b0:	14 96       	adiw	r26, 0x04	; 4
    46b2:	8d 91       	ld	r24, X+
    46b4:	9c 91       	ld	r25, X
    46b6:	15 97       	sbiw	r26, 0x05	; 5
    46b8:	fc 01       	movw	r30, r24
    46ba:	31 96       	adiw	r30, 0x01	; 1
    46bc:	15 96       	adiw	r26, 0x05	; 5
    46be:	fc 93       	st	X, r31
    46c0:	ee 93       	st	-X, r30
    46c2:	14 97       	sbiw	r26, 0x04	; 4
    46c4:	fb 01       	movw	r30, r22
    46c6:	e8 0f       	add	r30, r24
    46c8:	f9 1f       	adc	r31, r25
    46ca:	50 83       	st	Z, r21
    46cc:	6d 91       	ld	r22, X+
    46ce:	7c 91       	ld	r23, X
    46d0:	11 97       	sbiw	r26, 0x01	; 1
    46d2:	14 96       	adiw	r26, 0x04	; 4
    46d4:	8d 91       	ld	r24, X+
    46d6:	9c 91       	ld	r25, X
    46d8:	15 97       	sbiw	r26, 0x05	; 5
    46da:	fc 01       	movw	r30, r24
    46dc:	31 96       	adiw	r30, 0x01	; 1
    46de:	15 96       	adiw	r26, 0x05	; 5
    46e0:	fc 93       	st	X, r31
    46e2:	ee 93       	st	-X, r30
    46e4:	14 97       	sbiw	r26, 0x04	; 4
    46e6:	fb 01       	movw	r30, r22
    46e8:	e8 0f       	add	r30, r24
    46ea:	f9 1f       	adc	r31, r25
    46ec:	40 83       	st	Z, r20
    46ee:	4d 91       	ld	r20, X+
    46f0:	5c 91       	ld	r21, X
    46f2:	11 97       	sbiw	r26, 0x01	; 1
    46f4:	14 96       	adiw	r26, 0x04	; 4
    46f6:	8d 91       	ld	r24, X+
    46f8:	9c 91       	ld	r25, X
    46fa:	15 97       	sbiw	r26, 0x05	; 5
    46fc:	bc 01       	movw	r22, r24
    46fe:	6f 5f       	subi	r22, 0xFF	; 255
    4700:	7f 4f       	sbci	r23, 0xFF	; 255
    4702:	15 96       	adiw	r26, 0x05	; 5
    4704:	7c 93       	st	X, r23
    4706:	6e 93       	st	-X, r22
    4708:	14 97       	sbiw	r26, 0x04	; 4
    470a:	fa 01       	movw	r30, r20
    470c:	e8 0f       	add	r30, r24
    470e:	f9 1f       	adc	r31, r25
    4710:	30 83       	st	Z, r19
    4712:	82 2f       	mov	r24, r18
    4714:	90 e0       	ldi	r25, 0x00	; 0
    4716:	fc 01       	movw	r30, r24
    4718:	31 97       	sbiw	r30, 0x01	; 1
    471a:	ea 30       	cpi	r30, 0x0A	; 10
    471c:	f1 05       	cpc	r31, r1
    471e:	08 f0       	brcs	.+2      	; 0x4722 <getWriteExtParams+0x13a>
    4720:	3e c1       	rjmp	.+636    	; 0x499e <getWriteExtParams+0x3b6>
    4722:	ef 5f       	subi	r30, 0xFF	; 255
    4724:	fd 4f       	sbci	r31, 0xFD	; 253
    4726:	0c 94 d0 74 	jmp	0xe9a0	; 0xe9a0 <__tablejump2__>
    472a:	60 e0       	ldi	r22, 0x00	; 0
    472c:	70 e0       	ldi	r23, 0x00	; 0
    472e:	cb 01       	movw	r24, r22
    4730:	64 c1       	rjmp	.+712    	; 0x49fa <getWriteExtParams+0x412>
    4732:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    4736:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    473a:	01 96       	adiw	r24, 0x01	; 1
    473c:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    4740:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    4744:	f8 01       	movw	r30, r16
    4746:	40 81       	ld	r20, Z
    4748:	51 81       	ldd	r21, Z+1	; 0x01
    474a:	84 81       	ldd	r24, Z+4	; 0x04
    474c:	95 81       	ldd	r25, Z+5	; 0x05
    474e:	bc 01       	movw	r22, r24
    4750:	6f 5f       	subi	r22, 0xFF	; 255
    4752:	7f 4f       	sbci	r23, 0xFF	; 255
    4754:	75 83       	std	Z+5, r23	; 0x05
    4756:	64 83       	std	Z+4, r22	; 0x04
    4758:	fa 01       	movw	r30, r20
    475a:	e8 0f       	add	r30, r24
    475c:	f9 1f       	adc	r31, r25
    475e:	3a 85       	ldd	r19, Y+10	; 0x0a
    4760:	30 83       	st	Z, r19
    4762:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    4766:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    476a:	01 96       	adiw	r24, 0x01	; 1
    476c:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    4770:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    4774:	d8 01       	movw	r26, r16
    4776:	4d 91       	ld	r20, X+
    4778:	5c 91       	ld	r21, X
    477a:	11 97       	sbiw	r26, 0x01	; 1
    477c:	14 96       	adiw	r26, 0x04	; 4
    477e:	8d 91       	ld	r24, X+
    4780:	9c 91       	ld	r25, X
    4782:	15 97       	sbiw	r26, 0x05	; 5
    4784:	bc 01       	movw	r22, r24
    4786:	6f 5f       	subi	r22, 0xFF	; 255
    4788:	7f 4f       	sbci	r23, 0xFF	; 255
    478a:	15 96       	adiw	r26, 0x05	; 5
    478c:	7c 93       	st	X, r23
    478e:	6e 93       	st	-X, r22
    4790:	14 97       	sbiw	r26, 0x04	; 4
    4792:	fa 01       	movw	r30, r20
    4794:	e8 0f       	add	r30, r24
    4796:	f9 1f       	adc	r31, r25
    4798:	3b 85       	ldd	r19, Y+11	; 0x0b
    479a:	30 83       	st	Z, r19
    479c:	23 30       	cpi	r18, 0x03	; 3
    479e:	09 f0       	breq	.+2      	; 0x47a2 <getWriteExtParams+0x1ba>
    47a0:	03 c1       	rjmp	.+518    	; 0x49a8 <getWriteExtParams+0x3c0>
    47a2:	2d 81       	ldd	r18, Y+5	; 0x05
    47a4:	3e 81       	ldd	r19, Y+6	; 0x06
    47a6:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    47aa:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    47ae:	02 96       	adiw	r24, 0x02	; 2
    47b0:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    47b4:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    47b8:	4d 91       	ld	r20, X+
    47ba:	5c 91       	ld	r21, X
    47bc:	11 97       	sbiw	r26, 0x01	; 1
    47be:	14 96       	adiw	r26, 0x04	; 4
    47c0:	8d 91       	ld	r24, X+
    47c2:	9c 91       	ld	r25, X
    47c4:	15 97       	sbiw	r26, 0x05	; 5
    47c6:	bc 01       	movw	r22, r24
    47c8:	6f 5f       	subi	r22, 0xFF	; 255
    47ca:	7f 4f       	sbci	r23, 0xFF	; 255
    47cc:	15 96       	adiw	r26, 0x05	; 5
    47ce:	7c 93       	st	X, r23
    47d0:	6e 93       	st	-X, r22
    47d2:	14 97       	sbiw	r26, 0x04	; 4
    47d4:	fa 01       	movw	r30, r20
    47d6:	e8 0f       	add	r30, r24
    47d8:	f9 1f       	adc	r31, r25
    47da:	30 83       	st	Z, r19
    47dc:	4d 91       	ld	r20, X+
    47de:	5c 91       	ld	r21, X
    47e0:	11 97       	sbiw	r26, 0x01	; 1
    47e2:	14 96       	adiw	r26, 0x04	; 4
    47e4:	8d 91       	ld	r24, X+
    47e6:	9c 91       	ld	r25, X
    47e8:	15 97       	sbiw	r26, 0x05	; 5
    47ea:	bc 01       	movw	r22, r24
    47ec:	6f 5f       	subi	r22, 0xFF	; 255
    47ee:	7f 4f       	sbci	r23, 0xFF	; 255
    47f0:	15 96       	adiw	r26, 0x05	; 5
    47f2:	7c 93       	st	X, r23
    47f4:	6e 93       	st	-X, r22
    47f6:	14 97       	sbiw	r26, 0x04	; 4
    47f8:	fa 01       	movw	r30, r20
    47fa:	e8 0f       	add	r30, r24
    47fc:	f9 1f       	adc	r31, r25
    47fe:	20 83       	st	Z, r18
    4800:	2f 81       	ldd	r18, Y+7	; 0x07
    4802:	38 85       	ldd	r19, Y+8	; 0x08
    4804:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    4808:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    480c:	02 96       	adiw	r24, 0x02	; 2
    480e:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    4812:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    4816:	4d 91       	ld	r20, X+
    4818:	5c 91       	ld	r21, X
    481a:	11 97       	sbiw	r26, 0x01	; 1
    481c:	14 96       	adiw	r26, 0x04	; 4
    481e:	8d 91       	ld	r24, X+
    4820:	9c 91       	ld	r25, X
    4822:	15 97       	sbiw	r26, 0x05	; 5
    4824:	bc 01       	movw	r22, r24
    4826:	6f 5f       	subi	r22, 0xFF	; 255
    4828:	7f 4f       	sbci	r23, 0xFF	; 255
    482a:	15 96       	adiw	r26, 0x05	; 5
    482c:	7c 93       	st	X, r23
    482e:	6e 93       	st	-X, r22
    4830:	14 97       	sbiw	r26, 0x04	; 4
    4832:	fa 01       	movw	r30, r20
    4834:	e8 0f       	add	r30, r24
    4836:	f9 1f       	adc	r31, r25
    4838:	30 83       	st	Z, r19
    483a:	4d 91       	ld	r20, X+
    483c:	5c 91       	ld	r21, X
    483e:	11 97       	sbiw	r26, 0x01	; 1
    4840:	14 96       	adiw	r26, 0x04	; 4
    4842:	8d 91       	ld	r24, X+
    4844:	9c 91       	ld	r25, X
    4846:	15 97       	sbiw	r26, 0x05	; 5
    4848:	bc 01       	movw	r22, r24
    484a:	6f 5f       	subi	r22, 0xFF	; 255
    484c:	7f 4f       	sbci	r23, 0xFF	; 255
    484e:	15 96       	adiw	r26, 0x05	; 5
    4850:	7c 93       	st	X, r23
    4852:	6e 93       	st	-X, r22
    4854:	14 97       	sbiw	r26, 0x04	; 4
    4856:	fa 01       	movw	r30, r20
    4858:	e8 0f       	add	r30, r24
    485a:	f9 1f       	adc	r31, r25
    485c:	20 83       	st	Z, r18
    485e:	60 e0       	ldi	r22, 0x00	; 0
    4860:	70 e0       	ldi	r23, 0x00	; 0
    4862:	cb 01       	movw	r24, r22
    4864:	ca c0       	rjmp	.+404    	; 0x49fa <getWriteExtParams+0x412>
    4866:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    486a:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    486e:	01 96       	adiw	r24, 0x01	; 1
    4870:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    4874:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    4878:	f8 01       	movw	r30, r16
    487a:	20 81       	ld	r18, Z
    487c:	31 81       	ldd	r19, Z+1	; 0x01
    487e:	84 81       	ldd	r24, Z+4	; 0x04
    4880:	95 81       	ldd	r25, Z+5	; 0x05
    4882:	ac 01       	movw	r20, r24
    4884:	4f 5f       	subi	r20, 0xFF	; 255
    4886:	5f 4f       	sbci	r21, 0xFF	; 255
    4888:	55 83       	std	Z+5, r21	; 0x05
    488a:	44 83       	std	Z+4, r20	; 0x04
    488c:	f9 01       	movw	r30, r18
    488e:	e8 0f       	add	r30, r24
    4890:	f9 1f       	adc	r31, r25
    4892:	2c 85       	ldd	r18, Y+12	; 0x0c
    4894:	20 83       	st	Z, r18
    4896:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    489a:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    489e:	01 96       	adiw	r24, 0x01	; 1
    48a0:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    48a4:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    48a8:	d8 01       	movw	r26, r16
    48aa:	2d 91       	ld	r18, X+
    48ac:	3c 91       	ld	r19, X
    48ae:	11 97       	sbiw	r26, 0x01	; 1
    48b0:	14 96       	adiw	r26, 0x04	; 4
    48b2:	8d 91       	ld	r24, X+
    48b4:	9c 91       	ld	r25, X
    48b6:	15 97       	sbiw	r26, 0x05	; 5
    48b8:	ac 01       	movw	r20, r24
    48ba:	4f 5f       	subi	r20, 0xFF	; 255
    48bc:	5f 4f       	sbci	r21, 0xFF	; 255
    48be:	15 96       	adiw	r26, 0x05	; 5
    48c0:	5c 93       	st	X, r21
    48c2:	4e 93       	st	-X, r20
    48c4:	14 97       	sbiw	r26, 0x04	; 4
    48c6:	f9 01       	movw	r30, r18
    48c8:	e8 0f       	add	r30, r24
    48ca:	f9 1f       	adc	r31, r25
    48cc:	2d 85       	ldd	r18, Y+13	; 0x0d
    48ce:	20 83       	st	Z, r18
    48d0:	60 e0       	ldi	r22, 0x00	; 0
    48d2:	70 e0       	ldi	r23, 0x00	; 0
    48d4:	cb 01       	movw	r24, r22
    48d6:	91 c0       	rjmp	.+290    	; 0x49fa <getWriteExtParams+0x412>
    48d8:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    48dc:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    48e0:	01 96       	adiw	r24, 0x01	; 1
    48e2:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    48e6:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    48ea:	f8 01       	movw	r30, r16
    48ec:	20 81       	ld	r18, Z
    48ee:	31 81       	ldd	r19, Z+1	; 0x01
    48f0:	84 81       	ldd	r24, Z+4	; 0x04
    48f2:	95 81       	ldd	r25, Z+5	; 0x05
    48f4:	ac 01       	movw	r20, r24
    48f6:	4f 5f       	subi	r20, 0xFF	; 255
    48f8:	5f 4f       	sbci	r21, 0xFF	; 255
    48fa:	55 83       	std	Z+5, r21	; 0x05
    48fc:	44 83       	std	Z+4, r20	; 0x04
    48fe:	f9 01       	movw	r30, r18
    4900:	e8 0f       	add	r30, r24
    4902:	f9 1f       	adc	r31, r25
    4904:	2a 85       	ldd	r18, Y+10	; 0x0a
    4906:	20 83       	st	Z, r18
    4908:	60 e0       	ldi	r22, 0x00	; 0
    490a:	70 e0       	ldi	r23, 0x00	; 0
    490c:	cb 01       	movw	r24, r22
    490e:	75 c0       	rjmp	.+234    	; 0x49fa <getWriteExtParams+0x412>
    4910:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    4914:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    4918:	01 96       	adiw	r24, 0x01	; 1
    491a:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    491e:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    4922:	d8 01       	movw	r26, r16
    4924:	2d 91       	ld	r18, X+
    4926:	3c 91       	ld	r19, X
    4928:	11 97       	sbiw	r26, 0x01	; 1
    492a:	14 96       	adiw	r26, 0x04	; 4
    492c:	8d 91       	ld	r24, X+
    492e:	9c 91       	ld	r25, X
    4930:	15 97       	sbiw	r26, 0x05	; 5
    4932:	ac 01       	movw	r20, r24
    4934:	4f 5f       	subi	r20, 0xFF	; 255
    4936:	5f 4f       	sbci	r21, 0xFF	; 255
    4938:	15 96       	adiw	r26, 0x05	; 5
    493a:	5c 93       	st	X, r21
    493c:	4e 93       	st	-X, r20
    493e:	14 97       	sbiw	r26, 0x04	; 4
    4940:	f9 01       	movw	r30, r18
    4942:	e8 0f       	add	r30, r24
    4944:	f9 1f       	adc	r31, r25
    4946:	2e 85       	ldd	r18, Y+14	; 0x0e
    4948:	20 83       	st	Z, r18
    494a:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    494e:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    4952:	01 96       	adiw	r24, 0x01	; 1
    4954:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    4958:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    495c:	2d 91       	ld	r18, X+
    495e:	3c 91       	ld	r19, X
    4960:	11 97       	sbiw	r26, 0x01	; 1
    4962:	14 96       	adiw	r26, 0x04	; 4
    4964:	8d 91       	ld	r24, X+
    4966:	9c 91       	ld	r25, X
    4968:	15 97       	sbiw	r26, 0x05	; 5
    496a:	ac 01       	movw	r20, r24
    496c:	4f 5f       	subi	r20, 0xFF	; 255
    496e:	5f 4f       	sbci	r21, 0xFF	; 255
    4970:	15 96       	adiw	r26, 0x05	; 5
    4972:	5c 93       	st	X, r21
    4974:	4e 93       	st	-X, r20
    4976:	14 97       	sbiw	r26, 0x04	; 4
    4978:	f9 01       	movw	r30, r18
    497a:	e8 0f       	add	r30, r24
    497c:	f9 1f       	adc	r31, r25
    497e:	2f 85       	ldd	r18, Y+15	; 0x0f
    4980:	20 83       	st	Z, r18
    4982:	60 e0       	ldi	r22, 0x00	; 0
    4984:	70 e0       	ldi	r23, 0x00	; 0
    4986:	cb 01       	movw	r24, r22
    4988:	38 c0       	rjmp	.+112    	; 0x49fa <getWriteExtParams+0x412>
    498a:	f8 01       	movw	r30, r16
    498c:	84 81       	ldd	r24, Z+4	; 0x04
    498e:	95 81       	ldd	r25, Z+5	; 0x05
    4990:	03 97       	sbiw	r24, 0x03	; 3
    4992:	95 83       	std	Z+5, r25	; 0x05
    4994:	84 83       	std	Z+4, r24	; 0x04
    4996:	60 e0       	ldi	r22, 0x00	; 0
    4998:	70 e0       	ldi	r23, 0x00	; 0
    499a:	cb 01       	movw	r24, r22
    499c:	2e c0       	rjmp	.+92     	; 0x49fa <getWriteExtParams+0x412>
    499e:	61 e0       	ldi	r22, 0x01	; 1
    49a0:	70 e0       	ldi	r23, 0x00	; 0
    49a2:	80 e0       	ldi	r24, 0x00	; 0
    49a4:	93 e0       	ldi	r25, 0x03	; 3
    49a6:	29 c0       	rjmp	.+82     	; 0x49fa <getWriteExtParams+0x412>
    49a8:	60 e0       	ldi	r22, 0x00	; 0
    49aa:	70 e0       	ldi	r23, 0x00	; 0
    49ac:	cb 01       	movw	r24, r22
    49ae:	25 c0       	rjmp	.+74     	; 0x49fa <getWriteExtParams+0x412>
    49b0:	23 8d       	ldd	r18, Z+27	; 0x1b
    49b2:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    49b6:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    49ba:	01 96       	adiw	r24, 0x01	; 1
    49bc:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    49c0:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    49c4:	d8 01       	movw	r26, r16
    49c6:	4d 91       	ld	r20, X+
    49c8:	5c 91       	ld	r21, X
    49ca:	11 97       	sbiw	r26, 0x01	; 1
    49cc:	14 96       	adiw	r26, 0x04	; 4
    49ce:	8d 91       	ld	r24, X+
    49d0:	9c 91       	ld	r25, X
    49d2:	15 97       	sbiw	r26, 0x05	; 5
    49d4:	bc 01       	movw	r22, r24
    49d6:	6f 5f       	subi	r22, 0xFF	; 255
    49d8:	7f 4f       	sbci	r23, 0xFF	; 255
    49da:	15 96       	adiw	r26, 0x05	; 5
    49dc:	7c 93       	st	X, r23
    49de:	6e 93       	st	-X, r22
    49e0:	14 97       	sbiw	r26, 0x04	; 4
    49e2:	fa 01       	movw	r30, r20
    49e4:	e8 0f       	add	r30, r24
    49e6:	f9 1f       	adc	r31, r25
    49e8:	20 83       	st	Z, r18
    49ea:	60 e0       	ldi	r22, 0x00	; 0
    49ec:	70 e0       	ldi	r23, 0x00	; 0
    49ee:	cb 01       	movw	r24, r22
    49f0:	04 c0       	rjmp	.+8      	; 0x49fa <getWriteExtParams+0x412>
    49f2:	61 e0       	ldi	r22, 0x01	; 1
    49f4:	70 e0       	ldi	r23, 0x00	; 0
    49f6:	80 e0       	ldi	r24, 0x00	; 0
    49f8:	93 e0       	ldi	r25, 0x03	; 3
    49fa:	2f 96       	adiw	r28, 0x0f	; 15
    49fc:	0f b6       	in	r0, 0x3f	; 63
    49fe:	f8 94       	cli
    4a00:	de bf       	out	0x3e, r29	; 62
    4a02:	0f be       	out	0x3f, r0	; 63
    4a04:	cd bf       	out	0x3d, r28	; 61
    4a06:	df 91       	pop	r29
    4a08:	cf 91       	pop	r28
    4a0a:	1f 91       	pop	r17
    4a0c:	0f 91       	pop	r16
    4a0e:	ff 90       	pop	r15
    4a10:	ef 90       	pop	r14
    4a12:	df 90       	pop	r13
    4a14:	cf 90       	pop	r12
    4a16:	bf 90       	pop	r11
    4a18:	af 90       	pop	r10
    4a1a:	9f 90       	pop	r9
    4a1c:	08 95       	ret

00004a1e <isTagTypeFilterAvail>:
    4a1e:	dc 01       	movw	r26, r24
    4a20:	89 2b       	or	r24, r25
    4a22:	19 f1       	breq	.+70     	; 0x4a6a <isTagTypeFilterAvail+0x4c>
    4a24:	8c 91       	ld	r24, X
    4a26:	83 30       	cpi	r24, 0x03	; 3
    4a28:	a1 f0       	breq	.+40     	; 0x4a52 <isTagTypeFilterAvail+0x34>
    4a2a:	82 30       	cpi	r24, 0x02	; 2
    4a2c:	01 f1       	breq	.+64     	; 0x4a6e <isTagTypeFilterAvail+0x50>
    4a2e:	80 e0       	ldi	r24, 0x00	; 0
    4a30:	08 95       	ret
    4a32:	11 96       	adiw	r26, 0x01	; 1
    4a34:	ed 91       	ld	r30, X+
    4a36:	fc 91       	ld	r31, X
    4a38:	12 97       	sbiw	r26, 0x02	; 2
    4a3a:	22 0f       	add	r18, r18
    4a3c:	33 1f       	adc	r19, r19
    4a3e:	e2 0f       	add	r30, r18
    4a40:	f3 1f       	adc	r31, r19
    4a42:	01 90       	ld	r0, Z+
    4a44:	f0 81       	ld	r31, Z
    4a46:	e0 2d       	mov	r30, r0
    4a48:	90 81       	ld	r25, Z
    4a4a:	92 30       	cpi	r25, 0x02	; 2
    4a4c:	91 f0       	breq	.+36     	; 0x4a72 <isTagTypeFilterAvail+0x54>
    4a4e:	8f 5f       	subi	r24, 0xFF	; 255
    4a50:	01 c0       	rjmp	.+2      	; 0x4a54 <isTagTypeFilterAvail+0x36>
    4a52:	80 e0       	ldi	r24, 0x00	; 0
    4a54:	28 2f       	mov	r18, r24
    4a56:	30 e0       	ldi	r19, 0x00	; 0
    4a58:	15 96       	adiw	r26, 0x05	; 5
    4a5a:	4d 91       	ld	r20, X+
    4a5c:	5c 91       	ld	r21, X
    4a5e:	16 97       	sbiw	r26, 0x06	; 6
    4a60:	24 17       	cp	r18, r20
    4a62:	35 07       	cpc	r19, r21
    4a64:	30 f3       	brcs	.-52     	; 0x4a32 <isTagTypeFilterAvail+0x14>
    4a66:	80 e0       	ldi	r24, 0x00	; 0
    4a68:	08 95       	ret
    4a6a:	80 e0       	ldi	r24, 0x00	; 0
    4a6c:	08 95       	ret
    4a6e:	81 e0       	ldi	r24, 0x01	; 1
    4a70:	08 95       	ret
    4a72:	81 e0       	ldi	r24, 0x01	; 1
    4a74:	08 95       	ret

00004a76 <TMR_SR_addTagOp>:
/**
 * Internal method used for adding the tagop
 **/ 
TMR_Status
TMR_SR_addTagOp(struct TMR_Reader *reader, TMR_TagOp *tagop,TMR_ReadPlan *rp, uint8_t *msg, uint8_t *j, uint32_t readTimeMs, uint8_t *byte )
{
    4a76:	2f 92       	push	r2
    4a78:	3f 92       	push	r3
    4a7a:	4f 92       	push	r4
    4a7c:	5f 92       	push	r5
    4a7e:	6f 92       	push	r6
    4a80:	7f 92       	push	r7
    4a82:	8f 92       	push	r8
    4a84:	9f 92       	push	r9
    4a86:	af 92       	push	r10
    4a88:	bf 92       	push	r11
    4a8a:	cf 92       	push	r12
    4a8c:	df 92       	push	r13
    4a8e:	ef 92       	push	r14
    4a90:	ff 92       	push	r15
    4a92:	0f 93       	push	r16
    4a94:	1f 93       	push	r17
    4a96:	cf 93       	push	r28
    4a98:	df 93       	push	r29
    4a9a:	cd b7       	in	r28, 0x3d	; 61
    4a9c:	de b7       	in	r29, 0x3e	; 62
    4a9e:	c8 51       	subi	r28, 0x18	; 24
    4aa0:	d1 40       	sbci	r29, 0x01	; 1
    4aa2:	0f b6       	in	r0, 0x3f	; 63
    4aa4:	f8 94       	cli
    4aa6:	de bf       	out	0x3e, r29	; 62
    4aa8:	0f be       	out	0x3f, r0	; 63
    4aaa:	cd bf       	out	0x3d, r28	; 61
    4aac:	3c 01       	movw	r6, r24
    4aae:	c3 5f       	subi	r28, 0xF3	; 243
    4ab0:	de 4f       	sbci	r29, 0xFE	; 254
    4ab2:	79 83       	std	Y+1, r23	; 0x01
    4ab4:	68 83       	st	Y, r22
    4ab6:	cd 50       	subi	r28, 0x0D	; 13
    4ab8:	d1 40       	sbci	r29, 0x01	; 1
    4aba:	1a 01       	movw	r2, r20
    4abc:	29 01       	movw	r4, r18
    4abe:	c1 5f       	subi	r28, 0xF1	; 241
    4ac0:	de 4f       	sbci	r29, 0xFE	; 254
    4ac2:	19 83       	std	Y+1, r17	; 0x01
    4ac4:	08 83       	st	Y, r16
    4ac6:	cf 50       	subi	r28, 0x0F	; 15
    4ac8:	d1 40       	sbci	r29, 0x01	; 1
    4aca:	cd 5e       	subi	r28, 0xED	; 237
    4acc:	de 4f       	sbci	r29, 0xFE	; 254
    4ace:	c8 82       	st	Y, r12
    4ad0:	d9 82       	std	Y+1, r13	; 0x01
    4ad2:	ea 82       	std	Y+2, r14	; 0x02
    4ad4:	fb 82       	std	Y+3, r15	; 0x03
    4ad6:	c3 51       	subi	r28, 0x13	; 19
    4ad8:	d1 40       	sbci	r29, 0x01	; 1
    4ada:	cf 5e       	subi	r28, 0xEF	; 239
    4adc:	de 4f       	sbci	r29, 0xFE	; 254
    4ade:	b9 82       	std	Y+1, r11	; 0x01
    4ae0:	a8 82       	st	Y, r10
    4ae2:	c1 51       	subi	r28, 0x11	; 17
    4ae4:	d1 40       	sbci	r29, 0x01	; 1
  bool customTagOp = false;
  TMR_SR_SerialReader *sr;
  sr = &reader->u.serialReader;
#endif /* TMR_ENABLE_UHF */

  i = *j; lenbyte = *byte;
    4ae6:	d8 01       	movw	r26, r16
    4ae8:	8c 91       	ld	r24, X
    4aea:	89 83       	std	Y+1, r24	; 0x01
    4aec:	f5 01       	movw	r30, r10
    4aee:	80 81       	ld	r24, Z
    4af0:	8a 83       	std	Y+2, r24	; 0x02

#ifdef TMR_ENABLE_UHF
  if(TMR_TAG_PROTOCOL_GEN2 == sr->currentProtocol)
    4af2:	f3 01       	movw	r30, r6
    4af4:	ee 57       	subi	r30, 0x7E	; 126
    4af6:	fc 4f       	sbci	r31, 0xFC	; 252
    4af8:	80 81       	ld	r24, Z
    4afa:	85 30       	cpi	r24, 0x05	; 5
    4afc:	09 f0       	breq	.+2      	; 0x4b00 <TMR_SR_addTagOp+0x8a>
    4afe:	57 c3       	rjmp	.+1710   	; 0x51ae <TMR_SR_addTagOp+0x738>
  {
  switch(tagop->type)
    4b00:	db 01       	movw	r26, r22
    4b02:	8c 91       	ld	r24, X
    4b04:	88 30       	cpi	r24, 0x08	; 8
    4b06:	08 f0       	brcs	.+2      	; 0x4b0a <TMR_SR_addTagOp+0x94>
    4b08:	4a c1       	rjmp	.+660    	; 0x4d9e <TMR_SR_addTagOp+0x328>
    case TMR_TAGOP_GEN2_KILL:
    case TMR_TAGOP_GEN2_BLOCKWRITE:
    case TMR_TAGOP_GEN2_BLOCKPERMALOCK:
    case TMR_TAGOP_GEN2_BLOCKERASE:
    {
      ret = prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_CONFIGURED_LIST
    4b0a:	ea 5a       	subi	r30, 0xAA	; 170
    4b0c:	f1 40       	sbci	r31, 0x01	; 1
    4b0e:	80 80       	ld	r8, Z
    4b10:	91 80       	ldd	r9, Z+1	; 0x01
    4b12:	a2 80       	ldd	r10, Z+2	; 0x02
    4b14:	b3 80       	ldd	r11, Z+3	; 0x03
    4b16:	fa 01       	movw	r30, r20
    4b18:	c4 84       	ldd	r12, Z+12	; 0x0c
                                   | TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND|TMR_SR_SEARCH_FLAG_LARGE_TAG_POPULATION_SUPPORT),
                                   rp->u.simple.filter, rp->u.simple.protocol, sr->gen2AccessPassword, &lenbyte);
    4b1a:	e5 84       	ldd	r14, Z+13	; 0x0d
    4b1c:	f6 84       	ldd	r15, Z+14	; 0x0e
    case TMR_TAGOP_GEN2_KILL:
    case TMR_TAGOP_GEN2_BLOCKWRITE:
    case TMR_TAGOP_GEN2_BLOCKPERMALOCK:
    case TMR_TAGOP_GEN2_BLOCKERASE:
    {
      ret = prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_CONFIGURED_LIST
    4b1e:	ce 01       	movw	r24, r28
    4b20:	02 96       	adiw	r24, 0x02	; 2
    4b22:	9f 93       	push	r25
    4b24:	8f 93       	push	r24
    4b26:	07 e1       	ldi	r16, 0x17	; 23
    4b28:	10 e0       	ldi	r17, 0x00	; 0
    4b2a:	cd 5e       	subi	r28, 0xED	; 237
    4b2c:	de 4f       	sbci	r29, 0xFE	; 254
    4b2e:	28 81       	ld	r18, Y
    4b30:	39 81       	ldd	r19, Y+1	; 0x01
    4b32:	c3 51       	subi	r28, 0x13	; 19
    4b34:	d1 40       	sbci	r29, 0x01	; 1
    4b36:	ae 01       	movw	r20, r28
    4b38:	4f 5f       	subi	r20, 0xFF	; 255
    4b3a:	5f 4f       	sbci	r21, 0xFF	; 255
    4b3c:	b2 01       	movw	r22, r4
    4b3e:	c3 01       	movw	r24, r6
    4b40:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <prepEmbReadTagMultiple>
    4b44:	c7 5f       	subi	r28, 0xF7	; 247
    4b46:	de 4f       	sbci	r29, 0xFE	; 254
    4b48:	68 83       	st	Y, r22
    4b4a:	79 83       	std	Y+1, r23	; 0x01
    4b4c:	8a 83       	std	Y+2, r24	; 0x02
    4b4e:	9b 83       	std	Y+3, r25	; 0x03
    4b50:	c9 50       	subi	r28, 0x09	; 9
    4b52:	d1 40       	sbci	r29, 0x01	; 1
                                   | TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND|TMR_SR_SEARCH_FLAG_LARGE_TAG_POPULATION_SUPPORT),
                                   rp->u.simple.filter, rp->u.simple.protocol, sr->gen2AccessPassword, &lenbyte);
      switch (tagop->type)
    4b54:	c3 5f       	subi	r28, 0xF3	; 243
    4b56:	de 4f       	sbci	r29, 0xFE	; 254
    4b58:	a8 81       	ld	r26, Y
    4b5a:	b9 81       	ldd	r27, Y+1	; 0x01
    4b5c:	cd 50       	subi	r28, 0x0D	; 13
    4b5e:	d1 40       	sbci	r29, 0x01	; 1
    4b60:	ec 91       	ld	r30, X
    4b62:	0f 90       	pop	r0
    4b64:	0f 90       	pop	r0
    4b66:	8e 2f       	mov	r24, r30
    4b68:	90 e0       	ldi	r25, 0x00	; 0
    4b6a:	88 30       	cpi	r24, 0x08	; 8
    4b6c:	91 05       	cpc	r25, r1
    4b6e:	08 f0       	brcs	.+2      	; 0x4b72 <TMR_SR_addTagOp+0xfc>
    4b70:	20 c1       	rjmp	.+576    	; 0x4db2 <TMR_SR_addTagOp+0x33c>
    4b72:	fc 01       	movw	r30, r24
    4b74:	e5 5f       	subi	r30, 0xF5	; 245
    4b76:	fd 4f       	sbci	r31, 0xFD	; 253
    4b78:	0c 94 d0 74 	jmp	0xe9a0	; 0xe9a0 <__tablejump2__>
      {
        case (TMR_TAGOP_GEN2_WRITETAG):
        {
          TMR_TagOp_GEN2_WriteTag *args;
          args = &rp->u.simple.tagop->u.gen2.u.writeTag;
    4b7c:	d1 01       	movw	r26, r2
    4b7e:	1f 96       	adiw	r26, 0x0f	; 15
    4b80:	ed 91       	ld	r30, X+
    4b82:	fc 91       	ld	r31, X
    4b84:	50 97       	sbiw	r26, 0x10	; 16

          TMR_SR_msgAddGEN2WriteTagEPC(msg,&i, 0, args->epcptr->epc, args->epcptr->epcByteCount);
    4b86:	21 81       	ldd	r18, Z+1	; 0x01
    4b88:	32 81       	ldd	r19, Z+2	; 0x02
    4b8a:	f9 01       	movw	r30, r18
    4b8c:	07 ad       	ldd	r16, Z+63	; 0x3f
    4b8e:	40 e0       	ldi	r20, 0x00	; 0
    4b90:	50 e0       	ldi	r21, 0x00	; 0
    4b92:	be 01       	movw	r22, r28
    4b94:	6f 5f       	subi	r22, 0xFF	; 255
    4b96:	7f 4f       	sbci	r23, 0xFF	; 255
    4b98:	c2 01       	movw	r24, r4
    4b9a:	0e 94 5a 3d 	call	0x7ab4	; 0x7ab4 <TMR_SR_msgAddGEN2WriteTagEPC>
{
 
  TMR_Status ret = TMR_SUCCESS;
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4b9e:	80 e0       	ldi	r24, 0x00	; 0
        {
          TMR_TagOp_GEN2_WriteTag *args;
          args = &rp->u.simple.tagop->u.gen2.u.writeTag;

          TMR_SR_msgAddGEN2WriteTagEPC(msg,&i, 0, args->epcptr->epc, args->epcptr->epcByteCount);
          break;
    4ba0:	09 c1       	rjmp	.+530    	; 0x4db4 <TMR_SR_addTagOp+0x33e>
        }
        case TMR_TAGOP_GEN2_READDATA:
        {
          TMR_TagOp_GEN2_ReadData *args;
          args = &rp->u.simple.tagop->u.gen2.u.readData;
    4ba2:	d1 01       	movw	r26, r2
    4ba4:	1f 96       	adiw	r26, 0x0f	; 15
    4ba6:	ed 91       	ld	r30, X+
    4ba8:	fc 91       	ld	r31, X
    4baa:	50 97       	sbiw	r26, 0x10	; 16

          /**
           * If user wants to read all the memory bank data,
           * In that case args.bank value should be greater than 3
           **/
          if ((uint8_t)args->bank > 3)
    4bac:	81 81       	ldd	r24, Z+1	; 0x01
    4bae:	84 30       	cpi	r24, 0x04	; 4
    4bb0:	28 f0       	brcs	.+10     	; 0x4bbc <TMR_SR_addTagOp+0x146>
          {
            /* enable the gen2AllMemoryBankEnabled option */
            sr->gen2AllMemoryBankEnabled = true;
    4bb2:	81 e0       	ldi	r24, 0x01	; 1
    4bb4:	d3 01       	movw	r26, r6
    4bb6:	a8 50       	subi	r26, 0x08	; 8
    4bb8:	ba 4f       	sbci	r27, 0xFA	; 250
    4bba:	8c 93       	st	X, r24
          }

          TMR_SR_msgAddGEN2DataRead(msg, &i, 2000, args->bank, args->wordAddress, args->len, 0x00, false);
    4bbc:	e2 80       	ldd	r14, Z+2	; 0x02
    4bbe:	f3 80       	ldd	r15, Z+3	; 0x03
    4bc0:	04 81       	ldd	r16, Z+4	; 0x04
    4bc2:	15 81       	ldd	r17, Z+5	; 0x05
    4bc4:	81 2c       	mov	r8, r1
    4bc6:	a1 2c       	mov	r10, r1
    4bc8:	c6 80       	ldd	r12, Z+6	; 0x06
    4bca:	21 81       	ldd	r18, Z+1	; 0x01
    4bcc:	40 ed       	ldi	r20, 0xD0	; 208
    4bce:	57 e0       	ldi	r21, 0x07	; 7
    4bd0:	be 01       	movw	r22, r28
    4bd2:	6f 5f       	subi	r22, 0xFF	; 255
    4bd4:	7f 4f       	sbci	r23, 0xFF	; 255
    4bd6:	c2 01       	movw	r24, r4
    4bd8:	0e 94 b2 3d 	call	0x7b64	; 0x7b64 <TMR_SR_msgAddGEN2DataRead>
{
 
  TMR_Status ret = TMR_SUCCESS;
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4bdc:	80 e0       	ldi	r24, 0x00	; 0
            /* enable the gen2AllMemoryBankEnabled option */
            sr->gen2AllMemoryBankEnabled = true;
          }

          TMR_SR_msgAddGEN2DataRead(msg, &i, 2000, args->bank, args->wordAddress, args->len, 0x00, false);
          break;
    4bde:	ea c0       	rjmp	.+468    	; 0x4db4 <TMR_SR_addTagOp+0x33e>
        case TMR_TAGOP_GEN2_WRITEDATA:
        {
          TMR_TagOp_GEN2_WriteData *args;
          int idx ;

          args = &rp->u.simple.tagop->u.gen2.u.writeData;
    4be0:	f1 01       	movw	r30, r2
    4be2:	a7 84       	ldd	r10, Z+15	; 0x0f
    4be4:	b0 88       	ldd	r11, Z+16	; 0x10

          TMR_SR_msgAddGEN2DataWrite(msg, &i, 0, args->bank, args->wordAddress, false);
    4be6:	d5 01       	movw	r26, r10
    4be8:	12 96       	adiw	r26, 0x02	; 2
    4bea:	ed 90       	ld	r14, X+
    4bec:	fd 90       	ld	r15, X+
    4bee:	0d 91       	ld	r16, X+
    4bf0:	1c 91       	ld	r17, X
    4bf2:	15 97       	sbiw	r26, 0x05	; 5
    4bf4:	c1 2c       	mov	r12, r1
    4bf6:	11 96       	adiw	r26, 0x01	; 1
    4bf8:	2c 91       	ld	r18, X
    4bfa:	40 e0       	ldi	r20, 0x00	; 0
    4bfc:	50 e0       	ldi	r21, 0x00	; 0
    4bfe:	be 01       	movw	r22, r28
    4c00:	6f 5f       	subi	r22, 0xFF	; 255
    4c02:	7f 4f       	sbci	r23, 0xFF	; 255
    4c04:	c2 01       	movw	r24, r4
    4c06:	0e 94 5b 3e 	call	0x7cb6	; 0x7cb6 <TMR_SR_msgAddGEN2DataWrite>

          for(idx = 0 ; idx< args->data.len; idx++)
    4c0a:	40 e0       	ldi	r20, 0x00	; 0
    4c0c:	50 e0       	ldi	r21, 0x00	; 0
    4c0e:	24 c0       	rjmp	.+72     	; 0x4c58 <TMR_SR_addTagOp+0x1e2>
          {
            msg[i++]= (args->data.list[idx]>>8) & 0xFF;
    4c10:	89 81       	ldd	r24, Y+1	; 0x01
    4c12:	21 e0       	ldi	r18, 0x01	; 1
    4c14:	28 0f       	add	r18, r24
    4c16:	b2 01       	movw	r22, r4
    4c18:	68 0f       	add	r22, r24
    4c1a:	71 1d       	adc	r23, r1
    4c1c:	d5 01       	movw	r26, r10
    4c1e:	16 96       	adiw	r26, 0x06	; 6
    4c20:	ed 91       	ld	r30, X+
    4c22:	fc 91       	ld	r31, X
    4c24:	17 97       	sbiw	r26, 0x07	; 7
    4c26:	ca 01       	movw	r24, r20
    4c28:	88 0f       	add	r24, r24
    4c2a:	99 1f       	adc	r25, r25
    4c2c:	e8 0f       	add	r30, r24
    4c2e:	f9 1f       	adc	r31, r25
    4c30:	31 81       	ldd	r19, Z+1	; 0x01
    4c32:	fb 01       	movw	r30, r22
    4c34:	30 83       	st	Z, r19
            msg[i++]= (args->data.list[idx]>>0) & 0xFF;
    4c36:	31 e0       	ldi	r19, 0x01	; 1
    4c38:	32 0f       	add	r19, r18
    4c3a:	39 83       	std	Y+1, r19	; 0x01
    4c3c:	f2 01       	movw	r30, r4
    4c3e:	e2 0f       	add	r30, r18
    4c40:	f1 1d       	adc	r31, r1
    4c42:	16 96       	adiw	r26, 0x06	; 6
    4c44:	2d 91       	ld	r18, X+
    4c46:	3c 91       	ld	r19, X
    4c48:	17 97       	sbiw	r26, 0x07	; 7
    4c4a:	d9 01       	movw	r26, r18
    4c4c:	a8 0f       	add	r26, r24
    4c4e:	b9 1f       	adc	r27, r25
    4c50:	8c 91       	ld	r24, X
    4c52:	80 83       	st	Z, r24

          args = &rp->u.simple.tagop->u.gen2.u.writeData;

          TMR_SR_msgAddGEN2DataWrite(msg, &i, 0, args->bank, args->wordAddress, false);

          for(idx = 0 ; idx< args->data.len; idx++)
    4c54:	4f 5f       	subi	r20, 0xFF	; 255
    4c56:	5f 4f       	sbci	r21, 0xFF	; 255
    4c58:	d5 01       	movw	r26, r10
    4c5a:	1a 96       	adiw	r26, 0x0a	; 10
    4c5c:	8d 91       	ld	r24, X+
    4c5e:	9c 91       	ld	r25, X
    4c60:	1b 97       	sbiw	r26, 0x0b	; 11
    4c62:	48 17       	cp	r20, r24
    4c64:	59 07       	cpc	r21, r25
    4c66:	a0 f2       	brcs	.-88     	; 0x4c10 <TMR_SR_addTagOp+0x19a>
{
 
  TMR_Status ret = TMR_SUCCESS;
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4c68:	80 e0       	ldi	r24, 0x00	; 0
    4c6a:	a4 c0       	rjmp	.+328    	; 0x4db4 <TMR_SR_addTagOp+0x33e>
          break;
        }
        case TMR_TAGOP_GEN2_LOCK:
        {
          TMR_TagOp_GEN2_Lock *args;
          args = &rp->u.simple.tagop->u.gen2.u.lock;
    4c6c:	d1 01       	movw	r26, r2
    4c6e:	1f 96       	adiw	r26, 0x0f	; 15
    4c70:	ed 91       	ld	r30, X+
    4c72:	fc 91       	ld	r31, X
    4c74:	50 97       	sbiw	r26, 0x10	; 16

          TMR_SR_msgAddGEN2LockTag(msg, &i, 0, args->mask, args->action, args->accessPassword);
    4c76:	c5 80       	ldd	r12, Z+5	; 0x05
    4c78:	d6 80       	ldd	r13, Z+6	; 0x06
    4c7a:	e7 80       	ldd	r14, Z+7	; 0x07
    4c7c:	f0 84       	ldd	r15, Z+8	; 0x08
    4c7e:	03 81       	ldd	r16, Z+3	; 0x03
    4c80:	14 81       	ldd	r17, Z+4	; 0x04
    4c82:	21 81       	ldd	r18, Z+1	; 0x01
    4c84:	32 81       	ldd	r19, Z+2	; 0x02
    4c86:	40 e0       	ldi	r20, 0x00	; 0
    4c88:	50 e0       	ldi	r21, 0x00	; 0
    4c8a:	be 01       	movw	r22, r28
    4c8c:	6f 5f       	subi	r22, 0xFF	; 255
    4c8e:	7f 4f       	sbci	r23, 0xFF	; 255
    4c90:	c2 01       	movw	r24, r4
    4c92:	0e 94 04 3f 	call	0x7e08	; 0x7e08 <TMR_SR_msgAddGEN2LockTag>
{
 
  TMR_Status ret = TMR_SUCCESS;
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4c96:	80 e0       	ldi	r24, 0x00	; 0
        {
          TMR_TagOp_GEN2_Lock *args;
          args = &rp->u.simple.tagop->u.gen2.u.lock;

          TMR_SR_msgAddGEN2LockTag(msg, &i, 0, args->mask, args->action, args->accessPassword);
          break;
    4c98:	8d c0       	rjmp	.+282    	; 0x4db4 <TMR_SR_addTagOp+0x33e>
        }
        case TMR_TAGOP_GEN2_KILL:
        {
          TMR_TagOp_GEN2_Kill *args;
          args = &rp->u.simple.tagop->u.gen2.u.kill;
    4c9a:	d1 01       	movw	r26, r2
    4c9c:	1f 96       	adiw	r26, 0x0f	; 15
    4c9e:	ed 91       	ld	r30, X+
    4ca0:	fc 91       	ld	r31, X
    4ca2:	50 97       	sbiw	r26, 0x10	; 16

          TMR_SR_msgAddGEN2KillTag(msg, &i, 0, args->password);
    4ca4:	01 81       	ldd	r16, Z+1	; 0x01
    4ca6:	12 81       	ldd	r17, Z+2	; 0x02
    4ca8:	23 81       	ldd	r18, Z+3	; 0x03
    4caa:	34 81       	ldd	r19, Z+4	; 0x04
    4cac:	40 e0       	ldi	r20, 0x00	; 0
    4cae:	50 e0       	ldi	r21, 0x00	; 0
    4cb0:	be 01       	movw	r22, r28
    4cb2:	6f 5f       	subi	r22, 0xFF	; 255
    4cb4:	7f 4f       	sbci	r23, 0xFF	; 255
    4cb6:	c2 01       	movw	r24, r4
    4cb8:	0e 94 95 3f 	call	0x7f2a	; 0x7f2a <TMR_SR_msgAddGEN2KillTag>
{
 
  TMR_Status ret = TMR_SUCCESS;
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4cbc:	80 e0       	ldi	r24, 0x00	; 0
        {
          TMR_TagOp_GEN2_Kill *args;
          args = &rp->u.simple.tagop->u.gen2.u.kill;

          TMR_SR_msgAddGEN2KillTag(msg, &i, 0, args->password);
          break;
    4cbe:	7a c0       	rjmp	.+244    	; 0x4db4 <TMR_SR_addTagOp+0x33e>
        }
        case TMR_TAGOP_GEN2_BLOCKWRITE:
        {
          TMR_TagOp_GEN2_BlockWrite *args;
          args = &rp->u.simple.tagop->u.gen2.u.blockWrite;
    4cc0:	d1 01       	movw	r26, r2
    4cc2:	1f 96       	adiw	r26, 0x0f	; 15
    4cc4:	ed 91       	ld	r30, X+
    4cc6:	fc 91       	ld	r31, X
    4cc8:	50 97       	sbiw	r26, 0x10	; 16

         TMR_SR_msgAddGEN2BlockWrite(msg, &i, 0, args->bank, args->wordPtr, args->data.len, args->data.list, 0, NULL);
    4cca:	a2 84       	ldd	r10, Z+10	; 0x0a
    4ccc:	b3 84       	ldd	r11, Z+11	; 0x0b
    4cce:	86 80       	ldd	r8, Z+6	; 0x06
    4cd0:	97 80       	ldd	r9, Z+7	; 0x07
    4cd2:	c1 2c       	mov	r12, r1
    4cd4:	d1 2c       	mov	r13, r1
    4cd6:	e2 80       	ldd	r14, Z+2	; 0x02
    4cd8:	f3 80       	ldd	r15, Z+3	; 0x03
    4cda:	04 81       	ldd	r16, Z+4	; 0x04
    4cdc:	15 81       	ldd	r17, Z+5	; 0x05
    4cde:	1f 92       	push	r1
    4ce0:	1f 92       	push	r1
    4ce2:	1f 92       	push	r1
    4ce4:	1f 92       	push	r1
    4ce6:	1f 92       	push	r1
    4ce8:	1f 92       	push	r1
    4cea:	21 81       	ldd	r18, Z+1	; 0x01
    4cec:	40 e0       	ldi	r20, 0x00	; 0
    4cee:	50 e0       	ldi	r21, 0x00	; 0
    4cf0:	be 01       	movw	r22, r28
    4cf2:	6f 5f       	subi	r22, 0xFF	; 255
    4cf4:	7f 4f       	sbci	r23, 0xFF	; 255
    4cf6:	c2 01       	movw	r24, r4
    4cf8:	0e 94 fd 3f 	call	0x7ffa	; 0x7ffa <TMR_SR_msgAddGEN2BlockWrite>
         break;
    4cfc:	0f 90       	pop	r0
    4cfe:	0f 90       	pop	r0
    4d00:	0f 90       	pop	r0
    4d02:	0f 90       	pop	r0
    4d04:	0f 90       	pop	r0
    4d06:	0f 90       	pop	r0
{
 
  TMR_Status ret = TMR_SUCCESS;
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4d08:	80 e0       	ldi	r24, 0x00	; 0
        {
          TMR_TagOp_GEN2_BlockWrite *args;
          args = &rp->u.simple.tagop->u.gen2.u.blockWrite;

         TMR_SR_msgAddGEN2BlockWrite(msg, &i, 0, args->bank, args->wordPtr, args->data.len, args->data.list, 0, NULL);
         break;
    4d0a:	54 c0       	rjmp	.+168    	; 0x4db4 <TMR_SR_addTagOp+0x33e>
        }
        case TMR_TAGOP_GEN2_BLOCKPERMALOCK:
        {
          TMR_TagOp_GEN2_BlockPermaLock *args;
          args = &rp->u.simple.tagop->u.gen2.u.blockPermaLock;
    4d0c:	d1 01       	movw	r26, r2
    4d0e:	1f 96       	adiw	r26, 0x0f	; 15
    4d10:	ed 91       	ld	r30, X+
    4d12:	fc 91       	ld	r31, X
    4d14:	50 97       	sbiw	r26, 0x10	; 16

          TMR_SR_msgAddGEN2BlockPermaLock(msg, &i, 0,args->readLock, args->bank, args->blockPtr, args->mask.len, 
    4d16:	83 85       	ldd	r24, Z+11	; 0x0b
    4d18:	94 85       	ldd	r25, Z+12	; 0x0c
    4d1a:	01 81       	ldd	r16, Z+1	; 0x01
    4d1c:	a3 80       	ldd	r10, Z+3	; 0x03
    4d1e:	b4 80       	ldd	r11, Z+4	; 0x04
    4d20:	c5 80       	ldd	r12, Z+5	; 0x05
    4d22:	d6 80       	ldd	r13, Z+6	; 0x06
    4d24:	10 e0       	ldi	r17, 0x00	; 0
    4d26:	20 e0       	ldi	r18, 0x00	; 0
    4d28:	30 e0       	ldi	r19, 0x00	; 0
    4d2a:	1f 92       	push	r1
    4d2c:	1f 92       	push	r1
    4d2e:	1f 92       	push	r1
    4d30:	1f 92       	push	r1
    4d32:	1f 92       	push	r1
    4d34:	1f 92       	push	r1
    4d36:	40 85       	ldd	r20, Z+8	; 0x08
    4d38:	4f 93       	push	r20
    4d3a:	47 81       	ldd	r20, Z+7	; 0x07
    4d3c:	4f 93       	push	r20
    4d3e:	1f 92       	push	r1
    4d40:	1f 92       	push	r1
    4d42:	9f 93       	push	r25
    4d44:	8f 93       	push	r24
    4d46:	e2 80       	ldd	r14, Z+2	; 0x02
    4d48:	40 e0       	ldi	r20, 0x00	; 0
    4d4a:	50 e0       	ldi	r21, 0x00	; 0
    4d4c:	be 01       	movw	r22, r28
    4d4e:	6f 5f       	subi	r22, 0xFF	; 255
    4d50:	7f 4f       	sbci	r23, 0xFF	; 255
    4d52:	c2 01       	movw	r24, r4
    4d54:	0e 94 79 41 	call	0x82f2	; 0x82f2 <TMR_SR_msgAddGEN2BlockPermaLock>
            args->mask.list, 0, NULL);
           break;
    4d58:	0f b6       	in	r0, 0x3f	; 63
    4d5a:	f8 94       	cli
    4d5c:	de bf       	out	0x3e, r29	; 62
    4d5e:	0f be       	out	0x3f, r0	; 63
    4d60:	cd bf       	out	0x3d, r28	; 61
{
 
  TMR_Status ret = TMR_SUCCESS;
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4d62:	80 e0       	ldi	r24, 0x00	; 0
          TMR_TagOp_GEN2_BlockPermaLock *args;
          args = &rp->u.simple.tagop->u.gen2.u.blockPermaLock;

          TMR_SR_msgAddGEN2BlockPermaLock(msg, &i, 0,args->readLock, args->bank, args->blockPtr, args->mask.len, 
            args->mask.list, 0, NULL);
           break;
    4d64:	27 c0       	rjmp	.+78     	; 0x4db4 <TMR_SR_addTagOp+0x33e>
        }
        case TMR_TAGOP_GEN2_BLOCKERASE:
        {
          TMR_TagOp_GEN2_BlockErase *args;
          args = &rp->u.simple.tagop->u.gen2.u.blockErase;
    4d66:	d1 01       	movw	r26, r2
    4d68:	1f 96       	adiw	r26, 0x0f	; 15
    4d6a:	ed 91       	ld	r30, X+
    4d6c:	fc 91       	ld	r31, X
    4d6e:	50 97       	sbiw	r26, 0x10	; 16

          TMR_SR_msgAddGEN2BlockErase(msg, &i, 0, args->wordPtr, args->bank, args->wordCount, 0, NULL);
    4d70:	02 81       	ldd	r16, Z+2	; 0x02
    4d72:	13 81       	ldd	r17, Z+3	; 0x03
    4d74:	24 81       	ldd	r18, Z+4	; 0x04
    4d76:	35 81       	ldd	r19, Z+5	; 0x05
    4d78:	1f 92       	push	r1
    4d7a:	1f 92       	push	r1
    4d7c:	81 2c       	mov	r8, r1
    4d7e:	91 2c       	mov	r9, r1
    4d80:	54 01       	movw	r10, r8
    4d82:	c6 80       	ldd	r12, Z+6	; 0x06
    4d84:	e1 80       	ldd	r14, Z+1	; 0x01
    4d86:	40 e0       	ldi	r20, 0x00	; 0
    4d88:	50 e0       	ldi	r21, 0x00	; 0
    4d8a:	be 01       	movw	r22, r28
    4d8c:	6f 5f       	subi	r22, 0xFF	; 255
    4d8e:	7f 4f       	sbci	r23, 0xFF	; 255
    4d90:	c2 01       	movw	r24, r4
    4d92:	0e 94 da 42 	call	0x85b4	; 0x85b4 <TMR_SR_msgAddGEN2BlockErase>
          break;
    4d96:	0f 90       	pop	r0
    4d98:	0f 90       	pop	r0
{
 
  TMR_Status ret = TMR_SUCCESS;
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4d9a:	80 e0       	ldi	r24, 0x00	; 0
        {
          TMR_TagOp_GEN2_BlockErase *args;
          args = &rp->u.simple.tagop->u.gen2.u.blockErase;

          TMR_SR_msgAddGEN2BlockErase(msg, &i, 0, args->wordPtr, args->bank, args->wordCount, 0, NULL);
          break;
    4d9c:	0b c0       	rjmp	.+22     	; 0x4db4 <TMR_SR_addTagOp+0x33e>
          break;
      }
      break;
    }
    default:
      customTagOp = true;
    4d9e:	81 e0       	ldi	r24, 0x01	; 1
 **/ 
TMR_Status
TMR_SR_addTagOp(struct TMR_Reader *reader, TMR_TagOp *tagop,TMR_ReadPlan *rp, uint8_t *msg, uint8_t *j, uint32_t readTimeMs, uint8_t *byte )
{
 
  TMR_Status ret = TMR_SUCCESS;
    4da0:	c7 5f       	subi	r28, 0xF7	; 247
    4da2:	de 4f       	sbci	r29, 0xFE	; 254
    4da4:	18 82       	st	Y, r1
    4da6:	19 82       	std	Y+1, r1	; 0x01
    4da8:	1a 82       	std	Y+2, r1	; 0x02
    4daa:	1b 82       	std	Y+3, r1	; 0x03
    4dac:	c9 50       	subi	r28, 0x09	; 9
    4dae:	d1 40       	sbci	r29, 0x01	; 1
    4db0:	01 c0       	rjmp	.+2      	; 0x4db4 <TMR_SR_addTagOp+0x33e>
  uint8_t i, lenbyte;
#ifdef TMR_ENABLE_UHF
  bool customTagOp = false;
    4db2:	80 e0       	ldi	r24, 0x00	; 0
    default:
      customTagOp = true;
      break;
  }

  if(customTagOp)
    4db4:	88 23       	and	r24, r24
    4db6:	09 f4       	brne	.+2      	; 0x4dba <TMR_SR_addTagOp+0x344>
    4db8:	86 c3       	rjmp	.+1804   	; 0x54c6 <TMR_SR_addTagOp+0xa50>
  {
    switch (tagop->type)
    4dba:	c3 5f       	subi	r28, 0xF3	; 243
    4dbc:	de 4f       	sbci	r29, 0xFE	; 254
    4dbe:	e8 81       	ld	r30, Y
    4dc0:	f9 81       	ldd	r31, Y+1	; 0x01
    4dc2:	cd 50       	subi	r28, 0x0D	; 13
    4dc4:	d1 40       	sbci	r29, 0x01	; 1
    4dc6:	80 81       	ld	r24, Z
    4dc8:	8a 31       	cpi	r24, 0x1A	; 26
    4dca:	21 f0       	breq	.+8      	; 0x4dd4 <TMR_SR_addTagOp+0x35e>
    4dcc:	87 34       	cpi	r24, 0x47	; 71
    4dce:	09 f4       	brne	.+2      	; 0x4dd2 <TMR_SR_addTagOp+0x35c>
    4dd0:	9b c0       	rjmp	.+310    	; 0x4f08 <TMR_SR_addTagOp+0x492>
    4dd2:	9e c3       	rjmp	.+1852   	; 0x5510 <TMR_SR_addTagOp+0xa9a>
        TMR_TagOp_GEN2_SecureReadData *args;
        uint8_t accessPassword[4];
        int index = 0;

        /* Enable the Secure ReadData option */
        isSecureAccessEnabled = true;
    4dd4:	81 e0       	ldi	r24, 0x01	; 1
    4dd6:	80 93 dc 0b 	sts	0x0BDC, r24	; 0x800bdc <isSecureAccessEnabled>

        args = &rp->u.simple.tagop->u.gen2.u.secureReadData;
    4dda:	d1 01       	movw	r26, r2
    4ddc:	1f 96       	adiw	r26, 0x0f	; 15
    4dde:	0d 90       	ld	r0, X+
    4de0:	bc 91       	ld	r27, X
    4de2:	a0 2d       	mov	r26, r0
    4de4:	c3 5f       	subi	r28, 0xF3	; 243
    4de6:	de 4f       	sbci	r29, 0xFE	; 254
    4de8:	b9 83       	std	Y+1, r27	; 0x01
    4dea:	a8 83       	st	Y, r26
    4dec:	cd 50       	subi	r28, 0x0D	; 13
    4dee:	d1 40       	sbci	r29, 0x01	; 1
        if (args->passwordType == TMR_SECURE_GEN2_LOOKUP_TABLE_PASSWORD)
    4df0:	18 96       	adiw	r26, 0x08	; 8
    4df2:	8c 91       	ld	r24, X
    4df4:	18 97       	sbiw	r26, 0x08	; 8
    4df6:	82 30       	cpi	r24, 0x02	; 2
    4df8:	89 f5       	brne	.+98     	; 0x4e5c <TMR_SR_addTagOp+0x3e6>
        {
          /* Do this in case of look up table */
          accessPassword[index++] = args->password.secureAddressLength;
    4dfa:	94 96       	adiw	r26, 0x24	; 36
    4dfc:	8c 90       	ld	r8, X
    4dfe:	94 97       	sbiw	r26, 0x24	; 36
          accessPassword[index++] = args->password.secureAddressOffset;
    4e00:	95 96       	adiw	r26, 0x25	; 37
    4e02:	9c 91       	ld	r25, X
    4e04:	95 97       	sbiw	r26, 0x25	; 37
          accessPassword[index++] = (args->password.secureFlashOffset >> 8);
    4e06:	96 96       	adiw	r26, 0x26	; 38
    4e08:	2c 91       	ld	r18, X
    4e0a:	96 97       	sbiw	r26, 0x26	; 38
    4e0c:	97 96       	adiw	r26, 0x27	; 39
    4e0e:	4c 91       	ld	r20, X
          accessPassword[index++] = (args->password.secureFlashOffset & 0xFF);

          sr->gen2AccessPassword = (uint32_t)accessPassword[0] << 24 |
    4e10:	91 2c       	mov	r9, r1
    4e12:	a1 2c       	mov	r10, r1
    4e14:	b1 2c       	mov	r11, r1
    4e16:	b8 2c       	mov	r11, r8
    4e18:	aa 24       	eor	r10, r10
    4e1a:	99 24       	eor	r9, r9
    4e1c:	88 24       	eor	r8, r8
            (uint32_t)accessPassword[1] << 16 |
    4e1e:	89 2f       	mov	r24, r25
    4e20:	90 e0       	ldi	r25, 0x00	; 0
    4e22:	a0 e0       	ldi	r26, 0x00	; 0
    4e24:	b0 e0       	ldi	r27, 0x00	; 0
    4e26:	dc 01       	movw	r26, r24
    4e28:	99 27       	eor	r25, r25
    4e2a:	88 27       	eor	r24, r24
          accessPassword[index++] = args->password.secureAddressLength;
          accessPassword[index++] = args->password.secureAddressOffset;
          accessPassword[index++] = (args->password.secureFlashOffset >> 8);
          accessPassword[index++] = (args->password.secureFlashOffset & 0xFF);

          sr->gen2AccessPassword = (uint32_t)accessPassword[0] << 24 |
    4e2c:	88 29       	or	r24, r8
    4e2e:	99 29       	or	r25, r9
    4e30:	aa 29       	or	r26, r10
    4e32:	bb 29       	or	r27, r11
            (uint32_t)accessPassword[1] << 16 |
            (uint32_t)accessPassword[2] << 8  |
    4e34:	50 e0       	ldi	r21, 0x00	; 0
    4e36:	60 e0       	ldi	r22, 0x00	; 0
    4e38:	70 e0       	ldi	r23, 0x00	; 0
    4e3a:	76 2f       	mov	r23, r22
    4e3c:	65 2f       	mov	r22, r21
    4e3e:	54 2f       	mov	r21, r20
    4e40:	44 27       	eor	r20, r20
          accessPassword[index++] = args->password.secureAddressOffset;
          accessPassword[index++] = (args->password.secureFlashOffset >> 8);
          accessPassword[index++] = (args->password.secureFlashOffset & 0xFF);

          sr->gen2AccessPassword = (uint32_t)accessPassword[0] << 24 |
            (uint32_t)accessPassword[1] << 16 |
    4e42:	84 2b       	or	r24, r20
    4e44:	95 2b       	or	r25, r21
    4e46:	a6 2b       	or	r26, r22
    4e48:	b7 2b       	or	r27, r23
            (uint32_t)accessPassword[2] << 8  |
    4e4a:	82 2b       	or	r24, r18
          accessPassword[index++] = args->password.secureAddressLength;
          accessPassword[index++] = args->password.secureAddressOffset;
          accessPassword[index++] = (args->password.secureFlashOffset >> 8);
          accessPassword[index++] = (args->password.secureFlashOffset & 0xFF);

          sr->gen2AccessPassword = (uint32_t)accessPassword[0] << 24 |
    4e4c:	f3 01       	movw	r30, r6
    4e4e:	e8 52       	subi	r30, 0x28	; 40
    4e50:	fe 4f       	sbci	r31, 0xFE	; 254
    4e52:	80 83       	st	Z, r24
    4e54:	91 83       	std	Z+1, r25	; 0x01
    4e56:	a2 83       	std	Z+2, r26	; 0x02
    4e58:	b3 83       	std	Z+3, r27	; 0x03
    4e5a:	11 c0       	rjmp	.+34     	; 0x4e7e <TMR_SR_addTagOp+0x408>
            (uint32_t)accessPassword[3];
        }
        else
        {
          /* Do this in case of Gen2 password */
          sr->gen2AccessPassword = args->password.gen2PassWord.u.gen2Password;
    4e5c:	c3 5f       	subi	r28, 0xF3	; 243
    4e5e:	de 4f       	sbci	r29, 0xFE	; 254
    4e60:	e8 81       	ld	r30, Y
    4e62:	f9 81       	ldd	r31, Y+1	; 0x01
    4e64:	cd 50       	subi	r28, 0x0D	; 13
    4e66:	d1 40       	sbci	r29, 0x01	; 1
    4e68:	82 85       	ldd	r24, Z+10	; 0x0a
    4e6a:	93 85       	ldd	r25, Z+11	; 0x0b
    4e6c:	a4 85       	ldd	r26, Z+12	; 0x0c
    4e6e:	b5 85       	ldd	r27, Z+13	; 0x0d
    4e70:	f3 01       	movw	r30, r6
    4e72:	e8 52       	subi	r30, 0x28	; 40
    4e74:	fe 4f       	sbci	r31, 0xFE	; 254
    4e76:	80 83       	st	Z, r24
    4e78:	91 83       	std	Z+1, r25	; 0x01
    4e7a:	a2 83       	std	Z+2, r26	; 0x02
    4e7c:	b3 83       	std	Z+3, r27	; 0x03
        }

        ret = prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_CONFIGURED_LIST
    4e7e:	f3 01       	movw	r30, r6
    4e80:	e8 52       	subi	r30, 0x28	; 40
    4e82:	fe 4f       	sbci	r31, 0xFE	; 254
    4e84:	80 80       	ld	r8, Z
    4e86:	91 80       	ldd	r9, Z+1	; 0x01
    4e88:	a2 80       	ldd	r10, Z+2	; 0x02
    4e8a:	b3 80       	ldd	r11, Z+3	; 0x03
    4e8c:	d1 01       	movw	r26, r2
    4e8e:	1c 96       	adiw	r26, 0x0c	; 12
    4e90:	cc 90       	ld	r12, X
    4e92:	1c 97       	sbiw	r26, 0x0c	; 12
            | TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND | TMR_SR_SEARCH_FLAG_LARGE_TAG_POPULATION_SUPPORT),
            rp->u.simple.filter, rp->u.simple.protocol, sr->gen2AccessPassword, &lenbyte);
    4e94:	1d 96       	adiw	r26, 0x0d	; 13
    4e96:	ed 90       	ld	r14, X+
    4e98:	fc 90       	ld	r15, X
    4e9a:	1e 97       	sbiw	r26, 0x0e	; 14
        {
          /* Do this in case of Gen2 password */
          sr->gen2AccessPassword = args->password.gen2PassWord.u.gen2Password;
        }

        ret = prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_CONFIGURED_LIST
    4e9c:	ce 01       	movw	r24, r28
    4e9e:	02 96       	adiw	r24, 0x02	; 2
    4ea0:	9f 93       	push	r25
    4ea2:	8f 93       	push	r24
    4ea4:	07 e1       	ldi	r16, 0x17	; 23
    4ea6:	10 e0       	ldi	r17, 0x00	; 0
    4ea8:	cd 5e       	subi	r28, 0xED	; 237
    4eaa:	de 4f       	sbci	r29, 0xFE	; 254
    4eac:	28 81       	ld	r18, Y
    4eae:	39 81       	ldd	r19, Y+1	; 0x01
    4eb0:	c3 51       	subi	r28, 0x13	; 19
    4eb2:	d1 40       	sbci	r29, 0x01	; 1
    4eb4:	ae 01       	movw	r20, r28
    4eb6:	4f 5f       	subi	r20, 0xFF	; 255
    4eb8:	5f 4f       	sbci	r21, 0xFF	; 255
    4eba:	b2 01       	movw	r22, r4
    4ebc:	c3 01       	movw	r24, r6
    4ebe:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <prepEmbReadTagMultiple>
    4ec2:	c7 5f       	subi	r28, 0xF7	; 247
    4ec4:	de 4f       	sbci	r29, 0xFE	; 254
    4ec6:	68 83       	st	Y, r22
    4ec8:	79 83       	std	Y+1, r23	; 0x01
    4eca:	8a 83       	std	Y+2, r24	; 0x02
    4ecc:	9b 83       	std	Y+3, r25	; 0x03
    4ece:	c9 50       	subi	r28, 0x09	; 9
    4ed0:	d1 40       	sbci	r29, 0x01	; 1
            | TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND | TMR_SR_SEARCH_FLAG_LARGE_TAG_POPULATION_SUPPORT),
            rp->u.simple.filter, rp->u.simple.protocol, sr->gen2AccessPassword, &lenbyte);

        TMR_SR_msgAddGEN2DataRead(msg, &i, 2000, args->readData.bank, args->readData.wordAddress,
            args->readData.len,args->type, false);
    4ed2:	c3 5f       	subi	r28, 0xF3	; 243
    4ed4:	de 4f       	sbci	r29, 0xFE	; 254
    4ed6:	e8 81       	ld	r30, Y
    4ed8:	f9 81       	ldd	r31, Y+1	; 0x01
    4eda:	cd 50       	subi	r28, 0x0D	; 13
    4edc:	d1 40       	sbci	r29, 0x01	; 1
    4ede:	a7 80       	ldd	r10, Z+7	; 0x07

        ret = prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_CONFIGURED_LIST
            | TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND | TMR_SR_SEARCH_FLAG_LARGE_TAG_POPULATION_SUPPORT),
            rp->u.simple.filter, rp->u.simple.protocol, sr->gen2AccessPassword, &lenbyte);

        TMR_SR_msgAddGEN2DataRead(msg, &i, 2000, args->readData.bank, args->readData.wordAddress,
    4ee0:	e2 80       	ldd	r14, Z+2	; 0x02
    4ee2:	f3 80       	ldd	r15, Z+3	; 0x03
    4ee4:	04 81       	ldd	r16, Z+4	; 0x04
    4ee6:	15 81       	ldd	r17, Z+5	; 0x05
    4ee8:	81 2c       	mov	r8, r1
    4eea:	c6 80       	ldd	r12, Z+6	; 0x06
    4eec:	21 81       	ldd	r18, Z+1	; 0x01
    4eee:	40 ed       	ldi	r20, 0xD0	; 208
    4ef0:	57 e0       	ldi	r21, 0x07	; 7
    4ef2:	be 01       	movw	r22, r28
    4ef4:	6f 5f       	subi	r22, 0xFF	; 255
    4ef6:	7f 4f       	sbci	r23, 0xFF	; 255
    4ef8:	c2 01       	movw	r24, r4
    4efa:	0e 94 b2 3d 	call	0x7b64	; 0x7b64 <TMR_SR_msgAddGEN2DataRead>
            args->readData.len,args->type, false);

				isSecureAccessEnabled = false;
    4efe:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <isSecureAccessEnabled>
    4f02:	0f 90       	pop	r0
    4f04:	0f 90       	pop	r0
    4f06:	df c2       	rjmp	.+1470   	; 0x54c6 <TMR_SR_addTagOp+0xa50>
        break;
      }
#endif /* TMR_ENABLE_GEN2_CUSTOM_TAGOPS */
    case TMR_TAGOP_LIST:
      {
        if(tagop->u.list.len == 1)
    4f08:	c3 5f       	subi	r28, 0xF3	; 243
    4f0a:	de 4f       	sbci	r29, 0xFE	; 254
    4f0c:	a8 81       	ld	r26, Y
    4f0e:	b9 81       	ldd	r27, Y+1	; 0x01
    4f10:	cd 50       	subi	r28, 0x0D	; 13
    4f12:	d1 40       	sbci	r29, 0x01	; 1
    4f14:	13 96       	adiw	r26, 0x03	; 3
    4f16:	8d 91       	ld	r24, X+
    4f18:	9c 91       	ld	r25, X
    4f1a:	14 97       	sbiw	r26, 0x04	; 4
    4f1c:	81 30       	cpi	r24, 0x01	; 1
    4f1e:	91 05       	cpc	r25, r1
    4f20:	f9 f4       	brne	.+62     	; 0x4f60 <TMR_SR_addTagOp+0x4ea>
        {
          TMR_TagOp *op;
          op = tagop->u.list.list[0];
    4f22:	11 96       	adiw	r26, 0x01	; 1
    4f24:	ed 91       	ld	r30, X+
    4f26:	fc 91       	ld	r31, X
    4f28:	12 97       	sbiw	r26, 0x02	; 2
    4f2a:	60 81       	ld	r22, Z
    4f2c:	71 81       	ldd	r23, Z+1	; 0x01
          return TMR_SR_addTagOp(reader, op, rp, msg, j, readTimeMs, byte);
    4f2e:	cf 5e       	subi	r28, 0xEF	; 239
    4f30:	de 4f       	sbci	r29, 0xFE	; 254
    4f32:	a8 80       	ld	r10, Y
    4f34:	b9 80       	ldd	r11, Y+1	; 0x01
    4f36:	c1 51       	subi	r28, 0x11	; 17
    4f38:	d1 40       	sbci	r29, 0x01	; 1
    4f3a:	cd 5e       	subi	r28, 0xED	; 237
    4f3c:	de 4f       	sbci	r29, 0xFE	; 254
    4f3e:	c8 80       	ld	r12, Y
    4f40:	d9 80       	ldd	r13, Y+1	; 0x01
    4f42:	ea 80       	ldd	r14, Y+2	; 0x02
    4f44:	fb 80       	ldd	r15, Y+3	; 0x03
    4f46:	c3 51       	subi	r28, 0x13	; 19
    4f48:	d1 40       	sbci	r29, 0x01	; 1
    4f4a:	c1 5f       	subi	r28, 0xF1	; 241
    4f4c:	de 4f       	sbci	r29, 0xFE	; 254
    4f4e:	08 81       	ld	r16, Y
    4f50:	19 81       	ldd	r17, Y+1	; 0x01
    4f52:	cf 50       	subi	r28, 0x0F	; 15
    4f54:	d1 40       	sbci	r29, 0x01	; 1
    4f56:	92 01       	movw	r18, r4
    4f58:	a1 01       	movw	r20, r2
    4f5a:	c3 01       	movw	r24, r6
    4f5c:	8c dd       	rcall	.-1256   	; 0x4a76 <TMR_SR_addTagOp>
    4f5e:	f0 c2       	rjmp	.+1504   	; 0x5540 <TMR_SR_addTagOp+0xaca>
        }
        else if (tagop->u.list.len == 2)
    4f60:	02 97       	sbiw	r24, 0x02	; 2
    4f62:	09 f0       	breq	.+2      	; 0x4f66 <TMR_SR_addTagOp+0x4f0>
    4f64:	da c2       	rjmp	.+1460   	; 0x551a <TMR_SR_addTagOp+0xaa4>
        {
          if (TMR_TAGOP_GEN2_READDATA == tagop->u.list.list[1]->type)
    4f66:	c3 5f       	subi	r28, 0xF3	; 243
    4f68:	de 4f       	sbci	r29, 0xFE	; 254
    4f6a:	a8 81       	ld	r26, Y
    4f6c:	b9 81       	ldd	r27, Y+1	; 0x01
    4f6e:	cd 50       	subi	r28, 0x0D	; 13
    4f70:	d1 40       	sbci	r29, 0x01	; 1
    4f72:	11 96       	adiw	r26, 0x01	; 1
    4f74:	ed 91       	ld	r30, X+
    4f76:	fc 91       	ld	r31, X
    4f78:	12 97       	sbiw	r26, 0x02	; 2
    4f7a:	a2 81       	ldd	r26, Z+2	; 0x02
    4f7c:	b3 81       	ldd	r27, Z+3	; 0x03
    4f7e:	8c 91       	ld	r24, X
    4f80:	81 30       	cpi	r24, 0x01	; 1
    4f82:	09 f0       	breq	.+2      	; 0x4f86 <TMR_SR_addTagOp+0x510>
    4f84:	cf c2       	rjmp	.+1438   	; 0x5524 <TMR_SR_addTagOp+0xaae>
          {
            if((TMR_TAGOP_GEN2_WRITEDATA == tagop->u.list.list[0]->type) || (TMR_TAGOP_GEN2_WRITETAG == tagop->u.list.list[0]->type))
    4f86:	01 90       	ld	r0, Z+
    4f88:	f0 81       	ld	r31, Z
    4f8a:	e0 2d       	mov	r30, r0
    4f8c:	80 81       	ld	r24, Z
    4f8e:	82 30       	cpi	r24, 0x02	; 2
    4f90:	11 f0       	breq	.+4      	; 0x4f96 <TMR_SR_addTagOp+0x520>
    4f92:	81 11       	cpse	r24, r1
    4f94:	cc c2       	rjmp	.+1432   	; 0x552e <TMR_SR_addTagOp+0xab8>
            {
              TMR_TagOp_GEN2_ReadData readData;
              TMR_TagOp *readOp, *writeOp;
              
              reader->isReadAfterWrite = true;
    4f96:	f3 01       	movw	r30, r6
    4f98:	e3 5f       	subi	r30, 0xF3	; 243
    4f9a:	f9 4f       	sbci	r31, 0xF9	; 249
    4f9c:	81 e0       	ldi	r24, 0x01	; 1
    4f9e:	80 83       	st	Z, r24
              writeOp = tagop->u.list.list[0];
    4fa0:	c3 5f       	subi	r28, 0xF3	; 243
    4fa2:	de 4f       	sbci	r29, 0xFE	; 254
    4fa4:	a8 81       	ld	r26, Y
    4fa6:	b9 81       	ldd	r27, Y+1	; 0x01
    4fa8:	cd 50       	subi	r28, 0x0D	; 13
    4faa:	d1 40       	sbci	r29, 0x01	; 1
    4fac:	11 96       	adiw	r26, 0x01	; 1
    4fae:	ed 91       	ld	r30, X+
    4fb0:	fc 91       	ld	r31, X
    4fb2:	12 97       	sbiw	r26, 0x02	; 2
    4fb4:	80 81       	ld	r24, Z
    4fb6:	91 81       	ldd	r25, Z+1	; 0x01
    4fb8:	c9 5e       	subi	r28, 0xE9	; 233
    4fba:	de 4f       	sbci	r29, 0xFE	; 254
    4fbc:	99 83       	std	Y+1, r25	; 0x01
    4fbe:	88 83       	st	Y, r24
    4fc0:	c7 51       	subi	r28, 0x17	; 23
    4fc2:	d1 40       	sbci	r29, 0x01	; 1
              readOp = tagop->u.list.list[1];
    4fc4:	02 80       	ldd	r0, Z+2	; 0x02
    4fc6:	f3 81       	ldd	r31, Z+3	; 0x03
    4fc8:	e0 2d       	mov	r30, r0
              readData = readOp->u.gen2.u.readData;
    4fca:	86 e0       	ldi	r24, 0x06	; 6
    4fcc:	31 96       	adiw	r30, 0x01	; 1
    4fce:	de 01       	movw	r26, r28
    4fd0:	ae 5f       	subi	r26, 0xFE	; 254
    4fd2:	be 4f       	sbci	r27, 0xFE	; 254
    4fd4:	01 90       	ld	r0, Z+
    4fd6:	0d 92       	st	X+, r0
    4fd8:	8a 95       	dec	r24
    4fda:	e1 f7       	brne	.-8      	; 0x4fd4 <TMR_SR_addTagOp+0x55e>

              prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_CONFIGURED_LIST
                                      | TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND|TMR_SR_SEARCH_FLAG_LARGE_TAG_POPULATION_SUPPORT),
                                      rp->u.simple.filter, rp->u.simple.protocol, sr->gen2AccessPassword, &lenbyte);
    4fdc:	d1 01       	movw	r26, r2
    4fde:	1d 96       	adiw	r26, 0x0d	; 13
    4fe0:	ed 90       	ld	r14, X+
    4fe2:	fc 90       	ld	r15, X
    4fe4:	1e 97       	sbiw	r26, 0x0e	; 14
              reader->isReadAfterWrite = true;
              writeOp = tagop->u.list.list[0];
              readOp = tagop->u.list.list[1];
              readData = readOp->u.gen2.u.readData;

              prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_CONFIGURED_LIST
    4fe6:	f3 01       	movw	r30, r6
    4fe8:	e8 52       	subi	r30, 0x28	; 40
    4fea:	fe 4f       	sbci	r31, 0xFE	; 254
    4fec:	80 80       	ld	r8, Z
    4fee:	91 80       	ldd	r9, Z+1	; 0x01
    4ff0:	a2 80       	ldd	r10, Z+2	; 0x02
    4ff2:	b3 80       	ldd	r11, Z+3	; 0x03
    4ff4:	ce 01       	movw	r24, r28
    4ff6:	02 96       	adiw	r24, 0x02	; 2
    4ff8:	9f 93       	push	r25
    4ffa:	8f 93       	push	r24
    4ffc:	1c 96       	adiw	r26, 0x0c	; 12
    4ffe:	cc 90       	ld	r12, X
    5000:	07 e1       	ldi	r16, 0x17	; 23
    5002:	10 e0       	ldi	r17, 0x00	; 0
    5004:	cd 5e       	subi	r28, 0xED	; 237
    5006:	de 4f       	sbci	r29, 0xFE	; 254
    5008:	28 81       	ld	r18, Y
    500a:	39 81       	ldd	r19, Y+1	; 0x01
    500c:	c3 51       	subi	r28, 0x13	; 19
    500e:	d1 40       	sbci	r29, 0x01	; 1
    5010:	ae 01       	movw	r20, r28
    5012:	4f 5f       	subi	r20, 0xFF	; 255
    5014:	5f 4f       	sbci	r21, 0xFF	; 255
    5016:	b2 01       	movw	r22, r4
    5018:	c3 01       	movw	r24, r6
    501a:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <prepEmbReadTagMultiple>
                                      | TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND|TMR_SR_SEARCH_FLAG_LARGE_TAG_POPULATION_SUPPORT),
                                      rp->u.simple.filter, rp->u.simple.protocol, sr->gen2AccessPassword, &lenbyte);

              switch (tagop->u.list.list[0]->type)
    501e:	c3 5f       	subi	r28, 0xF3	; 243
    5020:	de 4f       	sbci	r29, 0xFE	; 254
    5022:	a8 81       	ld	r26, Y
    5024:	b9 81       	ldd	r27, Y+1	; 0x01
    5026:	cd 50       	subi	r28, 0x0D	; 13
    5028:	d1 40       	sbci	r29, 0x01	; 1
    502a:	11 96       	adiw	r26, 0x01	; 1
    502c:	ed 91       	ld	r30, X+
    502e:	fc 91       	ld	r31, X
    5030:	12 97       	sbiw	r26, 0x02	; 2
    5032:	01 90       	ld	r0, Z+
    5034:	f0 81       	ld	r31, Z
    5036:	e0 2d       	mov	r30, r0
    5038:	80 81       	ld	r24, Z
    503a:	0f 90       	pop	r0
    503c:	0f 90       	pop	r0
    503e:	88 23       	and	r24, r24
    5040:	09 f4       	brne	.+2      	; 0x5044 <TMR_SR_addTagOp+0x5ce>
    5042:	45 c0       	rjmp	.+138    	; 0x50ce <TMR_SR_addTagOp+0x658>
    5044:	82 30       	cpi	r24, 0x02	; 2
    5046:	09 f0       	breq	.+2      	; 0x504a <TMR_SR_addTagOp+0x5d4>
    5048:	52 c0       	rjmp	.+164    	; 0x50ee <TMR_SR_addTagOp+0x678>
                case TMR_TAGOP_GEN2_WRITEDATA:
                {
                  TMR_TagOp_GEN2_WriteData writeData;
                  int idx;

                  writeData = writeOp->u.gen2.u.writeData;
    504a:	8b e0       	ldi	r24, 0x0B	; 11
    504c:	c9 5e       	subi	r28, 0xE9	; 233
    504e:	de 4f       	sbci	r29, 0xFE	; 254
    5050:	e8 81       	ld	r30, Y
    5052:	f9 81       	ldd	r31, Y+1	; 0x01
    5054:	c7 51       	subi	r28, 0x17	; 23
    5056:	d1 40       	sbci	r29, 0x01	; 1
    5058:	31 96       	adiw	r30, 0x01	; 1
    505a:	de 01       	movw	r26, r28
    505c:	13 96       	adiw	r26, 0x03	; 3
    505e:	01 90       	ld	r0, Z+
    5060:	0d 92       	st	X+, r0
    5062:	8a 95       	dec	r24
    5064:	e1 f7       	brne	.-8      	; 0x505e <TMR_SR_addTagOp+0x5e8>
                  TMR_SR_msgAddGEN2DataWrite(msg, &i, (uint16_t)readTimeMs, writeData.bank, writeData.wordAddress, false);
    5066:	ec 80       	ldd	r14, Y+4	; 0x04
    5068:	fd 80       	ldd	r15, Y+5	; 0x05
    506a:	0e 81       	ldd	r16, Y+6	; 0x06
    506c:	1f 81       	ldd	r17, Y+7	; 0x07
    506e:	c1 2c       	mov	r12, r1
    5070:	2b 81       	ldd	r18, Y+3	; 0x03
    5072:	cd 5e       	subi	r28, 0xED	; 237
    5074:	de 4f       	sbci	r29, 0xFE	; 254
    5076:	48 81       	ld	r20, Y
    5078:	59 81       	ldd	r21, Y+1	; 0x01
    507a:	c3 51       	subi	r28, 0x13	; 19
    507c:	d1 40       	sbci	r29, 0x01	; 1
    507e:	be 01       	movw	r22, r28
    5080:	6f 5f       	subi	r22, 0xFF	; 255
    5082:	7f 4f       	sbci	r23, 0xFF	; 255
    5084:	c2 01       	movw	r24, r4
    5086:	0e 94 5b 3e 	call	0x7cb6	; 0x7cb6 <TMR_SR_msgAddGEN2DataWrite>

                  for(idx = 0 ; idx< writeData.data.len; idx++)
    508a:	20 e0       	ldi	r18, 0x00	; 0
    508c:	30 e0       	ldi	r19, 0x00	; 0
    508e:	19 c0       	rjmp	.+50     	; 0x50c2 <TMR_SR_addTagOp+0x64c>
                  {
                    msg[i++]= (writeData.data.list[idx]>>8) & 0xFF;
    5090:	89 81       	ldd	r24, Y+1	; 0x01
    5092:	41 e0       	ldi	r20, 0x01	; 1
    5094:	48 0f       	add	r20, r24
    5096:	d2 01       	movw	r26, r4
    5098:	a8 0f       	add	r26, r24
    509a:	b1 1d       	adc	r27, r1
    509c:	e8 85       	ldd	r30, Y+8	; 0x08
    509e:	f9 85       	ldd	r31, Y+9	; 0x09
    50a0:	c9 01       	movw	r24, r18
    50a2:	88 0f       	add	r24, r24
    50a4:	99 1f       	adc	r25, r25
    50a6:	e8 0f       	add	r30, r24
    50a8:	f9 1f       	adc	r31, r25
    50aa:	81 81       	ldd	r24, Z+1	; 0x01
    50ac:	8c 93       	st	X, r24
                    msg[i++]= (writeData.data.list[idx]>>0) & 0xFF;
    50ae:	81 e0       	ldi	r24, 0x01	; 1
    50b0:	84 0f       	add	r24, r20
    50b2:	89 83       	std	Y+1, r24	; 0x01
    50b4:	d2 01       	movw	r26, r4
    50b6:	a4 0f       	add	r26, r20
    50b8:	b1 1d       	adc	r27, r1
    50ba:	80 81       	ld	r24, Z
    50bc:	8c 93       	st	X, r24
                  int idx;

                  writeData = writeOp->u.gen2.u.writeData;
                  TMR_SR_msgAddGEN2DataWrite(msg, &i, (uint16_t)readTimeMs, writeData.bank, writeData.wordAddress, false);

                  for(idx = 0 ; idx< writeData.data.len; idx++)
    50be:	2f 5f       	subi	r18, 0xFF	; 255
    50c0:	3f 4f       	sbci	r19, 0xFF	; 255
    50c2:	8c 85       	ldd	r24, Y+12	; 0x0c
    50c4:	9d 85       	ldd	r25, Y+13	; 0x0d
    50c6:	28 17       	cp	r18, r24
    50c8:	39 07       	cpc	r19, r25
    50ca:	10 f3       	brcs	.-60     	; 0x5090 <TMR_SR_addTagOp+0x61a>
    50cc:	10 c0       	rjmp	.+32     	; 0x50ee <TMR_SR_addTagOp+0x678>
                case TMR_TAGOP_GEN2_WRITETAG:
                {
                  TMR_TagOp_GEN2_WriteTag writeTag;
                  writeOp = tagop->u.list.list[0];

                  writeTag = writeOp->u.gen2.u.writeTag;
    50ce:	21 81       	ldd	r18, Z+1	; 0x01
    50d0:	32 81       	ldd	r19, Z+2	; 0x02
                  TMR_SR_msgAddGEN2WriteTagEPC(msg, &i, (uint16_t)readTimeMs, writeTag.epcptr->epc, writeTag.epcptr->epcByteCount);
    50d2:	f9 01       	movw	r30, r18
    50d4:	07 ad       	ldd	r16, Z+63	; 0x3f
    50d6:	cd 5e       	subi	r28, 0xED	; 237
    50d8:	de 4f       	sbci	r29, 0xFE	; 254
    50da:	48 81       	ld	r20, Y
    50dc:	59 81       	ldd	r21, Y+1	; 0x01
    50de:	c3 51       	subi	r28, 0x13	; 19
    50e0:	d1 40       	sbci	r29, 0x01	; 1
    50e2:	be 01       	movw	r22, r28
    50e4:	6f 5f       	subi	r22, 0xFF	; 255
    50e6:	7f 4f       	sbci	r23, 0xFF	; 255
    50e8:	c2 01       	movw	r24, r4
    50ea:	0e 94 5a 3d 	call	0x7ab4	; 0x7ab4 <TMR_SR_msgAddGEN2WriteTagEPC>
                break;
                default:
                  break;
              }

              SETU8(msg, i, readData.bank);
    50ee:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    50f2:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    50f6:	01 96       	adiw	r24, 0x01	; 1
    50f8:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    50fc:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    5100:	89 81       	ldd	r24, Y+1	; 0x01
    5102:	21 e0       	ldi	r18, 0x01	; 1
    5104:	28 0f       	add	r18, r24
    5106:	f2 01       	movw	r30, r4
    5108:	e8 0f       	add	r30, r24
    510a:	f1 1d       	adc	r31, r1
    510c:	ce 5f       	subi	r28, 0xFE	; 254
    510e:	de 4f       	sbci	r29, 0xFE	; 254
    5110:	88 81       	ld	r24, Y
    5112:	c2 50       	subi	r28, 0x02	; 2
    5114:	d1 40       	sbci	r29, 0x01	; 1
    5116:	80 83       	st	Z, r24
              SETU32(msg, i, readData.wordAddress);
    5118:	cd 5f       	subi	r28, 0xFD	; 253
    511a:	de 4f       	sbci	r29, 0xFE	; 254
    511c:	38 81       	ld	r19, Y
    511e:	c3 50       	subi	r28, 0x03	; 3
    5120:	d1 40       	sbci	r29, 0x01	; 1
    5122:	cc 5f       	subi	r28, 0xFC	; 252
    5124:	de 4f       	sbci	r29, 0xFE	; 254
    5126:	48 81       	ld	r20, Y
    5128:	c4 50       	subi	r28, 0x04	; 4
    512a:	d1 40       	sbci	r29, 0x01	; 1
    512c:	cb 5f       	subi	r28, 0xFB	; 251
    512e:	de 4f       	sbci	r29, 0xFE	; 254
    5130:	58 81       	ld	r21, Y
    5132:	c5 50       	subi	r28, 0x05	; 5
    5134:	d1 40       	sbci	r29, 0x01	; 1
    5136:	ca 5f       	subi	r28, 0xFA	; 250
    5138:	de 4f       	sbci	r29, 0xFE	; 254
    513a:	68 81       	ld	r22, Y
    513c:	c6 50       	subi	r28, 0x06	; 6
    513e:	d1 40       	sbci	r29, 0x01	; 1
    5140:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    5144:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    5148:	04 96       	adiw	r24, 0x04	; 4
    514a:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    514e:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    5152:	81 e0       	ldi	r24, 0x01	; 1
    5154:	82 0f       	add	r24, r18
    5156:	f2 01       	movw	r30, r4
    5158:	e2 0f       	add	r30, r18
    515a:	f1 1d       	adc	r31, r1
    515c:	60 83       	st	Z, r22
    515e:	91 e0       	ldi	r25, 0x01	; 1
    5160:	98 0f       	add	r25, r24
    5162:	f2 01       	movw	r30, r4
    5164:	e8 0f       	add	r30, r24
    5166:	f1 1d       	adc	r31, r1
    5168:	50 83       	st	Z, r21
    516a:	81 e0       	ldi	r24, 0x01	; 1
    516c:	89 0f       	add	r24, r25
    516e:	f2 01       	movw	r30, r4
    5170:	e9 0f       	add	r30, r25
    5172:	f1 1d       	adc	r31, r1
    5174:	40 83       	st	Z, r20
    5176:	21 e0       	ldi	r18, 0x01	; 1
    5178:	28 0f       	add	r18, r24
    517a:	f2 01       	movw	r30, r4
    517c:	e8 0f       	add	r30, r24
    517e:	f1 1d       	adc	r31, r1
    5180:	30 83       	st	Z, r19
              SETU8(msg, i, readData.len);
    5182:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    5186:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    518a:	01 96       	adiw	r24, 0x01	; 1
    518c:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    5190:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    5194:	81 e0       	ldi	r24, 0x01	; 1
    5196:	82 0f       	add	r24, r18
    5198:	89 83       	std	Y+1, r24	; 0x01
    519a:	f2 01       	movw	r30, r4
    519c:	e2 0f       	add	r30, r18
    519e:	f1 1d       	adc	r31, r1
    51a0:	c9 5f       	subi	r28, 0xF9	; 249
    51a2:	de 4f       	sbci	r29, 0xFE	; 254
    51a4:	88 81       	ld	r24, Y
    51a6:	c7 50       	subi	r28, 0x07	; 7
    51a8:	d1 40       	sbci	r29, 0x01	; 1
    51aa:	80 83       	st	Z, r24
    51ac:	8c c1       	rjmp	.+792    	; 0x54c6 <TMR_SR_addTagOp+0xa50>
  }
  else
#endif /* TMR_ENABLE_UHF */
  {
#ifdef TMR_ENABLE_HF_LF
    ret = prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND),
    51ae:	da 01       	movw	r26, r20
    51b0:	1c 96       	adiw	r26, 0x0c	; 12
    51b2:	cc 90       	ld	r12, X
    51b4:	1c 97       	sbiw	r26, 0x0c	; 12
                                   rp->u.simple.filter, rp->u.simple.protocol, 0, &lenbyte);
    51b6:	1d 96       	adiw	r26, 0x0d	; 13
    51b8:	ed 90       	ld	r14, X+
    51ba:	fc 90       	ld	r15, X
    51bc:	1e 97       	sbiw	r26, 0x0e	; 14
  }
  else
#endif /* TMR_ENABLE_UHF */
  {
#ifdef TMR_ENABLE_HF_LF
    ret = prepEmbReadTagMultiple(reader, msg, &i, (uint16_t)readTimeMs, (TMR_SR_SearchFlag)(TMR_SR_SEARCH_FLAG_EMBEDDED_COMMAND),
    51be:	ce 01       	movw	r24, r28
    51c0:	02 96       	adiw	r24, 0x02	; 2
    51c2:	9f 93       	push	r25
    51c4:	8f 93       	push	r24
    51c6:	81 2c       	mov	r8, r1
    51c8:	91 2c       	mov	r9, r1
    51ca:	54 01       	movw	r10, r8
    51cc:	04 e0       	ldi	r16, 0x04	; 4
    51ce:	10 e0       	ldi	r17, 0x00	; 0
    51d0:	cd 5e       	subi	r28, 0xED	; 237
    51d2:	de 4f       	sbci	r29, 0xFE	; 254
    51d4:	28 81       	ld	r18, Y
    51d6:	39 81       	ldd	r19, Y+1	; 0x01
    51d8:	c3 51       	subi	r28, 0x13	; 19
    51da:	d1 40       	sbci	r29, 0x01	; 1
    51dc:	ae 01       	movw	r20, r28
    51de:	4f 5f       	subi	r20, 0xFF	; 255
    51e0:	5f 4f       	sbci	r21, 0xFF	; 255
    51e2:	b2 01       	movw	r22, r4
    51e4:	c3 01       	movw	r24, r6
    51e6:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <prepEmbReadTagMultiple>
                                   rp->u.simple.filter, rp->u.simple.protocol, 0, &lenbyte);

    //Check for address byte extension flag.
    isAddrByteExtended = reader->featureFlags & TMR_READER_FEATURES_FLAG_ADDR_BYTE_EXTENSION;
    51ea:	f3 01       	movw	r30, r6
    51ec:	e5 5e       	subi	r30, 0xE5	; 229
    51ee:	f9 4f       	sbci	r31, 0xF9	; 249
    51f0:	90 81       	ld	r25, Z
    51f2:	81 e0       	ldi	r24, 0x01	; 1
    51f4:	0f 90       	pop	r0
    51f6:	0f 90       	pop	r0
    51f8:	90 ff       	sbrs	r25, 0
    51fa:	80 e0       	ldi	r24, 0x00	; 0
    51fc:	80 93 d8 0b 	sts	0x0BD8, r24	; 0x800bd8 <isAddrByteExtended>

    switch(tagop->type)
    5200:	c3 5f       	subi	r28, 0xF3	; 243
    5202:	de 4f       	sbci	r29, 0xFE	; 254
    5204:	e8 81       	ld	r30, Y
    5206:	f9 81       	ldd	r31, Y+1	; 0x01
    5208:	cd 50       	subi	r28, 0x0D	; 13
    520a:	d1 40       	sbci	r29, 0x01	; 1
    520c:	80 81       	ld	r24, Z
    520e:	88 34       	cpi	r24, 0x48	; 72
    5210:	09 f4       	brne	.+2      	; 0x5214 <TMR_SR_addTagOp+0x79e>
    5212:	9c c0       	rjmp	.+312    	; 0x534c <TMR_SR_addTagOp+0x8d6>
    5214:	89 34       	cpi	r24, 0x49	; 73
    5216:	09 f0       	breq	.+2      	; 0x521a <TMR_SR_addTagOp+0x7a4>
    5218:	8f c1       	rjmp	.+798    	; 0x5538 <TMR_SR_addTagOp+0xac2>
    {
      case TMR_TAGOP_READ_MEMORY:
        {
          uint8_t optbyte = i + 3;
    521a:	89 81       	ldd	r24, Y+1	; 0x01
    521c:	8d 5f       	subi	r24, 0xFD	; 253
    521e:	c8 5f       	subi	r28, 0xF8	; 248
    5220:	de 4f       	sbci	r29, 0xFE	; 254
    5222:	88 83       	st	Y, r24
    5224:	c8 50       	subi	r28, 0x08	; 8
    5226:	d1 40       	sbci	r29, 0x01	; 1
#if TMR_ENABLE_EXTENDED_TAGOPS
          uint8_t extParamsData[255];
          TMR_uint8List tagOpExtParams;
#endif /* TMR_ENABLE_EXTENDED_TAGOPS */

          args = &rp->u.simple.tagop->u.extTagOp;
    5228:	d1 01       	movw	r26, r2
    522a:	1f 96       	adiw	r26, 0x0f	; 15
    522c:	6d 90       	ld	r6, X+
    522e:	7c 90       	ld	r7, X
    5230:	50 97       	sbiw	r26, 0x10	; 16
    5232:	c3 01       	movw	r24, r6
    5234:	01 96       	adiw	r24, 0x01	; 1
          readMemType = args->readMem.memType;
    5236:	f3 01       	movw	r30, r6
    5238:	23 85       	ldd	r18, Z+11	; 0x0b

#if TMR_ENABLE_EXTENDED_TAGOPS
          //Reset extended params buffer length.
          tagOpExtParams.len = 0;
    523a:	ca 5f       	subi	r28, 0xFA	; 250
    523c:	de 4f       	sbci	r29, 0xFE	; 254
    523e:	19 82       	std	Y+1, r1	; 0x01
    5240:	18 82       	st	Y, r1
    5242:	c6 50       	subi	r28, 0x06	; 6
    5244:	d1 40       	sbci	r29, 0x01	; 1

          if (TMR_TAGOP_EXT_TAG_MEMORY == args->readMem.memType)
    5246:	25 32       	cpi	r18, 0x25	; 37
    5248:	39 f5       	brne	.+78     	; 0x5298 <TMR_SR_addTagOp+0x822>
          {
            readMemType = TMR_TAGOP_TAG_MEMORY;

            //Initialize extended params buffer.
            tagOpExtParams.list = extParamsData;
    524a:	9e 01       	movw	r18, r28
    524c:	2d 5f       	subi	r18, 0xFD	; 253
    524e:	3f 4f       	sbci	r19, 0xFF	; 255
    5250:	ce 5f       	subi	r28, 0xFE	; 254
    5252:	de 4f       	sbci	r29, 0xFE	; 254
    5254:	39 83       	std	Y+1, r19	; 0x01
    5256:	28 83       	st	Y, r18
    5258:	c2 50       	subi	r28, 0x02	; 2
    525a:	d1 40       	sbci	r29, 0x01	; 1
            tagOpExtParams.max = sizeof(extParamsData) / sizeof(extParamsData[0]);
    525c:	2f ef       	ldi	r18, 0xFF	; 255
    525e:	30 e0       	ldi	r19, 0x00	; 0
    5260:	cc 5f       	subi	r28, 0xFC	; 252
    5262:	de 4f       	sbci	r29, 0xFE	; 254
    5264:	39 83       	std	Y+1, r19	; 0x01
    5266:	28 83       	st	Y, r18
    5268:	c4 50       	subi	r28, 0x04	; 4
    526a:	d1 40       	sbci	r29, 0x01	; 1

            //Get the extended params for memory read.
            ret = getReadExtParams(args, &tagOpExtParams);
    526c:	be 01       	movw	r22, r28
    526e:	6e 5f       	subi	r22, 0xFE	; 254
    5270:	7e 4f       	sbci	r23, 0xFE	; 254
    5272:	5f d8       	rcall	.-3906   	; 0x4332 <getReadExtParams>
    5274:	4b 01       	movw	r8, r22
    5276:	5c 01       	movw	r10, r24
            if (TMR_SUCCESS != ret)
    5278:	61 15       	cp	r22, r1
    527a:	71 05       	cpc	r23, r1
    527c:	81 05       	cpc	r24, r1
    527e:	91 05       	cpc	r25, r1
    5280:	09 f0       	breq	.+2      	; 0x5284 <TMR_SR_addTagOp+0x80e>
    5282:	5b c0       	rjmp	.+182    	; 0x533a <TMR_SR_addTagOp+0x8c4>
            {
              return ret;
            }

              //Validate filter. Tag-Type filter is mandatory.
            if (!isTagTypeFilterAvail(rp->u.simple.filter))
    5284:	d1 01       	movw	r26, r2
    5286:	1d 96       	adiw	r26, 0x0d	; 13
    5288:	8d 91       	ld	r24, X+
    528a:	9c 91       	ld	r25, X
    528c:	1e 97       	sbiw	r26, 0x0e	; 14
    528e:	c7 db       	rcall	.-2162   	; 0x4a1e <isTagTypeFilterAvail>
    5290:	88 23       	and	r24, r24
    5292:	09 f4       	brne	.+2      	; 0x5296 <TMR_SR_addTagOp+0x820>
    5294:	56 c0       	rjmp	.+172    	; 0x5342 <TMR_SR_addTagOp+0x8cc>
          //Reset extended params buffer length.
          tagOpExtParams.len = 0;

          if (TMR_TAGOP_EXT_TAG_MEMORY == args->readMem.memType)
          {
            readMemType = TMR_TAGOP_TAG_MEMORY;
    5296:	21 e2       	ldi	r18, 0x21	; 33
              return TMR_ERROR_INVALID;
            }
          }
#endif /* TMR_ENABLE_EXTENDED_TAGOPS */

          TMR_SR_msgAddReadMemory(msg, &i, (uint16_t)readTimeMs, readMemType, args->readMem.address, args->readMem.len, false);
    5298:	f3 01       	movw	r30, r6
    529a:	e4 84       	ldd	r14, Z+12	; 0x0c
    529c:	f5 84       	ldd	r15, Z+13	; 0x0d
    529e:	06 85       	ldd	r16, Z+14	; 0x0e
    52a0:	17 85       	ldd	r17, Z+15	; 0x0f
    52a2:	a1 2c       	mov	r10, r1
    52a4:	c0 88       	ldd	r12, Z+16	; 0x10
    52a6:	cd 5e       	subi	r28, 0xED	; 237
    52a8:	de 4f       	sbci	r29, 0xFE	; 254
    52aa:	48 81       	ld	r20, Y
    52ac:	59 81       	ldd	r21, Y+1	; 0x01
    52ae:	c3 51       	subi	r28, 0x13	; 19
    52b0:	d1 40       	sbci	r29, 0x01	; 1
    52b2:	be 01       	movw	r22, r28
    52b4:	6f 5f       	subi	r22, 0xFF	; 255
    52b6:	7f 4f       	sbci	r23, 0xFF	; 255
    52b8:	c2 01       	movw	r24, r4
    52ba:	0e 94 25 69 	call	0xd24a	; 0xd24a <TMR_SR_msgAddReadMemory>

          //Assemble access password.
          TMR_SR_msgAddAccessPassword(msg,  &i, &optbyte, rp->u.simple.tagop->u.extTagOp.accessPassword);
    52be:	d1 01       	movw	r26, r2
    52c0:	1f 96       	adiw	r26, 0x0f	; 15
    52c2:	ed 91       	ld	r30, X+
    52c4:	fc 91       	ld	r31, X
    52c6:	50 97       	sbiw	r26, 0x10	; 16
    52c8:	21 85       	ldd	r18, Z+9	; 0x09
    52ca:	32 85       	ldd	r19, Z+10	; 0x0a
    52cc:	ae 01       	movw	r20, r28
    52ce:	48 5f       	subi	r20, 0xF8	; 248
    52d0:	5e 4f       	sbci	r21, 0xFE	; 254
    52d2:	be 01       	movw	r22, r28
    52d4:	6f 5f       	subi	r22, 0xFF	; 255
    52d6:	7f 4f       	sbci	r23, 0xFF	; 255
    52d8:	c2 01       	movw	r24, r4
    52da:	0e 94 f6 67 	call	0xcfec	; 0xcfec <TMR_SR_msgAddAccessPassword>

#if TMR_ENABLE_EXTENDED_TAGOPS
          //Assemble extended params.
          ret = TMR_SR_msgAddExtendedParams(msg, &i, &optbyte, &tagOpExtParams);
    52de:	9e 01       	movw	r18, r28
    52e0:	2e 5f       	subi	r18, 0xFE	; 254
    52e2:	3e 4f       	sbci	r19, 0xFE	; 254
    52e4:	ae 01       	movw	r20, r28
    52e6:	48 5f       	subi	r20, 0xF8	; 248
    52e8:	5e 4f       	sbci	r21, 0xFE	; 254
    52ea:	be 01       	movw	r22, r28
    52ec:	6f 5f       	subi	r22, 0xFF	; 255
    52ee:	7f 4f       	sbci	r23, 0xFF	; 255
    52f0:	c2 01       	movw	r24, r4
    52f2:	0e 94 2e 68 	call	0xd05c	; 0xd05c <TMR_SR_msgAddExtendedParams>
    52f6:	c7 5f       	subi	r28, 0xF7	; 247
    52f8:	de 4f       	sbci	r29, 0xFE	; 254
    52fa:	68 83       	st	Y, r22
    52fc:	79 83       	std	Y+1, r23	; 0x01
    52fe:	8a 83       	std	Y+2, r24	; 0x02
    5300:	9b 83       	std	Y+3, r25	; 0x03
    5302:	c9 50       	subi	r28, 0x09	; 9
    5304:	d1 40       	sbci	r29, 0x01	; 1
          if (TMR_SUCCESS != ret)
    5306:	67 2b       	or	r22, r23
    5308:	68 2b       	or	r22, r24
    530a:	69 2b       	or	r22, r25
    530c:	09 f4       	brne	.+2      	; 0x5310 <TMR_SR_addTagOp+0x89a>
    530e:	d9 c0       	rjmp	.+434    	; 0x54c2 <TMR_SR_addTagOp+0xa4c>
          {
            return ret;
    5310:	c7 5f       	subi	r28, 0xF7	; 247
    5312:	de 4f       	sbci	r29, 0xFE	; 254
    5314:	68 81       	ld	r22, Y
    5316:	c9 50       	subi	r28, 0x09	; 9
    5318:	d1 40       	sbci	r29, 0x01	; 1
    531a:	c6 5f       	subi	r28, 0xF6	; 246
    531c:	de 4f       	sbci	r29, 0xFE	; 254
    531e:	78 81       	ld	r23, Y
    5320:	ca 50       	subi	r28, 0x0A	; 10
    5322:	d1 40       	sbci	r29, 0x01	; 1
    5324:	c5 5f       	subi	r28, 0xF5	; 245
    5326:	de 4f       	sbci	r29, 0xFE	; 254
    5328:	88 81       	ld	r24, Y
    532a:	cb 50       	subi	r28, 0x0B	; 11
    532c:	d1 40       	sbci	r29, 0x01	; 1
    532e:	c4 5f       	subi	r28, 0xF4	; 244
    5330:	de 4f       	sbci	r29, 0xFE	; 254
    5332:	98 81       	ld	r25, Y
    5334:	cc 50       	subi	r28, 0x0C	; 12
    5336:	d1 40       	sbci	r29, 0x01	; 1
    5338:	03 c1       	rjmp	.+518    	; 0x5540 <TMR_SR_addTagOp+0xaca>

            //Get the extended params for memory read.
            ret = getReadExtParams(args, &tagOpExtParams);
            if (TMR_SUCCESS != ret)
            {
              return ret;
    533a:	79 2d       	mov	r23, r9
    533c:	8a 2d       	mov	r24, r10
    533e:	9b 2d       	mov	r25, r11
    5340:	ff c0       	rjmp	.+510    	; 0x5540 <TMR_SR_addTagOp+0xaca>
            }

              //Validate filter. Tag-Type filter is mandatory.
            if (!isTagTypeFilterAvail(rp->u.simple.filter))
            {
              return TMR_ERROR_INVALID;
    5342:	61 e0       	ldi	r22, 0x01	; 1
    5344:	70 e0       	ldi	r23, 0x00	; 0
    5346:	80 e0       	ldi	r24, 0x00	; 0
    5348:	93 e0       	ldi	r25, 0x03	; 3
    534a:	fa c0       	rjmp	.+500    	; 0x5540 <TMR_SR_addTagOp+0xaca>
          break;
        }
      case TMR_TAGOP_WRITE_MEMORY:
        {
          uint16_t len;
          uint8_t optbyte = i + 3;
    534c:	89 81       	ldd	r24, Y+1	; 0x01
    534e:	8d 5f       	subi	r24, 0xFD	; 253
    5350:	c8 5f       	subi	r28, 0xF8	; 248
    5352:	de 4f       	sbci	r29, 0xFE	; 254
    5354:	88 83       	st	Y, r24
    5356:	c8 50       	subi	r28, 0x08	; 8
    5358:	d1 40       	sbci	r29, 0x01	; 1
#if TMR_ENABLE_EXTENDED_TAGOPS
          uint8_t extParamsData[255];
          TMR_uint8List tagOpExtParams;
#endif /* TMR_ENABLE_EXTENDED_TAGOPS */

          args = &rp->u.simple.tagop->u.extTagOp;
    535a:	f1 01       	movw	r30, r2
    535c:	67 84       	ldd	r6, Z+15	; 0x0f
    535e:	70 88       	ldd	r7, Z+16	; 0x10
    5360:	c3 01       	movw	r24, r6
    5362:	01 96       	adiw	r24, 0x01	; 1
          writeMemType = args->writeMem.memType;
    5364:	d3 01       	movw	r26, r6
    5366:	51 96       	adiw	r26, 0x11	; 17
    5368:	2c 91       	ld	r18, X

#if TMR_ENABLE_EXTENDED_TAGOPS
          //Reset extended params buffer length.
          tagOpExtParams.len = 0;
    536a:	ca 5f       	subi	r28, 0xFA	; 250
    536c:	de 4f       	sbci	r29, 0xFE	; 254
    536e:	19 82       	std	Y+1, r1	; 0x01
    5370:	18 82       	st	Y, r1
    5372:	c6 50       	subi	r28, 0x06	; 6
    5374:	d1 40       	sbci	r29, 0x01	; 1

          if (TMR_TAGOP_EXT_TAG_MEMORY == args->writeMem.memType)
    5376:	25 32       	cpi	r18, 0x25	; 37
    5378:	29 f5       	brne	.+74     	; 0x53c4 <TMR_SR_addTagOp+0x94e>
          {
            writeMemType = TMR_TAGOP_TAG_MEMORY;

            //Initialize extended params buffer.
            tagOpExtParams.list = extParamsData;
    537a:	9e 01       	movw	r18, r28
    537c:	2d 5f       	subi	r18, 0xFD	; 253
    537e:	3f 4f       	sbci	r19, 0xFF	; 255
    5380:	ce 5f       	subi	r28, 0xFE	; 254
    5382:	de 4f       	sbci	r29, 0xFE	; 254
    5384:	39 83       	std	Y+1, r19	; 0x01
    5386:	28 83       	st	Y, r18
    5388:	c2 50       	subi	r28, 0x02	; 2
    538a:	d1 40       	sbci	r29, 0x01	; 1
            tagOpExtParams.max = sizeof(extParamsData) / sizeof(extParamsData[0]);
    538c:	2f ef       	ldi	r18, 0xFF	; 255
    538e:	30 e0       	ldi	r19, 0x00	; 0
    5390:	cc 5f       	subi	r28, 0xFC	; 252
    5392:	de 4f       	sbci	r29, 0xFE	; 254
    5394:	39 83       	std	Y+1, r19	; 0x01
    5396:	28 83       	st	Y, r18
    5398:	c4 50       	subi	r28, 0x04	; 4
    539a:	d1 40       	sbci	r29, 0x01	; 1

            //Get the extended params for memory write.
            ret = getWriteExtParams(args, &tagOpExtParams);
    539c:	be 01       	movw	r22, r28
    539e:	6e 5f       	subi	r22, 0xFE	; 254
    53a0:	7e 4f       	sbci	r23, 0xFE	; 254
    53a2:	22 d9       	rcall	.-3516   	; 0x45e8 <getWriteExtParams>
    53a4:	4b 01       	movw	r8, r22
    53a6:	5c 01       	movw	r10, r24
            if (TMR_SUCCESS != ret)
    53a8:	61 15       	cp	r22, r1
    53aa:	71 05       	cpc	r23, r1
    53ac:	81 05       	cpc	r24, r1
    53ae:	91 05       	cpc	r25, r1
    53b0:	09 f0       	breq	.+2      	; 0x53b4 <TMR_SR_addTagOp+0x93e>
            {
              return ret;
            }

            //Validate filter. Tag-Type filter is mandatory.
            if (!isTagTypeFilterAvail(rp->u.simple.filter))
    53b2:	69 c0       	rjmp	.+210    	; 0x5486 <TMR_SR_addTagOp+0xa10>
    53b4:	f1 01       	movw	r30, r2
    53b6:	85 85       	ldd	r24, Z+13	; 0x0d
    53b8:	96 85       	ldd	r25, Z+14	; 0x0e
    53ba:	31 db       	rcall	.-2462   	; 0x4a1e <isTagTypeFilterAvail>
    53bc:	88 23       	and	r24, r24
    53be:	09 f4       	brne	.+2      	; 0x53c2 <TMR_SR_addTagOp+0x94c>
    53c0:	66 c0       	rjmp	.+204    	; 0x548e <TMR_SR_addTagOp+0xa18>
          //Reset extended params buffer length.
          tagOpExtParams.len = 0;

          if (TMR_TAGOP_EXT_TAG_MEMORY == args->writeMem.memType)
          {
            writeMemType = TMR_TAGOP_TAG_MEMORY;
    53c2:	21 e2       	ldi	r18, 0x21	; 33
              return TMR_ERROR_INVALID;
            }
          }
#endif /* TMR_ENABLE_EXTENDED_TAGOPS */

          TMR_SR_msgAddWriteMemory(msg, &i, (uint16_t)readTimeMs, writeMemType, args->writeMem.address);
    53c4:	d3 01       	movw	r26, r6
    53c6:	52 96       	adiw	r26, 0x12	; 18
    53c8:	ed 90       	ld	r14, X+
    53ca:	fd 90       	ld	r15, X+
    53cc:	0d 91       	ld	r16, X+
    53ce:	1c 91       	ld	r17, X
    53d0:	55 97       	sbiw	r26, 0x15	; 21
    53d2:	cd 5e       	subi	r28, 0xED	; 237
    53d4:	de 4f       	sbci	r29, 0xFE	; 254
    53d6:	48 81       	ld	r20, Y
    53d8:	59 81       	ldd	r21, Y+1	; 0x01
    53da:	c3 51       	subi	r28, 0x13	; 19
    53dc:	d1 40       	sbci	r29, 0x01	; 1
    53de:	be 01       	movw	r22, r28
    53e0:	6f 5f       	subi	r22, 0xFF	; 255
    53e2:	7f 4f       	sbci	r23, 0xFF	; 255
    53e4:	c2 01       	movw	r24, r4
    53e6:	0e 94 89 68 	call	0xd112	; 0xd112 <TMR_SR_msgAddWriteMemory>

          //Assemble access password.
          TMR_SR_msgAddAccessPassword(msg,  &i, &optbyte, rp->u.simple.tagop->u.extTagOp.accessPassword);
    53ea:	d1 01       	movw	r26, r2
    53ec:	1f 96       	adiw	r26, 0x0f	; 15
    53ee:	ed 91       	ld	r30, X+
    53f0:	fc 91       	ld	r31, X
    53f2:	50 97       	sbiw	r26, 0x10	; 16
    53f4:	21 85       	ldd	r18, Z+9	; 0x09
    53f6:	32 85       	ldd	r19, Z+10	; 0x0a
    53f8:	ae 01       	movw	r20, r28
    53fa:	48 5f       	subi	r20, 0xF8	; 248
    53fc:	5e 4f       	sbci	r21, 0xFE	; 254
    53fe:	be 01       	movw	r22, r28
    5400:	6f 5f       	subi	r22, 0xFF	; 255
    5402:	7f 4f       	sbci	r23, 0xFF	; 255
    5404:	c2 01       	movw	r24, r4
    5406:	0e 94 f6 67 	call	0xcfec	; 0xcfec <TMR_SR_msgAddAccessPassword>

#if TMR_ENABLE_EXTENDED_TAGOPS
          //Assemble extended params.
          ret = TMR_SR_msgAddExtendedParams(msg, &i, &optbyte, &tagOpExtParams);
    540a:	9e 01       	movw	r18, r28
    540c:	2e 5f       	subi	r18, 0xFE	; 254
    540e:	3e 4f       	sbci	r19, 0xFE	; 254
    5410:	ae 01       	movw	r20, r28
    5412:	48 5f       	subi	r20, 0xF8	; 248
    5414:	5e 4f       	sbci	r21, 0xFE	; 254
    5416:	be 01       	movw	r22, r28
    5418:	6f 5f       	subi	r22, 0xFF	; 255
    541a:	7f 4f       	sbci	r23, 0xFF	; 255
    541c:	c2 01       	movw	r24, r4
    541e:	0e 94 2e 68 	call	0xd05c	; 0xd05c <TMR_SR_msgAddExtendedParams>
    5422:	c7 5f       	subi	r28, 0xF7	; 247
    5424:	de 4f       	sbci	r29, 0xFE	; 254
    5426:	68 83       	st	Y, r22
    5428:	79 83       	std	Y+1, r23	; 0x01
    542a:	8a 83       	std	Y+2, r24	; 0x02
    542c:	9b 83       	std	Y+3, r25	; 0x03
    542e:	c9 50       	subi	r28, 0x09	; 9
    5430:	d1 40       	sbci	r29, 0x01	; 1
          if (TMR_SUCCESS != ret)
    5432:	67 2b       	or	r22, r23
    5434:	68 2b       	or	r22, r24
    5436:	69 2b       	or	r22, r25
    5438:	79 f5       	brne	.+94     	; 0x5498 <TMR_SR_addTagOp+0xa22>
    543a:	80 e0       	ldi	r24, 0x00	; 0
    543c:	90 e0       	ldi	r25, 0x00	; 0
    543e:	1a c0       	rjmp	.+52     	; 0x5474 <TMR_SR_addTagOp+0x9fe>
          }
#endif /* TMR_ENABLE_EXTENDED_TAGOPS */

          for (len = 0; len < args->writeMem.data.len; len++)
          {
            SETU8(msg, i, args->writeMem.data.list[len]);
    5440:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    5444:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    5448:	2f 5f       	subi	r18, 0xFF	; 255
    544a:	3f 4f       	sbci	r19, 0xFF	; 255
    544c:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    5450:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    5454:	29 81       	ldd	r18, Y+1	; 0x01
    5456:	31 e0       	ldi	r19, 0x01	; 1
    5458:	32 0f       	add	r19, r18
    545a:	39 83       	std	Y+1, r19	; 0x01
    545c:	d2 01       	movw	r26, r4
    545e:	a2 0f       	add	r26, r18
    5460:	b1 1d       	adc	r27, r1
    5462:	f3 01       	movw	r30, r6
    5464:	26 89       	ldd	r18, Z+22	; 0x16
    5466:	37 89       	ldd	r19, Z+23	; 0x17
    5468:	f9 01       	movw	r30, r18
    546a:	e8 0f       	add	r30, r24
    546c:	f9 1f       	adc	r31, r25
    546e:	20 81       	ld	r18, Z
    5470:	2c 93       	st	X, r18
          {
            return ret;
          }
#endif /* TMR_ENABLE_EXTENDED_TAGOPS */

          for (len = 0; len < args->writeMem.data.len; len++)
    5472:	01 96       	adiw	r24, 0x01	; 1
    5474:	d3 01       	movw	r26, r6
    5476:	5a 96       	adiw	r26, 0x1a	; 26
    5478:	2d 91       	ld	r18, X+
    547a:	3c 91       	ld	r19, X
    547c:	5b 97       	sbiw	r26, 0x1b	; 27
    547e:	82 17       	cp	r24, r18
    5480:	93 07       	cpc	r25, r19
    5482:	f0 f2       	brcs	.-68     	; 0x5440 <TMR_SR_addTagOp+0x9ca>
    5484:	1e c0       	rjmp	.+60     	; 0x54c2 <TMR_SR_addTagOp+0xa4c>

            //Get the extended params for memory write.
            ret = getWriteExtParams(args, &tagOpExtParams);
            if (TMR_SUCCESS != ret)
            {
              return ret;
    5486:	79 2d       	mov	r23, r9
    5488:	8a 2d       	mov	r24, r10
    548a:	9b 2d       	mov	r25, r11
    548c:	59 c0       	rjmp	.+178    	; 0x5540 <TMR_SR_addTagOp+0xaca>
            }

            //Validate filter. Tag-Type filter is mandatory.
            if (!isTagTypeFilterAvail(rp->u.simple.filter))
            {
              return TMR_ERROR_INVALID;
    548e:	61 e0       	ldi	r22, 0x01	; 1
    5490:	70 e0       	ldi	r23, 0x00	; 0
    5492:	80 e0       	ldi	r24, 0x00	; 0
    5494:	93 e0       	ldi	r25, 0x03	; 3
    5496:	54 c0       	rjmp	.+168    	; 0x5540 <TMR_SR_addTagOp+0xaca>
#if TMR_ENABLE_EXTENDED_TAGOPS
          //Assemble extended params.
          ret = TMR_SR_msgAddExtendedParams(msg, &i, &optbyte, &tagOpExtParams);
          if (TMR_SUCCESS != ret)
          {
            return ret;
    5498:	c7 5f       	subi	r28, 0xF7	; 247
    549a:	de 4f       	sbci	r29, 0xFE	; 254
    549c:	68 81       	ld	r22, Y
    549e:	c9 50       	subi	r28, 0x09	; 9
    54a0:	d1 40       	sbci	r29, 0x01	; 1
    54a2:	c6 5f       	subi	r28, 0xF6	; 246
    54a4:	de 4f       	sbci	r29, 0xFE	; 254
    54a6:	78 81       	ld	r23, Y
    54a8:	ca 50       	subi	r28, 0x0A	; 10
    54aa:	d1 40       	sbci	r29, 0x01	; 1
    54ac:	c5 5f       	subi	r28, 0xF5	; 245
    54ae:	de 4f       	sbci	r29, 0xFE	; 254
    54b0:	88 81       	ld	r24, Y
    54b2:	cb 50       	subi	r28, 0x0B	; 11
    54b4:	d1 40       	sbci	r29, 0x01	; 1
    54b6:	c4 5f       	subi	r28, 0xF4	; 244
    54b8:	de 4f       	sbci	r29, 0xFE	; 254
    54ba:	98 81       	ld	r25, Y
    54bc:	cc 50       	subi	r28, 0x0C	; 12
    54be:	d1 40       	sbci	r29, 0x01	; 1
    54c0:	3f c0       	rjmp	.+126    	; 0x5540 <TMR_SR_addTagOp+0xaca>
          break;
        }
      default:
        return TMR_ERROR_INVALID; /* Unknown tagop - internal error */
    }
    isAddrByteExtended = false;
    54c2:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <isAddrByteExtended>
#endif /* TMR_ENABLE_HF_LF */
  }

  *j = i;
    54c6:	89 81       	ldd	r24, Y+1	; 0x01
    54c8:	c1 5f       	subi	r28, 0xF1	; 241
    54ca:	de 4f       	sbci	r29, 0xFE	; 254
    54cc:	e8 81       	ld	r30, Y
    54ce:	f9 81       	ldd	r31, Y+1	; 0x01
    54d0:	cf 50       	subi	r28, 0x0F	; 15
    54d2:	d1 40       	sbci	r29, 0x01	; 1
    54d4:	80 83       	st	Z, r24
  *byte = lenbyte;
    54d6:	8a 81       	ldd	r24, Y+2	; 0x02
    54d8:	cf 5e       	subi	r28, 0xEF	; 239
    54da:	de 4f       	sbci	r29, 0xFE	; 254
    54dc:	a8 81       	ld	r26, Y
    54de:	b9 81       	ldd	r27, Y+1	; 0x01
    54e0:	c1 51       	subi	r28, 0x11	; 17
    54e2:	d1 40       	sbci	r29, 0x01	; 1
    54e4:	8c 93       	st	X, r24
  return ret;
    54e6:	c7 5f       	subi	r28, 0xF7	; 247
    54e8:	de 4f       	sbci	r29, 0xFE	; 254
    54ea:	68 81       	ld	r22, Y
    54ec:	c9 50       	subi	r28, 0x09	; 9
    54ee:	d1 40       	sbci	r29, 0x01	; 1
    54f0:	c6 5f       	subi	r28, 0xF6	; 246
    54f2:	de 4f       	sbci	r29, 0xFE	; 254
    54f4:	78 81       	ld	r23, Y
    54f6:	ca 50       	subi	r28, 0x0A	; 10
    54f8:	d1 40       	sbci	r29, 0x01	; 1
    54fa:	c5 5f       	subi	r28, 0xF5	; 245
    54fc:	de 4f       	sbci	r29, 0xFE	; 254
    54fe:	88 81       	ld	r24, Y
    5500:	cb 50       	subi	r28, 0x0B	; 11
    5502:	d1 40       	sbci	r29, 0x01	; 1
    5504:	c4 5f       	subi	r28, 0xF4	; 244
    5506:	de 4f       	sbci	r29, 0xFE	; 254
    5508:	98 81       	ld	r25, Y
    550a:	cc 50       	subi	r28, 0x0C	; 12
    550c:	d1 40       	sbci	r29, 0x01	; 1
    550e:	18 c0       	rjmp	.+48     	; 0x5540 <TMR_SR_addTagOp+0xaca>
        {
        return TMR_ERROR_UNIMPLEMENTED_FEATURE;
        }
      }
    default:
      return TMR_ERROR_INVALID; /* Unknown tagop - internal error */
    5510:	61 e0       	ldi	r22, 0x01	; 1
    5512:	70 e0       	ldi	r23, 0x00	; 0
    5514:	80 e0       	ldi	r24, 0x00	; 0
    5516:	93 e0       	ldi	r25, 0x03	; 3
    5518:	13 c0       	rjmp	.+38     	; 0x5540 <TMR_SR_addTagOp+0xaca>
          }
          break;
        }
        else
        {
        return TMR_ERROR_UNIMPLEMENTED_FEATURE;
    551a:	69 e0       	ldi	r22, 0x09	; 9
    551c:	71 e0       	ldi	r23, 0x01	; 1
    551e:	80 e0       	ldi	r24, 0x00	; 0
    5520:	92 e0       	ldi	r25, 0x02	; 2
    5522:	0e c0       	rjmp	.+28     	; 0x5540 <TMR_SR_addTagOp+0xaca>
              return TMR_ERROR_UNIMPLEMENTED_FEATURE;
            }
          }
          else
          {
            return TMR_ERROR_UNIMPLEMENTED_FEATURE;
    5524:	69 e0       	ldi	r22, 0x09	; 9
    5526:	71 e0       	ldi	r23, 0x01	; 1
    5528:	80 e0       	ldi	r24, 0x00	; 0
    552a:	92 e0       	ldi	r25, 0x02	; 2
    552c:	09 c0       	rjmp	.+18     	; 0x5540 <TMR_SR_addTagOp+0xaca>
              SETU32(msg, i, readData.wordAddress);
              SETU8(msg, i, readData.len);
            }
            else
            {
              return TMR_ERROR_UNIMPLEMENTED_FEATURE;
    552e:	69 e0       	ldi	r22, 0x09	; 9
    5530:	71 e0       	ldi	r23, 0x01	; 1
    5532:	80 e0       	ldi	r24, 0x00	; 0
    5534:	92 e0       	ldi	r25, 0x02	; 2
    5536:	04 c0       	rjmp	.+8      	; 0x5540 <TMR_SR_addTagOp+0xaca>
            SETU8(msg, i, args->writeMem.data.list[len]);
          }
          break;
        }
      default:
        return TMR_ERROR_INVALID; /* Unknown tagop - internal error */
    5538:	61 e0       	ldi	r22, 0x01	; 1
    553a:	70 e0       	ldi	r23, 0x00	; 0
    553c:	80 e0       	ldi	r24, 0x00	; 0
    553e:	93 e0       	ldi	r25, 0x03	; 3

  *j = i;
  *byte = lenbyte;
  return ret;

}
    5540:	c8 5e       	subi	r28, 0xE8	; 232
    5542:	de 4f       	sbci	r29, 0xFE	; 254
    5544:	0f b6       	in	r0, 0x3f	; 63
    5546:	f8 94       	cli
    5548:	de bf       	out	0x3e, r29	; 62
    554a:	0f be       	out	0x3f, r0	; 63
    554c:	cd bf       	out	0x3d, r28	; 61
    554e:	df 91       	pop	r29
    5550:	cf 91       	pop	r28
    5552:	1f 91       	pop	r17
    5554:	0f 91       	pop	r16
    5556:	ff 90       	pop	r15
    5558:	ef 90       	pop	r14
    555a:	df 90       	pop	r13
    555c:	cf 90       	pop	r12
    555e:	bf 90       	pop	r11
    5560:	af 90       	pop	r10
    5562:	9f 90       	pop	r9
    5564:	8f 90       	pop	r8
    5566:	7f 90       	pop	r7
    5568:	6f 90       	pop	r6
    556a:	5f 90       	pop	r5
    556c:	4f 90       	pop	r4
    556e:	3f 90       	pop	r3
    5570:	2f 90       	pop	r2
    5572:	08 95       	ret

00005574 <TMR_SR_read_internal>:
}

static TMR_Status
TMR_SR_read_internal(struct TMR_Reader *reader, uint32_t timeoutMs,
                     int32_t *tagCount, TMR_ReadPlan *rp)
{
    5574:	2f 92       	push	r2
    5576:	3f 92       	push	r3
    5578:	4f 92       	push	r4
    557a:	5f 92       	push	r5
    557c:	6f 92       	push	r6
    557e:	7f 92       	push	r7
    5580:	8f 92       	push	r8
    5582:	9f 92       	push	r9
    5584:	af 92       	push	r10
    5586:	bf 92       	push	r11
    5588:	cf 92       	push	r12
    558a:	df 92       	push	r13
    558c:	ef 92       	push	r14
    558e:	ff 92       	push	r15
    5590:	0f 93       	push	r16
    5592:	1f 93       	push	r17
    5594:	cf 93       	push	r28
    5596:	df 93       	push	r29
    5598:	cd b7       	in	r28, 0x3d	; 61
    559a:	de b7       	in	r29, 0x3e	; 62
    559c:	c8 53       	subi	r28, 0x38	; 56
    559e:	d1 40       	sbci	r29, 0x01	; 1
    55a0:	0f b6       	in	r0, 0x3f	; 63
    55a2:	f8 94       	cli
    55a4:	de bf       	out	0x3e, r29	; 62
    55a6:	0f be       	out	0x3f, r0	; 63
    55a8:	cd bf       	out	0x3d, r28	; 61
    55aa:	d9 01       	movw	r26, r18
  TMR_Status ret = TMR_SUCCESS;
  TMR_SR_SerialReader *sr;
  TMR_SR_MultipleStatus multipleStatus = {0};
    55ac:	9e 01       	movw	r18, r28
    55ae:	2f 5f       	subi	r18, 0xFF	; 255
    55b0:	3f 4f       	sbci	r19, 0xFF	; 255
    55b2:	79 01       	movw	r14, r18
    55b4:	26 e0       	ldi	r18, 0x06	; 6
    55b6:	f7 01       	movw	r30, r14
    55b8:	11 92       	st	Z+, r1
    55ba:	2a 95       	dec	r18
    55bc:	e9 f7       	brne	.-6      	; 0x55b8 <TMR_SR_read_internal+0x44>
#endif /* TMR_ENABLE_BACKGROUND_READS */
  sr = &reader->u.serialReader;

  /* The ontime passed in TMR_read() function through codelet is being collected in 'timeoutMs' variable.
   * Here assigning this value to onTime variable of readParams structure. Which will be ussed in setAntennaReadTimeList() function.*/
  reader->readParams.onTime = timeoutMs;
    55be:	fc 01       	movw	r30, r24
    55c0:	40 8b       	std	Z+16, r20	; 0x10
    55c2:	51 8b       	std	Z+17, r21	; 0x11
    55c4:	62 8b       	std	Z+18, r22	; 0x12
    55c6:	73 8b       	std	Z+19, r23	; 0x13

#ifdef TMR_ENABLE_HF_LF
  if (reader->isProtocolDynamicSwitching)
    55c8:	ee 5d       	subi	r30, 0xDE	; 222
    55ca:	f9 4f       	sbci	r31, 0xF9	; 249
    55cc:	30 81       	ld	r19, Z
    55ce:	33 23       	and	r19, r19
    55d0:	99 f0       	breq	.+38     	; 0x55f8 <TMR_SR_read_internal+0x84>
  {
    /* Dynamic protocol switching is supported only for M3e.
     * Sync read and multi RP does not support dynamic switching.
     */
    if ((TMR_READ_PLAN_TYPE_MULTI == rp->type) ||
    55d2:	f8 01       	movw	r30, r16
    55d4:	20 81       	ld	r18, Z
    55d6:	22 30       	cpi	r18, 0x02	; 2
    55d8:	31 f0       	breq	.+12     	; 0x55e6 <TMR_SR_read_internal+0x72>
        (!reader->continuousReading))
    55da:	fc 01       	movw	r30, r24
    55dc:	ea 58       	subi	r30, 0x8A	; 138
    55de:	ff 4f       	sbci	r31, 0xFF	; 255
    55e0:	20 81       	ld	r18, Z
  if (reader->isProtocolDynamicSwitching)
  {
    /* Dynamic protocol switching is supported only for M3e.
     * Sync read and multi RP does not support dynamic switching.
     */
    if ((TMR_READ_PLAN_TYPE_MULTI == rp->type) ||
    55e2:	21 11       	cpse	r18, r1
    55e4:	09 c0       	rjmp	.+18     	; 0x55f8 <TMR_SR_read_internal+0x84>
        (!reader->continuousReading))
    {
      reader->isProtocolDynamicSwitching = false;
    55e6:	fc 01       	movw	r30, r24
    55e8:	ee 5d       	subi	r30, 0xDE	; 222
    55ea:	f9 4f       	sbci	r31, 0xF9	; 249
    55ec:	10 82       	st	Z, r1
      return TMR_ERROR_UNSUPPORTED;
    55ee:	63 e0       	ldi	r22, 0x03	; 3
    55f0:	70 e0       	ldi	r23, 0x00	; 0
    55f2:	80 e0       	ldi	r24, 0x00	; 0
    55f4:	93 e0       	ldi	r25, 0x03	; 3
    55f6:	d0 c2       	rjmp	.+1440   	; 0x5b98 <TMR_SR_read_internal+0x624>
    55f8:	48 01       	movw	r8, r16
    55fa:	c9 5c       	subi	r28, 0xC9	; 201
    55fc:	de 4f       	sbci	r29, 0xFE	; 254
    55fe:	b9 83       	std	Y+1, r27	; 0x01
    5600:	a8 83       	st	Y, r26
    5602:	c7 53       	subi	r28, 0x37	; 55
    5604:	d1 40       	sbci	r29, 0x01	; 1
    5606:	1a 01       	movw	r2, r20
    5608:	2b 01       	movw	r4, r22
    560a:	3c 01       	movw	r6, r24
    }
  }
#endif /* TMR_ENABLE_HF_LF */

#ifndef TMR_ENABLE_GEN2_ONLY
  if (TMR_READ_PLAN_TYPE_MULTI == rp->type)
    560c:	d8 01       	movw	r26, r16
    560e:	8c 91       	ld	r24, X
    5610:	82 30       	cpi	r24, 0x02	; 2
    5612:	09 f0       	breq	.+2      	; 0x5616 <TMR_SR_read_internal+0xa2>
    5614:	e5 c0       	rjmp	.+458    	; 0x57e0 <TMR_SR_read_internal+0x26c>
    TMR_TagProtocolList *protocolList = &p;
    TMR_TagFilter *filters[TMR_MAX_SERIAL_MULTIPROTOCOL_LENGTH];
    TMR_TagProtocol protocols[TMR_MAX_SERIAL_MULTIPROTOCOL_LENGTH];


    if (TMR_MAX_SERIAL_MULTIPROTOCOL_LENGTH < rp->u.multi.planCount)
    5616:	1c 96       	adiw	r26, 0x0c	; 12
    5618:	8c 91       	ld	r24, X
    561a:	81 32       	cpi	r24, 0x21	; 33
    561c:	08 f0       	brcs	.+2      	; 0x5620 <TMR_SR_read_internal+0xac>
    561e:	d6 c0       	rjmp	.+428    	; 0x57cc <TMR_SR_read_internal+0x258>
    {
      return TMR_ERROR_TOO_BIG ;
    }

    protocolList->len = rp->u.multi.planCount;
    5620:	ca 5c       	subi	r28, 0xCA	; 202
    5622:	de 4f       	sbci	r29, 0xFE	; 254
    5624:	88 83       	st	Y, r24
    5626:	c6 53       	subi	r28, 0x36	; 54
    5628:	d1 40       	sbci	r29, 0x01	; 1
    protocolList->max = rp->u.multi.planCount;
    562a:	cb 5c       	subi	r28, 0xCB	; 203
    562c:	de 4f       	sbci	r29, 0xFE	; 254
    562e:	88 83       	st	Y, r24
    5630:	c5 53       	subi	r28, 0x35	; 53
    5632:	d1 40       	sbci	r29, 0x01	; 1


    protocolList->list = protocols;
    5634:	ce 01       	movw	r24, r28
    5636:	8d 5e       	subi	r24, 0xED	; 237
    5638:	9e 4f       	sbci	r25, 0xFE	; 254
    563a:	cd 5c       	subi	r28, 0xCD	; 205
    563c:	de 4f       	sbci	r29, 0xFE	; 254
    563e:	99 83       	std	Y+1, r25	; 0x01
    5640:	88 83       	st	Y, r24
    5642:	c3 53       	subi	r28, 0x33	; 51
    5644:	d1 40       	sbci	r29, 0x01	; 1

    for (i = 0; i < rp->u.multi.planCount; i++)
    5646:	20 e0       	ldi	r18, 0x00	; 0
    5648:	30 e0       	ldi	r19, 0x00	; 0
    564a:	2c c0       	rjmp	.+88     	; 0x56a4 <TMR_SR_read_internal+0x130>
    {
      protocolList->list[i] = rp->u.multi.plans[i]->u.simple.protocol;
    564c:	cd 5c       	subi	r28, 0xCD	; 205
    564e:	de 4f       	sbci	r29, 0xFE	; 254
    5650:	e8 81       	ld	r30, Y
    5652:	f9 81       	ldd	r31, Y+1	; 0x01
    5654:	c3 53       	subi	r28, 0x33	; 51
    5656:	d1 40       	sbci	r29, 0x01	; 1
    5658:	bf 01       	movw	r22, r30
    565a:	62 0f       	add	r22, r18
    565c:	73 1f       	adc	r23, r19
    565e:	f4 01       	movw	r30, r8
    5660:	a6 81       	ldd	r26, Z+6	; 0x06
    5662:	b7 81       	ldd	r27, Z+7	; 0x07
    5664:	c9 01       	movw	r24, r18
    5666:	88 0f       	add	r24, r24
    5668:	99 1f       	adc	r25, r25
    566a:	a8 0f       	add	r26, r24
    566c:	b9 1f       	adc	r27, r25
    566e:	0d 90       	ld	r0, X+
    5670:	bc 91       	ld	r27, X
    5672:	a0 2d       	mov	r26, r0
    5674:	1c 96       	adiw	r26, 0x0c	; 12
    5676:	4c 91       	ld	r20, X
    5678:	db 01       	movw	r26, r22
    567a:	4c 93       	st	X, r20
      filters[i]= rp->u.multi.plans[i]->u.simple.filter; 
    567c:	06 80       	ldd	r0, Z+6	; 0x06
    567e:	f7 81       	ldd	r31, Z+7	; 0x07
    5680:	e0 2d       	mov	r30, r0
    5682:	e8 0f       	add	r30, r24
    5684:	f9 1f       	adc	r31, r25
    5686:	01 90       	ld	r0, Z+
    5688:	f0 81       	ld	r31, Z
    568a:	e0 2d       	mov	r30, r0
    568c:	45 85       	ldd	r20, Z+13	; 0x0d
    568e:	56 85       	ldd	r21, Z+14	; 0x0e
    5690:	e1 e0       	ldi	r30, 0x01	; 1
    5692:	f0 e0       	ldi	r31, 0x00	; 0
    5694:	ec 0f       	add	r30, r28
    5696:	fd 1f       	adc	r31, r29
    5698:	e8 0f       	add	r30, r24
    569a:	f9 1f       	adc	r31, r25
    569c:	53 8b       	std	Z+19, r21	; 0x13
    569e:	42 8b       	std	Z+18, r20	; 0x12
    protocolList->max = rp->u.multi.planCount;


    protocolList->list = protocols;

    for (i = 0; i < rp->u.multi.planCount; i++)
    56a0:	2f 5f       	subi	r18, 0xFF	; 255
    56a2:	3f 4f       	sbci	r19, 0xFF	; 255
    56a4:	f4 01       	movw	r30, r8
    56a6:	84 85       	ldd	r24, Z+12	; 0x0c
    56a8:	48 2f       	mov	r20, r24
    56aa:	50 e0       	ldi	r21, 0x00	; 0
    56ac:	24 17       	cp	r18, r20
    56ae:	35 07       	cpc	r19, r21
    56b0:	6c f2       	brlt	.-102    	; 0x564c <TMR_SR_read_internal+0xd8>
    {
      protocolList->list[i] = rp->u.multi.plans[i]->u.simple.protocol;
      filters[i]= rp->u.multi.plans[i]->u.simple.filter; 
    }
    
    if (((0 < rp->u.multi.planCount) &&
    56b2:	88 23       	and	r24, r24
    56b4:	49 f0       	breq	.+18     	; 0x56c8 <TMR_SR_read_internal+0x154>
         (rp->u.multi.plans[0]->type == TMR_READ_PLAN_TYPE_SIMPLE))
    56b6:	06 80       	ldd	r0, Z+6	; 0x06
    56b8:	f7 81       	ldd	r31, Z+7	; 0x07
    56ba:	e0 2d       	mov	r30, r0
    56bc:	01 90       	ld	r0, Z+
    56be:	f0 81       	ld	r31, Z
    56c0:	e0 2d       	mov	r30, r0
    56c2:	80 81       	ld	r24, Z
    {
      protocolList->list[i] = rp->u.multi.plans[i]->u.simple.protocol;
      filters[i]= rp->u.multi.plans[i]->u.simple.filter; 
    }
    
    if (((0 < rp->u.multi.planCount) &&
    56c4:	81 30       	cpi	r24, 0x01	; 1
    56c6:	39 f0       	breq	.+14     	; 0x56d6 <TMR_SR_read_internal+0x162>
         (rp->u.multi.plans[0]->type == TMR_READ_PLAN_TYPE_SIMPLE))
         || (true == reader->continuousReading))
    56c8:	f3 01       	movw	r30, r6
    56ca:	ea 58       	subi	r30, 0x8A	; 138
    56cc:	ff 4f       	sbci	r31, 0xFF	; 255
    56ce:	80 81       	ld	r24, Z
    56d0:	88 23       	and	r24, r24
    56d2:	09 f4       	brne	.+2      	; 0x56d6 <TMR_SR_read_internal+0x162>
    56d4:	85 c0       	rjmp	.+266    	; 0x57e0 <TMR_SR_read_internal+0x26c>
    {
      ret = prepForSearch(reader, rp);
    56d6:	b4 01       	movw	r22, r8
    56d8:	c3 01       	movw	r24, r6
    56da:	0e 94 99 15 	call	0x2b32	; 0x2b32 <prepForSearch>
    56de:	6b 01       	movw	r12, r22
    56e0:	7c 01       	movw	r14, r24
      if (TMR_SUCCESS == ret)
    56e2:	61 15       	cp	r22, r1
    56e4:	71 05       	cpc	r23, r1
    56e6:	81 05       	cpc	r24, r1
    56e8:	91 05       	cpc	r25, r1
    56ea:	09 f0       	breq	.+2      	; 0x56ee <TMR_SR_read_internal+0x17a>
    56ec:	69 c0       	rjmp	.+210    	; 0x57c0 <TMR_SR_read_internal+0x24c>
        /* At this point antenna list is already set,
         * which is one time configuration.
         * Make the variable true to not set antenna list again,
         * until next paramset of the read plan.
         */
        reader->isAntennaSet = true;
    56ee:	81 e0       	ldi	r24, 0x01	; 1
    56f0:	f3 01       	movw	r30, r6
    56f2:	e9 5e       	subi	r30, 0xE9	; 233
    56f4:	f9 4f       	sbci	r31, 0xF9	; 249
    56f6:	80 83       	st	Z, r24

        /* Cache search timeout for later call to streaming receive */
        sr->searchTimeoutMs = timeoutMs;
    56f8:	ef 55       	subi	r30, 0x5F	; 95
    56fa:	f2 40       	sbci	r31, 0x02	; 2
    56fc:	20 82       	st	Z, r2
    56fe:	31 82       	std	Z+1, r3	; 0x01
    5700:	42 82       	std	Z+2, r4	; 0x02
    5702:	53 82       	std	Z+3, r5	; 0x03

        /**
         * take the time stamp only in case of sync read,
         * async read does not depend on this
         */
        if (!reader->continuousReading)
    5704:	e2 54       	subi	r30, 0x42	; 66
    5706:	f3 40       	sbci	r31, 0x03	; 3
    5708:	80 81       	ld	r24, Z
    570a:	81 11       	cpse	r24, r1
    570c:	25 c0       	rjmp	.+74     	; 0x5758 <TMR_SR_read_internal+0x1e4>
        {
          /* Cache the read time so it can be put in tag read data later */
          tm_gettime_consistent(&starttimeHigh, &starttimeLow);
    570e:	be 01       	movw	r22, r28
    5710:	65 5f       	subi	r22, 0xF5	; 245
    5712:	7f 4f       	sbci	r23, 0xFF	; 255
    5714:	ce 01       	movw	r24, r28
    5716:	0f 96       	adiw	r24, 0x0f	; 15
    5718:	0e 94 5a 6a 	call	0xd4b4	; 0xd4b4 <tm_gettime_consistent>
          sr->readTimeHigh = starttimeHigh;
    571c:	4f 85       	ldd	r20, Y+15	; 0x0f
    571e:	58 89       	ldd	r21, Y+16	; 0x10
    5720:	69 89       	ldd	r22, Y+17	; 0x11
    5722:	7a 89       	ldd	r23, Y+18	; 0x12
    5724:	f3 01       	movw	r30, r6
    5726:	e8 55       	subi	r30, 0x58	; 88
    5728:	fc 4f       	sbci	r31, 0xFC	; 252
    572a:	40 83       	st	Z, r20
    572c:	51 83       	std	Z+1, r21	; 0x01
    572e:	62 83       	std	Z+2, r22	; 0x02
    5730:	73 83       	std	Z+3, r23	; 0x03
          sr->readTimeLow = starttimeLow;
    5732:	8b 85       	ldd	r24, Y+11	; 0x0b
    5734:	9c 85       	ldd	r25, Y+12	; 0x0c
    5736:	ad 85       	ldd	r26, Y+13	; 0x0d
    5738:	be 85       	ldd	r27, Y+14	; 0x0e
    573a:	34 97       	sbiw	r30, 0x04	; 4
    573c:	80 83       	st	Z, r24
    573e:	91 83       	std	Z+1, r25	; 0x01
    5740:	a2 83       	std	Z+2, r26	; 0x02
    5742:	b3 83       	std	Z+3, r27	; 0x03
          sr->lastSentTagTimestampHigh = starttimeHigh;
    5744:	3c 96       	adiw	r30, 0x0c	; 12
    5746:	40 83       	st	Z, r20
    5748:	51 83       	std	Z+1, r21	; 0x01
    574a:	62 83       	std	Z+2, r22	; 0x02
    574c:	73 83       	std	Z+3, r23	; 0x03
          sr->lastSentTagTimestampLow = starttimeLow;
    574e:	34 96       	adiw	r30, 0x04	; 4
    5750:	80 83       	st	Z, r24
    5752:	91 83       	std	Z+1, r25	; 0x01
    5754:	a2 83       	std	Z+2, r26	; 0x02
    5756:	b3 83       	std	Z+3, r27	; 0x03
        }

        ret = TMR_SR_cmdMultipleProtocolSearch(reader, TMR_SR_OPCODE_READ_TAG_ID_MULTIPLE,
    5758:	f3 01       	movw	r30, r6
    575a:	e7 5e       	subi	r30, 0xE7	; 231
    575c:	f9 4f       	sbci	r31, 0xF9	; 249
    575e:	20 81       	ld	r18, Z
    5760:	31 81       	ldd	r19, Z+1	; 0x01
    5762:	ae 01       	movw	r20, r28
    5764:	49 5f       	subi	r20, 0xF9	; 249
    5766:	5f 4f       	sbci	r21, 0xFF	; 255
    5768:	5a 01       	movw	r10, r20
    576a:	61 01       	movw	r12, r2
    576c:	ce 01       	movw	r24, r28
    576e:	43 96       	adiw	r24, 0x13	; 19
    5770:	7c 01       	movw	r14, r24
    5772:	03 e0       	ldi	r16, 0x03	; 3
    5774:	10 e0       	ldi	r17, 0x00	; 0
    5776:	44 5d       	subi	r20, 0xD4	; 212
    5778:	5e 4f       	sbci	r21, 0xFE	; 254
    577a:	62 e2       	ldi	r22, 0x22	; 34
    577c:	c3 01       	movw	r24, r6
    577e:	0e 94 63 5f 	call	0xbec6	; 0xbec6 <TMR_SR_cmdMultipleProtocolSearch>
    5782:	26 2f       	mov	r18, r22
    5784:	37 2f       	mov	r19, r23
                                                 protocolList, reader->userMetadataFlag,
                                                 TMR_SR_SEARCH_FLAG_CONFIGURED_LIST,
                                                 filters, (uint16_t)timeoutMs, &count);

        if (NULL != tagCount)
    5786:	c9 5c       	subi	r28, 0xC9	; 201
    5788:	de 4f       	sbci	r29, 0xFE	; 254
    578a:	a8 81       	ld	r26, Y
    578c:	b9 81       	ldd	r27, Y+1	; 0x01
    578e:	c7 53       	subi	r28, 0x37	; 55
    5790:	d1 40       	sbci	r29, 0x01	; 1
    5792:	10 97       	sbiw	r26, 0x00	; 0
    5794:	01 f1       	breq	.+64     	; 0x57d6 <TMR_SR_read_internal+0x262>
        {
          *tagCount += count;
    5796:	cd 90       	ld	r12, X+
    5798:	dd 90       	ld	r13, X+
    579a:	ed 90       	ld	r14, X+
    579c:	fc 90       	ld	r15, X
    579e:	13 97       	sbiw	r26, 0x03	; 3
    57a0:	4f 81       	ldd	r20, Y+7	; 0x07
    57a2:	58 85       	ldd	r21, Y+8	; 0x08
    57a4:	69 85       	ldd	r22, Y+9	; 0x09
    57a6:	7a 85       	ldd	r23, Y+10	; 0x0a
    57a8:	4c 0d       	add	r20, r12
    57aa:	5d 1d       	adc	r21, r13
    57ac:	6e 1d       	adc	r22, r14
    57ae:	7f 1d       	adc	r23, r15
    57b0:	fd 01       	movw	r30, r26
    57b2:	40 83       	st	Z, r20
    57b4:	51 83       	std	Z+1, r21	; 0x01
    57b6:	62 83       	std	Z+2, r22	; 0x02
    57b8:	73 83       	std	Z+3, r23	; 0x03
        }
        return ret;
    57ba:	62 2f       	mov	r22, r18
    57bc:	73 2f       	mov	r23, r19
    57be:	ec c1       	rjmp	.+984    	; 0x5b98 <TMR_SR_read_internal+0x624>
        reader->continuousReading = false;
      }
      else
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */
      {
        if (TMR_SUCCESS != ret)
    57c0:	61 15       	cp	r22, r1
    57c2:	71 05       	cpc	r23, r1
    57c4:	81 05       	cpc	r24, r1
    57c6:	91 05       	cpc	r25, r1
    57c8:	59 f0       	breq	.+22     	; 0x57e0 <TMR_SR_read_internal+0x26c>
    57ca:	06 c0       	rjmp	.+12     	; 0x57d8 <TMR_SR_read_internal+0x264>
    TMR_TagProtocol protocols[TMR_MAX_SERIAL_MULTIPROTOCOL_LENGTH];


    if (TMR_MAX_SERIAL_MULTIPROTOCOL_LENGTH < rp->u.multi.planCount)
    {
      return TMR_ERROR_TOO_BIG ;
    57cc:	66 e0       	ldi	r22, 0x06	; 6
    57ce:	70 e0       	ldi	r23, 0x00	; 0
    57d0:	80 e0       	ldi	r24, 0x00	; 0
    57d2:	93 e0       	ldi	r25, 0x03	; 3
    57d4:	e1 c1       	rjmp	.+962    	; 0x5b98 <TMR_SR_read_internal+0x624>
    57d6:	e0 c1       	rjmp	.+960    	; 0x5b98 <TMR_SR_read_internal+0x624>
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */
      {
        if (TMR_SUCCESS != ret)
        {
          /* But if this is an actual error, just throw it. */
          return ret;
    57d8:	7d 2d       	mov	r23, r13
    57da:	8e 2d       	mov	r24, r14
    57dc:	9f 2d       	mov	r25, r15
    57de:	dc c1       	rjmp	.+952    	; 0x5b98 <TMR_SR_read_internal+0x624>

#if TMR_ENABLE_PSEUDO_ASYNC_READ
  if (TMR_READ_PLAN_TYPE_SIMPLE == rp->type)
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */
  {
    reader->triggerRead = rp->u.simple.triggerRead.enable;
    57e0:	d4 01       	movw	r26, r8
    57e2:	57 96       	adiw	r26, 0x17	; 23
    57e4:	8c 91       	ld	r24, X
    57e6:	57 97       	sbiw	r26, 0x17	; 23
    57e8:	f3 01       	movw	r30, r6
    57ea:	e7 58       	subi	r30, 0x87	; 135
    57ec:	ff 4f       	sbci	r31, 0xFF	; 255
    57ee:	80 83       	st	Z, r24
#ifdef TMR_ENABLE_UHF
    reader->fastSearch = rp->u.simple.useFastSearch;
    57f0:	51 96       	adiw	r26, 0x11	; 17
    57f2:	8c 91       	ld	r24, X
    57f4:	51 97       	sbiw	r26, 0x11	; 17
    57f6:	ed 56       	subi	r30, 0x6D	; 109
    57f8:	fa 4f       	sbci	r31, 0xFA	; 250
    57fa:	80 83       	st	Z, r24
#endif /* TMR_ENABLE_UHF */

    //Update stopNTrigger status and number of tag count to read.
    reader->isStopNTags = rp->u.simple.stopOnCount.stopNTriggerStatus;
    57fc:	52 96       	adiw	r26, 0x12	; 18
    57fe:	8c 91       	ld	r24, X
    5800:	52 97       	sbiw	r26, 0x12	; 18
    5802:	70 97       	sbiw	r30, 0x10	; 16
    5804:	80 83       	st	Z, r24
    reader->numberOfTagsToRead = rp->u.simple.stopOnCount.noOfTags;
    5806:	53 96       	adiw	r26, 0x13	; 19
    5808:	8d 91       	ld	r24, X+
    580a:	9d 91       	ld	r25, X+
    580c:	0d 90       	ld	r0, X+
    580e:	bc 91       	ld	r27, X
    5810:	a0 2d       	mov	r26, r0
    5812:	31 96       	adiw	r30, 0x01	; 1
    5814:	80 83       	st	Z, r24
    5816:	91 83       	std	Z+1, r25	; 0x01
    5818:	a2 83       	std	Z+2, r26	; 0x02
    581a:	b3 83       	std	Z+3, r27	; 0x03
  }
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */
#endif /* TMR_ENABLE_GEN2_ONLY */

  /* Set antenna list only if it is not set already. */
  if (reader->isAntennaSet == false)
    581c:	7a 96       	adiw	r30, 0x1a	; 26
    581e:	80 81       	ld	r24, Z
    5820:	81 11       	cpse	r24, r1
    5822:	0c c0       	rjmp	.+24     	; 0x583c <TMR_SR_read_internal+0x2c8>
  {
    /* At this point we're guaranteed to have a simple read plan */
    ret = prepForSearch(reader, rp);
    5824:	b4 01       	movw	r22, r8
    5826:	c3 01       	movw	r24, r6
    5828:	0e 94 99 15 	call	0x2b32	; 0x2b32 <prepForSearch>
    582c:	6b 01       	movw	r12, r22
    582e:	7c 01       	movw	r14, r24
    if (TMR_SUCCESS != ret)
    5830:	61 15       	cp	r22, r1
    5832:	71 05       	cpc	r23, r1
    5834:	81 05       	cpc	r24, r1
    5836:	91 05       	cpc	r25, r1
    5838:	09 f0       	breq	.+2      	; 0x583c <TMR_SR_read_internal+0x2c8>
    583a:	98 c1       	rjmp	.+816    	; 0x5b6c <TMR_SR_read_internal+0x5f8>
    }
  }

#ifndef TMR_ENABLE_GEN2_ONLY
  /* Set protocol only for Sync read, as Async read contains protocol in 0x2F command */
  if (!reader->continuousReading)
    583c:	f3 01       	movw	r30, r6
    583e:	ea 58       	subi	r30, 0x8A	; 138
    5840:	ff 4f       	sbci	r31, 0xFF	; 255
    5842:	80 81       	ld	r24, Z
    5844:	81 11       	cpse	r24, r1
    5846:	0d c0       	rjmp	.+26     	; 0x5862 <TMR_SR_read_internal+0x2ee>
  {
    /* Set protocol to that specified by the read plan. */
    ret = setProtocol(reader, rp->u.simple.protocol);
    5848:	f4 01       	movw	r30, r8
    584a:	64 85       	ldd	r22, Z+12	; 0x0c
    584c:	c3 01       	movw	r24, r6
    584e:	0e 94 11 04 	call	0x822	; 0x822 <setProtocol>
    5852:	6b 01       	movw	r12, r22
    5854:	7c 01       	movw	r14, r24
    if (TMR_SUCCESS != ret)
    5856:	61 15       	cp	r22, r1
    5858:	71 05       	cpc	r23, r1
    585a:	81 05       	cpc	r24, r1
    585c:	91 05       	cpc	r25, r1
    585e:	09 f0       	breq	.+2      	; 0x5862 <TMR_SR_read_internal+0x2ee>
    5860:	89 c1       	rjmp	.+786    	; 0x5b74 <TMR_SR_read_internal+0x600>
    }
  }
#endif /* TMR_ENABLE_GEN2_ONLY */

  /* Cache the read time so it can be put in tag read data later */
  tm_gettime_consistent(&starttimeHigh, &starttimeLow);
    5862:	be 01       	movw	r22, r28
    5864:	65 5f       	subi	r22, 0xF5	; 245
    5866:	7f 4f       	sbci	r23, 0xFF	; 255
    5868:	ce 01       	movw	r24, r28
    586a:	0f 96       	adiw	r24, 0x0f	; 15
    586c:	0e 94 5a 6a 	call	0xd4b4	; 0xd4b4 <tm_gettime_consistent>
  sr->readTimeHigh = starttimeHigh;
    5870:	4f 85       	ldd	r20, Y+15	; 0x0f
    5872:	58 89       	ldd	r21, Y+16	; 0x10
    5874:	69 89       	ldd	r22, Y+17	; 0x11
    5876:	7a 89       	ldd	r23, Y+18	; 0x12
    5878:	f3 01       	movw	r30, r6
    587a:	e8 55       	subi	r30, 0x58	; 88
    587c:	fc 4f       	sbci	r31, 0xFC	; 252
    587e:	40 83       	st	Z, r20
    5880:	51 83       	std	Z+1, r21	; 0x01
    5882:	62 83       	std	Z+2, r22	; 0x02
    5884:	73 83       	std	Z+3, r23	; 0x03
  sr->readTimeLow = starttimeLow;
    5886:	8b 85       	ldd	r24, Y+11	; 0x0b
    5888:	9c 85       	ldd	r25, Y+12	; 0x0c
    588a:	ad 85       	ldd	r26, Y+13	; 0x0d
    588c:	be 85       	ldd	r27, Y+14	; 0x0e
    588e:	34 97       	sbiw	r30, 0x04	; 4
    5890:	80 83       	st	Z, r24
    5892:	91 83       	std	Z+1, r25	; 0x01
    5894:	a2 83       	std	Z+2, r26	; 0x02
    5896:	b3 83       	std	Z+3, r27	; 0x03
  sr->lastSentTagTimestampHigh = starttimeHigh;
    5898:	3c 96       	adiw	r30, 0x0c	; 12
    589a:	40 83       	st	Z, r20
    589c:	51 83       	std	Z+1, r21	; 0x01
    589e:	62 83       	std	Z+2, r22	; 0x02
    58a0:	73 83       	std	Z+3, r23	; 0x03
  sr->lastSentTagTimestampLow = starttimeLow;
    58a2:	34 96       	adiw	r30, 0x04	; 4
    58a4:	80 83       	st	Z, r24
    58a6:	91 83       	std	Z+1, r25	; 0x01
    58a8:	a2 83       	std	Z+2, r26	; 0x02
    58aa:	b3 83       	std	Z+3, r27	; 0x03

  /* Cache search timeout for later call to streaming receive */
  sr->searchTimeoutMs = timeoutMs;
    58ac:	34 96       	adiw	r30, 0x04	; 4
    58ae:	20 82       	st	Z, r2
    58b0:	31 82       	std	Z+1, r3	; 0x01
    58b2:	42 82       	std	Z+2, r4	; 0x02
    58b4:	53 82       	std	Z+3, r5	; 0x03
#if TMR_ENABLE_PSEUDO_ASYNC_READ
    prevElapsed = elapsed;    /* Update previous read(22h) elapsed time value */
    readTimeMs = timeoutMs - elapsed;
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */

    if (NULL == rp->u.simple.tagop)
    58b6:	d4 01       	movw	r26, r8
    58b8:	1f 96       	adiw	r26, 0x0f	; 15
    58ba:	6d 91       	ld	r22, X+
    58bc:	7c 91       	ld	r23, X
    58be:	50 97       	sbiw	r26, 0x10	; 16
    58c0:	61 15       	cp	r22, r1
    58c2:	71 05       	cpc	r23, r1
    58c4:	09 f0       	breq	.+2      	; 0x58c8 <TMR_SR_read_internal+0x354>
    58c6:	46 c0       	rjmp	.+140    	; 0x5954 <TMR_SR_read_internal+0x3e0>
    {
      if(reader->continuousReading)
    58c8:	e2 54       	subi	r30, 0x42	; 66
    58ca:	f3 40       	sbci	r31, 0x03	; 3
    58cc:	80 81       	ld	r24, Z
    58ce:	88 23       	and	r24, r24
    58d0:	69 f1       	breq	.+90     	; 0x592c <TMR_SR_read_internal+0x3b8>
        TMR_TagProtocolList p;
        TMR_TagProtocolList *protocolList = &p;
        TMR_TagFilter *filters[1];
        TMR_TagProtocol protocols[1];
        
        protocolList->len = 1;
    58d2:	81 e0       	ldi	r24, 0x01	; 1
    58d4:	8e 8b       	std	Y+22, r24	; 0x16
        protocolList->max = 1;
    58d6:	8d 8b       	std	Y+21, r24	; 0x15
        protocolList->list = protocols;
    58d8:	fe 01       	movw	r30, r28
    58da:	ed 5c       	subi	r30, 0xCD	; 205
    58dc:	fe 4f       	sbci	r31, 0xFE	; 254
    58de:	fc 8b       	std	Y+20, r31	; 0x14
    58e0:	eb 8b       	std	Y+19, r30	; 0x13

        protocolList->list[0] = rp->u.simple.protocol;
    58e2:	1c 96       	adiw	r26, 0x0c	; 12
    58e4:	8c 91       	ld	r24, X
    58e6:	1c 97       	sbiw	r26, 0x0c	; 12
    58e8:	80 83       	st	Z, r24
        filters[0]= rp->u.simple.filter;
    58ea:	1d 96       	adiw	r26, 0x0d	; 13
    58ec:	8d 91       	ld	r24, X+
    58ee:	9c 91       	ld	r25, X
    58f0:	1e 97       	sbiw	r26, 0x0e	; 14
    58f2:	cd 5e       	subi	r28, 0xED	; 237
    58f4:	de 4f       	sbci	r29, 0xFE	; 254
    58f6:	99 83       	std	Y+1, r25	; 0x01
    58f8:	88 83       	st	Y, r24
    58fa:	c3 51       	subi	r28, 0x13	; 19
    58fc:	d1 40       	sbci	r29, 0x01	; 1

        ret = TMR_SR_cmdMultipleProtocolSearch(reader,
    58fe:	f3 01       	movw	r30, r6
    5900:	e7 5e       	subi	r30, 0xE7	; 231
    5902:	f9 4f       	sbci	r31, 0xF9	; 249
    5904:	20 81       	ld	r18, Z
    5906:	31 81       	ldd	r19, Z+1	; 0x01
    5908:	fe 01       	movw	r30, r28
    590a:	37 96       	adiw	r30, 0x07	; 7
    590c:	5f 01       	movw	r10, r30
    590e:	61 01       	movw	r12, r2
    5910:	ae 01       	movw	r20, r28
    5912:	4d 5e       	subi	r20, 0xED	; 237
    5914:	5e 4f       	sbci	r21, 0xFE	; 254
    5916:	7a 01       	movw	r14, r20
    5918:	03 e0       	ldi	r16, 0x03	; 3
    591a:	10 e0       	ldi	r17, 0x00	; 0
    591c:	5a 95       	dec	r21
    591e:	62 e2       	ldi	r22, 0x22	; 34
    5920:	c3 01       	movw	r24, r6
    5922:	0e 94 63 5f 	call	0xbec6	; 0xbec6 <TMR_SR_cmdMultipleProtocolSearch>
    5926:	4b 01       	movw	r8, r22
    5928:	5c 01       	movw	r10, r24
    592a:	71 c0       	rjmp	.+226    	; 0x5a0e <TMR_SR_read_internal+0x49a>
                            filters,
                            (uint16_t)timeoutMs, &count);
      }
      else
      {
        ret = TMR_SR_cmdReadTagMultiple(reader,(uint16_t)readTimeMs,
    592c:	d4 01       	movw	r26, r8
    592e:	1c 96       	adiw	r26, 0x0c	; 12
    5930:	0c 91       	ld	r16, X
    5932:	1c 97       	sbiw	r26, 0x0c	; 12
                            TMR_SR_SEARCH_FLAG_CONFIGURED_LIST, 
                            rp->u.simple.filter, rp->u.simple.protocol, &count);
    5934:	1d 96       	adiw	r26, 0x0d	; 13
    5936:	2d 91       	ld	r18, X+
    5938:	3c 91       	ld	r19, X
    593a:	1e 97       	sbiw	r26, 0x0e	; 14
                            filters,
                            (uint16_t)timeoutMs, &count);
      }
      else
      {
        ret = TMR_SR_cmdReadTagMultiple(reader,(uint16_t)readTimeMs,
    593c:	fe 01       	movw	r30, r28
    593e:	37 96       	adiw	r30, 0x07	; 7
    5940:	7f 01       	movw	r14, r30
    5942:	43 e0       	ldi	r20, 0x03	; 3
    5944:	50 e0       	ldi	r21, 0x00	; 0
    5946:	b1 01       	movw	r22, r2
    5948:	c3 01       	movw	r24, r6
    594a:	0e 94 e1 3a 	call	0x75c2	; 0x75c2 <TMR_SR_cmdReadTagMultiple>
    594e:	4b 01       	movw	r8, r22
    5950:	5c 01       	movw	r10, r24
    5952:	5d c0       	rjmp	.+186    	; 0x5a0e <TMR_SR_read_internal+0x49a>
      /* Since this is embedded tagop, removing elapsed time based on
       * continuous reading should not be done 
       */
      readTimeMs = timeoutMs - elapsed_tagop;
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */
      i = 2;
    5954:	82 e0       	ldi	r24, 0x02	; 2
    5956:	cd 5c       	subi	r28, 0xCD	; 205
    5958:	de 4f       	sbci	r29, 0xFE	; 254
    595a:	88 83       	st	Y, r24
    595c:	c3 53       	subi	r28, 0x33	; 51
    595e:	d1 40       	sbci	r29, 0x01	; 1
     
      /**
       * add the tag operation
       **/
      ret = TMR_SR_addTagOp(reader, rp->u.simple.tagop, rp, msg, &i, readTimeMs, &lenbyte);
    5960:	9e 01       	movw	r18, r28
    5962:	2d 5e       	subi	r18, 0xED	; 237
    5964:	3e 4f       	sbci	r19, 0xFE	; 254
    5966:	59 01       	movw	r10, r18
    5968:	72 01       	movw	r14, r4
    596a:	61 01       	movw	r12, r2
    596c:	8e 01       	movw	r16, r28
    596e:	0d 5c       	subi	r16, 0xCD	; 205
    5970:	1e 4f       	sbci	r17, 0xFE	; 254
    5972:	3a 95       	dec	r19
    5974:	a4 01       	movw	r20, r8
    5976:	c3 01       	movw	r24, r6
    5978:	7e d8       	rcall	.-3844   	; 0x4a76 <TMR_SR_addTagOp>
    597a:	4b 01       	movw	r8, r22
    597c:	5c 01       	movw	r10, r24
      if (TMR_SUCCESS != ret)
    597e:	61 15       	cp	r22, r1
    5980:	71 05       	cpc	r23, r1
    5982:	81 05       	cpc	r24, r1
    5984:	91 05       	cpc	r25, r1
    5986:	21 f0       	breq	.+8      	; 0x5990 <TMR_SR_read_internal+0x41c>
      {
        return ret;
    5988:	79 2d       	mov	r23, r9
    598a:	8a 2d       	mov	r24, r10
    598c:	9b 2d       	mov	r25, r11
    598e:	04 c1       	rjmp	.+520    	; 0x5b98 <TMR_SR_read_internal+0x624>
      }

      msg[lenbyte] = i - (lenbyte + 2); /* Install length of subcommand */
    5990:	cd 5e       	subi	r28, 0xED	; 237
    5992:	de 4f       	sbci	r29, 0xFE	; 254
    5994:	98 81       	ld	r25, Y
    5996:	c3 51       	subi	r28, 0x13	; 19
    5998:	d1 40       	sbci	r29, 0x01	; 1
    599a:	cd 5c       	subi	r28, 0xCD	; 205
    599c:	de 4f       	sbci	r29, 0xFE	; 254
    599e:	88 81       	ld	r24, Y
    59a0:	c3 53       	subi	r28, 0x33	; 51
    59a2:	d1 40       	sbci	r29, 0x01	; 1
    59a4:	e3 e1       	ldi	r30, 0x13	; 19
    59a6:	f0 e0       	ldi	r31, 0x00	; 0
    59a8:	ec 0f       	add	r30, r28
    59aa:	fd 1f       	adc	r31, r29
    59ac:	e9 0f       	add	r30, r25
    59ae:	f1 1d       	adc	r31, r1
    59b0:	38 2f       	mov	r19, r24
    59b2:	39 1b       	sub	r19, r25
    59b4:	93 2f       	mov	r25, r19
    59b6:	92 50       	subi	r25, 0x02	; 2
    59b8:	90 83       	st	Z, r25
      msg[1] = i - 3; /* Install length */
    59ba:	83 50       	subi	r24, 0x03	; 3
    59bc:	8c 8b       	std	Y+20, r24	; 0x14
      ret = TMR_SR_executeEmbeddedRead(reader, msg, (uint16_t)timeoutMs, &multipleStatus);
    59be:	9e 01       	movw	r18, r28
    59c0:	2f 5f       	subi	r18, 0xFF	; 255
    59c2:	3f 4f       	sbci	r19, 0xFF	; 255
    59c4:	a1 01       	movw	r20, r2
    59c6:	be 01       	movw	r22, r28
    59c8:	6d 5e       	subi	r22, 0xED	; 237
    59ca:	7f 4f       	sbci	r23, 0xFF	; 255
    59cc:	c3 01       	movw	r24, r6
    59ce:	0e 94 fb 3b 	call	0x77f6	; 0x77f6 <TMR_SR_executeEmbeddedRead>
    59d2:	4b 01       	movw	r8, r22
    59d4:	5c 01       	movw	r10, r24
      count = multipleStatus.tagsFound;
    59d6:	89 81       	ldd	r24, Y+1	; 0x01
    59d8:	9a 81       	ldd	r25, Y+2	; 0x02
    59da:	a0 e0       	ldi	r26, 0x00	; 0
    59dc:	b0 e0       	ldi	r27, 0x00	; 0
    59de:	8f 83       	std	Y+7, r24	; 0x07
    59e0:	98 87       	std	Y+8, r25	; 0x08
    59e2:	a9 87       	std	Y+9, r26	; 0x09
    59e4:	ba 87       	std	Y+10, r27	; 0x0a


      /* Update embedded tagop success/failure count */
      reader->u.serialReader.tagopSuccessCount += multipleStatus.successCount;
    59e6:	8b 81       	ldd	r24, Y+3	; 0x03
    59e8:	9c 81       	ldd	r25, Y+4	; 0x04
    59ea:	f3 01       	movw	r30, r6
    59ec:	ed 53       	subi	r30, 0x3D	; 61
    59ee:	fa 4f       	sbci	r31, 0xFA	; 250
    59f0:	20 81       	ld	r18, Z
    59f2:	31 81       	ldd	r19, Z+1	; 0x01
    59f4:	82 0f       	add	r24, r18
    59f6:	93 1f       	adc	r25, r19
    59f8:	91 83       	std	Z+1, r25	; 0x01
    59fa:	80 83       	st	Z, r24
      reader->u.serialReader.tagopFailureCount += multipleStatus.failureCount;
    59fc:	8d 81       	ldd	r24, Y+5	; 0x05
    59fe:	9e 81       	ldd	r25, Y+6	; 0x06
    5a00:	32 96       	adiw	r30, 0x02	; 2
    5a02:	20 81       	ld	r18, Z
    5a04:	31 81       	ldd	r19, Z+1	; 0x01
    5a06:	82 0f       	add	r24, r18
    5a08:	93 1f       	adc	r25, r19
    5a0a:	91 83       	std	Z+1, r25	; 0x01
    5a0c:	80 83       	st	Z, r24
    }

    // Error Handling
    if (TMR_ERROR_NO_TAGS_FOUND == ret)
    5a0e:	81 14       	cp	r8, r1
    5a10:	44 e0       	ldi	r20, 0x04	; 4
    5a12:	94 06       	cpc	r9, r20
    5a14:	a1 04       	cpc	r10, r1
    5a16:	42 e0       	ldi	r20, 0x02	; 2
    5a18:	b4 06       	cpc	r11, r20
    5a1a:	41 f4       	brne	.+16     	; 0x5a2c <TMR_SR_read_internal+0x4b8>
    {
      count = 0;
    5a1c:	1f 82       	std	Y+7, r1	; 0x07
    5a1e:	18 86       	std	Y+8, r1	; 0x08
    5a20:	19 86       	std	Y+9, r1	; 0x09
    5a22:	1a 86       	std	Y+10, r1	; 0x0a
      ret = TMR_SUCCESS;
    5a24:	81 2c       	mov	r8, r1
    5a26:	91 2c       	mov	r9, r1
    5a28:	54 01       	movw	r10, r8
    5a2a:	5b c0       	rjmp	.+182    	; 0x5ae2 <TMR_SR_read_internal+0x56e>
    }
    else if ((TMR_ERROR_TM_ASSERT_FAILED == ret) || (TMR_ERROR_TIMEOUT == ret))
    5a2c:	51 e0       	ldi	r21, 0x01	; 1
    5a2e:	85 16       	cp	r8, r21
    5a30:	5f e7       	ldi	r21, 0x7F	; 127
    5a32:	95 06       	cpc	r9, r21
    5a34:	a1 04       	cpc	r10, r1
    5a36:	52 e0       	ldi	r21, 0x02	; 2
    5a38:	b5 06       	cpc	r11, r21
    5a3a:	09 f4       	brne	.+2      	; 0x5a3e <TMR_SR_read_internal+0x4ca>
    5a3c:	9f c0       	rjmp	.+318    	; 0x5b7c <TMR_SR_read_internal+0x608>
    5a3e:	81 e0       	ldi	r24, 0x01	; 1
    5a40:	88 16       	cp	r8, r24
    5a42:	91 04       	cpc	r9, r1
    5a44:	a1 04       	cpc	r10, r1
    5a46:	b8 06       	cpc	r11, r24
    5a48:	09 f4       	brne	.+2      	; 0x5a4c <TMR_SR_read_internal+0x4d8>
    5a4a:	9d c0       	rjmp	.+314    	; 0x5b86 <TMR_SR_read_internal+0x612>
        return ret1;
      }
    }
#endif /* TMR_ENABLE_BACKGROUND_READS */
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */
    else if (TMR_SUCCESS != ret)
    5a4c:	81 14       	cp	r8, r1
    5a4e:	91 04       	cpc	r9, r1
    5a50:	a1 04       	cpc	r10, r1
    5a52:	b1 04       	cpc	r11, r1
    5a54:	09 f4       	brne	.+2      	; 0x5a58 <TMR_SR_read_internal+0x4e4>
    5a56:	45 c0       	rjmp	.+138    	; 0x5ae2 <TMR_SR_read_internal+0x56e>
    {
      uint16_t remainingTagsCount;
      TMR_Status ret1;
      reader->isStopNTags = false;
    5a58:	f3 01       	movw	r30, r6
    5a5a:	e4 50       	subi	r30, 0x04	; 4
    5a5c:	fa 4f       	sbci	r31, 0xFA	; 250
    5a5e:	10 82       	st	Z, r1

      /* Check for the tag count (in case of module error)*/
      ret1 = TMR_SR_cmdGetTagsRemaining(reader, &remainingTagsCount);
    5a60:	be 01       	movw	r22, r28
    5a62:	6d 5e       	subi	r22, 0xED	; 237
    5a64:	7f 4f       	sbci	r23, 0xFF	; 255
    5a66:	c3 01       	movw	r24, r6
    5a68:	0e 94 c3 43 	call	0x8786	; 0x8786 <TMR_SR_cmdGetTagsRemaining>
    5a6c:	6b 01       	movw	r12, r22
    5a6e:	7c 01       	movw	r14, r24
      if (TMR_SUCCESS != ret1)
    5a70:	61 15       	cp	r22, r1
    5a72:	71 05       	cpc	r23, r1
    5a74:	81 05       	cpc	r24, r1
    5a76:	91 05       	cpc	r25, r1
    5a78:	59 f5       	brne	.+86     	; 0x5ad0 <TMR_SR_read_internal+0x55c>
      {
        return ret1;
      }
      sr->tagsRemaining += remainingTagsCount;
    5a7a:	4b 89       	ldd	r20, Y+19	; 0x13
    5a7c:	5c 89       	ldd	r21, Y+20	; 0x14
    5a7e:	f3 01       	movw	r30, r6
    5a80:	e4 54       	subi	r30, 0x44	; 68
    5a82:	fc 4f       	sbci	r31, 0xFC	; 252
    5a84:	20 81       	ld	r18, Z
    5a86:	31 81       	ldd	r19, Z+1	; 0x01
    5a88:	24 0f       	add	r18, r20
    5a8a:	35 1f       	adc	r19, r21
    5a8c:	31 83       	std	Z+1, r19	; 0x01
    5a8e:	20 83       	st	Z, r18
      if (NULL != tagCount)
    5a90:	c9 5c       	subi	r28, 0xC9	; 201
    5a92:	de 4f       	sbci	r29, 0xFE	; 254
    5a94:	a8 81       	ld	r26, Y
    5a96:	b9 81       	ldd	r27, Y+1	; 0x01
    5a98:	c7 53       	subi	r28, 0x37	; 55
    5a9a:	d1 40       	sbci	r29, 0x01	; 1
    5a9c:	10 97       	sbiw	r26, 0x00	; 0
    5a9e:	e1 f0       	breq	.+56     	; 0x5ad8 <TMR_SR_read_internal+0x564>
      {
        *tagCount += remainingTagsCount;
    5aa0:	8d 91       	ld	r24, X+
    5aa2:	9d 91       	ld	r25, X+
    5aa4:	0d 90       	ld	r0, X+
    5aa6:	bc 91       	ld	r27, X
    5aa8:	a0 2d       	mov	r26, r0
    5aaa:	84 0f       	add	r24, r20
    5aac:	95 1f       	adc	r25, r21
    5aae:	a1 1d       	adc	r26, r1
    5ab0:	b1 1d       	adc	r27, r1
    5ab2:	c9 5c       	subi	r28, 0xC9	; 201
    5ab4:	de 4f       	sbci	r29, 0xFE	; 254
    5ab6:	e8 81       	ld	r30, Y
    5ab8:	f9 81       	ldd	r31, Y+1	; 0x01
    5aba:	c7 53       	subi	r28, 0x37	; 55
    5abc:	d1 40       	sbci	r29, 0x01	; 1
    5abe:	80 83       	st	Z, r24
    5ac0:	91 83       	std	Z+1, r25	; 0x01
    5ac2:	a2 83       	std	Z+2, r26	; 0x02
    5ac4:	b3 83       	std	Z+3, r27	; 0x03
      }
      return ret;
    5ac6:	68 2d       	mov	r22, r8
    5ac8:	79 2d       	mov	r23, r9
    5aca:	8a 2d       	mov	r24, r10
    5acc:	9b 2d       	mov	r25, r11
    5ace:	64 c0       	rjmp	.+200    	; 0x5b98 <TMR_SR_read_internal+0x624>

      /* Check for the tag count (in case of module error)*/
      ret1 = TMR_SR_cmdGetTagsRemaining(reader, &remainingTagsCount);
      if (TMR_SUCCESS != ret1)
      {
        return ret1;
    5ad0:	7d 2d       	mov	r23, r13
    5ad2:	8e 2d       	mov	r24, r14
    5ad4:	9f 2d       	mov	r25, r15
    5ad6:	60 c0       	rjmp	.+192    	; 0x5b98 <TMR_SR_read_internal+0x624>
      sr->tagsRemaining += remainingTagsCount;
      if (NULL != tagCount)
      {
        *tagCount += remainingTagsCount;
      }
      return ret;
    5ad8:	68 2d       	mov	r22, r8
    5ada:	79 2d       	mov	r23, r9
    5adc:	8a 2d       	mov	r24, r10
    5ade:	9b 2d       	mov	r25, r11
    5ae0:	5b c0       	rjmp	.+182    	; 0x5b98 <TMR_SR_read_internal+0x624>
    }

    sr->tagsRemaining += count;
    5ae2:	8f 81       	ldd	r24, Y+7	; 0x07
    5ae4:	98 85       	ldd	r25, Y+8	; 0x08
    5ae6:	a9 85       	ldd	r26, Y+9	; 0x09
    5ae8:	ba 85       	ldd	r27, Y+10	; 0x0a
    5aea:	f3 01       	movw	r30, r6
    5aec:	e4 54       	subi	r30, 0x44	; 68
    5aee:	fc 4f       	sbci	r31, 0xFC	; 252
    5af0:	20 81       	ld	r18, Z
    5af2:	31 81       	ldd	r19, Z+1	; 0x01
    5af4:	28 0f       	add	r18, r24
    5af6:	39 1f       	adc	r19, r25
    5af8:	31 83       	std	Z+1, r19	; 0x01
    5afa:	20 83       	st	Z, r18
    if (NULL != tagCount)
    5afc:	c9 5c       	subi	r28, 0xC9	; 201
    5afe:	de 4f       	sbci	r29, 0xFE	; 254
    5b00:	28 81       	ld	r18, Y
    5b02:	39 81       	ldd	r19, Y+1	; 0x01
    5b04:	c7 53       	subi	r28, 0x37	; 55
    5b06:	d1 40       	sbci	r29, 0x01	; 1
    5b08:	21 15       	cp	r18, r1
    5b0a:	31 05       	cpc	r19, r1
    5b0c:	69 f0       	breq	.+26     	; 0x5b28 <TMR_SR_read_internal+0x5b4>
    {
      *tagCount += count;
    5b0e:	f9 01       	movw	r30, r18
    5b10:	40 81       	ld	r20, Z
    5b12:	51 81       	ldd	r21, Z+1	; 0x01
    5b14:	62 81       	ldd	r22, Z+2	; 0x02
    5b16:	73 81       	ldd	r23, Z+3	; 0x03
    5b18:	84 0f       	add	r24, r20
    5b1a:	95 1f       	adc	r25, r21
    5b1c:	a6 1f       	adc	r26, r22
    5b1e:	b7 1f       	adc	r27, r23
    5b20:	80 83       	st	Z, r24
    5b22:	91 83       	std	Z+1, r25	; 0x01
    5b24:	a2 83       	std	Z+2, r26	; 0x02
    5b26:	b3 83       	std	Z+3, r27	; 0x03
    }

    if (reader->continuousReading)
    5b28:	f3 01       	movw	r30, r6
    5b2a:	ea 58       	subi	r30, 0x8A	; 138
    5b2c:	ff 4f       	sbci	r31, 0xFF	; 255
    5b2e:	90 81       	ld	r25, Z
    5b30:	99 23       	and	r25, r25
    5b32:	39 f0       	breq	.+14     	; 0x5b42 <TMR_SR_read_internal+0x5ce>
    {
      sr->tagsRemaining = 1;
    5b34:	ea 5b       	subi	r30, 0xBA	; 186
    5b36:	fc 4f       	sbci	r31, 0xFC	; 252
    5b38:	21 e0       	ldi	r18, 0x01	; 1
    5b3a:	30 e0       	ldi	r19, 0x00	; 0
    5b3c:	31 83       	std	Z+1, r19	; 0x01
    5b3e:	20 83       	st	Z, r18
    5b40:	0a c0       	rjmp	.+20     	; 0x5b56 <TMR_SR_read_internal+0x5e2>
#if TMR_ENABLE_PSEUDO_ASYNC_READ
      break;
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */
    }
    else if (reader->isStopNTags)
    5b42:	f3 01       	movw	r30, r6
    5b44:	e4 50       	subi	r30, 0x04	; 4
    5b46:	fa 4f       	sbci	r31, 0xFA	; 250
    5b48:	80 81       	ld	r24, Z
    5b4a:	88 23       	and	r24, r24
    5b4c:	21 f0       	breq	.+8      	; 0x5b56 <TMR_SR_read_internal+0x5e2>
    {
      /** 
       * No need to loop back for stop N tags
       **/
#ifdef TMR_ENABLE_UHF
      isMultiSelectEnabled = false;
    5b4e:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <isMultiSelectEnabled>
      isEmbeddedTagopEnabled = false;
    5b52:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <isEmbeddedTagopEnabled>
#endif
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */

#ifdef TMR_ENABLE_UHF
#if (!TMR_ENABLE_PSEUDO_ASYNC_READ)
    if (!reader->continuousReading)
    5b56:	91 11       	cpse	r25, r1
    5b58:	1b c0       	rjmp	.+54     	; 0x5b90 <TMR_SR_read_internal+0x61c>
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */
    {
      isMultiSelectEnabled = false;
    5b5a:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <isMultiSelectEnabled>
      isEmbeddedTagopEnabled = false;
    5b5e:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <isEmbeddedTagopEnabled>
    }
  }
#endif /* TMR_ENABLE_BACKGROUND_READS */
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */

  return ret;
    5b62:	68 2d       	mov	r22, r8
    5b64:	79 2d       	mov	r23, r9
    5b66:	8a 2d       	mov	r24, r10
    5b68:	9b 2d       	mov	r25, r11
    5b6a:	16 c0       	rjmp	.+44     	; 0x5b98 <TMR_SR_read_internal+0x624>
  {
    /* At this point we're guaranteed to have a simple read plan */
    ret = prepForSearch(reader, rp);
    if (TMR_SUCCESS != ret)
    {
      return ret;
    5b6c:	7d 2d       	mov	r23, r13
    5b6e:	8e 2d       	mov	r24, r14
    5b70:	9f 2d       	mov	r25, r15
    5b72:	12 c0       	rjmp	.+36     	; 0x5b98 <TMR_SR_read_internal+0x624>
  {
    /* Set protocol to that specified by the read plan. */
    ret = setProtocol(reader, rp->u.simple.protocol);
    if (TMR_SUCCESS != ret)
    {
      return ret;
    5b74:	7d 2d       	mov	r23, r13
    5b76:	8e 2d       	mov	r24, r14
    5b78:	9f 2d       	mov	r25, r15
    5b7a:	0e c0       	rjmp	.+28     	; 0x5b98 <TMR_SR_read_internal+0x624>
      count = 0;
      ret = TMR_SUCCESS;
    }
    else if ((TMR_ERROR_TM_ASSERT_FAILED == ret) || (TMR_ERROR_TIMEOUT == ret))
	{
	  return ret;
    5b7c:	68 2d       	mov	r22, r8
    5b7e:	79 2d       	mov	r23, r9
    5b80:	8a 2d       	mov	r24, r10
    5b82:	9b 2d       	mov	r25, r11
    5b84:	09 c0       	rjmp	.+18     	; 0x5b98 <TMR_SR_read_internal+0x624>
    5b86:	68 2d       	mov	r22, r8
    5b88:	79 2d       	mov	r23, r9
    5b8a:	8a 2d       	mov	r24, r10
    5b8c:	9b 2d       	mov	r25, r11
    5b8e:	04 c0       	rjmp	.+8      	; 0x5b98 <TMR_SR_read_internal+0x624>
    }
  }
#endif /* TMR_ENABLE_BACKGROUND_READS */
#endif /* TMR_ENABLE_PSEUDO_ASYNC_READ */

  return ret;
    5b90:	68 2d       	mov	r22, r8
    5b92:	79 2d       	mov	r23, r9
    5b94:	8a 2d       	mov	r24, r10
    5b96:	9b 2d       	mov	r25, r11
}
    5b98:	c8 5c       	subi	r28, 0xC8	; 200
    5b9a:	de 4f       	sbci	r29, 0xFE	; 254
    5b9c:	0f b6       	in	r0, 0x3f	; 63
    5b9e:	f8 94       	cli
    5ba0:	de bf       	out	0x3e, r29	; 62
    5ba2:	0f be       	out	0x3f, r0	; 63
    5ba4:	cd bf       	out	0x3d, r28	; 61
    5ba6:	df 91       	pop	r29
    5ba8:	cf 91       	pop	r28
    5baa:	1f 91       	pop	r17
    5bac:	0f 91       	pop	r16
    5bae:	ff 90       	pop	r15
    5bb0:	ef 90       	pop	r14
    5bb2:	df 90       	pop	r13
    5bb4:	cf 90       	pop	r12
    5bb6:	bf 90       	pop	r11
    5bb8:	af 90       	pop	r10
    5bba:	9f 90       	pop	r9
    5bbc:	8f 90       	pop	r8
    5bbe:	7f 90       	pop	r7
    5bc0:	6f 90       	pop	r6
    5bc2:	5f 90       	pop	r5
    5bc4:	4f 90       	pop	r4
    5bc6:	3f 90       	pop	r3
    5bc8:	2f 90       	pop	r2
    5bca:	08 95       	ret

00005bcc <TMR_SR_read>:

TMR_Status
TMR_SR_read(struct TMR_Reader *reader, uint32_t timeoutMs, int32_t *tagCount)
{
    5bcc:	cf 92       	push	r12
    5bce:	df 92       	push	r13
    5bd0:	ef 92       	push	r14
    5bd2:	ff 92       	push	r15
    5bd4:	0f 93       	push	r16
    5bd6:	1f 93       	push	r17
    5bd8:	cf 93       	push	r28
    5bda:	df 93       	push	r29
  TMR_Status ret;
  TMR_ReadPlan *rp;

  if(timeoutMs > TMR_MAX_VALUE)
    5bdc:	41 15       	cp	r20, r1
    5bde:	51 05       	cpc	r21, r1
    5be0:	e1 e0       	ldi	r30, 0x01	; 1
    5be2:	6e 07       	cpc	r22, r30
    5be4:	71 05       	cpc	r23, r1
    5be6:	78 f5       	brcc	.+94     	; 0x5c46 <TMR_SR_read+0x7a>
  {
    return TMR_ERROR_INVALID_VALUE;
  }
  reader->u.serialReader.tagsRemaining = 0;
    5be8:	fc 01       	movw	r30, r24
    5bea:	e4 54       	subi	r30, 0x44	; 68
    5bec:	fc 4f       	sbci	r31, 0xFC	; 252
    5bee:	11 82       	std	Z+1, r1	; 0x01
    5bf0:	10 82       	st	Z, r1

  /* Reset tagop result count. */
  reader->u.serialReader.tagopSuccessCount = 0;
    5bf2:	e9 5f       	subi	r30, 0xF9	; 249
    5bf4:	fd 4f       	sbci	r31, 0xFD	; 253
    5bf6:	11 82       	std	Z+1, r1	; 0x01
    5bf8:	10 82       	st	Z, r1
  reader->u.serialReader.tagopFailureCount = 0;
    5bfa:	32 96       	adiw	r30, 0x02	; 2
    5bfc:	11 82       	std	Z+1, r1	; 0x01
    5bfe:	10 82       	st	Z, r1

  rp = reader->readParams.readPlan;
    5c00:	fc 01       	movw	r30, r24
    5c02:	02 a9       	ldd	r16, Z+50	; 0x32
    5c04:	13 a9       	ldd	r17, Z+51	; 0x33

  if (tagCount)
    5c06:	21 15       	cp	r18, r1
    5c08:	31 05       	cpc	r19, r1
    5c0a:	29 f0       	breq	.+10     	; 0x5c16 <TMR_SR_read+0x4a>
  {
    *tagCount = 0;
    5c0c:	f9 01       	movw	r30, r18
    5c0e:	10 82       	st	Z, r1
    5c10:	11 82       	std	Z+1, r1	; 0x01
    5c12:	12 82       	std	Z+2, r1	; 0x02
    5c14:	13 82       	std	Z+3, r1	; 0x03
    5c16:	ec 01       	movw	r28, r24
  }
  
  ret = TMR_SR_read_internal(reader, timeoutMs, tagCount, rp);
    5c18:	ad dc       	rcall	.-1702   	; 0x5574 <TMR_SR_read_internal>
    5c1a:	6b 01       	movw	r12, r22
    5c1c:	7c 01       	movw	r14, r24
  if (ret != TMR_SUCCESS)
    5c1e:	61 15       	cp	r22, r1
    5c20:	71 05       	cpc	r23, r1
    5c22:	81 05       	cpc	r24, r1
    5c24:	91 05       	cpc	r25, r1
    5c26:	a1 f4       	brne	.+40     	; 0x5c50 <TMR_SR_read+0x84>
  {
	  return ret;
  }
  if (reader->continuousReading)
    5c28:	fe 01       	movw	r30, r28
    5c2a:	ea 58       	subi	r30, 0x8A	; 138
    5c2c:	ff 4f       	sbci	r31, 0xFF	; 255
    5c2e:	80 81       	ld	r24, Z
    5c30:	88 23       	and	r24, r24
    5c32:	91 f0       	breq	.+36     	; 0x5c58 <TMR_SR_read+0x8c>
	reader->hasContinuousReadStarted = true;
    5c34:	c5 58       	subi	r28, 0x85	; 133
    5c36:	de 4f       	sbci	r29, 0xFE	; 254
    5c38:	81 e0       	ldi	r24, 0x01	; 1
    5c3a:	88 83       	st	Y, r24
  return ret;
    5c3c:	6c 2d       	mov	r22, r12
    5c3e:	7d 2d       	mov	r23, r13
    5c40:	8e 2d       	mov	r24, r14
    5c42:	9f 2d       	mov	r25, r15
    5c44:	0d c0       	rjmp	.+26     	; 0x5c60 <TMR_SR_read+0x94>
  TMR_Status ret;
  TMR_ReadPlan *rp;

  if(timeoutMs > TMR_MAX_VALUE)
  {
    return TMR_ERROR_INVALID_VALUE;
    5c46:	67 e1       	ldi	r22, 0x17	; 23
    5c48:	70 e0       	ldi	r23, 0x00	; 0
    5c4a:	80 e0       	ldi	r24, 0x00	; 0
    5c4c:	93 e0       	ldi	r25, 0x03	; 3
    5c4e:	08 c0       	rjmp	.+16     	; 0x5c60 <TMR_SR_read+0x94>
  }
  
  ret = TMR_SR_read_internal(reader, timeoutMs, tagCount, rp);
  if (ret != TMR_SUCCESS)
  {
	  return ret;
    5c50:	7d 2d       	mov	r23, r13
    5c52:	8e 2d       	mov	r24, r14
    5c54:	9f 2d       	mov	r25, r15
    5c56:	04 c0       	rjmp	.+8      	; 0x5c60 <TMR_SR_read+0x94>
  }
  if (reader->continuousReading)
	reader->hasContinuousReadStarted = true;
  return ret;
    5c58:	6c 2d       	mov	r22, r12
    5c5a:	7d 2d       	mov	r23, r13
    5c5c:	8e 2d       	mov	r24, r14
    5c5e:	9f 2d       	mov	r25, r15
}
    5c60:	df 91       	pop	r29
    5c62:	cf 91       	pop	r28
    5c64:	1f 91       	pop	r17
    5c66:	0f 91       	pop	r16
    5c68:	ff 90       	pop	r15
    5c6a:	ef 90       	pop	r14
    5c6c:	df 90       	pop	r13
    5c6e:	cf 90       	pop	r12
    5c70:	08 95       	ret

00005c72 <tm_crc>:
      i += dataLength;
    }
  }

  return TMR_SUCCESS;
}
    5c72:	dc 01       	movw	r26, r24
    5c74:	40 e0       	ldi	r20, 0x00	; 0
    5c76:	50 e0       	ldi	r21, 0x00	; 0
    5c78:	8f ef       	ldi	r24, 0xFF	; 255
    5c7a:	9f ef       	ldi	r25, 0xFF	; 255
    5c7c:	34 c0       	rjmp	.+104    	; 0x5ce6 <tm_crc+0x74>
    5c7e:	9c 01       	movw	r18, r24
    5c80:	22 95       	swap	r18
    5c82:	32 95       	swap	r19
    5c84:	30 7f       	andi	r19, 0xF0	; 240
    5c86:	32 27       	eor	r19, r18
    5c88:	20 7f       	andi	r18, 0xF0	; 240
    5c8a:	32 27       	eor	r19, r18
    5c8c:	fd 01       	movw	r30, r26
    5c8e:	e4 0f       	add	r30, r20
    5c90:	f5 1f       	adc	r31, r21
    5c92:	70 81       	ld	r23, Z
    5c94:	e7 2f       	mov	r30, r23
    5c96:	e2 95       	swap	r30
    5c98:	ef 70       	andi	r30, 0x0F	; 15
    5c9a:	2e 2b       	or	r18, r30
    5c9c:	fc 01       	movw	r30, r24
    5c9e:	ef 2f       	mov	r30, r31
    5ca0:	ff 27       	eor	r31, r31
    5ca2:	e2 95       	swap	r30
    5ca4:	ef 70       	andi	r30, 0x0F	; 15
    5ca6:	ee 0f       	add	r30, r30
    5ca8:	ff 1f       	adc	r31, r31
    5caa:	e0 50       	subi	r30, 0x00	; 0
    5cac:	ff 4f       	sbci	r31, 0xFF	; 255
    5cae:	80 81       	ld	r24, Z
    5cb0:	91 81       	ldd	r25, Z+1	; 0x01
    5cb2:	28 27       	eor	r18, r24
    5cb4:	39 27       	eor	r19, r25
    5cb6:	c9 01       	movw	r24, r18
    5cb8:	82 95       	swap	r24
    5cba:	92 95       	swap	r25
    5cbc:	90 7f       	andi	r25, 0xF0	; 240
    5cbe:	98 27       	eor	r25, r24
    5cc0:	80 7f       	andi	r24, 0xF0	; 240
    5cc2:	98 27       	eor	r25, r24
    5cc4:	7f 70       	andi	r23, 0x0F	; 15
    5cc6:	87 2b       	or	r24, r23
    5cc8:	f9 01       	movw	r30, r18
    5cca:	ef 2f       	mov	r30, r31
    5ccc:	ff 27       	eor	r31, r31
    5cce:	e2 95       	swap	r30
    5cd0:	ef 70       	andi	r30, 0x0F	; 15
    5cd2:	ee 0f       	add	r30, r30
    5cd4:	ff 1f       	adc	r31, r31
    5cd6:	e0 50       	subi	r30, 0x00	; 0
    5cd8:	ff 4f       	sbci	r31, 0xFF	; 255
    5cda:	20 81       	ld	r18, Z
    5cdc:	31 81       	ldd	r19, Z+1	; 0x01
    5cde:	82 27       	eor	r24, r18
    5ce0:	93 27       	eor	r25, r19
    5ce2:	4f 5f       	subi	r20, 0xFF	; 255
    5ce4:	5f 4f       	sbci	r21, 0xFF	; 255
    5ce6:	26 2f       	mov	r18, r22
    5ce8:	30 e0       	ldi	r19, 0x00	; 0
    5cea:	42 17       	cp	r20, r18
    5cec:	53 07       	cpc	r21, r19
    5cee:	3c f2       	brlt	.-114    	; 0x5c7e <tm_crc+0xc>
    5cf0:	08 95       	ret

00005cf2 <filterbytes>:
    5cf2:	2f 92       	push	r2
    5cf4:	3f 92       	push	r3
    5cf6:	4f 92       	push	r4
    5cf8:	5f 92       	push	r5
    5cfa:	6f 92       	push	r6
    5cfc:	7f 92       	push	r7
    5cfe:	8f 92       	push	r8
    5d00:	9f 92       	push	r9
    5d02:	af 92       	push	r10
    5d04:	bf 92       	push	r11
    5d06:	cf 92       	push	r12
    5d08:	df 92       	push	r13
    5d0a:	ef 92       	push	r14
    5d0c:	ff 92       	push	r15
    5d0e:	0f 93       	push	r16
    5d10:	1f 93       	push	r17
    5d12:	cf 93       	push	r28
    5d14:	df 93       	push	r29
    5d16:	00 d0       	rcall	.+0      	; 0x5d18 <filterbytes+0x26>
    5d18:	00 d0       	rcall	.+0      	; 0x5d1a <filterbytes+0x28>
    5d1a:	00 d0       	rcall	.+0      	; 0x5d1c <filterbytes+0x2a>
    5d1c:	cd b7       	in	r28, 0x3d	; 61
    5d1e:	de b7       	in	r29, 0x3e	; 62
    5d20:	90 91 dc 0b 	lds	r25, 0x0BDC	; 0x800bdc <isSecureAccessEnabled>
    5d24:	99 23       	and	r25, r25
    5d26:	19 f0       	breq	.+6      	; 0x5d2e <filterbytes+0x3c>
    5d28:	90 e4       	ldi	r25, 0x40	; 64
    5d2a:	da 01       	movw	r26, r20
    5d2c:	9c 93       	st	X, r25
    5d2e:	61 15       	cp	r22, r1
    5d30:	71 05       	cpc	r23, r1
    5d32:	31 f4       	brne	.+12     	; 0x5d40 <filterbytes+0x4e>
    5d34:	c1 14       	cp	r12, r1
    5d36:	d1 04       	cpc	r13, r1
    5d38:	e1 04       	cpc	r14, r1
    5d3a:	f1 04       	cpc	r15, r1
    5d3c:	09 f4       	brne	.+2      	; 0x5d40 <filterbytes+0x4e>
    5d3e:	69 c3       	rjmp	.+1746   	; 0x6412 <filterbytes+0x720>
    5d40:	c9 82       	std	Y+1, r12	; 0x01
    5d42:	da 82       	std	Y+2, r13	; 0x02
    5d44:	eb 82       	std	Y+3, r14	; 0x03
    5d46:	fc 82       	std	Y+4, r15	; 0x04
    5d48:	38 01       	movw	r6, r16
    5d4a:	49 01       	movw	r8, r18
    5d4c:	da 01       	movw	r26, r20
    5d4e:	7e 83       	std	Y+6, r23	; 0x06
    5d50:	6d 83       	std	Y+5, r22	; 0x05
    5d52:	b8 2e       	mov	r11, r24
    5d54:	e5 e0       	ldi	r30, 0x05	; 5
    5d56:	8e 13       	cpse	r24, r30
    5d58:	77 c2       	rjmp	.+1262   	; 0x6248 <filterbytes+0x556>
    5d5a:	aa 20       	and	r10, r10
    5d5c:	d9 f1       	breq	.+118    	; 0x5dd4 <filterbytes+0xe2>
    5d5e:	61 15       	cp	r22, r1
    5d60:	71 05       	cpc	r23, r1
    5d62:	39 f0       	breq	.+14     	; 0x5d72 <filterbytes+0x80>
    5d64:	fb 01       	movw	r30, r22
    5d66:	80 81       	ld	r24, Z
    5d68:	81 30       	cpi	r24, 0x01	; 1
    5d6a:	19 f4       	brne	.+6      	; 0x5d72 <filterbytes+0x80>
    5d6c:	82 81       	ldd	r24, Z+2	; 0x02
    5d6e:	86 30       	cpi	r24, 0x06	; 6
    5d70:	89 f1       	breq	.+98     	; 0x5dd4 <filterbytes+0xe2>
    5d72:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    5d76:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    5d7a:	04 96       	adiw	r24, 0x04	; 4
    5d7c:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    5d80:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    5d84:	f4 01       	movw	r30, r8
    5d86:	80 81       	ld	r24, Z
    5d88:	91 e0       	ldi	r25, 0x01	; 1
    5d8a:	98 0f       	add	r25, r24
    5d8c:	90 83       	st	Z, r25
    5d8e:	f3 01       	movw	r30, r6
    5d90:	e8 0f       	add	r30, r24
    5d92:	f1 1d       	adc	r31, r1
    5d94:	2c 81       	ldd	r18, Y+4	; 0x04
    5d96:	20 83       	st	Z, r18
    5d98:	f4 01       	movw	r30, r8
    5d9a:	80 81       	ld	r24, Z
    5d9c:	91 e0       	ldi	r25, 0x01	; 1
    5d9e:	98 0f       	add	r25, r24
    5da0:	90 83       	st	Z, r25
    5da2:	f3 01       	movw	r30, r6
    5da4:	e8 0f       	add	r30, r24
    5da6:	f1 1d       	adc	r31, r1
    5da8:	2b 81       	ldd	r18, Y+3	; 0x03
    5daa:	20 83       	st	Z, r18
    5dac:	f4 01       	movw	r30, r8
    5dae:	80 81       	ld	r24, Z
    5db0:	91 e0       	ldi	r25, 0x01	; 1
    5db2:	98 0f       	add	r25, r24
    5db4:	90 83       	st	Z, r25
    5db6:	f3 01       	movw	r30, r6
    5db8:	e8 0f       	add	r30, r24
    5dba:	f1 1d       	adc	r31, r1
    5dbc:	2a 81       	ldd	r18, Y+2	; 0x02
    5dbe:	20 83       	st	Z, r18
    5dc0:	f4 01       	movw	r30, r8
    5dc2:	80 81       	ld	r24, Z
    5dc4:	91 e0       	ldi	r25, 0x01	; 1
    5dc6:	98 0f       	add	r25, r24
    5dc8:	90 83       	st	Z, r25
    5dca:	f3 01       	movw	r30, r6
    5dcc:	e8 0f       	add	r30, r24
    5dce:	f1 1d       	adc	r31, r1
    5dd0:	29 81       	ldd	r18, Y+1	; 0x01
    5dd2:	20 83       	st	Z, r18
    5dd4:	8d 81       	ldd	r24, Y+5	; 0x05
    5dd6:	9e 81       	ldd	r25, Y+6	; 0x06
    5dd8:	89 2b       	or	r24, r25
    5dda:	09 f0       	breq	.+2      	; 0x5dde <filterbytes+0xec>
    5ddc:	42 c0       	rjmp	.+132    	; 0x5e62 <filterbytes+0x170>
    5dde:	8c 91       	ld	r24, X
    5de0:	85 60       	ori	r24, 0x05	; 5
    5de2:	8c 93       	st	X, r24
    5de4:	80 91 de 0b 	lds	r24, 0x0BDE	; 0x800bde <isMultiSelectEnabled>
    5de8:	88 23       	and	r24, r24
    5dea:	09 f4       	brne	.+2      	; 0x5dee <filterbytes+0xfc>
    5dec:	17 c3       	rjmp	.+1582   	; 0x641c <filterbytes+0x72a>
    5dee:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    5df2:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    5df6:	01 96       	adiw	r24, 0x01	; 1
    5df8:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    5dfc:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    5e00:	d4 01       	movw	r26, r8
    5e02:	8c 91       	ld	r24, X
    5e04:	91 e0       	ldi	r25, 0x01	; 1
    5e06:	98 0f       	add	r25, r24
    5e08:	9c 93       	st	X, r25
    5e0a:	f3 01       	movw	r30, r6
    5e0c:	e8 0f       	add	r30, r24
    5e0e:	f1 1d       	adc	r31, r1
    5e10:	84 e0       	ldi	r24, 0x04	; 4
    5e12:	80 83       	st	Z, r24
    5e14:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    5e18:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    5e1c:	01 96       	adiw	r24, 0x01	; 1
    5e1e:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    5e22:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    5e26:	8c 91       	ld	r24, X
    5e28:	91 e0       	ldi	r25, 0x01	; 1
    5e2a:	98 0f       	add	r25, r24
    5e2c:	9c 93       	st	X, r25
    5e2e:	f3 01       	movw	r30, r6
    5e30:	e8 0f       	add	r30, r24
    5e32:	f1 1d       	adc	r31, r1
    5e34:	10 82       	st	Z, r1
    5e36:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    5e3a:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    5e3e:	01 96       	adiw	r24, 0x01	; 1
    5e40:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    5e44:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    5e48:	8c 91       	ld	r24, X
    5e4a:	91 e0       	ldi	r25, 0x01	; 1
    5e4c:	98 0f       	add	r25, r24
    5e4e:	9c 93       	st	X, r25
    5e50:	f3 01       	movw	r30, r6
    5e52:	e8 0f       	add	r30, r24
    5e54:	f1 1d       	adc	r31, r1
    5e56:	10 82       	st	Z, r1
    5e58:	60 e0       	ldi	r22, 0x00	; 0
    5e5a:	70 e0       	ldi	r23, 0x00	; 0
    5e5c:	80 e0       	ldi	r24, 0x00	; 0
    5e5e:	90 e0       	ldi	r25, 0x00	; 0
    5e60:	03 c3       	rjmp	.+1542   	; 0x6468 <filterbytes+0x776>
    5e62:	ed 81       	ldd	r30, Y+5	; 0x05
    5e64:	fe 81       	ldd	r31, Y+6	; 0x06
    5e66:	80 81       	ld	r24, Z
    5e68:	81 30       	cpi	r24, 0x01	; 1
    5e6a:	09 f0       	breq	.+2      	; 0x5e6e <filterbytes+0x17c>
    5e6c:	1b c1       	rjmp	.+566    	; 0x60a4 <filterbytes+0x3b2>
    5e6e:	82 81       	ldd	r24, Z+2	; 0x02
    5e70:	81 30       	cpi	r24, 0x01	; 1
    5e72:	21 f4       	brne	.+8      	; 0x5e7c <filterbytes+0x18a>
    5e74:	8c 91       	ld	r24, X
    5e76:	84 60       	ori	r24, 0x04	; 4
    5e78:	8c 93       	st	X, r24
    5e7a:	03 c0       	rjmp	.+6      	; 0x5e82 <filterbytes+0x190>
    5e7c:	9c 91       	ld	r25, X
    5e7e:	89 2b       	or	r24, r25
    5e80:	8c 93       	st	X, r24
    5e82:	ed 81       	ldd	r30, Y+5	; 0x05
    5e84:	fe 81       	ldd	r31, Y+6	; 0x06
    5e86:	82 81       	ldd	r24, Z+2	; 0x02
    5e88:	86 30       	cpi	r24, 0x06	; 6
    5e8a:	e9 f4       	brne	.+58     	; 0x5ec6 <filterbytes+0x1d4>
    5e8c:	27 81       	ldd	r18, Z+7	; 0x07
    5e8e:	30 85       	ldd	r19, Z+8	; 0x08
    5e90:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    5e94:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    5e98:	02 96       	adiw	r24, 0x02	; 2
    5e9a:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    5e9e:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    5ea2:	d4 01       	movw	r26, r8
    5ea4:	8c 91       	ld	r24, X
    5ea6:	91 e0       	ldi	r25, 0x01	; 1
    5ea8:	98 0f       	add	r25, r24
    5eaa:	9c 93       	st	X, r25
    5eac:	f3 01       	movw	r30, r6
    5eae:	e8 0f       	add	r30, r24
    5eb0:	f1 1d       	adc	r31, r1
    5eb2:	30 83       	st	Z, r19
    5eb4:	8c 91       	ld	r24, X
    5eb6:	91 e0       	ldi	r25, 0x01	; 1
    5eb8:	98 0f       	add	r25, r24
    5eba:	9c 93       	st	X, r25
    5ebc:	f3 01       	movw	r30, r6
    5ebe:	e8 0f       	add	r30, r24
    5ec0:	f1 1d       	adc	r31, r1
    5ec2:	20 83       	st	Z, r18
    5ec4:	a8 c0       	rjmp	.+336    	; 0x6016 <filterbytes+0x324>
    5ec6:	ed 81       	ldd	r30, Y+5	; 0x05
    5ec8:	fe 81       	ldd	r31, Y+6	; 0x06
    5eca:	81 81       	ldd	r24, Z+1	; 0x01
    5ecc:	88 23       	and	r24, r24
    5ece:	19 f0       	breq	.+6      	; 0x5ed6 <filterbytes+0x1e4>
    5ed0:	8c 91       	ld	r24, X
    5ed2:	88 60       	ori	r24, 0x08	; 8
    5ed4:	8c 93       	st	X, r24
    5ed6:	ed 81       	ldd	r30, Y+5	; 0x05
    5ed8:	fe 81       	ldd	r31, Y+6	; 0x06
    5eda:	87 81       	ldd	r24, Z+7	; 0x07
    5edc:	90 85       	ldd	r25, Z+8	; 0x08
    5ede:	8f 3f       	cpi	r24, 0xFF	; 255
    5ee0:	91 05       	cpc	r25, r1
    5ee2:	21 f0       	breq	.+8      	; 0x5eec <filterbytes+0x1fa>
    5ee4:	18 f0       	brcs	.+6      	; 0x5eec <filterbytes+0x1fa>
    5ee6:	8c 91       	ld	r24, X
    5ee8:	80 62       	ori	r24, 0x20	; 32
    5eea:	8c 93       	st	X, r24
    5eec:	ad 81       	ldd	r26, Y+5	; 0x05
    5eee:	be 81       	ldd	r27, Y+6	; 0x06
    5ef0:	13 96       	adiw	r26, 0x03	; 3
    5ef2:	2c 91       	ld	r18, X
    5ef4:	13 97       	sbiw	r26, 0x03	; 3
    5ef6:	14 96       	adiw	r26, 0x04	; 4
    5ef8:	3c 91       	ld	r19, X
    5efa:	14 97       	sbiw	r26, 0x04	; 4
    5efc:	15 96       	adiw	r26, 0x05	; 5
    5efe:	4c 91       	ld	r20, X
    5f00:	15 97       	sbiw	r26, 0x05	; 5
    5f02:	16 96       	adiw	r26, 0x06	; 6
    5f04:	5c 91       	ld	r21, X
    5f06:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    5f0a:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    5f0e:	04 96       	adiw	r24, 0x04	; 4
    5f10:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    5f14:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    5f18:	f4 01       	movw	r30, r8
    5f1a:	80 81       	ld	r24, Z
    5f1c:	91 e0       	ldi	r25, 0x01	; 1
    5f1e:	98 0f       	add	r25, r24
    5f20:	90 83       	st	Z, r25
    5f22:	f3 01       	movw	r30, r6
    5f24:	e8 0f       	add	r30, r24
    5f26:	f1 1d       	adc	r31, r1
    5f28:	50 83       	st	Z, r21
    5f2a:	d4 01       	movw	r26, r8
    5f2c:	8c 91       	ld	r24, X
    5f2e:	91 e0       	ldi	r25, 0x01	; 1
    5f30:	98 0f       	add	r25, r24
    5f32:	9c 93       	st	X, r25
    5f34:	f3 01       	movw	r30, r6
    5f36:	e8 0f       	add	r30, r24
    5f38:	f1 1d       	adc	r31, r1
    5f3a:	40 83       	st	Z, r20
    5f3c:	8c 91       	ld	r24, X
    5f3e:	91 e0       	ldi	r25, 0x01	; 1
    5f40:	98 0f       	add	r25, r24
    5f42:	9c 93       	st	X, r25
    5f44:	f3 01       	movw	r30, r6
    5f46:	e8 0f       	add	r30, r24
    5f48:	f1 1d       	adc	r31, r1
    5f4a:	30 83       	st	Z, r19
    5f4c:	8c 91       	ld	r24, X
    5f4e:	91 e0       	ldi	r25, 0x01	; 1
    5f50:	98 0f       	add	r25, r24
    5f52:	9c 93       	st	X, r25
    5f54:	f3 01       	movw	r30, r6
    5f56:	e8 0f       	add	r30, r24
    5f58:	f1 1d       	adc	r31, r1
    5f5a:	20 83       	st	Z, r18
    5f5c:	ed 81       	ldd	r30, Y+5	; 0x05
    5f5e:	fe 81       	ldd	r31, Y+6	; 0x06
    5f60:	87 81       	ldd	r24, Z+7	; 0x07
    5f62:	90 85       	ldd	r25, Z+8	; 0x08
    5f64:	8f 3f       	cpi	r24, 0xFF	; 255
    5f66:	91 05       	cpc	r25, r1
    5f68:	b1 f0       	breq	.+44     	; 0x5f96 <filterbytes+0x2a4>
    5f6a:	a8 f0       	brcs	.+42     	; 0x5f96 <filterbytes+0x2a4>
    5f6c:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    5f70:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    5f74:	01 96       	adiw	r24, 0x01	; 1
    5f76:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    5f7a:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    5f7e:	8c 91       	ld	r24, X
    5f80:	91 e0       	ldi	r25, 0x01	; 1
    5f82:	98 0f       	add	r25, r24
    5f84:	9c 93       	st	X, r25
    5f86:	f3 01       	movw	r30, r6
    5f88:	e8 0f       	add	r30, r24
    5f8a:	f1 1d       	adc	r31, r1
    5f8c:	ad 81       	ldd	r26, Y+5	; 0x05
    5f8e:	be 81       	ldd	r27, Y+6	; 0x06
    5f90:	18 96       	adiw	r26, 0x08	; 8
    5f92:	8c 91       	ld	r24, X
    5f94:	80 83       	st	Z, r24
    5f96:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    5f9a:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    5f9e:	01 96       	adiw	r24, 0x01	; 1
    5fa0:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    5fa4:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    5fa8:	f4 01       	movw	r30, r8
    5faa:	80 81       	ld	r24, Z
    5fac:	91 e0       	ldi	r25, 0x01	; 1
    5fae:	98 0f       	add	r25, r24
    5fb0:	90 83       	st	Z, r25
    5fb2:	f3 01       	movw	r30, r6
    5fb4:	e8 0f       	add	r30, r24
    5fb6:	f1 1d       	adc	r31, r1
    5fb8:	ad 81       	ldd	r26, Y+5	; 0x05
    5fba:	be 81       	ldd	r27, Y+6	; 0x06
    5fbc:	17 96       	adiw	r26, 0x07	; 7
    5fbe:	8c 91       	ld	r24, X
    5fc0:	80 83       	st	Z, r24
    5fc2:	00 e0       	ldi	r16, 0x00	; 0
    5fc4:	10 e0       	ldi	r17, 0x00	; 0
    5fc6:	1c c0       	rjmp	.+56     	; 0x6000 <filterbytes+0x30e>
    5fc8:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    5fcc:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    5fd0:	01 96       	adiw	r24, 0x01	; 1
    5fd2:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    5fd6:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    5fda:	f4 01       	movw	r30, r8
    5fdc:	80 81       	ld	r24, Z
    5fde:	91 e0       	ldi	r25, 0x01	; 1
    5fe0:	98 0f       	add	r25, r24
    5fe2:	90 83       	st	Z, r25
    5fe4:	d3 01       	movw	r26, r6
    5fe6:	a8 0f       	add	r26, r24
    5fe8:	b1 1d       	adc	r27, r1
    5fea:	ed 81       	ldd	r30, Y+5	; 0x05
    5fec:	fe 81       	ldd	r31, Y+6	; 0x06
    5fee:	81 85       	ldd	r24, Z+9	; 0x09
    5ff0:	92 85       	ldd	r25, Z+10	; 0x0a
    5ff2:	fc 01       	movw	r30, r24
    5ff4:	e0 0f       	add	r30, r16
    5ff6:	f1 1f       	adc	r31, r17
    5ff8:	80 81       	ld	r24, Z
    5ffa:	8c 93       	st	X, r24
    5ffc:	0f 5f       	subi	r16, 0xFF	; 255
    5ffe:	1f 4f       	sbci	r17, 0xFF	; 255
    6000:	ad 81       	ldd	r26, Y+5	; 0x05
    6002:	be 81       	ldd	r27, Y+6	; 0x06
    6004:	17 96       	adiw	r26, 0x07	; 7
    6006:	8d 91       	ld	r24, X+
    6008:	9c 91       	ld	r25, X
    600a:	18 97       	sbiw	r26, 0x08	; 8
    600c:	0e 94 90 6a 	call	0xd520	; 0xd520 <tm_u8s_per_bits>
    6010:	08 17       	cp	r16, r24
    6012:	19 07       	cpc	r17, r25
    6014:	cc f2       	brlt	.-78     	; 0x5fc8 <filterbytes+0x2d6>
    6016:	80 91 de 0b 	lds	r24, 0x0BDE	; 0x800bde <isMultiSelectEnabled>
    601a:	88 23       	and	r24, r24
    601c:	09 f4       	brne	.+2      	; 0x6020 <filterbytes+0x32e>
    601e:	03 c2       	rjmp	.+1030   	; 0x6426 <filterbytes+0x734>
    6020:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    6024:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    6028:	01 96       	adiw	r24, 0x01	; 1
    602a:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    602e:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    6032:	f4 01       	movw	r30, r8
    6034:	80 81       	ld	r24, Z
    6036:	91 e0       	ldi	r25, 0x01	; 1
    6038:	98 0f       	add	r25, r24
    603a:	90 83       	st	Z, r25
    603c:	f3 01       	movw	r30, r6
    603e:	e8 0f       	add	r30, r24
    6040:	f1 1d       	adc	r31, r1
    6042:	ad 81       	ldd	r26, Y+5	; 0x05
    6044:	be 81       	ldd	r27, Y+6	; 0x06
    6046:	1b 96       	adiw	r26, 0x0b	; 11
    6048:	8c 91       	ld	r24, X
    604a:	1b 97       	sbiw	r26, 0x0b	; 11
    604c:	80 83       	st	Z, r24
    604e:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    6052:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    6056:	01 96       	adiw	r24, 0x01	; 1
    6058:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    605c:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    6060:	f4 01       	movw	r30, r8
    6062:	80 81       	ld	r24, Z
    6064:	91 e0       	ldi	r25, 0x01	; 1
    6066:	98 0f       	add	r25, r24
    6068:	90 83       	st	Z, r25
    606a:	f3 01       	movw	r30, r6
    606c:	e8 0f       	add	r30, r24
    606e:	f1 1d       	adc	r31, r1
    6070:	1c 96       	adiw	r26, 0x0c	; 12
    6072:	8c 91       	ld	r24, X
    6074:	80 83       	st	Z, r24
    6076:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    607a:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    607e:	01 96       	adiw	r24, 0x01	; 1
    6080:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    6084:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    6088:	d4 01       	movw	r26, r8
    608a:	8c 91       	ld	r24, X
    608c:	91 e0       	ldi	r25, 0x01	; 1
    608e:	98 0f       	add	r25, r24
    6090:	9c 93       	st	X, r25
    6092:	f3 01       	movw	r30, r6
    6094:	e8 0f       	add	r30, r24
    6096:	f1 1d       	adc	r31, r1
    6098:	10 82       	st	Z, r1
    609a:	60 e0       	ldi	r22, 0x00	; 0
    609c:	70 e0       	ldi	r23, 0x00	; 0
    609e:	80 e0       	ldi	r24, 0x00	; 0
    60a0:	90 e0       	ldi	r25, 0x00	; 0
    60a2:	e2 c1       	rjmp	.+964    	; 0x6468 <filterbytes+0x776>
    60a4:	81 11       	cpse	r24, r1
    60a6:	66 c0       	rjmp	.+204    	; 0x6174 <filterbytes+0x482>
    60a8:	ed 81       	ldd	r30, Y+5	; 0x05
    60aa:	fe 81       	ldd	r31, Y+6	; 0x06
    60ac:	e0 5c       	subi	r30, 0xC0	; 192
    60ae:	ff 4f       	sbci	r31, 0xFF	; 255
    60b0:	80 81       	ld	r24, Z
    60b2:	90 e0       	ldi	r25, 0x00	; 0
    60b4:	88 0f       	add	r24, r24
    60b6:	99 1f       	adc	r25, r25
    60b8:	88 0f       	add	r24, r24
    60ba:	99 1f       	adc	r25, r25
    60bc:	88 0f       	add	r24, r24
    60be:	99 1f       	adc	r25, r25
    60c0:	2c 91       	ld	r18, X
    60c2:	21 60       	ori	r18, 0x01	; 1
    60c4:	2c 93       	st	X, r18
    60c6:	8f 3f       	cpi	r24, 0xFF	; 255
    60c8:	91 05       	cpc	r25, r1
    60ca:	b1 f0       	breq	.+44     	; 0x60f8 <filterbytes+0x406>
    60cc:	ac f0       	brlt	.+42     	; 0x60f8 <filterbytes+0x406>
    60ce:	20 62       	ori	r18, 0x20	; 32
    60d0:	2c 93       	st	X, r18
    60d2:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    60d6:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    60da:	2f 5f       	subi	r18, 0xFF	; 255
    60dc:	3f 4f       	sbci	r19, 0xFF	; 255
    60de:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    60e2:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    60e6:	f4 01       	movw	r30, r8
    60e8:	20 81       	ld	r18, Z
    60ea:	31 e0       	ldi	r19, 0x01	; 1
    60ec:	32 0f       	add	r19, r18
    60ee:	30 83       	st	Z, r19
    60f0:	f3 01       	movw	r30, r6
    60f2:	e2 0f       	add	r30, r18
    60f4:	f1 1d       	adc	r31, r1
    60f6:	90 83       	st	Z, r25
    60f8:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    60fc:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    6100:	2f 5f       	subi	r18, 0xFF	; 255
    6102:	3f 4f       	sbci	r19, 0xFF	; 255
    6104:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    6108:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    610c:	d4 01       	movw	r26, r8
    610e:	9c 91       	ld	r25, X
    6110:	21 e0       	ldi	r18, 0x01	; 1
    6112:	29 0f       	add	r18, r25
    6114:	2c 93       	st	X, r18
    6116:	f3 01       	movw	r30, r6
    6118:	e9 0f       	add	r30, r25
    611a:	f1 1d       	adc	r31, r1
    611c:	80 83       	st	Z, r24
    611e:	20 e0       	ldi	r18, 0x00	; 0
    6120:	30 e0       	ldi	r19, 0x00	; 0
    6122:	1a c0       	rjmp	.+52     	; 0x6158 <filterbytes+0x466>
    6124:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    6128:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    612c:	01 96       	adiw	r24, 0x01	; 1
    612e:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    6132:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    6136:	f4 01       	movw	r30, r8
    6138:	80 81       	ld	r24, Z
    613a:	91 e0       	ldi	r25, 0x01	; 1
    613c:	98 0f       	add	r25, r24
    613e:	90 83       	st	Z, r25
    6140:	f3 01       	movw	r30, r6
    6142:	e8 0f       	add	r30, r24
    6144:	f1 1d       	adc	r31, r1
    6146:	ad 81       	ldd	r26, Y+5	; 0x05
    6148:	be 81       	ldd	r27, Y+6	; 0x06
    614a:	a2 0f       	add	r26, r18
    614c:	b3 1f       	adc	r27, r19
    614e:	11 96       	adiw	r26, 0x01	; 1
    6150:	8c 91       	ld	r24, X
    6152:	80 83       	st	Z, r24
    6154:	2f 5f       	subi	r18, 0xFF	; 255
    6156:	3f 4f       	sbci	r19, 0xFF	; 255
    6158:	ed 81       	ldd	r30, Y+5	; 0x05
    615a:	fe 81       	ldd	r31, Y+6	; 0x06
    615c:	e0 5c       	subi	r30, 0xC0	; 192
    615e:	ff 4f       	sbci	r31, 0xFF	; 255
    6160:	80 81       	ld	r24, Z
    6162:	90 e0       	ldi	r25, 0x00	; 0
    6164:	28 17       	cp	r18, r24
    6166:	39 07       	cpc	r19, r25
    6168:	ec f2       	brlt	.-70     	; 0x6124 <filterbytes+0x432>
    616a:	60 e0       	ldi	r22, 0x00	; 0
    616c:	70 e0       	ldi	r23, 0x00	; 0
    616e:	80 e0       	ldi	r24, 0x00	; 0
    6170:	90 e0       	ldi	r25, 0x00	; 0
    6172:	7a c1       	rjmp	.+756    	; 0x6468 <filterbytes+0x776>
    6174:	83 30       	cpi	r24, 0x03	; 3
    6176:	09 f0       	breq	.+2      	; 0x617a <filterbytes+0x488>
    6178:	5b c1       	rjmp	.+694    	; 0x6430 <filterbytes+0x73e>
    617a:	ed 81       	ldd	r30, Y+5	; 0x05
    617c:	fe 81       	ldd	r31, Y+6	; 0x06
    617e:	45 80       	ldd	r4, Z+5	; 0x05
    6180:	56 80       	ldd	r5, Z+6	; 0x06
    6182:	80 91 de 0b 	lds	r24, 0x0BDE	; 0x800bde <isMultiSelectEnabled>
    6186:	81 11       	cpse	r24, r1
    6188:	18 c0       	rjmp	.+48     	; 0x61ba <filterbytes+0x4c8>
    618a:	63 e0       	ldi	r22, 0x03	; 3
    618c:	70 e0       	ldi	r23, 0x00	; 0
    618e:	93 e0       	ldi	r25, 0x03	; 3
    6190:	6b c1       	rjmp	.+726    	; 0x6468 <filterbytes+0x776>
    6192:	ed 81       	ldd	r30, Y+5	; 0x05
    6194:	fe 81       	ldd	r31, Y+6	; 0x06
    6196:	41 81       	ldd	r20, Z+1	; 0x01
    6198:	52 81       	ldd	r21, Z+2	; 0x02
    619a:	c9 01       	movw	r24, r18
    619c:	88 0f       	add	r24, r24
    619e:	99 1f       	adc	r25, r25
    61a0:	fa 01       	movw	r30, r20
    61a2:	e8 0f       	add	r30, r24
    61a4:	f9 1f       	adc	r31, r25
    61a6:	01 90       	ld	r0, Z+
    61a8:	f0 81       	ld	r31, Z
    61aa:	e0 2d       	mov	r30, r0
    61ac:	80 81       	ld	r24, Z
    61ae:	88 23       	and	r24, r24
    61b0:	09 f4       	brne	.+2      	; 0x61b4 <filterbytes+0x4c2>
    61b2:	43 c1       	rjmp	.+646    	; 0x643a <filterbytes+0x748>
    61b4:	2f 5f       	subi	r18, 0xFF	; 255
    61b6:	3f 4f       	sbci	r19, 0xFF	; 255
    61b8:	02 c0       	rjmp	.+4      	; 0x61be <filterbytes+0x4cc>
    61ba:	20 e0       	ldi	r18, 0x00	; 0
    61bc:	30 e0       	ldi	r19, 0x00	; 0
    61be:	24 15       	cp	r18, r4
    61c0:	35 05       	cpc	r19, r5
    61c2:	38 f3       	brcs	.-50     	; 0x6192 <filterbytes+0x4a0>
    61c4:	f4 e0       	ldi	r31, 0x04	; 4
    61c6:	4f 16       	cp	r4, r31
    61c8:	51 04       	cpc	r5, r1
    61ca:	08 f0       	brcs	.+2      	; 0x61ce <filterbytes+0x4dc>
    61cc:	3b c1       	rjmp	.+630    	; 0x6444 <filterbytes+0x752>
    61ce:	ed 81       	ldd	r30, Y+5	; 0x05
    61d0:	fe 81       	ldd	r31, Y+6	; 0x06
    61d2:	81 81       	ldd	r24, Z+1	; 0x01
    61d4:	92 81       	ldd	r25, Z+2	; 0x02
    61d6:	fc 01       	movw	r30, r24
    61d8:	60 81       	ld	r22, Z
    61da:	71 81       	ldd	r23, Z+1	; 0x01
    61dc:	a1 2c       	mov	r10, r1
    61de:	c9 80       	ldd	r12, Y+1	; 0x01
    61e0:	da 80       	ldd	r13, Y+2	; 0x02
    61e2:	eb 80       	ldd	r14, Y+3	; 0x03
    61e4:	fc 80       	ldd	r15, Y+4	; 0x04
    61e6:	83 01       	movw	r16, r6
    61e8:	94 01       	movw	r18, r8
    61ea:	ad 01       	movw	r20, r26
    61ec:	8b 2d       	mov	r24, r11
    61ee:	81 dd       	rcall	.-1278   	; 0x5cf2 <filterbytes>
    61f0:	81 e0       	ldi	r24, 0x01	; 1
    61f2:	90 e0       	ldi	r25, 0x00	; 0
    61f4:	21 c0       	rjmp	.+66     	; 0x6238 <filterbytes+0x546>
    61f6:	d4 01       	movw	r26, r8
    61f8:	4c 91       	ld	r20, X
    61fa:	50 e0       	ldi	r21, 0x00	; 0
    61fc:	41 50       	subi	r20, 0x01	; 1
    61fe:	51 09       	sbc	r21, r1
    6200:	46 0d       	add	r20, r6
    6202:	57 1d       	adc	r21, r7
    6204:	ad 81       	ldd	r26, Y+5	; 0x05
    6206:	be 81       	ldd	r27, Y+6	; 0x06
    6208:	11 96       	adiw	r26, 0x01	; 1
    620a:	ed 91       	ld	r30, X+
    620c:	fc 91       	ld	r31, X
    620e:	12 97       	sbiw	r26, 0x02	; 2
    6210:	1c 01       	movw	r2, r24
    6212:	bf ef       	ldi	r27, 0xFF	; 255
    6214:	2b 1a       	sub	r2, r27
    6216:	3b 0a       	sbc	r3, r27
    6218:	88 0f       	add	r24, r24
    621a:	99 1f       	adc	r25, r25
    621c:	e8 0f       	add	r30, r24
    621e:	f9 1f       	adc	r31, r25
    6220:	60 81       	ld	r22, Z
    6222:	71 81       	ldd	r23, Z+1	; 0x01
    6224:	a1 2c       	mov	r10, r1
    6226:	c9 80       	ldd	r12, Y+1	; 0x01
    6228:	da 80       	ldd	r13, Y+2	; 0x02
    622a:	eb 80       	ldd	r14, Y+3	; 0x03
    622c:	fc 80       	ldd	r15, Y+4	; 0x04
    622e:	83 01       	movw	r16, r6
    6230:	94 01       	movw	r18, r8
    6232:	8b 2d       	mov	r24, r11
    6234:	5e dd       	rcall	.-1348   	; 0x5cf2 <filterbytes>
    6236:	c1 01       	movw	r24, r2
    6238:	84 15       	cp	r24, r4
    623a:	95 05       	cpc	r25, r5
    623c:	e0 f2       	brcs	.-72     	; 0x61f6 <filterbytes+0x504>
    623e:	60 e0       	ldi	r22, 0x00	; 0
    6240:	70 e0       	ldi	r23, 0x00	; 0
    6242:	80 e0       	ldi	r24, 0x00	; 0
    6244:	90 e0       	ldi	r25, 0x00	; 0
    6246:	10 c1       	rjmp	.+544    	; 0x6468 <filterbytes+0x776>
    6248:	ed 81       	ldd	r30, Y+5	; 0x05
    624a:	fe 81       	ldd	r31, Y+6	; 0x06
    624c:	80 81       	ld	r24, Z
    624e:	81 30       	cpi	r24, 0x01	; 1
    6250:	09 f0       	breq	.+2      	; 0x6254 <filterbytes+0x562>
    6252:	57 c0       	rjmp	.+174    	; 0x6302 <filterbytes+0x610>
    6254:	8c 91       	ld	r24, X
    6256:	81 60       	ori	r24, 0x01	; 1
    6258:	8c 93       	st	X, r24
    625a:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    625e:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    6262:	01 96       	adiw	r24, 0x01	; 1
    6264:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    6268:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    626c:	d9 01       	movw	r26, r18
    626e:	8c 91       	ld	r24, X
    6270:	91 e0       	ldi	r25, 0x01	; 1
    6272:	98 0f       	add	r25, r24
    6274:	9c 93       	st	X, r25
    6276:	f8 01       	movw	r30, r16
    6278:	e8 0f       	add	r30, r24
    627a:	f1 1d       	adc	r31, r1
    627c:	ad 81       	ldd	r26, Y+5	; 0x05
    627e:	be 81       	ldd	r27, Y+6	; 0x06
    6280:	1b 96       	adiw	r26, 0x0b	; 11
    6282:	8c 91       	ld	r24, X
    6284:	80 83       	st	Z, r24
    6286:	b1 2c       	mov	r11, r1
    6288:	19 c0       	rjmp	.+50     	; 0x62bc <filterbytes+0x5ca>
    628a:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    628e:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    6292:	01 96       	adiw	r24, 0x01	; 1
    6294:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    6298:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    629c:	f4 01       	movw	r30, r8
    629e:	80 81       	ld	r24, Z
    62a0:	91 e0       	ldi	r25, 0x01	; 1
    62a2:	98 0f       	add	r25, r24
    62a4:	90 83       	st	Z, r25
    62a6:	f3 01       	movw	r30, r6
    62a8:	e8 0f       	add	r30, r24
    62aa:	f1 1d       	adc	r31, r1
    62ac:	ad 81       	ldd	r26, Y+5	; 0x05
    62ae:	be 81       	ldd	r27, Y+6	; 0x06
    62b0:	a4 0d       	add	r26, r4
    62b2:	b5 1d       	adc	r27, r5
    62b4:	11 96       	adiw	r26, 0x01	; 1
    62b6:	8c 91       	ld	r24, X
    62b8:	80 83       	st	Z, r24
    62ba:	b3 94       	inc	r11
    62bc:	4b 2c       	mov	r4, r11
    62be:	51 2c       	mov	r5, r1
    62c0:	ad 81       	ldd	r26, Y+5	; 0x05
    62c2:	be 81       	ldd	r27, Y+6	; 0x06
    62c4:	1b 96       	adiw	r26, 0x0b	; 11
    62c6:	8c 91       	ld	r24, X
    62c8:	90 e0       	ldi	r25, 0x00	; 0
    62ca:	0e 94 90 6a 	call	0xd520	; 0xd520 <tm_u8s_per_bits>
    62ce:	48 16       	cp	r4, r24
    62d0:	59 06       	cpc	r5, r25
    62d2:	dc f2       	brlt	.-74     	; 0x628a <filterbytes+0x598>
    62d4:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    62d8:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    62dc:	01 96       	adiw	r24, 0x01	; 1
    62de:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    62e2:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    62e6:	f4 01       	movw	r30, r8
    62e8:	80 81       	ld	r24, Z
    62ea:	91 e0       	ldi	r25, 0x01	; 1
    62ec:	98 0f       	add	r25, r24
    62ee:	90 83       	st	Z, r25
    62f0:	f3 01       	movw	r30, r6
    62f2:	e8 0f       	add	r30, r24
    62f4:	f1 1d       	adc	r31, r1
    62f6:	10 82       	st	Z, r1
    62f8:	60 e0       	ldi	r22, 0x00	; 0
    62fa:	70 e0       	ldi	r23, 0x00	; 0
    62fc:	80 e0       	ldi	r24, 0x00	; 0
    62fe:	90 e0       	ldi	r25, 0x00	; 0
    6300:	b3 c0       	rjmp	.+358    	; 0x6468 <filterbytes+0x776>
    6302:	82 30       	cpi	r24, 0x02	; 2
    6304:	09 f0       	breq	.+2      	; 0x6308 <filterbytes+0x616>
    6306:	3f c0       	rjmp	.+126    	; 0x6386 <filterbytes+0x694>
    6308:	8c 91       	ld	r24, X
    630a:	82 60       	ori	r24, 0x02	; 2
    630c:	8c 93       	st	X, r24
    630e:	ad 81       	ldd	r26, Y+5	; 0x05
    6310:	be 81       	ldd	r27, Y+6	; 0x06
    6312:	11 96       	adiw	r26, 0x01	; 1
    6314:	ec 90       	ld	r14, X
    6316:	11 97       	sbiw	r26, 0x01	; 1
    6318:	12 96       	adiw	r26, 0x02	; 2
    631a:	fc 90       	ld	r15, X
    631c:	12 97       	sbiw	r26, 0x02	; 2
    631e:	13 96       	adiw	r26, 0x03	; 3
    6320:	0c 91       	ld	r16, X
    6322:	13 97       	sbiw	r26, 0x03	; 3
    6324:	14 96       	adiw	r26, 0x04	; 4
    6326:	1c 91       	ld	r17, X
    6328:	14 97       	sbiw	r26, 0x04	; 4
    632a:	15 96       	adiw	r26, 0x05	; 5
    632c:	2c 91       	ld	r18, X
    632e:	15 97       	sbiw	r26, 0x05	; 5
    6330:	16 96       	adiw	r26, 0x06	; 6
    6332:	3c 91       	ld	r19, X
    6334:	16 97       	sbiw	r26, 0x06	; 6
    6336:	17 96       	adiw	r26, 0x07	; 7
    6338:	4c 91       	ld	r20, X
    633a:	17 97       	sbiw	r26, 0x07	; 7
    633c:	18 96       	adiw	r26, 0x08	; 8
    633e:	5c 91       	ld	r21, X
    6340:	b4 01       	movw	r22, r8
    6342:	c3 01       	movw	r24, r6
    6344:	0e 94 93 6d 	call	0xdb26	; 0xdb26 <TMR_SR_convertToEBV>
    6348:	6b 01       	movw	r12, r22
    634a:	7c 01       	movw	r14, r24
    634c:	61 15       	cp	r22, r1
    634e:	71 05       	cpc	r23, r1
    6350:	81 05       	cpc	r24, r1
    6352:	91 05       	cpc	r25, r1
    6354:	09 f0       	breq	.+2      	; 0x6358 <filterbytes+0x666>
    6356:	7b c0       	rjmp	.+246    	; 0x644e <filterbytes+0x75c>
    6358:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    635c:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    6360:	01 96       	adiw	r24, 0x01	; 1
    6362:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    6366:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    636a:	f4 01       	movw	r30, r8
    636c:	80 81       	ld	r24, Z
    636e:	91 e0       	ldi	r25, 0x01	; 1
    6370:	98 0f       	add	r25, r24
    6372:	90 83       	st	Z, r25
    6374:	f3 01       	movw	r30, r6
    6376:	e8 0f       	add	r30, r24
    6378:	f1 1d       	adc	r31, r1
    637a:	10 82       	st	Z, r1
    637c:	60 e0       	ldi	r22, 0x00	; 0
    637e:	70 e0       	ldi	r23, 0x00	; 0
    6380:	80 e0       	ldi	r24, 0x00	; 0
    6382:	90 e0       	ldi	r25, 0x00	; 0
    6384:	71 c0       	rjmp	.+226    	; 0x6468 <filterbytes+0x776>
    6386:	83 30       	cpi	r24, 0x03	; 3
    6388:	09 f0       	breq	.+2      	; 0x638c <filterbytes+0x69a>
    638a:	65 c0       	rjmp	.+202    	; 0x6456 <filterbytes+0x764>
    638c:	ed 81       	ldd	r30, Y+5	; 0x05
    638e:	fe 81       	ldd	r31, Y+6	; 0x06
    6390:	45 80       	ldd	r4, Z+5	; 0x05
    6392:	56 80       	ldd	r5, Z+6	; 0x06
    6394:	f3 e0       	ldi	r31, 0x03	; 3
    6396:	4f 16       	cp	r4, r31
    6398:	51 04       	cpc	r5, r1
    639a:	08 f0       	brcs	.+2      	; 0x639e <filterbytes+0x6ac>
    639c:	61 c0       	rjmp	.+194    	; 0x6460 <filterbytes+0x76e>
    639e:	ed 81       	ldd	r30, Y+5	; 0x05
    63a0:	fe 81       	ldd	r31, Y+6	; 0x06
    63a2:	81 81       	ldd	r24, Z+1	; 0x01
    63a4:	92 81       	ldd	r25, Z+2	; 0x02
    63a6:	fc 01       	movw	r30, r24
    63a8:	60 81       	ld	r22, Z
    63aa:	71 81       	ldd	r23, Z+1	; 0x01
    63ac:	a1 2c       	mov	r10, r1
    63ae:	c9 80       	ldd	r12, Y+1	; 0x01
    63b0:	da 80       	ldd	r13, Y+2	; 0x02
    63b2:	eb 80       	ldd	r14, Y+3	; 0x03
    63b4:	fc 80       	ldd	r15, Y+4	; 0x04
    63b6:	8b 2d       	mov	r24, r11
    63b8:	9c dc       	rcall	.-1736   	; 0x5cf2 <filterbytes>
    63ba:	81 e0       	ldi	r24, 0x01	; 1
    63bc:	90 e0       	ldi	r25, 0x00	; 0
    63be:	21 c0       	rjmp	.+66     	; 0x6402 <filterbytes+0x710>
    63c0:	d4 01       	movw	r26, r8
    63c2:	4c 91       	ld	r20, X
    63c4:	50 e0       	ldi	r21, 0x00	; 0
    63c6:	41 50       	subi	r20, 0x01	; 1
    63c8:	51 09       	sbc	r21, r1
    63ca:	46 0d       	add	r20, r6
    63cc:	57 1d       	adc	r21, r7
    63ce:	ad 81       	ldd	r26, Y+5	; 0x05
    63d0:	be 81       	ldd	r27, Y+6	; 0x06
    63d2:	11 96       	adiw	r26, 0x01	; 1
    63d4:	ed 91       	ld	r30, X+
    63d6:	fc 91       	ld	r31, X
    63d8:	12 97       	sbiw	r26, 0x02	; 2
    63da:	1c 01       	movw	r2, r24
    63dc:	bf ef       	ldi	r27, 0xFF	; 255
    63de:	2b 1a       	sub	r2, r27
    63e0:	3b 0a       	sbc	r3, r27
    63e2:	88 0f       	add	r24, r24
    63e4:	99 1f       	adc	r25, r25
    63e6:	e8 0f       	add	r30, r24
    63e8:	f9 1f       	adc	r31, r25
    63ea:	60 81       	ld	r22, Z
    63ec:	71 81       	ldd	r23, Z+1	; 0x01
    63ee:	a1 2c       	mov	r10, r1
    63f0:	c9 80       	ldd	r12, Y+1	; 0x01
    63f2:	da 80       	ldd	r13, Y+2	; 0x02
    63f4:	eb 80       	ldd	r14, Y+3	; 0x03
    63f6:	fc 80       	ldd	r15, Y+4	; 0x04
    63f8:	83 01       	movw	r16, r6
    63fa:	94 01       	movw	r18, r8
    63fc:	8b 2d       	mov	r24, r11
    63fe:	79 dc       	rcall	.-1806   	; 0x5cf2 <filterbytes>
    6400:	c1 01       	movw	r24, r2
    6402:	84 15       	cp	r24, r4
    6404:	95 05       	cpc	r25, r5
    6406:	e0 f2       	brcs	.-72     	; 0x63c0 <filterbytes+0x6ce>
    6408:	60 e0       	ldi	r22, 0x00	; 0
    640a:	70 e0       	ldi	r23, 0x00	; 0
    640c:	80 e0       	ldi	r24, 0x00	; 0
    640e:	90 e0       	ldi	r25, 0x00	; 0
    6410:	2b c0       	rjmp	.+86     	; 0x6468 <filterbytes+0x776>
    6412:	60 e0       	ldi	r22, 0x00	; 0
    6414:	70 e0       	ldi	r23, 0x00	; 0
    6416:	80 e0       	ldi	r24, 0x00	; 0
    6418:	90 e0       	ldi	r25, 0x00	; 0
    641a:	26 c0       	rjmp	.+76     	; 0x6468 <filterbytes+0x776>
    641c:	60 e0       	ldi	r22, 0x00	; 0
    641e:	70 e0       	ldi	r23, 0x00	; 0
    6420:	80 e0       	ldi	r24, 0x00	; 0
    6422:	90 e0       	ldi	r25, 0x00	; 0
    6424:	21 c0       	rjmp	.+66     	; 0x6468 <filterbytes+0x776>
    6426:	60 e0       	ldi	r22, 0x00	; 0
    6428:	70 e0       	ldi	r23, 0x00	; 0
    642a:	80 e0       	ldi	r24, 0x00	; 0
    642c:	90 e0       	ldi	r25, 0x00	; 0
    642e:	1c c0       	rjmp	.+56     	; 0x6468 <filterbytes+0x776>
    6430:	61 e0       	ldi	r22, 0x01	; 1
    6432:	70 e0       	ldi	r23, 0x00	; 0
    6434:	80 e0       	ldi	r24, 0x00	; 0
    6436:	93 e0       	ldi	r25, 0x03	; 3
    6438:	17 c0       	rjmp	.+46     	; 0x6468 <filterbytes+0x776>
    643a:	63 e0       	ldi	r22, 0x03	; 3
    643c:	70 e0       	ldi	r23, 0x00	; 0
    643e:	80 e0       	ldi	r24, 0x00	; 0
    6440:	93 e0       	ldi	r25, 0x03	; 3
    6442:	12 c0       	rjmp	.+36     	; 0x6468 <filterbytes+0x776>
    6444:	63 e0       	ldi	r22, 0x03	; 3
    6446:	70 e0       	ldi	r23, 0x00	; 0
    6448:	80 e0       	ldi	r24, 0x00	; 0
    644a:	93 e0       	ldi	r25, 0x03	; 3
    644c:	0d c0       	rjmp	.+26     	; 0x6468 <filterbytes+0x776>
    644e:	7d 2d       	mov	r23, r13
    6450:	8e 2d       	mov	r24, r14
    6452:	9f 2d       	mov	r25, r15
    6454:	09 c0       	rjmp	.+18     	; 0x6468 <filterbytes+0x776>
    6456:	61 e0       	ldi	r22, 0x01	; 1
    6458:	70 e0       	ldi	r23, 0x00	; 0
    645a:	80 e0       	ldi	r24, 0x00	; 0
    645c:	93 e0       	ldi	r25, 0x03	; 3
    645e:	04 c0       	rjmp	.+8      	; 0x6468 <filterbytes+0x776>
    6460:	63 e0       	ldi	r22, 0x03	; 3
    6462:	70 e0       	ldi	r23, 0x00	; 0
    6464:	80 e0       	ldi	r24, 0x00	; 0
    6466:	93 e0       	ldi	r25, 0x03	; 3
    6468:	26 96       	adiw	r28, 0x06	; 6
    646a:	0f b6       	in	r0, 0x3f	; 63
    646c:	f8 94       	cli
    646e:	de bf       	out	0x3e, r29	; 62
    6470:	0f be       	out	0x3f, r0	; 63
    6472:	cd bf       	out	0x3d, r28	; 61
    6474:	df 91       	pop	r29
    6476:	cf 91       	pop	r28
    6478:	1f 91       	pop	r17
    647a:	0f 91       	pop	r16
    647c:	ff 90       	pop	r15
    647e:	ef 90       	pop	r14
    6480:	df 90       	pop	r13
    6482:	cf 90       	pop	r12
    6484:	bf 90       	pop	r11
    6486:	af 90       	pop	r10
    6488:	9f 90       	pop	r9
    648a:	8f 90       	pop	r8
    648c:	7f 90       	pop	r7
    648e:	6f 90       	pop	r6
    6490:	5f 90       	pop	r5
    6492:	4f 90       	pop	r4
    6494:	3f 90       	pop	r3
    6496:	2f 90       	pop	r2
    6498:	08 95       	ret

0000649a <parseEBVdata>:
    649a:	0f 93       	push	r16
    649c:	1f 93       	push	r17
    649e:	cf 93       	push	r28
    64a0:	df 93       	push	r29
    64a2:	8c 01       	movw	r16, r24
    64a4:	fa 01       	movw	r30, r20
    64a6:	80 81       	ld	r24, Z
    64a8:	91 e0       	ldi	r25, 0x01	; 1
    64aa:	98 0f       	add	r25, r24
    64ac:	90 83       	st	Z, r25
    64ae:	d8 01       	movw	r26, r16
    64b0:	a8 0f       	add	r26, r24
    64b2:	b1 1d       	adc	r27, r1
    64b4:	8c 91       	ld	r24, X
    64b6:	db 01       	movw	r26, r22
    64b8:	8c 93       	st	X, r24
    64ba:	90 e0       	ldi	r25, 0x00	; 0
    64bc:	81 e0       	ldi	r24, 0x01	; 1
    64be:	0e c0       	rjmp	.+28     	; 0x64dc <parseEBVdata+0x42>
    64c0:	db 01       	movw	r26, r22
    64c2:	a8 0f       	add	r26, r24
    64c4:	b1 1d       	adc	r27, r1
    64c6:	20 81       	ld	r18, Z
    64c8:	31 e0       	ldi	r19, 0x01	; 1
    64ca:	32 0f       	add	r19, r18
    64cc:	30 83       	st	Z, r19
    64ce:	e8 01       	movw	r28, r16
    64d0:	c2 0f       	add	r28, r18
    64d2:	d1 1d       	adc	r29, r1
    64d4:	28 81       	ld	r18, Y
    64d6:	2c 93       	st	X, r18
    64d8:	9f 5f       	subi	r25, 0xFF	; 255
    64da:	8f 5f       	subi	r24, 0xFF	; 255
    64dc:	db 01       	movw	r26, r22
    64de:	a9 0f       	add	r26, r25
    64e0:	b1 1d       	adc	r27, r1
    64e2:	2c 91       	ld	r18, X
    64e4:	22 23       	and	r18, r18
    64e6:	14 f4       	brge	.+4      	; 0x64ec <parseEBVdata+0x52>
    64e8:	97 30       	cpi	r25, 0x07	; 7
    64ea:	50 f3       	brcs	.-44     	; 0x64c0 <parseEBVdata+0x26>
    64ec:	df 91       	pop	r29
    64ee:	cf 91       	pop	r28
    64f0:	1f 91       	pop	r17
    64f2:	0f 91       	pop	r16
    64f4:	08 95       	ret

000064f6 <TMR_SR_sendBytes>:
    64f6:	4f 92       	push	r4
    64f8:	5f 92       	push	r5
    64fa:	6f 92       	push	r6
    64fc:	7f 92       	push	r7
    64fe:	9f 92       	push	r9
    6500:	af 92       	push	r10
    6502:	bf 92       	push	r11
    6504:	cf 92       	push	r12
    6506:	df 92       	push	r13
    6508:	ef 92       	push	r14
    650a:	ff 92       	push	r15
    650c:	0f 93       	push	r16
    650e:	1f 93       	push	r17
    6510:	cf 93       	push	r28
    6512:	df 93       	push	r29
    6514:	ec 01       	movw	r28, r24
    6516:	96 2e       	mov	r9, r22
    6518:	6a 01       	movw	r12, r20
    651a:	28 01       	movw	r4, r16
    651c:	39 01       	movw	r6, r18
    651e:	5c 01       	movw	r10, r24
    6520:	80 e8       	ldi	r24, 0x80	; 128
    6522:	a8 1a       	sub	r10, r24
    6524:	8e ef       	ldi	r24, 0xFE	; 254
    6526:	b8 0a       	sbc	r11, r24
    6528:	8e 81       	ldd	r24, Y+6	; 0x06
    652a:	9f 81       	ldd	r25, Y+7	; 0x07
    652c:	89 2b       	or	r24, r25
    652e:	61 f0       	breq	.+24     	; 0x6548 <TMR_SR_sendBytes+0x52>
    6530:	86 2f       	mov	r24, r22
    6532:	90 e0       	ldi	r25, 0x00	; 0
    6534:	a0 e0       	ldi	r26, 0x00	; 0
    6536:	b0 e0       	ldi	r27, 0x00	; 0
    6538:	78 01       	movw	r14, r16
    653a:	8a 01       	movw	r16, r20
    653c:	9c 01       	movw	r18, r24
    653e:	ad 01       	movw	r20, r26
    6540:	61 e0       	ldi	r22, 0x01	; 1
    6542:	ce 01       	movw	r24, r28
    6544:	0e 94 1f 6c 	call	0xd83e	; 0xd83e <TMR__notifyTransportListeners>
    6548:	c0 58       	subi	r28, 0x80	; 128
    654a:	de 4f       	sbci	r29, 0xFE	; 254
    654c:	ec 81       	ldd	r30, Y+4	; 0x04
    654e:	fd 81       	ldd	r31, Y+5	; 0x05
    6550:	49 2d       	mov	r20, r9
    6552:	50 e0       	ldi	r21, 0x00	; 0
    6554:	60 e0       	ldi	r22, 0x00	; 0
    6556:	70 e0       	ldi	r23, 0x00	; 0
    6558:	83 01       	movw	r16, r6
    655a:	72 01       	movw	r14, r4
    655c:	96 01       	movw	r18, r12
    655e:	c5 01       	movw	r24, r10
    6560:	09 95       	icall
    6562:	df 91       	pop	r29
    6564:	cf 91       	pop	r28
    6566:	1f 91       	pop	r17
    6568:	0f 91       	pop	r16
    656a:	ff 90       	pop	r15
    656c:	ef 90       	pop	r14
    656e:	df 90       	pop	r13
    6570:	cf 90       	pop	r12
    6572:	bf 90       	pop	r11
    6574:	af 90       	pop	r10
    6576:	9f 90       	pop	r9
    6578:	7f 90       	pop	r7
    657a:	6f 90       	pop	r6
    657c:	5f 90       	pop	r5
    657e:	4f 90       	pop	r4
    6580:	08 95       	ret

00006582 <TMR_SR_sendMessage>:
    6582:	8f 92       	push	r8
    6584:	9f 92       	push	r9
    6586:	af 92       	push	r10
    6588:	bf 92       	push	r11
    658a:	ef 92       	push	r14
    658c:	ff 92       	push	r15
    658e:	0f 93       	push	r16
    6590:	1f 93       	push	r17
    6592:	cf 93       	push	r28
    6594:	df 93       	push	r29
    6596:	7c 01       	movw	r14, r24
    6598:	eb 01       	movw	r28, r22
    659a:	fc 01       	movw	r30, r24
    659c:	e4 52       	subi	r30, 0x24	; 36
    659e:	fe 4f       	sbci	r31, 0xFE	; 254
    65a0:	80 80       	ld	r8, Z
    65a2:	91 80       	ldd	r9, Z+1	; 0x01
    65a4:	a2 80       	ldd	r10, Z+2	; 0x02
    65a6:	b3 80       	ldd	r11, Z+3	; 0x03
    65a8:	80 0e       	add	r8, r16
    65aa:	91 1e       	adc	r9, r17
    65ac:	a2 1e       	adc	r10, r18
    65ae:	b3 1e       	adc	r11, r19
    65b0:	8f ef       	ldi	r24, 0xFF	; 255
    65b2:	88 83       	st	Y, r24
    65b4:	19 81       	ldd	r17, Y+1	; 0x01
    65b6:	8a 81       	ldd	r24, Y+2	; 0x02
    65b8:	fa 01       	movw	r30, r20
    65ba:	80 83       	st	Z, r24
    65bc:	f7 01       	movw	r30, r14
    65be:	e5 58       	subi	r30, 0x85	; 133
    65c0:	fe 4f       	sbci	r31, 0xFE	; 254
    65c2:	80 81       	ld	r24, Z
    65c4:	88 23       	and	r24, r24
    65c6:	d1 f1       	breq	.+116    	; 0x663c <TMR_SR_sendMessage+0xba>
    65c8:	e5 50       	subi	r30, 0x05	; 5
    65ca:	f1 40       	sbci	r31, 0x01	; 1
    65cc:	80 81       	ld	r24, Z
    65ce:	81 11       	cpse	r24, r1
    65d0:	10 c0       	rjmp	.+32     	; 0x65f2 <TMR_SR_sendMessage+0x70>
    65d2:	34 c0       	rjmp	.+104    	; 0x663c <TMR_SR_sendMessage+0xba>
    65d4:	82 2f       	mov	r24, r18
    65d6:	90 e0       	ldi	r25, 0x00	; 0
    65d8:	fc 01       	movw	r30, r24
    65da:	32 96       	adiw	r30, 0x02	; 2
    65dc:	ec 0f       	add	r30, r28
    65de:	fd 1f       	adc	r31, r29
    65e0:	30 81       	ld	r19, Z
    65e2:	8e 0d       	add	r24, r14
    65e4:	9f 1d       	adc	r25, r15
    65e6:	fc 01       	movw	r30, r24
    65e8:	e5 58       	subi	r30, 0x85	; 133
    65ea:	ff 4f       	sbci	r31, 0xFF	; 255
    65ec:	30 83       	st	Z, r19
    65ee:	2f 5f       	subi	r18, 0xFF	; 255
    65f0:	01 c0       	rjmp	.+2      	; 0x65f4 <TMR_SR_sendMessage+0x72>
    65f2:	20 e0       	ldi	r18, 0x00	; 0
    65f4:	12 17       	cp	r17, r18
    65f6:	70 f7       	brcc	.-36     	; 0x65d4 <TMR_SR_sendMessage+0x52>
    65f8:	85 e0       	ldi	r24, 0x05	; 5
    65fa:	81 0f       	add	r24, r17
    65fc:	89 83       	std	Y+1, r24	; 0x01
    65fe:	8f e2       	ldi	r24, 0x2F	; 47
    6600:	8a 83       	std	Y+2, r24	; 0x02
    6602:	1b 82       	std	Y+3, r1	; 0x03
    6604:	1c 82       	std	Y+4, r1	; 0x04
    6606:	84 e0       	ldi	r24, 0x04	; 4
    6608:	8d 83       	std	Y+5, r24	; 0x05
    660a:	1e 83       	std	Y+6, r17	; 0x06
    660c:	20 e0       	ldi	r18, 0x00	; 0
    660e:	0e c0       	rjmp	.+28     	; 0x662c <TMR_SR_sendMessage+0xaa>
    6610:	82 2f       	mov	r24, r18
    6612:	90 e0       	ldi	r25, 0x00	; 0
    6614:	dc 01       	movw	r26, r24
    6616:	17 96       	adiw	r26, 0x07	; 7
    6618:	ac 0f       	add	r26, r28
    661a:	bd 1f       	adc	r27, r29
    661c:	8e 0d       	add	r24, r14
    661e:	9f 1d       	adc	r25, r15
    6620:	fc 01       	movw	r30, r24
    6622:	e5 58       	subi	r30, 0x85	; 133
    6624:	ff 4f       	sbci	r31, 0xFF	; 255
    6626:	80 81       	ld	r24, Z
    6628:	8c 93       	st	X, r24
    662a:	2f 5f       	subi	r18, 0xFF	; 255
    662c:	12 17       	cp	r17, r18
    662e:	80 f7       	brcc	.-32     	; 0x6610 <TMR_SR_sendMessage+0x8e>
    6630:	19 81       	ldd	r17, Y+1	; 0x01
    6632:	81 e0       	ldi	r24, 0x01	; 1
    6634:	f7 01       	movw	r30, r14
    6636:	e6 58       	subi	r30, 0x86	; 134
    6638:	ff 4f       	sbci	r31, 0xFF	; 255
    663a:	80 83       	st	Z, r24
    663c:	62 e0       	ldi	r22, 0x02	; 2
    663e:	61 0f       	add	r22, r17
    6640:	ce 01       	movw	r24, r28
    6642:	01 96       	adiw	r24, 0x01	; 1
    6644:	16 db       	rcall	.-2516   	; 0x5c72 <tm_crc>
    6646:	21 2f       	mov	r18, r17
    6648:	30 e0       	ldi	r19, 0x00	; 0
    664a:	f9 01       	movw	r30, r18
    664c:	33 96       	adiw	r30, 0x03	; 3
    664e:	ec 0f       	add	r30, r28
    6650:	fd 1f       	adc	r31, r29
    6652:	90 83       	st	Z, r25
    6654:	2c 5f       	subi	r18, 0xFC	; 252
    6656:	3f 4f       	sbci	r19, 0xFF	; 255
    6658:	fe 01       	movw	r30, r28
    665a:	e2 0f       	add	r30, r18
    665c:	f3 1f       	adc	r31, r19
    665e:	80 83       	st	Z, r24
    6660:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    6664:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    6668:	04 96       	adiw	r24, 0x04	; 4
    666a:	8f 3f       	cpi	r24, 0xFF	; 255
    666c:	91 05       	cpc	r25, r1
    666e:	51 f0       	breq	.+20     	; 0x6684 <TMR_SR_sendMessage+0x102>
    6670:	48 f0       	brcs	.+18     	; 0x6684 <TMR_SR_sendMessage+0x102>
    6672:	10 92 d7 0b 	sts	0x0BD7, r1	; 0x800bd7 <totalMsgIdx+0x1>
    6676:	10 92 d6 0b 	sts	0x0BD6, r1	; 0x800bd6 <totalMsgIdx>
    667a:	6d e1       	ldi	r22, 0x1D	; 29
    667c:	70 e0       	ldi	r23, 0x00	; 0
    667e:	80 e0       	ldi	r24, 0x00	; 0
    6680:	93 e0       	ldi	r25, 0x03	; 3
    6682:	26 c0       	rjmp	.+76     	; 0x66d0 <TMR_SR_sendMessage+0x14e>
    6684:	10 92 d7 0b 	sts	0x0BD7, r1	; 0x800bd7 <totalMsgIdx+0x1>
    6688:	10 92 d6 0b 	sts	0x0BD6, r1	; 0x800bd6 <totalMsgIdx>
    668c:	f7 01       	movw	r30, r14
    668e:	e9 58       	subi	r30, 0x89	; 137
    6690:	ff 4f       	sbci	r31, 0xFF	; 255
    6692:	80 81       	ld	r24, Z
    6694:	88 23       	and	r24, r24
    6696:	a9 f0       	breq	.+42     	; 0x66c2 <TMR_SR_sendMessage+0x140>
    6698:	0e 94 06 03 	call	0x60c	; 0x60c <tmr_gettime>
    669c:	20 93 e0 0b 	sts	0x0BE0, r18	; 0x800be0 <onFlyCmdSntTime>
    66a0:	30 93 e1 0b 	sts	0x0BE1, r19	; 0x800be1 <onFlyCmdSntTime+0x1>
    66a4:	40 93 e2 0b 	sts	0x0BE2, r20	; 0x800be2 <onFlyCmdSntTime+0x2>
    66a8:	50 93 e3 0b 	sts	0x0BE3, r21	; 0x800be3 <onFlyCmdSntTime+0x3>
    66ac:	60 93 e4 0b 	sts	0x0BE4, r22	; 0x800be4 <onFlyCmdSntTime+0x4>
    66b0:	70 93 e5 0b 	sts	0x0BE5, r23	; 0x800be5 <onFlyCmdSntTime+0x5>
    66b4:	80 93 e6 0b 	sts	0x0BE6, r24	; 0x800be6 <onFlyCmdSntTime+0x6>
    66b8:	90 93 e7 0b 	sts	0x0BE7, r25	; 0x800be7 <onFlyCmdSntTime+0x7>
    66bc:	8a 81       	ldd	r24, Y+2	; 0x02
    66be:	80 93 df 0b 	sts	0x0BDF, r24	; 0x800bdf <onFlyCmdOpcode>
    66c2:	65 e0       	ldi	r22, 0x05	; 5
    66c4:	61 0f       	add	r22, r17
    66c6:	95 01       	movw	r18, r10
    66c8:	84 01       	movw	r16, r8
    66ca:	ae 01       	movw	r20, r28
    66cc:	c7 01       	movw	r24, r14
    66ce:	13 df       	rcall	.-474    	; 0x64f6 <TMR_SR_sendBytes>
    66d0:	df 91       	pop	r29
    66d2:	cf 91       	pop	r28
    66d4:	1f 91       	pop	r17
    66d6:	0f 91       	pop	r16
    66d8:	ff 90       	pop	r15
    66da:	ef 90       	pop	r14
    66dc:	bf 90       	pop	r11
    66de:	af 90       	pop	r10
    66e0:	9f 90       	pop	r9
    66e2:	8f 90       	pop	r8
    66e4:	08 95       	ret

000066e6 <TMR_SR_receiveMessage>:
    66e6:	2f 92       	push	r2
    66e8:	3f 92       	push	r3
    66ea:	4f 92       	push	r4
    66ec:	5f 92       	push	r5
    66ee:	6f 92       	push	r6
    66f0:	7f 92       	push	r7
    66f2:	8f 92       	push	r8
    66f4:	9f 92       	push	r9
    66f6:	af 92       	push	r10
    66f8:	bf 92       	push	r11
    66fa:	cf 92       	push	r12
    66fc:	df 92       	push	r13
    66fe:	ef 92       	push	r14
    6700:	ff 92       	push	r15
    6702:	0f 93       	push	r16
    6704:	1f 93       	push	r17
    6706:	cf 93       	push	r28
    6708:	df 93       	push	r29
    670a:	cd b7       	in	r28, 0x3d	; 61
    670c:	de b7       	in	r29, 0x3e	; 62
    670e:	65 97       	sbiw	r28, 0x15	; 21
    6710:	0f b6       	in	r0, 0x3f	; 63
    6712:	f8 94       	cli
    6714:	de bf       	out	0x3e, r29	; 62
    6716:	0f be       	out	0x3f, r0	; 63
    6718:	cd bf       	out	0x3d, r28	; 61
    671a:	9d 8b       	std	Y+21, r25	; 0x15
    671c:	8c 8b       	std	Y+20, r24	; 0x14
    671e:	4b 01       	movw	r8, r22
    6720:	74 2e       	mov	r7, r20
    6722:	19 82       	std	Y+1, r1	; 0x01
    6724:	1a 82       	std	Y+2, r1	; 0x02
    6726:	1b 82       	std	Y+3, r1	; 0x03
    6728:	1c 82       	std	Y+4, r1	; 0x04
    672a:	1d 82       	std	Y+5, r1	; 0x05
    672c:	1e 82       	std	Y+6, r1	; 0x06
    672e:	1f 82       	std	Y+7, r1	; 0x07
    6730:	18 86       	std	Y+8, r1	; 0x08
    6732:	80 58       	subi	r24, 0x80	; 128
    6734:	9e 4f       	sbci	r25, 0xFE	; 254
    6736:	9a 8b       	std	Y+18, r25	; 0x12
    6738:	89 8b       	std	Y+17, r24	; 0x11
    673a:	ec 89       	ldd	r30, Y+20	; 0x14
    673c:	fd 89       	ldd	r31, Y+21	; 0x15
    673e:	e4 52       	subi	r30, 0x24	; 36
    6740:	fe 4f       	sbci	r31, 0xFE	; 254
    6742:	80 81       	ld	r24, Z
    6744:	91 81       	ldd	r25, Z+1	; 0x01
    6746:	a2 81       	ldd	r26, Z+2	; 0x02
    6748:	b3 81       	ldd	r27, Z+3	; 0x03
    674a:	5c 01       	movw	r10, r24
    674c:	6d 01       	movw	r12, r26
    674e:	a0 0e       	add	r10, r16
    6750:	b1 1e       	adc	r11, r17
    6752:	c2 1e       	adc	r12, r18
    6754:	d3 1e       	adc	r13, r19
    6756:	a9 86       	std	Y+9, r10	; 0x09
    6758:	ba 86       	std	Y+10, r11	; 0x0a
    675a:	cb 86       	std	Y+11, r12	; 0x0b
    675c:	dc 86       	std	Y+12, r13	; 0x0c
    675e:	0f 2e       	mov	r0, r31
    6760:	f2 e2       	ldi	r31, 0x22	; 34
    6762:	bf 2e       	mov	r11, r31
    6764:	f0 2d       	mov	r31, r0
    6766:	4b 11       	cpse	r20, r11
    6768:	12 c0       	rjmp	.+36     	; 0x678e <TMR_SR_receiveMessage+0xa8>
    676a:	ec 89       	ldd	r30, Y+20	; 0x14
    676c:	fd 89       	ldd	r31, Y+21	; 0x15
    676e:	84 85       	ldd	r24, Z+12	; 0x0c
    6770:	95 85       	ldd	r25, Z+13	; 0x0d
    6772:	a6 85       	ldd	r26, Z+14	; 0x0e
    6774:	b7 85       	ldd	r27, Z+15	; 0x0f
    6776:	a9 84       	ldd	r10, Y+9	; 0x09
    6778:	ba 84       	ldd	r11, Y+10	; 0x0a
    677a:	cb 84       	ldd	r12, Y+11	; 0x0b
    677c:	dc 84       	ldd	r13, Y+12	; 0x0c
    677e:	a8 0e       	add	r10, r24
    6780:	b9 1e       	adc	r11, r25
    6782:	ca 1e       	adc	r12, r26
    6784:	db 1e       	adc	r13, r27
    6786:	a9 86       	std	Y+9, r10	; 0x09
    6788:	ba 86       	std	Y+10, r11	; 0x0a
    678a:	cb 86       	std	Y+11, r12	; 0x0b
    678c:	dc 86       	std	Y+12, r13	; 0x0c
    678e:	b1 2c       	mov	r11, r1
    6790:	61 2c       	mov	r6, r1
    6792:	bb 8a       	std	Y+19, r11	; 0x13
    6794:	ac 88       	ldd	r10, Y+20	; 0x14
    6796:	bd 88       	ldd	r11, Y+21	; 0x15
    6798:	f5 01       	movw	r30, r10
    679a:	e0 58       	subi	r30, 0x80	; 128
    679c:	fe 4f       	sbci	r31, 0xFE	; 254
    679e:	06 80       	ldd	r0, Z+6	; 0x06
    67a0:	f7 81       	ldd	r31, Z+7	; 0x07
    67a2:	e0 2d       	mov	r30, r0
    67a4:	89 81       	ldd	r24, Y+1	; 0x01
    67a6:	9a 81       	ldd	r25, Y+2	; 0x02
    67a8:	ab 81       	ldd	r26, Y+3	; 0x03
    67aa:	bc 81       	ldd	r27, Y+4	; 0x04
    67ac:	84 01       	movw	r16, r8
    67ae:	08 0f       	add	r16, r24
    67b0:	19 1f       	adc	r17, r25
    67b2:	47 e0       	ldi	r20, 0x07	; 7
    67b4:	50 e0       	ldi	r21, 0x00	; 0
    67b6:	60 e0       	ldi	r22, 0x00	; 0
    67b8:	70 e0       	ldi	r23, 0x00	; 0
    67ba:	48 1b       	sub	r20, r24
    67bc:	59 0b       	sbc	r21, r25
    67be:	6a 0b       	sbc	r22, r26
    67c0:	7b 0b       	sbc	r23, r27
    67c2:	c9 84       	ldd	r12, Y+9	; 0x09
    67c4:	da 84       	ldd	r13, Y+10	; 0x0a
    67c6:	eb 84       	ldd	r14, Y+11	; 0x0b
    67c8:	fc 84       	ldd	r15, Y+12	; 0x0c
    67ca:	9e 01       	movw	r18, r28
    67cc:	2b 5f       	subi	r18, 0xFB	; 251
    67ce:	3f 4f       	sbci	r19, 0xFF	; 255
    67d0:	89 89       	ldd	r24, Y+17	; 0x11
    67d2:	9a 89       	ldd	r25, Y+18	; 0x12
    67d4:	09 95       	icall
    67d6:	1b 01       	movw	r2, r22
    67d8:	2c 01       	movw	r4, r24
    67da:	61 15       	cp	r22, r1
    67dc:	71 05       	cpc	r23, r1
    67de:	81 05       	cpc	r24, r1
    67e0:	91 05       	cpc	r25, r1
    67e2:	09 f0       	breq	.+2      	; 0x67e6 <TMR_SR_receiveMessage+0x100>
    67e4:	9d c1       	rjmp	.+826    	; 0x6b20 <TMR_SR_receiveMessage+0x43a>
    67e6:	49 81       	ldd	r20, Y+1	; 0x01
    67e8:	5a 81       	ldd	r21, Y+2	; 0x02
    67ea:	6b 81       	ldd	r22, Y+3	; 0x03
    67ec:	7c 81       	ldd	r23, Y+4	; 0x04
    67ee:	8d 81       	ldd	r24, Y+5	; 0x05
    67f0:	9e 81       	ldd	r25, Y+6	; 0x06
    67f2:	af 81       	ldd	r26, Y+7	; 0x07
    67f4:	b8 85       	ldd	r27, Y+8	; 0x08
    67f6:	84 0f       	add	r24, r20
    67f8:	95 1f       	adc	r25, r21
    67fa:	a6 1f       	adc	r26, r22
    67fc:	b7 1f       	adc	r27, r23
    67fe:	89 83       	std	Y+1, r24	; 0x01
    6800:	9a 83       	std	Y+2, r25	; 0x02
    6802:	ab 83       	std	Y+3, r26	; 0x03
    6804:	bc 83       	std	Y+4, r27	; 0x04
    6806:	07 97       	sbiw	r24, 0x07	; 7
    6808:	a1 05       	cpc	r26, r1
    680a:	b1 05       	cpc	r27, r1
    680c:	f0 f1       	brcs	.+124    	; 0x688a <TMR_SR_receiveMessage+0x1a4>
    680e:	80 e0       	ldi	r24, 0x00	; 0
    6810:	1e c0       	rjmp	.+60     	; 0x684e <TMR_SR_receiveMessage+0x168>
    6812:	28 2f       	mov	r18, r24
    6814:	30 e0       	ldi	r19, 0x00	; 0
    6816:	f4 01       	movw	r30, r8
    6818:	e2 0f       	add	r30, r18
    681a:	f3 1f       	adc	r31, r19
    681c:	90 81       	ld	r25, Z
    681e:	9f 3f       	cpi	r25, 0xFF	; 255
    6820:	a9 f4       	brne	.+42     	; 0x684c <TMR_SR_receiveMessage+0x166>
    6822:	f4 01       	movw	r30, r8
    6824:	e2 0f       	add	r30, r18
    6826:	f3 1f       	adc	r31, r19
    6828:	91 81       	ldd	r25, Z+1	; 0x01
    682a:	99 3f       	cpi	r25, 0xF9	; 249
    682c:	78 f4       	brcc	.+30     	; 0x684c <TMR_SR_receiveMessage+0x166>
    682e:	f4 01       	movw	r30, r8
    6830:	e2 0f       	add	r30, r18
    6832:	f3 1f       	adc	r31, r19
    6834:	92 81       	ldd	r25, Z+2	; 0x02
    6836:	79 16       	cp	r7, r25
    6838:	31 f0       	breq	.+12     	; 0x6846 <TMR_SR_receiveMessage+0x160>
    683a:	92 32       	cpi	r25, 0x22	; 34
    683c:	21 f0       	breq	.+8      	; 0x6846 <TMR_SR_receiveMessage+0x160>
    683e:	9f 32       	cpi	r25, 0x2F	; 47
    6840:	11 f0       	breq	.+4      	; 0x6846 <TMR_SR_receiveMessage+0x160>
    6842:	9d 39       	cpi	r25, 0x9D	; 157
    6844:	19 f4       	brne	.+6      	; 0x684c <TMR_SR_receiveMessage+0x166>
    6846:	88 23       	and	r24, r24
    6848:	41 f0       	breq	.+16     	; 0x685a <TMR_SR_receiveMessage+0x174>
    684a:	09 c0       	rjmp	.+18     	; 0x685e <TMR_SR_receiveMessage+0x178>
    684c:	8f 5f       	subi	r24, 0xFF	; 255
    684e:	68 2f       	mov	r22, r24
    6850:	70 e0       	ldi	r23, 0x00	; 0
    6852:	65 30       	cpi	r22, 0x05	; 5
    6854:	71 05       	cpc	r23, r1
    6856:	ec f2       	brlt	.-70     	; 0x6812 <TMR_SR_receiveMessage+0x12c>
    6858:	02 c0       	rjmp	.+4      	; 0x685e <TMR_SR_receiveMessage+0x178>
    685a:	01 e0       	ldi	r16, 0x01	; 1
    685c:	0b 8b       	std	Y+19, r16	; 0x13
    685e:	1b 89       	ldd	r17, Y+19	; 0x13
    6860:	11 11       	cpse	r17, r1
    6862:	18 c0       	rjmp	.+48     	; 0x6894 <TMR_SR_receiveMessage+0x1ae>
    6864:	47 e0       	ldi	r20, 0x07	; 7
    6866:	50 e0       	ldi	r21, 0x00	; 0
    6868:	46 1b       	sub	r20, r22
    686a:	57 0b       	sbc	r21, r23
    686c:	8a 01       	movw	r16, r20
    686e:	05 2e       	mov	r0, r21
    6870:	00 0c       	add	r0, r0
    6872:	22 0b       	sbc	r18, r18
    6874:	33 0b       	sbc	r19, r19
    6876:	09 83       	std	Y+1, r16	; 0x01
    6878:	1a 83       	std	Y+2, r17	; 0x02
    687a:	2b 83       	std	Y+3, r18	; 0x03
    687c:	3c 83       	std	Y+4, r19	; 0x04
    687e:	b4 01       	movw	r22, r8
    6880:	68 0f       	add	r22, r24
    6882:	71 1d       	adc	r23, r1
    6884:	c4 01       	movw	r24, r8
    6886:	0e 94 50 75 	call	0xeaa0	; 0xeaa0 <memmove>
    688a:	63 94       	inc	r6
    688c:	23 e1       	ldi	r18, 0x13	; 19
    688e:	26 15       	cp	r18, r6
    6890:	08 f0       	brcs	.+2      	; 0x6894 <TMR_SR_receiveMessage+0x1ae>
    6892:	82 cf       	rjmp	.-252    	; 0x6798 <TMR_SR_receiveMessage+0xb2>
    6894:	33 e1       	ldi	r19, 0x13	; 19
    6896:	36 15       	cp	r19, r6
    6898:	08 f4       	brcc	.+2      	; 0x689c <TMR_SR_receiveMessage+0x1b6>
    689a:	46 c1       	rjmp	.+652    	; 0x6b28 <TMR_SR_receiveMessage+0x442>
    689c:	f4 01       	movw	r30, r8
    689e:	61 80       	ldd	r6, Z+1	; 0x01
    68a0:	61 10       	cpse	r6, r1
    68a2:	05 c0       	rjmp	.+10     	; 0x68ae <TMR_SR_receiveMessage+0x1c8>
    68a4:	19 82       	std	Y+1, r1	; 0x01
    68a6:	1a 82       	std	Y+2, r1	; 0x02
    68a8:	1b 82       	std	Y+3, r1	; 0x03
    68aa:	1c 82       	std	Y+4, r1	; 0x04
    68ac:	20 c0       	rjmp	.+64     	; 0x68ee <TMR_SR_receiveMessage+0x208>
    68ae:	86 2d       	mov	r24, r6
    68b0:	90 e0       	ldi	r25, 0x00	; 0
    68b2:	8a 3f       	cpi	r24, 0xFA	; 250
    68b4:	91 05       	cpc	r25, r1
    68b6:	0c f0       	brlt	.+2      	; 0x68ba <TMR_SR_receiveMessage+0x1d4>
    68b8:	3c c1       	rjmp	.+632    	; 0x6b32 <TMR_SR_receiveMessage+0x44c>
    68ba:	ec 89       	ldd	r30, Y+20	; 0x14
    68bc:	fd 89       	ldd	r31, Y+21	; 0x15
    68be:	e0 58       	subi	r30, 0x80	; 128
    68c0:	fe 4f       	sbci	r31, 0xFE	; 254
    68c2:	06 80       	ldd	r0, Z+6	; 0x06
    68c4:	f7 81       	ldd	r31, Z+7	; 0x07
    68c6:	e0 2d       	mov	r30, r0
    68c8:	46 2d       	mov	r20, r6
    68ca:	50 e0       	ldi	r21, 0x00	; 0
    68cc:	60 e0       	ldi	r22, 0x00	; 0
    68ce:	70 e0       	ldi	r23, 0x00	; 0
    68d0:	c9 84       	ldd	r12, Y+9	; 0x09
    68d2:	da 84       	ldd	r13, Y+10	; 0x0a
    68d4:	eb 84       	ldd	r14, Y+11	; 0x0b
    68d6:	fc 84       	ldd	r15, Y+12	; 0x0c
    68d8:	84 01       	movw	r16, r8
    68da:	09 5f       	subi	r16, 0xF9	; 249
    68dc:	1f 4f       	sbci	r17, 0xFF	; 255
    68de:	9e 01       	movw	r18, r28
    68e0:	2f 5f       	subi	r18, 0xFF	; 255
    68e2:	3f 4f       	sbci	r19, 0xFF	; 255
    68e4:	89 89       	ldd	r24, Y+17	; 0x11
    68e6:	9a 89       	ldd	r25, Y+18	; 0x12
    68e8:	09 95       	icall
    68ea:	1b 01       	movw	r2, r22
    68ec:	2c 01       	movw	r4, r24
    68ee:	ec 89       	ldd	r30, Y+20	; 0x14
    68f0:	fd 89       	ldd	r31, Y+21	; 0x15
    68f2:	86 81       	ldd	r24, Z+6	; 0x06
    68f4:	97 81       	ldd	r25, Z+7	; 0x07
    68f6:	89 2b       	or	r24, r25
    68f8:	89 f0       	breq	.+34     	; 0x691c <TMR_SR_receiveMessage+0x236>
    68fa:	89 81       	ldd	r24, Y+1	; 0x01
    68fc:	9a 81       	ldd	r25, Y+2	; 0x02
    68fe:	ab 81       	ldd	r26, Y+3	; 0x03
    6900:	bc 81       	ldd	r27, Y+4	; 0x04
    6902:	9c 01       	movw	r18, r24
    6904:	ad 01       	movw	r20, r26
    6906:	29 5f       	subi	r18, 0xF9	; 249
    6908:	3f 4f       	sbci	r19, 0xFF	; 255
    690a:	4f 4f       	sbci	r20, 0xFF	; 255
    690c:	5f 4f       	sbci	r21, 0xFF	; 255
    690e:	e9 84       	ldd	r14, Y+9	; 0x09
    6910:	fa 84       	ldd	r15, Y+10	; 0x0a
    6912:	84 01       	movw	r16, r8
    6914:	60 e0       	ldi	r22, 0x00	; 0
    6916:	cf 01       	movw	r24, r30
    6918:	0e 94 1f 6c 	call	0xd83e	; 0xd83e <TMR__notifyTransportListeners>
    691c:	21 14       	cp	r2, r1
    691e:	31 04       	cpc	r3, r1
    6920:	41 04       	cpc	r4, r1
    6922:	51 04       	cpc	r5, r1
    6924:	09 f0       	breq	.+2      	; 0x6928 <TMR_SR_receiveMessage+0x242>
    6926:	0a c1       	rjmp	.+532    	; 0x6b3c <TMR_SR_receiveMessage+0x456>
    6928:	ec 89       	ldd	r30, Y+20	; 0x14
    692a:	fd 89       	ldd	r31, Y+21	; 0x15
    692c:	ed 50       	subi	r30, 0x0D	; 13
    692e:	fa 4f       	sbci	r31, 0xFA	; 250
    6930:	80 81       	ld	r24, Z
    6932:	88 23       	and	r24, r24
    6934:	e1 f0       	breq	.+56     	; 0x696e <TMR_SR_receiveMessage+0x288>
    6936:	64 e0       	ldi	r22, 0x04	; 4
    6938:	66 0d       	add	r22, r6
    693a:	c4 01       	movw	r24, r8
    693c:	01 96       	adiw	r24, 0x01	; 1
    693e:	99 d9       	rcall	.-3278   	; 0x5c72 <tm_crc>
    6940:	26 2d       	mov	r18, r6
    6942:	30 e0       	ldi	r19, 0x00	; 0
    6944:	f4 01       	movw	r30, r8
    6946:	e2 0f       	add	r30, r18
    6948:	f3 1f       	adc	r31, r19
    694a:	45 81       	ldd	r20, Z+5	; 0x05
    694c:	50 e0       	ldi	r21, 0x00	; 0
    694e:	69 2f       	mov	r22, r25
    6950:	77 27       	eor	r23, r23
    6952:	46 17       	cp	r20, r22
    6954:	57 07       	cpc	r21, r23
    6956:	09 f0       	breq	.+2      	; 0x695a <TMR_SR_receiveMessage+0x274>
    6958:	f6 c0       	rjmp	.+492    	; 0x6b46 <TMR_SR_receiveMessage+0x460>
    695a:	f4 01       	movw	r30, r8
    695c:	e2 0f       	add	r30, r18
    695e:	f3 1f       	adc	r31, r19
    6960:	26 81       	ldd	r18, Z+6	; 0x06
    6962:	30 e0       	ldi	r19, 0x00	; 0
    6964:	99 27       	eor	r25, r25
    6966:	28 17       	cp	r18, r24
    6968:	39 07       	cpc	r19, r25
    696a:	09 f0       	breq	.+2      	; 0x696e <TMR_SR_receiveMessage+0x288>
    696c:	f1 c0       	rjmp	.+482    	; 0x6b50 <TMR_SR_receiveMessage+0x46a>
    696e:	80 91 df 0b 	lds	r24, 0x0BDF	; 0x800bdf <onFlyCmdOpcode>
    6972:	88 23       	and	r24, r24
    6974:	09 f4       	brne	.+2      	; 0x6978 <TMR_SR_receiveMessage+0x292>
    6976:	41 c0       	rjmp	.+130    	; 0x69fa <TMR_SR_receiveMessage+0x314>
    6978:	ec 89       	ldd	r30, Y+20	; 0x14
    697a:	fd 89       	ldd	r31, Y+21	; 0x15
    697c:	ea 58       	subi	r30, 0x8A	; 138
    697e:	ff 4f       	sbci	r31, 0xFF	; 255
    6980:	90 81       	ld	r25, Z
    6982:	99 23       	and	r25, r25
    6984:	d1 f1       	breq	.+116    	; 0x69fa <TMR_SR_receiveMessage+0x314>
    6986:	f4 01       	movw	r30, r8
    6988:	92 81       	ldd	r25, Z+2	; 0x02
    698a:	89 13       	cpse	r24, r25
    698c:	08 c0       	rjmp	.+16     	; 0x699e <TMR_SR_receiveMessage+0x2b8>
    698e:	85 81       	ldd	r24, Z+5	; 0x05
    6990:	82 30       	cpi	r24, 0x02	; 2
    6992:	11 f0       	breq	.+4      	; 0x6998 <TMR_SR_receiveMessage+0x2b2>
    6994:	84 30       	cpi	r24, 0x04	; 4
    6996:	19 f4       	brne	.+6      	; 0x699e <TMR_SR_receiveMessage+0x2b8>
    6998:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <onFlyCmdOpcode>
    699c:	2e c0       	rjmp	.+92     	; 0x69fa <TMR_SR_receiveMessage+0x314>
    699e:	0e 94 06 03 	call	0x60c	; 0x60c <tmr_gettime>
    69a2:	a0 90 e0 0b 	lds	r10, 0x0BE0	; 0x800be0 <onFlyCmdSntTime>
    69a6:	b0 90 e1 0b 	lds	r11, 0x0BE1	; 0x800be1 <onFlyCmdSntTime+0x1>
    69aa:	c0 90 e2 0b 	lds	r12, 0x0BE2	; 0x800be2 <onFlyCmdSntTime+0x2>
    69ae:	d0 90 e3 0b 	lds	r13, 0x0BE3	; 0x800be3 <onFlyCmdSntTime+0x3>
    69b2:	e0 90 e4 0b 	lds	r14, 0x0BE4	; 0x800be4 <onFlyCmdSntTime+0x4>
    69b6:	f0 90 e5 0b 	lds	r15, 0x0BE5	; 0x800be5 <onFlyCmdSntTime+0x5>
    69ba:	00 91 e6 0b 	lds	r16, 0x0BE6	; 0x800be6 <onFlyCmdSntTime+0x6>
    69be:	10 91 e7 0b 	lds	r17, 0x0BE7	; 0x800be7 <onFlyCmdSntTime+0x7>
    69c2:	0e 94 1a 75 	call	0xea34	; 0xea34 <__subdi3>
    69c6:	c9 84       	ldd	r12, Y+9	; 0x09
    69c8:	da 84       	ldd	r13, Y+10	; 0x0a
    69ca:	eb 84       	ldd	r14, Y+11	; 0x0b
    69cc:	fc 84       	ldd	r15, Y+12	; 0x0c
    69ce:	56 01       	movw	r10, r12
    69d0:	67 01       	movw	r12, r14
    69d2:	e1 2c       	mov	r14, r1
    69d4:	f1 2c       	mov	r15, r1
    69d6:	87 01       	movw	r16, r14
    69d8:	a9 86       	std	Y+9, r10	; 0x09
    69da:	ba 86       	std	Y+10, r11	; 0x0a
    69dc:	cb 86       	std	Y+11, r12	; 0x0b
    69de:	dc 86       	std	Y+12, r13	; 0x0c
    69e0:	ed 86       	std	Y+13, r14	; 0x0d
    69e2:	fe 86       	std	Y+14, r15	; 0x0e
    69e4:	0f 87       	std	Y+15, r16	; 0x0f
    69e6:	18 8b       	std	Y+16, r17	; 0x10
    69e8:	e1 2c       	mov	r14, r1
    69ea:	f1 2c       	mov	r15, r1
    69ec:	00 e0       	ldi	r16, 0x00	; 0
    69ee:	10 e0       	ldi	r17, 0x00	; 0
    69f0:	0e 94 23 75 	call	0xea46	; 0xea46 <__cmpdi2>
    69f4:	11 f0       	breq	.+4      	; 0x69fa <TMR_SR_receiveMessage+0x314>
    69f6:	08 f0       	brcs	.+2      	; 0x69fa <TMR_SR_receiveMessage+0x314>
    69f8:	b0 c0       	rjmp	.+352    	; 0x6b5a <TMR_SR_receiveMessage+0x474>
    69fa:	f4 01       	movw	r30, r8
    69fc:	82 81       	ldd	r24, Z+2	; 0x02
    69fe:	78 16       	cp	r7, r24
    6a00:	19 f1       	breq	.+70     	; 0x6a48 <TMR_SR_receiveMessage+0x362>
    6a02:	8f 32       	cpi	r24, 0x2F	; 47
    6a04:	39 f4       	brne	.+14     	; 0x6a14 <TMR_SR_receiveMessage+0x32e>
    6a06:	ec 89       	ldd	r30, Y+20	; 0x14
    6a08:	fd 89       	ldd	r31, Y+21	; 0x15
    6a0a:	ea 58       	subi	r30, 0x8A	; 138
    6a0c:	ff 4f       	sbci	r31, 0xFF	; 255
    6a0e:	90 81       	ld	r25, Z
    6a10:	91 11       	cpse	r25, r1
    6a12:	1a c0       	rjmp	.+52     	; 0x6a48 <TMR_SR_receiveMessage+0x362>
    6a14:	8d 39       	cpi	r24, 0x9D	; 157
    6a16:	09 f4       	brne	.+2      	; 0x6a1a <TMR_SR_receiveMessage+0x334>
    6a18:	a5 c0       	rjmp	.+330    	; 0x6b64 <TMR_SR_receiveMessage+0x47e>
    6a1a:	84 30       	cpi	r24, 0x04	; 4
    6a1c:	09 f0       	breq	.+2      	; 0x6a20 <TMR_SR_receiveMessage+0x33a>
    6a1e:	a7 c0       	rjmp	.+334    	; 0x6b6e <TMR_SR_receiveMessage+0x488>
    6a20:	ec 89       	ldd	r30, Y+20	; 0x14
    6a22:	fd 89       	ldd	r31, Y+21	; 0x15
    6a24:	e0 58       	subi	r30, 0x80	; 128
    6a26:	fe 4f       	sbci	r31, 0xFE	; 254
    6a28:	64 85       	ldd	r22, Z+12	; 0x0c
    6a2a:	75 85       	ldd	r23, Z+13	; 0x0d
    6a2c:	89 89       	ldd	r24, Y+17	; 0x11
    6a2e:	9a 89       	ldd	r25, Y+18	; 0x12
    6a30:	fb 01       	movw	r30, r22
    6a32:	09 95       	icall
    6a34:	67 2b       	or	r22, r23
    6a36:	68 2b       	or	r22, r24
    6a38:	69 2b       	or	r22, r25
    6a3a:	09 f0       	breq	.+2      	; 0x6a3e <TMR_SR_receiveMessage+0x358>
    6a3c:	9d c0       	rjmp	.+314    	; 0x6b78 <TMR_SR_receiveMessage+0x492>
    6a3e:	67 e0       	ldi	r22, 0x07	; 7
    6a40:	70 e0       	ldi	r23, 0x00	; 0
    6a42:	80 e0       	ldi	r24, 0x00	; 0
    6a44:	91 e0       	ldi	r25, 0x01	; 1
    6a46:	a6 c0       	rjmp	.+332    	; 0x6b94 <TMR_SR_receiveMessage+0x4ae>
    6a48:	f4 01       	movw	r30, r8
    6a4a:	83 81       	ldd	r24, Z+3	; 0x03
    6a4c:	90 e0       	ldi	r25, 0x00	; 0
    6a4e:	98 2f       	mov	r25, r24
    6a50:	88 27       	eor	r24, r24
    6a52:	24 81       	ldd	r18, Z+4	; 0x04
    6a54:	82 2b       	or	r24, r18
    6a56:	00 97       	sbiw	r24, 0x00	; 0
    6a58:	09 f4       	brne	.+2      	; 0x6a5c <TMR_SR_receiveMessage+0x376>
    6a5a:	93 c0       	rjmp	.+294    	; 0x6b82 <TMR_SR_receiveMessage+0x49c>
    6a5c:	a0 e0       	ldi	r26, 0x00	; 0
    6a5e:	b0 e0       	ldi	r27, 0x00	; 0
    6a60:	6c 01       	movw	r12, r24
    6a62:	7d 01       	movw	r14, r26
    6a64:	68 94       	set
    6a66:	f1 f8       	bld	r15, 1
    6a68:	f1 e0       	ldi	r31, 0x01	; 1
    6a6a:	cf 16       	cp	r12, r31
    6a6c:	ff e7       	ldi	r31, 0x7F	; 127
    6a6e:	df 06       	cpc	r13, r31
    6a70:	e1 04       	cpc	r14, r1
    6a72:	f2 e0       	ldi	r31, 0x02	; 2
    6a74:	ff 06       	cpc	r15, r31
    6a76:	09 f0       	breq	.+2      	; 0x6a7a <TMR_SR_receiveMessage+0x394>
    6a78:	89 c0       	rjmp	.+274    	; 0x6b8c <TMR_SR_receiveMessage+0x4a6>
    6a7a:	0c 89       	ldd	r16, Y+20	; 0x14
    6a7c:	1d 89       	ldd	r17, Y+21	; 0x15
    6a7e:	0f 53       	subi	r16, 0x3F	; 63
    6a80:	1b 4f       	sbci	r17, 0xFB	; 251
    6a82:	80 e0       	ldi	r24, 0x00	; 0
    6a84:	91 e0       	ldi	r25, 0x01	; 1
    6a86:	f8 01       	movw	r30, r16
    6a88:	9c 01       	movw	r18, r24
    6a8a:	11 92       	st	Z+, r1
    6a8c:	21 50       	subi	r18, 0x01	; 1
    6a8e:	30 40       	sbci	r19, 0x00	; 0
    6a90:	e1 f7       	brne	.-8      	; 0x6a8a <TMR_SR_receiveMessage+0x3a4>
    6a92:	f4 01       	movw	r30, r8
    6a94:	85 81       	ldd	r24, Z+5	; 0x05
    6a96:	90 e0       	ldi	r25, 0x00	; 0
    6a98:	a0 e0       	ldi	r26, 0x00	; 0
    6a9a:	b0 e0       	ldi	r27, 0x00	; 0
    6a9c:	78 2f       	mov	r23, r24
    6a9e:	66 27       	eor	r22, r22
    6aa0:	55 27       	eor	r21, r21
    6aa2:	44 27       	eor	r20, r20
    6aa4:	86 81       	ldd	r24, Z+6	; 0x06
    6aa6:	90 e0       	ldi	r25, 0x00	; 0
    6aa8:	a0 e0       	ldi	r26, 0x00	; 0
    6aaa:	b0 e0       	ldi	r27, 0x00	; 0
    6aac:	dc 01       	movw	r26, r24
    6aae:	99 27       	eor	r25, r25
    6ab0:	88 27       	eor	r24, r24
    6ab2:	84 2b       	or	r24, r20
    6ab4:	95 2b       	or	r25, r21
    6ab6:	a6 2b       	or	r26, r22
    6ab8:	b7 2b       	or	r27, r23
    6aba:	47 81       	ldd	r20, Z+7	; 0x07
    6abc:	50 e0       	ldi	r21, 0x00	; 0
    6abe:	60 e0       	ldi	r22, 0x00	; 0
    6ac0:	70 e0       	ldi	r23, 0x00	; 0
    6ac2:	76 2f       	mov	r23, r22
    6ac4:	65 2f       	mov	r22, r21
    6ac6:	54 2f       	mov	r21, r20
    6ac8:	44 27       	eor	r20, r20
    6aca:	84 2b       	or	r24, r20
    6acc:	95 2b       	or	r25, r21
    6ace:	a6 2b       	or	r26, r22
    6ad0:	b7 2b       	or	r27, r23
    6ad2:	20 85       	ldd	r18, Z+8	; 0x08
    6ad4:	82 2b       	or	r24, r18
    6ad6:	bf 93       	push	r27
    6ad8:	af 93       	push	r26
    6ada:	9f 93       	push	r25
    6adc:	8f 93       	push	r24
    6ade:	8e ef       	ldi	r24, 0xFE	; 254
    6ae0:	91 e0       	ldi	r25, 0x01	; 1
    6ae2:	9f 93       	push	r25
    6ae4:	8f 93       	push	r24
    6ae6:	1f 93       	push	r17
    6ae8:	0f 93       	push	r16
    6aea:	0e 94 68 75 	call	0xead0	; 0xead0 <sprintf>
    6aee:	46 2d       	mov	r20, r6
    6af0:	50 e0       	ldi	r21, 0x00	; 0
    6af2:	44 50       	subi	r20, 0x04	; 4
    6af4:	51 09       	sbc	r21, r1
    6af6:	f8 01       	movw	r30, r16
    6af8:	01 90       	ld	r0, Z+
    6afa:	00 20       	and	r0, r0
    6afc:	e9 f7       	brne	.-6      	; 0x6af8 <TMR_SR_receiveMessage+0x412>
    6afe:	cf 01       	movw	r24, r30
    6b00:	b4 01       	movw	r22, r8
    6b02:	67 5f       	subi	r22, 0xF7	; 247
    6b04:	7f 4f       	sbci	r23, 0xFF	; 255
    6b06:	01 97       	sbiw	r24, 0x01	; 1
    6b08:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    6b0c:	0f b6       	in	r0, 0x3f	; 63
    6b0e:	f8 94       	cli
    6b10:	de bf       	out	0x3e, r29	; 62
    6b12:	0f be       	out	0x3f, r0	; 63
    6b14:	cd bf       	out	0x3d, r28	; 61
    6b16:	6c 2d       	mov	r22, r12
    6b18:	7d 2d       	mov	r23, r13
    6b1a:	8e 2d       	mov	r24, r14
    6b1c:	9f 2d       	mov	r25, r15
    6b1e:	3a c0       	rjmp	.+116    	; 0x6b94 <TMR_SR_receiveMessage+0x4ae>
    6b20:	73 2d       	mov	r23, r3
    6b22:	84 2d       	mov	r24, r4
    6b24:	95 2d       	mov	r25, r5
    6b26:	36 c0       	rjmp	.+108    	; 0x6b94 <TMR_SR_receiveMessage+0x4ae>
    6b28:	61 e0       	ldi	r22, 0x01	; 1
    6b2a:	70 e0       	ldi	r23, 0x00	; 0
    6b2c:	80 e0       	ldi	r24, 0x00	; 0
    6b2e:	91 e0       	ldi	r25, 0x01	; 1
    6b30:	31 c0       	rjmp	.+98     	; 0x6b94 <TMR_SR_receiveMessage+0x4ae>
    6b32:	66 e0       	ldi	r22, 0x06	; 6
    6b34:	70 e0       	ldi	r23, 0x00	; 0
    6b36:	80 e0       	ldi	r24, 0x00	; 0
    6b38:	93 e0       	ldi	r25, 0x03	; 3
    6b3a:	2c c0       	rjmp	.+88     	; 0x6b94 <TMR_SR_receiveMessage+0x4ae>
    6b3c:	62 2d       	mov	r22, r2
    6b3e:	73 2d       	mov	r23, r3
    6b40:	84 2d       	mov	r24, r4
    6b42:	95 2d       	mov	r25, r5
    6b44:	27 c0       	rjmp	.+78     	; 0x6b94 <TMR_SR_receiveMessage+0x4ae>
    6b46:	66 e0       	ldi	r22, 0x06	; 6
    6b48:	70 e0       	ldi	r23, 0x00	; 0
    6b4a:	80 e0       	ldi	r24, 0x00	; 0
    6b4c:	91 e0       	ldi	r25, 0x01	; 1
    6b4e:	22 c0       	rjmp	.+68     	; 0x6b94 <TMR_SR_receiveMessage+0x4ae>
    6b50:	66 e0       	ldi	r22, 0x06	; 6
    6b52:	70 e0       	ldi	r23, 0x00	; 0
    6b54:	80 e0       	ldi	r24, 0x00	; 0
    6b56:	91 e0       	ldi	r25, 0x01	; 1
    6b58:	1d c0       	rjmp	.+58     	; 0x6b94 <TMR_SR_receiveMessage+0x4ae>
    6b5a:	61 e0       	ldi	r22, 0x01	; 1
    6b5c:	70 e0       	ldi	r23, 0x00	; 0
    6b5e:	80 e0       	ldi	r24, 0x00	; 0
    6b60:	91 e0       	ldi	r25, 0x01	; 1
    6b62:	18 c0       	rjmp	.+48     	; 0x6b94 <TMR_SR_receiveMessage+0x4ae>
    6b64:	63 e1       	ldi	r22, 0x13	; 19
    6b66:	70 e0       	ldi	r23, 0x00	; 0
    6b68:	80 e0       	ldi	r24, 0x00	; 0
    6b6a:	93 e0       	ldi	r25, 0x03	; 3
    6b6c:	13 c0       	rjmp	.+38     	; 0x6b94 <TMR_SR_receiveMessage+0x4ae>
    6b6e:	65 e0       	ldi	r22, 0x05	; 5
    6b70:	70 e0       	ldi	r23, 0x00	; 0
    6b72:	80 e0       	ldi	r24, 0x00	; 0
    6b74:	91 e0       	ldi	r25, 0x01	; 1
    6b76:	0e c0       	rjmp	.+28     	; 0x6b94 <TMR_SR_receiveMessage+0x4ae>
    6b78:	65 e0       	ldi	r22, 0x05	; 5
    6b7a:	70 e0       	ldi	r23, 0x00	; 0
    6b7c:	80 e0       	ldi	r24, 0x00	; 0
    6b7e:	91 e0       	ldi	r25, 0x01	; 1
    6b80:	09 c0       	rjmp	.+18     	; 0x6b94 <TMR_SR_receiveMessage+0x4ae>
    6b82:	62 2d       	mov	r22, r2
    6b84:	73 2d       	mov	r23, r3
    6b86:	84 2d       	mov	r24, r4
    6b88:	95 2d       	mov	r25, r5
    6b8a:	04 c0       	rjmp	.+8      	; 0x6b94 <TMR_SR_receiveMessage+0x4ae>
    6b8c:	6c 2d       	mov	r22, r12
    6b8e:	7d 2d       	mov	r23, r13
    6b90:	8e 2d       	mov	r24, r14
    6b92:	9f 2d       	mov	r25, r15
    6b94:	65 96       	adiw	r28, 0x15	; 21
    6b96:	0f b6       	in	r0, 0x3f	; 63
    6b98:	f8 94       	cli
    6b9a:	de bf       	out	0x3e, r29	; 62
    6b9c:	0f be       	out	0x3f, r0	; 63
    6b9e:	cd bf       	out	0x3d, r28	; 61
    6ba0:	df 91       	pop	r29
    6ba2:	cf 91       	pop	r28
    6ba4:	1f 91       	pop	r17
    6ba6:	0f 91       	pop	r16
    6ba8:	ff 90       	pop	r15
    6baa:	ef 90       	pop	r14
    6bac:	df 90       	pop	r13
    6bae:	cf 90       	pop	r12
    6bb0:	bf 90       	pop	r11
    6bb2:	af 90       	pop	r10
    6bb4:	9f 90       	pop	r9
    6bb6:	8f 90       	pop	r8
    6bb8:	7f 90       	pop	r7
    6bba:	6f 90       	pop	r6
    6bbc:	5f 90       	pop	r5
    6bbe:	4f 90       	pop	r4
    6bc0:	3f 90       	pop	r3
    6bc2:	2f 90       	pop	r2
    6bc4:	08 95       	ret

00006bc6 <TMR_SR_sendTimeout>:
    6bc6:	8f 92       	push	r8
    6bc8:	9f 92       	push	r9
    6bca:	af 92       	push	r10
    6bcc:	bf 92       	push	r11
    6bce:	cf 92       	push	r12
    6bd0:	df 92       	push	r13
    6bd2:	ef 92       	push	r14
    6bd4:	ff 92       	push	r15
    6bd6:	0f 93       	push	r16
    6bd8:	1f 93       	push	r17
    6bda:	cf 93       	push	r28
    6bdc:	df 93       	push	r29
    6bde:	cd b7       	in	r28, 0x3d	; 61
    6be0:	de b7       	in	r29, 0x3e	; 62
    6be2:	c9 55       	subi	r28, 0x59	; 89
    6be4:	d3 40       	sbci	r29, 0x03	; 3
    6be6:	0f b6       	in	r0, 0x3f	; 63
    6be8:	f8 94       	cli
    6bea:	de bf       	out	0x3e, r29	; 62
    6bec:	0f be       	out	0x3f, r0	; 63
    6bee:	cd bf       	out	0x3d, r28	; 61
    6bf0:	7c 01       	movw	r14, r24
    6bf2:	6b 01       	movw	r12, r22
    6bf4:	49 01       	movw	r8, r18
    6bf6:	5a 01       	movw	r10, r20
    6bf8:	89 01       	movw	r16, r18
    6bfa:	9a 01       	movw	r18, r20
    6bfc:	ae 01       	movw	r20, r28
    6bfe:	4f 5f       	subi	r20, 0xFF	; 255
    6c00:	5f 4f       	sbci	r21, 0xFF	; 255
    6c02:	bf dc       	rcall	.-1666   	; 0x6582 <TMR_SR_sendMessage>
    6c04:	61 15       	cp	r22, r1
    6c06:	71 05       	cpc	r23, r1
    6c08:	81 05       	cpc	r24, r1
    6c0a:	91 05       	cpc	r25, r1
    6c0c:	09 f0       	breq	.+2      	; 0x6c10 <TMR_SR_sendTimeout+0x4a>
    6c0e:	63 c0       	rjmp	.+198    	; 0x6cd6 <TMR_SR_sendTimeout+0x110>
    6c10:	f7 01       	movw	r30, r14
    6c12:	e5 58       	subi	r30, 0x85	; 133
    6c14:	fe 4f       	sbci	r31, 0xFE	; 254
    6c16:	80 81       	ld	r24, Z
    6c18:	88 23       	and	r24, r24
    6c1a:	09 f4       	brne	.+2      	; 0x6c1e <TMR_SR_sendTimeout+0x58>
    6c1c:	53 c0       	rjmp	.+166    	; 0x6cc4 <TMR_SR_sendTimeout+0xfe>
    6c1e:	e5 50       	subi	r30, 0x05	; 5
    6c20:	f1 40       	sbci	r31, 0x01	; 1
    6c22:	80 81       	ld	r24, Z
    6c24:	81 11       	cpse	r24, r1
    6c26:	14 c0       	rjmp	.+40     	; 0x6c50 <TMR_SR_sendTimeout+0x8a>
    6c28:	4d c0       	rjmp	.+154    	; 0x6cc4 <TMR_SR_sendTimeout+0xfe>
    6c2a:	c7 01       	movw	r24, r14
    6c2c:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <TMR_SR_hasMoreTags>
    6c30:	67 2b       	or	r22, r23
    6c32:	68 2b       	or	r22, r24
    6c34:	69 2b       	or	r22, r25
    6c36:	61 f4       	brne	.+24     	; 0x6c50 <TMR_SR_sendTimeout+0x8a>
    6c38:	be 01       	movw	r22, r28
    6c3a:	6e 5f       	subi	r22, 0xFE	; 254
    6c3c:	7f 4f       	sbci	r23, 0xFF	; 255
    6c3e:	c7 01       	movw	r24, r14
    6c40:	0e 94 a3 1f 	call	0x3f46	; 0x3f46 <TMR_SR_getNextTag>
    6c44:	be 01       	movw	r22, r28
    6c46:	6e 5f       	subi	r22, 0xFE	; 254
    6c48:	7f 4f       	sbci	r23, 0xFF	; 255
    6c4a:	c7 01       	movw	r24, r14
    6c4c:	0e 94 55 71 	call	0xe2aa	; 0xe2aa <notify_read_listeners>
    6c50:	f7 01       	movw	r30, r14
    6c52:	e6 58       	subi	r30, 0x86	; 134
    6c54:	ff 4f       	sbci	r31, 0xFF	; 255
    6c56:	80 81       	ld	r24, Z
    6c58:	81 11       	cpse	r24, r1
    6c5a:	e7 cf       	rjmp	.-50     	; 0x6c2a <TMR_SR_sendTimeout+0x64>
    6c5c:	10 82       	st	Z, r1
    6c5e:	32 96       	adiw	r30, 0x02	; 2
    6c60:	40 81       	ld	r20, Z
    6c62:	b7 01       	movw	r22, r14
    6c64:	60 58       	subi	r22, 0x80	; 128
    6c66:	7f 4f       	sbci	r23, 0xFF	; 255
    6c68:	50 e0       	ldi	r21, 0x00	; 0
    6c6a:	c6 01       	movw	r24, r12
    6c6c:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    6c70:	8f ef       	ldi	r24, 0xFF	; 255
    6c72:	f6 01       	movw	r30, r12
    6c74:	80 83       	st	Z, r24
    6c76:	f7 01       	movw	r30, r14
    6c78:	e2 58       	subi	r30, 0x82	; 130
    6c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    6c7c:	60 81       	ld	r22, Z
    6c7e:	70 e0       	ldi	r23, 0x00	; 0
    6c80:	76 2f       	mov	r23, r22
    6c82:	66 27       	eor	r22, r22
    6c84:	31 96       	adiw	r30, 0x01	; 1
    6c86:	80 81       	ld	r24, Z
    6c88:	68 2b       	or	r22, r24
    6c8a:	cb 01       	movw	r24, r22
    6c8c:	a0 e0       	ldi	r26, 0x00	; 0
    6c8e:	b0 e0       	ldi	r27, 0x00	; 0
    6c90:	00 97       	sbiw	r24, 0x00	; 0
    6c92:	a1 05       	cpc	r26, r1
    6c94:	b1 05       	cpc	r27, r1
    6c96:	21 f0       	breq	.+8      	; 0x6ca0 <TMR_SR_sendTimeout+0xda>
    6c98:	bc 01       	movw	r22, r24
    6c9a:	cd 01       	movw	r24, r26
    6c9c:	92 60       	ori	r25, 0x02	; 2
    6c9e:	1b c0       	rjmp	.+54     	; 0x6cd6 <TMR_SR_sendTimeout+0x110>
    6ca0:	f6 01       	movw	r30, r12
    6ca2:	63 81       	ldd	r22, Z+3	; 0x03
    6ca4:	70 e0       	ldi	r23, 0x00	; 0
    6ca6:	76 2f       	mov	r23, r22
    6ca8:	66 27       	eor	r22, r22
    6caa:	84 81       	ldd	r24, Z+4	; 0x04
    6cac:	68 2b       	or	r22, r24
    6cae:	cb 01       	movw	r24, r22
    6cb0:	a0 e0       	ldi	r26, 0x00	; 0
    6cb2:	b0 e0       	ldi	r27, 0x00	; 0
    6cb4:	00 97       	sbiw	r24, 0x00	; 0
    6cb6:	a1 05       	cpc	r26, r1
    6cb8:	b1 05       	cpc	r27, r1
    6cba:	59 f0       	breq	.+22     	; 0x6cd2 <TMR_SR_sendTimeout+0x10c>
    6cbc:	bc 01       	movw	r22, r24
    6cbe:	cd 01       	movw	r24, r26
    6cc0:	92 60       	ori	r25, 0x02	; 2
    6cc2:	09 c0       	rjmp	.+18     	; 0x6cd6 <TMR_SR_sendTimeout+0x110>
    6cc4:	49 81       	ldd	r20, Y+1	; 0x01
    6cc6:	95 01       	movw	r18, r10
    6cc8:	84 01       	movw	r16, r8
    6cca:	b6 01       	movw	r22, r12
    6ccc:	c7 01       	movw	r24, r14
    6cce:	0b dd       	rcall	.-1514   	; 0x66e6 <TMR_SR_receiveMessage>
    6cd0:	02 c0       	rjmp	.+4      	; 0x6cd6 <TMR_SR_sendTimeout+0x110>
    6cd2:	bc 01       	movw	r22, r24
    6cd4:	cd 01       	movw	r24, r26
    6cd6:	c7 5a       	subi	r28, 0xA7	; 167
    6cd8:	dc 4f       	sbci	r29, 0xFC	; 252
    6cda:	0f b6       	in	r0, 0x3f	; 63
    6cdc:	f8 94       	cli
    6cde:	de bf       	out	0x3e, r29	; 62
    6ce0:	0f be       	out	0x3f, r0	; 63
    6ce2:	cd bf       	out	0x3d, r28	; 61
    6ce4:	df 91       	pop	r29
    6ce6:	cf 91       	pop	r28
    6ce8:	1f 91       	pop	r17
    6cea:	0f 91       	pop	r16
    6cec:	ff 90       	pop	r15
    6cee:	ef 90       	pop	r14
    6cf0:	df 90       	pop	r13
    6cf2:	cf 90       	pop	r12
    6cf4:	bf 90       	pop	r11
    6cf6:	af 90       	pop	r10
    6cf8:	9f 90       	pop	r9
    6cfa:	8f 90       	pop	r8
    6cfc:	08 95       	ret

00006cfe <TMR_SR_send>:
    6cfe:	fc 01       	movw	r30, r24
    6d00:	e0 52       	subi	r30, 0x20	; 32
    6d02:	fe 4f       	sbci	r31, 0xFE	; 254
    6d04:	20 81       	ld	r18, Z
    6d06:	31 81       	ldd	r19, Z+1	; 0x01
    6d08:	42 81       	ldd	r20, Z+2	; 0x02
    6d0a:	53 81       	ldd	r21, Z+3	; 0x03
    6d0c:	5c cf       	rjmp	.-328    	; 0x6bc6 <TMR_SR_sendTimeout>
    6d0e:	08 95       	ret

00006d10 <TMR_SR_sendCmd>:
    6d10:	43 50       	subi	r20, 0x03	; 3
    6d12:	fb 01       	movw	r30, r22
    6d14:	41 83       	std	Z+1, r20	; 0x01
    6d16:	f3 cf       	rjmp	.-26     	; 0x6cfe <TMR_SR_send>
    6d18:	08 95       	ret

00006d1a <TMR_SR_callSendCmd>:
    6d1a:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    6d1e:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    6d22:	2f 5f       	subi	r18, 0xFF	; 255
    6d24:	3f 4f       	sbci	r19, 0xFF	; 255
    6d26:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    6d2a:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    6d2e:	fb 01       	movw	r30, r22
    6d30:	42 83       	std	Z+2, r20	; 0x02
    6d32:	43 e0       	ldi	r20, 0x03	; 3
    6d34:	ed cf       	rjmp	.-38     	; 0x6d10 <TMR_SR_sendCmd>
    6d36:	08 95       	ret

00006d38 <TMR_SR_cmdFrameHeader>:
    6d38:	0f 93       	push	r16
    6d3a:	fb 01       	movw	r30, r22
    6d3c:	60 91 d6 0b 	lds	r22, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    6d40:	70 91 d7 0b 	lds	r23, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    6d44:	6f 5f       	subi	r22, 0xFF	; 255
    6d46:	7f 4f       	sbci	r23, 0xFF	; 255
    6d48:	70 93 d7 0b 	sts	0x0BD7, r23	; 0x800bd7 <totalMsgIdx+0x1>
    6d4c:	60 93 d6 0b 	sts	0x0BD6, r22	; 0x800bd6 <totalMsgIdx>
    6d50:	50 81       	ld	r21, Z
    6d52:	61 e0       	ldi	r22, 0x01	; 1
    6d54:	65 0f       	add	r22, r21
    6d56:	60 83       	st	Z, r22
    6d58:	dc 01       	movw	r26, r24
    6d5a:	a5 0f       	add	r26, r21
    6d5c:	b1 1d       	adc	r27, r1
    6d5e:	4c 93       	st	X, r20
    6d60:	40 91 d6 0b 	lds	r20, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    6d64:	50 91 d7 0b 	lds	r21, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    6d68:	4e 5f       	subi	r20, 0xFE	; 254
    6d6a:	5f 4f       	sbci	r21, 0xFF	; 255
    6d6c:	50 93 d7 0b 	sts	0x0BD7, r21	; 0x800bd7 <totalMsgIdx+0x1>
    6d70:	40 93 d6 0b 	sts	0x0BD6, r20	; 0x800bd6 <totalMsgIdx>
    6d74:	40 81       	ld	r20, Z
    6d76:	51 e0       	ldi	r21, 0x01	; 1
    6d78:	54 0f       	add	r21, r20
    6d7a:	50 83       	st	Z, r21
    6d7c:	dc 01       	movw	r26, r24
    6d7e:	a4 0f       	add	r26, r20
    6d80:	b1 1d       	adc	r27, r1
    6d82:	3c 93       	st	X, r19
    6d84:	30 81       	ld	r19, Z
    6d86:	41 e0       	ldi	r20, 0x01	; 1
    6d88:	43 0f       	add	r20, r19
    6d8a:	40 83       	st	Z, r20
    6d8c:	dc 01       	movw	r26, r24
    6d8e:	a3 0f       	add	r26, r19
    6d90:	b1 1d       	adc	r27, r1
    6d92:	2c 93       	st	X, r18
    6d94:	00 23       	and	r16, r16
    6d96:	91 f0       	breq	.+36     	; 0x6dbc <TMR_SR_cmdFrameHeader+0x84>
    6d98:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    6d9c:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    6da0:	2f 5f       	subi	r18, 0xFF	; 255
    6da2:	3f 4f       	sbci	r19, 0xFF	; 255
    6da4:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    6da8:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    6dac:	20 81       	ld	r18, Z
    6dae:	31 e0       	ldi	r19, 0x01	; 1
    6db0:	32 0f       	add	r19, r18
    6db2:	30 83       	st	Z, r19
    6db4:	dc 01       	movw	r26, r24
    6db6:	a2 0f       	add	r26, r18
    6db8:	b1 1d       	adc	r27, r1
    6dba:	1c 92       	st	X, r1
    6dbc:	20 91 de 0b 	lds	r18, 0x0BDE	; 0x800bde <isMultiSelectEnabled>
    6dc0:	22 23       	and	r18, r18
    6dc2:	b9 f0       	breq	.+46     	; 0x6df2 <TMR_SR_cmdFrameHeader+0xba>
    6dc4:	20 91 dd 0b 	lds	r18, 0x0BDD	; 0x800bdd <isEmbeddedTagopEnabled>
    6dc8:	21 11       	cpse	r18, r1
    6dca:	13 c0       	rjmp	.+38     	; 0x6df2 <TMR_SR_cmdFrameHeader+0xba>
    6dcc:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    6dd0:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    6dd4:	2f 5f       	subi	r18, 0xFF	; 255
    6dd6:	3f 4f       	sbci	r19, 0xFF	; 255
    6dd8:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    6ddc:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    6de0:	20 81       	ld	r18, Z
    6de2:	31 e0       	ldi	r19, 0x01	; 1
    6de4:	32 0f       	add	r19, r18
    6de6:	30 83       	st	Z, r19
    6de8:	fc 01       	movw	r30, r24
    6dea:	e2 0f       	add	r30, r18
    6dec:	f1 1d       	adc	r31, r1
    6dee:	28 e8       	ldi	r18, 0x88	; 136
    6df0:	20 83       	st	Z, r18
    6df2:	0f 91       	pop	r16
    6df4:	08 95       	ret

00006df6 <fillVersionInfo>:
    6df6:	0f 93       	push	r16
    6df8:	1f 93       	push	r17
    6dfa:	cf 93       	push	r28
    6dfc:	df 93       	push	r29
    6dfe:	fc 01       	movw	r30, r24
    6e00:	80 e0       	ldi	r24, 0x00	; 0
    6e02:	95 e0       	ldi	r25, 0x05	; 5
    6e04:	0a c0       	rjmp	.+20     	; 0x6e1a <fillVersionInfo+0x24>
    6e06:	db 01       	movw	r26, r22
    6e08:	a9 0f       	add	r26, r25
    6e0a:	b1 1d       	adc	r27, r1
    6e0c:	2c 91       	ld	r18, X
    6e0e:	df 01       	movw	r26, r30
    6e10:	a8 0f       	add	r26, r24
    6e12:	b1 1d       	adc	r27, r1
    6e14:	2c 93       	st	X, r18
    6e16:	8f 5f       	subi	r24, 0xFF	; 255
    6e18:	9f 5f       	subi	r25, 0xFF	; 255
    6e1a:	84 30       	cpi	r24, 0x04	; 4
    6e1c:	a0 f3       	brcs	.-24     	; 0x6e06 <fillVersionInfo+0x10>
    6e1e:	80 e0       	ldi	r24, 0x00	; 0
    6e20:	0b c0       	rjmp	.+22     	; 0x6e38 <fillVersionInfo+0x42>
    6e22:	db 01       	movw	r26, r22
    6e24:	a9 0f       	add	r26, r25
    6e26:	b1 1d       	adc	r27, r1
    6e28:	2c 91       	ld	r18, X
    6e2a:	df 01       	movw	r26, r30
    6e2c:	a8 0f       	add	r26, r24
    6e2e:	b1 1d       	adc	r27, r1
    6e30:	14 96       	adiw	r26, 0x04	; 4
    6e32:	2c 93       	st	X, r18
    6e34:	8f 5f       	subi	r24, 0xFF	; 255
    6e36:	9f 5f       	subi	r25, 0xFF	; 255
    6e38:	84 30       	cpi	r24, 0x04	; 4
    6e3a:	98 f3       	brcs	.-26     	; 0x6e22 <fillVersionInfo+0x2c>
    6e3c:	80 e0       	ldi	r24, 0x00	; 0
    6e3e:	0b c0       	rjmp	.+22     	; 0x6e56 <fillVersionInfo+0x60>
    6e40:	db 01       	movw	r26, r22
    6e42:	a9 0f       	add	r26, r25
    6e44:	b1 1d       	adc	r27, r1
    6e46:	2c 91       	ld	r18, X
    6e48:	df 01       	movw	r26, r30
    6e4a:	a8 0f       	add	r26, r24
    6e4c:	b1 1d       	adc	r27, r1
    6e4e:	18 96       	adiw	r26, 0x08	; 8
    6e50:	2c 93       	st	X, r18
    6e52:	8f 5f       	subi	r24, 0xFF	; 255
    6e54:	9f 5f       	subi	r25, 0xFF	; 255
    6e56:	84 30       	cpi	r24, 0x04	; 4
    6e58:	98 f3       	brcs	.-26     	; 0x6e40 <fillVersionInfo+0x4a>
    6e5a:	80 e0       	ldi	r24, 0x00	; 0
    6e5c:	0b c0       	rjmp	.+22     	; 0x6e74 <fillVersionInfo+0x7e>
    6e5e:	db 01       	movw	r26, r22
    6e60:	a9 0f       	add	r26, r25
    6e62:	b1 1d       	adc	r27, r1
    6e64:	2c 91       	ld	r18, X
    6e66:	df 01       	movw	r26, r30
    6e68:	a8 0f       	add	r26, r24
    6e6a:	b1 1d       	adc	r27, r1
    6e6c:	1c 96       	adiw	r26, 0x0c	; 12
    6e6e:	2c 93       	st	X, r18
    6e70:	8f 5f       	subi	r24, 0xFF	; 255
    6e72:	9f 5f       	subi	r25, 0xFF	; 255
    6e74:	84 30       	cpi	r24, 0x04	; 4
    6e76:	98 f3       	brcs	.-26     	; 0x6e5e <fillVersionInfo+0x68>
    6e78:	9c 5f       	subi	r25, 0xFC	; 252
    6e7a:	69 0f       	add	r22, r25
    6e7c:	71 1d       	adc	r23, r1
    6e7e:	db 01       	movw	r26, r22
    6e80:	14 97       	sbiw	r26, 0x04	; 4
    6e82:	8c 91       	ld	r24, X
    6e84:	90 e0       	ldi	r25, 0x00	; 0
    6e86:	a0 e0       	ldi	r26, 0x00	; 0
    6e88:	b0 e0       	ldi	r27, 0x00	; 0
    6e8a:	38 2f       	mov	r19, r24
    6e8c:	22 27       	eor	r18, r18
    6e8e:	11 27       	eor	r17, r17
    6e90:	00 27       	eor	r16, r16
    6e92:	db 01       	movw	r26, r22
    6e94:	13 97       	sbiw	r26, 0x03	; 3
    6e96:	9c 91       	ld	r25, X
    6e98:	89 2f       	mov	r24, r25
    6e9a:	90 e0       	ldi	r25, 0x00	; 0
    6e9c:	a0 e0       	ldi	r26, 0x00	; 0
    6e9e:	b0 e0       	ldi	r27, 0x00	; 0
    6ea0:	dc 01       	movw	r26, r24
    6ea2:	99 27       	eor	r25, r25
    6ea4:	88 27       	eor	r24, r24
    6ea6:	80 2b       	or	r24, r16
    6ea8:	91 2b       	or	r25, r17
    6eaa:	a2 2b       	or	r26, r18
    6eac:	b3 2b       	or	r27, r19
    6eae:	eb 01       	movw	r28, r22
    6eb0:	22 97       	sbiw	r28, 0x02	; 2
    6eb2:	08 81       	ld	r16, Y
    6eb4:	10 e0       	ldi	r17, 0x00	; 0
    6eb6:	20 e0       	ldi	r18, 0x00	; 0
    6eb8:	30 e0       	ldi	r19, 0x00	; 0
    6eba:	32 2f       	mov	r19, r18
    6ebc:	21 2f       	mov	r18, r17
    6ebe:	10 2f       	mov	r17, r16
    6ec0:	00 27       	eor	r16, r16
    6ec2:	80 2b       	or	r24, r16
    6ec4:	91 2b       	or	r25, r17
    6ec6:	a2 2b       	or	r26, r18
    6ec8:	b3 2b       	or	r27, r19
    6eca:	21 96       	adiw	r28, 0x01	; 1
    6ecc:	28 81       	ld	r18, Y
    6ece:	82 2b       	or	r24, r18
    6ed0:	80 8b       	std	Z+16, r24	; 0x10
    6ed2:	91 8b       	std	Z+17, r25	; 0x11
    6ed4:	a2 8b       	std	Z+18, r26	; 0x12
    6ed6:	b3 8b       	std	Z+19, r27	; 0x13
    6ed8:	df 91       	pop	r29
    6eda:	cf 91       	pop	r28
    6edc:	1f 91       	pop	r17
    6ede:	0f 91       	pop	r16
    6ee0:	08 95       	ret

00006ee2 <TMR_SR_cmdVersion>:
    6ee2:	0f 93       	push	r16
    6ee4:	1f 93       	push	r17
    6ee6:	cf 93       	push	r28
    6ee8:	df 93       	push	r29
    6eea:	cd b7       	in	r28, 0x3d	; 61
    6eec:	de b7       	in	r29, 0x3e	; 62
    6eee:	da 95       	dec	r29
    6ef0:	0f b6       	in	r0, 0x3f	; 63
    6ef2:	f8 94       	cli
    6ef4:	de bf       	out	0x3e, r29	; 62
    6ef6:	0f be       	out	0x3f, r0	; 63
    6ef8:	cd bf       	out	0x3d, r28	; 61
    6efa:	8b 01       	movw	r16, r22
    6efc:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    6f00:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    6f04:	2f 5f       	subi	r18, 0xFF	; 255
    6f06:	3f 4f       	sbci	r19, 0xFF	; 255
    6f08:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    6f0c:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    6f10:	23 e0       	ldi	r18, 0x03	; 3
    6f12:	2b 83       	std	Y+3, r18	; 0x03
    6f14:	1a 82       	std	Y+2, r1	; 0x02
    6f16:	20 e0       	ldi	r18, 0x00	; 0
    6f18:	30 e0       	ldi	r19, 0x00	; 0
    6f1a:	a9 01       	movw	r20, r18
    6f1c:	be 01       	movw	r22, r28
    6f1e:	6f 5f       	subi	r22, 0xFF	; 255
    6f20:	7f 4f       	sbci	r23, 0xFF	; 255
    6f22:	51 de       	rcall	.-862    	; 0x6bc6 <TMR_SR_sendTimeout>
    6f24:	61 15       	cp	r22, r1
    6f26:	71 05       	cpc	r23, r1
    6f28:	81 05       	cpc	r24, r1
    6f2a:	91 05       	cpc	r25, r1
    6f2c:	69 f4       	brne	.+26     	; 0x6f48 <TMR_SR_cmdVersion+0x66>
    6f2e:	01 15       	cp	r16, r1
    6f30:	11 05       	cpc	r17, r1
    6f32:	71 f0       	breq	.+28     	; 0x6f50 <TMR_SR_cmdVersion+0x6e>
    6f34:	be 01       	movw	r22, r28
    6f36:	6f 5f       	subi	r22, 0xFF	; 255
    6f38:	7f 4f       	sbci	r23, 0xFF	; 255
    6f3a:	c8 01       	movw	r24, r16
    6f3c:	5c df       	rcall	.-328    	; 0x6df6 <fillVersionInfo>
    6f3e:	40 e0       	ldi	r20, 0x00	; 0
    6f40:	30 e0       	ldi	r19, 0x00	; 0
    6f42:	20 e0       	ldi	r18, 0x00	; 0
    6f44:	90 e0       	ldi	r25, 0x00	; 0
    6f46:	08 c0       	rjmp	.+16     	; 0x6f58 <TMR_SR_cmdVersion+0x76>
    6f48:	46 2f       	mov	r20, r22
    6f4a:	37 2f       	mov	r19, r23
    6f4c:	28 2f       	mov	r18, r24
    6f4e:	04 c0       	rjmp	.+8      	; 0x6f58 <TMR_SR_cmdVersion+0x76>
    6f50:	40 e0       	ldi	r20, 0x00	; 0
    6f52:	30 e0       	ldi	r19, 0x00	; 0
    6f54:	20 e0       	ldi	r18, 0x00	; 0
    6f56:	90 e0       	ldi	r25, 0x00	; 0
    6f58:	64 2f       	mov	r22, r20
    6f5a:	73 2f       	mov	r23, r19
    6f5c:	82 2f       	mov	r24, r18
    6f5e:	d3 95       	inc	r29
    6f60:	0f b6       	in	r0, 0x3f	; 63
    6f62:	f8 94       	cli
    6f64:	de bf       	out	0x3e, r29	; 62
    6f66:	0f be       	out	0x3f, r0	; 63
    6f68:	cd bf       	out	0x3d, r28	; 61
    6f6a:	df 91       	pop	r29
    6f6c:	cf 91       	pop	r28
    6f6e:	1f 91       	pop	r17
    6f70:	0f 91       	pop	r16
    6f72:	08 95       	ret

00006f74 <TMR_SR_cmdBootFirmware>:
    6f74:	0f 93       	push	r16
    6f76:	1f 93       	push	r17
    6f78:	cf 93       	push	r28
    6f7a:	df 93       	push	r29
    6f7c:	cd b7       	in	r28, 0x3d	; 61
    6f7e:	de b7       	in	r29, 0x3e	; 62
    6f80:	da 95       	dec	r29
    6f82:	0f b6       	in	r0, 0x3f	; 63
    6f84:	f8 94       	cli
    6f86:	de bf       	out	0x3e, r29	; 62
    6f88:	0f be       	out	0x3f, r0	; 63
    6f8a:	cd bf       	out	0x3d, r28	; 61
    6f8c:	8c 01       	movw	r16, r24
    6f8e:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    6f92:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    6f96:	01 96       	adiw	r24, 0x01	; 1
    6f98:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    6f9c:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    6fa0:	84 e0       	ldi	r24, 0x04	; 4
    6fa2:	8b 83       	std	Y+3, r24	; 0x03
    6fa4:	1a 82       	std	Y+2, r1	; 0x02
    6fa6:	28 ee       	ldi	r18, 0xE8	; 232
    6fa8:	33 e0       	ldi	r19, 0x03	; 3
    6faa:	40 e0       	ldi	r20, 0x00	; 0
    6fac:	50 e0       	ldi	r21, 0x00	; 0
    6fae:	be 01       	movw	r22, r28
    6fb0:	6f 5f       	subi	r22, 0xFF	; 255
    6fb2:	7f 4f       	sbci	r23, 0xFF	; 255
    6fb4:	c8 01       	movw	r24, r16
    6fb6:	07 de       	rcall	.-1010   	; 0x6bc6 <TMR_SR_sendTimeout>
    6fb8:	61 15       	cp	r22, r1
    6fba:	71 05       	cpc	r23, r1
    6fbc:	81 05       	cpc	r24, r1
    6fbe:	91 05       	cpc	r25, r1
    6fc0:	61 f4       	brne	.+24     	; 0x6fda <TMR_SR_cmdBootFirmware+0x66>
    6fc2:	be 01       	movw	r22, r28
    6fc4:	6f 5f       	subi	r22, 0xFF	; 255
    6fc6:	7f 4f       	sbci	r23, 0xFF	; 255
    6fc8:	c8 01       	movw	r24, r16
    6fca:	83 59       	subi	r24, 0x93	; 147
    6fcc:	9c 4f       	sbci	r25, 0xFC	; 252
    6fce:	13 df       	rcall	.-474    	; 0x6df6 <fillVersionInfo>
    6fd0:	40 e0       	ldi	r20, 0x00	; 0
    6fd2:	30 e0       	ldi	r19, 0x00	; 0
    6fd4:	20 e0       	ldi	r18, 0x00	; 0
    6fd6:	90 e0       	ldi	r25, 0x00	; 0
    6fd8:	03 c0       	rjmp	.+6      	; 0x6fe0 <TMR_SR_cmdBootFirmware+0x6c>
    6fda:	46 2f       	mov	r20, r22
    6fdc:	37 2f       	mov	r19, r23
    6fde:	28 2f       	mov	r18, r24
    6fe0:	64 2f       	mov	r22, r20
    6fe2:	73 2f       	mov	r23, r19
    6fe4:	82 2f       	mov	r24, r18
    6fe6:	d3 95       	inc	r29
    6fe8:	0f b6       	in	r0, 0x3f	; 63
    6fea:	f8 94       	cli
    6fec:	de bf       	out	0x3e, r29	; 62
    6fee:	0f be       	out	0x3f, r0	; 63
    6ff0:	cd bf       	out	0x3d, r28	; 61
    6ff2:	df 91       	pop	r29
    6ff4:	cf 91       	pop	r28
    6ff6:	1f 91       	pop	r17
    6ff8:	0f 91       	pop	r16
    6ffa:	08 95       	ret

00006ffc <TMR_SR_cmdSetBaudRate>:
    6ffc:	cf 93       	push	r28
    6ffe:	df 93       	push	r29
    7000:	cd b7       	in	r28, 0x3d	; 61
    7002:	de b7       	in	r29, 0x3e	; 62
    7004:	da 95       	dec	r29
    7006:	0f b6       	in	r0, 0x3f	; 63
    7008:	f8 94       	cli
    700a:	de bf       	out	0x3e, r29	; 62
    700c:	0f be       	out	0x3f, r0	; 63
    700e:	cd bf       	out	0x3d, r28	; 61
    7010:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7014:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7018:	e6 e0       	ldi	r30, 0x06	; 6
    701a:	eb 83       	std	Y+3, r30	; 0x03
    701c:	2b 5f       	subi	r18, 0xFB	; 251
    701e:	3f 4f       	sbci	r19, 0xFF	; 255
    7020:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    7024:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    7028:	7c 83       	std	Y+4, r23	; 0x04
    702a:	6d 83       	std	Y+5, r22	; 0x05
    702c:	5e 83       	std	Y+6, r21	; 0x06
    702e:	4f 83       	std	Y+7, r20	; 0x07
    7030:	47 e0       	ldi	r20, 0x07	; 7
    7032:	be 01       	movw	r22, r28
    7034:	6f 5f       	subi	r22, 0xFF	; 255
    7036:	7f 4f       	sbci	r23, 0xFF	; 255
    7038:	6b de       	rcall	.-810    	; 0x6d10 <TMR_SR_sendCmd>
    703a:	d3 95       	inc	r29
    703c:	0f b6       	in	r0, 0x3f	; 63
    703e:	f8 94       	cli
    7040:	de bf       	out	0x3e, r29	; 62
    7042:	0f be       	out	0x3f, r0	; 63
    7044:	cd bf       	out	0x3d, r28	; 61
    7046:	df 91       	pop	r29
    7048:	cf 91       	pop	r28
    704a:	08 95       	ret

0000704c <TMR_SR_cmdGetHardwareVersion>:
    704c:	ef 92       	push	r14
    704e:	ff 92       	push	r15
    7050:	0f 93       	push	r16
    7052:	1f 93       	push	r17
    7054:	cf 93       	push	r28
    7056:	df 93       	push	r29
    7058:	cd b7       	in	r28, 0x3d	; 61
    705a:	de b7       	in	r29, 0x3e	; 62
    705c:	da 95       	dec	r29
    705e:	0f b6       	in	r0, 0x3f	; 63
    7060:	f8 94       	cli
    7062:	de bf       	out	0x3e, r29	; 62
    7064:	0f be       	out	0x3f, r0	; 63
    7066:	cd bf       	out	0x3d, r28	; 61
    7068:	79 01       	movw	r14, r18
    706a:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    706e:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7072:	50 e1       	ldi	r21, 0x10	; 16
    7074:	5b 83       	std	Y+3, r21	; 0x03
    7076:	6c 83       	std	Y+4, r22	; 0x04
    7078:	2d 5f       	subi	r18, 0xFD	; 253
    707a:	3f 4f       	sbci	r19, 0xFF	; 255
    707c:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    7080:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    7084:	4d 83       	std	Y+5, r20	; 0x05
    7086:	45 e0       	ldi	r20, 0x05	; 5
    7088:	be 01       	movw	r22, r28
    708a:	6f 5f       	subi	r22, 0xFF	; 255
    708c:	7f 4f       	sbci	r23, 0xFF	; 255
    708e:	40 de       	rcall	.-896    	; 0x6d10 <TMR_SR_sendCmd>
    7090:	61 15       	cp	r22, r1
    7092:	71 05       	cpc	r23, r1
    7094:	81 05       	cpc	r24, r1
    7096:	91 05       	cpc	r25, r1
    7098:	b1 f0       	breq	.+44     	; 0x70c6 <TMR_SR_cmdGetHardwareVersion+0x7a>
    709a:	f7 01       	movw	r30, r14
    709c:	10 82       	st	Z, r1
    709e:	46 2f       	mov	r20, r22
    70a0:	37 2f       	mov	r19, r23
    70a2:	28 2f       	mov	r18, r24
    70a4:	1e c0       	rjmp	.+60     	; 0x70e2 <TMR_SR_cmdGetHardwareVersion+0x96>
    70a6:	82 2f       	mov	r24, r18
    70a8:	90 e0       	ldi	r25, 0x00	; 0
    70aa:	d8 01       	movw	r26, r16
    70ac:	a8 0f       	add	r26, r24
    70ae:	b9 1f       	adc	r27, r25
    70b0:	05 96       	adiw	r24, 0x05	; 5
    70b2:	e1 e0       	ldi	r30, 0x01	; 1
    70b4:	f0 e0       	ldi	r31, 0x00	; 0
    70b6:	ec 0f       	add	r30, r28
    70b8:	fd 1f       	adc	r31, r29
    70ba:	e8 0f       	add	r30, r24
    70bc:	f9 1f       	adc	r31, r25
    70be:	80 81       	ld	r24, Z
    70c0:	8c 93       	st	X, r24
    70c2:	2f 5f       	subi	r18, 0xFF	; 255
    70c4:	01 c0       	rjmp	.+2      	; 0x70c8 <TMR_SR_cmdGetHardwareVersion+0x7c>
    70c6:	20 e0       	ldi	r18, 0x00	; 0
    70c8:	8a 81       	ldd	r24, Y+2	; 0x02
    70ca:	28 17       	cp	r18, r24
    70cc:	20 f4       	brcc	.+8      	; 0x70d6 <TMR_SR_cmdGetHardwareVersion+0x8a>
    70ce:	f7 01       	movw	r30, r14
    70d0:	90 81       	ld	r25, Z
    70d2:	29 17       	cp	r18, r25
    70d4:	40 f3       	brcs	.-48     	; 0x70a6 <TMR_SR_cmdGetHardwareVersion+0x5a>
    70d6:	f7 01       	movw	r30, r14
    70d8:	80 83       	st	Z, r24
    70da:	40 e0       	ldi	r20, 0x00	; 0
    70dc:	30 e0       	ldi	r19, 0x00	; 0
    70de:	20 e0       	ldi	r18, 0x00	; 0
    70e0:	90 e0       	ldi	r25, 0x00	; 0
    70e2:	64 2f       	mov	r22, r20
    70e4:	73 2f       	mov	r23, r19
    70e6:	82 2f       	mov	r24, r18
    70e8:	d3 95       	inc	r29
    70ea:	0f b6       	in	r0, 0x3f	; 63
    70ec:	f8 94       	cli
    70ee:	de bf       	out	0x3e, r29	; 62
    70f0:	0f be       	out	0x3f, r0	; 63
    70f2:	cd bf       	out	0x3d, r28	; 61
    70f4:	df 91       	pop	r29
    70f6:	cf 91       	pop	r28
    70f8:	1f 91       	pop	r17
    70fa:	0f 91       	pop	r16
    70fc:	ff 90       	pop	r15
    70fe:	ef 90       	pop	r14
    7100:	08 95       	ret

00007102 <TMR_SR_msgSetupReadTagMultipleWithMetadata>:
    7102:	2f 92       	push	r2
    7104:	3f 92       	push	r3
    7106:	4f 92       	push	r4
    7108:	5f 92       	push	r5
    710a:	6f 92       	push	r6
    710c:	7f 92       	push	r7
    710e:	8f 92       	push	r8
    7110:	9f 92       	push	r9
    7112:	af 92       	push	r10
    7114:	bf 92       	push	r11
    7116:	cf 92       	push	r12
    7118:	df 92       	push	r13
    711a:	ef 92       	push	r14
    711c:	ff 92       	push	r15
    711e:	0f 93       	push	r16
    7120:	1f 93       	push	r17
    7122:	cf 93       	push	r28
    7124:	df 93       	push	r29
    7126:	00 d0       	rcall	.+0      	; 0x7128 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x26>
    7128:	00 d0       	rcall	.+0      	; 0x712a <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x28>
    712a:	cd b7       	in	r28, 0x3d	; 61
    712c:	de b7       	in	r29, 0x3e	; 62
    712e:	3c 01       	movw	r6, r24
    7130:	2b 01       	movw	r4, r22
    7132:	4a 01       	movw	r8, r20
    7134:	16 01       	movw	r2, r12
    7136:	ba 2c       	mov	r11, r10
    7138:	fc 01       	movw	r30, r24
    713a:	e0 54       	subi	r30, 0x40	; 64
    713c:	fb 4f       	sbci	r31, 0xFB	; 251
    713e:	82 e2       	ldi	r24, 0x22	; 34
    7140:	80 83       	st	Z, r24
    7142:	c1 14       	cp	r12, r1
    7144:	d1 04       	cpc	r13, r1
    7146:	31 f0       	breq	.+12     	; 0x7154 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x52>
    7148:	d6 01       	movw	r26, r12
    714a:	8c 91       	ld	r24, X
    714c:	88 23       	and	r24, r24
    714e:	21 f0       	breq	.+8      	; 0x7158 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x56>
    7150:	81 e0       	ldi	r24, 0x01	; 1
    7152:	03 c0       	rjmp	.+6      	; 0x715a <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x58>
    7154:	81 e0       	ldi	r24, 0x01	; 1
    7156:	01 c0       	rjmp	.+2      	; 0x715a <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x58>
    7158:	80 e0       	ldi	r24, 0x00	; 0
    715a:	80 93 de 0b 	sts	0x0BDE, r24	; 0x800bde <isMultiSelectEnabled>
    715e:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7162:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7166:	01 96       	adiw	r24, 0x01	; 1
    7168:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    716c:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7170:	f4 01       	movw	r30, r8
    7172:	80 81       	ld	r24, Z
    7174:	91 e0       	ldi	r25, 0x01	; 1
    7176:	98 0f       	add	r25, r24
    7178:	90 83       	st	Z, r25
    717a:	f2 01       	movw	r30, r4
    717c:	e8 0f       	add	r30, r24
    717e:	f1 1d       	adc	r31, r1
    7180:	82 e2       	ldi	r24, 0x22	; 34
    7182:	80 83       	st	Z, r24
    7184:	f3 01       	movw	r30, r6
    7186:	e7 50       	subi	r30, 0x07	; 7
    7188:	fa 4f       	sbci	r31, 0xFA	; 250
    718a:	80 81       	ld	r24, Z
    718c:	81 11       	cpse	r24, r1
    718e:	02 c0       	rjmp	.+4      	; 0x7194 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x92>
    7190:	90 e0       	ldi	r25, 0x00	; 0
    7192:	01 c0       	rjmp	.+2      	; 0x7196 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x94>
    7194:	91 e8       	ldi	r25, 0x81	; 129
    7196:	f3 01       	movw	r30, r6
    7198:	e3 5f       	subi	r30, 0xF3	; 243
    719a:	f9 4f       	sbci	r31, 0xF9	; 249
    719c:	80 81       	ld	r24, Z
    719e:	81 11       	cpse	r24, r1
    71a0:	94 68       	ori	r25, 0x84	; 132
    71a2:	80 91 de 0b 	lds	r24, 0x0BDE	; 0x800bde <isMultiSelectEnabled>
    71a6:	88 23       	and	r24, r24
    71a8:	71 f1       	breq	.+92     	; 0x7206 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x104>
    71aa:	98 68       	ori	r25, 0x88	; 136
    71ac:	d3 01       	movw	r26, r6
    71ae:	d2 96       	adiw	r26, 0x32	; 50
    71b0:	ed 91       	ld	r30, X+
    71b2:	fc 91       	ld	r31, X
    71b4:	d3 97       	sbiw	r26, 0x33	; 51
    71b6:	80 81       	ld	r24, Z
    71b8:	81 30       	cpi	r24, 0x01	; 1
    71ba:	39 f4       	brne	.+14     	; 0x71ca <TMR_SR_msgSetupReadTagMultipleWithMetadata+0xc8>
    71bc:	47 85       	ldd	r20, Z+15	; 0x0f
    71be:	50 89       	ldd	r21, Z+16	; 0x10
    71c0:	45 2b       	or	r20, r21
    71c2:	19 f0       	breq	.+6      	; 0x71ca <TMR_SR_msgSetupReadTagMultipleWithMetadata+0xc8>
    71c4:	80 93 dd 0b 	sts	0x0BDD, r24	; 0x800bdd <isEmbeddedTagopEnabled>
    71c8:	1e c0       	rjmp	.+60     	; 0x7206 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x104>
    71ca:	82 30       	cpi	r24, 0x02	; 2
    71cc:	e1 f4       	brne	.+56     	; 0x7206 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x104>
    71ce:	17 c0       	rjmp	.+46     	; 0x71fe <TMR_SR_msgSetupReadTagMultipleWithMetadata+0xfc>
    71d0:	66 81       	ldd	r22, Z+6	; 0x06
    71d2:	77 81       	ldd	r23, Z+7	; 0x07
    71d4:	48 2f       	mov	r20, r24
    71d6:	50 e0       	ldi	r21, 0x00	; 0
    71d8:	44 0f       	add	r20, r20
    71da:	55 1f       	adc	r21, r21
    71dc:	db 01       	movw	r26, r22
    71de:	a4 0f       	add	r26, r20
    71e0:	b5 1f       	adc	r27, r21
    71e2:	0d 90       	ld	r0, X+
    71e4:	bc 91       	ld	r27, X
    71e6:	a0 2d       	mov	r26, r0
    71e8:	1f 96       	adiw	r26, 0x0f	; 15
    71ea:	4d 91       	ld	r20, X+
    71ec:	5c 91       	ld	r21, X
    71ee:	50 97       	sbiw	r26, 0x10	; 16
    71f0:	45 2b       	or	r20, r21
    71f2:	19 f0       	breq	.+6      	; 0x71fa <TMR_SR_msgSetupReadTagMultipleWithMetadata+0xf8>
    71f4:	41 e0       	ldi	r20, 0x01	; 1
    71f6:	40 93 dd 0b 	sts	0x0BDD, r20	; 0x800bdd <isEmbeddedTagopEnabled>
    71fa:	8f 5f       	subi	r24, 0xFF	; 255
    71fc:	01 c0       	rjmp	.+2      	; 0x7200 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0xfe>
    71fe:	80 e0       	ldi	r24, 0x00	; 0
    7200:	44 85       	ldd	r20, Z+12	; 0x0c
    7202:	84 17       	cp	r24, r20
    7204:	28 f3       	brcs	.-54     	; 0x71d0 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0xce>
    7206:	99 23       	and	r25, r25
    7208:	99 f0       	breq	.+38     	; 0x7230 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x12e>
    720a:	40 91 d6 0b 	lds	r20, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    720e:	50 91 d7 0b 	lds	r21, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7212:	4f 5f       	subi	r20, 0xFF	; 255
    7214:	5f 4f       	sbci	r21, 0xFF	; 255
    7216:	50 93 d7 0b 	sts	0x0BD7, r21	; 0x800bd7 <totalMsgIdx+0x1>
    721a:	40 93 d6 0b 	sts	0x0BD6, r20	; 0x800bd6 <totalMsgIdx>
    721e:	f4 01       	movw	r30, r8
    7220:	80 81       	ld	r24, Z
    7222:	41 e0       	ldi	r20, 0x01	; 1
    7224:	48 0f       	add	r20, r24
    7226:	40 83       	st	Z, r20
    7228:	f2 01       	movw	r30, r4
    722a:	e8 0f       	add	r30, r24
    722c:	f1 1d       	adc	r31, r1
    722e:	90 83       	st	Z, r25
    7230:	d4 01       	movw	r26, r8
    7232:	dc 90       	ld	r13, X
    7234:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7238:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    723c:	01 96       	adiw	r24, 0x01	; 1
    723e:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    7242:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7246:	8c 91       	ld	r24, X
    7248:	91 e0       	ldi	r25, 0x01	; 1
    724a:	98 0f       	add	r25, r24
    724c:	9c 93       	st	X, r25
    724e:	f2 01       	movw	r30, r4
    7250:	e8 0f       	add	r30, r24
    7252:	f1 1d       	adc	r31, r1
    7254:	10 82       	st	Z, r1
    7256:	c8 01       	movw	r24, r16
    7258:	80 61       	ori	r24, 0x10	; 16
    725a:	f3 01       	movw	r30, r6
    725c:	ea 58       	subi	r30, 0x8A	; 138
    725e:	ff 4f       	sbci	r31, 0xFF	; 255
    7260:	60 81       	ld	r22, Z
    7262:	66 23       	and	r22, r22
    7264:	a1 f0       	breq	.+40     	; 0x728e <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x18c>
    7266:	c8 01       	movw	r24, r16
    7268:	88 61       	ori	r24, 0x18	; 24
    726a:	ee 55       	subi	r30, 0x5E	; 94
    726c:	fa 4f       	sbci	r31, 0xFA	; 250
    726e:	40 81       	ld	r20, Z
    7270:	44 23       	and	r20, r20
    7272:	19 f0       	breq	.+6      	; 0x727a <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x178>
    7274:	c8 01       	movw	r24, r16
    7276:	88 63       	ori	r24, 0x38	; 56
    7278:	0a c0       	rjmp	.+20     	; 0x728e <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x18c>
    727a:	f3 01       	movw	r30, r6
    727c:	eb 5e       	subi	r30, 0xEB	; 235
    727e:	f9 4f       	sbci	r31, 0xF9	; 249
    7280:	40 81       	ld	r20, Z
    7282:	51 81       	ldd	r21, Z+1	; 0x01
    7284:	45 2b       	or	r20, r21
    7286:	19 f0       	breq	.+6      	; 0x728e <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x18c>
    7288:	c8 01       	movw	r24, r16
    728a:	88 61       	ori	r24, 0x18	; 24
    728c:	91 60       	ori	r25, 0x01	; 1
    728e:	f3 01       	movw	r30, r6
    7290:	e4 5f       	subi	r30, 0xF4	; 244
    7292:	f9 4f       	sbci	r31, 0xF9	; 249
    7294:	40 81       	ld	r20, Z
    7296:	44 23       	and	r20, r20
    7298:	11 f0       	breq	.+4      	; 0x729e <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x19c>
    729a:	80 68       	ori	r24, 0x80	; 128
    729c:	10 82       	st	Z, r1
    729e:	f3 01       	movw	r30, r6
    72a0:	e7 58       	subi	r30, 0x87	; 135
    72a2:	ff 4f       	sbci	r31, 0xFF	; 255
    72a4:	40 81       	ld	r20, Z
    72a6:	44 23       	and	r20, r20
    72a8:	11 f0       	breq	.+4      	; 0x72ae <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x1ac>
    72aa:	92 60       	ori	r25, 0x02	; 2
    72ac:	10 82       	st	Z, r1
    72ae:	61 11       	cpse	r22, r1
    72b0:	94 60       	ori	r25, 0x04	; 4
    72b2:	f3 01       	movw	r30, r6
    72b4:	e4 50       	subi	r30, 0x04	; 4
    72b6:	fa 4f       	sbci	r31, 0xFA	; 250
    72b8:	40 81       	ld	r20, Z
    72ba:	41 11       	cpse	r20, r1
    72bc:	80 64       	ori	r24, 0x40	; 64
    72be:	40 91 d6 0b 	lds	r20, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    72c2:	50 91 d7 0b 	lds	r21, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    72c6:	4e 5f       	subi	r20, 0xFE	; 254
    72c8:	5f 4f       	sbci	r21, 0xFF	; 255
    72ca:	50 93 d7 0b 	sts	0x0BD7, r21	; 0x800bd7 <totalMsgIdx+0x1>
    72ce:	40 93 d6 0b 	sts	0x0BD6, r20	; 0x800bd6 <totalMsgIdx>
    72d2:	f4 01       	movw	r30, r8
    72d4:	40 81       	ld	r20, Z
    72d6:	51 e0       	ldi	r21, 0x01	; 1
    72d8:	54 0f       	add	r21, r20
    72da:	50 83       	st	Z, r21
    72dc:	f2 01       	movw	r30, r4
    72de:	e4 0f       	add	r30, r20
    72e0:	f1 1d       	adc	r31, r1
    72e2:	90 83       	st	Z, r25
    72e4:	d4 01       	movw	r26, r8
    72e6:	9c 91       	ld	r25, X
    72e8:	41 e0       	ldi	r20, 0x01	; 1
    72ea:	49 0f       	add	r20, r25
    72ec:	4c 93       	st	X, r20
    72ee:	f2 01       	movw	r30, r4
    72f0:	e9 0f       	add	r30, r25
    72f2:	f1 1d       	adc	r31, r1
    72f4:	80 83       	st	Z, r24
    72f6:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    72fa:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    72fe:	02 96       	adiw	r24, 0x02	; 2
    7300:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    7304:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7308:	8c 91       	ld	r24, X
    730a:	91 e0       	ldi	r25, 0x01	; 1
    730c:	98 0f       	add	r25, r24
    730e:	9c 93       	st	X, r25
    7310:	f2 01       	movw	r30, r4
    7312:	e8 0f       	add	r30, r24
    7314:	f1 1d       	adc	r31, r1
    7316:	30 83       	st	Z, r19
    7318:	8c 91       	ld	r24, X
    731a:	91 e0       	ldi	r25, 0x01	; 1
    731c:	98 0f       	add	r25, r24
    731e:	9c 93       	st	X, r25
    7320:	f2 01       	movw	r30, r4
    7322:	e8 0f       	add	r30, r24
    7324:	f1 1d       	adc	r31, r1
    7326:	20 83       	st	Z, r18
    7328:	f3 01       	movw	r30, r6
    732a:	ea 58       	subi	r30, 0x8A	; 138
    732c:	ff 4f       	sbci	r31, 0xFF	; 255
    732e:	80 81       	ld	r24, Z
    7330:	88 23       	and	r24, r24
    7332:	09 f4       	brne	.+2      	; 0x7336 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x234>
    7334:	4d c0       	rjmp	.+154    	; 0x73d0 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x2ce>
    7336:	d3 01       	movw	r26, r6
    7338:	d2 96       	adiw	r26, 0x32	; 50
    733a:	ed 91       	ld	r30, X+
    733c:	fc 91       	ld	r31, X
    733e:	d3 97       	sbiw	r26, 0x33	; 51
    7340:	80 81       	ld	r24, Z
    7342:	82 30       	cpi	r24, 0x02	; 2
    7344:	09 f5       	brne	.+66     	; 0x7388 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x286>
    7346:	f3 01       	movw	r30, r6
    7348:	e4 58       	subi	r30, 0x84	; 132
    734a:	fe 4f       	sbci	r31, 0xFE	; 254
    734c:	20 81       	ld	r18, Z
    734e:	31 81       	ldd	r19, Z+1	; 0x01
    7350:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7354:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7358:	02 96       	adiw	r24, 0x02	; 2
    735a:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    735e:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7362:	f4 01       	movw	r30, r8
    7364:	80 81       	ld	r24, Z
    7366:	91 e0       	ldi	r25, 0x01	; 1
    7368:	98 0f       	add	r25, r24
    736a:	90 83       	st	Z, r25
    736c:	f2 01       	movw	r30, r4
    736e:	e8 0f       	add	r30, r24
    7370:	f1 1d       	adc	r31, r1
    7372:	30 83       	st	Z, r19
    7374:	d4 01       	movw	r26, r8
    7376:	8c 91       	ld	r24, X
    7378:	91 e0       	ldi	r25, 0x01	; 1
    737a:	98 0f       	add	r25, r24
    737c:	9c 93       	st	X, r25
    737e:	f2 01       	movw	r30, r4
    7380:	e8 0f       	add	r30, r24
    7382:	f1 1d       	adc	r31, r1
    7384:	20 83       	st	Z, r18
    7386:	24 c0       	rjmp	.+72     	; 0x73d0 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x2ce>
    7388:	ae 01       	movw	r20, r28
    738a:	4f 5f       	subi	r20, 0xFF	; 255
    738c:	5f 4f       	sbci	r21, 0xFF	; 255
    738e:	60 e2       	ldi	r22, 0x20	; 32
    7390:	c3 01       	movw	r24, r6
    7392:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <TMR_paramGet>
    7396:	29 81       	ldd	r18, Y+1	; 0x01
    7398:	3a 81       	ldd	r19, Y+2	; 0x02
    739a:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    739e:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    73a2:	02 96       	adiw	r24, 0x02	; 2
    73a4:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    73a8:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    73ac:	f4 01       	movw	r30, r8
    73ae:	80 81       	ld	r24, Z
    73b0:	91 e0       	ldi	r25, 0x01	; 1
    73b2:	98 0f       	add	r25, r24
    73b4:	90 83       	st	Z, r25
    73b6:	f2 01       	movw	r30, r4
    73b8:	e8 0f       	add	r30, r24
    73ba:	f1 1d       	adc	r31, r1
    73bc:	30 83       	st	Z, r19
    73be:	d4 01       	movw	r26, r8
    73c0:	8c 91       	ld	r24, X
    73c2:	91 e0       	ldi	r25, 0x01	; 1
    73c4:	98 0f       	add	r25, r24
    73c6:	9c 93       	st	X, r25
    73c8:	f2 01       	movw	r30, r4
    73ca:	e8 0f       	add	r30, r24
    73cc:	f1 1d       	adc	r31, r1
    73ce:	20 83       	st	Z, r18
    73d0:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    73d4:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    73d8:	02 96       	adiw	r24, 0x02	; 2
    73da:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    73de:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    73e2:	f4 01       	movw	r30, r8
    73e4:	80 81       	ld	r24, Z
    73e6:	91 e0       	ldi	r25, 0x01	; 1
    73e8:	98 0f       	add	r25, r24
    73ea:	90 83       	st	Z, r25
    73ec:	f2 01       	movw	r30, r4
    73ee:	e8 0f       	add	r30, r24
    73f0:	f1 1d       	adc	r31, r1
    73f2:	f0 82       	st	Z, r15
    73f4:	d4 01       	movw	r26, r8
    73f6:	8c 91       	ld	r24, X
    73f8:	91 e0       	ldi	r25, 0x01	; 1
    73fa:	98 0f       	add	r25, r24
    73fc:	9c 93       	st	X, r25
    73fe:	f2 01       	movw	r30, r4
    7400:	e8 0f       	add	r30, r24
    7402:	f1 1d       	adc	r31, r1
    7404:	e0 82       	st	Z, r14
    7406:	f3 01       	movw	r30, r6
    7408:	e4 50       	subi	r30, 0x04	; 4
    740a:	fa 4f       	sbci	r31, 0xFA	; 250
    740c:	80 81       	ld	r24, Z
    740e:	88 23       	and	r24, r24
    7410:	71 f1       	breq	.+92     	; 0x746e <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x36c>
    7412:	31 96       	adiw	r30, 0x01	; 1
    7414:	20 81       	ld	r18, Z
    7416:	31 81       	ldd	r19, Z+1	; 0x01
    7418:	42 81       	ldd	r20, Z+2	; 0x02
    741a:	53 81       	ldd	r21, Z+3	; 0x03
    741c:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7420:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7424:	04 96       	adiw	r24, 0x04	; 4
    7426:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    742a:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    742e:	8c 91       	ld	r24, X
    7430:	91 e0       	ldi	r25, 0x01	; 1
    7432:	98 0f       	add	r25, r24
    7434:	9c 93       	st	X, r25
    7436:	f2 01       	movw	r30, r4
    7438:	e8 0f       	add	r30, r24
    743a:	f1 1d       	adc	r31, r1
    743c:	50 83       	st	Z, r21
    743e:	8c 91       	ld	r24, X
    7440:	91 e0       	ldi	r25, 0x01	; 1
    7442:	98 0f       	add	r25, r24
    7444:	9c 93       	st	X, r25
    7446:	f2 01       	movw	r30, r4
    7448:	e8 0f       	add	r30, r24
    744a:	f1 1d       	adc	r31, r1
    744c:	40 83       	st	Z, r20
    744e:	8c 91       	ld	r24, X
    7450:	91 e0       	ldi	r25, 0x01	; 1
    7452:	98 0f       	add	r25, r24
    7454:	9c 93       	st	X, r25
    7456:	f2 01       	movw	r30, r4
    7458:	e8 0f       	add	r30, r24
    745a:	f1 1d       	adc	r31, r1
    745c:	30 83       	st	Z, r19
    745e:	8c 91       	ld	r24, X
    7460:	91 e0       	ldi	r25, 0x01	; 1
    7462:	98 0f       	add	r25, r24
    7464:	9c 93       	st	X, r25
    7466:	f2 01       	movw	r30, r4
    7468:	e8 0f       	add	r30, r24
    746a:	f1 1d       	adc	r31, r1
    746c:	20 83       	st	Z, r18
    746e:	f3 01       	movw	r30, r6
    7470:	ea 58       	subi	r30, 0x8A	; 138
    7472:	ff 4f       	sbci	r31, 0xFF	; 255
    7474:	80 81       	ld	r24, Z
    7476:	88 23       	and	r24, r24
    7478:	09 f4       	brne	.+2      	; 0x747c <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x37a>
    747a:	45 c0       	rjmp	.+138    	; 0x7506 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x404>
    747c:	e1 56       	subi	r30, 0x61	; 97
    747e:	fa 4f       	sbci	r31, 0xFA	; 250
    7480:	80 81       	ld	r24, Z
    7482:	91 81       	ldd	r25, Z+1	; 0x01
    7484:	00 97       	sbiw	r24, 0x00	; 0
    7486:	e9 f0       	breq	.+58     	; 0x74c2 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x3c0>
    7488:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    748c:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7490:	2e 5f       	subi	r18, 0xFE	; 254
    7492:	3f 4f       	sbci	r19, 0xFF	; 255
    7494:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    7498:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    749c:	f4 01       	movw	r30, r8
    749e:	20 81       	ld	r18, Z
    74a0:	31 e0       	ldi	r19, 0x01	; 1
    74a2:	32 0f       	add	r19, r18
    74a4:	30 83       	st	Z, r19
    74a6:	f2 01       	movw	r30, r4
    74a8:	e2 0f       	add	r30, r18
    74aa:	f1 1d       	adc	r31, r1
    74ac:	90 83       	st	Z, r25
    74ae:	d4 01       	movw	r26, r8
    74b0:	9c 91       	ld	r25, X
    74b2:	21 e0       	ldi	r18, 0x01	; 1
    74b4:	29 0f       	add	r18, r25
    74b6:	2c 93       	st	X, r18
    74b8:	f2 01       	movw	r30, r4
    74ba:	e9 0f       	add	r30, r25
    74bc:	f1 1d       	adc	r31, r1
    74be:	80 83       	st	Z, r24
    74c0:	22 c0       	rjmp	.+68     	; 0x7506 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x404>
    74c2:	f3 01       	movw	r30, r6
    74c4:	e8 5e       	subi	r30, 0xE8	; 232
    74c6:	f9 4f       	sbci	r31, 0xF9	; 249
    74c8:	80 81       	ld	r24, Z
    74ca:	88 23       	and	r24, r24
    74cc:	e1 f0       	breq	.+56     	; 0x7506 <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x404>
    74ce:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    74d2:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    74d6:	2e 5f       	subi	r18, 0xFE	; 254
    74d8:	3f 4f       	sbci	r19, 0xFF	; 255
    74da:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    74de:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    74e2:	f4 01       	movw	r30, r8
    74e4:	90 81       	ld	r25, Z
    74e6:	21 e0       	ldi	r18, 0x01	; 1
    74e8:	29 0f       	add	r18, r25
    74ea:	20 83       	st	Z, r18
    74ec:	f2 01       	movw	r30, r4
    74ee:	e9 0f       	add	r30, r25
    74f0:	f1 1d       	adc	r31, r1
    74f2:	10 82       	st	Z, r1
    74f4:	d4 01       	movw	r26, r8
    74f6:	9c 91       	ld	r25, X
    74f8:	21 e0       	ldi	r18, 0x01	; 1
    74fa:	29 0f       	add	r18, r25
    74fc:	2c 93       	st	X, r18
    74fe:	f2 01       	movw	r30, r4
    7500:	e9 0f       	add	r30, r25
    7502:	f1 1d       	adc	r31, r1
    7504:	80 83       	st	Z, r24
    7506:	32 01       	movw	r6, r4
    7508:	6d 0c       	add	r6, r13
    750a:	71 1c       	adc	r7, r1
    750c:	aa 24       	eor	r10, r10
    750e:	a3 94       	inc	r10
    7510:	c9 8c       	ldd	r12, Y+25	; 0x19
    7512:	da 8c       	ldd	r13, Y+26	; 0x1a
    7514:	eb 8c       	ldd	r14, Y+27	; 0x1b
    7516:	fc 8c       	ldd	r15, Y+28	; 0x1c
    7518:	82 01       	movw	r16, r4
    751a:	94 01       	movw	r18, r8
    751c:	a3 01       	movw	r20, r6
    751e:	b1 01       	movw	r22, r2
    7520:	8b 2d       	mov	r24, r11
    7522:	0e 94 79 2e 	call	0x5cf2	; 0x5cf2 <filterbytes>
    7526:	f3 01       	movw	r30, r6
    7528:	20 81       	ld	r18, Z
    752a:	20 61       	ori	r18, 0x10	; 16
    752c:	20 83       	st	Z, r18
    752e:	30 91 dc 0b 	lds	r19, 0x0BDC	; 0x800bdc <isSecureAccessEnabled>
    7532:	33 23       	and	r19, r19
    7534:	11 f0       	breq	.+4      	; 0x753a <TMR_SR_msgSetupReadTagMultipleWithMetadata+0x438>
    7536:	20 64       	ori	r18, 0x40	; 64
    7538:	20 83       	st	Z, r18
    753a:	0f 90       	pop	r0
    753c:	0f 90       	pop	r0
    753e:	0f 90       	pop	r0
    7540:	0f 90       	pop	r0
    7542:	df 91       	pop	r29
    7544:	cf 91       	pop	r28
    7546:	1f 91       	pop	r17
    7548:	0f 91       	pop	r16
    754a:	ff 90       	pop	r15
    754c:	ef 90       	pop	r14
    754e:	df 90       	pop	r13
    7550:	cf 90       	pop	r12
    7552:	bf 90       	pop	r11
    7554:	af 90       	pop	r10
    7556:	9f 90       	pop	r9
    7558:	8f 90       	pop	r8
    755a:	7f 90       	pop	r7
    755c:	6f 90       	pop	r6
    755e:	5f 90       	pop	r5
    7560:	4f 90       	pop	r4
    7562:	3f 90       	pop	r3
    7564:	2f 90       	pop	r2
    7566:	08 95       	ret

00007568 <TMR_SR_msgSetupReadTagMultiple>:
    7568:	8f 92       	push	r8
    756a:	9f 92       	push	r9
    756c:	af 92       	push	r10
    756e:	bf 92       	push	r11
    7570:	cf 92       	push	r12
    7572:	df 92       	push	r13
    7574:	ef 92       	push	r14
    7576:	ff 92       	push	r15
    7578:	0f 93       	push	r16
    757a:	1f 93       	push	r17
    757c:	cf 93       	push	r28
    757e:	df 93       	push	r29
    7580:	cd b7       	in	r28, 0x3d	; 61
    7582:	de b7       	in	r29, 0x3e	; 62
    7584:	fc 01       	movw	r30, r24
    7586:	e7 5e       	subi	r30, 0xE7	; 231
    7588:	f9 4f       	sbci	r31, 0xF9	; 249
    758a:	01 90       	ld	r0, Z+
    758c:	f0 81       	ld	r31, Z
    758e:	e0 2d       	mov	r30, r0
    7590:	bf 92       	push	r11
    7592:	af 92       	push	r10
    7594:	9f 92       	push	r9
    7596:	8f 92       	push	r8
    7598:	ac 2c       	mov	r10, r12
    759a:	67 01       	movw	r12, r14
    759c:	7f 01       	movw	r14, r30
    759e:	b1 dd       	rcall	.-1182   	; 0x7102 <TMR_SR_msgSetupReadTagMultipleWithMetadata>
    75a0:	0f 90       	pop	r0
    75a2:	0f 90       	pop	r0
    75a4:	0f 90       	pop	r0
    75a6:	0f 90       	pop	r0
    75a8:	df 91       	pop	r29
    75aa:	cf 91       	pop	r28
    75ac:	1f 91       	pop	r17
    75ae:	0f 91       	pop	r16
    75b0:	ff 90       	pop	r15
    75b2:	ef 90       	pop	r14
    75b4:	df 90       	pop	r13
    75b6:	cf 90       	pop	r12
    75b8:	bf 90       	pop	r11
    75ba:	af 90       	pop	r10
    75bc:	9f 90       	pop	r9
    75be:	8f 90       	pop	r8
    75c0:	08 95       	ret

000075c2 <TMR_SR_cmdReadTagMultiple>:
    75c2:	2f 92       	push	r2
    75c4:	3f 92       	push	r3
    75c6:	4f 92       	push	r4
    75c8:	5f 92       	push	r5
    75ca:	6f 92       	push	r6
    75cc:	7f 92       	push	r7
    75ce:	8f 92       	push	r8
    75d0:	9f 92       	push	r9
    75d2:	af 92       	push	r10
    75d4:	bf 92       	push	r11
    75d6:	cf 92       	push	r12
    75d8:	ef 92       	push	r14
    75da:	ff 92       	push	r15
    75dc:	0f 93       	push	r16
    75de:	1f 93       	push	r17
    75e0:	cf 93       	push	r28
    75e2:	df 93       	push	r29
    75e4:	cd b7       	in	r28, 0x3d	; 61
    75e6:	de b7       	in	r29, 0x3e	; 62
    75e8:	c2 50       	subi	r28, 0x02	; 2
    75ea:	d1 40       	sbci	r29, 0x01	; 1
    75ec:	0f b6       	in	r0, 0x3f	; 63
    75ee:	f8 94       	cli
    75f0:	de bf       	out	0x3e, r29	; 62
    75f2:	0f be       	out	0x3f, r0	; 63
    75f4:	cd bf       	out	0x3d, r28	; 61
    75f6:	3c 01       	movw	r6, r24
    75f8:	2b 01       	movw	r4, r22
    75fa:	17 01       	movw	r2, r14
    75fc:	82 e0       	ldi	r24, 0x02	; 2
    75fe:	cf 5f       	subi	r28, 0xFF	; 255
    7600:	de 4f       	sbci	r29, 0xFE	; 254
    7602:	88 83       	st	Y, r24
    7604:	c1 50       	subi	r28, 0x01	; 1
    7606:	d1 40       	sbci	r29, 0x01	; 1
    7608:	81 2c       	mov	r8, r1
    760a:	91 2c       	mov	r9, r1
    760c:	54 01       	movw	r10, r8
    760e:	c0 2e       	mov	r12, r16
    7610:	79 01       	movw	r14, r18
    7612:	8a 01       	movw	r16, r20
    7614:	9b 01       	movw	r18, r22
    7616:	ae 01       	movw	r20, r28
    7618:	4f 5f       	subi	r20, 0xFF	; 255
    761a:	5e 4f       	sbci	r21, 0xFE	; 254
    761c:	be 01       	movw	r22, r28
    761e:	6f 5f       	subi	r22, 0xFF	; 255
    7620:	7f 4f       	sbci	r23, 0xFF	; 255
    7622:	c3 01       	movw	r24, r6
    7624:	a1 df       	rcall	.-190    	; 0x7568 <TMR_SR_msgSetupReadTagMultiple>
    7626:	61 15       	cp	r22, r1
    7628:	71 05       	cpc	r23, r1
    762a:	81 05       	cpc	r24, r1
    762c:	91 05       	cpc	r25, r1
    762e:	09 f0       	breq	.+2      	; 0x7632 <TMR_SR_cmdReadTagMultiple+0x70>
    7630:	b5 c0       	rjmp	.+362    	; 0x779c <TMR_SR_cmdReadTagMultiple+0x1da>
    7632:	cf 5f       	subi	r28, 0xFF	; 255
    7634:	de 4f       	sbci	r29, 0xFE	; 254
    7636:	88 81       	ld	r24, Y
    7638:	c1 50       	subi	r28, 0x01	; 1
    763a:	d1 40       	sbci	r29, 0x01	; 1
    763c:	83 50       	subi	r24, 0x03	; 3
    763e:	8a 83       	std	Y+2, r24	; 0x02
    7640:	82 e2       	ldi	r24, 0x22	; 34
    7642:	f3 01       	movw	r30, r6
    7644:	e0 54       	subi	r30, 0x40	; 64
    7646:	fb 4f       	sbci	r31, 0xFB	; 251
    7648:	80 83       	st	Z, r24
    764a:	ea 54       	subi	r30, 0x4A	; 74
    764c:	f4 40       	sbci	r31, 0x04	; 4
    764e:	80 81       	ld	r24, Z
    7650:	88 23       	and	r24, r24
    7652:	a9 f0       	breq	.+42     	; 0x767e <TMR_SR_cmdReadTagMultiple+0xbc>
    7654:	82 01       	movw	r16, r4
    7656:	20 e0       	ldi	r18, 0x00	; 0
    7658:	30 e0       	ldi	r19, 0x00	; 0
    765a:	ae 01       	movw	r20, r28
    765c:	4e 5f       	subi	r20, 0xFE	; 254
    765e:	5e 4f       	sbci	r21, 0xFE	; 254
    7660:	be 01       	movw	r22, r28
    7662:	6f 5f       	subi	r22, 0xFF	; 255
    7664:	7f 4f       	sbci	r23, 0xFF	; 255
    7666:	c3 01       	movw	r24, r6
    7668:	0e 94 c1 32 	call	0x6582	; 0x6582 <TMR_SR_sendMessage>
    766c:	f1 01       	movw	r30, r2
    766e:	10 82       	st	Z, r1
    7670:	11 82       	std	Z+1, r1	; 0x01
    7672:	12 82       	std	Z+2, r1	; 0x02
    7674:	13 82       	std	Z+3, r1	; 0x03
    7676:	46 2f       	mov	r20, r22
    7678:	37 2f       	mov	r19, r23
    767a:	28 2f       	mov	r18, r24
    767c:	a0 c0       	rjmp	.+320    	; 0x77be <TMR_SR_cmdReadTagMultiple+0x1fc>
    767e:	92 01       	movw	r18, r4
    7680:	40 e0       	ldi	r20, 0x00	; 0
    7682:	50 e0       	ldi	r21, 0x00	; 0
    7684:	be 01       	movw	r22, r28
    7686:	6f 5f       	subi	r22, 0xFF	; 255
    7688:	7f 4f       	sbci	r23, 0xFF	; 255
    768a:	c3 01       	movw	r24, r6
    768c:	9c da       	rcall	.-2760   	; 0x6bc6 <TMR_SR_sendTimeout>
    768e:	61 15       	cp	r22, r1
    7690:	71 05       	cpc	r23, r1
    7692:	81 05       	cpc	r24, r1
    7694:	91 05       	cpc	r25, r1
    7696:	09 f0       	breq	.+2      	; 0x769a <TMR_SR_cmdReadTagMultiple+0xd8>
    7698:	85 c0       	rjmp	.+266    	; 0x77a4 <TMR_SR_cmdReadTagMultiple+0x1e2>
    769a:	21 14       	cp	r2, r1
    769c:	31 04       	cpc	r3, r1
    769e:	09 f4       	brne	.+2      	; 0x76a2 <TMR_SR_cmdReadTagMultiple+0xe0>
    76a0:	85 c0       	rjmp	.+266    	; 0x77ac <TMR_SR_cmdReadTagMultiple+0x1ea>
    76a2:	8a 81       	ldd	r24, Y+2	; 0x02
    76a4:	84 30       	cpi	r24, 0x04	; 4
    76a6:	71 f4       	brne	.+28     	; 0x76c4 <TMR_SR_cmdReadTagMultiple+0x102>
    76a8:	89 85       	ldd	r24, Y+9	; 0x09
    76aa:	90 e0       	ldi	r25, 0x00	; 0
    76ac:	a0 e0       	ldi	r26, 0x00	; 0
    76ae:	b0 e0       	ldi	r27, 0x00	; 0
    76b0:	f1 01       	movw	r30, r2
    76b2:	80 83       	st	Z, r24
    76b4:	91 83       	std	Z+1, r25	; 0x01
    76b6:	a2 83       	std	Z+2, r26	; 0x02
    76b8:	b3 83       	std	Z+3, r27	; 0x03
    76ba:	40 e0       	ldi	r20, 0x00	; 0
    76bc:	30 e0       	ldi	r19, 0x00	; 0
    76be:	20 e0       	ldi	r18, 0x00	; 0
    76c0:	90 e0       	ldi	r25, 0x00	; 0
    76c2:	7d c0       	rjmp	.+250    	; 0x77be <TMR_SR_cmdReadTagMultiple+0x1fc>
    76c4:	85 30       	cpi	r24, 0x05	; 5
    76c6:	71 f4       	brne	.+28     	; 0x76e4 <TMR_SR_cmdReadTagMultiple+0x122>
    76c8:	8a 85       	ldd	r24, Y+10	; 0x0a
    76ca:	90 e0       	ldi	r25, 0x00	; 0
    76cc:	a0 e0       	ldi	r26, 0x00	; 0
    76ce:	b0 e0       	ldi	r27, 0x00	; 0
    76d0:	f1 01       	movw	r30, r2
    76d2:	80 83       	st	Z, r24
    76d4:	91 83       	std	Z+1, r25	; 0x01
    76d6:	a2 83       	std	Z+2, r26	; 0x02
    76d8:	b3 83       	std	Z+3, r27	; 0x03
    76da:	40 e0       	ldi	r20, 0x00	; 0
    76dc:	30 e0       	ldi	r19, 0x00	; 0
    76de:	20 e0       	ldi	r18, 0x00	; 0
    76e0:	90 e0       	ldi	r25, 0x00	; 0
    76e2:	6d c0       	rjmp	.+218    	; 0x77be <TMR_SR_cmdReadTagMultiple+0x1fc>
    76e4:	87 30       	cpi	r24, 0x07	; 7
    76e6:	61 f5       	brne	.+88     	; 0x7740 <TMR_SR_cmdReadTagMultiple+0x17e>
    76e8:	89 85       	ldd	r24, Y+9	; 0x09
    76ea:	90 e0       	ldi	r25, 0x00	; 0
    76ec:	a0 e0       	ldi	r26, 0x00	; 0
    76ee:	b0 e0       	ldi	r27, 0x00	; 0
    76f0:	78 2f       	mov	r23, r24
    76f2:	66 27       	eor	r22, r22
    76f4:	55 27       	eor	r21, r21
    76f6:	44 27       	eor	r20, r20
    76f8:	9a 85       	ldd	r25, Y+10	; 0x0a
    76fa:	89 2f       	mov	r24, r25
    76fc:	90 e0       	ldi	r25, 0x00	; 0
    76fe:	a0 e0       	ldi	r26, 0x00	; 0
    7700:	b0 e0       	ldi	r27, 0x00	; 0
    7702:	dc 01       	movw	r26, r24
    7704:	99 27       	eor	r25, r25
    7706:	88 27       	eor	r24, r24
    7708:	84 2b       	or	r24, r20
    770a:	95 2b       	or	r25, r21
    770c:	a6 2b       	or	r26, r22
    770e:	b7 2b       	or	r27, r23
    7710:	4b 85       	ldd	r20, Y+11	; 0x0b
    7712:	50 e0       	ldi	r21, 0x00	; 0
    7714:	60 e0       	ldi	r22, 0x00	; 0
    7716:	70 e0       	ldi	r23, 0x00	; 0
    7718:	76 2f       	mov	r23, r22
    771a:	65 2f       	mov	r22, r21
    771c:	54 2f       	mov	r21, r20
    771e:	44 27       	eor	r20, r20
    7720:	84 2b       	or	r24, r20
    7722:	95 2b       	or	r25, r21
    7724:	a6 2b       	or	r26, r22
    7726:	b7 2b       	or	r27, r23
    7728:	2c 85       	ldd	r18, Y+12	; 0x0c
    772a:	82 2b       	or	r24, r18
    772c:	f1 01       	movw	r30, r2
    772e:	80 83       	st	Z, r24
    7730:	91 83       	std	Z+1, r25	; 0x01
    7732:	a2 83       	std	Z+2, r26	; 0x02
    7734:	b3 83       	std	Z+3, r27	; 0x03
    7736:	40 e0       	ldi	r20, 0x00	; 0
    7738:	30 e0       	ldi	r19, 0x00	; 0
    773a:	20 e0       	ldi	r18, 0x00	; 0
    773c:	90 e0       	ldi	r25, 0x00	; 0
    773e:	3f c0       	rjmp	.+126    	; 0x77be <TMR_SR_cmdReadTagMultiple+0x1fc>
    7740:	88 30       	cpi	r24, 0x08	; 8
    7742:	c9 f5       	brne	.+114    	; 0x77b6 <TMR_SR_cmdReadTagMultiple+0x1f4>
    7744:	8a 85       	ldd	r24, Y+10	; 0x0a
    7746:	90 e0       	ldi	r25, 0x00	; 0
    7748:	a0 e0       	ldi	r26, 0x00	; 0
    774a:	b0 e0       	ldi	r27, 0x00	; 0
    774c:	78 2f       	mov	r23, r24
    774e:	66 27       	eor	r22, r22
    7750:	55 27       	eor	r21, r21
    7752:	44 27       	eor	r20, r20
    7754:	9b 85       	ldd	r25, Y+11	; 0x0b
    7756:	89 2f       	mov	r24, r25
    7758:	90 e0       	ldi	r25, 0x00	; 0
    775a:	a0 e0       	ldi	r26, 0x00	; 0
    775c:	b0 e0       	ldi	r27, 0x00	; 0
    775e:	dc 01       	movw	r26, r24
    7760:	99 27       	eor	r25, r25
    7762:	88 27       	eor	r24, r24
    7764:	84 2b       	or	r24, r20
    7766:	95 2b       	or	r25, r21
    7768:	a6 2b       	or	r26, r22
    776a:	b7 2b       	or	r27, r23
    776c:	4c 85       	ldd	r20, Y+12	; 0x0c
    776e:	50 e0       	ldi	r21, 0x00	; 0
    7770:	60 e0       	ldi	r22, 0x00	; 0
    7772:	70 e0       	ldi	r23, 0x00	; 0
    7774:	76 2f       	mov	r23, r22
    7776:	65 2f       	mov	r22, r21
    7778:	54 2f       	mov	r21, r20
    777a:	44 27       	eor	r20, r20
    777c:	84 2b       	or	r24, r20
    777e:	95 2b       	or	r25, r21
    7780:	a6 2b       	or	r26, r22
    7782:	b7 2b       	or	r27, r23
    7784:	2d 85       	ldd	r18, Y+13	; 0x0d
    7786:	82 2b       	or	r24, r18
    7788:	f1 01       	movw	r30, r2
    778a:	80 83       	st	Z, r24
    778c:	91 83       	std	Z+1, r25	; 0x01
    778e:	a2 83       	std	Z+2, r26	; 0x02
    7790:	b3 83       	std	Z+3, r27	; 0x03
    7792:	40 e0       	ldi	r20, 0x00	; 0
    7794:	30 e0       	ldi	r19, 0x00	; 0
    7796:	20 e0       	ldi	r18, 0x00	; 0
    7798:	90 e0       	ldi	r25, 0x00	; 0
    779a:	11 c0       	rjmp	.+34     	; 0x77be <TMR_SR_cmdReadTagMultiple+0x1fc>
    779c:	46 2f       	mov	r20, r22
    779e:	37 2f       	mov	r19, r23
    77a0:	28 2f       	mov	r18, r24
    77a2:	0d c0       	rjmp	.+26     	; 0x77be <TMR_SR_cmdReadTagMultiple+0x1fc>
    77a4:	46 2f       	mov	r20, r22
    77a6:	37 2f       	mov	r19, r23
    77a8:	28 2f       	mov	r18, r24
    77aa:	09 c0       	rjmp	.+18     	; 0x77be <TMR_SR_cmdReadTagMultiple+0x1fc>
    77ac:	40 e0       	ldi	r20, 0x00	; 0
    77ae:	30 e0       	ldi	r19, 0x00	; 0
    77b0:	20 e0       	ldi	r18, 0x00	; 0
    77b2:	90 e0       	ldi	r25, 0x00	; 0
    77b4:	04 c0       	rjmp	.+8      	; 0x77be <TMR_SR_cmdReadTagMultiple+0x1fc>
    77b6:	44 e0       	ldi	r20, 0x04	; 4
    77b8:	30 e0       	ldi	r19, 0x00	; 0
    77ba:	20 e0       	ldi	r18, 0x00	; 0
    77bc:	91 e0       	ldi	r25, 0x01	; 1
    77be:	64 2f       	mov	r22, r20
    77c0:	73 2f       	mov	r23, r19
    77c2:	82 2f       	mov	r24, r18
    77c4:	ce 5f       	subi	r28, 0xFE	; 254
    77c6:	de 4f       	sbci	r29, 0xFE	; 254
    77c8:	0f b6       	in	r0, 0x3f	; 63
    77ca:	f8 94       	cli
    77cc:	de bf       	out	0x3e, r29	; 62
    77ce:	0f be       	out	0x3f, r0	; 63
    77d0:	cd bf       	out	0x3d, r28	; 61
    77d2:	df 91       	pop	r29
    77d4:	cf 91       	pop	r28
    77d6:	1f 91       	pop	r17
    77d8:	0f 91       	pop	r16
    77da:	ff 90       	pop	r15
    77dc:	ef 90       	pop	r14
    77de:	cf 90       	pop	r12
    77e0:	bf 90       	pop	r11
    77e2:	af 90       	pop	r10
    77e4:	9f 90       	pop	r9
    77e6:	8f 90       	pop	r8
    77e8:	7f 90       	pop	r7
    77ea:	6f 90       	pop	r6
    77ec:	5f 90       	pop	r5
    77ee:	4f 90       	pop	r4
    77f0:	3f 90       	pop	r3
    77f2:	2f 90       	pop	r2
    77f4:	08 95       	ret

000077f6 <TMR_SR_executeEmbeddedRead>:
    77f6:	5f 92       	push	r5
    77f8:	6f 92       	push	r6
    77fa:	7f 92       	push	r7
    77fc:	8f 92       	push	r8
    77fe:	9f 92       	push	r9
    7800:	af 92       	push	r10
    7802:	bf 92       	push	r11
    7804:	cf 92       	push	r12
    7806:	df 92       	push	r13
    7808:	ef 92       	push	r14
    780a:	ff 92       	push	r15
    780c:	0f 93       	push	r16
    780e:	1f 93       	push	r17
    7810:	cf 93       	push	r28
    7812:	df 93       	push	r29
    7814:	cd b7       	in	r28, 0x3d	; 61
    7816:	de b7       	in	r29, 0x3e	; 62
    7818:	c1 50       	subi	r28, 0x01	; 1
    781a:	d1 40       	sbci	r29, 0x01	; 1
    781c:	0f b6       	in	r0, 0x3f	; 63
    781e:	f8 94       	cli
    7820:	de bf       	out	0x3e, r29	; 62
    7822:	0f be       	out	0x3f, r0	; 63
    7824:	cd bf       	out	0x3d, r28	; 61
    7826:	7c 01       	movw	r14, r24
    7828:	6b 01       	movw	r12, r22
    782a:	8a 01       	movw	r16, r20
    782c:	49 01       	movw	r8, r18
    782e:	fc 01       	movw	r30, r24
    7830:	ea 58       	subi	r30, 0x8A	; 138
    7832:	ff 4f       	sbci	r31, 0xFF	; 255
    7834:	80 81       	ld	r24, Z
    7836:	88 23       	and	r24, r24
    7838:	09 f4       	brne	.+2      	; 0x783c <TMR_SR_executeEmbeddedRead+0x46>
    783a:	9e c0       	rjmp	.+316    	; 0x7978 <TMR_SR_executeEmbeddedRead+0x182>
    783c:	9f e2       	ldi	r25, 0x2F	; 47
    783e:	cf 5f       	subi	r28, 0xFF	; 255
    7840:	de 4f       	sbci	r29, 0xFE	; 254
    7842:	98 83       	st	Y, r25
    7844:	c1 50       	subi	r28, 0x01	; 1
    7846:	d1 40       	sbci	r29, 0x01	; 1
    7848:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    784c:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7850:	9b 83       	std	Y+3, r25	; 0x03
    7852:	1c 82       	std	Y+4, r1	; 0x04
    7854:	1d 82       	std	Y+5, r1	; 0x05
    7856:	81 e0       	ldi	r24, 0x01	; 1
    7858:	8e 83       	std	Y+6, r24	; 0x06
    785a:	c9 01       	movw	r24, r18
    785c:	05 96       	adiw	r24, 0x05	; 5
    785e:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    7862:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7866:	22 e2       	ldi	r18, 0x22	; 34
    7868:	2f 83       	std	Y+7, r18	; 0x07
    786a:	e4 55       	subi	r30, 0x54	; 84
    786c:	fa 4f       	sbci	r31, 0xFA	; 250
    786e:	20 81       	ld	r18, Z
    7870:	21 11       	cpse	r18, r1
    7872:	03 c0       	rjmp	.+6      	; 0x787a <TMR_SR_executeEmbeddedRead+0x84>
    7874:	20 e0       	ldi	r18, 0x00	; 0
    7876:	30 e0       	ldi	r19, 0x00	; 0
    7878:	02 c0       	rjmp	.+4      	; 0x787e <TMR_SR_executeEmbeddedRead+0x88>
    787a:	20 e0       	ldi	r18, 0x00	; 0
    787c:	38 e0       	ldi	r19, 0x08	; 8
    787e:	f7 01       	movw	r30, r14
    7880:	e4 50       	subi	r30, 0x04	; 4
    7882:	fa 4f       	sbci	r31, 0xFA	; 250
    7884:	40 81       	ld	r20, Z
    7886:	41 11       	cpse	r20, r1
    7888:	20 64       	ori	r18, 0x40	; 64
    788a:	02 96       	adiw	r24, 0x02	; 2
    788c:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    7890:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7894:	38 87       	std	Y+8, r19	; 0x08
    7896:	29 87       	std	Y+9, r18	; 0x09
    7898:	44 23       	and	r20, r20
    789a:	91 f0       	breq	.+36     	; 0x78c0 <TMR_SR_executeEmbeddedRead+0xca>
    789c:	f7 01       	movw	r30, r14
    789e:	e3 50       	subi	r30, 0x03	; 3
    78a0:	fa 4f       	sbci	r31, 0xFA	; 250
    78a2:	20 81       	ld	r18, Z
    78a4:	31 81       	ldd	r19, Z+1	; 0x01
    78a6:	42 81       	ldd	r20, Z+2	; 0x02
    78a8:	53 81       	ldd	r21, Z+3	; 0x03
    78aa:	04 96       	adiw	r24, 0x04	; 4
    78ac:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    78b0:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    78b4:	5a 87       	std	Y+10, r21	; 0x0a
    78b6:	4b 87       	std	Y+11, r20	; 0x0b
    78b8:	3c 87       	std	Y+12, r19	; 0x0c
    78ba:	2d 87       	std	Y+13, r18	; 0x0d
    78bc:	2d e0       	ldi	r18, 0x0D	; 13
    78be:	01 c0       	rjmp	.+2      	; 0x78c2 <TMR_SR_executeEmbeddedRead+0xcc>
    78c0:	29 e0       	ldi	r18, 0x09	; 9
    78c2:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    78c6:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    78ca:	01 96       	adiw	r24, 0x01	; 1
    78cc:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    78d0:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    78d4:	66 24       	eor	r6, r6
    78d6:	63 94       	inc	r6
    78d8:	62 0e       	add	r6, r18
    78da:	f7 01       	movw	r30, r14
    78dc:	ee 57       	subi	r30, 0x7E	; 126
    78de:	fc 4f       	sbci	r31, 0xFC	; 252
    78e0:	30 81       	ld	r19, Z
    78e2:	e1 e0       	ldi	r30, 0x01	; 1
    78e4:	f0 e0       	ldi	r31, 0x00	; 0
    78e6:	ec 0f       	add	r30, r28
    78e8:	fd 1f       	adc	r31, r29
    78ea:	e2 0f       	add	r30, r18
    78ec:	f1 1d       	adc	r31, r1
    78ee:	30 83       	st	Z, r19
    78f0:	d6 01       	movw	r26, r12
    78f2:	11 96       	adiw	r26, 0x01	; 1
    78f4:	5c 90       	ld	r5, X
    78f6:	01 96       	adiw	r24, 0x01	; 1
    78f8:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    78fc:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7900:	68 94       	set
    7902:	77 24       	eor	r7, r7
    7904:	71 f8       	bld	r7, 1
    7906:	72 0e       	add	r7, r18
    7908:	aa 24       	eor	r10, r10
    790a:	a3 94       	inc	r10
    790c:	b1 2c       	mov	r11, r1
    790e:	ac 0e       	add	r10, r28
    7910:	bd 1e       	adc	r11, r29
    7912:	a6 0c       	add	r10, r6
    7914:	b1 1c       	adc	r11, r1
    7916:	f5 01       	movw	r30, r10
    7918:	10 82       	st	Z, r1
    791a:	45 2d       	mov	r20, r5
    791c:	50 e0       	ldi	r21, 0x00	; 0
    791e:	4f 5f       	subi	r20, 0xFF	; 255
    7920:	5f 4f       	sbci	r21, 0xFF	; 255
    7922:	b6 01       	movw	r22, r12
    7924:	6e 5f       	subi	r22, 0xFE	; 254
    7926:	7f 4f       	sbci	r23, 0xFF	; 255
    7928:	81 e0       	ldi	r24, 0x01	; 1
    792a:	90 e0       	ldi	r25, 0x00	; 0
    792c:	8c 0f       	add	r24, r28
    792e:	9d 1f       	adc	r25, r29
    7930:	87 0d       	add	r24, r7
    7932:	91 1d       	adc	r25, r1
    7934:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    7938:	75 0c       	add	r7, r5
    793a:	81 e0       	ldi	r24, 0x01	; 1
    793c:	87 0d       	add	r24, r7
    793e:	86 19       	sub	r24, r6
    7940:	82 50       	subi	r24, 0x02	; 2
    7942:	d5 01       	movw	r26, r10
    7944:	8c 93       	st	X, r24
    7946:	7a 94       	dec	r7
    7948:	7a 94       	dec	r7
    794a:	7a 82       	std	Y+2, r7	; 0x02
    794c:	20 e0       	ldi	r18, 0x00	; 0
    794e:	30 e0       	ldi	r19, 0x00	; 0
    7950:	ae 01       	movw	r20, r28
    7952:	4f 5f       	subi	r20, 0xFF	; 255
    7954:	5e 4f       	sbci	r21, 0xFE	; 254
    7956:	be 01       	movw	r22, r28
    7958:	6f 5f       	subi	r22, 0xFF	; 255
    795a:	7f 4f       	sbci	r23, 0xFF	; 255
    795c:	c7 01       	movw	r24, r14
    795e:	0e 94 c1 32 	call	0x6582	; 0x6582 <TMR_SR_sendMessage>
    7962:	f4 01       	movw	r30, r8
    7964:	15 82       	std	Z+5, r1	; 0x05
    7966:	14 82       	std	Z+4, r1	; 0x04
    7968:	13 82       	std	Z+3, r1	; 0x03
    796a:	12 82       	std	Z+2, r1	; 0x02
    796c:	11 82       	std	Z+1, r1	; 0x01
    796e:	10 82       	st	Z, r1
    7970:	46 2f       	mov	r20, r22
    7972:	37 2f       	mov	r19, r23
    7974:	28 2f       	mov	r18, r24
    7976:	84 c0       	rjmp	.+264    	; 0x7a80 <TMR_SR_executeEmbeddedRead+0x28a>
    7978:	f7 01       	movw	r30, r14
    797a:	e3 5f       	subi	r30, 0xF3	; 243
    797c:	f9 4f       	sbci	r31, 0xF9	; 249
    797e:	80 81       	ld	r24, Z
    7980:	81 11       	cpse	r24, r1
    7982:	04 c0       	rjmp	.+8      	; 0x798c <TMR_SR_executeEmbeddedRead+0x196>
    7984:	80 91 de 0b 	lds	r24, 0x0BDE	; 0x800bde <isMultiSelectEnabled>
    7988:	88 23       	and	r24, r24
    798a:	59 f0       	breq	.+22     	; 0x79a2 <TMR_SR_executeEmbeddedRead+0x1ac>
    798c:	d6 01       	movw	r26, r12
    798e:	15 96       	adiw	r26, 0x05	; 5
    7990:	ac 90       	ld	r10, X
    7992:	15 97       	sbiw	r26, 0x05	; 5
    7994:	b1 2c       	mov	r11, r1
    7996:	ba 2c       	mov	r11, r10
    7998:	aa 24       	eor	r10, r10
    799a:	16 96       	adiw	r26, 0x06	; 6
    799c:	8c 91       	ld	r24, X
    799e:	a8 2a       	or	r10, r24
    79a0:	07 c0       	rjmp	.+14     	; 0x79b0 <TMR_SR_executeEmbeddedRead+0x1ba>
    79a2:	fb 01       	movw	r30, r22
    79a4:	a4 80       	ldd	r10, Z+4	; 0x04
    79a6:	b1 2c       	mov	r11, r1
    79a8:	ba 2c       	mov	r11, r10
    79aa:	aa 24       	eor	r10, r10
    79ac:	85 81       	ldd	r24, Z+5	; 0x05
    79ae:	a8 2a       	or	r10, r24
    79b0:	98 01       	movw	r18, r16
    79b2:	40 e0       	ldi	r20, 0x00	; 0
    79b4:	50 e0       	ldi	r21, 0x00	; 0
    79b6:	b6 01       	movw	r22, r12
    79b8:	c7 01       	movw	r24, r14
    79ba:	05 d9       	rcall	.-3574   	; 0x6bc6 <TMR_SR_sendTimeout>
    79bc:	61 15       	cp	r22, r1
    79be:	71 05       	cpc	r23, r1
    79c0:	81 05       	cpc	r24, r1
    79c2:	91 05       	cpc	r25, r1
    79c4:	09 f0       	breq	.+2      	; 0x79c8 <TMR_SR_executeEmbeddedRead+0x1d2>
    79c6:	54 c0       	rjmp	.+168    	; 0x7a70 <TMR_SR_executeEmbeddedRead+0x27a>
    79c8:	81 14       	cp	r8, r1
    79ca:	91 04       	cpc	r9, r1
    79cc:	09 f4       	brne	.+2      	; 0x79d0 <TMR_SR_executeEmbeddedRead+0x1da>
    79ce:	54 c0       	rjmp	.+168    	; 0x7a78 <TMR_SR_executeEmbeddedRead+0x282>
    79d0:	f7 01       	movw	r30, r14
    79d2:	e3 5f       	subi	r30, 0xF3	; 243
    79d4:	f9 4f       	sbci	r31, 0xF9	; 249
    79d6:	80 81       	ld	r24, Z
    79d8:	81 11       	cpse	r24, r1
    79da:	07 c0       	rjmp	.+14     	; 0x79ea <TMR_SR_executeEmbeddedRead+0x1f4>
    79dc:	80 91 de 0b 	lds	r24, 0x0BDE	; 0x800bde <isMultiSelectEnabled>
    79e0:	88 23       	and	r24, r24
    79e2:	31 f0       	breq	.+12     	; 0x79f0 <TMR_SR_executeEmbeddedRead+0x1fa>
    79e4:	e9 e0       	ldi	r30, 0x09	; 9
    79e6:	f0 e0       	ldi	r31, 0x00	; 0
    79e8:	05 c0       	rjmp	.+10     	; 0x79f4 <TMR_SR_executeEmbeddedRead+0x1fe>
    79ea:	e9 e0       	ldi	r30, 0x09	; 9
    79ec:	f0 e0       	ldi	r31, 0x00	; 0
    79ee:	02 c0       	rjmp	.+4      	; 0x79f4 <TMR_SR_executeEmbeddedRead+0x1fe>
    79f0:	e8 e0       	ldi	r30, 0x08	; 8
    79f2:	f0 e0       	ldi	r31, 0x00	; 0
    79f4:	a4 fe       	sbrs	r10, 4
    79f6:	11 c0       	rjmp	.+34     	; 0x7a1a <TMR_SR_executeEmbeddedRead+0x224>
    79f8:	d6 01       	movw	r26, r12
    79fa:	ae 0f       	add	r26, r30
    79fc:	bf 1f       	adc	r27, r31
    79fe:	12 96       	adiw	r26, 0x02	; 2
    7a00:	8c 91       	ld	r24, X
    7a02:	12 97       	sbiw	r26, 0x02	; 2
    7a04:	13 96       	adiw	r26, 0x03	; 3
    7a06:	2c 91       	ld	r18, X
    7a08:	90 e0       	ldi	r25, 0x00	; 0
    7a0a:	98 2f       	mov	r25, r24
    7a0c:	88 27       	eor	r24, r24
    7a0e:	82 2b       	or	r24, r18
    7a10:	d4 01       	movw	r26, r8
    7a12:	8d 93       	st	X+, r24
    7a14:	9c 93       	st	X, r25
    7a16:	34 96       	adiw	r30, 0x04	; 4
    7a18:	09 c0       	rjmp	.+18     	; 0x7a2c <TMR_SR_executeEmbeddedRead+0x236>
    7a1a:	d6 01       	movw	r26, r12
    7a1c:	ae 0f       	add	r26, r30
    7a1e:	bf 1f       	adc	r27, r31
    7a20:	8c 91       	ld	r24, X
    7a22:	90 e0       	ldi	r25, 0x00	; 0
    7a24:	d4 01       	movw	r26, r8
    7a26:	8d 93       	st	X+, r24
    7a28:	9c 93       	st	X, r25
    7a2a:	31 96       	adiw	r30, 0x01	; 1
    7a2c:	df 01       	movw	r26, r30
    7a2e:	12 96       	adiw	r26, 0x02	; 2
    7a30:	ac 0d       	add	r26, r12
    7a32:	bd 1d       	adc	r27, r13
    7a34:	8c 91       	ld	r24, X
    7a36:	90 e0       	ldi	r25, 0x00	; 0
    7a38:	98 2f       	mov	r25, r24
    7a3a:	88 27       	eor	r24, r24
    7a3c:	11 96       	adiw	r26, 0x01	; 1
    7a3e:	2c 91       	ld	r18, X
    7a40:	82 2b       	or	r24, r18
    7a42:	d4 01       	movw	r26, r8
    7a44:	13 96       	adiw	r26, 0x03	; 3
    7a46:	9c 93       	st	X, r25
    7a48:	8e 93       	st	-X, r24
    7a4a:	12 97       	sbiw	r26, 0x02	; 2
    7a4c:	34 96       	adiw	r30, 0x04	; 4
    7a4e:	ec 0d       	add	r30, r12
    7a50:	fd 1d       	adc	r31, r13
    7a52:	80 81       	ld	r24, Z
    7a54:	90 e0       	ldi	r25, 0x00	; 0
    7a56:	98 2f       	mov	r25, r24
    7a58:	88 27       	eor	r24, r24
    7a5a:	21 81       	ldd	r18, Z+1	; 0x01
    7a5c:	82 2b       	or	r24, r18
    7a5e:	15 96       	adiw	r26, 0x05	; 5
    7a60:	9c 93       	st	X, r25
    7a62:	8e 93       	st	-X, r24
    7a64:	14 97       	sbiw	r26, 0x04	; 4
    7a66:	40 e0       	ldi	r20, 0x00	; 0
    7a68:	30 e0       	ldi	r19, 0x00	; 0
    7a6a:	20 e0       	ldi	r18, 0x00	; 0
    7a6c:	90 e0       	ldi	r25, 0x00	; 0
    7a6e:	08 c0       	rjmp	.+16     	; 0x7a80 <TMR_SR_executeEmbeddedRead+0x28a>
    7a70:	46 2f       	mov	r20, r22
    7a72:	37 2f       	mov	r19, r23
    7a74:	28 2f       	mov	r18, r24
    7a76:	04 c0       	rjmp	.+8      	; 0x7a80 <TMR_SR_executeEmbeddedRead+0x28a>
    7a78:	40 e0       	ldi	r20, 0x00	; 0
    7a7a:	30 e0       	ldi	r19, 0x00	; 0
    7a7c:	20 e0       	ldi	r18, 0x00	; 0
    7a7e:	90 e0       	ldi	r25, 0x00	; 0
    7a80:	64 2f       	mov	r22, r20
    7a82:	73 2f       	mov	r23, r19
    7a84:	82 2f       	mov	r24, r18
    7a86:	cf 5f       	subi	r28, 0xFF	; 255
    7a88:	de 4f       	sbci	r29, 0xFE	; 254
    7a8a:	0f b6       	in	r0, 0x3f	; 63
    7a8c:	f8 94       	cli
    7a8e:	de bf       	out	0x3e, r29	; 62
    7a90:	0f be       	out	0x3f, r0	; 63
    7a92:	cd bf       	out	0x3d, r28	; 61
    7a94:	df 91       	pop	r29
    7a96:	cf 91       	pop	r28
    7a98:	1f 91       	pop	r17
    7a9a:	0f 91       	pop	r16
    7a9c:	ff 90       	pop	r15
    7a9e:	ef 90       	pop	r14
    7aa0:	df 90       	pop	r13
    7aa2:	cf 90       	pop	r12
    7aa4:	bf 90       	pop	r11
    7aa6:	af 90       	pop	r10
    7aa8:	9f 90       	pop	r9
    7aaa:	8f 90       	pop	r8
    7aac:	7f 90       	pop	r7
    7aae:	6f 90       	pop	r6
    7ab0:	5f 90       	pop	r5
    7ab2:	08 95       	ret

00007ab4 <TMR_SR_msgAddGEN2WriteTagEPC>:
    7ab4:	0f 93       	push	r16
    7ab6:	cf 93       	push	r28
    7ab8:	df 93       	push	r29
    7aba:	eb 01       	movw	r28, r22
    7abc:	e0 91 d6 0b 	lds	r30, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7ac0:	f0 91 d7 0b 	lds	r31, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7ac4:	31 96       	adiw	r30, 0x01	; 1
    7ac6:	f0 93 d7 0b 	sts	0x0BD7, r31	; 0x800bd7 <totalMsgIdx+0x1>
    7aca:	e0 93 d6 0b 	sts	0x0BD6, r30	; 0x800bd6 <totalMsgIdx>
    7ace:	68 81       	ld	r22, Y
    7ad0:	71 e0       	ldi	r23, 0x01	; 1
    7ad2:	76 0f       	add	r23, r22
    7ad4:	78 83       	st	Y, r23
    7ad6:	fc 01       	movw	r30, r24
    7ad8:	e6 0f       	add	r30, r22
    7ada:	f1 1d       	adc	r31, r1
    7adc:	63 e2       	ldi	r22, 0x23	; 35
    7ade:	60 83       	st	Z, r22
    7ae0:	e0 91 d6 0b 	lds	r30, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7ae4:	f0 91 d7 0b 	lds	r31, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7ae8:	32 96       	adiw	r30, 0x02	; 2
    7aea:	f0 93 d7 0b 	sts	0x0BD7, r31	; 0x800bd7 <totalMsgIdx+0x1>
    7aee:	e0 93 d6 0b 	sts	0x0BD6, r30	; 0x800bd6 <totalMsgIdx>
    7af2:	68 81       	ld	r22, Y
    7af4:	71 e0       	ldi	r23, 0x01	; 1
    7af6:	76 0f       	add	r23, r22
    7af8:	78 83       	st	Y, r23
    7afa:	fc 01       	movw	r30, r24
    7afc:	e6 0f       	add	r30, r22
    7afe:	f1 1d       	adc	r31, r1
    7b00:	50 83       	st	Z, r21
    7b02:	58 81       	ld	r21, Y
    7b04:	61 e0       	ldi	r22, 0x01	; 1
    7b06:	65 0f       	add	r22, r21
    7b08:	68 83       	st	Y, r22
    7b0a:	fc 01       	movw	r30, r24
    7b0c:	e5 0f       	add	r30, r21
    7b0e:	f1 1d       	adc	r31, r1
    7b10:	40 83       	st	Z, r20
    7b12:	40 91 d6 0b 	lds	r20, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7b16:	50 91 d7 0b 	lds	r21, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7b1a:	4e 5f       	subi	r20, 0xFE	; 254
    7b1c:	5f 4f       	sbci	r21, 0xFF	; 255
    7b1e:	50 93 d7 0b 	sts	0x0BD7, r21	; 0x800bd7 <totalMsgIdx+0x1>
    7b22:	40 93 d6 0b 	sts	0x0BD6, r20	; 0x800bd6 <totalMsgIdx>
    7b26:	48 81       	ld	r20, Y
    7b28:	51 e0       	ldi	r21, 0x01	; 1
    7b2a:	54 0f       	add	r21, r20
    7b2c:	58 83       	st	Y, r21
    7b2e:	fc 01       	movw	r30, r24
    7b30:	e4 0f       	add	r30, r20
    7b32:	f1 1d       	adc	r31, r1
    7b34:	10 82       	st	Z, r1
    7b36:	48 81       	ld	r20, Y
    7b38:	51 e0       	ldi	r21, 0x01	; 1
    7b3a:	54 0f       	add	r21, r20
    7b3c:	58 83       	st	Y, r21
    7b3e:	fc 01       	movw	r30, r24
    7b40:	e4 0f       	add	r30, r20
    7b42:	f1 1d       	adc	r31, r1
    7b44:	10 82       	st	Z, r1
    7b46:	e8 81       	ld	r30, Y
    7b48:	40 2f       	mov	r20, r16
    7b4a:	50 e0       	ldi	r21, 0x00	; 0
    7b4c:	b9 01       	movw	r22, r18
    7b4e:	8e 0f       	add	r24, r30
    7b50:	91 1d       	adc	r25, r1
    7b52:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    7b56:	88 81       	ld	r24, Y
    7b58:	08 0f       	add	r16, r24
    7b5a:	08 83       	st	Y, r16
    7b5c:	df 91       	pop	r29
    7b5e:	cf 91       	pop	r28
    7b60:	0f 91       	pop	r16
    7b62:	08 95       	ret

00007b64 <TMR_SR_msgAddGEN2DataRead>:
    7b64:	4f 92       	push	r4
    7b66:	5f 92       	push	r5
    7b68:	6f 92       	push	r6
    7b6a:	7f 92       	push	r7
    7b6c:	8f 92       	push	r8
    7b6e:	af 92       	push	r10
    7b70:	bf 92       	push	r11
    7b72:	cf 92       	push	r12
    7b74:	df 92       	push	r13
    7b76:	ef 92       	push	r14
    7b78:	ff 92       	push	r15
    7b7a:	0f 93       	push	r16
    7b7c:	1f 93       	push	r17
    7b7e:	cf 93       	push	r28
    7b80:	df 93       	push	r29
    7b82:	cd b7       	in	r28, 0x3d	; 61
    7b84:	de b7       	in	r29, 0x3e	; 62
    7b86:	2c 01       	movw	r4, r24
    7b88:	3b 01       	movw	r6, r22
    7b8a:	b2 2e       	mov	r11, r18
    7b8c:	d0 2e       	mov	r13, r16
    7b8e:	00 e0       	ldi	r16, 0x00	; 0
    7b90:	9a 01       	movw	r18, r20
    7b92:	48 e2       	ldi	r20, 0x28	; 40
    7b94:	d1 d8       	rcall	.-3678   	; 0x6d38 <TMR_SR_cmdFrameHeader>
    7b96:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7b9a:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7b9e:	01 96       	adiw	r24, 0x01	; 1
    7ba0:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    7ba4:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7ba8:	f3 01       	movw	r30, r6
    7baa:	80 81       	ld	r24, Z
    7bac:	91 e0       	ldi	r25, 0x01	; 1
    7bae:	98 0f       	add	r25, r24
    7bb0:	90 83       	st	Z, r25
    7bb2:	f2 01       	movw	r30, r4
    7bb4:	e8 0f       	add	r30, r24
    7bb6:	f1 1d       	adc	r31, r1
    7bb8:	a0 82       	st	Z, r10
    7bba:	88 20       	and	r8, r8
    7bbc:	d9 f0       	breq	.+54     	; 0x7bf4 <TMR_SR_msgAddGEN2DataRead+0x90>
    7bbe:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7bc2:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7bc6:	02 96       	adiw	r24, 0x02	; 2
    7bc8:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    7bcc:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7bd0:	f3 01       	movw	r30, r6
    7bd2:	80 81       	ld	r24, Z
    7bd4:	91 e0       	ldi	r25, 0x01	; 1
    7bd6:	98 0f       	add	r25, r24
    7bd8:	90 83       	st	Z, r25
    7bda:	f2 01       	movw	r30, r4
    7bdc:	e8 0f       	add	r30, r24
    7bde:	f1 1d       	adc	r31, r1
    7be0:	10 82       	st	Z, r1
    7be2:	f3 01       	movw	r30, r6
    7be4:	80 81       	ld	r24, Z
    7be6:	91 e0       	ldi	r25, 0x01	; 1
    7be8:	98 0f       	add	r25, r24
    7bea:	90 83       	st	Z, r25
    7bec:	f2 01       	movw	r30, r4
    7bee:	e8 0f       	add	r30, r24
    7bf0:	f1 1d       	adc	r31, r1
    7bf2:	10 82       	st	Z, r1
    7bf4:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7bf8:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7bfc:	01 96       	adiw	r24, 0x01	; 1
    7bfe:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    7c02:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7c06:	f3 01       	movw	r30, r6
    7c08:	80 81       	ld	r24, Z
    7c0a:	91 e0       	ldi	r25, 0x01	; 1
    7c0c:	98 0f       	add	r25, r24
    7c0e:	90 83       	st	Z, r25
    7c10:	f2 01       	movw	r30, r4
    7c12:	e8 0f       	add	r30, r24
    7c14:	f1 1d       	adc	r31, r1
    7c16:	b0 82       	st	Z, r11
    7c18:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7c1c:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7c20:	04 96       	adiw	r24, 0x04	; 4
    7c22:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    7c26:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7c2a:	f3 01       	movw	r30, r6
    7c2c:	80 81       	ld	r24, Z
    7c2e:	91 e0       	ldi	r25, 0x01	; 1
    7c30:	98 0f       	add	r25, r24
    7c32:	90 83       	st	Z, r25
    7c34:	f2 01       	movw	r30, r4
    7c36:	e8 0f       	add	r30, r24
    7c38:	f1 1d       	adc	r31, r1
    7c3a:	10 83       	st	Z, r17
    7c3c:	f3 01       	movw	r30, r6
    7c3e:	80 81       	ld	r24, Z
    7c40:	91 e0       	ldi	r25, 0x01	; 1
    7c42:	98 0f       	add	r25, r24
    7c44:	90 83       	st	Z, r25
    7c46:	f2 01       	movw	r30, r4
    7c48:	e8 0f       	add	r30, r24
    7c4a:	f1 1d       	adc	r31, r1
    7c4c:	d0 82       	st	Z, r13
    7c4e:	f3 01       	movw	r30, r6
    7c50:	80 81       	ld	r24, Z
    7c52:	91 e0       	ldi	r25, 0x01	; 1
    7c54:	98 0f       	add	r25, r24
    7c56:	90 83       	st	Z, r25
    7c58:	f2 01       	movw	r30, r4
    7c5a:	e8 0f       	add	r30, r24
    7c5c:	f1 1d       	adc	r31, r1
    7c5e:	f0 82       	st	Z, r15
    7c60:	f3 01       	movw	r30, r6
    7c62:	80 81       	ld	r24, Z
    7c64:	91 e0       	ldi	r25, 0x01	; 1
    7c66:	98 0f       	add	r25, r24
    7c68:	90 83       	st	Z, r25
    7c6a:	f2 01       	movw	r30, r4
    7c6c:	e8 0f       	add	r30, r24
    7c6e:	f1 1d       	adc	r31, r1
    7c70:	e0 82       	st	Z, r14
    7c72:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7c76:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7c7a:	01 96       	adiw	r24, 0x01	; 1
    7c7c:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    7c80:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7c84:	f3 01       	movw	r30, r6
    7c86:	80 81       	ld	r24, Z
    7c88:	91 e0       	ldi	r25, 0x01	; 1
    7c8a:	98 0f       	add	r25, r24
    7c8c:	90 83       	st	Z, r25
    7c8e:	f2 01       	movw	r30, r4
    7c90:	e8 0f       	add	r30, r24
    7c92:	f1 1d       	adc	r31, r1
    7c94:	c0 82       	st	Z, r12
    7c96:	df 91       	pop	r29
    7c98:	cf 91       	pop	r28
    7c9a:	1f 91       	pop	r17
    7c9c:	0f 91       	pop	r16
    7c9e:	ff 90       	pop	r15
    7ca0:	ef 90       	pop	r14
    7ca2:	df 90       	pop	r13
    7ca4:	cf 90       	pop	r12
    7ca6:	bf 90       	pop	r11
    7ca8:	af 90       	pop	r10
    7caa:	8f 90       	pop	r8
    7cac:	7f 90       	pop	r7
    7cae:	6f 90       	pop	r6
    7cb0:	5f 90       	pop	r5
    7cb2:	4f 90       	pop	r4
    7cb4:	08 95       	ret

00007cb6 <TMR_SR_msgAddGEN2DataWrite>:
    7cb6:	cf 92       	push	r12
    7cb8:	ef 92       	push	r14
    7cba:	ff 92       	push	r15
    7cbc:	0f 93       	push	r16
    7cbe:	1f 93       	push	r17
    7cc0:	fb 01       	movw	r30, r22
    7cc2:	60 91 d6 0b 	lds	r22, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7cc6:	70 91 d7 0b 	lds	r23, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7cca:	6f 5f       	subi	r22, 0xFF	; 255
    7ccc:	7f 4f       	sbci	r23, 0xFF	; 255
    7cce:	70 93 d7 0b 	sts	0x0BD7, r23	; 0x800bd7 <totalMsgIdx+0x1>
    7cd2:	60 93 d6 0b 	sts	0x0BD6, r22	; 0x800bd6 <totalMsgIdx>
    7cd6:	30 81       	ld	r19, Z
    7cd8:	61 e0       	ldi	r22, 0x01	; 1
    7cda:	63 0f       	add	r22, r19
    7cdc:	60 83       	st	Z, r22
    7cde:	dc 01       	movw	r26, r24
    7ce0:	a3 0f       	add	r26, r19
    7ce2:	b1 1d       	adc	r27, r1
    7ce4:	34 e2       	ldi	r19, 0x24	; 36
    7ce6:	3c 93       	st	X, r19
    7ce8:	60 91 d6 0b 	lds	r22, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7cec:	70 91 d7 0b 	lds	r23, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7cf0:	6e 5f       	subi	r22, 0xFE	; 254
    7cf2:	7f 4f       	sbci	r23, 0xFF	; 255
    7cf4:	70 93 d7 0b 	sts	0x0BD7, r23	; 0x800bd7 <totalMsgIdx+0x1>
    7cf8:	60 93 d6 0b 	sts	0x0BD6, r22	; 0x800bd6 <totalMsgIdx>
    7cfc:	30 81       	ld	r19, Z
    7cfe:	61 e0       	ldi	r22, 0x01	; 1
    7d00:	63 0f       	add	r22, r19
    7d02:	60 83       	st	Z, r22
    7d04:	dc 01       	movw	r26, r24
    7d06:	a3 0f       	add	r26, r19
    7d08:	b1 1d       	adc	r27, r1
    7d0a:	5c 93       	st	X, r21
    7d0c:	30 81       	ld	r19, Z
    7d0e:	51 e0       	ldi	r21, 0x01	; 1
    7d10:	53 0f       	add	r21, r19
    7d12:	50 83       	st	Z, r21
    7d14:	dc 01       	movw	r26, r24
    7d16:	a3 0f       	add	r26, r19
    7d18:	b1 1d       	adc	r27, r1
    7d1a:	4c 93       	st	X, r20
    7d1c:	c1 10       	cpse	r12, r1
    7d1e:	02 c0       	rjmp	.+4      	; 0x7d24 <TMR_SR_msgAddGEN2DataWrite+0x6e>
    7d20:	30 e0       	ldi	r19, 0x00	; 0
    7d22:	01 c0       	rjmp	.+2      	; 0x7d26 <TMR_SR_msgAddGEN2DataWrite+0x70>
    7d24:	34 e8       	ldi	r19, 0x84	; 132
    7d26:	40 91 de 0b 	lds	r20, 0x0BDE	; 0x800bde <isMultiSelectEnabled>
    7d2a:	44 23       	and	r20, r20
    7d2c:	29 f0       	breq	.+10     	; 0x7d38 <TMR_SR_msgAddGEN2DataWrite+0x82>
    7d2e:	40 91 dd 0b 	lds	r20, 0x0BDD	; 0x800bdd <isEmbeddedTagopEnabled>
    7d32:	41 11       	cpse	r20, r1
    7d34:	01 c0       	rjmp	.+2      	; 0x7d38 <TMR_SR_msgAddGEN2DataWrite+0x82>
    7d36:	38 68       	ori	r19, 0x88	; 136
    7d38:	33 23       	and	r19, r19
    7d3a:	91 f0       	breq	.+36     	; 0x7d60 <TMR_SR_msgAddGEN2DataWrite+0xaa>
    7d3c:	40 91 d6 0b 	lds	r20, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7d40:	50 91 d7 0b 	lds	r21, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7d44:	4f 5f       	subi	r20, 0xFF	; 255
    7d46:	5f 4f       	sbci	r21, 0xFF	; 255
    7d48:	50 93 d7 0b 	sts	0x0BD7, r21	; 0x800bd7 <totalMsgIdx+0x1>
    7d4c:	40 93 d6 0b 	sts	0x0BD6, r20	; 0x800bd6 <totalMsgIdx>
    7d50:	40 81       	ld	r20, Z
    7d52:	51 e0       	ldi	r21, 0x01	; 1
    7d54:	54 0f       	add	r21, r20
    7d56:	50 83       	st	Z, r21
    7d58:	dc 01       	movw	r26, r24
    7d5a:	a4 0f       	add	r26, r20
    7d5c:	b1 1d       	adc	r27, r1
    7d5e:	3c 93       	st	X, r19
    7d60:	40 91 d6 0b 	lds	r20, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7d64:	50 91 d7 0b 	lds	r21, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7d68:	4f 5f       	subi	r20, 0xFF	; 255
    7d6a:	5f 4f       	sbci	r21, 0xFF	; 255
    7d6c:	50 93 d7 0b 	sts	0x0BD7, r21	; 0x800bd7 <totalMsgIdx+0x1>
    7d70:	40 93 d6 0b 	sts	0x0BD6, r20	; 0x800bd6 <totalMsgIdx>
    7d74:	30 81       	ld	r19, Z
    7d76:	41 e0       	ldi	r20, 0x01	; 1
    7d78:	43 0f       	add	r20, r19
    7d7a:	40 83       	st	Z, r20
    7d7c:	dc 01       	movw	r26, r24
    7d7e:	a3 0f       	add	r26, r19
    7d80:	b1 1d       	adc	r27, r1
    7d82:	1c 92       	st	X, r1
    7d84:	40 91 d6 0b 	lds	r20, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7d88:	50 91 d7 0b 	lds	r21, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7d8c:	4c 5f       	subi	r20, 0xFC	; 252
    7d8e:	5f 4f       	sbci	r21, 0xFF	; 255
    7d90:	50 93 d7 0b 	sts	0x0BD7, r21	; 0x800bd7 <totalMsgIdx+0x1>
    7d94:	40 93 d6 0b 	sts	0x0BD6, r20	; 0x800bd6 <totalMsgIdx>
    7d98:	30 81       	ld	r19, Z
    7d9a:	41 e0       	ldi	r20, 0x01	; 1
    7d9c:	43 0f       	add	r20, r19
    7d9e:	40 83       	st	Z, r20
    7da0:	dc 01       	movw	r26, r24
    7da2:	a3 0f       	add	r26, r19
    7da4:	b1 1d       	adc	r27, r1
    7da6:	1c 93       	st	X, r17
    7da8:	30 81       	ld	r19, Z
    7daa:	41 e0       	ldi	r20, 0x01	; 1
    7dac:	43 0f       	add	r20, r19
    7dae:	40 83       	st	Z, r20
    7db0:	dc 01       	movw	r26, r24
    7db2:	a3 0f       	add	r26, r19
    7db4:	b1 1d       	adc	r27, r1
    7db6:	0c 93       	st	X, r16
    7db8:	30 81       	ld	r19, Z
    7dba:	41 e0       	ldi	r20, 0x01	; 1
    7dbc:	43 0f       	add	r20, r19
    7dbe:	40 83       	st	Z, r20
    7dc0:	dc 01       	movw	r26, r24
    7dc2:	a3 0f       	add	r26, r19
    7dc4:	b1 1d       	adc	r27, r1
    7dc6:	fc 92       	st	X, r15
    7dc8:	30 81       	ld	r19, Z
    7dca:	41 e0       	ldi	r20, 0x01	; 1
    7dcc:	43 0f       	add	r20, r19
    7dce:	40 83       	st	Z, r20
    7dd0:	dc 01       	movw	r26, r24
    7dd2:	a3 0f       	add	r26, r19
    7dd4:	b1 1d       	adc	r27, r1
    7dd6:	ec 92       	st	X, r14
    7dd8:	40 91 d6 0b 	lds	r20, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7ddc:	50 91 d7 0b 	lds	r21, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7de0:	4f 5f       	subi	r20, 0xFF	; 255
    7de2:	5f 4f       	sbci	r21, 0xFF	; 255
    7de4:	50 93 d7 0b 	sts	0x0BD7, r21	; 0x800bd7 <totalMsgIdx+0x1>
    7de8:	40 93 d6 0b 	sts	0x0BD6, r20	; 0x800bd6 <totalMsgIdx>
    7dec:	30 81       	ld	r19, Z
    7dee:	41 e0       	ldi	r20, 0x01	; 1
    7df0:	43 0f       	add	r20, r19
    7df2:	40 83       	st	Z, r20
    7df4:	fc 01       	movw	r30, r24
    7df6:	e3 0f       	add	r30, r19
    7df8:	f1 1d       	adc	r31, r1
    7dfa:	20 83       	st	Z, r18
    7dfc:	1f 91       	pop	r17
    7dfe:	0f 91       	pop	r16
    7e00:	ff 90       	pop	r15
    7e02:	ef 90       	pop	r14
    7e04:	cf 90       	pop	r12
    7e06:	08 95       	ret

00007e08 <TMR_SR_msgAddGEN2LockTag>:
    7e08:	7f 92       	push	r7
    7e0a:	8f 92       	push	r8
    7e0c:	9f 92       	push	r9
    7e0e:	af 92       	push	r10
    7e10:	bf 92       	push	r11
    7e12:	cf 92       	push	r12
    7e14:	df 92       	push	r13
    7e16:	ef 92       	push	r14
    7e18:	ff 92       	push	r15
    7e1a:	0f 93       	push	r16
    7e1c:	1f 93       	push	r17
    7e1e:	cf 93       	push	r28
    7e20:	df 93       	push	r29
    7e22:	5c 01       	movw	r10, r24
    7e24:	eb 01       	movw	r28, r22
    7e26:	82 2e       	mov	r8, r18
    7e28:	73 2e       	mov	r7, r19
    7e2a:	90 2e       	mov	r9, r16
    7e2c:	00 e0       	ldi	r16, 0x00	; 0
    7e2e:	9a 01       	movw	r18, r20
    7e30:	45 e2       	ldi	r20, 0x25	; 37
    7e32:	0e 94 9c 36 	call	0x6d38	; 0x6d38 <TMR_SR_cmdFrameHeader>
    7e36:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7e3a:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7e3e:	01 96       	adiw	r24, 0x01	; 1
    7e40:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    7e44:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7e48:	88 81       	ld	r24, Y
    7e4a:	91 e0       	ldi	r25, 0x01	; 1
    7e4c:	98 0f       	add	r25, r24
    7e4e:	98 83       	st	Y, r25
    7e50:	f5 01       	movw	r30, r10
    7e52:	e8 0f       	add	r30, r24
    7e54:	f1 1d       	adc	r31, r1
    7e56:	10 82       	st	Z, r1
    7e58:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7e5c:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7e60:	04 96       	adiw	r24, 0x04	; 4
    7e62:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    7e66:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7e6a:	88 81       	ld	r24, Y
    7e6c:	91 e0       	ldi	r25, 0x01	; 1
    7e6e:	98 0f       	add	r25, r24
    7e70:	98 83       	st	Y, r25
    7e72:	f5 01       	movw	r30, r10
    7e74:	e8 0f       	add	r30, r24
    7e76:	f1 1d       	adc	r31, r1
    7e78:	f0 82       	st	Z, r15
    7e7a:	88 81       	ld	r24, Y
    7e7c:	91 e0       	ldi	r25, 0x01	; 1
    7e7e:	98 0f       	add	r25, r24
    7e80:	98 83       	st	Y, r25
    7e82:	f5 01       	movw	r30, r10
    7e84:	e8 0f       	add	r30, r24
    7e86:	f1 1d       	adc	r31, r1
    7e88:	e0 82       	st	Z, r14
    7e8a:	88 81       	ld	r24, Y
    7e8c:	91 e0       	ldi	r25, 0x01	; 1
    7e8e:	98 0f       	add	r25, r24
    7e90:	98 83       	st	Y, r25
    7e92:	f5 01       	movw	r30, r10
    7e94:	e8 0f       	add	r30, r24
    7e96:	f1 1d       	adc	r31, r1
    7e98:	d0 82       	st	Z, r13
    7e9a:	88 81       	ld	r24, Y
    7e9c:	91 e0       	ldi	r25, 0x01	; 1
    7e9e:	98 0f       	add	r25, r24
    7ea0:	98 83       	st	Y, r25
    7ea2:	f5 01       	movw	r30, r10
    7ea4:	e8 0f       	add	r30, r24
    7ea6:	f1 1d       	adc	r31, r1
    7ea8:	c0 82       	st	Z, r12
    7eaa:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7eae:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7eb2:	02 96       	adiw	r24, 0x02	; 2
    7eb4:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    7eb8:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7ebc:	88 81       	ld	r24, Y
    7ebe:	91 e0       	ldi	r25, 0x01	; 1
    7ec0:	98 0f       	add	r25, r24
    7ec2:	98 83       	st	Y, r25
    7ec4:	f5 01       	movw	r30, r10
    7ec6:	e8 0f       	add	r30, r24
    7ec8:	f1 1d       	adc	r31, r1
    7eca:	70 82       	st	Z, r7
    7ecc:	88 81       	ld	r24, Y
    7ece:	91 e0       	ldi	r25, 0x01	; 1
    7ed0:	98 0f       	add	r25, r24
    7ed2:	98 83       	st	Y, r25
    7ed4:	f5 01       	movw	r30, r10
    7ed6:	e8 0f       	add	r30, r24
    7ed8:	f1 1d       	adc	r31, r1
    7eda:	80 82       	st	Z, r8
    7edc:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7ee0:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7ee4:	02 96       	adiw	r24, 0x02	; 2
    7ee6:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    7eea:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7eee:	88 81       	ld	r24, Y
    7ef0:	91 e0       	ldi	r25, 0x01	; 1
    7ef2:	98 0f       	add	r25, r24
    7ef4:	98 83       	st	Y, r25
    7ef6:	f5 01       	movw	r30, r10
    7ef8:	e8 0f       	add	r30, r24
    7efa:	f1 1d       	adc	r31, r1
    7efc:	10 83       	st	Z, r17
    7efe:	88 81       	ld	r24, Y
    7f00:	91 e0       	ldi	r25, 0x01	; 1
    7f02:	98 0f       	add	r25, r24
    7f04:	98 83       	st	Y, r25
    7f06:	f5 01       	movw	r30, r10
    7f08:	e8 0f       	add	r30, r24
    7f0a:	f1 1d       	adc	r31, r1
    7f0c:	90 82       	st	Z, r9
    7f0e:	df 91       	pop	r29
    7f10:	cf 91       	pop	r28
    7f12:	1f 91       	pop	r17
    7f14:	0f 91       	pop	r16
    7f16:	ff 90       	pop	r15
    7f18:	ef 90       	pop	r14
    7f1a:	df 90       	pop	r13
    7f1c:	cf 90       	pop	r12
    7f1e:	bf 90       	pop	r11
    7f20:	af 90       	pop	r10
    7f22:	9f 90       	pop	r9
    7f24:	8f 90       	pop	r8
    7f26:	7f 90       	pop	r7
    7f28:	08 95       	ret

00007f2a <TMR_SR_msgAddGEN2KillTag>:
    7f2a:	bf 92       	push	r11
    7f2c:	cf 92       	push	r12
    7f2e:	df 92       	push	r13
    7f30:	ef 92       	push	r14
    7f32:	ff 92       	push	r15
    7f34:	0f 93       	push	r16
    7f36:	1f 93       	push	r17
    7f38:	cf 93       	push	r28
    7f3a:	df 93       	push	r29
    7f3c:	7c 01       	movw	r14, r24
    7f3e:	eb 01       	movw	r28, r22
    7f40:	d0 2e       	mov	r13, r16
    7f42:	c2 2e       	mov	r12, r18
    7f44:	b3 2e       	mov	r11, r19
    7f46:	00 e0       	ldi	r16, 0x00	; 0
    7f48:	9a 01       	movw	r18, r20
    7f4a:	46 e2       	ldi	r20, 0x26	; 38
    7f4c:	0e 94 9c 36 	call	0x6d38	; 0x6d38 <TMR_SR_cmdFrameHeader>
    7f50:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7f54:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7f58:	01 96       	adiw	r24, 0x01	; 1
    7f5a:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    7f5e:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7f62:	88 81       	ld	r24, Y
    7f64:	91 e0       	ldi	r25, 0x01	; 1
    7f66:	98 0f       	add	r25, r24
    7f68:	98 83       	st	Y, r25
    7f6a:	f7 01       	movw	r30, r14
    7f6c:	e8 0f       	add	r30, r24
    7f6e:	f1 1d       	adc	r31, r1
    7f70:	10 82       	st	Z, r1
    7f72:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7f76:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7f7a:	04 96       	adiw	r24, 0x04	; 4
    7f7c:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    7f80:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7f84:	88 81       	ld	r24, Y
    7f86:	91 e0       	ldi	r25, 0x01	; 1
    7f88:	98 0f       	add	r25, r24
    7f8a:	98 83       	st	Y, r25
    7f8c:	f7 01       	movw	r30, r14
    7f8e:	e8 0f       	add	r30, r24
    7f90:	f1 1d       	adc	r31, r1
    7f92:	b0 82       	st	Z, r11
    7f94:	88 81       	ld	r24, Y
    7f96:	91 e0       	ldi	r25, 0x01	; 1
    7f98:	98 0f       	add	r25, r24
    7f9a:	98 83       	st	Y, r25
    7f9c:	f7 01       	movw	r30, r14
    7f9e:	e8 0f       	add	r30, r24
    7fa0:	f1 1d       	adc	r31, r1
    7fa2:	c0 82       	st	Z, r12
    7fa4:	88 81       	ld	r24, Y
    7fa6:	91 e0       	ldi	r25, 0x01	; 1
    7fa8:	98 0f       	add	r25, r24
    7faa:	98 83       	st	Y, r25
    7fac:	f7 01       	movw	r30, r14
    7fae:	e8 0f       	add	r30, r24
    7fb0:	f1 1d       	adc	r31, r1
    7fb2:	10 83       	st	Z, r17
    7fb4:	88 81       	ld	r24, Y
    7fb6:	91 e0       	ldi	r25, 0x01	; 1
    7fb8:	98 0f       	add	r25, r24
    7fba:	98 83       	st	Y, r25
    7fbc:	f7 01       	movw	r30, r14
    7fbe:	e8 0f       	add	r30, r24
    7fc0:	f1 1d       	adc	r31, r1
    7fc2:	d0 82       	st	Z, r13
    7fc4:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    7fc8:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    7fcc:	01 96       	adiw	r24, 0x01	; 1
    7fce:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    7fd2:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    7fd6:	88 81       	ld	r24, Y
    7fd8:	91 e0       	ldi	r25, 0x01	; 1
    7fda:	98 0f       	add	r25, r24
    7fdc:	98 83       	st	Y, r25
    7fde:	f7 01       	movw	r30, r14
    7fe0:	e8 0f       	add	r30, r24
    7fe2:	f1 1d       	adc	r31, r1
    7fe4:	10 82       	st	Z, r1
    7fe6:	df 91       	pop	r29
    7fe8:	cf 91       	pop	r28
    7fea:	1f 91       	pop	r17
    7fec:	0f 91       	pop	r16
    7fee:	ff 90       	pop	r15
    7ff0:	ef 90       	pop	r14
    7ff2:	df 90       	pop	r13
    7ff4:	cf 90       	pop	r12
    7ff6:	bf 90       	pop	r11
    7ff8:	08 95       	ret

00007ffa <TMR_SR_msgAddGEN2BlockWrite>:
    7ffa:	2f 92       	push	r2
    7ffc:	3f 92       	push	r3
    7ffe:	4f 92       	push	r4
    8000:	5f 92       	push	r5
    8002:	6f 92       	push	r6
    8004:	7f 92       	push	r7
    8006:	8f 92       	push	r8
    8008:	9f 92       	push	r9
    800a:	af 92       	push	r10
    800c:	bf 92       	push	r11
    800e:	cf 92       	push	r12
    8010:	df 92       	push	r13
    8012:	ef 92       	push	r14
    8014:	ff 92       	push	r15
    8016:	0f 93       	push	r16
    8018:	1f 93       	push	r17
    801a:	cf 93       	push	r28
    801c:	df 93       	push	r29
    801e:	cd b7       	in	r28, 0x3d	; 61
    8020:	de b7       	in	r29, 0x3e	; 62
    8022:	28 97       	sbiw	r28, 0x08	; 8
    8024:	0f b6       	in	r0, 0x3f	; 63
    8026:	f8 94       	cli
    8028:	de bf       	out	0x3e, r29	; 62
    802a:	0f be       	out	0x3f, r0	; 63
    802c:	cd bf       	out	0x3d, r28	; 61
    802e:	2c 01       	movw	r4, r24
    8030:	3b 01       	movw	r6, r22
    8032:	32 2e       	mov	r3, r18
    8034:	ee 82       	std	Y+6, r14	; 0x06
    8036:	ff 82       	std	Y+7, r15	; 0x07
    8038:	08 87       	std	Y+8, r16	; 0x08
    803a:	21 2e       	mov	r2, r17
    803c:	aa 82       	std	Y+2, r10	; 0x02
    803e:	bb 82       	std	Y+3, r11	; 0x03
    8040:	cc 82       	std	Y+4, r12	; 0x04
    8042:	dd 82       	std	Y+5, r13	; 0x05
    8044:	19 82       	std	Y+1, r1	; 0x01
    8046:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    804a:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    804e:	01 96       	adiw	r24, 0x01	; 1
    8050:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    8054:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    8058:	fb 01       	movw	r30, r22
    805a:	80 81       	ld	r24, Z
    805c:	91 e0       	ldi	r25, 0x01	; 1
    805e:	98 0f       	add	r25, r24
    8060:	90 83       	st	Z, r25
    8062:	f2 01       	movw	r30, r4
    8064:	e8 0f       	add	r30, r24
    8066:	f1 1d       	adc	r31, r1
    8068:	8d e2       	ldi	r24, 0x2D	; 45
    806a:	80 83       	st	Z, r24
    806c:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    8070:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    8074:	02 96       	adiw	r24, 0x02	; 2
    8076:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    807a:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    807e:	fb 01       	movw	r30, r22
    8080:	80 81       	ld	r24, Z
    8082:	91 e0       	ldi	r25, 0x01	; 1
    8084:	98 0f       	add	r25, r24
    8086:	90 83       	st	Z, r25
    8088:	f2 01       	movw	r30, r4
    808a:	e8 0f       	add	r30, r24
    808c:	f1 1d       	adc	r31, r1
    808e:	50 83       	st	Z, r21
    8090:	fb 01       	movw	r30, r22
    8092:	80 81       	ld	r24, Z
    8094:	91 e0       	ldi	r25, 0x01	; 1
    8096:	98 0f       	add	r25, r24
    8098:	90 83       	st	Z, r25
    809a:	f2 01       	movw	r30, r4
    809c:	e8 0f       	add	r30, r24
    809e:	f1 1d       	adc	r31, r1
    80a0:	40 83       	st	Z, r20
    80a2:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    80a6:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    80aa:	01 96       	adiw	r24, 0x01	; 1
    80ac:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    80b0:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    80b4:	fb 01       	movw	r30, r22
    80b6:	80 81       	ld	r24, Z
    80b8:	91 e0       	ldi	r25, 0x01	; 1
    80ba:	98 0f       	add	r25, r24
    80bc:	90 83       	st	Z, r25
    80be:	f2 01       	movw	r30, r4
    80c0:	e8 0f       	add	r30, r24
    80c2:	f1 1d       	adc	r31, r1
    80c4:	10 82       	st	Z, r1
    80c6:	fb 01       	movw	r30, r22
    80c8:	b0 80       	ld	r11, Z
    80ca:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    80ce:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    80d2:	01 96       	adiw	r24, 0x01	; 1
    80d4:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    80d8:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    80dc:	80 81       	ld	r24, Z
    80de:	91 e0       	ldi	r25, 0x01	; 1
    80e0:	98 0f       	add	r25, r24
    80e2:	90 83       	st	Z, r25
    80e4:	f2 01       	movw	r30, r4
    80e6:	e8 0f       	add	r30, r24
    80e8:	f1 1d       	adc	r31, r1
    80ea:	80 e4       	ldi	r24, 0x40	; 64
    80ec:	80 83       	st	Z, r24
    80ee:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    80f2:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    80f6:	01 96       	adiw	r24, 0x01	; 1
    80f8:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    80fc:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    8100:	fb 01       	movw	r30, r22
    8102:	80 81       	ld	r24, Z
    8104:	91 e0       	ldi	r25, 0x01	; 1
    8106:	98 0f       	add	r25, r24
    8108:	90 83       	st	Z, r25
    810a:	f2 01       	movw	r30, r4
    810c:	e8 0f       	add	r30, r24
    810e:	f1 1d       	adc	r31, r1
    8110:	10 82       	st	Z, r1
    8112:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    8116:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    811a:	01 96       	adiw	r24, 0x01	; 1
    811c:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    8120:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    8124:	fb 01       	movw	r30, r22
    8126:	80 81       	ld	r24, Z
    8128:	91 e0       	ldi	r25, 0x01	; 1
    812a:	98 0f       	add	r25, r24
    812c:	90 83       	st	Z, r25
    812e:	f2 01       	movw	r30, r4
    8130:	e8 0f       	add	r30, r24
    8132:	f1 1d       	adc	r31, r1
    8134:	87 ec       	ldi	r24, 0xC7	; 199
    8136:	80 83       	st	Z, r24
    8138:	aa 24       	eor	r10, r10
    813a:	a3 94       	inc	r10
    813c:	cd 8c       	ldd	r12, Y+29	; 0x1d
    813e:	de 8c       	ldd	r13, Y+30	; 0x1e
    8140:	ef 8c       	ldd	r14, Y+31	; 0x1f
    8142:	f8 a0       	ldd	r15, Y+32	; 0x20
    8144:	82 01       	movw	r16, r4
    8146:	9b 01       	movw	r18, r22
    8148:	ae 01       	movw	r20, r28
    814a:	4f 5f       	subi	r20, 0xFF	; 255
    814c:	5f 4f       	sbci	r21, 0xFF	; 255
    814e:	69 a1       	ldd	r22, Y+33	; 0x21
    8150:	7a a1       	ldd	r23, Y+34	; 0x22
    8152:	85 e0       	ldi	r24, 0x05	; 5
    8154:	0e 94 79 2e 	call	0x5cf2	; 0x5cf2 <filterbytes>
    8158:	ab 01       	movw	r20, r22
    815a:	bc 01       	movw	r22, r24
    815c:	f2 01       	movw	r30, r4
    815e:	eb 0d       	add	r30, r11
    8160:	f1 1d       	adc	r31, r1
    8162:	80 81       	ld	r24, Z
    8164:	99 81       	ldd	r25, Y+1	; 0x01
    8166:	89 2b       	or	r24, r25
    8168:	80 83       	st	Z, r24
    816a:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    816e:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    8172:	01 96       	adiw	r24, 0x01	; 1
    8174:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    8178:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    817c:	f3 01       	movw	r30, r6
    817e:	80 81       	ld	r24, Z
    8180:	91 e0       	ldi	r25, 0x01	; 1
    8182:	98 0f       	add	r25, r24
    8184:	90 83       	st	Z, r25
    8186:	f2 01       	movw	r30, r4
    8188:	e8 0f       	add	r30, r24
    818a:	f1 1d       	adc	r31, r1
    818c:	10 82       	st	Z, r1
    818e:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    8192:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    8196:	01 96       	adiw	r24, 0x01	; 1
    8198:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    819c:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    81a0:	f3 01       	movw	r30, r6
    81a2:	80 81       	ld	r24, Z
    81a4:	91 e0       	ldi	r25, 0x01	; 1
    81a6:	98 0f       	add	r25, r24
    81a8:	90 83       	st	Z, r25
    81aa:	f2 01       	movw	r30, r4
    81ac:	e8 0f       	add	r30, r24
    81ae:	f1 1d       	adc	r31, r1
    81b0:	30 82       	st	Z, r3
    81b2:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    81b6:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    81ba:	04 96       	adiw	r24, 0x04	; 4
    81bc:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    81c0:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    81c4:	f3 01       	movw	r30, r6
    81c6:	80 81       	ld	r24, Z
    81c8:	91 e0       	ldi	r25, 0x01	; 1
    81ca:	98 0f       	add	r25, r24
    81cc:	90 83       	st	Z, r25
    81ce:	f2 01       	movw	r30, r4
    81d0:	e8 0f       	add	r30, r24
    81d2:	f1 1d       	adc	r31, r1
    81d4:	20 82       	st	Z, r2
    81d6:	f3 01       	movw	r30, r6
    81d8:	80 81       	ld	r24, Z
    81da:	91 e0       	ldi	r25, 0x01	; 1
    81dc:	98 0f       	add	r25, r24
    81de:	90 83       	st	Z, r25
    81e0:	f2 01       	movw	r30, r4
    81e2:	e8 0f       	add	r30, r24
    81e4:	f1 1d       	adc	r31, r1
    81e6:	08 85       	ldd	r16, Y+8	; 0x08
    81e8:	00 83       	st	Z, r16
    81ea:	f3 01       	movw	r30, r6
    81ec:	80 81       	ld	r24, Z
    81ee:	91 e0       	ldi	r25, 0x01	; 1
    81f0:	98 0f       	add	r25, r24
    81f2:	90 83       	st	Z, r25
    81f4:	f2 01       	movw	r30, r4
    81f6:	e8 0f       	add	r30, r24
    81f8:	f1 1d       	adc	r31, r1
    81fa:	0f 81       	ldd	r16, Y+7	; 0x07
    81fc:	00 83       	st	Z, r16
    81fe:	f3 01       	movw	r30, r6
    8200:	80 81       	ld	r24, Z
    8202:	91 e0       	ldi	r25, 0x01	; 1
    8204:	98 0f       	add	r25, r24
    8206:	90 83       	st	Z, r25
    8208:	f2 01       	movw	r30, r4
    820a:	e8 0f       	add	r30, r24
    820c:	f1 1d       	adc	r31, r1
    820e:	0e 81       	ldd	r16, Y+6	; 0x06
    8210:	00 83       	st	Z, r16
    8212:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    8216:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    821a:	01 96       	adiw	r24, 0x01	; 1
    821c:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    8220:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    8224:	f3 01       	movw	r30, r6
    8226:	80 81       	ld	r24, Z
    8228:	91 e0       	ldi	r25, 0x01	; 1
    822a:	98 0f       	add	r25, r24
    822c:	90 83       	st	Z, r25
    822e:	f2 01       	movw	r30, r4
    8230:	e8 0f       	add	r30, r24
    8232:	f1 1d       	adc	r31, r1
    8234:	0a 81       	ldd	r16, Y+2	; 0x02
    8236:	00 83       	st	Z, r16
    8238:	80 e0       	ldi	r24, 0x00	; 0
    823a:	90 e0       	ldi	r25, 0x00	; 0
    823c:	dc 01       	movw	r26, r24
    823e:	35 c0       	rjmp	.+106    	; 0x82aa <TMR_SR_msgAddGEN2BlockWrite+0x2b0>
    8240:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    8244:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    8248:	2f 5f       	subi	r18, 0xFF	; 255
    824a:	3f 4f       	sbci	r19, 0xFF	; 255
    824c:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    8250:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    8254:	f3 01       	movw	r30, r6
    8256:	20 81       	ld	r18, Z
    8258:	31 e0       	ldi	r19, 0x01	; 1
    825a:	32 0f       	add	r19, r18
    825c:	30 83       	st	Z, r19
    825e:	82 01       	movw	r16, r4
    8260:	02 0f       	add	r16, r18
    8262:	11 1d       	adc	r17, r1
    8264:	fc 01       	movw	r30, r24
    8266:	ee 0f       	add	r30, r30
    8268:	ff 1f       	adc	r31, r31
    826a:	1f 01       	movw	r2, r30
    826c:	28 0c       	add	r2, r8
    826e:	39 1c       	adc	r3, r9
    8270:	f1 01       	movw	r30, r2
    8272:	b1 80       	ldd	r11, Z+1	; 0x01
    8274:	f8 01       	movw	r30, r16
    8276:	b0 82       	st	Z, r11
    8278:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    827c:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    8280:	2f 5f       	subi	r18, 0xFF	; 255
    8282:	3f 4f       	sbci	r19, 0xFF	; 255
    8284:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    8288:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    828c:	f3 01       	movw	r30, r6
    828e:	20 81       	ld	r18, Z
    8290:	31 e0       	ldi	r19, 0x01	; 1
    8292:	32 0f       	add	r19, r18
    8294:	30 83       	st	Z, r19
    8296:	82 01       	movw	r16, r4
    8298:	02 0f       	add	r16, r18
    829a:	11 1d       	adc	r17, r1
    829c:	f1 01       	movw	r30, r2
    829e:	b0 80       	ld	r11, Z
    82a0:	f8 01       	movw	r30, r16
    82a2:	b0 82       	st	Z, r11
    82a4:	01 96       	adiw	r24, 0x01	; 1
    82a6:	a1 1d       	adc	r26, r1
    82a8:	b1 1d       	adc	r27, r1
    82aa:	0a 81       	ldd	r16, Y+2	; 0x02
    82ac:	1b 81       	ldd	r17, Y+3	; 0x03
    82ae:	2c 81       	ldd	r18, Y+4	; 0x04
    82b0:	3d 81       	ldd	r19, Y+5	; 0x05
    82b2:	80 17       	cp	r24, r16
    82b4:	91 07       	cpc	r25, r17
    82b6:	a2 07       	cpc	r26, r18
    82b8:	b3 07       	cpc	r27, r19
    82ba:	10 f2       	brcs	.-124    	; 0x8240 <TMR_SR_msgAddGEN2BlockWrite+0x246>
    82bc:	cb 01       	movw	r24, r22
    82be:	ba 01       	movw	r22, r20
    82c0:	28 96       	adiw	r28, 0x08	; 8
    82c2:	0f b6       	in	r0, 0x3f	; 63
    82c4:	f8 94       	cli
    82c6:	de bf       	out	0x3e, r29	; 62
    82c8:	0f be       	out	0x3f, r0	; 63
    82ca:	cd bf       	out	0x3d, r28	; 61
    82cc:	df 91       	pop	r29
    82ce:	cf 91       	pop	r28
    82d0:	1f 91       	pop	r17
    82d2:	0f 91       	pop	r16
    82d4:	ff 90       	pop	r15
    82d6:	ef 90       	pop	r14
    82d8:	df 90       	pop	r13
    82da:	cf 90       	pop	r12
    82dc:	bf 90       	pop	r11
    82de:	af 90       	pop	r10
    82e0:	9f 90       	pop	r9
    82e2:	8f 90       	pop	r8
    82e4:	7f 90       	pop	r7
    82e6:	6f 90       	pop	r6
    82e8:	5f 90       	pop	r5
    82ea:	4f 90       	pop	r4
    82ec:	3f 90       	pop	r3
    82ee:	2f 90       	pop	r2
    82f0:	08 95       	ret

000082f2 <TMR_SR_msgAddGEN2BlockPermaLock>:
    82f2:	2f 92       	push	r2
    82f4:	3f 92       	push	r3
    82f6:	4f 92       	push	r4
    82f8:	5f 92       	push	r5
    82fa:	6f 92       	push	r6
    82fc:	7f 92       	push	r7
    82fe:	8f 92       	push	r8
    8300:	9f 92       	push	r9
    8302:	af 92       	push	r10
    8304:	bf 92       	push	r11
    8306:	cf 92       	push	r12
    8308:	df 92       	push	r13
    830a:	ef 92       	push	r14
    830c:	ff 92       	push	r15
    830e:	0f 93       	push	r16
    8310:	1f 93       	push	r17
    8312:	cf 93       	push	r28
    8314:	df 93       	push	r29
    8316:	cd b7       	in	r28, 0x3d	; 61
    8318:	de b7       	in	r29, 0x3e	; 62
    831a:	27 97       	sbiw	r28, 0x07	; 7
    831c:	0f b6       	in	r0, 0x3f	; 63
    831e:	f8 94       	cli
    8320:	de bf       	out	0x3e, r29	; 62
    8322:	0f be       	out	0x3f, r0	; 63
    8324:	cd bf       	out	0x3d, r28	; 61
    8326:	3c 01       	movw	r6, r24
    8328:	4b 01       	movw	r8, r22
    832a:	18 01       	movw	r2, r16
    832c:	29 01       	movw	r4, r18
    832e:	eb 82       	std	Y+3, r14	; 0x03
    8330:	ad 82       	std	Y+5, r10	; 0x05
    8332:	ce 82       	std	Y+6, r12	; 0x06
    8334:	df 82       	std	Y+7, r13	; 0x07
    8336:	8c 8d       	ldd	r24, Y+28	; 0x1c
    8338:	8c 83       	std	Y+4, r24	; 0x04
    833a:	19 82       	std	Y+1, r1	; 0x01
    833c:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    8340:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    8344:	01 96       	adiw	r24, 0x01	; 1
    8346:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    834a:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    834e:	fb 01       	movw	r30, r22
    8350:	80 81       	ld	r24, Z
    8352:	91 e0       	ldi	r25, 0x01	; 1
    8354:	98 0f       	add	r25, r24
    8356:	90 83       	st	Z, r25
    8358:	f3 01       	movw	r30, r6
    835a:	e8 0f       	add	r30, r24
    835c:	f1 1d       	adc	r31, r1
    835e:	8e e2       	ldi	r24, 0x2E	; 46
    8360:	80 83       	st	Z, r24
    8362:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    8366:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    836a:	02 96       	adiw	r24, 0x02	; 2
    836c:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    8370:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    8374:	fb 01       	movw	r30, r22
    8376:	80 81       	ld	r24, Z
    8378:	91 e0       	ldi	r25, 0x01	; 1
    837a:	98 0f       	add	r25, r24
    837c:	90 83       	st	Z, r25
    837e:	f3 01       	movw	r30, r6
    8380:	e8 0f       	add	r30, r24
    8382:	f1 1d       	adc	r31, r1
    8384:	50 83       	st	Z, r21
    8386:	fb 01       	movw	r30, r22
    8388:	80 81       	ld	r24, Z
    838a:	91 e0       	ldi	r25, 0x01	; 1
    838c:	98 0f       	add	r25, r24
    838e:	90 83       	st	Z, r25
    8390:	f3 01       	movw	r30, r6
    8392:	e8 0f       	add	r30, r24
    8394:	f1 1d       	adc	r31, r1
    8396:	40 83       	st	Z, r20
    8398:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    839c:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    83a0:	01 96       	adiw	r24, 0x01	; 1
    83a2:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    83a6:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    83aa:	fb 01       	movw	r30, r22
    83ac:	80 81       	ld	r24, Z
    83ae:	91 e0       	ldi	r25, 0x01	; 1
    83b0:	98 0f       	add	r25, r24
    83b2:	90 83       	st	Z, r25
    83b4:	f3 01       	movw	r30, r6
    83b6:	e8 0f       	add	r30, r24
    83b8:	f1 1d       	adc	r31, r1
    83ba:	10 82       	st	Z, r1
    83bc:	fb 01       	movw	r30, r22
    83be:	f0 81       	ld	r31, Z
    83c0:	fa 83       	std	Y+2, r31	; 0x02
    83c2:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    83c6:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    83ca:	01 96       	adiw	r24, 0x01	; 1
    83cc:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    83d0:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    83d4:	fb 01       	movw	r30, r22
    83d6:	80 81       	ld	r24, Z
    83d8:	91 e0       	ldi	r25, 0x01	; 1
    83da:	98 0f       	add	r25, r24
    83dc:	90 83       	st	Z, r25
    83de:	f3 01       	movw	r30, r6
    83e0:	e8 0f       	add	r30, r24
    83e2:	f1 1d       	adc	r31, r1
    83e4:	80 e4       	ldi	r24, 0x40	; 64
    83e6:	80 83       	st	Z, r24
    83e8:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    83ec:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    83f0:	01 96       	adiw	r24, 0x01	; 1
    83f2:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    83f6:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    83fa:	fb 01       	movw	r30, r22
    83fc:	80 81       	ld	r24, Z
    83fe:	91 e0       	ldi	r25, 0x01	; 1
    8400:	98 0f       	add	r25, r24
    8402:	90 83       	st	Z, r25
    8404:	f3 01       	movw	r30, r6
    8406:	e8 0f       	add	r30, r24
    8408:	f1 1d       	adc	r31, r1
    840a:	81 e0       	ldi	r24, 0x01	; 1
    840c:	80 83       	st	Z, r24
    840e:	aa 24       	eor	r10, r10
    8410:	a3 94       	inc	r10
    8412:	ca a0       	ldd	r12, Y+34	; 0x22
    8414:	db a0       	ldd	r13, Y+35	; 0x23
    8416:	ec a0       	ldd	r14, Y+36	; 0x24
    8418:	fd a0       	ldd	r15, Y+37	; 0x25
    841a:	83 01       	movw	r16, r6
    841c:	9b 01       	movw	r18, r22
    841e:	ae 01       	movw	r20, r28
    8420:	4f 5f       	subi	r20, 0xFF	; 255
    8422:	5f 4f       	sbci	r21, 0xFF	; 255
    8424:	6e a1       	ldd	r22, Y+38	; 0x26
    8426:	7f a1       	ldd	r23, Y+39	; 0x27
    8428:	85 e0       	ldi	r24, 0x05	; 5
    842a:	0e 94 79 2e 	call	0x5cf2	; 0x5cf2 <filterbytes>
    842e:	ab 01       	movw	r20, r22
    8430:	bc 01       	movw	r22, r24
    8432:	f3 01       	movw	r30, r6
    8434:	8a 81       	ldd	r24, Y+2	; 0x02
    8436:	e8 0f       	add	r30, r24
    8438:	f1 1d       	adc	r31, r1
    843a:	80 81       	ld	r24, Z
    843c:	99 81       	ldd	r25, Y+1	; 0x01
    843e:	89 2b       	or	r24, r25
    8440:	80 83       	st	Z, r24
    8442:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    8446:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    844a:	01 96       	adiw	r24, 0x01	; 1
    844c:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    8450:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    8454:	f4 01       	movw	r30, r8
    8456:	80 81       	ld	r24, Z
    8458:	91 e0       	ldi	r25, 0x01	; 1
    845a:	98 0f       	add	r25, r24
    845c:	90 83       	st	Z, r25
    845e:	f3 01       	movw	r30, r6
    8460:	e8 0f       	add	r30, r24
    8462:	f1 1d       	adc	r31, r1
    8464:	10 82       	st	Z, r1
    8466:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    846a:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    846e:	01 96       	adiw	r24, 0x01	; 1
    8470:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    8474:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    8478:	f4 01       	movw	r30, r8
    847a:	80 81       	ld	r24, Z
    847c:	91 e0       	ldi	r25, 0x01	; 1
    847e:	98 0f       	add	r25, r24
    8480:	90 83       	st	Z, r25
    8482:	f3 01       	movw	r30, r6
    8484:	e8 0f       	add	r30, r24
    8486:	f1 1d       	adc	r31, r1
    8488:	20 82       	st	Z, r2
    848a:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    848e:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    8492:	01 96       	adiw	r24, 0x01	; 1
    8494:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    8498:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    849c:	f4 01       	movw	r30, r8
    849e:	80 81       	ld	r24, Z
    84a0:	91 e0       	ldi	r25, 0x01	; 1
    84a2:	98 0f       	add	r25, r24
    84a4:	90 83       	st	Z, r25
    84a6:	f3 01       	movw	r30, r6
    84a8:	e8 0f       	add	r30, r24
    84aa:	f1 1d       	adc	r31, r1
    84ac:	8b 81       	ldd	r24, Y+3	; 0x03
    84ae:	80 83       	st	Z, r24
    84b0:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    84b4:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    84b8:	04 96       	adiw	r24, 0x04	; 4
    84ba:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    84be:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    84c2:	f4 01       	movw	r30, r8
    84c4:	80 81       	ld	r24, Z
    84c6:	91 e0       	ldi	r25, 0x01	; 1
    84c8:	98 0f       	add	r25, r24
    84ca:	90 83       	st	Z, r25
    84cc:	f3 01       	movw	r30, r6
    84ce:	e8 0f       	add	r30, r24
    84d0:	f1 1d       	adc	r31, r1
    84d2:	8f 81       	ldd	r24, Y+7	; 0x07
    84d4:	80 83       	st	Z, r24
    84d6:	f4 01       	movw	r30, r8
    84d8:	80 81       	ld	r24, Z
    84da:	91 e0       	ldi	r25, 0x01	; 1
    84dc:	98 0f       	add	r25, r24
    84de:	90 83       	st	Z, r25
    84e0:	f3 01       	movw	r30, r6
    84e2:	e8 0f       	add	r30, r24
    84e4:	f1 1d       	adc	r31, r1
    84e6:	8e 81       	ldd	r24, Y+6	; 0x06
    84e8:	80 83       	st	Z, r24
    84ea:	f4 01       	movw	r30, r8
    84ec:	80 81       	ld	r24, Z
    84ee:	91 e0       	ldi	r25, 0x01	; 1
    84f0:	98 0f       	add	r25, r24
    84f2:	90 83       	st	Z, r25
    84f4:	f3 01       	movw	r30, r6
    84f6:	e8 0f       	add	r30, r24
    84f8:	f1 1d       	adc	r31, r1
    84fa:	b0 82       	st	Z, r11
    84fc:	f4 01       	movw	r30, r8
    84fe:	80 81       	ld	r24, Z
    8500:	91 e0       	ldi	r25, 0x01	; 1
    8502:	98 0f       	add	r25, r24
    8504:	90 83       	st	Z, r25
    8506:	f3 01       	movw	r30, r6
    8508:	e8 0f       	add	r30, r24
    850a:	f1 1d       	adc	r31, r1
    850c:	8d 81       	ldd	r24, Y+5	; 0x05
    850e:	80 83       	st	Z, r24
    8510:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    8514:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    8518:	01 96       	adiw	r24, 0x01	; 1
    851a:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    851e:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    8522:	f4 01       	movw	r30, r8
    8524:	80 81       	ld	r24, Z
    8526:	91 e0       	ldi	r25, 0x01	; 1
    8528:	98 0f       	add	r25, r24
    852a:	90 83       	st	Z, r25
    852c:	f3 01       	movw	r30, r6
    852e:	e8 0f       	add	r30, r24
    8530:	f1 1d       	adc	r31, r1
    8532:	8c 81       	ldd	r24, Y+4	; 0x04
    8534:	80 83       	st	Z, r24
    8536:	2a 94       	dec	r2
    8538:	23 28       	or	r2, r3
    853a:	24 28       	or	r2, r4
    853c:	25 28       	or	r2, r5
    853e:	f9 f4       	brne	.+62     	; 0x857e <TMR_SR_msgAddGEN2BlockPermaLock+0x28c>
    8540:	e8 a1       	ldd	r30, Y+32	; 0x20
    8542:	f9 a1       	ldd	r31, Y+33	; 0x21
    8544:	20 81       	ld	r18, Z
    8546:	31 81       	ldd	r19, Z+1	; 0x01
    8548:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    854c:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    8550:	02 96       	adiw	r24, 0x02	; 2
    8552:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    8556:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    855a:	f4 01       	movw	r30, r8
    855c:	80 81       	ld	r24, Z
    855e:	91 e0       	ldi	r25, 0x01	; 1
    8560:	98 0f       	add	r25, r24
    8562:	90 83       	st	Z, r25
    8564:	f3 01       	movw	r30, r6
    8566:	e8 0f       	add	r30, r24
    8568:	f1 1d       	adc	r31, r1
    856a:	30 83       	st	Z, r19
    856c:	f4 01       	movw	r30, r8
    856e:	80 81       	ld	r24, Z
    8570:	91 e0       	ldi	r25, 0x01	; 1
    8572:	98 0f       	add	r25, r24
    8574:	90 83       	st	Z, r25
    8576:	f3 01       	movw	r30, r6
    8578:	e8 0f       	add	r30, r24
    857a:	f1 1d       	adc	r31, r1
    857c:	20 83       	st	Z, r18
    857e:	cb 01       	movw	r24, r22
    8580:	ba 01       	movw	r22, r20
    8582:	27 96       	adiw	r28, 0x07	; 7
    8584:	0f b6       	in	r0, 0x3f	; 63
    8586:	f8 94       	cli
    8588:	de bf       	out	0x3e, r29	; 62
    858a:	0f be       	out	0x3f, r0	; 63
    858c:	cd bf       	out	0x3d, r28	; 61
    858e:	df 91       	pop	r29
    8590:	cf 91       	pop	r28
    8592:	1f 91       	pop	r17
    8594:	0f 91       	pop	r16
    8596:	ff 90       	pop	r15
    8598:	ef 90       	pop	r14
    859a:	df 90       	pop	r13
    859c:	cf 90       	pop	r12
    859e:	bf 90       	pop	r11
    85a0:	af 90       	pop	r10
    85a2:	9f 90       	pop	r9
    85a4:	8f 90       	pop	r8
    85a6:	7f 90       	pop	r7
    85a8:	6f 90       	pop	r6
    85aa:	5f 90       	pop	r5
    85ac:	4f 90       	pop	r4
    85ae:	3f 90       	pop	r3
    85b0:	2f 90       	pop	r2
    85b2:	08 95       	ret

000085b4 <TMR_SR_msgAddGEN2BlockErase>:
    85b4:	2f 92       	push	r2
    85b6:	3f 92       	push	r3
    85b8:	4f 92       	push	r4
    85ba:	5f 92       	push	r5
    85bc:	6f 92       	push	r6
    85be:	7f 92       	push	r7
    85c0:	8f 92       	push	r8
    85c2:	9f 92       	push	r9
    85c4:	af 92       	push	r10
    85c6:	bf 92       	push	r11
    85c8:	cf 92       	push	r12
    85ca:	df 92       	push	r13
    85cc:	ef 92       	push	r14
    85ce:	ff 92       	push	r15
    85d0:	0f 93       	push	r16
    85d2:	1f 93       	push	r17
    85d4:	cf 93       	push	r28
    85d6:	df 93       	push	r29
    85d8:	00 d0       	rcall	.+0      	; 0x85da <TMR_SR_msgAddGEN2BlockErase+0x26>
    85da:	00 d0       	rcall	.+0      	; 0x85dc <TMR_SR_msgAddGEN2BlockErase+0x28>
    85dc:	1f 92       	push	r1
    85de:	cd b7       	in	r28, 0x3d	; 61
    85e0:	de b7       	in	r29, 0x3e	; 62
    85e2:	2c 01       	movw	r4, r24
    85e4:	3b 01       	movw	r6, r22
    85e6:	0c 83       	std	Y+4, r16	; 0x04
    85e8:	1d 83       	std	Y+5, r17	; 0x05
    85ea:	32 2e       	mov	r3, r18
    85ec:	23 2e       	mov	r2, r19
    85ee:	ea 82       	std	Y+2, r14	; 0x02
    85f0:	cb 82       	std	Y+3, r12	; 0x03
    85f2:	75 01       	movw	r14, r10
    85f4:	64 01       	movw	r12, r8
    85f6:	19 82       	std	Y+1, r1	; 0x01
    85f8:	01 e0       	ldi	r16, 0x01	; 1
    85fa:	9a 01       	movw	r18, r20
    85fc:	4e e2       	ldi	r20, 0x2E	; 46
    85fe:	0e 94 9c 36 	call	0x6d38	; 0x6d38 <TMR_SR_cmdFrameHeader>
    8602:	f3 01       	movw	r30, r6
    8604:	b0 80       	ld	r11, Z
    8606:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    860a:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    860e:	01 96       	adiw	r24, 0x01	; 1
    8610:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    8614:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    8618:	80 81       	ld	r24, Z
    861a:	91 e0       	ldi	r25, 0x01	; 1
    861c:	98 0f       	add	r25, r24
    861e:	90 83       	st	Z, r25
    8620:	f2 01       	movw	r30, r4
    8622:	e8 0f       	add	r30, r24
    8624:	f1 1d       	adc	r31, r1
    8626:	80 e4       	ldi	r24, 0x40	; 64
    8628:	80 83       	st	Z, r24
    862a:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    862e:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    8632:	01 96       	adiw	r24, 0x01	; 1
    8634:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    8638:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    863c:	f3 01       	movw	r30, r6
    863e:	80 81       	ld	r24, Z
    8640:	91 e0       	ldi	r25, 0x01	; 1
    8642:	98 0f       	add	r25, r24
    8644:	90 83       	st	Z, r25
    8646:	f2 01       	movw	r30, r4
    8648:	e8 0f       	add	r30, r24
    864a:	f1 1d       	adc	r31, r1
    864c:	10 82       	st	Z, r1
    864e:	aa 24       	eor	r10, r10
    8650:	a3 94       	inc	r10
    8652:	82 01       	movw	r16, r4
    8654:	93 01       	movw	r18, r6
    8656:	ae 01       	movw	r20, r28
    8658:	4f 5f       	subi	r20, 0xFF	; 255
    865a:	5f 4f       	sbci	r21, 0xFF	; 255
    865c:	6a 8d       	ldd	r22, Y+26	; 0x1a
    865e:	7b 8d       	ldd	r23, Y+27	; 0x1b
    8660:	85 e0       	ldi	r24, 0x05	; 5
    8662:	0e 94 79 2e 	call	0x5cf2	; 0x5cf2 <filterbytes>
    8666:	f2 01       	movw	r30, r4
    8668:	eb 0d       	add	r30, r11
    866a:	f1 1d       	adc	r31, r1
    866c:	20 81       	ld	r18, Z
    866e:	39 81       	ldd	r19, Y+1	; 0x01
    8670:	23 2b       	or	r18, r19
    8672:	20 83       	st	Z, r18
    8674:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    8678:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    867c:	2c 5f       	subi	r18, 0xFC	; 252
    867e:	3f 4f       	sbci	r19, 0xFF	; 255
    8680:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    8684:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    8688:	f3 01       	movw	r30, r6
    868a:	20 81       	ld	r18, Z
    868c:	31 e0       	ldi	r19, 0x01	; 1
    868e:	32 0f       	add	r19, r18
    8690:	30 83       	st	Z, r19
    8692:	f2 01       	movw	r30, r4
    8694:	e2 0f       	add	r30, r18
    8696:	f1 1d       	adc	r31, r1
    8698:	20 82       	st	Z, r2
    869a:	f3 01       	movw	r30, r6
    869c:	20 81       	ld	r18, Z
    869e:	31 e0       	ldi	r19, 0x01	; 1
    86a0:	32 0f       	add	r19, r18
    86a2:	30 83       	st	Z, r19
    86a4:	f2 01       	movw	r30, r4
    86a6:	e2 0f       	add	r30, r18
    86a8:	f1 1d       	adc	r31, r1
    86aa:	30 82       	st	Z, r3
    86ac:	f3 01       	movw	r30, r6
    86ae:	20 81       	ld	r18, Z
    86b0:	31 e0       	ldi	r19, 0x01	; 1
    86b2:	32 0f       	add	r19, r18
    86b4:	30 83       	st	Z, r19
    86b6:	f2 01       	movw	r30, r4
    86b8:	e2 0f       	add	r30, r18
    86ba:	f1 1d       	adc	r31, r1
    86bc:	2d 81       	ldd	r18, Y+5	; 0x05
    86be:	20 83       	st	Z, r18
    86c0:	f3 01       	movw	r30, r6
    86c2:	20 81       	ld	r18, Z
    86c4:	31 e0       	ldi	r19, 0x01	; 1
    86c6:	32 0f       	add	r19, r18
    86c8:	30 83       	st	Z, r19
    86ca:	f2 01       	movw	r30, r4
    86cc:	e2 0f       	add	r30, r18
    86ce:	f1 1d       	adc	r31, r1
    86d0:	2c 81       	ldd	r18, Y+4	; 0x04
    86d2:	20 83       	st	Z, r18
    86d4:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    86d8:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    86dc:	2f 5f       	subi	r18, 0xFF	; 255
    86de:	3f 4f       	sbci	r19, 0xFF	; 255
    86e0:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    86e4:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    86e8:	f3 01       	movw	r30, r6
    86ea:	20 81       	ld	r18, Z
    86ec:	31 e0       	ldi	r19, 0x01	; 1
    86ee:	32 0f       	add	r19, r18
    86f0:	30 83       	st	Z, r19
    86f2:	f2 01       	movw	r30, r4
    86f4:	e2 0f       	add	r30, r18
    86f6:	f1 1d       	adc	r31, r1
    86f8:	2a 81       	ldd	r18, Y+2	; 0x02
    86fa:	20 83       	st	Z, r18
    86fc:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    8700:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    8704:	2f 5f       	subi	r18, 0xFF	; 255
    8706:	3f 4f       	sbci	r19, 0xFF	; 255
    8708:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    870c:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    8710:	f3 01       	movw	r30, r6
    8712:	20 81       	ld	r18, Z
    8714:	31 e0       	ldi	r19, 0x01	; 1
    8716:	32 0f       	add	r19, r18
    8718:	30 83       	st	Z, r19
    871a:	f2 01       	movw	r30, r4
    871c:	e2 0f       	add	r30, r18
    871e:	f1 1d       	adc	r31, r1
    8720:	2b 81       	ldd	r18, Y+3	; 0x03
    8722:	20 83       	st	Z, r18
    8724:	0f 90       	pop	r0
    8726:	0f 90       	pop	r0
    8728:	0f 90       	pop	r0
    872a:	0f 90       	pop	r0
    872c:	0f 90       	pop	r0
    872e:	df 91       	pop	r29
    8730:	cf 91       	pop	r28
    8732:	1f 91       	pop	r17
    8734:	0f 91       	pop	r16
    8736:	ff 90       	pop	r15
    8738:	ef 90       	pop	r14
    873a:	df 90       	pop	r13
    873c:	cf 90       	pop	r12
    873e:	bf 90       	pop	r11
    8740:	af 90       	pop	r10
    8742:	9f 90       	pop	r9
    8744:	8f 90       	pop	r8
    8746:	7f 90       	pop	r7
    8748:	6f 90       	pop	r6
    874a:	5f 90       	pop	r5
    874c:	4f 90       	pop	r4
    874e:	3f 90       	pop	r3
    8750:	2f 90       	pop	r2
    8752:	08 95       	ret

00008754 <TMR_SR_cmdClearTagBuffer>:
    8754:	cf 93       	push	r28
    8756:	df 93       	push	r29
    8758:	cd b7       	in	r28, 0x3d	; 61
    875a:	de b7       	in	r29, 0x3e	; 62
    875c:	da 95       	dec	r29
    875e:	0f b6       	in	r0, 0x3f	; 63
    8760:	f8 94       	cli
    8762:	de bf       	out	0x3e, r29	; 62
    8764:	0f be       	out	0x3f, r0	; 63
    8766:	cd bf       	out	0x3d, r28	; 61
    8768:	4a e2       	ldi	r20, 0x2A	; 42
    876a:	be 01       	movw	r22, r28
    876c:	6f 5f       	subi	r22, 0xFF	; 255
    876e:	7f 4f       	sbci	r23, 0xFF	; 255
    8770:	0e 94 8d 36 	call	0x6d1a	; 0x6d1a <TMR_SR_callSendCmd>
    8774:	d3 95       	inc	r29
    8776:	0f b6       	in	r0, 0x3f	; 63
    8778:	f8 94       	cli
    877a:	de bf       	out	0x3e, r29	; 62
    877c:	0f be       	out	0x3f, r0	; 63
    877e:	cd bf       	out	0x3d, r28	; 61
    8780:	df 91       	pop	r29
    8782:	cf 91       	pop	r28
    8784:	08 95       	ret

00008786 <TMR_SR_cmdGetTagsRemaining>:
    8786:	0f 93       	push	r16
    8788:	1f 93       	push	r17
    878a:	cf 93       	push	r28
    878c:	df 93       	push	r29
    878e:	cd b7       	in	r28, 0x3d	; 61
    8790:	de b7       	in	r29, 0x3e	; 62
    8792:	da 95       	dec	r29
    8794:	0f b6       	in	r0, 0x3f	; 63
    8796:	f8 94       	cli
    8798:	de bf       	out	0x3e, r29	; 62
    879a:	0f be       	out	0x3f, r0	; 63
    879c:	cd bf       	out	0x3d, r28	; 61
    879e:	8b 01       	movw	r16, r22
    87a0:	49 e2       	ldi	r20, 0x29	; 41
    87a2:	be 01       	movw	r22, r28
    87a4:	6f 5f       	subi	r22, 0xFF	; 255
    87a6:	7f 4f       	sbci	r23, 0xFF	; 255
    87a8:	0e 94 8d 36 	call	0x6d1a	; 0x6d1a <TMR_SR_callSendCmd>
    87ac:	61 15       	cp	r22, r1
    87ae:	71 05       	cpc	r23, r1
    87b0:	81 05       	cpc	r24, r1
    87b2:	91 05       	cpc	r25, r1
    87b4:	b1 f4       	brne	.+44     	; 0x87e2 <TMR_SR_cmdGetTagsRemaining+0x5c>
    87b6:	88 85       	ldd	r24, Y+8	; 0x08
    87b8:	90 e0       	ldi	r25, 0x00	; 0
    87ba:	98 2f       	mov	r25, r24
    87bc:	88 27       	eor	r24, r24
    87be:	29 85       	ldd	r18, Y+9	; 0x09
    87c0:	82 2b       	or	r24, r18
    87c2:	2e 81       	ldd	r18, Y+6	; 0x06
    87c4:	30 e0       	ldi	r19, 0x00	; 0
    87c6:	32 2f       	mov	r19, r18
    87c8:	22 27       	eor	r18, r18
    87ca:	4f 81       	ldd	r20, Y+7	; 0x07
    87cc:	24 2b       	or	r18, r20
    87ce:	82 1b       	sub	r24, r18
    87d0:	93 0b       	sbc	r25, r19
    87d2:	f8 01       	movw	r30, r16
    87d4:	91 83       	std	Z+1, r25	; 0x01
    87d6:	80 83       	st	Z, r24
    87d8:	40 e0       	ldi	r20, 0x00	; 0
    87da:	30 e0       	ldi	r19, 0x00	; 0
    87dc:	20 e0       	ldi	r18, 0x00	; 0
    87de:	90 e0       	ldi	r25, 0x00	; 0
    87e0:	03 c0       	rjmp	.+6      	; 0x87e8 <TMR_SR_cmdGetTagsRemaining+0x62>
    87e2:	46 2f       	mov	r20, r22
    87e4:	37 2f       	mov	r19, r23
    87e6:	28 2f       	mov	r18, r24
    87e8:	64 2f       	mov	r22, r20
    87ea:	73 2f       	mov	r23, r19
    87ec:	82 2f       	mov	r24, r18
    87ee:	d3 95       	inc	r29
    87f0:	0f b6       	in	r0, 0x3f	; 63
    87f2:	f8 94       	cli
    87f4:	de bf       	out	0x3e, r29	; 62
    87f6:	0f be       	out	0x3f, r0	; 63
    87f8:	cd bf       	out	0x3d, r28	; 61
    87fa:	df 91       	pop	r29
    87fc:	cf 91       	pop	r28
    87fe:	1f 91       	pop	r17
    8800:	0f 91       	pop	r16
    8802:	08 95       	ret

00008804 <extractGen2MemoryBankValues>:
    8804:	bf 92       	push	r11
    8806:	cf 92       	push	r12
    8808:	df 92       	push	r13
    880a:	ef 92       	push	r14
    880c:	ff 92       	push	r15
    880e:	0f 93       	push	r16
    8810:	1f 93       	push	r17
    8812:	cf 93       	push	r28
    8814:	df 93       	push	r29
    8816:	7c 01       	movw	r14, r24
    8818:	fc 01       	movw	r30, r24
    881a:	e0 55       	subi	r30, 0x50	; 80
    881c:	ff 4f       	sbci	r31, 0xFF	; 255
    881e:	c0 80       	ld	r12, Z
    8820:	d1 80       	ldd	r13, Z+1	; 0x01
    8822:	d6 94       	lsr	r13
    8824:	c7 94       	ror	r12
    8826:	d6 94       	lsr	r13
    8828:	c7 94       	ror	r12
    882a:	d6 94       	lsr	r13
    882c:	c7 94       	ror	r12
    882e:	00 e0       	ldi	r16, 0x00	; 0
    8830:	10 e0       	ldi	r17, 0x00	; 0
    8832:	b1 2c       	mov	r11, r1
    8834:	4d c0       	rjmp	.+154    	; 0x88d0 <extractGen2MemoryBankValues+0xcc>
    8836:	2b 2d       	mov	r18, r11
    8838:	30 e0       	ldi	r19, 0x00	; 0
    883a:	2c 15       	cp	r18, r12
    883c:	3d 05       	cpc	r19, r13
    883e:	08 f0       	brcs	.+2      	; 0x8842 <extractGen2MemoryBankValues+0x3e>
    8840:	4f c0       	rjmp	.+158    	; 0x88e0 <extractGen2MemoryBankValues+0xdc>
    8842:	f7 01       	movw	r30, r14
    8844:	e4 55       	subi	r30, 0x54	; 84
    8846:	ff 4f       	sbci	r31, 0xFF	; 255
    8848:	01 90       	ld	r0, Z+
    884a:	f0 81       	ld	r31, Z
    884c:	e0 2d       	mov	r30, r0
    884e:	e2 0f       	add	r30, r18
    8850:	f3 1f       	adc	r31, r19
    8852:	80 81       	ld	r24, Z
    8854:	82 95       	swap	r24
    8856:	8f 70       	andi	r24, 0x0F	; 15
    8858:	c1 81       	ldd	r28, Z+1	; 0x01
    885a:	d0 e0       	ldi	r29, 0x00	; 0
    885c:	cc 0f       	add	r28, r28
    885e:	dd 1f       	adc	r29, r29
    8860:	ae 01       	movw	r20, r28
    8862:	81 30       	cpi	r24, 0x01	; 1
    8864:	31 f0       	breq	.+12     	; 0x8872 <extractGen2MemoryBankValues+0x6e>
    8866:	48 f0       	brcs	.+18     	; 0x887a <extractGen2MemoryBankValues+0x76>
    8868:	82 30       	cpi	r24, 0x02	; 2
    886a:	59 f0       	breq	.+22     	; 0x8882 <extractGen2MemoryBankValues+0x7e>
    886c:	83 30       	cpi	r24, 0x03	; 3
    886e:	69 f0       	breq	.+26     	; 0x888a <extractGen2MemoryBankValues+0x86>
    8870:	0f c0       	rjmp	.+30     	; 0x8890 <extractGen2MemoryBankValues+0x8c>
    8872:	87 01       	movw	r16, r14
    8874:	0e 54       	subi	r16, 0x4E	; 78
    8876:	1f 4f       	sbci	r17, 0xFF	; 255
    8878:	0b c0       	rjmp	.+22     	; 0x8890 <extractGen2MemoryBankValues+0x8c>
    887a:	87 01       	movw	r16, r14
    887c:	0c 53       	subi	r16, 0x3C	; 60
    887e:	1f 4f       	sbci	r17, 0xFF	; 255
    8880:	07 c0       	rjmp	.+14     	; 0x8890 <extractGen2MemoryBankValues+0x8c>
    8882:	87 01       	movw	r16, r14
    8884:	08 54       	subi	r16, 0x48	; 72
    8886:	1f 4f       	sbci	r17, 0xFF	; 255
    8888:	03 c0       	rjmp	.+6      	; 0x8890 <extractGen2MemoryBankValues+0x8c>
    888a:	87 01       	movw	r16, r14
    888c:	02 54       	subi	r16, 0x42	; 66
    888e:	1f 4f       	sbci	r17, 0xFF	; 255
    8890:	01 15       	cp	r16, r1
    8892:	11 05       	cpc	r17, r1
    8894:	c1 f0       	breq	.+48     	; 0x88c6 <extractGen2MemoryBankValues+0xc2>
    8896:	f8 01       	movw	r30, r16
    8898:	d5 83       	std	Z+5, r29	; 0x05
    889a:	c4 83       	std	Z+4, r28	; 0x04
    889c:	82 81       	ldd	r24, Z+2	; 0x02
    889e:	93 81       	ldd	r25, Z+3	; 0x03
    88a0:	84 17       	cp	r24, r20
    88a2:	95 07       	cpc	r25, r21
    88a4:	08 f1       	brcs	.+66     	; 0x88e8 <extractGen2MemoryBankValues+0xe4>
    88a6:	80 81       	ld	r24, Z
    88a8:	91 81       	ldd	r25, Z+1	; 0x01
    88aa:	00 97       	sbiw	r24, 0x00	; 0
    88ac:	61 f0       	breq	.+24     	; 0x88c6 <extractGen2MemoryBankValues+0xc2>
    88ae:	f7 01       	movw	r30, r14
    88b0:	e4 55       	subi	r30, 0x54	; 84
    88b2:	ff 4f       	sbci	r31, 0xFF	; 255
    88b4:	60 81       	ld	r22, Z
    88b6:	71 81       	ldd	r23, Z+1	; 0x01
    88b8:	2e 5f       	subi	r18, 0xFE	; 254
    88ba:	3f 4f       	sbci	r19, 0xFF	; 255
    88bc:	62 0f       	add	r22, r18
    88be:	73 1f       	adc	r23, r19
    88c0:	ae 01       	movw	r20, r28
    88c2:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    88c6:	cb 0d       	add	r28, r11
    88c8:	68 94       	set
    88ca:	bb 24       	eor	r11, r11
    88cc:	b1 f8       	bld	r11, 1
    88ce:	bc 0e       	add	r11, r28
    88d0:	c1 14       	cp	r12, r1
    88d2:	d1 04       	cpc	r13, r1
    88d4:	09 f0       	breq	.+2      	; 0x88d8 <extractGen2MemoryBankValues+0xd4>
    88d6:	af cf       	rjmp	.-162    	; 0x8836 <extractGen2MemoryBankValues+0x32>
    88d8:	60 e0       	ldi	r22, 0x00	; 0
    88da:	70 e0       	ldi	r23, 0x00	; 0
    88dc:	cb 01       	movw	r24, r22
    88de:	08 c0       	rjmp	.+16     	; 0x88f0 <extractGen2MemoryBankValues+0xec>
    88e0:	60 e0       	ldi	r22, 0x00	; 0
    88e2:	70 e0       	ldi	r23, 0x00	; 0
    88e4:	cb 01       	movw	r24, r22
    88e6:	04 c0       	rjmp	.+8      	; 0x88f0 <extractGen2MemoryBankValues+0xec>
    88e8:	6c e0       	ldi	r22, 0x0C	; 12
    88ea:	70 e0       	ldi	r23, 0x00	; 0
    88ec:	80 e0       	ldi	r24, 0x00	; 0
    88ee:	93 e0       	ldi	r25, 0x03	; 3
    88f0:	df 91       	pop	r29
    88f2:	cf 91       	pop	r28
    88f4:	1f 91       	pop	r17
    88f6:	0f 91       	pop	r16
    88f8:	ff 90       	pop	r15
    88fa:	ef 90       	pop	r14
    88fc:	df 90       	pop	r13
    88fe:	cf 90       	pop	r12
    8900:	bf 90       	pop	r11
    8902:	08 95       	ret

00008904 <TMR_SR_parseMetadataOnly>:
    8904:	6f 92       	push	r6
    8906:	7f 92       	push	r7
    8908:	8f 92       	push	r8
    890a:	9f 92       	push	r9
    890c:	af 92       	push	r10
    890e:	bf 92       	push	r11
    8910:	cf 92       	push	r12
    8912:	df 92       	push	r13
    8914:	ef 92       	push	r14
    8916:	ff 92       	push	r15
    8918:	0f 93       	push	r16
    891a:	1f 93       	push	r17
    891c:	cf 93       	push	r28
    891e:	df 93       	push	r29
    8920:	cd b7       	in	r28, 0x3d	; 61
    8922:	de b7       	in	r29, 0x3e	; 62
    8924:	28 97       	sbiw	r28, 0x08	; 8
    8926:	0f b6       	in	r0, 0x3f	; 63
    8928:	f8 94       	cli
    892a:	de bf       	out	0x3e, r29	; 62
    892c:	0f be       	out	0x3f, r0	; 63
    892e:	cd bf       	out	0x3d, r28	; 61
    8930:	4c 01       	movw	r8, r24
    8932:	7b 01       	movw	r14, r22
    8934:	6a 01       	movw	r12, r20
    8936:	59 01       	movw	r10, r18
    8938:	fb 01       	movw	r30, r22
    893a:	e0 5b       	subi	r30, 0xB0	; 176
    893c:	ff 4f       	sbci	r31, 0xFF	; 255
    893e:	51 83       	std	Z+1, r21	; 0x01
    8940:	40 83       	st	Z, r20
    8942:	eb 5b       	subi	r30, 0xBB	; 187
    8944:	ff 4f       	sbci	r31, 0xFF	; 255
    8946:	10 82       	st	Z, r1
    8948:	e1 54       	subi	r30, 0x41	; 65
    894a:	f1 09       	sbc	r31, r1
    894c:	10 82       	st	Z, r1
    894e:	ea 58       	subi	r30, 0x8A	; 138
    8950:	ff 4f       	sbci	r31, 0xFF	; 255
    8952:	10 82       	st	Z, r1
    8954:	11 82       	std	Z+1, r1	; 0x01
    8956:	12 82       	std	Z+2, r1	; 0x02
    8958:	13 82       	std	Z+3, r1	; 0x03
    895a:	fc 01       	movw	r30, r24
    895c:	e7 5e       	subi	r30, 0xE7	; 231
    895e:	f9 4f       	sbci	r31, 0xF9	; 249
    8960:	51 83       	std	Z+1, r21	; 0x01
    8962:	40 83       	st	Z, r20
    8964:	40 ff       	sbrs	r20, 0
    8966:	13 c0       	rjmp	.+38     	; 0x898e <TMR_SR_parseMetadataOnly+0x8a>
    8968:	f9 01       	movw	r30, r18
    896a:	80 81       	ld	r24, Z
    896c:	91 e0       	ldi	r25, 0x01	; 1
    896e:	98 0f       	add	r25, r24
    8970:	90 83       	st	Z, r25
    8972:	f8 01       	movw	r30, r16
    8974:	e8 0f       	add	r30, r24
    8976:	f1 1d       	adc	r31, r1
    8978:	80 81       	ld	r24, Z
    897a:	fb 01       	movw	r30, r22
    897c:	ea 56       	subi	r30, 0x6A	; 106
    897e:	ff 4f       	sbci	r31, 0xFF	; 255
    8980:	90 e0       	ldi	r25, 0x00	; 0
    8982:	a0 e0       	ldi	r26, 0x00	; 0
    8984:	b0 e0       	ldi	r27, 0x00	; 0
    8986:	80 83       	st	Z, r24
    8988:	91 83       	std	Z+1, r25	; 0x01
    898a:	a2 83       	std	Z+2, r26	; 0x02
    898c:	b3 83       	std	Z+3, r27	; 0x03
    898e:	c1 fe       	sbrs	r12, 1
    8990:	15 c0       	rjmp	.+42     	; 0x89bc <TMR_SR_parseMetadataOnly+0xb8>
    8992:	f5 01       	movw	r30, r10
    8994:	80 81       	ld	r24, Z
    8996:	91 e0       	ldi	r25, 0x01	; 1
    8998:	98 0f       	add	r25, r24
    899a:	90 83       	st	Z, r25
    899c:	f8 01       	movw	r30, r16
    899e:	e8 0f       	add	r30, r24
    89a0:	f1 1d       	adc	r31, r1
    89a2:	80 81       	ld	r24, Z
    89a4:	f7 01       	movw	r30, r14
    89a6:	e6 56       	subi	r30, 0x66	; 102
    89a8:	ff 4f       	sbci	r31, 0xFF	; 255
    89aa:	08 2e       	mov	r0, r24
    89ac:	00 0c       	add	r0, r0
    89ae:	99 0b       	sbc	r25, r25
    89b0:	aa 0b       	sbc	r26, r26
    89b2:	bb 0b       	sbc	r27, r27
    89b4:	80 83       	st	Z, r24
    89b6:	91 83       	std	Z+1, r25	; 0x01
    89b8:	a2 83       	std	Z+2, r26	; 0x02
    89ba:	b3 83       	std	Z+3, r27	; 0x03
    89bc:	c2 fe       	sbrs	r12, 2
    89be:	0d c0       	rjmp	.+26     	; 0x89da <TMR_SR_parseMetadataOnly+0xd6>
    89c0:	f5 01       	movw	r30, r10
    89c2:	80 81       	ld	r24, Z
    89c4:	91 e0       	ldi	r25, 0x01	; 1
    89c6:	98 0f       	add	r25, r24
    89c8:	90 83       	st	Z, r25
    89ca:	f8 01       	movw	r30, r16
    89cc:	e8 0f       	add	r30, r24
    89ce:	f1 1d       	adc	r31, r1
    89d0:	80 81       	ld	r24, Z
    89d2:	f7 01       	movw	r30, r14
    89d4:	ec 5a       	subi	r30, 0xAC	; 172
    89d6:	ff 4f       	sbci	r31, 0xFF	; 255
    89d8:	80 83       	st	Z, r24
    89da:	c3 fe       	sbrs	r12, 3
    89dc:	28 c0       	rjmp	.+80     	; 0x8a2e <TMR_SR_parseMetadataOnly+0x12a>
    89de:	f5 01       	movw	r30, r10
    89e0:	80 81       	ld	r24, Z
    89e2:	8d 5f       	subi	r24, 0xFD	; 253
    89e4:	80 83       	st	Z, r24
    89e6:	98 01       	movw	r18, r16
    89e8:	28 0f       	add	r18, r24
    89ea:	31 1d       	adc	r19, r1
    89ec:	f9 01       	movw	r30, r18
    89ee:	33 97       	sbiw	r30, 0x03	; 3
    89f0:	80 81       	ld	r24, Z
    89f2:	90 e0       	ldi	r25, 0x00	; 0
    89f4:	a0 e0       	ldi	r26, 0x00	; 0
    89f6:	b0 e0       	ldi	r27, 0x00	; 0
    89f8:	bc 01       	movw	r22, r24
    89fa:	55 27       	eor	r21, r21
    89fc:	44 27       	eor	r20, r20
    89fe:	31 96       	adiw	r30, 0x01	; 1
    8a00:	90 81       	ld	r25, Z
    8a02:	89 2f       	mov	r24, r25
    8a04:	90 e0       	ldi	r25, 0x00	; 0
    8a06:	a0 e0       	ldi	r26, 0x00	; 0
    8a08:	b0 e0       	ldi	r27, 0x00	; 0
    8a0a:	ba 2f       	mov	r27, r26
    8a0c:	a9 2f       	mov	r26, r25
    8a0e:	98 2f       	mov	r25, r24
    8a10:	88 27       	eor	r24, r24
    8a12:	84 2b       	or	r24, r20
    8a14:	95 2b       	or	r25, r21
    8a16:	a6 2b       	or	r26, r22
    8a18:	b7 2b       	or	r27, r23
    8a1a:	31 96       	adiw	r30, 0x01	; 1
    8a1c:	20 81       	ld	r18, Z
    8a1e:	82 2b       	or	r24, r18
    8a20:	f7 01       	movw	r30, r14
    8a22:	e2 56       	subi	r30, 0x62	; 98
    8a24:	ff 4f       	sbci	r31, 0xFF	; 255
    8a26:	80 83       	st	Z, r24
    8a28:	91 83       	std	Z+1, r25	; 0x01
    8a2a:	a2 83       	std	Z+2, r26	; 0x02
    8a2c:	b3 83       	std	Z+3, r27	; 0x03
    8a2e:	c4 fe       	sbrs	r12, 4
    8a30:	35 c0       	rjmp	.+106    	; 0x8a9c <TMR_SR_parseMetadataOnly+0x198>
    8a32:	f5 01       	movw	r30, r10
    8a34:	80 81       	ld	r24, Z
    8a36:	8c 5f       	subi	r24, 0xFC	; 252
    8a38:	80 83       	st	Z, r24
    8a3a:	98 01       	movw	r18, r16
    8a3c:	28 0f       	add	r18, r24
    8a3e:	31 1d       	adc	r19, r1
    8a40:	f9 01       	movw	r30, r18
    8a42:	34 97       	sbiw	r30, 0x04	; 4
    8a44:	80 81       	ld	r24, Z
    8a46:	90 e0       	ldi	r25, 0x00	; 0
    8a48:	a0 e0       	ldi	r26, 0x00	; 0
    8a4a:	b0 e0       	ldi	r27, 0x00	; 0
    8a4c:	78 2f       	mov	r23, r24
    8a4e:	66 27       	eor	r22, r22
    8a50:	55 27       	eor	r21, r21
    8a52:	44 27       	eor	r20, r20
    8a54:	31 96       	adiw	r30, 0x01	; 1
    8a56:	90 81       	ld	r25, Z
    8a58:	89 2f       	mov	r24, r25
    8a5a:	90 e0       	ldi	r25, 0x00	; 0
    8a5c:	a0 e0       	ldi	r26, 0x00	; 0
    8a5e:	b0 e0       	ldi	r27, 0x00	; 0
    8a60:	dc 01       	movw	r26, r24
    8a62:	99 27       	eor	r25, r25
    8a64:	88 27       	eor	r24, r24
    8a66:	84 2b       	or	r24, r20
    8a68:	95 2b       	or	r25, r21
    8a6a:	a6 2b       	or	r26, r22
    8a6c:	b7 2b       	or	r27, r23
    8a6e:	31 96       	adiw	r30, 0x01	; 1
    8a70:	40 81       	ld	r20, Z
    8a72:	50 e0       	ldi	r21, 0x00	; 0
    8a74:	60 e0       	ldi	r22, 0x00	; 0
    8a76:	70 e0       	ldi	r23, 0x00	; 0
    8a78:	76 2f       	mov	r23, r22
    8a7a:	65 2f       	mov	r22, r21
    8a7c:	54 2f       	mov	r21, r20
    8a7e:	44 27       	eor	r20, r20
    8a80:	84 2b       	or	r24, r20
    8a82:	95 2b       	or	r25, r21
    8a84:	a6 2b       	or	r26, r22
    8a86:	b7 2b       	or	r27, r23
    8a88:	31 96       	adiw	r30, 0x01	; 1
    8a8a:	20 81       	ld	r18, Z
    8a8c:	82 2b       	or	r24, r18
    8a8e:	f7 01       	movw	r30, r14
    8a90:	e6 53       	subi	r30, 0x36	; 54
    8a92:	ff 4f       	sbci	r31, 0xFF	; 255
    8a94:	80 83       	st	Z, r24
    8a96:	91 83       	std	Z+1, r25	; 0x01
    8a98:	a2 83       	std	Z+2, r26	; 0x02
    8a9a:	b3 83       	std	Z+3, r27	; 0x03
    8a9c:	c5 fe       	sbrs	r12, 5
    8a9e:	15 c0       	rjmp	.+42     	; 0x8aca <TMR_SR_parseMetadataOnly+0x1c6>
    8aa0:	f5 01       	movw	r30, r10
    8aa2:	80 81       	ld	r24, Z
    8aa4:	8e 5f       	subi	r24, 0xFE	; 254
    8aa6:	80 83       	st	Z, r24
    8aa8:	98 01       	movw	r18, r16
    8aaa:	28 0f       	add	r18, r24
    8aac:	31 1d       	adc	r19, r1
    8aae:	f9 01       	movw	r30, r18
    8ab0:	32 97       	sbiw	r30, 0x02	; 2
    8ab2:	80 81       	ld	r24, Z
    8ab4:	90 e0       	ldi	r25, 0x00	; 0
    8ab6:	98 2f       	mov	r25, r24
    8ab8:	88 27       	eor	r24, r24
    8aba:	31 96       	adiw	r30, 0x01	; 1
    8abc:	20 81       	ld	r18, Z
    8abe:	82 2b       	or	r24, r18
    8ac0:	f7 01       	movw	r30, r14
    8ac2:	ee 5a       	subi	r30, 0xAE	; 174
    8ac4:	ff 4f       	sbci	r31, 0xFF	; 255
    8ac6:	91 83       	std	Z+1, r25	; 0x01
    8ac8:	80 83       	st	Z, r24
    8aca:	c6 fe       	sbrs	r12, 6
    8acc:	0b c0       	rjmp	.+22     	; 0x8ae4 <TMR_SR_parseMetadataOnly+0x1e0>
    8ace:	f5 01       	movw	r30, r10
    8ad0:	80 81       	ld	r24, Z
    8ad2:	91 e0       	ldi	r25, 0x01	; 1
    8ad4:	98 0f       	add	r25, r24
    8ad6:	90 83       	st	Z, r25
    8ad8:	f8 01       	movw	r30, r16
    8ada:	e8 0f       	add	r30, r24
    8adc:	f1 1d       	adc	r31, r1
    8ade:	80 81       	ld	r24, Z
    8ae0:	f7 01       	movw	r30, r14
    8ae2:	86 af       	std	Z+62, r24	; 0x3e
    8ae4:	c7 fe       	sbrs	r12, 7
    8ae6:	57 c0       	rjmp	.+174    	; 0x8b96 <TMR_SR_parseMetadataOnly+0x292>
    8ae8:	f4 01       	movw	r30, r8
    8aea:	ea 58       	subi	r30, 0x8A	; 138
    8aec:	ff 4f       	sbci	r31, 0xFF	; 255
    8aee:	80 81       	ld	r24, Z
    8af0:	88 23       	and	r24, r24
    8af2:	31 f0       	breq	.+12     	; 0x8b00 <TMR_SR_parseMetadataOnly+0x1fc>
    8af4:	81 e0       	ldi	r24, 0x01	; 1
    8af6:	90 e0       	ldi	r25, 0x00	; 0
    8af8:	e3 5b       	subi	r30, 0xB3	; 179
    8afa:	fa 4f       	sbci	r31, 0xFA	; 250
    8afc:	91 83       	std	Z+1, r25	; 0x01
    8afe:	80 83       	st	Z, r24
    8b00:	f5 01       	movw	r30, r10
    8b02:	80 81       	ld	r24, Z
    8b04:	8e 5f       	subi	r24, 0xFE	; 254
    8b06:	80 83       	st	Z, r24
    8b08:	98 01       	movw	r18, r16
    8b0a:	28 0f       	add	r18, r24
    8b0c:	31 1d       	adc	r19, r1
    8b0e:	f9 01       	movw	r30, r18
    8b10:	32 97       	sbiw	r30, 0x02	; 2
    8b12:	80 81       	ld	r24, Z
    8b14:	90 e0       	ldi	r25, 0x00	; 0
    8b16:	98 2f       	mov	r25, r24
    8b18:	88 27       	eor	r24, r24
    8b1a:	31 96       	adiw	r30, 0x01	; 1
    8b1c:	20 81       	ld	r18, Z
    8b1e:	82 2b       	or	r24, r18
    8b20:	f7 01       	movw	r30, r14
    8b22:	e0 55       	subi	r30, 0x50	; 80
    8b24:	ff 4f       	sbci	r31, 0xFF	; 255
    8b26:	91 83       	std	Z+1, r25	; 0x01
    8b28:	80 83       	st	Z, r24
    8b2a:	0e 94 90 6a 	call	0xd520	; 0xd520 <tm_u8s_per_bits>
    8b2e:	3c 01       	movw	r6, r24
    8b30:	f7 01       	movw	r30, r14
    8b32:	e2 55       	subi	r30, 0x52	; 82
    8b34:	ff 4f       	sbci	r31, 0xFF	; 255
    8b36:	80 81       	ld	r24, Z
    8b38:	91 81       	ldd	r25, Z+1	; 0x01
    8b3a:	86 15       	cp	r24, r6
    8b3c:	97 05       	cpc	r25, r7
    8b3e:	28 f4       	brcc	.+10     	; 0x8b4a <TMR_SR_parseMetadataOnly+0x246>
    8b40:	61 14       	cp	r6, r1
    8b42:	f0 e1       	ldi	r31, 0x10	; 16
    8b44:	7f 06       	cpc	r7, r31
    8b46:	09 f0       	breq	.+2      	; 0x8b4a <TMR_SR_parseMetadataOnly+0x246>
    8b48:	0b c1       	rjmp	.+534    	; 0x8d60 <TMR_SR_parseMetadataOnly+0x45c>
    8b4a:	f7 01       	movw	r30, r14
    8b4c:	e4 55       	subi	r30, 0x54	; 84
    8b4e:	ff 4f       	sbci	r31, 0xFF	; 255
    8b50:	80 81       	ld	r24, Z
    8b52:	91 81       	ldd	r25, Z+1	; 0x01
    8b54:	00 97       	sbiw	r24, 0x00	; 0
    8b56:	99 f0       	breq	.+38     	; 0x8b7e <TMR_SR_parseMetadataOnly+0x27a>
    8b58:	74 fe       	sbrs	r7, 4
    8b5a:	09 c0       	rjmp	.+18     	; 0x8b6e <TMR_SR_parseMetadataOnly+0x26a>
    8b5c:	20 e0       	ldi	r18, 0x00	; 0
    8b5e:	30 e8       	ldi	r19, 0x80	; 128
    8b60:	34 96       	adiw	r30, 0x04	; 4
    8b62:	31 83       	std	Z+1, r19	; 0x01
    8b64:	20 83       	st	Z, r18
    8b66:	68 94       	set
    8b68:	66 24       	eor	r6, r6
    8b6a:	61 f8       	bld	r6, 1
    8b6c:	71 2c       	mov	r7, r1
    8b6e:	f5 01       	movw	r30, r10
    8b70:	20 81       	ld	r18, Z
    8b72:	b8 01       	movw	r22, r16
    8b74:	62 0f       	add	r22, r18
    8b76:	71 1d       	adc	r23, r1
    8b78:	a3 01       	movw	r20, r6
    8b7a:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    8b7e:	f4 01       	movw	r30, r8
    8b80:	e8 50       	subi	r30, 0x08	; 8
    8b82:	fa 4f       	sbci	r31, 0xFA	; 250
    8b84:	80 81       	ld	r24, Z
    8b86:	88 23       	and	r24, r24
    8b88:	11 f0       	breq	.+4      	; 0x8b8e <TMR_SR_parseMetadataOnly+0x28a>
    8b8a:	c7 01       	movw	r24, r14
    8b8c:	3b de       	rcall	.-906    	; 0x8804 <extractGen2MemoryBankValues>
    8b8e:	f5 01       	movw	r30, r10
    8b90:	80 81       	ld	r24, Z
    8b92:	68 0e       	add	r6, r24
    8b94:	60 82       	st	Z, r6
    8b96:	d0 fe       	sbrs	r13, 0
    8b98:	5e c0       	rjmp	.+188    	; 0x8c56 <TMR_SR_parseMetadataOnly+0x352>
    8b9a:	f5 01       	movw	r30, r10
    8b9c:	80 81       	ld	r24, Z
    8b9e:	91 e0       	ldi	r25, 0x01	; 1
    8ba0:	98 0f       	add	r25, r24
    8ba2:	90 83       	st	Z, r25
    8ba4:	f8 01       	movw	r30, r16
    8ba6:	e8 0f       	add	r30, r24
    8ba8:	f1 1d       	adc	r31, r1
    8baa:	20 81       	ld	r18, Z
    8bac:	f4 01       	movw	r30, r8
    8bae:	ef 58       	subi	r30, 0x8F	; 143
    8bb0:	fc 4f       	sbci	r31, 0xFC	; 252
    8bb2:	80 81       	ld	r24, Z
    8bb4:	80 32       	cpi	r24, 0x20	; 32
    8bb6:	41 f4       	brne	.+16     	; 0x8bc8 <TMR_SR_parseMetadataOnly+0x2c4>
    8bb8:	82 e0       	ldi	r24, 0x02	; 2
    8bba:	f7 01       	movw	r30, r14
    8bbc:	eb 56       	subi	r30, 0x6B	; 107
    8bbe:	ff 4f       	sbci	r31, 0xFF	; 255
    8bc0:	80 83       	st	Z, r24
    8bc2:	80 e0       	ldi	r24, 0x00	; 0
    8bc4:	90 e0       	ldi	r25, 0x00	; 0
    8bc6:	3e c0       	rjmp	.+124    	; 0x8c44 <TMR_SR_parseMetadataOnly+0x340>
    8bc8:	84 e0       	ldi	r24, 0x04	; 4
    8bca:	f7 01       	movw	r30, r14
    8bcc:	eb 56       	subi	r30, 0x6B	; 107
    8bce:	ff 4f       	sbci	r31, 0xFF	; 255
    8bd0:	80 83       	st	Z, r24
    8bd2:	f7 cf       	rjmp	.-18     	; 0x8bc2 <TMR_SR_parseMetadataOnly+0x2be>
    8bd4:	fc 01       	movw	r30, r24
    8bd6:	ee 0f       	add	r30, r30
    8bd8:	ff 1f       	adc	r31, r31
    8bda:	ee 0f       	add	r30, r30
    8bdc:	ff 1f       	adc	r31, r31
    8bde:	ee 0d       	add	r30, r14
    8be0:	ff 1d       	adc	r31, r15
    8be2:	eb 5a       	subi	r30, 0xAB	; 171
    8be4:	ff 4f       	sbci	r31, 0xFF	; 255
    8be6:	31 e0       	ldi	r19, 0x01	; 1
    8be8:	38 0f       	add	r19, r24
    8bea:	30 83       	st	Z, r19
    8bec:	42 2f       	mov	r20, r18
    8bee:	50 e0       	ldi	r21, 0x00	; 0
    8bf0:	ba 01       	movw	r22, r20
    8bf2:	08 2e       	mov	r0, r24
    8bf4:	02 c0       	rjmp	.+4      	; 0x8bfa <TMR_SR_parseMetadataOnly+0x2f6>
    8bf6:	75 95       	asr	r23
    8bf8:	67 95       	ror	r22
    8bfa:	0a 94       	dec	r0
    8bfc:	e2 f7       	brpl	.-8      	; 0x8bf6 <TMR_SR_parseMetadataOnly+0x2f2>
    8bfe:	31 e0       	ldi	r19, 0x01	; 1
    8c00:	60 ff       	sbrs	r22, 0
    8c02:	30 e0       	ldi	r19, 0x00	; 0
    8c04:	fc 01       	movw	r30, r24
    8c06:	ee 0f       	add	r30, r30
    8c08:	ff 1f       	adc	r31, r31
    8c0a:	ee 0f       	add	r30, r30
    8c0c:	ff 1f       	adc	r31, r31
    8c0e:	ee 0d       	add	r30, r14
    8c10:	ff 1d       	adc	r31, r15
    8c12:	ea 5a       	subi	r30, 0xAA	; 170
    8c14:	ff 4f       	sbci	r31, 0xFF	; 255
    8c16:	30 83       	st	Z, r19
    8c18:	bc 01       	movw	r22, r24
    8c1a:	6c 5f       	subi	r22, 0xFC	; 252
    8c1c:	7f 4f       	sbci	r23, 0xFF	; 255
    8c1e:	02 c0       	rjmp	.+4      	; 0x8c24 <TMR_SR_parseMetadataOnly+0x320>
    8c20:	55 95       	asr	r21
    8c22:	47 95       	ror	r20
    8c24:	6a 95       	dec	r22
    8c26:	e2 f7       	brpl	.-8      	; 0x8c20 <TMR_SR_parseMetadataOnly+0x31c>
    8c28:	31 e0       	ldi	r19, 0x01	; 1
    8c2a:	40 ff       	sbrs	r20, 0
    8c2c:	30 e0       	ldi	r19, 0x00	; 0
    8c2e:	fc 01       	movw	r30, r24
    8c30:	ee 0f       	add	r30, r30
    8c32:	ff 1f       	adc	r31, r31
    8c34:	ee 0f       	add	r30, r30
    8c36:	ff 1f       	adc	r31, r31
    8c38:	ee 0d       	add	r30, r14
    8c3a:	ff 1d       	adc	r31, r15
    8c3c:	e9 5a       	subi	r30, 0xA9	; 169
    8c3e:	ff 4f       	sbci	r31, 0xFF	; 255
    8c40:	30 83       	st	Z, r19
    8c42:	01 96       	adiw	r24, 0x01	; 1
    8c44:	f7 01       	movw	r30, r14
    8c46:	eb 56       	subi	r30, 0x6B	; 107
    8c48:	ff 4f       	sbci	r31, 0xFF	; 255
    8c4a:	40 81       	ld	r20, Z
    8c4c:	50 e0       	ldi	r21, 0x00	; 0
    8c4e:	84 17       	cp	r24, r20
    8c50:	95 07       	cpc	r25, r21
    8c52:	0c f4       	brge	.+2      	; 0x8c56 <TMR_SR_parseMetadataOnly+0x352>
    8c54:	bf cf       	rjmp	.-130    	; 0x8bd4 <TMR_SR_parseMetadataOnly+0x2d0>
    8c56:	f7 01       	movw	r30, r14
    8c58:	86 ad       	ldd	r24, Z+62	; 0x3e
    8c5a:	85 30       	cpi	r24, 0x05	; 5
    8c5c:	09 f0       	breq	.+2      	; 0x8c60 <TMR_SR_parseMetadataOnly+0x35c>
    8c5e:	51 c0       	rjmp	.+162    	; 0x8d02 <TMR_SR_parseMetadataOnly+0x3fe>
    8c60:	d1 fe       	sbrs	r13, 1
    8c62:	0d c0       	rjmp	.+26     	; 0x8c7e <TMR_SR_parseMetadataOnly+0x37a>
    8c64:	f5 01       	movw	r30, r10
    8c66:	80 81       	ld	r24, Z
    8c68:	91 e0       	ldi	r25, 0x01	; 1
    8c6a:	98 0f       	add	r25, r24
    8c6c:	90 83       	st	Z, r25
    8c6e:	f8 01       	movw	r30, r16
    8c70:	e8 0f       	add	r30, r24
    8c72:	f1 1d       	adc	r31, r1
    8c74:	80 81       	ld	r24, Z
    8c76:	f7 01       	movw	r30, r14
    8c78:	e4 5b       	subi	r30, 0xB4	; 180
    8c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    8c7c:	80 83       	st	Z, r24
    8c7e:	d2 fe       	sbrs	r13, 2
    8c80:	26 c0       	rjmp	.+76     	; 0x8cce <TMR_SR_parseMetadataOnly+0x3ca>
    8c82:	f5 01       	movw	r30, r10
    8c84:	80 81       	ld	r24, Z
    8c86:	91 e0       	ldi	r25, 0x01	; 1
    8c88:	98 0f       	add	r25, r24
    8c8a:	90 83       	st	Z, r25
    8c8c:	f8 01       	movw	r30, r16
    8c8e:	e8 0f       	add	r30, r24
    8c90:	f1 1d       	adc	r31, r1
    8c92:	80 81       	ld	r24, Z
    8c94:	82 30       	cpi	r24, 0x02	; 2
    8c96:	61 f0       	breq	.+24     	; 0x8cb0 <TMR_SR_parseMetadataOnly+0x3ac>
    8c98:	84 30       	cpi	r24, 0x04	; 4
    8c9a:	91 f0       	breq	.+36     	; 0x8cc0 <TMR_SR_parseMetadataOnly+0x3bc>
    8c9c:	81 11       	cpse	r24, r1
    8c9e:	17 c0       	rjmp	.+46     	; 0x8cce <TMR_SR_parseMetadataOnly+0x3ca>
    8ca0:	8a ef       	ldi	r24, 0xFA	; 250
    8ca2:	90 e0       	ldi	r25, 0x00	; 0
    8ca4:	f7 01       	movw	r30, r14
    8ca6:	e3 5b       	subi	r30, 0xB3	; 179
    8ca8:	ff 4f       	sbci	r31, 0xFF	; 255
    8caa:	91 83       	std	Z+1, r25	; 0x01
    8cac:	80 83       	st	Z, r24
    8cae:	0f c0       	rjmp	.+30     	; 0x8cce <TMR_SR_parseMetadataOnly+0x3ca>
    8cb0:	80 e4       	ldi	r24, 0x40	; 64
    8cb2:	91 e0       	ldi	r25, 0x01	; 1
    8cb4:	f7 01       	movw	r30, r14
    8cb6:	e3 5b       	subi	r30, 0xB3	; 179
    8cb8:	ff 4f       	sbci	r31, 0xFF	; 255
    8cba:	91 83       	std	Z+1, r25	; 0x01
    8cbc:	80 83       	st	Z, r24
    8cbe:	07 c0       	rjmp	.+14     	; 0x8cce <TMR_SR_parseMetadataOnly+0x3ca>
    8cc0:	80 e8       	ldi	r24, 0x80	; 128
    8cc2:	92 e0       	ldi	r25, 0x02	; 2
    8cc4:	f7 01       	movw	r30, r14
    8cc6:	e3 5b       	subi	r30, 0xB3	; 179
    8cc8:	ff 4f       	sbci	r31, 0xFF	; 255
    8cca:	91 83       	std	Z+1, r25	; 0x01
    8ccc:	80 83       	st	Z, r24
    8cce:	d3 fe       	sbrs	r13, 3
    8cd0:	18 c0       	rjmp	.+48     	; 0x8d02 <TMR_SR_parseMetadataOnly+0x3fe>
    8cd2:	f5 01       	movw	r30, r10
    8cd4:	80 81       	ld	r24, Z
    8cd6:	91 e0       	ldi	r25, 0x01	; 1
    8cd8:	98 0f       	add	r25, r24
    8cda:	90 83       	st	Z, r25
    8cdc:	f8 01       	movw	r30, r16
    8cde:	e8 0f       	add	r30, r24
    8ce0:	f1 1d       	adc	r31, r1
    8ce2:	80 81       	ld	r24, Z
    8ce4:	88 23       	and	r24, r24
    8ce6:	19 f0       	breq	.+6      	; 0x8cee <TMR_SR_parseMetadataOnly+0x3ea>
    8ce8:	81 30       	cpi	r24, 0x01	; 1
    8cea:	31 f0       	breq	.+12     	; 0x8cf8 <TMR_SR_parseMetadataOnly+0x3f4>
    8cec:	0a c0       	rjmp	.+20     	; 0x8d02 <TMR_SR_parseMetadataOnly+0x3fe>
    8cee:	f7 01       	movw	r30, r14
    8cf0:	e1 5b       	subi	r30, 0xB1	; 177
    8cf2:	ff 4f       	sbci	r31, 0xFF	; 255
    8cf4:	10 82       	st	Z, r1
    8cf6:	05 c0       	rjmp	.+10     	; 0x8d02 <TMR_SR_parseMetadataOnly+0x3fe>
    8cf8:	81 e0       	ldi	r24, 0x01	; 1
    8cfa:	f7 01       	movw	r30, r14
    8cfc:	e1 5b       	subi	r30, 0xB1	; 177
    8cfe:	ff 4f       	sbci	r31, 0xFF	; 255
    8d00:	80 83       	st	Z, r24
    8d02:	d4 fe       	sbrs	r13, 4
    8d04:	10 c0       	rjmp	.+32     	; 0x8d26 <TMR_SR_parseMetadataOnly+0x422>
    8d06:	f5 01       	movw	r30, r10
    8d08:	80 81       	ld	r24, Z
    8d0a:	b8 01       	movw	r22, r16
    8d0c:	68 0f       	add	r22, r24
    8d0e:	71 1d       	adc	r23, r1
    8d10:	42 e0       	ldi	r20, 0x02	; 2
    8d12:	50 e0       	ldi	r21, 0x00	; 0
    8d14:	c7 01       	movw	r24, r14
    8d16:	8e 55       	subi	r24, 0x5E	; 94
    8d18:	9f 4f       	sbci	r25, 0xFF	; 255
    8d1a:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    8d1e:	f5 01       	movw	r30, r10
    8d20:	80 81       	ld	r24, Z
    8d22:	8e 5f       	subi	r24, 0xFE	; 254
    8d24:	80 83       	st	Z, r24
    8d26:	d5 fe       	sbrs	r13, 5
    8d28:	20 c0       	rjmp	.+64     	; 0x8d6a <TMR_SR_parseMetadataOnly+0x466>
    8d2a:	a5 01       	movw	r20, r10
    8d2c:	be 01       	movw	r22, r28
    8d2e:	6f 5f       	subi	r22, 0xFF	; 255
    8d30:	7f 4f       	sbci	r23, 0xFF	; 255
    8d32:	c8 01       	movw	r24, r16
    8d34:	0e 94 4d 32 	call	0x649a	; 0x649a <parseEBVdata>
    8d38:	68 2f       	mov	r22, r24
    8d3a:	ce 01       	movw	r24, r28
    8d3c:	01 96       	adiw	r24, 0x01	; 1
    8d3e:	0e 94 3a 6f 	call	0xde74	; 0xde74 <TMR_SR_convertFromEBV>
    8d42:	f7 01       	movw	r30, r14
    8d44:	e2 53       	subi	r30, 0x32	; 50
    8d46:	ff 4f       	sbci	r31, 0xFF	; 255
    8d48:	20 83       	st	Z, r18
    8d4a:	31 83       	std	Z+1, r19	; 0x01
    8d4c:	42 83       	std	Z+2, r20	; 0x02
    8d4e:	53 83       	std	Z+3, r21	; 0x03
    8d50:	64 83       	std	Z+4, r22	; 0x04
    8d52:	75 83       	std	Z+5, r23	; 0x05
    8d54:	86 83       	std	Z+6, r24	; 0x06
    8d56:	97 83       	std	Z+7, r25	; 0x07
    8d58:	60 e0       	ldi	r22, 0x00	; 0
    8d5a:	70 e0       	ldi	r23, 0x00	; 0
    8d5c:	cb 01       	movw	r24, r22
    8d5e:	08 c0       	rjmp	.+16     	; 0x8d70 <TMR_SR_parseMetadataOnly+0x46c>
    8d60:	6c e0       	ldi	r22, 0x0C	; 12
    8d62:	70 e0       	ldi	r23, 0x00	; 0
    8d64:	80 e0       	ldi	r24, 0x00	; 0
    8d66:	93 e0       	ldi	r25, 0x03	; 3
    8d68:	03 c0       	rjmp	.+6      	; 0x8d70 <TMR_SR_parseMetadataOnly+0x46c>
    8d6a:	60 e0       	ldi	r22, 0x00	; 0
    8d6c:	70 e0       	ldi	r23, 0x00	; 0
    8d6e:	cb 01       	movw	r24, r22
    8d70:	28 96       	adiw	r28, 0x08	; 8
    8d72:	0f b6       	in	r0, 0x3f	; 63
    8d74:	f8 94       	cli
    8d76:	de bf       	out	0x3e, r29	; 62
    8d78:	0f be       	out	0x3f, r0	; 63
    8d7a:	cd bf       	out	0x3d, r28	; 61
    8d7c:	df 91       	pop	r29
    8d7e:	cf 91       	pop	r28
    8d80:	1f 91       	pop	r17
    8d82:	0f 91       	pop	r16
    8d84:	ff 90       	pop	r15
    8d86:	ef 90       	pop	r14
    8d88:	df 90       	pop	r13
    8d8a:	cf 90       	pop	r12
    8d8c:	bf 90       	pop	r11
    8d8e:	af 90       	pop	r10
    8d90:	9f 90       	pop	r9
    8d92:	8f 90       	pop	r8
    8d94:	7f 90       	pop	r7
    8d96:	6f 90       	pop	r6
    8d98:	08 95       	ret

00008d9a <TMR_SR_parseMetadataFromMessage>:
    8d9a:	4f 92       	push	r4
    8d9c:	5f 92       	push	r5
    8d9e:	6f 92       	push	r6
    8da0:	7f 92       	push	r7
    8da2:	9f 92       	push	r9
    8da4:	af 92       	push	r10
    8da6:	bf 92       	push	r11
    8da8:	cf 92       	push	r12
    8daa:	df 92       	push	r13
    8dac:	ef 92       	push	r14
    8dae:	ff 92       	push	r15
    8db0:	0f 93       	push	r16
    8db2:	1f 93       	push	r17
    8db4:	cf 93       	push	r28
    8db6:	df 93       	push	r29
    8db8:	eb 01       	movw	r28, r22
    8dba:	5a 01       	movw	r10, r20
    8dbc:	79 01       	movw	r14, r18
    8dbe:	68 01       	movw	r12, r16
    8dc0:	a1 dd       	rcall	.-1214   	; 0x8904 <TMR_SR_parseMetadataOnly>
    8dc2:	2b 01       	movw	r4, r22
    8dc4:	3c 01       	movw	r6, r24
    8dc6:	67 2b       	or	r22, r23
    8dc8:	68 2b       	or	r22, r24
    8dca:	69 2b       	or	r22, r25
    8dcc:	09 f0       	breq	.+2      	; 0x8dd0 <TMR_SR_parseMetadataFromMessage+0x36>
    8dce:	cf c0       	rjmp	.+414    	; 0x8f6e <TMR_SR_parseMetadataFromMessage+0x1d4>
    8dd0:	d7 01       	movw	r26, r14
    8dd2:	8c 91       	ld	r24, X
    8dd4:	8e 5f       	subi	r24, 0xFE	; 254
    8dd6:	8c 93       	st	X, r24
    8dd8:	98 01       	movw	r18, r16
    8dda:	28 0f       	add	r18, r24
    8ddc:	31 1d       	adc	r19, r1
    8dde:	f9 01       	movw	r30, r18
    8de0:	32 97       	sbiw	r30, 0x02	; 2
    8de2:	80 81       	ld	r24, Z
    8de4:	90 e0       	ldi	r25, 0x00	; 0
    8de6:	98 2f       	mov	r25, r24
    8de8:	88 27       	eor	r24, r24
    8dea:	31 96       	adiw	r30, 0x01	; 1
    8dec:	20 81       	ld	r18, Z
    8dee:	82 2b       	or	r24, r18
    8df0:	0e 94 90 6a 	call	0xd520	; 0xd520 <tm_u8s_per_bits>
    8df4:	2e ad       	ldd	r18, Y+62	; 0x3e
    8df6:	2d 31       	cpi	r18, 0x1D	; 29
    8df8:	21 f0       	breq	.+8      	; 0x8e02 <TMR_SR_parseMetadataFromMessage+0x68>
    8dfa:	82 30       	cpi	r24, 0x02	; 2
    8dfc:	91 05       	cpc	r25, r1
    8dfe:	0c f0       	brlt	.+2      	; 0x8e02 <TMR_SR_parseMetadataFromMessage+0x68>
    8e00:	02 97       	sbiw	r24, 0x02	; 2
    8e02:	25 30       	cpi	r18, 0x05	; 5
    8e04:	09 f0       	breq	.+2      	; 0x8e08 <TMR_SR_parseMetadataFromMessage+0x6e>
    8e06:	6c c0       	rjmp	.+216    	; 0x8ee0 <TMR_SR_parseMetadataFromMessage+0x146>
    8e08:	f7 01       	movw	r30, r14
    8e0a:	20 81       	ld	r18, Z
    8e0c:	31 e0       	ldi	r19, 0x01	; 1
    8e0e:	32 0f       	add	r19, r18
    8e10:	30 83       	st	Z, r19
    8e12:	f6 01       	movw	r30, r12
    8e14:	e2 0f       	add	r30, r18
    8e16:	f1 1d       	adc	r31, r1
    8e18:	20 81       	ld	r18, Z
    8e1a:	fe 01       	movw	r30, r28
    8e1c:	eb 5b       	subi	r30, 0xBB	; 187
    8e1e:	ff 4f       	sbci	r31, 0xFF	; 255
    8e20:	20 83       	st	Z, r18
    8e22:	d7 01       	movw	r26, r14
    8e24:	2c 91       	ld	r18, X
    8e26:	31 e0       	ldi	r19, 0x01	; 1
    8e28:	32 0f       	add	r19, r18
    8e2a:	3c 93       	st	X, r19
    8e2c:	f6 01       	movw	r30, r12
    8e2e:	e2 0f       	add	r30, r18
    8e30:	f1 1d       	adc	r31, r1
    8e32:	20 81       	ld	r18, Z
    8e34:	fe 01       	movw	r30, r28
    8e36:	ea 5b       	subi	r30, 0xBA	; 186
    8e38:	ff 4f       	sbci	r31, 0xFF	; 255
    8e3a:	20 83       	st	Z, r18
    8e3c:	82 30       	cpi	r24, 0x02	; 2
    8e3e:	91 05       	cpc	r25, r1
    8e40:	0c f0       	brlt	.+2      	; 0x8e44 <TMR_SR_parseMetadataFromMessage+0xaa>
    8e42:	02 97       	sbiw	r24, 0x02	; 2
    8e44:	22 e0       	ldi	r18, 0x02	; 2
    8e46:	fe 01       	movw	r30, r28
    8e48:	ec 5b       	subi	r30, 0xBC	; 188
    8e4a:	ff 4f       	sbci	r31, 0xFF	; 255
    8e4c:	20 83       	st	Z, r18
    8e4e:	31 96       	adiw	r30, 0x01	; 1
    8e50:	20 81       	ld	r18, Z
    8e52:	21 ff       	sbrs	r18, 1
    8e54:	45 c0       	rjmp	.+138    	; 0x8ee0 <TMR_SR_parseMetadataFromMessage+0x146>
    8e56:	f7 01       	movw	r30, r14
    8e58:	20 81       	ld	r18, Z
    8e5a:	31 e0       	ldi	r19, 0x01	; 1
    8e5c:	32 0f       	add	r19, r18
    8e5e:	30 83       	st	Z, r19
    8e60:	f6 01       	movw	r30, r12
    8e62:	e2 0f       	add	r30, r18
    8e64:	f1 1d       	adc	r31, r1
    8e66:	20 81       	ld	r18, Z
    8e68:	fe 01       	movw	r30, r28
    8e6a:	e9 5b       	subi	r30, 0xB9	; 185
    8e6c:	ff 4f       	sbci	r31, 0xFF	; 255
    8e6e:	20 83       	st	Z, r18
    8e70:	d7 01       	movw	r26, r14
    8e72:	2c 91       	ld	r18, X
    8e74:	31 e0       	ldi	r19, 0x01	; 1
    8e76:	32 0f       	add	r19, r18
    8e78:	3c 93       	st	X, r19
    8e7a:	d6 01       	movw	r26, r12
    8e7c:	a2 0f       	add	r26, r18
    8e7e:	b1 1d       	adc	r27, r1
    8e80:	2c 91       	ld	r18, X
    8e82:	de 01       	movw	r26, r28
    8e84:	a8 5b       	subi	r26, 0xB8	; 184
    8e86:	bf 4f       	sbci	r27, 0xFF	; 255
    8e88:	2c 93       	st	X, r18
    8e8a:	9c 01       	movw	r18, r24
    8e8c:	22 50       	subi	r18, 0x02	; 2
    8e8e:	31 09       	sbc	r19, r1
    8e90:	14 97       	sbiw	r26, 0x04	; 4
    8e92:	4c 91       	ld	r20, X
    8e94:	4e 5f       	subi	r20, 0xFE	; 254
    8e96:	4c 93       	st	X, r20
    8e98:	40 81       	ld	r20, Z
    8e9a:	44 23       	and	r20, r20
    8e9c:	04 f5       	brge	.+64     	; 0x8ede <TMR_SR_parseMetadataFromMessage+0x144>
    8e9e:	f7 01       	movw	r30, r14
    8ea0:	20 81       	ld	r18, Z
    8ea2:	31 e0       	ldi	r19, 0x01	; 1
    8ea4:	32 0f       	add	r19, r18
    8ea6:	30 83       	st	Z, r19
    8ea8:	f6 01       	movw	r30, r12
    8eaa:	e2 0f       	add	r30, r18
    8eac:	f1 1d       	adc	r31, r1
    8eae:	20 81       	ld	r18, Z
    8eb0:	fe 01       	movw	r30, r28
    8eb2:	e7 5b       	subi	r30, 0xB7	; 183
    8eb4:	ff 4f       	sbci	r31, 0xFF	; 255
    8eb6:	20 83       	st	Z, r18
    8eb8:	d7 01       	movw	r26, r14
    8eba:	2c 91       	ld	r18, X
    8ebc:	31 e0       	ldi	r19, 0x01	; 1
    8ebe:	32 0f       	add	r19, r18
    8ec0:	3c 93       	st	X, r19
    8ec2:	f6 01       	movw	r30, r12
    8ec4:	e2 0f       	add	r30, r18
    8ec6:	f1 1d       	adc	r31, r1
    8ec8:	20 81       	ld	r18, Z
    8eca:	fe 01       	movw	r30, r28
    8ecc:	e6 5b       	subi	r30, 0xB6	; 182
    8ece:	ff 4f       	sbci	r31, 0xFF	; 255
    8ed0:	20 83       	st	Z, r18
    8ed2:	04 97       	sbiw	r24, 0x04	; 4
    8ed4:	36 97       	sbiw	r30, 0x06	; 6
    8ed6:	20 81       	ld	r18, Z
    8ed8:	2e 5f       	subi	r18, 0xFE	; 254
    8eda:	20 83       	st	Z, r18
    8edc:	01 c0       	rjmp	.+2      	; 0x8ee0 <TMR_SR_parseMetadataFromMessage+0x146>
    8ede:	c9 01       	movw	r24, r18
    8ee0:	98 2e       	mov	r9, r24
    8ee2:	8f af       	std	Y+63, r24	; 0x3f
    8ee4:	85 01       	movw	r16, r10
    8ee6:	00 27       	eor	r16, r16
    8ee8:	10 71       	andi	r17, 0x10	; 16
    8eea:	b4 fe       	sbrs	r11, 4
    8eec:	02 c0       	rjmp	.+4      	; 0x8ef2 <TMR_SR_parseMetadataFromMessage+0x158>
    8eee:	82 50       	subi	r24, 0x02	; 2
    8ef0:	8f af       	std	Y+63, r24	; 0x3f
    8ef2:	8f ad       	ldd	r24, Y+63	; 0x3f
    8ef4:	8f 33       	cpi	r24, 0x3F	; 63
    8ef6:	10 f0       	brcs	.+4      	; 0x8efc <TMR_SR_parseMetadataFromMessage+0x162>
    8ef8:	8e e3       	ldi	r24, 0x3E	; 62
    8efa:	8f af       	std	Y+63, r24	; 0x3f
    8efc:	4f ad       	ldd	r20, Y+63	; 0x3f
    8efe:	f7 01       	movw	r30, r14
    8f00:	80 81       	ld	r24, Z
    8f02:	50 e0       	ldi	r21, 0x00	; 0
    8f04:	b6 01       	movw	r22, r12
    8f06:	68 0f       	add	r22, r24
    8f08:	71 1d       	adc	r23, r1
    8f0a:	ce 01       	movw	r24, r28
    8f0c:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    8f10:	d7 01       	movw	r26, r14
    8f12:	6c 91       	ld	r22, X
    8f14:	69 0d       	add	r22, r9
    8f16:	6c 93       	st	X, r22
    8f18:	01 2b       	or	r16, r17
    8f1a:	61 f0       	breq	.+24     	; 0x8f34 <TMR_SR_parseMetadataFromMessage+0x19a>
    8f1c:	70 e0       	ldi	r23, 0x00	; 0
    8f1e:	62 50       	subi	r22, 0x02	; 2
    8f20:	71 09       	sbc	r23, r1
    8f22:	6c 0d       	add	r22, r12
    8f24:	7d 1d       	adc	r23, r13
    8f26:	42 e0       	ldi	r20, 0x02	; 2
    8f28:	50 e0       	ldi	r21, 0x00	; 0
    8f2a:	ce 01       	movw	r24, r28
    8f2c:	80 5c       	subi	r24, 0xC0	; 192
    8f2e:	9f 4f       	sbci	r25, 0xFF	; 255
    8f30:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    8f34:	8e ad       	ldd	r24, Y+62	; 0x3e
    8f36:	8d 31       	cpi	r24, 0x1D	; 29
    8f38:	39 f4       	brne	.+14     	; 0x8f48 <TMR_SR_parseMetadataFromMessage+0x1ae>
    8f3a:	ce 5b       	subi	r28, 0xBE	; 190
    8f3c:	df 4f       	sbci	r29, 0xFF	; 255
    8f3e:	8f ef       	ldi	r24, 0xFF	; 255
    8f40:	9f ef       	ldi	r25, 0xFF	; 255
    8f42:	99 83       	std	Y+1, r25	; 0x01
    8f44:	88 83       	st	Y, r24
    8f46:	13 c0       	rjmp	.+38     	; 0x8f6e <TMR_SR_parseMetadataFromMessage+0x1d4>
    8f48:	f7 01       	movw	r30, r14
    8f4a:	80 81       	ld	r24, Z
    8f4c:	8e 5f       	subi	r24, 0xFE	; 254
    8f4e:	80 83       	st	Z, r24
    8f50:	c8 0e       	add	r12, r24
    8f52:	d1 1c       	adc	r13, r1
    8f54:	f6 01       	movw	r30, r12
    8f56:	32 97       	sbiw	r30, 0x02	; 2
    8f58:	80 81       	ld	r24, Z
    8f5a:	90 e0       	ldi	r25, 0x00	; 0
    8f5c:	98 2f       	mov	r25, r24
    8f5e:	88 27       	eor	r24, r24
    8f60:	31 96       	adiw	r30, 0x01	; 1
    8f62:	20 81       	ld	r18, Z
    8f64:	82 2b       	or	r24, r18
    8f66:	ce 5b       	subi	r28, 0xBE	; 190
    8f68:	df 4f       	sbci	r29, 0xFF	; 255
    8f6a:	99 83       	std	Y+1, r25	; 0x01
    8f6c:	88 83       	st	Y, r24
    8f6e:	c3 01       	movw	r24, r6
    8f70:	b2 01       	movw	r22, r4
    8f72:	df 91       	pop	r29
    8f74:	cf 91       	pop	r28
    8f76:	1f 91       	pop	r17
    8f78:	0f 91       	pop	r16
    8f7a:	ff 90       	pop	r15
    8f7c:	ef 90       	pop	r14
    8f7e:	df 90       	pop	r13
    8f80:	cf 90       	pop	r12
    8f82:	bf 90       	pop	r11
    8f84:	af 90       	pop	r10
    8f86:	9f 90       	pop	r9
    8f88:	7f 90       	pop	r7
    8f8a:	6f 90       	pop	r6
    8f8c:	5f 90       	pop	r5
    8f8e:	4f 90       	pop	r4
    8f90:	08 95       	ret

00008f92 <TMR_SR_antennaDecoding>:
    8f92:	cf 93       	push	r28
    8f94:	dc 01       	movw	r26, r24
    8f96:	fb 01       	movw	r30, r22
    8f98:	e6 58       	subi	r30, 0x86	; 134
    8f9a:	fb 4f       	sbci	r31, 0xFB	; 251
    8f9c:	80 81       	ld	r24, Z
    8f9e:	88 23       	and	r24, r24
    8fa0:	09 f4       	brne	.+2      	; 0x8fa4 <TMR_SR_antennaDecoding+0x12>
    8fa2:	66 c0       	rjmp	.+204    	; 0x9070 <TMR_SR_antennaDecoding+0xde>
    8fa4:	fd 01       	movw	r30, r26
    8fa6:	ec 5a       	subi	r30, 0xAC	; 172
    8fa8:	ff 4f       	sbci	r31, 0xFF	; 255
    8faa:	80 81       	ld	r24, Z
    8fac:	c8 2f       	mov	r28, r24
    8fae:	c2 95       	swap	r28
    8fb0:	cf 70       	andi	r28, 0x0F	; 15
    8fb2:	8f 70       	andi	r24, 0x0F	; 15
    8fb4:	c1 11       	cpse	r28, r1
    8fb6:	01 c0       	rjmp	.+2      	; 0x8fba <TMR_SR_antennaDecoding+0x28>
    8fb8:	c0 e1       	ldi	r28, 0x10	; 16
    8fba:	81 11       	cpse	r24, r1
    8fbc:	01 c0       	rjmp	.+2      	; 0x8fc0 <TMR_SR_antennaDecoding+0x2e>
    8fbe:	80 e1       	ldi	r24, 0x10	; 16
    8fc0:	90 e0       	ldi	r25, 0x00	; 0
    8fc2:	4c c0       	rjmp	.+152    	; 0x905c <TMR_SR_antennaDecoding+0xca>
    8fc4:	40 81       	ld	r20, Z
    8fc6:	51 81       	ldd	r21, Z+1	; 0x01
    8fc8:	29 2f       	mov	r18, r25
    8fca:	30 e0       	ldi	r19, 0x00	; 0
    8fcc:	f9 01       	movw	r30, r18
    8fce:	ee 0f       	add	r30, r30
    8fd0:	ff 1f       	adc	r31, r31
    8fd2:	2e 0f       	add	r18, r30
    8fd4:	3f 1f       	adc	r19, r31
    8fd6:	fa 01       	movw	r30, r20
    8fd8:	e2 0f       	add	r30, r18
    8fda:	f3 1f       	adc	r31, r19
    8fdc:	22 81       	ldd	r18, Z+2	; 0x02
    8fde:	82 13       	cpse	r24, r18
    8fe0:	3c c0       	rjmp	.+120    	; 0x905a <TMR_SR_antennaDecoding+0xc8>
    8fe2:	21 81       	ldd	r18, Z+1	; 0x01
    8fe4:	c2 13       	cpse	r28, r18
    8fe6:	39 c0       	rjmp	.+114    	; 0x905a <TMR_SR_antennaDecoding+0xc8>
    8fe8:	80 81       	ld	r24, Z
    8fea:	fd 01       	movw	r30, r26
    8fec:	ec 5a       	subi	r30, 0xAC	; 172
    8fee:	ff 4f       	sbci	r31, 0xFF	; 255
    8ff0:	80 83       	st	Z, r24
    8ff2:	ef 5b       	subi	r30, 0xBF	; 191
    8ff4:	ff 4f       	sbci	r31, 0xFF	; 255
    8ff6:	90 81       	ld	r25, Z
    8ff8:	93 30       	cpi	r25, 0x03	; 3
    8ffa:	d0 f1       	brcs	.+116    	; 0x9070 <TMR_SR_antennaDecoding+0xde>
    8ffc:	fb 01       	movw	r30, r22
    8ffe:	ef 50       	subi	r30, 0x0F	; 15
    9000:	fe 4f       	sbci	r31, 0xFE	; 254
    9002:	90 81       	ld	r25, Z
    9004:	90 33       	cpi	r25, 0x30	; 48
    9006:	a1 f1       	breq	.+104    	; 0x9070 <TMR_SR_antennaDecoding+0xde>
    9008:	fd 01       	movw	r30, r26
    900a:	e2 5a       	subi	r30, 0xA2	; 162
    900c:	ff 4f       	sbci	r31, 0xFF	; 255
    900e:	90 81       	ld	r25, Z
    9010:	99 23       	and	r25, r25
    9012:	49 f0       	breq	.+18     	; 0x9026 <TMR_SR_antennaDecoding+0x94>
    9014:	34 96       	adiw	r30, 0x04	; 4
    9016:	20 81       	ld	r18, Z
    9018:	21 11       	cpse	r18, r1
    901a:	05 c0       	rjmp	.+10     	; 0x9026 <TMR_SR_antennaDecoding+0x94>
    901c:	ac 5a       	subi	r26, 0xAC	; 172
    901e:	bf 4f       	sbci	r27, 0xFF	; 255
    9020:	80 5f       	subi	r24, 0xF0	; 240
    9022:	8c 93       	st	X, r24
    9024:	25 c0       	rjmp	.+74     	; 0x9070 <TMR_SR_antennaDecoding+0xde>
    9026:	91 11       	cpse	r25, r1
    9028:	0b c0       	rjmp	.+22     	; 0x9040 <TMR_SR_antennaDecoding+0xae>
    902a:	fd 01       	movw	r30, r26
    902c:	ee 59       	subi	r30, 0x9E	; 158
    902e:	ff 4f       	sbci	r31, 0xFF	; 255
    9030:	20 81       	ld	r18, Z
    9032:	22 23       	and	r18, r18
    9034:	29 f0       	breq	.+10     	; 0x9040 <TMR_SR_antennaDecoding+0xae>
    9036:	ac 5a       	subi	r26, 0xAC	; 172
    9038:	bf 4f       	sbci	r27, 0xFF	; 255
    903a:	80 5e       	subi	r24, 0xE0	; 224
    903c:	8c 93       	st	X, r24
    903e:	18 c0       	rjmp	.+48     	; 0x9070 <TMR_SR_antennaDecoding+0xde>
    9040:	99 23       	and	r25, r25
    9042:	b1 f0       	breq	.+44     	; 0x9070 <TMR_SR_antennaDecoding+0xde>
    9044:	fd 01       	movw	r30, r26
    9046:	ee 59       	subi	r30, 0x9E	; 158
    9048:	ff 4f       	sbci	r31, 0xFF	; 255
    904a:	90 81       	ld	r25, Z
    904c:	99 23       	and	r25, r25
    904e:	81 f0       	breq	.+32     	; 0x9070 <TMR_SR_antennaDecoding+0xde>
    9050:	ac 5a       	subi	r26, 0xAC	; 172
    9052:	bf 4f       	sbci	r27, 0xFF	; 255
    9054:	80 5d       	subi	r24, 0xD0	; 208
    9056:	8c 93       	st	X, r24
    9058:	0b c0       	rjmp	.+22     	; 0x9070 <TMR_SR_antennaDecoding+0xde>
    905a:	9f 5f       	subi	r25, 0xFF	; 255
    905c:	fb 01       	movw	r30, r22
    905e:	ea 5a       	subi	r30, 0xAA	; 170
    9060:	ff 4f       	sbci	r31, 0xFF	; 255
    9062:	01 90       	ld	r0, Z+
    9064:	f0 81       	ld	r31, Z
    9066:	e0 2d       	mov	r30, r0
    9068:	23 81       	ldd	r18, Z+3	; 0x03
    906a:	92 17       	cp	r25, r18
    906c:	08 f4       	brcc	.+2      	; 0x9070 <TMR_SR_antennaDecoding+0xde>
    906e:	aa cf       	rjmp	.-172    	; 0x8fc4 <TMR_SR_antennaDecoding+0x32>
    9070:	cf 91       	pop	r28
    9072:	08 95       	ret

00009074 <TMR_SR_postprocessReaderSpecificMetadata>:
    9074:	2f 92       	push	r2
    9076:	3f 92       	push	r3
    9078:	4f 92       	push	r4
    907a:	5f 92       	push	r5
    907c:	6f 92       	push	r6
    907e:	7f 92       	push	r7
    9080:	8f 92       	push	r8
    9082:	9f 92       	push	r9
    9084:	af 92       	push	r10
    9086:	bf 92       	push	r11
    9088:	cf 92       	push	r12
    908a:	df 92       	push	r13
    908c:	ef 92       	push	r14
    908e:	ff 92       	push	r15
    9090:	0f 93       	push	r16
    9092:	1f 93       	push	r17
    9094:	cf 93       	push	r28
    9096:	df 93       	push	r29
    9098:	cd b7       	in	r28, 0x3d	; 61
    909a:	de b7       	in	r29, 0x3e	; 62
    909c:	6a 97       	sbiw	r28, 0x1a	; 26
    909e:	0f b6       	in	r0, 0x3f	; 63
    90a0:	f8 94       	cli
    90a2:	de bf       	out	0x3e, r29	; 62
    90a4:	0f be       	out	0x3f, r0	; 63
    90a6:	cd bf       	out	0x3d, r28	; 61
    90a8:	4c 01       	movw	r8, r24
    90aa:	fb 01       	movw	r30, r22
    90ac:	db 01       	movw	r26, r22
    90ae:	ac 5d       	subi	r26, 0xDC	; 220
    90b0:	bd 4f       	sbci	r27, 0xFD	; 253
    90b2:	4d 90       	ld	r4, X+
    90b4:	5d 90       	ld	r5, X+
    90b6:	6d 90       	ld	r6, X+
    90b8:	7c 90       	ld	r7, X
    90ba:	13 97       	sbiw	r26, 0x03	; 3
    90bc:	14 96       	adiw	r26, 0x04	; 4
    90be:	ad 90       	ld	r10, X+
    90c0:	bd 90       	ld	r11, X+
    90c2:	cd 90       	ld	r12, X+
    90c4:	dc 90       	ld	r13, X
    90c6:	a9 8a       	std	Y+17, r10	; 0x11
    90c8:	ba 8a       	std	Y+18, r11	; 0x12
    90ca:	cb 8a       	std	Y+19, r12	; 0x13
    90cc:	dc 8a       	std	Y+20, r13	; 0x14
    90ce:	dc 01       	movw	r26, r24
    90d0:	a8 55       	subi	r26, 0x58	; 88
    90d2:	bf 4f       	sbci	r27, 0xFF	; 255
    90d4:	ad 92       	st	X+, r10
    90d6:	bd 92       	st	X+, r11
    90d8:	cd 92       	st	X+, r12
    90da:	dc 92       	st	X, r13
    90dc:	13 97       	sbiw	r26, 0x03	; 3
    90de:	92 96       	adiw	r26, 0x22	; 34
    90e0:	8d 91       	ld	r24, X+
    90e2:	9d 91       	ld	r25, X+
    90e4:	0d 90       	ld	r0, X+
    90e6:	bc 91       	ld	r27, X
    90e8:	a0 2d       	mov	r26, r0
    90ea:	20 91 ed 0c 	lds	r18, 0x0CED	; 0x800ced <delta>
    90ee:	30 91 ee 0c 	lds	r19, 0x0CEE	; 0x800cee <delta+0x1>
    90f2:	28 17       	cp	r18, r24
    90f4:	39 07       	cpc	r19, r25
    90f6:	34 f0       	brlt	.+12     	; 0x9104 <TMR_SR_postprocessReaderSpecificMetadata+0x90>
    90f8:	c9 01       	movw	r24, r18
    90fa:	01 96       	adiw	r24, 0x01	; 1
    90fc:	09 2e       	mov	r0, r25
    90fe:	00 0c       	add	r0, r0
    9100:	aa 0b       	sbc	r26, r26
    9102:	bb 0b       	sbc	r27, r27
    9104:	48 0e       	add	r4, r24
    9106:	59 1e       	adc	r5, r25
    9108:	6a 1e       	adc	r6, r26
    910a:	7b 1e       	adc	r7, r27
    910c:	90 93 d4 0b 	sts	0x0BD4, r25	; 0x800bd4 <LastDSPMicro+0x1>
    9110:	80 93 d3 0b 	sts	0x0BD3, r24	; 0x800bd3 <LastDSPMicro>
    9114:	29 89       	ldd	r18, Y+17	; 0x11
    9116:	3a 89       	ldd	r19, Y+18	; 0x12
    9118:	4b 89       	ldd	r20, Y+19	; 0x13
    911a:	5c 89       	ldd	r21, Y+20	; 0x14
    911c:	89 01       	movw	r16, r18
    911e:	9a 01       	movw	r18, r20
    9120:	2b 83       	std	Y+3, r18	; 0x03
    9122:	3c 83       	std	Y+4, r19	; 0x04
    9124:	20 2f       	mov	r18, r16
    9126:	31 2f       	mov	r19, r17
    9128:	4b 81       	ldd	r20, Y+3	; 0x03
    912a:	5c 81       	ldd	r21, Y+4	; 0x04
    912c:	60 e0       	ldi	r22, 0x00	; 0
    912e:	70 e0       	ldi	r23, 0x00	; 0
    9130:	80 e0       	ldi	r24, 0x00	; 0
    9132:	90 e0       	ldi	r25, 0x00	; 0
    9134:	00 e2       	ldi	r16, 0x20	; 32
    9136:	0e 94 e3 74 	call	0xe9c6	; 0xe9c6 <__ashldi3>
    913a:	29 87       	std	Y+9, r18	; 0x09
    913c:	3d 8b       	std	Y+21, r19	; 0x15
    913e:	f4 2e       	mov	r15, r20
    9140:	e5 2e       	mov	r14, r21
    9142:	93 01       	movw	r18, r6
    9144:	82 01       	movw	r16, r4
    9146:	a9 84       	ldd	r10, Y+9	; 0x09
    9148:	a4 28       	or	r10, r4
    914a:	a9 82       	std	Y+1, r10	; 0x01
    914c:	bd 88       	ldd	r11, Y+21	; 0x15
    914e:	b1 2a       	or	r11, r17
    9150:	ba 82       	std	Y+2, r11	; 0x02
    9152:	f2 2a       	or	r15, r18
    9154:	fb 82       	std	Y+3, r15	; 0x03
    9156:	e3 2a       	or	r14, r19
    9158:	ec 82       	std	Y+4, r14	; 0x04
    915a:	6d 83       	std	Y+5, r22	; 0x05
    915c:	7e 83       	std	Y+6, r23	; 0x06
    915e:	8f 83       	std	Y+7, r24	; 0x07
    9160:	98 87       	std	Y+8, r25	; 0x08
    9162:	df 01       	movw	r26, r30
    9164:	a0 5d       	subi	r26, 0xD0	; 208
    9166:	bd 4f       	sbci	r27, 0xFD	; 253
    9168:	8d 91       	ld	r24, X+
    916a:	9d 91       	ld	r25, X+
    916c:	0d 90       	ld	r0, X+
    916e:	bc 91       	ld	r27, X
    9170:	a0 2d       	mov	r26, r0
    9172:	8c 01       	movw	r16, r24
    9174:	9d 01       	movw	r18, r26
    9176:	2b 87       	std	Y+11, r18	; 0x0b
    9178:	3c 87       	std	Y+12, r19	; 0x0c
    917a:	28 2f       	mov	r18, r24
    917c:	31 2f       	mov	r19, r17
    917e:	4b 85       	ldd	r20, Y+11	; 0x0b
    9180:	5c 85       	ldd	r21, Y+12	; 0x0c
    9182:	60 e0       	ldi	r22, 0x00	; 0
    9184:	70 e0       	ldi	r23, 0x00	; 0
    9186:	80 e0       	ldi	r24, 0x00	; 0
    9188:	90 e0       	ldi	r25, 0x00	; 0
    918a:	00 e2       	ldi	r16, 0x20	; 32
    918c:	0e 94 e3 74 	call	0xe9c6	; 0xe9c6 <__ashldi3>
    9190:	32 2e       	mov	r3, r18
    9192:	23 2e       	mov	r2, r19
    9194:	49 8f       	std	Y+25, r20	; 0x19
    9196:	5a 8f       	std	Y+26, r21	; 0x1a
    9198:	f6 2e       	mov	r15, r22
    919a:	e7 2e       	mov	r14, r23
    919c:	9f 01       	movw	r18, r30
    919e:	2c 5c       	subi	r18, 0xCC	; 204
    91a0:	3d 4f       	sbci	r19, 0xFD	; 253
    91a2:	d9 01       	movw	r26, r18
    91a4:	4d 91       	ld	r20, X+
    91a6:	5d 91       	ld	r21, X+
    91a8:	6d 91       	ld	r22, X+
    91aa:	7c 91       	ld	r23, X
    91ac:	4d 8b       	std	Y+21, r20	; 0x15
    91ae:	5e 8b       	std	Y+22, r21	; 0x16
    91b0:	6f 8b       	std	Y+23, r22	; 0x17
    91b2:	78 8f       	std	Y+24, r23	; 0x18
    91b4:	8a 01       	movw	r16, r20
    91b6:	9b 01       	movw	r18, r22
    91b8:	34 2a       	or	r3, r20
    91ba:	39 86       	std	Y+9, r3	; 0x09
    91bc:	21 2a       	or	r2, r17
    91be:	2a 86       	std	Y+10, r2	; 0x0a
    91c0:	b9 8d       	ldd	r27, Y+25	; 0x19
    91c2:	b2 2b       	or	r27, r18
    91c4:	bb 87       	std	Y+11, r27	; 0x0b
    91c6:	aa 8c       	ldd	r10, Y+26	; 0x1a
    91c8:	a3 2a       	or	r10, r19
    91ca:	ac 86       	std	Y+12, r10	; 0x0c
    91cc:	fd 86       	std	Y+13, r15	; 0x0d
    91ce:	ee 86       	std	Y+14, r14	; 0x0e
    91d0:	8f 87       	std	Y+15, r24	; 0x0f
    91d2:	98 8b       	std	Y+16, r25	; 0x10
    91d4:	29 81       	ldd	r18, Y+1	; 0x01
    91d6:	3b 2d       	mov	r19, r11
    91d8:	4b 81       	ldd	r20, Y+3	; 0x03
    91da:	5c 81       	ldd	r21, Y+4	; 0x04
    91dc:	6d 81       	ldd	r22, Y+5	; 0x05
    91de:	7e 81       	ldd	r23, Y+6	; 0x06
    91e0:	8f 81       	ldd	r24, Y+7	; 0x07
    91e2:	98 85       	ldd	r25, Y+8	; 0x08
    91e4:	a3 2c       	mov	r10, r3
    91e6:	b2 2c       	mov	r11, r2
    91e8:	cb 2e       	mov	r12, r27
    91ea:	dc 84       	ldd	r13, Y+12	; 0x0c
    91ec:	ef 2c       	mov	r14, r15
    91ee:	fe 84       	ldd	r15, Y+14	; 0x0e
    91f0:	0f 85       	ldd	r16, Y+15	; 0x0f
    91f2:	18 89       	ldd	r17, Y+16	; 0x10
    91f4:	0e 94 23 75 	call	0xea46	; 0xea46 <__cmpdi2>
    91f8:	09 f0       	breq	.+2      	; 0x91fc <TMR_SR_postprocessReaderSpecificMetadata+0x188>
    91fa:	78 f5       	brcc	.+94     	; 0x925a <TMR_SR_postprocessReaderSpecificMetadata+0x1e6>
    91fc:	89 81       	ldd	r24, Y+1	; 0x01
    91fe:	9a 81       	ldd	r25, Y+2	; 0x02
    9200:	ab 81       	ldd	r26, Y+3	; 0x03
    9202:	bc 81       	ldd	r27, Y+4	; 0x04
    9204:	09 85       	ldd	r16, Y+9	; 0x09
    9206:	1a 85       	ldd	r17, Y+10	; 0x0a
    9208:	2b 85       	ldd	r18, Y+11	; 0x0b
    920a:	3c 85       	ldd	r19, Y+12	; 0x0c
    920c:	80 1b       	sub	r24, r16
    920e:	91 0b       	sbc	r25, r17
    9210:	a2 0b       	sbc	r26, r18
    9212:	b3 0b       	sbc	r27, r19
    9214:	48 1a       	sub	r4, r24
    9216:	59 0a       	sbc	r5, r25
    9218:	6a 0a       	sbc	r6, r26
    921a:	7b 0a       	sbc	r7, r27
    921c:	1f ef       	ldi	r17, 0xFF	; 255
    921e:	41 1a       	sub	r4, r17
    9220:	51 0a       	sbc	r5, r17
    9222:	61 0a       	sbc	r6, r17
    9224:	71 0a       	sbc	r7, r17
    9226:	2d 89       	ldd	r18, Y+21	; 0x15
    9228:	3e 89       	ldd	r19, Y+22	; 0x16
    922a:	4f 89       	ldd	r20, Y+23	; 0x17
    922c:	58 8d       	ldd	r21, Y+24	; 0x18
    922e:	42 16       	cp	r4, r18
    9230:	53 06       	cpc	r5, r19
    9232:	64 06       	cpc	r6, r20
    9234:	75 06       	cpc	r7, r21
    9236:	88 f4       	brcc	.+34     	; 0x925a <TMR_SR_postprocessReaderSpecificMetadata+0x1e6>
    9238:	94 01       	movw	r18, r8
    923a:	28 55       	subi	r18, 0x58	; 88
    923c:	3f 4f       	sbci	r19, 0xFF	; 255
    923e:	49 89       	ldd	r20, Y+17	; 0x11
    9240:	5a 89       	ldd	r21, Y+18	; 0x12
    9242:	6b 89       	ldd	r22, Y+19	; 0x13
    9244:	7c 89       	ldd	r23, Y+20	; 0x14
    9246:	4f 5f       	subi	r20, 0xFF	; 255
    9248:	5f 4f       	sbci	r21, 0xFF	; 255
    924a:	6f 4f       	sbci	r22, 0xFF	; 255
    924c:	7f 4f       	sbci	r23, 0xFF	; 255
    924e:	d9 01       	movw	r26, r18
    9250:	4d 93       	st	X+, r20
    9252:	5d 93       	st	X+, r21
    9254:	6d 93       	st	X+, r22
    9256:	7c 93       	st	X, r23
    9258:	13 97       	sbiw	r26, 0x03	; 3
    925a:	df 01       	movw	r26, r30
    925c:	ac 5d       	subi	r26, 0xDC	; 220
    925e:	bd 4f       	sbci	r27, 0xFD	; 253
    9260:	8d 91       	ld	r24, X+
    9262:	9d 91       	ld	r25, X+
    9264:	0d 90       	ld	r0, X+
    9266:	bc 91       	ld	r27, X
    9268:	a0 2d       	mov	r26, r0
    926a:	48 16       	cp	r4, r24
    926c:	59 06       	cpc	r5, r25
    926e:	6a 06       	cpc	r6, r26
    9270:	7b 06       	cpc	r7, r27
    9272:	90 f4       	brcc	.+36     	; 0x9298 <TMR_SR_postprocessReaderSpecificMetadata+0x224>
    9274:	94 01       	movw	r18, r8
    9276:	28 55       	subi	r18, 0x58	; 88
    9278:	3f 4f       	sbci	r19, 0xFF	; 255
    927a:	d9 01       	movw	r26, r18
    927c:	4d 91       	ld	r20, X+
    927e:	5d 91       	ld	r21, X+
    9280:	6d 91       	ld	r22, X+
    9282:	7c 91       	ld	r23, X
    9284:	13 97       	sbiw	r26, 0x03	; 3
    9286:	4f 5f       	subi	r20, 0xFF	; 255
    9288:	5f 4f       	sbci	r21, 0xFF	; 255
    928a:	6f 4f       	sbci	r22, 0xFF	; 255
    928c:	7f 4f       	sbci	r23, 0xFF	; 255
    928e:	4d 93       	st	X+, r20
    9290:	5d 93       	st	X+, r21
    9292:	6d 93       	st	X+, r22
    9294:	7c 93       	st	X, r23
    9296:	13 97       	sbiw	r26, 0x03	; 3
    9298:	94 01       	movw	r18, r8
    929a:	2c 55       	subi	r18, 0x5C	; 92
    929c:	3f 4f       	sbci	r19, 0xFF	; 255
    929e:	d9 01       	movw	r26, r18
    92a0:	4d 92       	st	X+, r4
    92a2:	5d 92       	st	X+, r5
    92a4:	6d 92       	st	X+, r6
    92a6:	7c 92       	st	X, r7
    92a8:	13 97       	sbiw	r26, 0x03	; 3
    92aa:	a4 01       	movw	r20, r8
    92ac:	48 55       	subi	r20, 0x58	; 88
    92ae:	5f 4f       	sbci	r21, 0xFF	; 255
    92b0:	da 01       	movw	r26, r20
    92b2:	4d 91       	ld	r20, X+
    92b4:	5d 91       	ld	r21, X+
    92b6:	6d 91       	ld	r22, X+
    92b8:	7c 91       	ld	r23, X
    92ba:	8f 01       	movw	r16, r30
    92bc:	00 5d       	subi	r16, 0xD0	; 208
    92be:	1d 4f       	sbci	r17, 0xFD	; 253
    92c0:	d8 01       	movw	r26, r16
    92c2:	4d 93       	st	X+, r20
    92c4:	5d 93       	st	X+, r21
    92c6:	6d 93       	st	X+, r22
    92c8:	7c 93       	st	X, r23
    92ca:	13 97       	sbiw	r26, 0x03	; 3
    92cc:	d9 01       	movw	r26, r18
    92ce:	4d 91       	ld	r20, X+
    92d0:	5d 91       	ld	r21, X+
    92d2:	6d 91       	ld	r22, X+
    92d4:	7c 91       	ld	r23, X
    92d6:	df 01       	movw	r26, r30
    92d8:	ac 5c       	subi	r26, 0xCC	; 204
    92da:	bd 4f       	sbci	r27, 0xFD	; 253
    92dc:	4d 93       	st	X+, r20
    92de:	5d 93       	st	X+, r21
    92e0:	6d 93       	st	X+, r22
    92e2:	7c 93       	st	X, r23
    92e4:	13 97       	sbiw	r26, 0x03	; 3
    92e6:	80 91 d5 0b 	lds	r24, 0x0BD5	; 0x800bd5 <isStreamEnabled>
    92ea:	81 11       	cpse	r24, r1
    92ec:	34 c0       	rjmp	.+104    	; 0x9356 <TMR_SR_postprocessReaderSpecificMetadata+0x2e2>
    92ee:	fa 83       	std	Y+2, r31	; 0x02
    92f0:	e9 83       	std	Y+1, r30	; 0x01
    92f2:	bf 01       	movw	r22, r30
    92f4:	c4 01       	movw	r24, r8
    92f6:	4d de       	rcall	.-870    	; 0x8f92 <TMR_SR_antennaDecoding>
    92f8:	e9 81       	ldd	r30, Y+1	; 0x01
    92fa:	fa 81       	ldd	r31, Y+2	; 0x02
    92fc:	ee 58       	subi	r30, 0x8E	; 142
    92fe:	fb 4f       	sbci	r31, 0xFB	; 251
    9300:	80 81       	ld	r24, Z
    9302:	81 11       	cpse	r24, r1
    9304:	1d c0       	rjmp	.+58     	; 0x9340 <TMR_SR_postprocessReaderSpecificMetadata+0x2cc>
    9306:	27 c0       	rjmp	.+78     	; 0x9356 <TMR_SR_postprocessReaderSpecificMetadata+0x2e2>
    9308:	d4 01       	movw	r26, r8
    930a:	ac 5a       	subi	r26, 0xAC	; 172
    930c:	bf 4f       	sbci	r27, 0xFF	; 255
    930e:	2c 91       	ld	r18, X
    9310:	01 90       	ld	r0, Z+
    9312:	f0 81       	ld	r31, Z
    9314:	e0 2d       	mov	r30, r0
    9316:	84 2f       	mov	r24, r20
    9318:	90 e0       	ldi	r25, 0x00	; 0
    931a:	bc 01       	movw	r22, r24
    931c:	66 0f       	add	r22, r22
    931e:	77 1f       	adc	r23, r23
    9320:	86 0f       	add	r24, r22
    9322:	97 1f       	adc	r25, r23
    9324:	e8 0f       	add	r30, r24
    9326:	f9 1f       	adc	r31, r25
    9328:	82 81       	ldd	r24, Z+2	; 0x02
    932a:	28 13       	cpse	r18, r24
    932c:	07 c0       	rjmp	.+14     	; 0x933c <TMR_SR_postprocessReaderSpecificMetadata+0x2c8>
    932e:	81 81       	ldd	r24, Z+1	; 0x01
    9330:	28 13       	cpse	r18, r24
    9332:	04 c0       	rjmp	.+8      	; 0x933c <TMR_SR_postprocessReaderSpecificMetadata+0x2c8>
    9334:	80 81       	ld	r24, Z
    9336:	fd 01       	movw	r30, r26
    9338:	80 83       	st	Z, r24
    933a:	0d c0       	rjmp	.+26     	; 0x9356 <TMR_SR_postprocessReaderSpecificMetadata+0x2e2>
    933c:	4f 5f       	subi	r20, 0xFF	; 255
    933e:	01 c0       	rjmp	.+2      	; 0x9342 <TMR_SR_postprocessReaderSpecificMetadata+0x2ce>
    9340:	40 e0       	ldi	r20, 0x00	; 0
    9342:	e9 81       	ldd	r30, Y+1	; 0x01
    9344:	fa 81       	ldd	r31, Y+2	; 0x02
    9346:	ec 5a       	subi	r30, 0xAC	; 172
    9348:	ff 4f       	sbci	r31, 0xFF	; 255
    934a:	01 90       	ld	r0, Z+
    934c:	f0 81       	ld	r31, Z
    934e:	e0 2d       	mov	r30, r0
    9350:	83 81       	ldd	r24, Z+3	; 0x03
    9352:	48 17       	cp	r20, r24
    9354:	c8 f2       	brcs	.-78     	; 0x9308 <TMR_SR_postprocessReaderSpecificMetadata+0x294>
    9356:	6a 96       	adiw	r28, 0x1a	; 26
    9358:	0f b6       	in	r0, 0x3f	; 63
    935a:	f8 94       	cli
    935c:	de bf       	out	0x3e, r29	; 62
    935e:	0f be       	out	0x3f, r0	; 63
    9360:	cd bf       	out	0x3d, r28	; 61
    9362:	df 91       	pop	r29
    9364:	cf 91       	pop	r28
    9366:	1f 91       	pop	r17
    9368:	0f 91       	pop	r16
    936a:	ff 90       	pop	r15
    936c:	ef 90       	pop	r14
    936e:	df 90       	pop	r13
    9370:	cf 90       	pop	r12
    9372:	bf 90       	pop	r11
    9374:	af 90       	pop	r10
    9376:	9f 90       	pop	r9
    9378:	8f 90       	pop	r8
    937a:	7f 90       	pop	r7
    937c:	6f 90       	pop	r6
    937e:	5f 90       	pop	r5
    9380:	4f 90       	pop	r4
    9382:	3f 90       	pop	r3
    9384:	2f 90       	pop	r2
    9386:	08 95       	ret

00009388 <TMR_SR_cmdSetTxRxPorts>:
    9388:	cf 93       	push	r28
    938a:	df 93       	push	r29
    938c:	cd b7       	in	r28, 0x3d	; 61
    938e:	de b7       	in	r29, 0x3e	; 62
    9390:	da 95       	dec	r29
    9392:	0f b6       	in	r0, 0x3f	; 63
    9394:	f8 94       	cli
    9396:	de bf       	out	0x3e, r29	; 62
    9398:	0f be       	out	0x3f, r0	; 63
    939a:	cd bf       	out	0x3d, r28	; 61
    939c:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    93a0:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    93a4:	41 e9       	ldi	r20, 0x91	; 145
    93a6:	4b 83       	std	Y+3, r20	; 0x03
    93a8:	2e 5f       	subi	r18, 0xFE	; 254
    93aa:	3f 4f       	sbci	r19, 0xFF	; 255
    93ac:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    93b0:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    93b4:	6c 83       	std	Y+4, r22	; 0x04
    93b6:	fc 01       	movw	r30, r24
    93b8:	e6 50       	subi	r30, 0x06	; 6
    93ba:	fa 4f       	sbci	r31, 0xFA	; 250
    93bc:	40 81       	ld	r20, Z
    93be:	44 23       	and	r20, r20
    93c0:	49 f0       	breq	.+18     	; 0x93d4 <TMR_SR_cmdSetTxRxPorts+0x4c>
    93c2:	2f 5f       	subi	r18, 0xFF	; 255
    93c4:	3f 4f       	sbci	r19, 0xFF	; 255
    93c6:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    93ca:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    93ce:	6d 83       	std	Y+5, r22	; 0x05
    93d0:	45 e0       	ldi	r20, 0x05	; 5
    93d2:	01 c0       	rjmp	.+2      	; 0x93d6 <TMR_SR_cmdSetTxRxPorts+0x4e>
    93d4:	44 e0       	ldi	r20, 0x04	; 4
    93d6:	be 01       	movw	r22, r28
    93d8:	6f 5f       	subi	r22, 0xFF	; 255
    93da:	7f 4f       	sbci	r23, 0xFF	; 255
    93dc:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    93e0:	d3 95       	inc	r29
    93e2:	0f b6       	in	r0, 0x3f	; 63
    93e4:	f8 94       	cli
    93e6:	de bf       	out	0x3e, r29	; 62
    93e8:	0f be       	out	0x3f, r0	; 63
    93ea:	cd bf       	out	0x3d, r28	; 61
    93ec:	df 91       	pop	r29
    93ee:	cf 91       	pop	r28
    93f0:	08 95       	ret

000093f2 <TMR_SR_cmdSetAntennaSearchList>:
    93f2:	ef 92       	push	r14
    93f4:	ff 92       	push	r15
    93f6:	0f 93       	push	r16
    93f8:	1f 93       	push	r17
    93fa:	cf 93       	push	r28
    93fc:	df 93       	push	r29
    93fe:	cd b7       	in	r28, 0x3d	; 61
    9400:	de b7       	in	r29, 0x3e	; 62
    9402:	da 95       	dec	r29
    9404:	0f b6       	in	r0, 0x3f	; 63
    9406:	f8 94       	cli
    9408:	de bf       	out	0x3e, r29	; 62
    940a:	0f be       	out	0x3f, r0	; 63
    940c:	cd bf       	out	0x3d, r28	; 61
    940e:	8c 01       	movw	r16, r24
    9410:	7a 01       	movw	r14, r20
    9412:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    9416:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    941a:	21 e9       	ldi	r18, 0x91	; 145
    941c:	2b 83       	std	Y+3, r18	; 0x03
    941e:	02 96       	adiw	r24, 0x02	; 2
    9420:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    9424:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    9428:	f8 01       	movw	r30, r16
    942a:	e6 50       	subi	r30, 0x06	; 6
    942c:	fa 4f       	sbci	r31, 0xFA	; 250
    942e:	70 81       	ld	r23, Z
    9430:	81 e0       	ldi	r24, 0x01	; 1
    9432:	87 27       	eor	r24, r23
    9434:	20 e8       	ldi	r18, 0x80	; 128
    9436:	82 9f       	mul	r24, r18
    9438:	c0 01       	movw	r24, r0
    943a:	11 24       	eor	r1, r1
    943c:	82 60       	ori	r24, 0x02	; 2
    943e:	8c 83       	std	Y+4, r24	; 0x04
    9440:	90 e0       	ldi	r25, 0x00	; 0
    9442:	44 e0       	ldi	r20, 0x04	; 4
    9444:	2b c0       	rjmp	.+86     	; 0x949c <TMR_SR_cmdSetAntennaSearchList+0xaa>
    9446:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    944a:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    944e:	2f 5f       	subi	r18, 0xFF	; 255
    9450:	3f 4f       	sbci	r19, 0xFF	; 255
    9452:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    9456:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    945a:	51 e0       	ldi	r21, 0x01	; 1
    945c:	54 0f       	add	r21, r20
    945e:	d7 01       	movw	r26, r14
    9460:	a9 0f       	add	r26, r25
    9462:	b1 1d       	adc	r27, r1
    9464:	8c 91       	ld	r24, X
    9466:	e1 e0       	ldi	r30, 0x01	; 1
    9468:	f0 e0       	ldi	r31, 0x00	; 0
    946a:	ec 0f       	add	r30, r28
    946c:	fd 1f       	adc	r31, r29
    946e:	e4 0f       	add	r30, r20
    9470:	f1 1d       	adc	r31, r1
    9472:	80 83       	st	Z, r24
    9474:	77 23       	and	r23, r23
    9476:	81 f0       	breq	.+32     	; 0x9498 <TMR_SR_cmdSetAntennaSearchList+0xa6>
    9478:	2f 5f       	subi	r18, 0xFF	; 255
    947a:	3f 4f       	sbci	r19, 0xFF	; 255
    947c:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    9480:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    9484:	4e 5f       	subi	r20, 0xFE	; 254
    9486:	8c 91       	ld	r24, X
    9488:	e1 e0       	ldi	r30, 0x01	; 1
    948a:	f0 e0       	ldi	r31, 0x00	; 0
    948c:	ec 0f       	add	r30, r28
    948e:	fd 1f       	adc	r31, r29
    9490:	e5 0f       	add	r30, r21
    9492:	f1 1d       	adc	r31, r1
    9494:	80 83       	st	Z, r24
    9496:	01 c0       	rjmp	.+2      	; 0x949a <TMR_SR_cmdSetAntennaSearchList+0xa8>
    9498:	45 2f       	mov	r20, r21
    949a:	9f 5f       	subi	r25, 0xFF	; 255
    949c:	96 17       	cp	r25, r22
    949e:	98 f2       	brcs	.-90     	; 0x9446 <TMR_SR_cmdSetAntennaSearchList+0x54>
    94a0:	be 01       	movw	r22, r28
    94a2:	6f 5f       	subi	r22, 0xFF	; 255
    94a4:	7f 4f       	sbci	r23, 0xFF	; 255
    94a6:	c8 01       	movw	r24, r16
    94a8:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    94ac:	d3 95       	inc	r29
    94ae:	0f b6       	in	r0, 0x3f	; 63
    94b0:	f8 94       	cli
    94b2:	de bf       	out	0x3e, r29	; 62
    94b4:	0f be       	out	0x3f, r0	; 63
    94b6:	cd bf       	out	0x3d, r28	; 61
    94b8:	df 91       	pop	r29
    94ba:	cf 91       	pop	r28
    94bc:	1f 91       	pop	r17
    94be:	0f 91       	pop	r16
    94c0:	ff 90       	pop	r15
    94c2:	ef 90       	pop	r14
    94c4:	08 95       	ret

000094c6 <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime>:
    94c6:	ef 92       	push	r14
    94c8:	ff 92       	push	r15
    94ca:	0f 93       	push	r16
    94cc:	1f 93       	push	r17
    94ce:	cf 93       	push	r28
    94d0:	df 93       	push	r29
    94d2:	cd b7       	in	r28, 0x3d	; 61
    94d4:	de b7       	in	r29, 0x3e	; 62
    94d6:	da 95       	dec	r29
    94d8:	0f b6       	in	r0, 0x3f	; 63
    94da:	f8 94       	cli
    94dc:	de bf       	out	0x3e, r29	; 62
    94de:	0f be       	out	0x3f, r0	; 63
    94e0:	cd bf       	out	0x3d, r28	; 61
    94e2:	8c 01       	movw	r16, r24
    94e4:	7a 01       	movw	r14, r20
    94e6:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    94ea:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    94ee:	21 e9       	ldi	r18, 0x91	; 145
    94f0:	2b 83       	std	Y+3, r18	; 0x03
    94f2:	24 e0       	ldi	r18, 0x04	; 4
    94f4:	2c 83       	std	Y+4, r18	; 0x04
    94f6:	03 96       	adiw	r24, 0x03	; 3
    94f8:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    94fc:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    9500:	f8 01       	movw	r30, r16
    9502:	e2 5f       	subi	r30, 0xF2	; 242
    9504:	f9 4f       	sbci	r31, 0xF9	; 249
    9506:	80 81       	ld	r24, Z
    9508:	8d 83       	std	Y+5, r24	; 0x05
    950a:	95 e0       	ldi	r25, 0x05	; 5
    950c:	50 e0       	ldi	r21, 0x00	; 0
    950e:	78 c0       	rjmp	.+240    	; 0x9600 <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x13a>
    9510:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    9514:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    9518:	2f 5f       	subi	r18, 0xFF	; 255
    951a:	3f 4f       	sbci	r19, 0xFF	; 255
    951c:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    9520:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    9524:	71 e0       	ldi	r23, 0x01	; 1
    9526:	79 0f       	add	r23, r25
    9528:	a5 2f       	mov	r26, r21
    952a:	b0 e0       	ldi	r27, 0x00	; 0
    952c:	fd 01       	movw	r30, r26
    952e:	ee 0f       	add	r30, r30
    9530:	ff 1f       	adc	r31, r31
    9532:	ee 0f       	add	r30, r30
    9534:	ff 1f       	adc	r31, r31
    9536:	ee 0f       	add	r30, r30
    9538:	ff 1f       	adc	r31, r31
    953a:	ea 1b       	sub	r30, r26
    953c:	fb 0b       	sbc	r31, r27
    953e:	ee 0d       	add	r30, r14
    9540:	ff 1d       	adc	r31, r15
    9542:	40 81       	ld	r20, Z
    9544:	a1 e0       	ldi	r26, 0x01	; 1
    9546:	b0 e0       	ldi	r27, 0x00	; 0
    9548:	ac 0f       	add	r26, r28
    954a:	bd 1f       	adc	r27, r29
    954c:	a9 0f       	add	r26, r25
    954e:	b1 1d       	adc	r27, r1
    9550:	4c 93       	st	X, r20
    9552:	82 30       	cpi	r24, 0x02	; 2
    9554:	f9 f0       	breq	.+62     	; 0x9594 <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0xce>
    9556:	83 30       	cpi	r24, 0x03	; 3
    9558:	b9 f1       	breq	.+110    	; 0x95c8 <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x102>
    955a:	81 30       	cpi	r24, 0x01	; 1
    955c:	09 f0       	breq	.+2      	; 0x9560 <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x9a>
    955e:	4e c0       	rjmp	.+156    	; 0x95fc <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x136>
    9560:	41 81       	ldd	r20, Z+1	; 0x01
    9562:	a2 81       	ldd	r26, Z+2	; 0x02
    9564:	2e 5f       	subi	r18, 0xFE	; 254
    9566:	3f 4f       	sbci	r19, 0xFF	; 255
    9568:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    956c:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    9570:	e1 e0       	ldi	r30, 0x01	; 1
    9572:	f0 e0       	ldi	r31, 0x00	; 0
    9574:	ec 0f       	add	r30, r28
    9576:	fd 1f       	adc	r31, r29
    9578:	e7 0f       	add	r30, r23
    957a:	f1 1d       	adc	r31, r1
    957c:	a0 83       	st	Z, r26
    957e:	22 e0       	ldi	r18, 0x02	; 2
    9580:	29 0f       	add	r18, r25
    9582:	e1 e0       	ldi	r30, 0x01	; 1
    9584:	f0 e0       	ldi	r31, 0x00	; 0
    9586:	ec 0f       	add	r30, r28
    9588:	fd 1f       	adc	r31, r29
    958a:	e2 0f       	add	r30, r18
    958c:	f1 1d       	adc	r31, r1
    958e:	9d 5f       	subi	r25, 0xFD	; 253
    9590:	40 83       	st	Z, r20
    9592:	35 c0       	rjmp	.+106    	; 0x95fe <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x138>
    9594:	43 81       	ldd	r20, Z+3	; 0x03
    9596:	a4 81       	ldd	r26, Z+4	; 0x04
    9598:	2e 5f       	subi	r18, 0xFE	; 254
    959a:	3f 4f       	sbci	r19, 0xFF	; 255
    959c:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    95a0:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    95a4:	e1 e0       	ldi	r30, 0x01	; 1
    95a6:	f0 e0       	ldi	r31, 0x00	; 0
    95a8:	ec 0f       	add	r30, r28
    95aa:	fd 1f       	adc	r31, r29
    95ac:	e7 0f       	add	r30, r23
    95ae:	f1 1d       	adc	r31, r1
    95b0:	a0 83       	st	Z, r26
    95b2:	22 e0       	ldi	r18, 0x02	; 2
    95b4:	29 0f       	add	r18, r25
    95b6:	e1 e0       	ldi	r30, 0x01	; 1
    95b8:	f0 e0       	ldi	r31, 0x00	; 0
    95ba:	ec 0f       	add	r30, r28
    95bc:	fd 1f       	adc	r31, r29
    95be:	e2 0f       	add	r30, r18
    95c0:	f1 1d       	adc	r31, r1
    95c2:	9d 5f       	subi	r25, 0xFD	; 253
    95c4:	40 83       	st	Z, r20
    95c6:	1b c0       	rjmp	.+54     	; 0x95fe <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x138>
    95c8:	45 81       	ldd	r20, Z+5	; 0x05
    95ca:	a6 81       	ldd	r26, Z+6	; 0x06
    95cc:	2e 5f       	subi	r18, 0xFE	; 254
    95ce:	3f 4f       	sbci	r19, 0xFF	; 255
    95d0:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    95d4:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    95d8:	e1 e0       	ldi	r30, 0x01	; 1
    95da:	f0 e0       	ldi	r31, 0x00	; 0
    95dc:	ec 0f       	add	r30, r28
    95de:	fd 1f       	adc	r31, r29
    95e0:	e7 0f       	add	r30, r23
    95e2:	f1 1d       	adc	r31, r1
    95e4:	a0 83       	st	Z, r26
    95e6:	22 e0       	ldi	r18, 0x02	; 2
    95e8:	29 0f       	add	r18, r25
    95ea:	e1 e0       	ldi	r30, 0x01	; 1
    95ec:	f0 e0       	ldi	r31, 0x00	; 0
    95ee:	ec 0f       	add	r30, r28
    95f0:	fd 1f       	adc	r31, r29
    95f2:	e2 0f       	add	r30, r18
    95f4:	f1 1d       	adc	r31, r1
    95f6:	9d 5f       	subi	r25, 0xFD	; 253
    95f8:	40 83       	st	Z, r20
    95fa:	01 c0       	rjmp	.+2      	; 0x95fe <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x138>
    95fc:	97 2f       	mov	r25, r23
    95fe:	5f 5f       	subi	r21, 0xFF	; 255
    9600:	56 17       	cp	r21, r22
    9602:	08 f4       	brcc	.+2      	; 0x9606 <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x140>
    9604:	85 cf       	rjmp	.-246    	; 0x9510 <TMR_SR_cmdSetAntennaPortPowersAndSettlingTime+0x4a>
    9606:	49 2f       	mov	r20, r25
    9608:	be 01       	movw	r22, r28
    960a:	6f 5f       	subi	r22, 0xFF	; 255
    960c:	7f 4f       	sbci	r23, 0xFF	; 255
    960e:	c8 01       	movw	r24, r16
    9610:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    9614:	d3 95       	inc	r29
    9616:	0f b6       	in	r0, 0x3f	; 63
    9618:	f8 94       	cli
    961a:	de bf       	out	0x3e, r29	; 62
    961c:	0f be       	out	0x3f, r0	; 63
    961e:	cd bf       	out	0x3d, r28	; 61
    9620:	df 91       	pop	r29
    9622:	cf 91       	pop	r28
    9624:	1f 91       	pop	r17
    9626:	0f 91       	pop	r16
    9628:	ff 90       	pop	r15
    962a:	ef 90       	pop	r14
    962c:	08 95       	ret

0000962e <TMR_SR_cmdSetReadWriteTxPower>:
    962e:	cf 93       	push	r28
    9630:	df 93       	push	r29
    9632:	cd b7       	in	r28, 0x3d	; 61
    9634:	de b7       	in	r29, 0x3e	; 62
    9636:	da 95       	dec	r29
    9638:	0f b6       	in	r0, 0x3f	; 63
    963a:	f8 94       	cli
    963c:	de bf       	out	0x3e, r29	; 62
    963e:	0f be       	out	0x3f, r0	; 63
    9640:	cd bf       	out	0x3d, r28	; 61
    9642:	60 91 d6 0b 	lds	r22, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    9646:	70 91 d7 0b 	lds	r23, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    964a:	2b 83       	std	Y+3, r18	; 0x03
    964c:	9b 01       	movw	r18, r22
    964e:	2d 5f       	subi	r18, 0xFD	; 253
    9650:	3f 4f       	sbci	r19, 0xFF	; 255
    9652:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    9656:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    965a:	5c 83       	std	Y+4, r21	; 0x04
    965c:	4d 83       	std	Y+5, r20	; 0x05
    965e:	45 e0       	ldi	r20, 0x05	; 5
    9660:	be 01       	movw	r22, r28
    9662:	6f 5f       	subi	r22, 0xFF	; 255
    9664:	7f 4f       	sbci	r23, 0xFF	; 255
    9666:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    966a:	d3 95       	inc	r29
    966c:	0f b6       	in	r0, 0x3f	; 63
    966e:	f8 94       	cli
    9670:	de bf       	out	0x3e, r29	; 62
    9672:	0f be       	out	0x3f, r0	; 63
    9674:	cd bf       	out	0x3d, r28	; 61
    9676:	df 91       	pop	r29
    9678:	cf 91       	pop	r28
    967a:	08 95       	ret

0000967c <TMR_SR_cmdSetReadTxPower>:
    967c:	22 e9       	ldi	r18, 0x92	; 146
    967e:	d7 cf       	rjmp	.-82     	; 0x962e <TMR_SR_cmdSetReadWriteTxPower>
    9680:	08 95       	ret

00009682 <TMR_SR_cmdSetProtocolList>:
    9682:	8f 92       	push	r8
    9684:	9f 92       	push	r9
    9686:	af 92       	push	r10
    9688:	bf 92       	push	r11
    968a:	ef 92       	push	r14
    968c:	ff 92       	push	r15
    968e:	0f 93       	push	r16
    9690:	1f 93       	push	r17
    9692:	cf 93       	push	r28
    9694:	df 93       	push	r29
    9696:	cd b7       	in	r28, 0x3d	; 61
    9698:	de b7       	in	r29, 0x3e	; 62
    969a:	da 95       	dec	r29
    969c:	0f b6       	in	r0, 0x3f	; 63
    969e:	f8 94       	cli
    96a0:	de bf       	out	0x3e, r29	; 62
    96a2:	0f be       	out	0x3f, r0	; 63
    96a4:	cd bf       	out	0x3d, r28	; 61
    96a6:	7c 01       	movw	r14, r24
    96a8:	db 01       	movw	r26, r22
    96aa:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    96ae:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    96b2:	23 e9       	ldi	r18, 0x93	; 147
    96b4:	2b 83       	std	Y+3, r18	; 0x03
    96b6:	02 96       	adiw	r24, 0x02	; 2
    96b8:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    96bc:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    96c0:	81 e0       	ldi	r24, 0x01	; 1
    96c2:	8c 83       	std	Y+4, r24	; 0x04
    96c4:	90 e0       	ldi	r25, 0x00	; 0
    96c6:	44 e0       	ldi	r20, 0x04	; 4
    96c8:	40 c0       	rjmp	.+128    	; 0x974a <TMR_SR_cmdSetProtocolList+0xc8>
    96ca:	ed 91       	ld	r30, X+
    96cc:	fc 91       	ld	r31, X
    96ce:	11 97       	sbiw	r26, 0x01	; 1
    96d0:	e9 0f       	add	r30, r25
    96d2:	f1 1d       	adc	r31, r1
    96d4:	80 81       	ld	r24, Z
    96d6:	28 2f       	mov	r18, r24
    96d8:	30 e0       	ldi	r19, 0x00	; 0
    96da:	21 50       	subi	r18, 0x01	; 1
    96dc:	31 09       	sbc	r19, r1
    96de:	01 e0       	ldi	r16, 0x01	; 1
    96e0:	10 e0       	ldi	r17, 0x00	; 0
    96e2:	02 c0       	rjmp	.+4      	; 0x96e8 <TMR_SR_cmdSetProtocolList+0x66>
    96e4:	00 0f       	add	r16, r16
    96e6:	11 1f       	adc	r17, r17
    96e8:	2a 95       	dec	r18
    96ea:	e2 f7       	brpl	.-8      	; 0x96e4 <TMR_SR_cmdSetProtocolList+0x62>
    96ec:	f7 01       	movw	r30, r14
    96ee:	e3 58       	subi	r30, 0x83	; 131
    96f0:	fc 4f       	sbci	r31, 0xFC	; 252
    96f2:	80 80       	ld	r8, Z
    96f4:	91 80       	ldd	r9, Z+1	; 0x01
    96f6:	a2 80       	ldd	r10, Z+2	; 0x02
    96f8:	b3 80       	ldd	r11, Z+3	; 0x03
    96fa:	01 2e       	mov	r0, r17
    96fc:	00 0c       	add	r0, r0
    96fe:	22 0b       	sbc	r18, r18
    9700:	33 0b       	sbc	r19, r19
    9702:	08 21       	and	r16, r8
    9704:	19 21       	and	r17, r9
    9706:	2a 21       	and	r18, r10
    9708:	3b 21       	and	r19, r11
    970a:	01 2b       	or	r16, r17
    970c:	02 2b       	or	r16, r18
    970e:	03 2b       	or	r16, r19
    9710:	49 f1       	breq	.+82     	; 0x9764 <TMR_SR_cmdSetProtocolList+0xe2>
    9712:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    9716:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    971a:	2e 5f       	subi	r18, 0xFE	; 254
    971c:	3f 4f       	sbci	r19, 0xFF	; 255
    971e:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    9722:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    9726:	e1 e0       	ldi	r30, 0x01	; 1
    9728:	f0 e0       	ldi	r31, 0x00	; 0
    972a:	ec 0f       	add	r30, r28
    972c:	fd 1f       	adc	r31, r29
    972e:	e4 0f       	add	r30, r20
    9730:	f1 1d       	adc	r31, r1
    9732:	10 82       	st	Z, r1
    9734:	21 e0       	ldi	r18, 0x01	; 1
    9736:	24 0f       	add	r18, r20
    9738:	e1 e0       	ldi	r30, 0x01	; 1
    973a:	f0 e0       	ldi	r31, 0x00	; 0
    973c:	ec 0f       	add	r30, r28
    973e:	fd 1f       	adc	r31, r29
    9740:	e2 0f       	add	r30, r18
    9742:	f1 1d       	adc	r31, r1
    9744:	4e 5f       	subi	r20, 0xFE	; 254
    9746:	80 83       	st	Z, r24
    9748:	9f 5f       	subi	r25, 0xFF	; 255
    974a:	13 96       	adiw	r26, 0x03	; 3
    974c:	8c 91       	ld	r24, X
    974e:	13 97       	sbiw	r26, 0x03	; 3
    9750:	98 17       	cp	r25, r24
    9752:	08 f4       	brcc	.+2      	; 0x9756 <TMR_SR_cmdSetProtocolList+0xd4>
    9754:	ba cf       	rjmp	.-140    	; 0x96ca <TMR_SR_cmdSetProtocolList+0x48>
    9756:	c7 01       	movw	r24, r14
    9758:	be 01       	movw	r22, r28
    975a:	6f 5f       	subi	r22, 0xFF	; 255
    975c:	7f 4f       	sbci	r23, 0xFF	; 255
    975e:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    9762:	04 c0       	rjmp	.+8      	; 0x976c <TMR_SR_cmdSetProtocolList+0xea>
    9764:	63 e0       	ldi	r22, 0x03	; 3
    9766:	70 e0       	ldi	r23, 0x00	; 0
    9768:	80 e0       	ldi	r24, 0x00	; 0
    976a:	93 e0       	ldi	r25, 0x03	; 3
    976c:	d3 95       	inc	r29
    976e:	0f b6       	in	r0, 0x3f	; 63
    9770:	f8 94       	cli
    9772:	de bf       	out	0x3e, r29	; 62
    9774:	0f be       	out	0x3f, r0	; 63
    9776:	cd bf       	out	0x3d, r28	; 61
    9778:	df 91       	pop	r29
    977a:	cf 91       	pop	r28
    977c:	1f 91       	pop	r17
    977e:	0f 91       	pop	r16
    9780:	ff 90       	pop	r15
    9782:	ef 90       	pop	r14
    9784:	bf 90       	pop	r11
    9786:	af 90       	pop	r10
    9788:	9f 90       	pop	r9
    978a:	8f 90       	pop	r8
    978c:	08 95       	ret

0000978e <TMR_SR_cmdSetProtocol>:
    978e:	cf 93       	push	r28
    9790:	df 93       	push	r29
    9792:	cd b7       	in	r28, 0x3d	; 61
    9794:	de b7       	in	r29, 0x3e	; 62
    9796:	da 95       	dec	r29
    9798:	0f b6       	in	r0, 0x3f	; 63
    979a:	f8 94       	cli
    979c:	de bf       	out	0x3e, r29	; 62
    979e:	0f be       	out	0x3f, r0	; 63
    97a0:	cd bf       	out	0x3d, r28	; 61
    97a2:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    97a6:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    97aa:	43 e9       	ldi	r20, 0x93	; 147
    97ac:	4b 83       	std	Y+3, r20	; 0x03
    97ae:	2d 5f       	subi	r18, 0xFD	; 253
    97b0:	3f 4f       	sbci	r19, 0xFF	; 255
    97b2:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    97b6:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    97ba:	1c 82       	std	Y+4, r1	; 0x04
    97bc:	6d 83       	std	Y+5, r22	; 0x05
    97be:	45 e0       	ldi	r20, 0x05	; 5
    97c0:	be 01       	movw	r22, r28
    97c2:	6f 5f       	subi	r22, 0xFF	; 255
    97c4:	7f 4f       	sbci	r23, 0xFF	; 255
    97c6:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    97ca:	d3 95       	inc	r29
    97cc:	0f b6       	in	r0, 0x3f	; 63
    97ce:	f8 94       	cli
    97d0:	de bf       	out	0x3e, r29	; 62
    97d2:	0f be       	out	0x3f, r0	; 63
    97d4:	cd bf       	out	0x3d, r28	; 61
    97d6:	df 91       	pop	r29
    97d8:	cf 91       	pop	r28
    97da:	08 95       	ret

000097dc <TMR_SR_cmdSetWriteTxPower>:
    97dc:	24 e9       	ldi	r18, 0x94	; 148
    97de:	27 cf       	rjmp	.-434    	; 0x962e <TMR_SR_cmdSetReadWriteTxPower>
    97e0:	08 95       	ret

000097e2 <TMR_SR_cmdSetFrequencyHopTable>:
    97e2:	ef 92       	push	r14
    97e4:	ff 92       	push	r15
    97e6:	1f 93       	push	r17
    97e8:	cf 93       	push	r28
    97ea:	df 93       	push	r29
    97ec:	cd b7       	in	r28, 0x3d	; 61
    97ee:	de b7       	in	r29, 0x3e	; 62
    97f0:	da 95       	dec	r29
    97f2:	0f b6       	in	r0, 0x3f	; 63
    97f4:	f8 94       	cli
    97f6:	de bf       	out	0x3e, r29	; 62
    97f8:	0f be       	out	0x3f, r0	; 63
    97fa:	cd bf       	out	0x3d, r28	; 61
    97fc:	7c 01       	movw	r14, r24
    97fe:	6f 33       	cpi	r22, 0x3F	; 63
    9800:	08 f0       	brcs	.+2      	; 0x9804 <TMR_SR_cmdSetFrequencyHopTable+0x22>
    9802:	52 c0       	rjmp	.+164    	; 0x98a8 <TMR_SR_cmdSetFrequencyHopTable+0xc6>
    9804:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    9808:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    980c:	01 96       	adiw	r24, 0x01	; 1
    980e:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    9812:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    9816:	85 e9       	ldi	r24, 0x95	; 149
    9818:	8b 83       	std	Y+3, r24	; 0x03
    981a:	20 e0       	ldi	r18, 0x00	; 0
    981c:	93 e0       	ldi	r25, 0x03	; 3
    981e:	3a c0       	rjmp	.+116    	; 0x9894 <TMR_SR_cmdSetFrequencyHopTable+0xb2>
    9820:	e2 2f       	mov	r30, r18
    9822:	f0 e0       	ldi	r31, 0x00	; 0
    9824:	ee 0f       	add	r30, r30
    9826:	ff 1f       	adc	r31, r31
    9828:	ee 0f       	add	r30, r30
    982a:	ff 1f       	adc	r31, r31
    982c:	e4 0f       	add	r30, r20
    982e:	f5 1f       	adc	r31, r21
    9830:	80 81       	ld	r24, Z
    9832:	31 81       	ldd	r19, Z+1	; 0x01
    9834:	12 81       	ldd	r17, Z+2	; 0x02
    9836:	73 81       	ldd	r23, Z+3	; 0x03
    9838:	e0 91 d6 0b 	lds	r30, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    983c:	f0 91 d7 0b 	lds	r31, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    9840:	34 96       	adiw	r30, 0x04	; 4
    9842:	f0 93 d7 0b 	sts	0x0BD7, r31	; 0x800bd7 <totalMsgIdx+0x1>
    9846:	e0 93 d6 0b 	sts	0x0BD6, r30	; 0x800bd6 <totalMsgIdx>
    984a:	e1 e0       	ldi	r30, 0x01	; 1
    984c:	e9 0f       	add	r30, r25
    984e:	a1 e0       	ldi	r26, 0x01	; 1
    9850:	b0 e0       	ldi	r27, 0x00	; 0
    9852:	ac 0f       	add	r26, r28
    9854:	bd 1f       	adc	r27, r29
    9856:	a9 0f       	add	r26, r25
    9858:	b1 1d       	adc	r27, r1
    985a:	7c 93       	st	X, r23
    985c:	72 e0       	ldi	r23, 0x02	; 2
    985e:	79 0f       	add	r23, r25
    9860:	a1 e0       	ldi	r26, 0x01	; 1
    9862:	b0 e0       	ldi	r27, 0x00	; 0
    9864:	ac 0f       	add	r26, r28
    9866:	bd 1f       	adc	r27, r29
    9868:	ae 0f       	add	r26, r30
    986a:	b1 1d       	adc	r27, r1
    986c:	fd 01       	movw	r30, r26
    986e:	10 83       	st	Z, r17
    9870:	e1 e0       	ldi	r30, 0x01	; 1
    9872:	f0 e0       	ldi	r31, 0x00	; 0
    9874:	ec 0f       	add	r30, r28
    9876:	fd 1f       	adc	r31, r29
    9878:	e7 0f       	add	r30, r23
    987a:	f1 1d       	adc	r31, r1
    987c:	30 83       	st	Z, r19
    987e:	33 e0       	ldi	r19, 0x03	; 3
    9880:	39 0f       	add	r19, r25
    9882:	e1 e0       	ldi	r30, 0x01	; 1
    9884:	f0 e0       	ldi	r31, 0x00	; 0
    9886:	ec 0f       	add	r30, r28
    9888:	fd 1f       	adc	r31, r29
    988a:	e3 0f       	add	r30, r19
    988c:	f1 1d       	adc	r31, r1
    988e:	9c 5f       	subi	r25, 0xFC	; 252
    9890:	80 83       	st	Z, r24
    9892:	2f 5f       	subi	r18, 0xFF	; 255
    9894:	26 17       	cp	r18, r22
    9896:	20 f2       	brcs	.-120    	; 0x9820 <TMR_SR_cmdSetFrequencyHopTable+0x3e>
    9898:	49 2f       	mov	r20, r25
    989a:	be 01       	movw	r22, r28
    989c:	6f 5f       	subi	r22, 0xFF	; 255
    989e:	7f 4f       	sbci	r23, 0xFF	; 255
    98a0:	c7 01       	movw	r24, r14
    98a2:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    98a6:	04 c0       	rjmp	.+8      	; 0x98b0 <TMR_SR_cmdSetFrequencyHopTable+0xce>
    98a8:	66 e0       	ldi	r22, 0x06	; 6
    98aa:	70 e0       	ldi	r23, 0x00	; 0
    98ac:	80 e0       	ldi	r24, 0x00	; 0
    98ae:	93 e0       	ldi	r25, 0x03	; 3
    98b0:	d3 95       	inc	r29
    98b2:	0f b6       	in	r0, 0x3f	; 63
    98b4:	f8 94       	cli
    98b6:	de bf       	out	0x3e, r29	; 62
    98b8:	0f be       	out	0x3f, r0	; 63
    98ba:	cd bf       	out	0x3d, r28	; 61
    98bc:	df 91       	pop	r29
    98be:	cf 91       	pop	r28
    98c0:	1f 91       	pop	r17
    98c2:	ff 90       	pop	r15
    98c4:	ef 90       	pop	r14
    98c6:	08 95       	ret

000098c8 <TMR_SR_cmdSetFrequencyHopTableOption>:
    98c8:	cf 93       	push	r28
    98ca:	df 93       	push	r29
    98cc:	cd b7       	in	r28, 0x3d	; 61
    98ce:	de b7       	in	r29, 0x3e	; 62
    98d0:	da 95       	dec	r29
    98d2:	0f b6       	in	r0, 0x3f	; 63
    98d4:	f8 94       	cli
    98d6:	de bf       	out	0x3e, r29	; 62
    98d8:	0f be       	out	0x3f, r0	; 63
    98da:	cd bf       	out	0x3d, r28	; 61
    98dc:	e0 91 d6 0b 	lds	r30, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    98e0:	f0 91 d7 0b 	lds	r31, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    98e4:	35 e9       	ldi	r19, 0x95	; 149
    98e6:	3b 83       	std	Y+3, r19	; 0x03
    98e8:	2c 83       	std	Y+4, r18	; 0x04
    98ea:	9f 01       	movw	r18, r30
    98ec:	2a 5f       	subi	r18, 0xFA	; 250
    98ee:	3f 4f       	sbci	r19, 0xFF	; 255
    98f0:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    98f4:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    98f8:	7d 83       	std	Y+5, r23	; 0x05
    98fa:	6e 83       	std	Y+6, r22	; 0x06
    98fc:	5f 83       	std	Y+7, r21	; 0x07
    98fe:	48 87       	std	Y+8, r20	; 0x08
    9900:	48 e0       	ldi	r20, 0x08	; 8
    9902:	be 01       	movw	r22, r28
    9904:	6f 5f       	subi	r22, 0xFF	; 255
    9906:	7f 4f       	sbci	r23, 0xFF	; 255
    9908:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    990c:	d3 95       	inc	r29
    990e:	0f b6       	in	r0, 0x3f	; 63
    9910:	f8 94       	cli
    9912:	de bf       	out	0x3e, r29	; 62
    9914:	0f be       	out	0x3f, r0	; 63
    9916:	cd bf       	out	0x3d, r28	; 61
    9918:	df 91       	pop	r29
    991a:	cf 91       	pop	r28
    991c:	08 95       	ret

0000991e <TMR_SR_cmdSetRegion>:
    991e:	cf 93       	push	r28
    9920:	df 93       	push	r29
    9922:	cd b7       	in	r28, 0x3d	; 61
    9924:	de b7       	in	r29, 0x3e	; 62
    9926:	da 95       	dec	r29
    9928:	0f b6       	in	r0, 0x3f	; 63
    992a:	f8 94       	cli
    992c:	de bf       	out	0x3e, r29	; 62
    992e:	0f be       	out	0x3f, r0	; 63
    9930:	cd bf       	out	0x3d, r28	; 61
    9932:	20 91 d9 0b 	lds	r18, 0x0BD9	; 0x800bd9 <regionConfigurationFlag>
    9936:	22 23       	and	r18, r18
    9938:	59 f1       	breq	.+86     	; 0x9990 <TMR_SR_cmdSetRegion+0x72>
    993a:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    993e:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    9942:	47 e9       	ldi	r20, 0x97	; 151
    9944:	4b 83       	std	Y+3, r20	; 0x03
    9946:	41 e0       	ldi	r20, 0x01	; 1
    9948:	4c 83       	std	Y+4, r20	; 0x04
    994a:	4f ef       	ldi	r20, 0xFF	; 255
    994c:	4d 83       	std	Y+5, r20	; 0x05
    994e:	40 e4       	ldi	r20, 0x40	; 64
    9950:	4e 83       	std	Y+6, r20	; 0x06
    9952:	40 91 db 0b 	lds	r20, 0x0BDB	; 0x800bdb <LBTEnable>
    9956:	4f 83       	std	Y+7, r20	; 0x07
    9958:	41 e4       	ldi	r20, 0x41	; 65
    995a:	48 87       	std	Y+8, r20	; 0x08
    995c:	40 91 f1 0c 	lds	r20, 0x0CF1	; 0x800cf1 <LBTThreshold>
    9960:	49 87       	std	Y+9, r20	; 0x09
    9962:	42 e4       	ldi	r20, 0x42	; 66
    9964:	4a 87       	std	Y+10, r20	; 0x0a
    9966:	40 91 da 0b 	lds	r20, 0x0BDA	; 0x800bda <DwellTimeEnable>
    996a:	4b 87       	std	Y+11, r20	; 0x0b
    996c:	43 e4       	ldi	r20, 0x43	; 67
    996e:	4c 87       	std	Y+12, r20	; 0x0c
    9970:	40 91 ef 0c 	lds	r20, 0x0CEF	; 0x800cef <DwellTime>
    9974:	50 91 f0 0c 	lds	r21, 0x0CF0	; 0x800cf0 <DwellTime+0x1>
    9978:	24 5f       	subi	r18, 0xF4	; 244
    997a:	3f 4f       	sbci	r19, 0xFF	; 255
    997c:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    9980:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    9984:	5d 87       	std	Y+13, r21	; 0x0d
    9986:	4e 87       	std	Y+14, r20	; 0x0e
    9988:	2b e0       	ldi	r18, 0x0B	; 11
    998a:	2a 83       	std	Y+2, r18	; 0x02
    998c:	4e e0       	ldi	r20, 0x0E	; 14
    998e:	0e c0       	rjmp	.+28     	; 0x99ac <TMR_SR_cmdSetRegion+0x8e>
    9990:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    9994:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    9998:	47 e9       	ldi	r20, 0x97	; 151
    999a:	4b 83       	std	Y+3, r20	; 0x03
    999c:	2e 5f       	subi	r18, 0xFE	; 254
    999e:	3f 4f       	sbci	r19, 0xFF	; 255
    99a0:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    99a4:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    99a8:	6c 83       	std	Y+4, r22	; 0x04
    99aa:	44 e0       	ldi	r20, 0x04	; 4
    99ac:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <regionConfigurationFlag>
    99b0:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <DwellTimeEnable>
    99b4:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <LBTEnable>
    99b8:	be 01       	movw	r22, r28
    99ba:	6f 5f       	subi	r22, 0xFF	; 255
    99bc:	7f 4f       	sbci	r23, 0xFF	; 255
    99be:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    99c2:	d3 95       	inc	r29
    99c4:	0f b6       	in	r0, 0x3f	; 63
    99c6:	f8 94       	cli
    99c8:	de bf       	out	0x3e, r29	; 62
    99ca:	0f be       	out	0x3f, r0	; 63
    99cc:	cd bf       	out	0x3d, r28	; 61
    99ce:	df 91       	pop	r29
    99d0:	cf 91       	pop	r28
    99d2:	08 95       	ret

000099d4 <TMR_SR_cmdSetRegionDwellTimeLbtEnable>:
    99d4:	cf 93       	push	r28
    99d6:	df 93       	push	r29
    99d8:	cd b7       	in	r28, 0x3d	; 61
    99da:	de b7       	in	r29, 0x3e	; 62
    99dc:	da 95       	dec	r29
    99de:	0f b6       	in	r0, 0x3f	; 63
    99e0:	f8 94       	cli
    99e2:	de bf       	out	0x3e, r29	; 62
    99e4:	0f be       	out	0x3f, r0	; 63
    99e6:	cd bf       	out	0x3d, r28	; 61
    99e8:	e0 91 d6 0b 	lds	r30, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    99ec:	f0 91 d7 0b 	lds	r31, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    99f0:	37 e9       	ldi	r19, 0x97	; 151
    99f2:	3b 83       	std	Y+3, r19	; 0x03
    99f4:	31 e0       	ldi	r19, 0x01	; 1
    99f6:	3c 83       	std	Y+4, r19	; 0x04
    99f8:	6d 83       	std	Y+5, r22	; 0x05
    99fa:	2e 83       	std	Y+6, r18	; 0x06
    99fc:	9f 01       	movw	r18, r30
    99fe:	2b 5f       	subi	r18, 0xFB	; 251
    9a00:	3f 4f       	sbci	r19, 0xFF	; 255
    9a02:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    9a06:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    9a0a:	4f 83       	std	Y+7, r20	; 0x07
    9a0c:	47 e0       	ldi	r20, 0x07	; 7
    9a0e:	be 01       	movw	r22, r28
    9a10:	6f 5f       	subi	r22, 0xFF	; 255
    9a12:	7f 4f       	sbci	r23, 0xFF	; 255
    9a14:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    9a18:	d3 95       	inc	r29
    9a1a:	0f b6       	in	r0, 0x3f	; 63
    9a1c:	f8 94       	cli
    9a1e:	de bf       	out	0x3e, r29	; 62
    9a20:	0f be       	out	0x3f, r0	; 63
    9a22:	cd bf       	out	0x3d, r28	; 61
    9a24:	df 91       	pop	r29
    9a26:	cf 91       	pop	r28
    9a28:	08 95       	ret

00009a2a <TMR_SR_cmdSetRegionDwellTimeEnable>:
    9a2a:	22 e4       	ldi	r18, 0x42	; 66
    9a2c:	d3 cf       	rjmp	.-90     	; 0x99d4 <TMR_SR_cmdSetRegionDwellTimeLbtEnable>
    9a2e:	08 95       	ret

00009a30 <TMR_SR_cmdSetRegionDwellTime>:
    9a30:	cf 93       	push	r28
    9a32:	df 93       	push	r29
    9a34:	cd b7       	in	r28, 0x3d	; 61
    9a36:	de b7       	in	r29, 0x3e	; 62
    9a38:	da 95       	dec	r29
    9a3a:	0f b6       	in	r0, 0x3f	; 63
    9a3c:	f8 94       	cli
    9a3e:	de bf       	out	0x3e, r29	; 62
    9a40:	0f be       	out	0x3f, r0	; 63
    9a42:	cd bf       	out	0x3d, r28	; 61
    9a44:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    9a48:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    9a4c:	77 e9       	ldi	r23, 0x97	; 151
    9a4e:	7b 83       	std	Y+3, r23	; 0x03
    9a50:	71 e0       	ldi	r23, 0x01	; 1
    9a52:	7c 83       	std	Y+4, r23	; 0x04
    9a54:	6d 83       	std	Y+5, r22	; 0x05
    9a56:	63 e4       	ldi	r22, 0x43	; 67
    9a58:	6e 83       	std	Y+6, r22	; 0x06
    9a5a:	2a 5f       	subi	r18, 0xFA	; 250
    9a5c:	3f 4f       	sbci	r19, 0xFF	; 255
    9a5e:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    9a62:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    9a66:	5f 83       	std	Y+7, r21	; 0x07
    9a68:	48 87       	std	Y+8, r20	; 0x08
    9a6a:	48 e0       	ldi	r20, 0x08	; 8
    9a6c:	be 01       	movw	r22, r28
    9a6e:	6f 5f       	subi	r22, 0xFF	; 255
    9a70:	7f 4f       	sbci	r23, 0xFF	; 255
    9a72:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    9a76:	d3 95       	inc	r29
    9a78:	0f b6       	in	r0, 0x3f	; 63
    9a7a:	f8 94       	cli
    9a7c:	de bf       	out	0x3e, r29	; 62
    9a7e:	0f be       	out	0x3f, r0	; 63
    9a80:	cd bf       	out	0x3d, r28	; 61
    9a82:	df 91       	pop	r29
    9a84:	cf 91       	pop	r28
    9a86:	08 95       	ret

00009a88 <TMR_SR_cmdSetRegionLbtThreshold>:
    9a88:	cf 93       	push	r28
    9a8a:	df 93       	push	r29
    9a8c:	cd b7       	in	r28, 0x3d	; 61
    9a8e:	de b7       	in	r29, 0x3e	; 62
    9a90:	da 95       	dec	r29
    9a92:	0f b6       	in	r0, 0x3f	; 63
    9a94:	f8 94       	cli
    9a96:	de bf       	out	0x3e, r29	; 62
    9a98:	0f be       	out	0x3f, r0	; 63
    9a9a:	cd bf       	out	0x3d, r28	; 61
    9a9c:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    9aa0:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    9aa4:	57 e9       	ldi	r21, 0x97	; 151
    9aa6:	5b 83       	std	Y+3, r21	; 0x03
    9aa8:	51 e0       	ldi	r21, 0x01	; 1
    9aaa:	5c 83       	std	Y+4, r21	; 0x04
    9aac:	6d 83       	std	Y+5, r22	; 0x05
    9aae:	51 e4       	ldi	r21, 0x41	; 65
    9ab0:	5e 83       	std	Y+6, r21	; 0x06
    9ab2:	2b 5f       	subi	r18, 0xFB	; 251
    9ab4:	3f 4f       	sbci	r19, 0xFF	; 255
    9ab6:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    9aba:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    9abe:	4f 83       	std	Y+7, r20	; 0x07
    9ac0:	47 e0       	ldi	r20, 0x07	; 7
    9ac2:	be 01       	movw	r22, r28
    9ac4:	6f 5f       	subi	r22, 0xFF	; 255
    9ac6:	7f 4f       	sbci	r23, 0xFF	; 255
    9ac8:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    9acc:	d3 95       	inc	r29
    9ace:	0f b6       	in	r0, 0x3f	; 63
    9ad0:	f8 94       	cli
    9ad2:	de bf       	out	0x3e, r29	; 62
    9ad4:	0f be       	out	0x3f, r0	; 63
    9ad6:	cd bf       	out	0x3d, r28	; 61
    9ad8:	df 91       	pop	r29
    9ada:	cf 91       	pop	r28
    9adc:	08 95       	ret

00009ade <TMR_SR_cmdSetRegionLbt>:
    9ade:	20 e4       	ldi	r18, 0x40	; 64
    9ae0:	79 cf       	rjmp	.-270    	; 0x99d4 <TMR_SR_cmdSetRegionDwellTimeLbtEnable>
    9ae2:	08 95       	ret

00009ae4 <TMR_SR_cmdSetMode>:
    9ae4:	cf 93       	push	r28
    9ae6:	df 93       	push	r29
    9ae8:	cd b7       	in	r28, 0x3d	; 61
    9aea:	de b7       	in	r29, 0x3e	; 62
    9aec:	da 95       	dec	r29
    9aee:	0f b6       	in	r0, 0x3f	; 63
    9af0:	f8 94       	cli
    9af2:	de bf       	out	0x3e, r29	; 62
    9af4:	0f be       	out	0x3f, r0	; 63
    9af6:	cd bf       	out	0x3d, r28	; 61
    9af8:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    9afc:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    9b00:	4b 83       	std	Y+3, r20	; 0x03
    9b02:	2e 5f       	subi	r18, 0xFE	; 254
    9b04:	3f 4f       	sbci	r19, 0xFF	; 255
    9b06:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    9b0a:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    9b0e:	6c 83       	std	Y+4, r22	; 0x04
    9b10:	44 e0       	ldi	r20, 0x04	; 4
    9b12:	be 01       	movw	r22, r28
    9b14:	6f 5f       	subi	r22, 0xFF	; 255
    9b16:	7f 4f       	sbci	r23, 0xFF	; 255
    9b18:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    9b1c:	d3 95       	inc	r29
    9b1e:	0f b6       	in	r0, 0x3f	; 63
    9b20:	f8 94       	cli
    9b22:	de bf       	out	0x3e, r29	; 62
    9b24:	0f be       	out	0x3f, r0	; 63
    9b26:	cd bf       	out	0x3d, r28	; 61
    9b28:	df 91       	pop	r29
    9b2a:	cf 91       	pop	r28
    9b2c:	08 95       	ret

00009b2e <TMR_SR_cmdSetPowerMode>:
    9b2e:	48 e9       	ldi	r20, 0x98	; 152
    9b30:	d9 cf       	rjmp	.-78     	; 0x9ae4 <TMR_SR_cmdSetMode>
    9b32:	08 95       	ret

00009b34 <TMR_SR_cmdSetUserMode>:
    9b34:	49 e9       	ldi	r20, 0x99	; 153
    9b36:	d6 cf       	rjmp	.-84     	; 0x9ae4 <TMR_SR_cmdSetMode>
    9b38:	08 95       	ret

00009b3a <TMR_SR_cmdSetReaderConfiguration>:
    9b3a:	0f 93       	push	r16
    9b3c:	1f 93       	push	r17
    9b3e:	cf 93       	push	r28
    9b40:	df 93       	push	r29
    9b42:	cd b7       	in	r28, 0x3d	; 61
    9b44:	de b7       	in	r29, 0x3e	; 62
    9b46:	da 95       	dec	r29
    9b48:	0f b6       	in	r0, 0x3f	; 63
    9b4a:	f8 94       	cli
    9b4c:	de bf       	out	0x3e, r29	; 62
    9b4e:	0f be       	out	0x3f, r0	; 63
    9b50:	cd bf       	out	0x3d, r28	; 61
    9b52:	e6 2f       	mov	r30, r22
    9b54:	60 91 d6 0b 	lds	r22, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    9b58:	70 91 d7 0b 	lds	r23, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    9b5c:	2a e9       	ldi	r18, 0x9A	; 154
    9b5e:	2b 83       	std	Y+3, r18	; 0x03
    9b60:	21 e0       	ldi	r18, 0x01	; 1
    9b62:	2c 83       	std	Y+4, r18	; 0x04
    9b64:	6d 5f       	subi	r22, 0xFD	; 253
    9b66:	7f 4f       	sbci	r23, 0xFF	; 255
    9b68:	70 93 d7 0b 	sts	0x0BD7, r23	; 0x800bd7 <totalMsgIdx+0x1>
    9b6c:	60 93 d6 0b 	sts	0x0BD6, r22	; 0x800bd6 <totalMsgIdx>
    9b70:	ed 83       	std	Y+5, r30	; 0x05
    9b72:	0e 2f       	mov	r16, r30
    9b74:	10 e0       	ldi	r17, 0x00	; 0
    9b76:	02 32       	cpi	r16, 0x22	; 34
    9b78:	11 05       	cpc	r17, r1
    9b7a:	08 f0       	brcs	.+2      	; 0x9b7e <TMR_SR_cmdSetReaderConfiguration+0x44>
    9b7c:	43 c0       	rjmp	.+134    	; 0x9c04 <TMR_SR_cmdSetReaderConfiguration+0xca>
    9b7e:	f8 01       	movw	r30, r16
    9b80:	ed 5e       	subi	r30, 0xED	; 237
    9b82:	fd 4f       	sbci	r31, 0xFD	; 253
    9b84:	0c 94 d0 74 	jmp	0xe9a0	; 0xe9a0 <__tablejump2__>
    9b88:	6f 5f       	subi	r22, 0xFF	; 255
    9b8a:	7f 4f       	sbci	r23, 0xFF	; 255
    9b8c:	70 93 d7 0b 	sts	0x0BD7, r23	; 0x800bd7 <totalMsgIdx+0x1>
    9b90:	60 93 d6 0b 	sts	0x0BD6, r22	; 0x800bd6 <totalMsgIdx>
    9b94:	da 01       	movw	r26, r20
    9b96:	2c 91       	ld	r18, X
    9b98:	2e 83       	std	Y+6, r18	; 0x06
    9b9a:	46 e0       	ldi	r20, 0x06	; 6
    9b9c:	2d c0       	rjmp	.+90     	; 0x9bf8 <TMR_SR_cmdSetReaderConfiguration+0xbe>
    9b9e:	6f 5f       	subi	r22, 0xFF	; 255
    9ba0:	7f 4f       	sbci	r23, 0xFF	; 255
    9ba2:	70 93 d7 0b 	sts	0x0BD7, r23	; 0x800bd7 <totalMsgIdx+0x1>
    9ba6:	60 93 d6 0b 	sts	0x0BD6, r22	; 0x800bd6 <totalMsgIdx>
    9baa:	fa 01       	movw	r30, r20
    9bac:	20 81       	ld	r18, Z
    9bae:	22 23       	and	r18, r18
    9bb0:	11 f0       	breq	.+4      	; 0x9bb6 <TMR_SR_cmdSetReaderConfiguration+0x7c>
    9bb2:	20 e0       	ldi	r18, 0x00	; 0
    9bb4:	01 c0       	rjmp	.+2      	; 0x9bb8 <TMR_SR_cmdSetReaderConfiguration+0x7e>
    9bb6:	21 e0       	ldi	r18, 0x01	; 1
    9bb8:	2e 83       	std	Y+6, r18	; 0x06
    9bba:	46 e0       	ldi	r20, 0x06	; 6
    9bbc:	1d c0       	rjmp	.+58     	; 0x9bf8 <TMR_SR_cmdSetReaderConfiguration+0xbe>
    9bbe:	6f 5f       	subi	r22, 0xFF	; 255
    9bc0:	7f 4f       	sbci	r23, 0xFF	; 255
    9bc2:	70 93 d7 0b 	sts	0x0BD7, r23	; 0x800bd7 <totalMsgIdx+0x1>
    9bc6:	60 93 d6 0b 	sts	0x0BD6, r22	; 0x800bd6 <totalMsgIdx>
    9bca:	da 01       	movw	r26, r20
    9bcc:	2c 91       	ld	r18, X
    9bce:	2e 83       	std	Y+6, r18	; 0x06
    9bd0:	46 e0       	ldi	r20, 0x06	; 6
    9bd2:	12 c0       	rjmp	.+36     	; 0x9bf8 <TMR_SR_cmdSetReaderConfiguration+0xbe>
    9bd4:	fa 01       	movw	r30, r20
    9bd6:	20 81       	ld	r18, Z
    9bd8:	31 81       	ldd	r19, Z+1	; 0x01
    9bda:	e2 81       	ldd	r30, Z+2	; 0x02
    9bdc:	da 01       	movw	r26, r20
    9bde:	13 96       	adiw	r26, 0x03	; 3
    9be0:	4c 91       	ld	r20, X
    9be2:	6c 5f       	subi	r22, 0xFC	; 252
    9be4:	7f 4f       	sbci	r23, 0xFF	; 255
    9be6:	70 93 d7 0b 	sts	0x0BD7, r23	; 0x800bd7 <totalMsgIdx+0x1>
    9bea:	60 93 d6 0b 	sts	0x0BD6, r22	; 0x800bd6 <totalMsgIdx>
    9bee:	4e 83       	std	Y+6, r20	; 0x06
    9bf0:	ef 83       	std	Y+7, r30	; 0x07
    9bf2:	38 87       	std	Y+8, r19	; 0x08
    9bf4:	29 87       	std	Y+9, r18	; 0x09
    9bf6:	49 e0       	ldi	r20, 0x09	; 9
    9bf8:	be 01       	movw	r22, r28
    9bfa:	6f 5f       	subi	r22, 0xFF	; 255
    9bfc:	7f 4f       	sbci	r23, 0xFF	; 255
    9bfe:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    9c02:	04 c0       	rjmp	.+8      	; 0x9c0c <TMR_SR_cmdSetReaderConfiguration+0xd2>
    9c04:	69 e0       	ldi	r22, 0x09	; 9
    9c06:	70 e0       	ldi	r23, 0x00	; 0
    9c08:	80 e0       	ldi	r24, 0x00	; 0
    9c0a:	93 e0       	ldi	r25, 0x03	; 3
    9c0c:	d3 95       	inc	r29
    9c0e:	0f b6       	in	r0, 0x3f	; 63
    9c10:	f8 94       	cli
    9c12:	de bf       	out	0x3e, r29	; 62
    9c14:	0f be       	out	0x3f, r0	; 63
    9c16:	cd bf       	out	0x3d, r28	; 61
    9c18:	df 91       	pop	r29
    9c1a:	cf 91       	pop	r28
    9c1c:	1f 91       	pop	r17
    9c1e:	0f 91       	pop	r16
    9c20:	08 95       	ret

00009c22 <TMR_SR_cmdSetProtocolLicenseKey>:
    9c22:	cf 92       	push	r12
    9c24:	df 92       	push	r13
    9c26:	ef 92       	push	r14
    9c28:	ff 92       	push	r15
    9c2a:	0f 93       	push	r16
    9c2c:	1f 93       	push	r17
    9c2e:	cf 93       	push	r28
    9c30:	df 93       	push	r29
    9c32:	cd b7       	in	r28, 0x3d	; 61
    9c34:	de b7       	in	r29, 0x3e	; 62
    9c36:	da 95       	dec	r29
    9c38:	0f b6       	in	r0, 0x3f	; 63
    9c3a:	f8 94       	cli
    9c3c:	de bf       	out	0x3e, r29	; 62
    9c3e:	0f be       	out	0x3f, r0	; 63
    9c40:	cd bf       	out	0x3d, r28	; 61
    9c42:	8c 01       	movw	r16, r24
    9c44:	f6 2e       	mov	r15, r22
    9c46:	ba 01       	movw	r22, r20
    9c48:	e2 2e       	mov	r14, r18
    9c4a:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    9c4e:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    9c52:	2e e9       	ldi	r18, 0x9E	; 158
    9c54:	2b 83       	std	Y+3, r18	; 0x03
    9c56:	02 96       	adiw	r24, 0x02	; 2
    9c58:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    9c5c:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    9c60:	fc 82       	std	Y+4, r15	; 0x04
    9c62:	81 e0       	ldi	r24, 0x01	; 1
    9c64:	f8 12       	cpse	r15, r24
    9c66:	09 c0       	rjmp	.+18     	; 0x9c7a <TMR_SR_cmdSetProtocolLicenseKey+0x58>
    9c68:	4e 2d       	mov	r20, r14
    9c6a:	53 2f       	mov	r21, r19
    9c6c:	ce 01       	movw	r24, r28
    9c6e:	05 96       	adiw	r24, 0x05	; 5
    9c70:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    9c74:	44 e0       	ldi	r20, 0x04	; 4
    9c76:	4e 0d       	add	r20, r14
    9c78:	01 c0       	rjmp	.+2      	; 0x9c7c <TMR_SR_cmdSetProtocolLicenseKey+0x5a>
    9c7a:	44 e0       	ldi	r20, 0x04	; 4
    9c7c:	be 01       	movw	r22, r28
    9c7e:	6f 5f       	subi	r22, 0xFF	; 255
    9c80:	7f 4f       	sbci	r23, 0xFF	; 255
    9c82:	c8 01       	movw	r24, r16
    9c84:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    9c88:	61 15       	cp	r22, r1
    9c8a:	71 05       	cpc	r23, r1
    9c8c:	81 05       	cpc	r24, r1
    9c8e:	91 05       	cpc	r25, r1
    9c90:	09 f0       	breq	.+2      	; 0x9c94 <TMR_SR_cmdSetProtocolLicenseKey+0x72>
    9c92:	40 c0       	rjmp	.+128    	; 0x9d14 <TMR_SR_cmdSetProtocolLicenseKey+0xf2>
    9c94:	81 e0       	ldi	r24, 0x01	; 1
    9c96:	f8 12       	cpse	r15, r24
    9c98:	41 c0       	rjmp	.+130    	; 0x9d1c <TMR_SR_cmdSetProtocolLicenseKey+0xfa>
    9c9a:	f8 01       	movw	r30, r16
    9c9c:	e3 58       	subi	r30, 0x83	; 131
    9c9e:	fc 4f       	sbci	r31, 0xFC	; 252
    9ca0:	10 82       	st	Z, r1
    9ca2:	11 82       	std	Z+1, r1	; 0x01
    9ca4:	12 82       	std	Z+2, r1	; 0x02
    9ca6:	13 82       	std	Z+3, r1	; 0x03
    9ca8:	40 e0       	ldi	r20, 0x00	; 0
    9caa:	26 c0       	rjmp	.+76     	; 0x9cf8 <TMR_SR_cmdSetProtocolLicenseKey+0xd6>
    9cac:	07 96       	adiw	r24, 0x07	; 7
    9cae:	e1 e0       	ldi	r30, 0x01	; 1
    9cb0:	f0 e0       	ldi	r31, 0x00	; 0
    9cb2:	ec 0f       	add	r30, r28
    9cb4:	fd 1f       	adc	r31, r29
    9cb6:	e8 0f       	add	r30, r24
    9cb8:	f9 1f       	adc	r31, r25
    9cba:	20 81       	ld	r18, Z
    9cbc:	30 e0       	ldi	r19, 0x00	; 0
    9cbe:	21 50       	subi	r18, 0x01	; 1
    9cc0:	31 09       	sbc	r19, r1
    9cc2:	81 e0       	ldi	r24, 0x01	; 1
    9cc4:	90 e0       	ldi	r25, 0x00	; 0
    9cc6:	02 c0       	rjmp	.+4      	; 0x9ccc <TMR_SR_cmdSetProtocolLicenseKey+0xaa>
    9cc8:	88 0f       	add	r24, r24
    9cca:	99 1f       	adc	r25, r25
    9ccc:	2a 95       	dec	r18
    9cce:	e2 f7       	brpl	.-8      	; 0x9cc8 <TMR_SR_cmdSetProtocolLicenseKey+0xa6>
    9cd0:	f8 01       	movw	r30, r16
    9cd2:	e3 58       	subi	r30, 0x83	; 131
    9cd4:	fc 4f       	sbci	r31, 0xFC	; 252
    9cd6:	09 2e       	mov	r0, r25
    9cd8:	00 0c       	add	r0, r0
    9cda:	aa 0b       	sbc	r26, r26
    9cdc:	bb 0b       	sbc	r27, r27
    9cde:	c0 80       	ld	r12, Z
    9ce0:	d1 80       	ldd	r13, Z+1	; 0x01
    9ce2:	e2 80       	ldd	r14, Z+2	; 0x02
    9ce4:	f3 80       	ldd	r15, Z+3	; 0x03
    9ce6:	8c 29       	or	r24, r12
    9ce8:	9d 29       	or	r25, r13
    9cea:	ae 29       	or	r26, r14
    9cec:	bf 29       	or	r27, r15
    9cee:	80 83       	st	Z, r24
    9cf0:	91 83       	std	Z+1, r25	; 0x01
    9cf2:	a2 83       	std	Z+2, r26	; 0x02
    9cf4:	b3 83       	std	Z+3, r27	; 0x03
    9cf6:	4e 5f       	subi	r20, 0xFE	; 254
    9cf8:	84 2f       	mov	r24, r20
    9cfa:	90 e0       	ldi	r25, 0x00	; 0
    9cfc:	2a 81       	ldd	r18, Y+2	; 0x02
    9cfe:	30 e0       	ldi	r19, 0x00	; 0
    9d00:	22 50       	subi	r18, 0x02	; 2
    9d02:	31 09       	sbc	r19, r1
    9d04:	82 17       	cp	r24, r18
    9d06:	93 07       	cpc	r25, r19
    9d08:	8c f2       	brlt	.-94     	; 0x9cac <TMR_SR_cmdSetProtocolLicenseKey+0x8a>
    9d0a:	40 e0       	ldi	r20, 0x00	; 0
    9d0c:	30 e0       	ldi	r19, 0x00	; 0
    9d0e:	20 e0       	ldi	r18, 0x00	; 0
    9d10:	90 e0       	ldi	r25, 0x00	; 0
    9d12:	08 c0       	rjmp	.+16     	; 0x9d24 <TMR_SR_cmdSetProtocolLicenseKey+0x102>
    9d14:	46 2f       	mov	r20, r22
    9d16:	37 2f       	mov	r19, r23
    9d18:	28 2f       	mov	r18, r24
    9d1a:	04 c0       	rjmp	.+8      	; 0x9d24 <TMR_SR_cmdSetProtocolLicenseKey+0x102>
    9d1c:	40 e0       	ldi	r20, 0x00	; 0
    9d1e:	30 e0       	ldi	r19, 0x00	; 0
    9d20:	20 e0       	ldi	r18, 0x00	; 0
    9d22:	90 e0       	ldi	r25, 0x00	; 0
    9d24:	64 2f       	mov	r22, r20
    9d26:	73 2f       	mov	r23, r19
    9d28:	82 2f       	mov	r24, r18
    9d2a:	d3 95       	inc	r29
    9d2c:	0f b6       	in	r0, 0x3f	; 63
    9d2e:	f8 94       	cli
    9d30:	de bf       	out	0x3e, r29	; 62
    9d32:	0f be       	out	0x3f, r0	; 63
    9d34:	cd bf       	out	0x3d, r28	; 61
    9d36:	df 91       	pop	r29
    9d38:	cf 91       	pop	r28
    9d3a:	1f 91       	pop	r17
    9d3c:	0f 91       	pop	r16
    9d3e:	ff 90       	pop	r15
    9d40:	ef 90       	pop	r14
    9d42:	df 90       	pop	r13
    9d44:	cf 90       	pop	r12
    9d46:	08 95       	ret

00009d48 <TMR_SR_cmdSetProtocolConfiguration>:
    9d48:	8f 92       	push	r8
    9d4a:	9f 92       	push	r9
    9d4c:	af 92       	push	r10
    9d4e:	bf 92       	push	r11
    9d50:	cf 92       	push	r12
    9d52:	df 92       	push	r13
    9d54:	ef 92       	push	r14
    9d56:	ff 92       	push	r15
    9d58:	0f 93       	push	r16
    9d5a:	1f 93       	push	r17
    9d5c:	cf 93       	push	r28
    9d5e:	df 93       	push	r29
    9d60:	cd b7       	in	r28, 0x3d	; 61
    9d62:	de b7       	in	r29, 0x3e	; 62
    9d64:	c1 50       	subi	r28, 0x01	; 1
    9d66:	d1 40       	sbci	r29, 0x01	; 1
    9d68:	0f b6       	in	r0, 0x3f	; 63
    9d6a:	f8 94       	cli
    9d6c:	de bf       	out	0x3e, r29	; 62
    9d6e:	0f be       	out	0x3f, r0	; 63
    9d70:	cd bf       	out	0x3d, r28	; 61
    9d72:	6c 01       	movw	r12, r24
    9d74:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    9d78:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    9d7c:	7b e9       	ldi	r23, 0x9B	; 155
    9d7e:	7b 83       	std	Y+3, r23	; 0x03
    9d80:	02 96       	adiw	r24, 0x02	; 2
    9d82:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    9d86:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    9d8a:	6c 83       	std	Y+4, r22	; 0x04
    9d8c:	45 30       	cpi	r20, 0x05	; 5
    9d8e:	09 f0       	breq	.+2      	; 0x9d92 <TMR_SR_cmdSetProtocolConfiguration+0x4a>
    9d90:	e3 c0       	rjmp	.+454    	; 0x9f58 <TMR_SR_cmdSetProtocolConfiguration+0x210>
    9d92:	01 96       	adiw	r24, 0x01	; 1
    9d94:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    9d98:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    9d9c:	5d 83       	std	Y+5, r21	; 0x05
    9d9e:	45 2f       	mov	r20, r21
    9da0:	50 e0       	ldi	r21, 0x00	; 0
    9da2:	48 31       	cpi	r20, 0x18	; 24
    9da4:	51 05       	cpc	r21, r1
    9da6:	08 f0       	brcs	.+2      	; 0x9daa <TMR_SR_cmdSetProtocolConfiguration+0x62>
    9da8:	d5 c1       	rjmp	.+938    	; 0xa154 <TMR_SR_cmdSetProtocolConfiguration+0x40c>
    9daa:	fa 01       	movw	r30, r20
    9dac:	eb 5c       	subi	r30, 0xCB	; 203
    9dae:	fd 4f       	sbci	r31, 0xFD	; 253
    9db0:	0c 94 d0 74 	jmp	0xe9a0	; 0xe9a0 <__tablejump2__>
    9db4:	01 96       	adiw	r24, 0x01	; 1
    9db6:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    9dba:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    9dbe:	86 e0       	ldi	r24, 0x06	; 6
    9dc0:	cf 5f       	subi	r28, 0xFF	; 255
    9dc2:	de 4f       	sbci	r29, 0xFE	; 254
    9dc4:	88 83       	st	Y, r24
    9dc6:	c1 50       	subi	r28, 0x01	; 1
    9dc8:	d1 40       	sbci	r29, 0x01	; 1
    9dca:	f9 01       	movw	r30, r18
    9dcc:	80 81       	ld	r24, Z
    9dce:	8e 83       	std	Y+6, r24	; 0x06
    9dd0:	b5 c1       	rjmp	.+874    	; 0xa13c <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9dd2:	f9 01       	movw	r30, r18
    9dd4:	20 81       	ld	r18, Z
    9dd6:	31 81       	ldd	r19, Z+1	; 0x01
    9dd8:	20 34       	cpi	r18, 0x40	; 64
    9dda:	f1 e0       	ldi	r31, 0x01	; 1
    9ddc:	3f 07       	cpc	r19, r31
    9dde:	61 f0       	breq	.+24     	; 0x9df8 <TMR_SR_cmdSetProtocolConfiguration+0xb0>
    9de0:	20 38       	cpi	r18, 0x80	; 128
    9de2:	42 e0       	ldi	r20, 0x02	; 2
    9de4:	34 07       	cpc	r19, r20
    9de6:	31 f0       	breq	.+12     	; 0x9df4 <TMR_SR_cmdSetProtocolConfiguration+0xac>
    9de8:	2a 3f       	cpi	r18, 0xFA	; 250
    9dea:	31 05       	cpc	r19, r1
    9dec:	09 f0       	breq	.+2      	; 0x9df0 <TMR_SR_cmdSetProtocolConfiguration+0xa8>
    9dee:	b7 c1       	rjmp	.+878    	; 0xa15e <TMR_SR_cmdSetProtocolConfiguration+0x416>
    9df0:	20 e0       	ldi	r18, 0x00	; 0
    9df2:	03 c0       	rjmp	.+6      	; 0x9dfa <TMR_SR_cmdSetProtocolConfiguration+0xb2>
    9df4:	24 e0       	ldi	r18, 0x04	; 4
    9df6:	01 c0       	rjmp	.+2      	; 0x9dfa <TMR_SR_cmdSetProtocolConfiguration+0xb2>
    9df8:	22 e0       	ldi	r18, 0x02	; 2
    9dfa:	01 96       	adiw	r24, 0x01	; 1
    9dfc:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    9e00:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    9e04:	86 e0       	ldi	r24, 0x06	; 6
    9e06:	cf 5f       	subi	r28, 0xFF	; 255
    9e08:	de 4f       	sbci	r29, 0xFE	; 254
    9e0a:	88 83       	st	Y, r24
    9e0c:	c1 50       	subi	r28, 0x01	; 1
    9e0e:	d1 40       	sbci	r29, 0x01	; 1
    9e10:	2e 83       	std	Y+6, r18	; 0x06
    9e12:	94 c1       	rjmp	.+808    	; 0xa13c <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9e14:	f9 01       	movw	r30, r18
    9e16:	20 81       	ld	r18, Z
    9e18:	21 30       	cpi	r18, 0x01	; 1
    9e1a:	79 f0       	breq	.+30     	; 0x9e3a <TMR_SR_cmdSetProtocolConfiguration+0xf2>
    9e1c:	28 f0       	brcs	.+10     	; 0x9e28 <TMR_SR_cmdSetProtocolConfiguration+0xe0>
    9e1e:	22 30       	cpi	r18, 0x02	; 2
    9e20:	31 f0       	breq	.+12     	; 0x9e2e <TMR_SR_cmdSetProtocolConfiguration+0xe6>
    9e22:	23 30       	cpi	r18, 0x03	; 3
    9e24:	39 f0       	breq	.+14     	; 0x9e34 <TMR_SR_cmdSetProtocolConfiguration+0xec>
    9e26:	a0 c1       	rjmp	.+832    	; 0xa168 <TMR_SR_cmdSetProtocolConfiguration+0x420>
    9e28:	20 e0       	ldi	r18, 0x00	; 0
    9e2a:	31 e0       	ldi	r19, 0x01	; 1
    9e2c:	08 c0       	rjmp	.+16     	; 0x9e3e <TMR_SR_cmdSetProtocolConfiguration+0xf6>
    9e2e:	20 e0       	ldi	r18, 0x00	; 0
    9e30:	30 e0       	ldi	r19, 0x00	; 0
    9e32:	05 c0       	rjmp	.+10     	; 0x9e3e <TMR_SR_cmdSetProtocolConfiguration+0xf6>
    9e34:	21 e0       	ldi	r18, 0x01	; 1
    9e36:	30 e0       	ldi	r19, 0x00	; 0
    9e38:	02 c0       	rjmp	.+4      	; 0x9e3e <TMR_SR_cmdSetProtocolConfiguration+0xf6>
    9e3a:	21 e0       	ldi	r18, 0x01	; 1
    9e3c:	31 e0       	ldi	r19, 0x01	; 1
    9e3e:	02 96       	adiw	r24, 0x02	; 2
    9e40:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    9e44:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    9e48:	3e 83       	std	Y+6, r19	; 0x06
    9e4a:	87 e0       	ldi	r24, 0x07	; 7
    9e4c:	cf 5f       	subi	r28, 0xFF	; 255
    9e4e:	de 4f       	sbci	r29, 0xFE	; 254
    9e50:	88 83       	st	Y, r24
    9e52:	c1 50       	subi	r28, 0x01	; 1
    9e54:	d1 40       	sbci	r29, 0x01	; 1
    9e56:	2f 83       	std	Y+7, r18	; 0x07
    9e58:	71 c1       	rjmp	.+738    	; 0xa13c <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9e5a:	ac 01       	movw	r20, r24
    9e5c:	4f 5f       	subi	r20, 0xFF	; 255
    9e5e:	5f 4f       	sbci	r21, 0xFF	; 255
    9e60:	50 93 d7 0b 	sts	0x0BD7, r21	; 0x800bd7 <totalMsgIdx+0x1>
    9e64:	40 93 d6 0b 	sts	0x0BD6, r20	; 0x800bd6 <totalMsgIdx>
    9e68:	86 e0       	ldi	r24, 0x06	; 6
    9e6a:	cf 5f       	subi	r28, 0xFF	; 255
    9e6c:	de 4f       	sbci	r29, 0xFE	; 254
    9e6e:	88 83       	st	Y, r24
    9e70:	c1 50       	subi	r28, 0x01	; 1
    9e72:	d1 40       	sbci	r29, 0x01	; 1
    9e74:	f9 01       	movw	r30, r18
    9e76:	90 81       	ld	r25, Z
    9e78:	9e 83       	std	Y+6, r25	; 0x06
    9e7a:	91 30       	cpi	r25, 0x01	; 1
    9e7c:	09 f0       	breq	.+2      	; 0x9e80 <TMR_SR_cmdSetProtocolConfiguration+0x138>
    9e7e:	5e c1       	rjmp	.+700    	; 0xa13c <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9e80:	ca 01       	movw	r24, r20
    9e82:	01 96       	adiw	r24, 0x01	; 1
    9e84:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    9e88:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    9e8c:	87 e0       	ldi	r24, 0x07	; 7
    9e8e:	cf 5f       	subi	r28, 0xFF	; 255
    9e90:	de 4f       	sbci	r29, 0xFE	; 254
    9e92:	88 83       	st	Y, r24
    9e94:	c1 50       	subi	r28, 0x01	; 1
    9e96:	d1 40       	sbci	r29, 0x01	; 1
    9e98:	81 81       	ldd	r24, Z+1	; 0x01
    9e9a:	8f 83       	std	Y+7, r24	; 0x07
    9e9c:	4f c1       	rjmp	.+670    	; 0xa13c <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9e9e:	41 e0       	ldi	r20, 0x01	; 1
    9ea0:	4e 83       	std	Y+6, r20	; 0x06
    9ea2:	ac 01       	movw	r20, r24
    9ea4:	4d 5f       	subi	r20, 0xFD	; 253
    9ea6:	5f 4f       	sbci	r21, 0xFF	; 255
    9ea8:	50 93 d7 0b 	sts	0x0BD7, r21	; 0x800bd7 <totalMsgIdx+0x1>
    9eac:	40 93 d6 0b 	sts	0x0BD6, r20	; 0x800bd6 <totalMsgIdx>
    9eb0:	1f 82       	std	Y+7, r1	; 0x07
    9eb2:	43 e0       	ldi	r20, 0x03	; 3
    9eb4:	48 87       	std	Y+8, r20	; 0x08
    9eb6:	f9 01       	movw	r30, r18
    9eb8:	70 81       	ld	r23, Z
    9eba:	41 81       	ldd	r20, Z+1	; 0x01
    9ebc:	52 81       	ldd	r21, Z+2	; 0x02
    9ebe:	63 81       	ldd	r22, Z+3	; 0x03
    9ec0:	69 87       	std	Y+9, r22	; 0x09
    9ec2:	5a 87       	std	Y+10, r21	; 0x0a
    9ec4:	4b 87       	std	Y+11, r20	; 0x0b
    9ec6:	7c 87       	std	Y+12, r23	; 0x0c
    9ec8:	74 81       	ldd	r23, Z+4	; 0x04
    9eca:	45 81       	ldd	r20, Z+5	; 0x05
    9ecc:	56 81       	ldd	r21, Z+6	; 0x06
    9ece:	67 81       	ldd	r22, Z+7	; 0x07
    9ed0:	0b 96       	adiw	r24, 0x0b	; 11
    9ed2:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    9ed6:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    9eda:	6d 87       	std	Y+13, r22	; 0x0d
    9edc:	5e 87       	std	Y+14, r21	; 0x0e
    9ede:	4f 87       	std	Y+15, r20	; 0x0f
    9ee0:	80 e1       	ldi	r24, 0x10	; 16
    9ee2:	cf 5f       	subi	r28, 0xFF	; 255
    9ee4:	de 4f       	sbci	r29, 0xFE	; 254
    9ee6:	88 83       	st	Y, r24
    9ee8:	c1 50       	subi	r28, 0x01	; 1
    9eea:	d1 40       	sbci	r29, 0x01	; 1
    9eec:	78 8b       	std	Y+16, r23	; 0x10
    9eee:	26 c1       	rjmp	.+588    	; 0xa13c <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9ef0:	f9 01       	movw	r30, r18
    9ef2:	40 81       	ld	r20, Z
    9ef4:	51 81       	ldd	r21, Z+1	; 0x01
    9ef6:	62 81       	ldd	r22, Z+2	; 0x02
    9ef8:	23 81       	ldd	r18, Z+3	; 0x03
    9efa:	04 96       	adiw	r24, 0x04	; 4
    9efc:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    9f00:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    9f04:	2e 83       	std	Y+6, r18	; 0x06
    9f06:	6f 83       	std	Y+7, r22	; 0x07
    9f08:	58 87       	std	Y+8, r21	; 0x08
    9f0a:	89 e0       	ldi	r24, 0x09	; 9
    9f0c:	cf 5f       	subi	r28, 0xFF	; 255
    9f0e:	de 4f       	sbci	r29, 0xFE	; 254
    9f10:	88 83       	st	Y, r24
    9f12:	c1 50       	subi	r28, 0x01	; 1
    9f14:	d1 40       	sbci	r29, 0x01	; 1
    9f16:	49 87       	std	Y+9, r20	; 0x09
    9f18:	11 c1       	rjmp	.+546    	; 0xa13c <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9f1a:	01 96       	adiw	r24, 0x01	; 1
    9f1c:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    9f20:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    9f24:	46 e0       	ldi	r20, 0x06	; 6
    9f26:	cf 5f       	subi	r28, 0xFF	; 255
    9f28:	de 4f       	sbci	r29, 0xFE	; 254
    9f2a:	48 83       	st	Y, r20
    9f2c:	c1 50       	subi	r28, 0x01	; 1
    9f2e:	d1 40       	sbci	r29, 0x01	; 1
    9f30:	f9 01       	movw	r30, r18
    9f32:	40 81       	ld	r20, Z
    9f34:	4e 83       	std	Y+6, r20	; 0x06
    9f36:	44 23       	and	r20, r20
    9f38:	09 f4       	brne	.+2      	; 0x9f3c <TMR_SR_cmdSetProtocolConfiguration+0x1f4>
    9f3a:	00 c1       	rjmp	.+512    	; 0xa13c <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9f3c:	01 96       	adiw	r24, 0x01	; 1
    9f3e:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    9f42:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    9f46:	87 e0       	ldi	r24, 0x07	; 7
    9f48:	cf 5f       	subi	r28, 0xFF	; 255
    9f4a:	de 4f       	sbci	r29, 0xFE	; 254
    9f4c:	88 83       	st	Y, r24
    9f4e:	c1 50       	subi	r28, 0x01	; 1
    9f50:	d1 40       	sbci	r29, 0x01	; 1
    9f52:	81 81       	ldd	r24, Z+1	; 0x01
    9f54:	8f 83       	std	Y+7, r24	; 0x07
    9f56:	f2 c0       	rjmp	.+484    	; 0xa13c <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9f58:	49 30       	cpi	r20, 0x09	; 9
    9f5a:	41 f5       	brne	.+80     	; 0x9fac <TMR_SR_cmdSetProtocolConfiguration+0x264>
    9f5c:	52 30       	cpi	r21, 0x02	; 2
    9f5e:	09 f0       	breq	.+2      	; 0x9f62 <TMR_SR_cmdSetProtocolConfiguration+0x21a>
    9f60:	08 c1       	rjmp	.+528    	; 0xa172 <TMR_SR_cmdSetProtocolConfiguration+0x42a>
    9f62:	01 96       	adiw	r24, 0x01	; 1
    9f64:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    9f68:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    9f6c:	85 e0       	ldi	r24, 0x05	; 5
    9f6e:	cf 5f       	subi	r28, 0xFF	; 255
    9f70:	de 4f       	sbci	r29, 0xFE	; 254
    9f72:	88 83       	st	Y, r24
    9f74:	c1 50       	subi	r28, 0x01	; 1
    9f76:	d1 40       	sbci	r29, 0x01	; 1
    9f78:	5d 83       	std	Y+5, r21	; 0x05
    9f7a:	f9 01       	movw	r30, r18
    9f7c:	e0 80       	ld	r14, Z
    9f7e:	f1 2c       	mov	r15, r1
    9f80:	00 e0       	ldi	r16, 0x00	; 0
    9f82:	10 e0       	ldi	r17, 0x00	; 0
    9f84:	20 e0       	ldi	r18, 0x00	; 0
    9f86:	30 e0       	ldi	r19, 0x00	; 0
    9f88:	40 e0       	ldi	r20, 0x00	; 0
    9f8a:	50 e0       	ldi	r21, 0x00	; 0
    9f8c:	be 01       	movw	r22, r28
    9f8e:	6f 5f       	subi	r22, 0xFF	; 255
    9f90:	7e 4f       	sbci	r23, 0xFE	; 254
    9f92:	ce 01       	movw	r24, r28
    9f94:	01 96       	adiw	r24, 0x01	; 1
    9f96:	0e 94 93 6d 	call	0xdb26	; 0xdb26 <TMR_SR_convertToEBV>
    9f9a:	4b 01       	movw	r8, r22
    9f9c:	5c 01       	movw	r10, r24
    9f9e:	61 15       	cp	r22, r1
    9fa0:	71 05       	cpc	r23, r1
    9fa2:	81 05       	cpc	r24, r1
    9fa4:	91 05       	cpc	r25, r1
    9fa6:	09 f4       	brne	.+2      	; 0x9faa <TMR_SR_cmdSetProtocolConfiguration+0x262>
    9fa8:	c9 c0       	rjmp	.+402    	; 0xa13c <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    9faa:	e8 c0       	rjmp	.+464    	; 0xa17c <TMR_SR_cmdSetProtocolConfiguration+0x434>
    9fac:	4a 30       	cpi	r20, 0x0A	; 10
    9fae:	51 f5       	brne	.+84     	; 0xa004 <TMR_SR_cmdSetProtocolConfiguration+0x2bc>
    9fb0:	52 30       	cpi	r21, 0x02	; 2
    9fb2:	09 f0       	breq	.+2      	; 0x9fb6 <TMR_SR_cmdSetProtocolConfiguration+0x26e>
    9fb4:	e7 c0       	rjmp	.+462    	; 0xa184 <TMR_SR_cmdSetProtocolConfiguration+0x43c>
    9fb6:	01 96       	adiw	r24, 0x01	; 1
    9fb8:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    9fbc:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    9fc0:	85 e0       	ldi	r24, 0x05	; 5
    9fc2:	cf 5f       	subi	r28, 0xFF	; 255
    9fc4:	de 4f       	sbci	r29, 0xFE	; 254
    9fc6:	88 83       	st	Y, r24
    9fc8:	c1 50       	subi	r28, 0x01	; 1
    9fca:	d1 40       	sbci	r29, 0x01	; 1
    9fcc:	5d 83       	std	Y+5, r21	; 0x05
    9fce:	f9 01       	movw	r30, r18
    9fd0:	00 81       	ld	r16, Z
    9fd2:	11 81       	ldd	r17, Z+1	; 0x01
    9fd4:	e0 2e       	mov	r14, r16
    9fd6:	f1 2e       	mov	r15, r17
    9fd8:	00 e0       	ldi	r16, 0x00	; 0
    9fda:	10 e0       	ldi	r17, 0x00	; 0
    9fdc:	20 e0       	ldi	r18, 0x00	; 0
    9fde:	30 e0       	ldi	r19, 0x00	; 0
    9fe0:	40 e0       	ldi	r20, 0x00	; 0
    9fe2:	50 e0       	ldi	r21, 0x00	; 0
    9fe4:	be 01       	movw	r22, r28
    9fe6:	6f 5f       	subi	r22, 0xFF	; 255
    9fe8:	7e 4f       	sbci	r23, 0xFE	; 254
    9fea:	ce 01       	movw	r24, r28
    9fec:	01 96       	adiw	r24, 0x01	; 1
    9fee:	0e 94 93 6d 	call	0xdb26	; 0xdb26 <TMR_SR_convertToEBV>
    9ff2:	4b 01       	movw	r8, r22
    9ff4:	5c 01       	movw	r10, r24
    9ff6:	61 15       	cp	r22, r1
    9ff8:	71 05       	cpc	r23, r1
    9ffa:	81 05       	cpc	r24, r1
    9ffc:	91 05       	cpc	r25, r1
    9ffe:	09 f4       	brne	.+2      	; 0xa002 <TMR_SR_cmdSetProtocolConfiguration+0x2ba>
    a000:	9d c0       	rjmp	.+314    	; 0xa13c <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    a002:	c5 c0       	rjmp	.+394    	; 0xa18e <TMR_SR_cmdSetProtocolConfiguration+0x446>
    a004:	4b 30       	cpi	r20, 0x0B	; 11
    a006:	71 f5       	brne	.+92     	; 0xa064 <TMR_SR_cmdSetProtocolConfiguration+0x31c>
    a008:	52 30       	cpi	r21, 0x02	; 2
    a00a:	09 f0       	breq	.+2      	; 0xa00e <TMR_SR_cmdSetProtocolConfiguration+0x2c6>
    a00c:	c4 c0       	rjmp	.+392    	; 0xa196 <TMR_SR_cmdSetProtocolConfiguration+0x44e>
    a00e:	01 96       	adiw	r24, 0x01	; 1
    a010:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    a014:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    a018:	85 e0       	ldi	r24, 0x05	; 5
    a01a:	cf 5f       	subi	r28, 0xFF	; 255
    a01c:	de 4f       	sbci	r29, 0xFE	; 254
    a01e:	88 83       	st	Y, r24
    a020:	c1 50       	subi	r28, 0x01	; 1
    a022:	d1 40       	sbci	r29, 0x01	; 1
    a024:	5d 83       	std	Y+5, r21	; 0x05
    a026:	f9 01       	movw	r30, r18
    a028:	80 81       	ld	r24, Z
    a02a:	91 81       	ldd	r25, Z+1	; 0x01
    a02c:	a2 81       	ldd	r26, Z+2	; 0x02
    a02e:	b3 81       	ldd	r27, Z+3	; 0x03
    a030:	9c 01       	movw	r18, r24
    a032:	ad 01       	movw	r20, r26
    a034:	e2 2e       	mov	r14, r18
    a036:	f3 2e       	mov	r15, r19
    a038:	04 2f       	mov	r16, r20
    a03a:	15 2f       	mov	r17, r21
    a03c:	20 e0       	ldi	r18, 0x00	; 0
    a03e:	30 e0       	ldi	r19, 0x00	; 0
    a040:	40 e0       	ldi	r20, 0x00	; 0
    a042:	50 e0       	ldi	r21, 0x00	; 0
    a044:	be 01       	movw	r22, r28
    a046:	6f 5f       	subi	r22, 0xFF	; 255
    a048:	7e 4f       	sbci	r23, 0xFE	; 254
    a04a:	ce 01       	movw	r24, r28
    a04c:	01 96       	adiw	r24, 0x01	; 1
    a04e:	0e 94 93 6d 	call	0xdb26	; 0xdb26 <TMR_SR_convertToEBV>
    a052:	4b 01       	movw	r8, r22
    a054:	5c 01       	movw	r10, r24
    a056:	61 15       	cp	r22, r1
    a058:	71 05       	cpc	r23, r1
    a05a:	81 05       	cpc	r24, r1
    a05c:	91 05       	cpc	r25, r1
    a05e:	09 f4       	brne	.+2      	; 0xa062 <TMR_SR_cmdSetProtocolConfiguration+0x31a>
    a060:	6d c0       	rjmp	.+218    	; 0xa13c <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    a062:	9e c0       	rjmp	.+316    	; 0xa1a0 <TMR_SR_cmdSetProtocolConfiguration+0x458>
    a064:	44 31       	cpi	r20, 0x14	; 20
    a066:	09 f0       	breq	.+2      	; 0xa06a <TMR_SR_cmdSetProtocolConfiguration+0x322>
    a068:	3f c0       	rjmp	.+126    	; 0xa0e8 <TMR_SR_cmdSetProtocolConfiguration+0x3a0>
    a06a:	52 30       	cpi	r21, 0x02	; 2
    a06c:	19 f0       	breq	.+6      	; 0xa074 <TMR_SR_cmdSetProtocolConfiguration+0x32c>
    a06e:	54 30       	cpi	r21, 0x04	; 4
    a070:	59 f1       	breq	.+86     	; 0xa0c8 <TMR_SR_cmdSetProtocolConfiguration+0x380>
    a072:	9a c0       	rjmp	.+308    	; 0xa1a8 <TMR_SR_cmdSetProtocolConfiguration+0x460>
    a074:	01 96       	adiw	r24, 0x01	; 1
    a076:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    a07a:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    a07e:	85 e0       	ldi	r24, 0x05	; 5
    a080:	cf 5f       	subi	r28, 0xFF	; 255
    a082:	de 4f       	sbci	r29, 0xFE	; 254
    a084:	88 83       	st	Y, r24
    a086:	c1 50       	subi	r28, 0x01	; 1
    a088:	d1 40       	sbci	r29, 0x01	; 1
    a08a:	5d 83       	std	Y+5, r21	; 0x05
    a08c:	f9 01       	movw	r30, r18
    a08e:	80 81       	ld	r24, Z
    a090:	91 81       	ldd	r25, Z+1	; 0x01
    a092:	a2 81       	ldd	r26, Z+2	; 0x02
    a094:	b3 81       	ldd	r27, Z+3	; 0x03
    a096:	9c 01       	movw	r18, r24
    a098:	ad 01       	movw	r20, r26
    a09a:	e2 2e       	mov	r14, r18
    a09c:	f3 2e       	mov	r15, r19
    a09e:	04 2f       	mov	r16, r20
    a0a0:	15 2f       	mov	r17, r21
    a0a2:	20 e0       	ldi	r18, 0x00	; 0
    a0a4:	30 e0       	ldi	r19, 0x00	; 0
    a0a6:	40 e0       	ldi	r20, 0x00	; 0
    a0a8:	50 e0       	ldi	r21, 0x00	; 0
    a0aa:	be 01       	movw	r22, r28
    a0ac:	6f 5f       	subi	r22, 0xFF	; 255
    a0ae:	7e 4f       	sbci	r23, 0xFE	; 254
    a0b0:	ce 01       	movw	r24, r28
    a0b2:	01 96       	adiw	r24, 0x01	; 1
    a0b4:	0e 94 93 6d 	call	0xdb26	; 0xdb26 <TMR_SR_convertToEBV>
    a0b8:	4b 01       	movw	r8, r22
    a0ba:	5c 01       	movw	r10, r24
    a0bc:	61 15       	cp	r22, r1
    a0be:	71 05       	cpc	r23, r1
    a0c0:	81 05       	cpc	r24, r1
    a0c2:	91 05       	cpc	r25, r1
    a0c4:	d9 f1       	breq	.+118    	; 0xa13c <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    a0c6:	75 c0       	rjmp	.+234    	; 0xa1b2 <TMR_SR_cmdSetProtocolConfiguration+0x46a>
    a0c8:	5d 83       	std	Y+5, r21	; 0x05
    a0ca:	02 96       	adiw	r24, 0x02	; 2
    a0cc:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    a0d0:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    a0d4:	86 e0       	ldi	r24, 0x06	; 6
    a0d6:	cf 5f       	subi	r28, 0xFF	; 255
    a0d8:	de 4f       	sbci	r29, 0xFE	; 254
    a0da:	88 83       	st	Y, r24
    a0dc:	c1 50       	subi	r28, 0x01	; 1
    a0de:	d1 40       	sbci	r29, 0x01	; 1
    a0e0:	f9 01       	movw	r30, r18
    a0e2:	80 81       	ld	r24, Z
    a0e4:	8e 83       	std	Y+6, r24	; 0x06
    a0e6:	2a c0       	rjmp	.+84     	; 0xa13c <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    a0e8:	45 31       	cpi	r20, 0x15	; 21
    a0ea:	09 f0       	breq	.+2      	; 0xa0ee <TMR_SR_cmdSetProtocolConfiguration+0x3a6>
    a0ec:	66 c0       	rjmp	.+204    	; 0xa1ba <TMR_SR_cmdSetProtocolConfiguration+0x472>
    a0ee:	52 30       	cpi	r21, 0x02	; 2
    a0f0:	09 f0       	breq	.+2      	; 0xa0f4 <TMR_SR_cmdSetProtocolConfiguration+0x3ac>
    a0f2:	68 c0       	rjmp	.+208    	; 0xa1c4 <TMR_SR_cmdSetProtocolConfiguration+0x47c>
    a0f4:	01 96       	adiw	r24, 0x01	; 1
    a0f6:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    a0fa:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    a0fe:	85 e0       	ldi	r24, 0x05	; 5
    a100:	cf 5f       	subi	r28, 0xFF	; 255
    a102:	de 4f       	sbci	r29, 0xFE	; 254
    a104:	88 83       	st	Y, r24
    a106:	c1 50       	subi	r28, 0x01	; 1
    a108:	d1 40       	sbci	r29, 0x01	; 1
    a10a:	5d 83       	std	Y+5, r21	; 0x05
    a10c:	f9 01       	movw	r30, r18
    a10e:	e0 80       	ld	r14, Z
    a110:	f1 2c       	mov	r15, r1
    a112:	00 e0       	ldi	r16, 0x00	; 0
    a114:	10 e0       	ldi	r17, 0x00	; 0
    a116:	20 e0       	ldi	r18, 0x00	; 0
    a118:	30 e0       	ldi	r19, 0x00	; 0
    a11a:	40 e0       	ldi	r20, 0x00	; 0
    a11c:	50 e0       	ldi	r21, 0x00	; 0
    a11e:	be 01       	movw	r22, r28
    a120:	6f 5f       	subi	r22, 0xFF	; 255
    a122:	7e 4f       	sbci	r23, 0xFE	; 254
    a124:	ce 01       	movw	r24, r28
    a126:	01 96       	adiw	r24, 0x01	; 1
    a128:	0e 94 93 6d 	call	0xdb26	; 0xdb26 <TMR_SR_convertToEBV>
    a12c:	4b 01       	movw	r8, r22
    a12e:	5c 01       	movw	r10, r24
    a130:	61 15       	cp	r22, r1
    a132:	71 05       	cpc	r23, r1
    a134:	81 05       	cpc	r24, r1
    a136:	91 05       	cpc	r25, r1
    a138:	09 f0       	breq	.+2      	; 0xa13c <TMR_SR_cmdSetProtocolConfiguration+0x3f4>
    a13a:	49 c0       	rjmp	.+146    	; 0xa1ce <TMR_SR_cmdSetProtocolConfiguration+0x486>
    a13c:	cf 5f       	subi	r28, 0xFF	; 255
    a13e:	de 4f       	sbci	r29, 0xFE	; 254
    a140:	48 81       	ld	r20, Y
    a142:	c1 50       	subi	r28, 0x01	; 1
    a144:	d1 40       	sbci	r29, 0x01	; 1
    a146:	be 01       	movw	r22, r28
    a148:	6f 5f       	subi	r22, 0xFF	; 255
    a14a:	7f 4f       	sbci	r23, 0xFF	; 255
    a14c:	c6 01       	movw	r24, r12
    a14e:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    a152:	40 c0       	rjmp	.+128    	; 0xa1d4 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a154:	69 e0       	ldi	r22, 0x09	; 9
    a156:	70 e0       	ldi	r23, 0x00	; 0
    a158:	80 e0       	ldi	r24, 0x00	; 0
    a15a:	93 e0       	ldi	r25, 0x03	; 3
    a15c:	3b c0       	rjmp	.+118    	; 0xa1d4 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a15e:	61 e0       	ldi	r22, 0x01	; 1
    a160:	70 e0       	ldi	r23, 0x00	; 0
    a162:	80 e0       	ldi	r24, 0x00	; 0
    a164:	93 e0       	ldi	r25, 0x03	; 3
    a166:	36 c0       	rjmp	.+108    	; 0xa1d4 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a168:	61 e0       	ldi	r22, 0x01	; 1
    a16a:	70 e0       	ldi	r23, 0x00	; 0
    a16c:	80 e0       	ldi	r24, 0x00	; 0
    a16e:	93 e0       	ldi	r25, 0x03	; 3
    a170:	31 c0       	rjmp	.+98     	; 0xa1d4 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a172:	69 e0       	ldi	r22, 0x09	; 9
    a174:	70 e0       	ldi	r23, 0x00	; 0
    a176:	80 e0       	ldi	r24, 0x00	; 0
    a178:	93 e0       	ldi	r25, 0x03	; 3
    a17a:	2c c0       	rjmp	.+88     	; 0xa1d4 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a17c:	79 2d       	mov	r23, r9
    a17e:	8a 2d       	mov	r24, r10
    a180:	9b 2d       	mov	r25, r11
    a182:	28 c0       	rjmp	.+80     	; 0xa1d4 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a184:	69 e0       	ldi	r22, 0x09	; 9
    a186:	70 e0       	ldi	r23, 0x00	; 0
    a188:	80 e0       	ldi	r24, 0x00	; 0
    a18a:	93 e0       	ldi	r25, 0x03	; 3
    a18c:	23 c0       	rjmp	.+70     	; 0xa1d4 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a18e:	79 2d       	mov	r23, r9
    a190:	8a 2d       	mov	r24, r10
    a192:	9b 2d       	mov	r25, r11
    a194:	1f c0       	rjmp	.+62     	; 0xa1d4 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a196:	69 e0       	ldi	r22, 0x09	; 9
    a198:	70 e0       	ldi	r23, 0x00	; 0
    a19a:	80 e0       	ldi	r24, 0x00	; 0
    a19c:	93 e0       	ldi	r25, 0x03	; 3
    a19e:	1a c0       	rjmp	.+52     	; 0xa1d4 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a1a0:	79 2d       	mov	r23, r9
    a1a2:	8a 2d       	mov	r24, r10
    a1a4:	9b 2d       	mov	r25, r11
    a1a6:	16 c0       	rjmp	.+44     	; 0xa1d4 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a1a8:	69 e0       	ldi	r22, 0x09	; 9
    a1aa:	70 e0       	ldi	r23, 0x00	; 0
    a1ac:	80 e0       	ldi	r24, 0x00	; 0
    a1ae:	93 e0       	ldi	r25, 0x03	; 3
    a1b0:	11 c0       	rjmp	.+34     	; 0xa1d4 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a1b2:	79 2d       	mov	r23, r9
    a1b4:	8a 2d       	mov	r24, r10
    a1b6:	9b 2d       	mov	r25, r11
    a1b8:	0d c0       	rjmp	.+26     	; 0xa1d4 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a1ba:	61 e0       	ldi	r22, 0x01	; 1
    a1bc:	70 e0       	ldi	r23, 0x00	; 0
    a1be:	80 e0       	ldi	r24, 0x00	; 0
    a1c0:	93 e0       	ldi	r25, 0x03	; 3
    a1c2:	08 c0       	rjmp	.+16     	; 0xa1d4 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a1c4:	69 e0       	ldi	r22, 0x09	; 9
    a1c6:	70 e0       	ldi	r23, 0x00	; 0
    a1c8:	80 e0       	ldi	r24, 0x00	; 0
    a1ca:	93 e0       	ldi	r25, 0x03	; 3
    a1cc:	03 c0       	rjmp	.+6      	; 0xa1d4 <TMR_SR_cmdSetProtocolConfiguration+0x48c>
    a1ce:	79 2d       	mov	r23, r9
    a1d0:	8a 2d       	mov	r24, r10
    a1d2:	9b 2d       	mov	r25, r11
    a1d4:	cf 5f       	subi	r28, 0xFF	; 255
    a1d6:	de 4f       	sbci	r29, 0xFE	; 254
    a1d8:	0f b6       	in	r0, 0x3f	; 63
    a1da:	f8 94       	cli
    a1dc:	de bf       	out	0x3e, r29	; 62
    a1de:	0f be       	out	0x3f, r0	; 63
    a1e0:	cd bf       	out	0x3d, r28	; 61
    a1e2:	df 91       	pop	r29
    a1e4:	cf 91       	pop	r28
    a1e6:	1f 91       	pop	r17
    a1e8:	0f 91       	pop	r16
    a1ea:	ff 90       	pop	r15
    a1ec:	ef 90       	pop	r14
    a1ee:	df 90       	pop	r13
    a1f0:	cf 90       	pop	r12
    a1f2:	bf 90       	pop	r11
    a1f4:	af 90       	pop	r10
    a1f6:	9f 90       	pop	r9
    a1f8:	8f 90       	pop	r8
    a1fa:	08 95       	ret

0000a1fc <TMR_SR_cmdAntennaDetect>:
    a1fc:	ef 92       	push	r14
    a1fe:	ff 92       	push	r15
    a200:	0f 93       	push	r16
    a202:	1f 93       	push	r17
    a204:	cf 93       	push	r28
    a206:	df 93       	push	r29
    a208:	cd b7       	in	r28, 0x3d	; 61
    a20a:	de b7       	in	r29, 0x3e	; 62
    a20c:	da 95       	dec	r29
    a20e:	0f b6       	in	r0, 0x3f	; 63
    a210:	f8 94       	cli
    a212:	de bf       	out	0x3e, r29	; 62
    a214:	0f be       	out	0x3f, r0	; 63
    a216:	cd bf       	out	0x3d, r28	; 61
    a218:	8b 01       	movw	r16, r22
    a21a:	7a 01       	movw	r14, r20
    a21c:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    a220:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    a224:	41 e6       	ldi	r20, 0x61	; 97
    a226:	4b 83       	std	Y+3, r20	; 0x03
    a228:	2e 5f       	subi	r18, 0xFE	; 254
    a22a:	3f 4f       	sbci	r19, 0xFF	; 255
    a22c:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    a230:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    a234:	25 e0       	ldi	r18, 0x05	; 5
    a236:	2c 83       	std	Y+4, r18	; 0x04
    a238:	44 e0       	ldi	r20, 0x04	; 4
    a23a:	be 01       	movw	r22, r28
    a23c:	6f 5f       	subi	r22, 0xFF	; 255
    a23e:	7f 4f       	sbci	r23, 0xFF	; 255
    a240:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    a244:	61 15       	cp	r22, r1
    a246:	71 05       	cpc	r23, r1
    a248:	81 05       	cpc	r24, r1
    a24a:	91 05       	cpc	r25, r1
    a24c:	91 f5       	brne	.+100    	; 0xa2b2 <TMR_SR_cmdAntennaDetect+0xb6>
    a24e:	20 e0       	ldi	r18, 0x00	; 0
    a250:	31 e0       	ldi	r19, 0x01	; 1
    a252:	21 c0       	rjmp	.+66     	; 0xa296 <TMR_SR_cmdAntennaDetect+0x9a>
    a254:	e2 2f       	mov	r30, r18
    a256:	f0 e0       	ldi	r31, 0x00	; 0
    a258:	ee 0f       	add	r30, r30
    a25a:	ff 1f       	adc	r31, r31
    a25c:	ee 0d       	add	r30, r14
    a25e:	ff 1d       	adc	r31, r15
    a260:	83 2f       	mov	r24, r19
    a262:	90 e0       	ldi	r25, 0x00	; 0
    a264:	dc 01       	movw	r26, r24
    a266:	15 96       	adiw	r26, 0x05	; 5
    a268:	41 e0       	ldi	r20, 0x01	; 1
    a26a:	50 e0       	ldi	r21, 0x00	; 0
    a26c:	4c 0f       	add	r20, r28
    a26e:	5d 1f       	adc	r21, r29
    a270:	a4 0f       	add	r26, r20
    a272:	b5 1f       	adc	r27, r21
    a274:	4c 91       	ld	r20, X
    a276:	40 83       	st	Z, r20
    a278:	06 96       	adiw	r24, 0x06	; 6
    a27a:	a1 e0       	ldi	r26, 0x01	; 1
    a27c:	b0 e0       	ldi	r27, 0x00	; 0
    a27e:	ac 0f       	add	r26, r28
    a280:	bd 1f       	adc	r27, r29
    a282:	a8 0f       	add	r26, r24
    a284:	b9 1f       	adc	r27, r25
    a286:	9c 91       	ld	r25, X
    a288:	81 e0       	ldi	r24, 0x01	; 1
    a28a:	91 30       	cpi	r25, 0x01	; 1
    a28c:	09 f0       	breq	.+2      	; 0xa290 <TMR_SR_cmdAntennaDetect+0x94>
    a28e:	80 e0       	ldi	r24, 0x00	; 0
    a290:	81 83       	std	Z+1, r24	; 0x01
    a292:	3e 5f       	subi	r19, 0xFE	; 254
    a294:	2f 5f       	subi	r18, 0xFF	; 255
    a296:	8a 81       	ldd	r24, Y+2	; 0x02
    a298:	38 17       	cp	r19, r24
    a29a:	20 f4       	brcc	.+8      	; 0xa2a4 <TMR_SR_cmdAntennaDetect+0xa8>
    a29c:	f8 01       	movw	r30, r16
    a29e:	80 81       	ld	r24, Z
    a2a0:	28 17       	cp	r18, r24
    a2a2:	c0 f2       	brcs	.-80     	; 0xa254 <TMR_SR_cmdAntennaDetect+0x58>
    a2a4:	f8 01       	movw	r30, r16
    a2a6:	20 83       	st	Z, r18
    a2a8:	40 e0       	ldi	r20, 0x00	; 0
    a2aa:	30 e0       	ldi	r19, 0x00	; 0
    a2ac:	20 e0       	ldi	r18, 0x00	; 0
    a2ae:	90 e0       	ldi	r25, 0x00	; 0
    a2b0:	03 c0       	rjmp	.+6      	; 0xa2b8 <TMR_SR_cmdAntennaDetect+0xbc>
    a2b2:	46 2f       	mov	r20, r22
    a2b4:	37 2f       	mov	r19, r23
    a2b6:	28 2f       	mov	r18, r24
    a2b8:	64 2f       	mov	r22, r20
    a2ba:	73 2f       	mov	r23, r19
    a2bc:	82 2f       	mov	r24, r18
    a2be:	d3 95       	inc	r29
    a2c0:	0f b6       	in	r0, 0x3f	; 63
    a2c2:	f8 94       	cli
    a2c4:	de bf       	out	0x3e, r29	; 62
    a2c6:	0f be       	out	0x3f, r0	; 63
    a2c8:	cd bf       	out	0x3d, r28	; 61
    a2ca:	df 91       	pop	r29
    a2cc:	cf 91       	pop	r28
    a2ce:	1f 91       	pop	r17
    a2d0:	0f 91       	pop	r16
    a2d2:	ff 90       	pop	r15
    a2d4:	ef 90       	pop	r14
    a2d6:	08 95       	ret

0000a2d8 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime>:
    a2d8:	cf 92       	push	r12
    a2da:	df 92       	push	r13
    a2dc:	ef 92       	push	r14
    a2de:	ff 92       	push	r15
    a2e0:	0f 93       	push	r16
    a2e2:	1f 93       	push	r17
    a2e4:	cf 93       	push	r28
    a2e6:	df 93       	push	r29
    a2e8:	cd b7       	in	r28, 0x3d	; 61
    a2ea:	de b7       	in	r29, 0x3e	; 62
    a2ec:	da 95       	dec	r29
    a2ee:	0f b6       	in	r0, 0x3f	; 63
    a2f0:	f8 94       	cli
    a2f2:	de bf       	out	0x3e, r29	; 62
    a2f4:	0f be       	out	0x3f, r0	; 63
    a2f6:	cd bf       	out	0x3d, r28	; 61
    a2f8:	8c 01       	movw	r16, r24
    a2fa:	7b 01       	movw	r14, r22
    a2fc:	6a 01       	movw	r12, r20
    a2fe:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    a302:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    a306:	21 e6       	ldi	r18, 0x61	; 97
    a308:	2b 83       	std	Y+3, r18	; 0x03
    a30a:	24 e0       	ldi	r18, 0x04	; 4
    a30c:	2c 83       	std	Y+4, r18	; 0x04
    a30e:	03 96       	adiw	r24, 0x03	; 3
    a310:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    a314:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    a318:	f8 01       	movw	r30, r16
    a31a:	e2 5f       	subi	r30, 0xF2	; 242
    a31c:	f9 4f       	sbci	r31, 0xF9	; 249
    a31e:	80 81       	ld	r24, Z
    a320:	8d 83       	std	Y+5, r24	; 0x05
    a322:	45 e0       	ldi	r20, 0x05	; 5
    a324:	be 01       	movw	r22, r28
    a326:	6f 5f       	subi	r22, 0xFF	; 255
    a328:	7f 4f       	sbci	r23, 0xFF	; 255
    a32a:	c8 01       	movw	r24, r16
    a32c:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    a330:	61 15       	cp	r22, r1
    a332:	71 05       	cpc	r23, r1
    a334:	81 05       	cpc	r24, r1
    a336:	91 05       	cpc	r25, r1
    a338:	09 f0       	breq	.+2      	; 0xa33c <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x64>
    a33a:	97 c0       	rjmp	.+302    	; 0xa46a <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x192>
    a33c:	8f 81       	ldd	r24, Y+7	; 0x07
    a33e:	f8 01       	movw	r30, r16
    a340:	e2 5f       	subi	r30, 0xF2	; 242
    a342:	f9 4f       	sbci	r31, 0xF9	; 249
    a344:	80 83       	st	Z, r24
    a346:	40 e0       	ldi	r20, 0x00	; 0
    a348:	51 e0       	ldi	r21, 0x01	; 1
    a34a:	7a c0       	rjmp	.+244    	; 0xa440 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x168>
    a34c:	24 2f       	mov	r18, r20
    a34e:	30 e0       	ldi	r19, 0x00	; 0
    a350:	f9 01       	movw	r30, r18
    a352:	ee 0f       	add	r30, r30
    a354:	ff 1f       	adc	r31, r31
    a356:	ee 0f       	add	r30, r30
    a358:	ff 1f       	adc	r31, r31
    a35a:	ee 0f       	add	r30, r30
    a35c:	ff 1f       	adc	r31, r31
    a35e:	e2 1b       	sub	r30, r18
    a360:	f3 0b       	sbc	r31, r19
    a362:	ec 0d       	add	r30, r12
    a364:	fd 1d       	adc	r31, r13
    a366:	dc 01       	movw	r26, r24
    a368:	16 96       	adiw	r26, 0x06	; 6
    a36a:	21 e0       	ldi	r18, 0x01	; 1
    a36c:	30 e0       	ldi	r19, 0x00	; 0
    a36e:	2c 0f       	add	r18, r28
    a370:	3d 1f       	adc	r19, r29
    a372:	a2 0f       	add	r26, r18
    a374:	b3 1f       	adc	r27, r19
    a376:	2c 91       	ld	r18, X
    a378:	20 83       	st	Z, r18
    a37a:	d8 01       	movw	r26, r16
    a37c:	a2 5f       	subi	r26, 0xF2	; 242
    a37e:	b9 4f       	sbci	r27, 0xF9	; 249
    a380:	2c 91       	ld	r18, X
    a382:	22 30       	cpi	r18, 0x02	; 2
    a384:	01 f1       	breq	.+64     	; 0xa3c6 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0xee>
    a386:	23 30       	cpi	r18, 0x03	; 3
    a388:	e1 f1       	breq	.+120    	; 0xa402 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x12a>
    a38a:	21 30       	cpi	r18, 0x01	; 1
    a38c:	09 f0       	breq	.+2      	; 0xa390 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0xb8>
    a38e:	56 c0       	rjmp	.+172    	; 0xa43c <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x164>
    a390:	dc 01       	movw	r26, r24
    a392:	17 96       	adiw	r26, 0x07	; 7
    a394:	61 e0       	ldi	r22, 0x01	; 1
    a396:	70 e0       	ldi	r23, 0x00	; 0
    a398:	6c 0f       	add	r22, r28
    a39a:	7d 1f       	adc	r23, r29
    a39c:	a6 0f       	add	r26, r22
    a39e:	b7 1f       	adc	r27, r23
    a3a0:	2c 91       	ld	r18, X
    a3a2:	30 e0       	ldi	r19, 0x00	; 0
    a3a4:	32 2f       	mov	r19, r18
    a3a6:	22 27       	eor	r18, r18
    a3a8:	08 96       	adiw	r24, 0x08	; 8
    a3aa:	db 01       	movw	r26, r22
    a3ac:	a8 0f       	add	r26, r24
    a3ae:	b9 1f       	adc	r27, r25
    a3b0:	8c 91       	ld	r24, X
    a3b2:	b9 01       	movw	r22, r18
    a3b4:	68 2b       	or	r22, r24
    a3b6:	cb 01       	movw	r24, r22
    a3b8:	92 83       	std	Z+2, r25	; 0x02
    a3ba:	81 83       	std	Z+1, r24	; 0x01
    a3bc:	14 82       	std	Z+4, r1	; 0x04
    a3be:	13 82       	std	Z+3, r1	; 0x03
    a3c0:	16 82       	std	Z+6, r1	; 0x06
    a3c2:	15 82       	std	Z+5, r1	; 0x05
    a3c4:	3b c0       	rjmp	.+118    	; 0xa43c <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x164>
    a3c6:	12 82       	std	Z+2, r1	; 0x02
    a3c8:	11 82       	std	Z+1, r1	; 0x01
    a3ca:	dc 01       	movw	r26, r24
    a3cc:	17 96       	adiw	r26, 0x07	; 7
    a3ce:	21 e0       	ldi	r18, 0x01	; 1
    a3d0:	30 e0       	ldi	r19, 0x00	; 0
    a3d2:	2c 0f       	add	r18, r28
    a3d4:	3d 1f       	adc	r19, r29
    a3d6:	a2 0f       	add	r26, r18
    a3d8:	b3 1f       	adc	r27, r19
    a3da:	2c 91       	ld	r18, X
    a3dc:	30 e0       	ldi	r19, 0x00	; 0
    a3de:	32 2f       	mov	r19, r18
    a3e0:	22 27       	eor	r18, r18
    a3e2:	08 96       	adiw	r24, 0x08	; 8
    a3e4:	a1 e0       	ldi	r26, 0x01	; 1
    a3e6:	b0 e0       	ldi	r27, 0x00	; 0
    a3e8:	ac 0f       	add	r26, r28
    a3ea:	bd 1f       	adc	r27, r29
    a3ec:	a8 0f       	add	r26, r24
    a3ee:	b9 1f       	adc	r27, r25
    a3f0:	8c 91       	ld	r24, X
    a3f2:	b9 01       	movw	r22, r18
    a3f4:	68 2b       	or	r22, r24
    a3f6:	cb 01       	movw	r24, r22
    a3f8:	94 83       	std	Z+4, r25	; 0x04
    a3fa:	83 83       	std	Z+3, r24	; 0x03
    a3fc:	16 82       	std	Z+6, r1	; 0x06
    a3fe:	15 82       	std	Z+5, r1	; 0x05
    a400:	1d c0       	rjmp	.+58     	; 0xa43c <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x164>
    a402:	12 82       	std	Z+2, r1	; 0x02
    a404:	11 82       	std	Z+1, r1	; 0x01
    a406:	14 82       	std	Z+4, r1	; 0x04
    a408:	13 82       	std	Z+3, r1	; 0x03
    a40a:	dc 01       	movw	r26, r24
    a40c:	17 96       	adiw	r26, 0x07	; 7
    a40e:	21 e0       	ldi	r18, 0x01	; 1
    a410:	30 e0       	ldi	r19, 0x00	; 0
    a412:	2c 0f       	add	r18, r28
    a414:	3d 1f       	adc	r19, r29
    a416:	a2 0f       	add	r26, r18
    a418:	b3 1f       	adc	r27, r19
    a41a:	2c 91       	ld	r18, X
    a41c:	30 e0       	ldi	r19, 0x00	; 0
    a41e:	32 2f       	mov	r19, r18
    a420:	22 27       	eor	r18, r18
    a422:	08 96       	adiw	r24, 0x08	; 8
    a424:	a1 e0       	ldi	r26, 0x01	; 1
    a426:	b0 e0       	ldi	r27, 0x00	; 0
    a428:	ac 0f       	add	r26, r28
    a42a:	bd 1f       	adc	r27, r29
    a42c:	a8 0f       	add	r26, r24
    a42e:	b9 1f       	adc	r27, r25
    a430:	8c 91       	ld	r24, X
    a432:	b9 01       	movw	r22, r18
    a434:	68 2b       	or	r22, r24
    a436:	cb 01       	movw	r24, r22
    a438:	96 83       	std	Z+6, r25	; 0x06
    a43a:	85 83       	std	Z+5, r24	; 0x05
    a43c:	5d 5f       	subi	r21, 0xFD	; 253
    a43e:	4f 5f       	subi	r20, 0xFF	; 255
    a440:	85 2f       	mov	r24, r21
    a442:	90 e0       	ldi	r25, 0x00	; 0
    a444:	2a 81       	ldd	r18, Y+2	; 0x02
    a446:	30 e0       	ldi	r19, 0x00	; 0
    a448:	21 50       	subi	r18, 0x01	; 1
    a44a:	31 09       	sbc	r19, r1
    a44c:	82 17       	cp	r24, r18
    a44e:	93 07       	cpc	r25, r19
    a450:	2c f4       	brge	.+10     	; 0xa45c <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x184>
    a452:	f7 01       	movw	r30, r14
    a454:	20 81       	ld	r18, Z
    a456:	42 17       	cp	r20, r18
    a458:	08 f4       	brcc	.+2      	; 0xa45c <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x184>
    a45a:	78 cf       	rjmp	.-272    	; 0xa34c <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x74>
    a45c:	f7 01       	movw	r30, r14
    a45e:	40 83       	st	Z, r20
    a460:	40 e0       	ldi	r20, 0x00	; 0
    a462:	30 e0       	ldi	r19, 0x00	; 0
    a464:	20 e0       	ldi	r18, 0x00	; 0
    a466:	90 e0       	ldi	r25, 0x00	; 0
    a468:	03 c0       	rjmp	.+6      	; 0xa470 <TMR_SR_cmdGetAntennaPortPowersAndSettlingTime+0x198>
    a46a:	46 2f       	mov	r20, r22
    a46c:	37 2f       	mov	r19, r23
    a46e:	28 2f       	mov	r18, r24
    a470:	64 2f       	mov	r22, r20
    a472:	73 2f       	mov	r23, r19
    a474:	82 2f       	mov	r24, r18
    a476:	d3 95       	inc	r29
    a478:	0f b6       	in	r0, 0x3f	; 63
    a47a:	f8 94       	cli
    a47c:	de bf       	out	0x3e, r29	; 62
    a47e:	0f be       	out	0x3f, r0	; 63
    a480:	cd bf       	out	0x3d, r28	; 61
    a482:	df 91       	pop	r29
    a484:	cf 91       	pop	r28
    a486:	1f 91       	pop	r17
    a488:	0f 91       	pop	r16
    a48a:	ff 90       	pop	r15
    a48c:	ef 90       	pop	r14
    a48e:	df 90       	pop	r13
    a490:	cf 90       	pop	r12
    a492:	08 95       	ret

0000a494 <TMR_SR_cmdGetAntennaReturnLoss>:
    a494:	cf 92       	push	r12
    a496:	df 92       	push	r13
    a498:	ef 92       	push	r14
    a49a:	ff 92       	push	r15
    a49c:	0f 93       	push	r16
    a49e:	1f 93       	push	r17
    a4a0:	cf 93       	push	r28
    a4a2:	df 93       	push	r29
    a4a4:	cd b7       	in	r28, 0x3d	; 61
    a4a6:	de b7       	in	r29, 0x3e	; 62
    a4a8:	da 95       	dec	r29
    a4aa:	0f b6       	in	r0, 0x3f	; 63
    a4ac:	f8 94       	cli
    a4ae:	de bf       	out	0x3e, r29	; 62
    a4b0:	0f be       	out	0x3f, r0	; 63
    a4b2:	cd bf       	out	0x3d, r28	; 61
    a4b4:	8b 01       	movw	r16, r22
    a4b6:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    a4ba:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    a4be:	41 e6       	ldi	r20, 0x61	; 97
    a4c0:	4b 83       	std	Y+3, r20	; 0x03
    a4c2:	2e 5f       	subi	r18, 0xFE	; 254
    a4c4:	3f 4f       	sbci	r19, 0xFF	; 255
    a4c6:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    a4ca:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    a4ce:	26 e0       	ldi	r18, 0x06	; 6
    a4d0:	2c 83       	std	Y+4, r18	; 0x04
    a4d2:	44 e0       	ldi	r20, 0x04	; 4
    a4d4:	be 01       	movw	r22, r28
    a4d6:	6f 5f       	subi	r22, 0xFF	; 255
    a4d8:	7f 4f       	sbci	r23, 0xFF	; 255
    a4da:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    a4de:	61 15       	cp	r22, r1
    a4e0:	71 05       	cpc	r23, r1
    a4e2:	81 05       	cpc	r24, r1
    a4e4:	91 05       	cpc	r25, r1
    a4e6:	09 f0       	breq	.+2      	; 0xa4ea <TMR_SR_cmdGetAntennaReturnLoss+0x56>
    a4e8:	48 c0       	rjmp	.+144    	; 0xa57a <TMR_SR_cmdGetAntennaReturnLoss+0xe6>
    a4ea:	40 e0       	ldi	r20, 0x00	; 0
    a4ec:	51 e0       	ldi	r21, 0x01	; 1
    a4ee:	39 c0       	rjmp	.+114    	; 0xa562 <TMR_SR_cmdGetAntennaReturnLoss+0xce>
    a4f0:	d8 01       	movw	r26, r16
    a4f2:	12 96       	adiw	r26, 0x02	; 2
    a4f4:	8c 91       	ld	r24, X
    a4f6:	12 97       	sbiw	r26, 0x02	; 2
    a4f8:	48 17       	cp	r20, r24
    a4fa:	c0 f5       	brcc	.+112    	; 0xa56c <TMR_SR_cmdGetAntennaReturnLoss+0xd8>
    a4fc:	ed 91       	ld	r30, X+
    a4fe:	fc 91       	ld	r31, X
    a500:	84 2f       	mov	r24, r20
    a502:	90 e0       	ldi	r25, 0x00	; 0
    a504:	9c 01       	movw	r18, r24
    a506:	22 0f       	add	r18, r18
    a508:	33 1f       	adc	r19, r19
    a50a:	22 0f       	add	r18, r18
    a50c:	33 1f       	adc	r19, r19
    a50e:	82 0f       	add	r24, r18
    a510:	93 1f       	adc	r25, r19
    a512:	e8 0f       	add	r30, r24
    a514:	f9 1f       	adc	r31, r25
    a516:	25 2f       	mov	r18, r21
    a518:	30 e0       	ldi	r19, 0x00	; 0
    a51a:	d9 01       	movw	r26, r18
    a51c:	15 96       	adiw	r26, 0x05	; 5
    a51e:	61 e0       	ldi	r22, 0x01	; 1
    a520:	70 e0       	ldi	r23, 0x00	; 0
    a522:	6c 0f       	add	r22, r28
    a524:	7d 1f       	adc	r23, r29
    a526:	a6 0f       	add	r26, r22
    a528:	b7 1f       	adc	r27, r23
    a52a:	6c 91       	ld	r22, X
    a52c:	60 83       	st	Z, r22
    a52e:	d8 01       	movw	r26, r16
    a530:	6d 91       	ld	r22, X+
    a532:	7c 91       	ld	r23, X
    a534:	db 01       	movw	r26, r22
    a536:	a8 0f       	add	r26, r24
    a538:	b9 1f       	adc	r27, r25
    a53a:	2a 5f       	subi	r18, 0xFA	; 250
    a53c:	3f 4f       	sbci	r19, 0xFF	; 255
    a53e:	e1 e0       	ldi	r30, 0x01	; 1
    a540:	f0 e0       	ldi	r31, 0x00	; 0
    a542:	ec 0f       	add	r30, r28
    a544:	fd 1f       	adc	r31, r29
    a546:	e2 0f       	add	r30, r18
    a548:	f3 1f       	adc	r31, r19
    a54a:	c0 80       	ld	r12, Z
    a54c:	d1 2c       	mov	r13, r1
    a54e:	e1 2c       	mov	r14, r1
    a550:	f1 2c       	mov	r15, r1
    a552:	11 96       	adiw	r26, 0x01	; 1
    a554:	cd 92       	st	X+, r12
    a556:	dd 92       	st	X+, r13
    a558:	ed 92       	st	X+, r14
    a55a:	fc 92       	st	X, r15
    a55c:	14 97       	sbiw	r26, 0x04	; 4
    a55e:	5e 5f       	subi	r21, 0xFE	; 254
    a560:	4f 5f       	subi	r20, 0xFF	; 255
    a562:	8a 81       	ldd	r24, Y+2	; 0x02
    a564:	58 17       	cp	r21, r24
    a566:	10 f4       	brcc	.+4      	; 0xa56c <TMR_SR_cmdGetAntennaReturnLoss+0xd8>
    a568:	40 34       	cpi	r20, 0x40	; 64
    a56a:	10 f2       	brcs	.-124    	; 0xa4f0 <TMR_SR_cmdGetAntennaReturnLoss+0x5c>
    a56c:	f8 01       	movw	r30, r16
    a56e:	43 83       	std	Z+3, r20	; 0x03
    a570:	40 e0       	ldi	r20, 0x00	; 0
    a572:	30 e0       	ldi	r19, 0x00	; 0
    a574:	20 e0       	ldi	r18, 0x00	; 0
    a576:	90 e0       	ldi	r25, 0x00	; 0
    a578:	03 c0       	rjmp	.+6      	; 0xa580 <TMR_SR_cmdGetAntennaReturnLoss+0xec>
    a57a:	46 2f       	mov	r20, r22
    a57c:	37 2f       	mov	r19, r23
    a57e:	28 2f       	mov	r18, r24
    a580:	64 2f       	mov	r22, r20
    a582:	73 2f       	mov	r23, r19
    a584:	82 2f       	mov	r24, r18
    a586:	d3 95       	inc	r29
    a588:	0f b6       	in	r0, 0x3f	; 63
    a58a:	f8 94       	cli
    a58c:	de bf       	out	0x3e, r29	; 62
    a58e:	0f be       	out	0x3f, r0	; 63
    a590:	cd bf       	out	0x3d, r28	; 61
    a592:	df 91       	pop	r29
    a594:	cf 91       	pop	r28
    a596:	1f 91       	pop	r17
    a598:	0f 91       	pop	r16
    a59a:	ff 90       	pop	r15
    a59c:	ef 90       	pop	r14
    a59e:	df 90       	pop	r13
    a5a0:	cf 90       	pop	r12
    a5a2:	08 95       	ret

0000a5a4 <TMR_SR_cmdGetReadWriteTxPower>:
    a5a4:	0f 93       	push	r16
    a5a6:	1f 93       	push	r17
    a5a8:	cf 93       	push	r28
    a5aa:	df 93       	push	r29
    a5ac:	cd b7       	in	r28, 0x3d	; 61
    a5ae:	de b7       	in	r29, 0x3e	; 62
    a5b0:	da 95       	dec	r29
    a5b2:	0f b6       	in	r0, 0x3f	; 63
    a5b4:	f8 94       	cli
    a5b6:	de bf       	out	0x3e, r29	; 62
    a5b8:	0f be       	out	0x3f, r0	; 63
    a5ba:	cd bf       	out	0x3d, r28	; 61
    a5bc:	8b 01       	movw	r16, r22
    a5be:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    a5c2:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    a5c6:	4b 83       	std	Y+3, r20	; 0x03
    a5c8:	2e 5f       	subi	r18, 0xFE	; 254
    a5ca:	3f 4f       	sbci	r19, 0xFF	; 255
    a5cc:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    a5d0:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    a5d4:	1c 82       	std	Y+4, r1	; 0x04
    a5d6:	44 e0       	ldi	r20, 0x04	; 4
    a5d8:	be 01       	movw	r22, r28
    a5da:	6f 5f       	subi	r22, 0xFF	; 255
    a5dc:	7f 4f       	sbci	r23, 0xFF	; 255
    a5de:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    a5e2:	61 15       	cp	r22, r1
    a5e4:	71 05       	cpc	r23, r1
    a5e6:	81 05       	cpc	r24, r1
    a5e8:	91 05       	cpc	r25, r1
    a5ea:	a1 f4       	brne	.+40     	; 0xa614 <TMR_SR_cmdGetReadWriteTxPower+0x70>
    a5ec:	8f 81       	ldd	r24, Y+7	; 0x07
    a5ee:	90 e0       	ldi	r25, 0x00	; 0
    a5f0:	98 2f       	mov	r25, r24
    a5f2:	88 27       	eor	r24, r24
    a5f4:	28 85       	ldd	r18, Y+8	; 0x08
    a5f6:	82 2b       	or	r24, r18
    a5f8:	09 2e       	mov	r0, r25
    a5fa:	00 0c       	add	r0, r0
    a5fc:	aa 0b       	sbc	r26, r26
    a5fe:	bb 0b       	sbc	r27, r27
    a600:	f8 01       	movw	r30, r16
    a602:	80 83       	st	Z, r24
    a604:	91 83       	std	Z+1, r25	; 0x01
    a606:	a2 83       	std	Z+2, r26	; 0x02
    a608:	b3 83       	std	Z+3, r27	; 0x03
    a60a:	40 e0       	ldi	r20, 0x00	; 0
    a60c:	30 e0       	ldi	r19, 0x00	; 0
    a60e:	20 e0       	ldi	r18, 0x00	; 0
    a610:	90 e0       	ldi	r25, 0x00	; 0
    a612:	03 c0       	rjmp	.+6      	; 0xa61a <TMR_SR_cmdGetReadWriteTxPower+0x76>
    a614:	46 2f       	mov	r20, r22
    a616:	37 2f       	mov	r19, r23
    a618:	28 2f       	mov	r18, r24
    a61a:	64 2f       	mov	r22, r20
    a61c:	73 2f       	mov	r23, r19
    a61e:	82 2f       	mov	r24, r18
    a620:	d3 95       	inc	r29
    a622:	0f b6       	in	r0, 0x3f	; 63
    a624:	f8 94       	cli
    a626:	de bf       	out	0x3e, r29	; 62
    a628:	0f be       	out	0x3f, r0	; 63
    a62a:	cd bf       	out	0x3d, r28	; 61
    a62c:	df 91       	pop	r29
    a62e:	cf 91       	pop	r28
    a630:	1f 91       	pop	r17
    a632:	0f 91       	pop	r16
    a634:	08 95       	ret

0000a636 <TMR_SR_cmdGetReadTxPower>:
    a636:	42 e6       	ldi	r20, 0x62	; 98
    a638:	b5 cf       	rjmp	.-150    	; 0xa5a4 <TMR_SR_cmdGetReadWriteTxPower>
    a63a:	08 95       	ret

0000a63c <TMR_SR_cmdGetReadTxPowerWithLimits>:
    a63c:	0f 93       	push	r16
    a63e:	1f 93       	push	r17
    a640:	cf 93       	push	r28
    a642:	df 93       	push	r29
    a644:	cd b7       	in	r28, 0x3d	; 61
    a646:	de b7       	in	r29, 0x3e	; 62
    a648:	da 95       	dec	r29
    a64a:	0f b6       	in	r0, 0x3f	; 63
    a64c:	f8 94       	cli
    a64e:	de bf       	out	0x3e, r29	; 62
    a650:	0f be       	out	0x3f, r0	; 63
    a652:	cd bf       	out	0x3d, r28	; 61
    a654:	8b 01       	movw	r16, r22
    a656:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    a65a:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    a65e:	42 e6       	ldi	r20, 0x62	; 98
    a660:	4b 83       	std	Y+3, r20	; 0x03
    a662:	2e 5f       	subi	r18, 0xFE	; 254
    a664:	3f 4f       	sbci	r19, 0xFF	; 255
    a666:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    a66a:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    a66e:	21 e0       	ldi	r18, 0x01	; 1
    a670:	2c 83       	std	Y+4, r18	; 0x04
    a672:	44 e0       	ldi	r20, 0x04	; 4
    a674:	be 01       	movw	r22, r28
    a676:	6f 5f       	subi	r22, 0xFF	; 255
    a678:	7f 4f       	sbci	r23, 0xFF	; 255
    a67a:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    a67e:	61 15       	cp	r22, r1
    a680:	71 05       	cpc	r23, r1
    a682:	81 05       	cpc	r24, r1
    a684:	91 05       	cpc	r25, r1
    a686:	f1 f4       	brne	.+60     	; 0xa6c4 <TMR_SR_cmdGetReadTxPowerWithLimits+0x88>
    a688:	8f 81       	ldd	r24, Y+7	; 0x07
    a68a:	90 e0       	ldi	r25, 0x00	; 0
    a68c:	98 2f       	mov	r25, r24
    a68e:	88 27       	eor	r24, r24
    a690:	28 85       	ldd	r18, Y+8	; 0x08
    a692:	82 2b       	or	r24, r18
    a694:	f8 01       	movw	r30, r16
    a696:	91 83       	std	Z+1, r25	; 0x01
    a698:	80 83       	st	Z, r24
    a69a:	89 85       	ldd	r24, Y+9	; 0x09
    a69c:	90 e0       	ldi	r25, 0x00	; 0
    a69e:	98 2f       	mov	r25, r24
    a6a0:	88 27       	eor	r24, r24
    a6a2:	2a 85       	ldd	r18, Y+10	; 0x0a
    a6a4:	82 2b       	or	r24, r18
    a6a6:	93 83       	std	Z+3, r25	; 0x03
    a6a8:	82 83       	std	Z+2, r24	; 0x02
    a6aa:	8b 85       	ldd	r24, Y+11	; 0x0b
    a6ac:	90 e0       	ldi	r25, 0x00	; 0
    a6ae:	98 2f       	mov	r25, r24
    a6b0:	88 27       	eor	r24, r24
    a6b2:	2c 85       	ldd	r18, Y+12	; 0x0c
    a6b4:	82 2b       	or	r24, r18
    a6b6:	95 83       	std	Z+5, r25	; 0x05
    a6b8:	84 83       	std	Z+4, r24	; 0x04
    a6ba:	40 e0       	ldi	r20, 0x00	; 0
    a6bc:	30 e0       	ldi	r19, 0x00	; 0
    a6be:	20 e0       	ldi	r18, 0x00	; 0
    a6c0:	90 e0       	ldi	r25, 0x00	; 0
    a6c2:	03 c0       	rjmp	.+6      	; 0xa6ca <TMR_SR_cmdGetReadTxPowerWithLimits+0x8e>
    a6c4:	46 2f       	mov	r20, r22
    a6c6:	37 2f       	mov	r19, r23
    a6c8:	28 2f       	mov	r18, r24
    a6ca:	64 2f       	mov	r22, r20
    a6cc:	73 2f       	mov	r23, r19
    a6ce:	82 2f       	mov	r24, r18
    a6d0:	d3 95       	inc	r29
    a6d2:	0f b6       	in	r0, 0x3f	; 63
    a6d4:	f8 94       	cli
    a6d6:	de bf       	out	0x3e, r29	; 62
    a6d8:	0f be       	out	0x3f, r0	; 63
    a6da:	cd bf       	out	0x3d, r28	; 61
    a6dc:	df 91       	pop	r29
    a6de:	cf 91       	pop	r28
    a6e0:	1f 91       	pop	r17
    a6e2:	0f 91       	pop	r16
    a6e4:	08 95       	ret

0000a6e6 <TMR_SR_cmdGetWriteTxPower>:
    a6e6:	44 e6       	ldi	r20, 0x64	; 100
    a6e8:	5d cf       	rjmp	.-326    	; 0xa5a4 <TMR_SR_cmdGetReadWriteTxPower>
    a6ea:	08 95       	ret

0000a6ec <TMR_SR_cmdGetFrequencyHopTable>:
    a6ec:	6f 92       	push	r6
    a6ee:	7f 92       	push	r7
    a6f0:	8f 92       	push	r8
    a6f2:	9f 92       	push	r9
    a6f4:	af 92       	push	r10
    a6f6:	bf 92       	push	r11
    a6f8:	cf 92       	push	r12
    a6fa:	df 92       	push	r13
    a6fc:	ef 92       	push	r14
    a6fe:	ff 92       	push	r15
    a700:	0f 93       	push	r16
    a702:	1f 93       	push	r17
    a704:	cf 93       	push	r28
    a706:	df 93       	push	r29
    a708:	cd b7       	in	r28, 0x3d	; 61
    a70a:	de b7       	in	r29, 0x3e	; 62
    a70c:	da 95       	dec	r29
    a70e:	0f b6       	in	r0, 0x3f	; 63
    a710:	f8 94       	cli
    a712:	de bf       	out	0x3e, r29	; 62
    a714:	0f be       	out	0x3f, r0	; 63
    a716:	cd bf       	out	0x3d, r28	; 61
    a718:	8b 01       	movw	r16, r22
    a71a:	7a 01       	movw	r14, r20
    a71c:	45 e6       	ldi	r20, 0x65	; 101
    a71e:	be 01       	movw	r22, r28
    a720:	6f 5f       	subi	r22, 0xFF	; 255
    a722:	7f 4f       	sbci	r23, 0xFF	; 255
    a724:	0e 94 8d 36 	call	0x6d1a	; 0x6d1a <TMR_SR_callSendCmd>
    a728:	61 15       	cp	r22, r1
    a72a:	71 05       	cpc	r23, r1
    a72c:	81 05       	cpc	r24, r1
    a72e:	91 05       	cpc	r25, r1
    a730:	09 f0       	breq	.+2      	; 0xa734 <TMR_SR_cmdGetFrequencyHopTable+0x48>
    a732:	62 c0       	rjmp	.+196    	; 0xa7f8 <TMR_SR_cmdGetFrequencyHopTable+0x10c>
    a734:	ca 80       	ldd	r12, Y+2	; 0x02
    a736:	c6 94       	lsr	r12
    a738:	c6 94       	lsr	r12
    a73a:	d1 2c       	mov	r13, r1
    a73c:	4f c0       	rjmp	.+158    	; 0xa7dc <TMR_SR_cmdGetFrequencyHopTable+0xf0>
    a73e:	2d 2d       	mov	r18, r13
    a740:	30 e0       	ldi	r19, 0x00	; 0
    a742:	a9 01       	movw	r20, r18
    a744:	44 0f       	add	r20, r20
    a746:	55 1f       	adc	r21, r21
    a748:	44 0f       	add	r20, r20
    a74a:	55 1f       	adc	r21, r21
    a74c:	37 01       	movw	r6, r14
    a74e:	64 0e       	add	r6, r20
    a750:	75 1e       	adc	r7, r21
    a752:	da 01       	movw	r26, r20
    a754:	15 96       	adiw	r26, 0x05	; 5
    a756:	61 e0       	ldi	r22, 0x01	; 1
    a758:	70 e0       	ldi	r23, 0x00	; 0
    a75a:	6c 0f       	add	r22, r28
    a75c:	7d 1f       	adc	r23, r29
    a75e:	a6 0f       	add	r26, r22
    a760:	b7 1f       	adc	r27, r23
    a762:	8c 91       	ld	r24, X
    a764:	90 e0       	ldi	r25, 0x00	; 0
    a766:	a0 e0       	ldi	r26, 0x00	; 0
    a768:	b0 e0       	ldi	r27, 0x00	; 0
    a76a:	b8 2e       	mov	r11, r24
    a76c:	aa 24       	eor	r10, r10
    a76e:	99 24       	eor	r9, r9
    a770:	88 24       	eor	r8, r8
    a772:	da 01       	movw	r26, r20
    a774:	16 96       	adiw	r26, 0x06	; 6
    a776:	a6 0f       	add	r26, r22
    a778:	b7 1f       	adc	r27, r23
    a77a:	8c 91       	ld	r24, X
    a77c:	90 e0       	ldi	r25, 0x00	; 0
    a77e:	a0 e0       	ldi	r26, 0x00	; 0
    a780:	b0 e0       	ldi	r27, 0x00	; 0
    a782:	dc 01       	movw	r26, r24
    a784:	99 27       	eor	r25, r25
    a786:	88 27       	eor	r24, r24
    a788:	88 29       	or	r24, r8
    a78a:	99 29       	or	r25, r9
    a78c:	aa 29       	or	r26, r10
    a78e:	bb 29       	or	r27, r11
    a790:	49 5f       	subi	r20, 0xF9	; 249
    a792:	5f 4f       	sbci	r21, 0xFF	; 255
    a794:	46 0f       	add	r20, r22
    a796:	57 1f       	adc	r21, r23
    a798:	fa 01       	movw	r30, r20
    a79a:	40 81       	ld	r20, Z
    a79c:	50 e0       	ldi	r21, 0x00	; 0
    a79e:	60 e0       	ldi	r22, 0x00	; 0
    a7a0:	70 e0       	ldi	r23, 0x00	; 0
    a7a2:	76 2f       	mov	r23, r22
    a7a4:	65 2f       	mov	r22, r21
    a7a6:	54 2f       	mov	r21, r20
    a7a8:	44 27       	eor	r20, r20
    a7aa:	84 2b       	or	r24, r20
    a7ac:	95 2b       	or	r25, r21
    a7ae:	a6 2b       	or	r26, r22
    a7b0:	b7 2b       	or	r27, r23
    a7b2:	2e 5f       	subi	r18, 0xFE	; 254
    a7b4:	3f 4f       	sbci	r19, 0xFF	; 255
    a7b6:	22 0f       	add	r18, r18
    a7b8:	33 1f       	adc	r19, r19
    a7ba:	22 0f       	add	r18, r18
    a7bc:	33 1f       	adc	r19, r19
    a7be:	41 e0       	ldi	r20, 0x01	; 1
    a7c0:	50 e0       	ldi	r21, 0x00	; 0
    a7c2:	4c 0f       	add	r20, r28
    a7c4:	5d 1f       	adc	r21, r29
    a7c6:	24 0f       	add	r18, r20
    a7c8:	35 1f       	adc	r19, r21
    a7ca:	f9 01       	movw	r30, r18
    a7cc:	20 81       	ld	r18, Z
    a7ce:	82 2b       	or	r24, r18
    a7d0:	f3 01       	movw	r30, r6
    a7d2:	80 83       	st	Z, r24
    a7d4:	91 83       	std	Z+1, r25	; 0x01
    a7d6:	a2 83       	std	Z+2, r26	; 0x02
    a7d8:	b3 83       	std	Z+3, r27	; 0x03
    a7da:	d3 94       	inc	r13
    a7dc:	f8 01       	movw	r30, r16
    a7de:	80 81       	ld	r24, Z
    a7e0:	84 30       	cpi	r24, 0x04	; 4
    a7e2:	18 f0       	brcs	.+6      	; 0xa7ea <TMR_SR_cmdGetFrequencyHopTable+0xfe>
    a7e4:	dc 14       	cp	r13, r12
    a7e6:	08 f4       	brcc	.+2      	; 0xa7ea <TMR_SR_cmdGetFrequencyHopTable+0xfe>
    a7e8:	aa cf       	rjmp	.-172    	; 0xa73e <TMR_SR_cmdGetFrequencyHopTable+0x52>
    a7ea:	f8 01       	movw	r30, r16
    a7ec:	c0 82       	st	Z, r12
    a7ee:	40 e0       	ldi	r20, 0x00	; 0
    a7f0:	30 e0       	ldi	r19, 0x00	; 0
    a7f2:	20 e0       	ldi	r18, 0x00	; 0
    a7f4:	90 e0       	ldi	r25, 0x00	; 0
    a7f6:	03 c0       	rjmp	.+6      	; 0xa7fe <TMR_SR_cmdGetFrequencyHopTable+0x112>
    a7f8:	46 2f       	mov	r20, r22
    a7fa:	37 2f       	mov	r19, r23
    a7fc:	28 2f       	mov	r18, r24
    a7fe:	64 2f       	mov	r22, r20
    a800:	73 2f       	mov	r23, r19
    a802:	82 2f       	mov	r24, r18
    a804:	d3 95       	inc	r29
    a806:	0f b6       	in	r0, 0x3f	; 63
    a808:	f8 94       	cli
    a80a:	de bf       	out	0x3e, r29	; 62
    a80c:	0f be       	out	0x3f, r0	; 63
    a80e:	cd bf       	out	0x3d, r28	; 61
    a810:	df 91       	pop	r29
    a812:	cf 91       	pop	r28
    a814:	1f 91       	pop	r17
    a816:	0f 91       	pop	r16
    a818:	ff 90       	pop	r15
    a81a:	ef 90       	pop	r14
    a81c:	df 90       	pop	r13
    a81e:	cf 90       	pop	r12
    a820:	bf 90       	pop	r11
    a822:	af 90       	pop	r10
    a824:	9f 90       	pop	r9
    a826:	8f 90       	pop	r8
    a828:	7f 90       	pop	r7
    a82a:	6f 90       	pop	r6
    a82c:	08 95       	ret

0000a82e <TMR_SR_cmdGetFrequencyHopTableOption>:
    a82e:	0f 93       	push	r16
    a830:	1f 93       	push	r17
    a832:	cf 93       	push	r28
    a834:	df 93       	push	r29
    a836:	cd b7       	in	r28, 0x3d	; 61
    a838:	de b7       	in	r29, 0x3e	; 62
    a83a:	da 95       	dec	r29
    a83c:	0f b6       	in	r0, 0x3f	; 63
    a83e:	f8 94       	cli
    a840:	de bf       	out	0x3e, r29	; 62
    a842:	0f be       	out	0x3f, r0	; 63
    a844:	cd bf       	out	0x3d, r28	; 61
    a846:	8b 01       	movw	r16, r22
    a848:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    a84c:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    a850:	55 e6       	ldi	r21, 0x65	; 101
    a852:	5b 83       	std	Y+3, r21	; 0x03
    a854:	2e 5f       	subi	r18, 0xFE	; 254
    a856:	3f 4f       	sbci	r19, 0xFF	; 255
    a858:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    a85c:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    a860:	4c 83       	std	Y+4, r20	; 0x04
    a862:	44 e0       	ldi	r20, 0x04	; 4
    a864:	be 01       	movw	r22, r28
    a866:	6f 5f       	subi	r22, 0xFF	; 255
    a868:	7f 4f       	sbci	r23, 0xFF	; 255
    a86a:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    a86e:	61 15       	cp	r22, r1
    a870:	71 05       	cpc	r23, r1
    a872:	81 05       	cpc	r24, r1
    a874:	91 05       	cpc	r25, r1
    a876:	61 f5       	brne	.+88     	; 0xa8d0 <TMR_SR_cmdGetFrequencyHopTableOption+0xa2>
    a878:	8f 81       	ldd	r24, Y+7	; 0x07
    a87a:	90 e0       	ldi	r25, 0x00	; 0
    a87c:	a0 e0       	ldi	r26, 0x00	; 0
    a87e:	b0 e0       	ldi	r27, 0x00	; 0
    a880:	78 2f       	mov	r23, r24
    a882:	66 27       	eor	r22, r22
    a884:	55 27       	eor	r21, r21
    a886:	44 27       	eor	r20, r20
    a888:	98 85       	ldd	r25, Y+8	; 0x08
    a88a:	89 2f       	mov	r24, r25
    a88c:	90 e0       	ldi	r25, 0x00	; 0
    a88e:	a0 e0       	ldi	r26, 0x00	; 0
    a890:	b0 e0       	ldi	r27, 0x00	; 0
    a892:	dc 01       	movw	r26, r24
    a894:	99 27       	eor	r25, r25
    a896:	88 27       	eor	r24, r24
    a898:	84 2b       	or	r24, r20
    a89a:	95 2b       	or	r25, r21
    a89c:	a6 2b       	or	r26, r22
    a89e:	b7 2b       	or	r27, r23
    a8a0:	49 85       	ldd	r20, Y+9	; 0x09
    a8a2:	50 e0       	ldi	r21, 0x00	; 0
    a8a4:	60 e0       	ldi	r22, 0x00	; 0
    a8a6:	70 e0       	ldi	r23, 0x00	; 0
    a8a8:	76 2f       	mov	r23, r22
    a8aa:	65 2f       	mov	r22, r21
    a8ac:	54 2f       	mov	r21, r20
    a8ae:	44 27       	eor	r20, r20
    a8b0:	84 2b       	or	r24, r20
    a8b2:	95 2b       	or	r25, r21
    a8b4:	a6 2b       	or	r26, r22
    a8b6:	b7 2b       	or	r27, r23
    a8b8:	2a 85       	ldd	r18, Y+10	; 0x0a
    a8ba:	82 2b       	or	r24, r18
    a8bc:	f8 01       	movw	r30, r16
    a8be:	80 83       	st	Z, r24
    a8c0:	91 83       	std	Z+1, r25	; 0x01
    a8c2:	a2 83       	std	Z+2, r26	; 0x02
    a8c4:	b3 83       	std	Z+3, r27	; 0x03
    a8c6:	40 e0       	ldi	r20, 0x00	; 0
    a8c8:	30 e0       	ldi	r19, 0x00	; 0
    a8ca:	20 e0       	ldi	r18, 0x00	; 0
    a8cc:	90 e0       	ldi	r25, 0x00	; 0
    a8ce:	03 c0       	rjmp	.+6      	; 0xa8d6 <TMR_SR_cmdGetFrequencyHopTableOption+0xa8>
    a8d0:	46 2f       	mov	r20, r22
    a8d2:	37 2f       	mov	r19, r23
    a8d4:	28 2f       	mov	r18, r24
    a8d6:	64 2f       	mov	r22, r20
    a8d8:	73 2f       	mov	r23, r19
    a8da:	82 2f       	mov	r24, r18
    a8dc:	d3 95       	inc	r29
    a8de:	0f b6       	in	r0, 0x3f	; 63
    a8e0:	f8 94       	cli
    a8e2:	de bf       	out	0x3e, r29	; 62
    a8e4:	0f be       	out	0x3f, r0	; 63
    a8e6:	cd bf       	out	0x3d, r28	; 61
    a8e8:	df 91       	pop	r29
    a8ea:	cf 91       	pop	r28
    a8ec:	1f 91       	pop	r17
    a8ee:	0f 91       	pop	r16
    a8f0:	08 95       	ret

0000a8f2 <TMR_SR_cmdGetFrequencyHopTime>:
    a8f2:	41 e0       	ldi	r20, 0x01	; 1
    a8f4:	9c cf       	rjmp	.-200    	; 0xa82e <TMR_SR_cmdGetFrequencyHopTableOption>
    a8f6:	08 95       	ret

0000a8f8 <TMR_SR_cmdGetQuantizationStep>:
    a8f8:	42 e0       	ldi	r20, 0x02	; 2
    a8fa:	99 cf       	rjmp	.-206    	; 0xa82e <TMR_SR_cmdGetFrequencyHopTableOption>
    a8fc:	08 95       	ret

0000a8fe <TMR_SR_cmdGetMinimumFrequency>:
    a8fe:	43 e0       	ldi	r20, 0x03	; 3
    a900:	96 cf       	rjmp	.-212    	; 0xa82e <TMR_SR_cmdGetFrequencyHopTableOption>
    a902:	08 95       	ret

0000a904 <TMR_SR_cmdGetGPIO>:
    a904:	ef 92       	push	r14
    a906:	ff 92       	push	r15
    a908:	0f 93       	push	r16
    a90a:	1f 93       	push	r17
    a90c:	cf 93       	push	r28
    a90e:	df 93       	push	r29
    a910:	cd b7       	in	r28, 0x3d	; 61
    a912:	de b7       	in	r29, 0x3e	; 62
    a914:	da 95       	dec	r29
    a916:	0f b6       	in	r0, 0x3f	; 63
    a918:	f8 94       	cli
    a91a:	de bf       	out	0x3e, r29	; 62
    a91c:	0f be       	out	0x3f, r0	; 63
    a91e:	cd bf       	out	0x3d, r28	; 61
    a920:	7b 01       	movw	r14, r22
    a922:	8a 01       	movw	r16, r20
    a924:	be 01       	movw	r22, r28
    a926:	6f 5f       	subi	r22, 0xFF	; 255
    a928:	7f 4f       	sbci	r23, 0xFF	; 255
    a92a:	20 e0       	ldi	r18, 0x00	; 0
    a92c:	31 e0       	ldi	r19, 0x01	; 1
    a92e:	fb 01       	movw	r30, r22
    a930:	a9 01       	movw	r20, r18
    a932:	11 92       	st	Z+, r1
    a934:	41 50       	subi	r20, 0x01	; 1
    a936:	50 40       	sbci	r21, 0x00	; 0
    a938:	e1 f7       	brne	.-8      	; 0xa932 <TMR_SR_cmdGetGPIO+0x2e>
    a93a:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    a93e:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    a942:	46 e6       	ldi	r20, 0x66	; 102
    a944:	4b 83       	std	Y+3, r20	; 0x03
    a946:	2e 5f       	subi	r18, 0xFE	; 254
    a948:	3f 4f       	sbci	r19, 0xFF	; 255
    a94a:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    a94e:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    a952:	21 e0       	ldi	r18, 0x01	; 1
    a954:	2c 83       	std	Y+4, r18	; 0x04
    a956:	2a 83       	std	Y+2, r18	; 0x02
    a958:	fc 01       	movw	r30, r24
    a95a:	e0 52       	subi	r30, 0x20	; 32
    a95c:	fe 4f       	sbci	r31, 0xFE	; 254
    a95e:	20 81       	ld	r18, Z
    a960:	31 81       	ldd	r19, Z+1	; 0x01
    a962:	42 81       	ldd	r20, Z+2	; 0x02
    a964:	53 81       	ldd	r21, Z+3	; 0x03
    a966:	0e 94 e3 35 	call	0x6bc6	; 0x6bc6 <TMR_SR_sendTimeout>
    a96a:	61 15       	cp	r22, r1
    a96c:	71 05       	cpc	r23, r1
    a96e:	81 05       	cpc	r24, r1
    a970:	91 05       	cpc	r25, r1
    a972:	09 f0       	breq	.+2      	; 0xa976 <TMR_SR_cmdGetGPIO+0x72>
    a974:	46 c0       	rjmp	.+140    	; 0xaa02 <TMR_SR_cmdGetGPIO+0xfe>
    a976:	8a 81       	ldd	r24, Y+2	; 0x02
    a978:	90 e0       	ldi	r25, 0x00	; 0
    a97a:	01 97       	sbiw	r24, 0x01	; 1
    a97c:	63 e0       	ldi	r22, 0x03	; 3
    a97e:	70 e0       	ldi	r23, 0x00	; 0
    a980:	0e 94 9b 74 	call	0xe936	; 0xe936 <__divmodhi4>
    a984:	f7 01       	movw	r30, r14
    a986:	50 81       	ld	r21, Z
    a988:	56 17       	cp	r21, r22
    a98a:	08 f0       	brcs	.+2      	; 0xa98e <TMR_SR_cmdGetGPIO+0x8a>
    a98c:	56 2f       	mov	r21, r22
    a98e:	86 e0       	ldi	r24, 0x06	; 6
    a990:	90 e0       	ldi	r25, 0x00	; 0
    a992:	2e c0       	rjmp	.+92     	; 0xa9f0 <TMR_SR_cmdGetGPIO+0xec>
    a994:	e9 2f       	mov	r30, r25
    a996:	f0 e0       	ldi	r31, 0x00	; 0
    a998:	ee 0f       	add	r30, r30
    a99a:	ff 1f       	adc	r31, r31
    a99c:	ee 0f       	add	r30, r30
    a99e:	ff 1f       	adc	r31, r31
    a9a0:	e0 0f       	add	r30, r16
    a9a2:	f1 1f       	adc	r31, r17
    a9a4:	a1 e0       	ldi	r26, 0x01	; 1
    a9a6:	b0 e0       	ldi	r27, 0x00	; 0
    a9a8:	ac 0f       	add	r26, r28
    a9aa:	bd 1f       	adc	r27, r29
    a9ac:	a8 0f       	add	r26, r24
    a9ae:	b1 1d       	adc	r27, r1
    a9b0:	2c 91       	ld	r18, X
    a9b2:	20 83       	st	Z, r18
    a9b4:	32 e0       	ldi	r19, 0x02	; 2
    a9b6:	38 0f       	add	r19, r24
    a9b8:	21 e0       	ldi	r18, 0x01	; 1
    a9ba:	28 0f       	add	r18, r24
    a9bc:	a1 e0       	ldi	r26, 0x01	; 1
    a9be:	b0 e0       	ldi	r27, 0x00	; 0
    a9c0:	ac 0f       	add	r26, r28
    a9c2:	bd 1f       	adc	r27, r29
    a9c4:	a2 0f       	add	r26, r18
    a9c6:	b1 1d       	adc	r27, r1
    a9c8:	4c 91       	ld	r20, X
    a9ca:	21 e0       	ldi	r18, 0x01	; 1
    a9cc:	41 30       	cpi	r20, 0x01	; 1
    a9ce:	09 f0       	breq	.+2      	; 0xa9d2 <TMR_SR_cmdGetGPIO+0xce>
    a9d0:	20 e0       	ldi	r18, 0x00	; 0
    a9d2:	23 83       	std	Z+3, r18	; 0x03
    a9d4:	8d 5f       	subi	r24, 0xFD	; 253
    a9d6:	a1 e0       	ldi	r26, 0x01	; 1
    a9d8:	b0 e0       	ldi	r27, 0x00	; 0
    a9da:	ac 0f       	add	r26, r28
    a9dc:	bd 1f       	adc	r27, r29
    a9de:	a3 0f       	add	r26, r19
    a9e0:	b1 1d       	adc	r27, r1
    a9e2:	3c 91       	ld	r19, X
    a9e4:	21 e0       	ldi	r18, 0x01	; 1
    a9e6:	31 30       	cpi	r19, 0x01	; 1
    a9e8:	09 f0       	breq	.+2      	; 0xa9ec <TMR_SR_cmdGetGPIO+0xe8>
    a9ea:	20 e0       	ldi	r18, 0x00	; 0
    a9ec:	21 83       	std	Z+1, r18	; 0x01
    a9ee:	9f 5f       	subi	r25, 0xFF	; 255
    a9f0:	95 17       	cp	r25, r21
    a9f2:	80 f2       	brcs	.-96     	; 0xa994 <TMR_SR_cmdGetGPIO+0x90>
    a9f4:	f7 01       	movw	r30, r14
    a9f6:	50 83       	st	Z, r21
    a9f8:	40 e0       	ldi	r20, 0x00	; 0
    a9fa:	30 e0       	ldi	r19, 0x00	; 0
    a9fc:	20 e0       	ldi	r18, 0x00	; 0
    a9fe:	90 e0       	ldi	r25, 0x00	; 0
    aa00:	03 c0       	rjmp	.+6      	; 0xaa08 <TMR_SR_cmdGetGPIO+0x104>
    aa02:	46 2f       	mov	r20, r22
    aa04:	37 2f       	mov	r19, r23
    aa06:	28 2f       	mov	r18, r24
    aa08:	64 2f       	mov	r22, r20
    aa0a:	73 2f       	mov	r23, r19
    aa0c:	82 2f       	mov	r24, r18
    aa0e:	d3 95       	inc	r29
    aa10:	0f b6       	in	r0, 0x3f	; 63
    aa12:	f8 94       	cli
    aa14:	de bf       	out	0x3e, r29	; 62
    aa16:	0f be       	out	0x3f, r0	; 63
    aa18:	cd bf       	out	0x3d, r28	; 61
    aa1a:	df 91       	pop	r29
    aa1c:	cf 91       	pop	r28
    aa1e:	1f 91       	pop	r17
    aa20:	0f 91       	pop	r16
    aa22:	ff 90       	pop	r15
    aa24:	ef 90       	pop	r14
    aa26:	08 95       	ret

0000aa28 <TMR_SR_cmdGetGPIODirection>:
    aa28:	0f 93       	push	r16
    aa2a:	1f 93       	push	r17
    aa2c:	cf 93       	push	r28
    aa2e:	df 93       	push	r29
    aa30:	cd b7       	in	r28, 0x3d	; 61
    aa32:	de b7       	in	r29, 0x3e	; 62
    aa34:	da 95       	dec	r29
    aa36:	0f b6       	in	r0, 0x3f	; 63
    aa38:	f8 94       	cli
    aa3a:	de bf       	out	0x3e, r29	; 62
    aa3c:	0f be       	out	0x3f, r0	; 63
    aa3e:	cd bf       	out	0x3d, r28	; 61
    aa40:	8a 01       	movw	r16, r20
    aa42:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    aa46:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    aa4a:	46 e9       	ldi	r20, 0x96	; 150
    aa4c:	4b 83       	std	Y+3, r20	; 0x03
    aa4e:	2e 5f       	subi	r18, 0xFE	; 254
    aa50:	3f 4f       	sbci	r19, 0xFF	; 255
    aa52:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    aa56:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    aa5a:	6c 83       	std	Y+4, r22	; 0x04
    aa5c:	44 e0       	ldi	r20, 0x04	; 4
    aa5e:	be 01       	movw	r22, r28
    aa60:	6f 5f       	subi	r22, 0xFF	; 255
    aa62:	7f 4f       	sbci	r23, 0xFF	; 255
    aa64:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    aa68:	61 15       	cp	r22, r1
    aa6a:	71 05       	cpc	r23, r1
    aa6c:	81 05       	cpc	r24, r1
    aa6e:	91 05       	cpc	r25, r1
    aa70:	61 f4       	brne	.+24     	; 0xaa8a <TMR_SR_cmdGetGPIODirection+0x62>
    aa72:	9f 81       	ldd	r25, Y+7	; 0x07
    aa74:	81 e0       	ldi	r24, 0x01	; 1
    aa76:	91 30       	cpi	r25, 0x01	; 1
    aa78:	09 f0       	breq	.+2      	; 0xaa7c <TMR_SR_cmdGetGPIODirection+0x54>
    aa7a:	80 e0       	ldi	r24, 0x00	; 0
    aa7c:	f8 01       	movw	r30, r16
    aa7e:	80 83       	st	Z, r24
    aa80:	40 e0       	ldi	r20, 0x00	; 0
    aa82:	30 e0       	ldi	r19, 0x00	; 0
    aa84:	20 e0       	ldi	r18, 0x00	; 0
    aa86:	90 e0       	ldi	r25, 0x00	; 0
    aa88:	03 c0       	rjmp	.+6      	; 0xaa90 <TMR_SR_cmdGetGPIODirection+0x68>
    aa8a:	46 2f       	mov	r20, r22
    aa8c:	37 2f       	mov	r19, r23
    aa8e:	28 2f       	mov	r18, r24
    aa90:	64 2f       	mov	r22, r20
    aa92:	73 2f       	mov	r23, r19
    aa94:	82 2f       	mov	r24, r18
    aa96:	d3 95       	inc	r29
    aa98:	0f b6       	in	r0, 0x3f	; 63
    aa9a:	f8 94       	cli
    aa9c:	de bf       	out	0x3e, r29	; 62
    aa9e:	0f be       	out	0x3f, r0	; 63
    aaa0:	cd bf       	out	0x3d, r28	; 61
    aaa2:	df 91       	pop	r29
    aaa4:	cf 91       	pop	r28
    aaa6:	1f 91       	pop	r17
    aaa8:	0f 91       	pop	r16
    aaaa:	08 95       	ret

0000aaac <TMR_SR_cmdSetGPIODirection>:
    aaac:	cf 93       	push	r28
    aaae:	df 93       	push	r29
    aab0:	cd b7       	in	r28, 0x3d	; 61
    aab2:	de b7       	in	r29, 0x3e	; 62
    aab4:	da 95       	dec	r29
    aab6:	0f b6       	in	r0, 0x3f	; 63
    aab8:	f8 94       	cli
    aaba:	de bf       	out	0x3e, r29	; 62
    aabc:	0f be       	out	0x3f, r0	; 63
    aabe:	cd bf       	out	0x3d, r28	; 61
    aac0:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    aac4:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    aac8:	56 e9       	ldi	r21, 0x96	; 150
    aaca:	5b 83       	std	Y+3, r21	; 0x03
    aacc:	51 e0       	ldi	r21, 0x01	; 1
    aace:	5c 83       	std	Y+4, r21	; 0x04
    aad0:	6d 83       	std	Y+5, r22	; 0x05
    aad2:	4e 83       	std	Y+6, r20	; 0x06
    aad4:	2b 5f       	subi	r18, 0xFB	; 251
    aad6:	3f 4f       	sbci	r19, 0xFF	; 255
    aad8:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    aadc:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    aae0:	1f 82       	std	Y+7, r1	; 0x07
    aae2:	47 e0       	ldi	r20, 0x07	; 7
    aae4:	be 01       	movw	r22, r28
    aae6:	6f 5f       	subi	r22, 0xFF	; 255
    aae8:	7f 4f       	sbci	r23, 0xFF	; 255
    aaea:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    aaee:	61 15       	cp	r22, r1
    aaf0:	71 05       	cpc	r23, r1
    aaf2:	81 05       	cpc	r24, r1
    aaf4:	91 05       	cpc	r25, r1
    aaf6:	29 f4       	brne	.+10     	; 0xab02 <TMR_SR_cmdSetGPIODirection+0x56>
    aaf8:	40 e0       	ldi	r20, 0x00	; 0
    aafa:	30 e0       	ldi	r19, 0x00	; 0
    aafc:	20 e0       	ldi	r18, 0x00	; 0
    aafe:	90 e0       	ldi	r25, 0x00	; 0
    ab00:	03 c0       	rjmp	.+6      	; 0xab08 <TMR_SR_cmdSetGPIODirection+0x5c>
    ab02:	46 2f       	mov	r20, r22
    ab04:	37 2f       	mov	r19, r23
    ab06:	28 2f       	mov	r18, r24
    ab08:	64 2f       	mov	r22, r20
    ab0a:	73 2f       	mov	r23, r19
    ab0c:	82 2f       	mov	r24, r18
    ab0e:	d3 95       	inc	r29
    ab10:	0f b6       	in	r0, 0x3f	; 63
    ab12:	f8 94       	cli
    ab14:	de bf       	out	0x3e, r29	; 62
    ab16:	0f be       	out	0x3f, r0	; 63
    ab18:	cd bf       	out	0x3d, r28	; 61
    ab1a:	df 91       	pop	r29
    ab1c:	cf 91       	pop	r28
    ab1e:	08 95       	ret

0000ab20 <TMR_SR_cmdGetProtocolList>:
    ab20:	0f 93       	push	r16
    ab22:	1f 93       	push	r17
    ab24:	cf 93       	push	r28
    ab26:	df 93       	push	r29
    ab28:	cd b7       	in	r28, 0x3d	; 61
    ab2a:	de b7       	in	r29, 0x3e	; 62
    ab2c:	da 95       	dec	r29
    ab2e:	0f b6       	in	r0, 0x3f	; 63
    ab30:	f8 94       	cli
    ab32:	de bf       	out	0x3e, r29	; 62
    ab34:	0f be       	out	0x3f, r0	; 63
    ab36:	cd bf       	out	0x3d, r28	; 61
    ab38:	8b 01       	movw	r16, r22
    ab3a:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    ab3e:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    ab42:	43 e6       	ldi	r20, 0x63	; 99
    ab44:	4b 83       	std	Y+3, r20	; 0x03
    ab46:	2e 5f       	subi	r18, 0xFE	; 254
    ab48:	3f 4f       	sbci	r19, 0xFF	; 255
    ab4a:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    ab4e:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    ab52:	21 e0       	ldi	r18, 0x01	; 1
    ab54:	2c 83       	std	Y+4, r18	; 0x04
    ab56:	44 e0       	ldi	r20, 0x04	; 4
    ab58:	be 01       	movw	r22, r28
    ab5a:	6f 5f       	subi	r22, 0xFF	; 255
    ab5c:	7f 4f       	sbci	r23, 0xFF	; 255
    ab5e:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    ab62:	61 15       	cp	r22, r1
    ab64:	71 05       	cpc	r23, r1
    ab66:	81 05       	cpc	r24, r1
    ab68:	91 05       	cpc	r25, r1
    ab6a:	91 f5       	brne	.+100    	; 0xabd0 <TMR_SR_cmdGetProtocolList+0xb0>
    ab6c:	d8 01       	movw	r26, r16
    ab6e:	13 96       	adiw	r26, 0x03	; 3
    ab70:	1c 92       	st	X, r1
    ab72:	40 e0       	ldi	r20, 0x00	; 0
    ab74:	20 c0       	rjmp	.+64     	; 0xabb6 <TMR_SR_cmdGetProtocolList+0x96>
    ab76:	d8 01       	movw	r26, r16
    ab78:	13 96       	adiw	r26, 0x03	; 3
    ab7a:	ec 91       	ld	r30, X
    ab7c:	13 97       	sbiw	r26, 0x03	; 3
    ab7e:	81 e0       	ldi	r24, 0x01	; 1
    ab80:	8e 0f       	add	r24, r30
    ab82:	13 96       	adiw	r26, 0x03	; 3
    ab84:	8c 93       	st	X, r24
    ab86:	13 97       	sbiw	r26, 0x03	; 3
    ab88:	12 96       	adiw	r26, 0x02	; 2
    ab8a:	9c 91       	ld	r25, X
    ab8c:	12 97       	sbiw	r26, 0x02	; 2
    ab8e:	98 17       	cp	r25, r24
    ab90:	88 f0       	brcs	.+34     	; 0xabb4 <TMR_SR_cmdGetProtocolList+0x94>
    ab92:	6d 91       	ld	r22, X+
    ab94:	7c 91       	ld	r23, X
    ab96:	e8 2f       	mov	r30, r24
    ab98:	f0 e0       	ldi	r31, 0x00	; 0
    ab9a:	31 97       	sbiw	r30, 0x01	; 1
    ab9c:	e6 0f       	add	r30, r22
    ab9e:	f7 1f       	adc	r31, r23
    aba0:	29 5f       	subi	r18, 0xF9	; 249
    aba2:	3f 4f       	sbci	r19, 0xFF	; 255
    aba4:	a1 e0       	ldi	r26, 0x01	; 1
    aba6:	b0 e0       	ldi	r27, 0x00	; 0
    aba8:	ac 0f       	add	r26, r28
    abaa:	bd 1f       	adc	r27, r29
    abac:	a2 0f       	add	r26, r18
    abae:	b3 1f       	adc	r27, r19
    abb0:	8c 91       	ld	r24, X
    abb2:	80 83       	st	Z, r24
    abb4:	4e 5f       	subi	r20, 0xFE	; 254
    abb6:	24 2f       	mov	r18, r20
    abb8:	30 e0       	ldi	r19, 0x00	; 0
    abba:	8a 81       	ldd	r24, Y+2	; 0x02
    abbc:	90 e0       	ldi	r25, 0x00	; 0
    abbe:	01 97       	sbiw	r24, 0x01	; 1
    abc0:	28 17       	cp	r18, r24
    abc2:	39 07       	cpc	r19, r25
    abc4:	c4 f2       	brlt	.-80     	; 0xab76 <TMR_SR_cmdGetProtocolList+0x56>
    abc6:	40 e0       	ldi	r20, 0x00	; 0
    abc8:	30 e0       	ldi	r19, 0x00	; 0
    abca:	20 e0       	ldi	r18, 0x00	; 0
    abcc:	90 e0       	ldi	r25, 0x00	; 0
    abce:	03 c0       	rjmp	.+6      	; 0xabd6 <TMR_SR_cmdGetProtocolList+0xb6>
    abd0:	46 2f       	mov	r20, r22
    abd2:	37 2f       	mov	r19, r23
    abd4:	28 2f       	mov	r18, r24
    abd6:	64 2f       	mov	r22, r20
    abd8:	73 2f       	mov	r23, r19
    abda:	82 2f       	mov	r24, r18
    abdc:	d3 95       	inc	r29
    abde:	0f b6       	in	r0, 0x3f	; 63
    abe0:	f8 94       	cli
    abe2:	de bf       	out	0x3e, r29	; 62
    abe4:	0f be       	out	0x3f, r0	; 63
    abe6:	cd bf       	out	0x3d, r28	; 61
    abe8:	df 91       	pop	r29
    abea:	cf 91       	pop	r28
    abec:	1f 91       	pop	r17
    abee:	0f 91       	pop	r16
    abf0:	08 95       	ret

0000abf2 <TMR_SR_cmdGetCurrentProtocol>:
    abf2:	0f 93       	push	r16
    abf4:	1f 93       	push	r17
    abf6:	cf 93       	push	r28
    abf8:	df 93       	push	r29
    abfa:	cd b7       	in	r28, 0x3d	; 61
    abfc:	de b7       	in	r29, 0x3e	; 62
    abfe:	da 95       	dec	r29
    ac00:	0f b6       	in	r0, 0x3f	; 63
    ac02:	f8 94       	cli
    ac04:	de bf       	out	0x3e, r29	; 62
    ac06:	0f be       	out	0x3f, r0	; 63
    ac08:	cd bf       	out	0x3d, r28	; 61
    ac0a:	8b 01       	movw	r16, r22
    ac0c:	43 e6       	ldi	r20, 0x63	; 99
    ac0e:	be 01       	movw	r22, r28
    ac10:	6f 5f       	subi	r22, 0xFF	; 255
    ac12:	7f 4f       	sbci	r23, 0xFF	; 255
    ac14:	0e 94 8d 36 	call	0x6d1a	; 0x6d1a <TMR_SR_callSendCmd>
    ac18:	61 15       	cp	r22, r1
    ac1a:	71 05       	cpc	r23, r1
    ac1c:	81 05       	cpc	r24, r1
    ac1e:	91 05       	cpc	r25, r1
    ac20:	41 f4       	brne	.+16     	; 0xac32 <TMR_SR_cmdGetCurrentProtocol+0x40>
    ac22:	8f 81       	ldd	r24, Y+7	; 0x07
    ac24:	f8 01       	movw	r30, r16
    ac26:	80 83       	st	Z, r24
    ac28:	40 e0       	ldi	r20, 0x00	; 0
    ac2a:	30 e0       	ldi	r19, 0x00	; 0
    ac2c:	20 e0       	ldi	r18, 0x00	; 0
    ac2e:	90 e0       	ldi	r25, 0x00	; 0
    ac30:	03 c0       	rjmp	.+6      	; 0xac38 <TMR_SR_cmdGetCurrentProtocol+0x46>
    ac32:	46 2f       	mov	r20, r22
    ac34:	37 2f       	mov	r19, r23
    ac36:	28 2f       	mov	r18, r24
    ac38:	64 2f       	mov	r22, r20
    ac3a:	73 2f       	mov	r23, r19
    ac3c:	82 2f       	mov	r24, r18
    ac3e:	d3 95       	inc	r29
    ac40:	0f b6       	in	r0, 0x3f	; 63
    ac42:	f8 94       	cli
    ac44:	de bf       	out	0x3e, r29	; 62
    ac46:	0f be       	out	0x3f, r0	; 63
    ac48:	cd bf       	out	0x3d, r28	; 61
    ac4a:	df 91       	pop	r29
    ac4c:	cf 91       	pop	r28
    ac4e:	1f 91       	pop	r17
    ac50:	0f 91       	pop	r16
    ac52:	08 95       	ret

0000ac54 <TMR_SR_cmdGetRegion>:
    ac54:	0f 93       	push	r16
    ac56:	1f 93       	push	r17
    ac58:	cf 93       	push	r28
    ac5a:	df 93       	push	r29
    ac5c:	cd b7       	in	r28, 0x3d	; 61
    ac5e:	de b7       	in	r29, 0x3e	; 62
    ac60:	da 95       	dec	r29
    ac62:	0f b6       	in	r0, 0x3f	; 63
    ac64:	f8 94       	cli
    ac66:	de bf       	out	0x3e, r29	; 62
    ac68:	0f be       	out	0x3f, r0	; 63
    ac6a:	cd bf       	out	0x3d, r28	; 61
    ac6c:	8b 01       	movw	r16, r22
    ac6e:	47 e6       	ldi	r20, 0x67	; 103
    ac70:	be 01       	movw	r22, r28
    ac72:	6f 5f       	subi	r22, 0xFF	; 255
    ac74:	7f 4f       	sbci	r23, 0xFF	; 255
    ac76:	0e 94 8d 36 	call	0x6d1a	; 0x6d1a <TMR_SR_callSendCmd>
    ac7a:	61 15       	cp	r22, r1
    ac7c:	71 05       	cpc	r23, r1
    ac7e:	81 05       	cpc	r24, r1
    ac80:	91 05       	cpc	r25, r1
    ac82:	41 f4       	brne	.+16     	; 0xac94 <TMR_SR_cmdGetRegion+0x40>
    ac84:	8e 81       	ldd	r24, Y+6	; 0x06
    ac86:	f8 01       	movw	r30, r16
    ac88:	80 83       	st	Z, r24
    ac8a:	40 e0       	ldi	r20, 0x00	; 0
    ac8c:	30 e0       	ldi	r19, 0x00	; 0
    ac8e:	20 e0       	ldi	r18, 0x00	; 0
    ac90:	90 e0       	ldi	r25, 0x00	; 0
    ac92:	03 c0       	rjmp	.+6      	; 0xac9a <TMR_SR_cmdGetRegion+0x46>
    ac94:	46 2f       	mov	r20, r22
    ac96:	37 2f       	mov	r19, r23
    ac98:	28 2f       	mov	r18, r24
    ac9a:	64 2f       	mov	r22, r20
    ac9c:	73 2f       	mov	r23, r19
    ac9e:	82 2f       	mov	r24, r18
    aca0:	d3 95       	inc	r29
    aca2:	0f b6       	in	r0, 0x3f	; 63
    aca4:	f8 94       	cli
    aca6:	de bf       	out	0x3e, r29	; 62
    aca8:	0f be       	out	0x3f, r0	; 63
    acaa:	cd bf       	out	0x3d, r28	; 61
    acac:	df 91       	pop	r29
    acae:	cf 91       	pop	r28
    acb0:	1f 91       	pop	r17
    acb2:	0f 91       	pop	r16
    acb4:	08 95       	ret

0000acb6 <TMR_SR_cmdGetRegionConfiguration>:
    acb6:	ef 92       	push	r14
    acb8:	ff 92       	push	r15
    acba:	1f 93       	push	r17
    acbc:	cf 93       	push	r28
    acbe:	df 93       	push	r29
    acc0:	cd b7       	in	r28, 0x3d	; 61
    acc2:	de b7       	in	r29, 0x3e	; 62
    acc4:	da 95       	dec	r29
    acc6:	0f b6       	in	r0, 0x3f	; 63
    acc8:	f8 94       	cli
    acca:	de bf       	out	0x3e, r29	; 62
    accc:	0f be       	out	0x3f, r0	; 63
    acce:	cd bf       	out	0x3d, r28	; 61
    acd0:	16 2f       	mov	r17, r22
    acd2:	7a 01       	movw	r14, r20
    acd4:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    acd8:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    acdc:	47 e6       	ldi	r20, 0x67	; 103
    acde:	4b 83       	std	Y+3, r20	; 0x03
    ace0:	41 e0       	ldi	r20, 0x01	; 1
    ace2:	4c 83       	std	Y+4, r20	; 0x04
    ace4:	2d 5f       	subi	r18, 0xFD	; 253
    ace6:	3f 4f       	sbci	r19, 0xFF	; 255
    ace8:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    acec:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    acf0:	6d 83       	std	Y+5, r22	; 0x05
    acf2:	45 e0       	ldi	r20, 0x05	; 5
    acf4:	be 01       	movw	r22, r28
    acf6:	6f 5f       	subi	r22, 0xFF	; 255
    acf8:	7f 4f       	sbci	r23, 0xFF	; 255
    acfa:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    acfe:	61 15       	cp	r22, r1
    ad00:	71 05       	cpc	r23, r1
    ad02:	81 05       	cpc	r24, r1
    ad04:	91 05       	cpc	r25, r1
    ad06:	b1 f5       	brne	.+108    	; 0xad74 <TMR_SR_cmdGetRegionConfiguration+0xbe>
    ad08:	89 85       	ldd	r24, Y+9	; 0x09
    ad0a:	11 34       	cpi	r17, 0x41	; 65
    ad0c:	a1 f0       	breq	.+40     	; 0xad36 <TMR_SR_cmdGetRegionConfiguration+0x80>
    ad0e:	18 f4       	brcc	.+6      	; 0xad16 <TMR_SR_cmdGetRegionConfiguration+0x60>
    ad10:	10 34       	cpi	r17, 0x40	; 64
    ad12:	31 f0       	breq	.+12     	; 0xad20 <TMR_SR_cmdGetRegionConfiguration+0x6a>
    ad14:	33 c0       	rjmp	.+102    	; 0xad7c <TMR_SR_cmdGetRegionConfiguration+0xc6>
    ad16:	12 34       	cpi	r17, 0x42	; 66
    ad18:	a9 f0       	breq	.+42     	; 0xad44 <TMR_SR_cmdGetRegionConfiguration+0x8e>
    ad1a:	13 34       	cpi	r17, 0x43	; 67
    ad1c:	f1 f0       	breq	.+60     	; 0xad5a <TMR_SR_cmdGetRegionConfiguration+0xa4>
    ad1e:	2e c0       	rjmp	.+92     	; 0xad7c <TMR_SR_cmdGetRegionConfiguration+0xc6>
    ad20:	91 e0       	ldi	r25, 0x01	; 1
    ad22:	81 30       	cpi	r24, 0x01	; 1
    ad24:	09 f0       	breq	.+2      	; 0xad28 <TMR_SR_cmdGetRegionConfiguration+0x72>
    ad26:	90 e0       	ldi	r25, 0x00	; 0
    ad28:	f7 01       	movw	r30, r14
    ad2a:	90 83       	st	Z, r25
    ad2c:	40 e0       	ldi	r20, 0x00	; 0
    ad2e:	30 e0       	ldi	r19, 0x00	; 0
    ad30:	20 e0       	ldi	r18, 0x00	; 0
    ad32:	90 e0       	ldi	r25, 0x00	; 0
    ad34:	27 c0       	rjmp	.+78     	; 0xad84 <TMR_SR_cmdGetRegionConfiguration+0xce>
    ad36:	f7 01       	movw	r30, r14
    ad38:	80 83       	st	Z, r24
    ad3a:	40 e0       	ldi	r20, 0x00	; 0
    ad3c:	30 e0       	ldi	r19, 0x00	; 0
    ad3e:	20 e0       	ldi	r18, 0x00	; 0
    ad40:	90 e0       	ldi	r25, 0x00	; 0
    ad42:	20 c0       	rjmp	.+64     	; 0xad84 <TMR_SR_cmdGetRegionConfiguration+0xce>
    ad44:	91 e0       	ldi	r25, 0x01	; 1
    ad46:	81 30       	cpi	r24, 0x01	; 1
    ad48:	09 f0       	breq	.+2      	; 0xad4c <TMR_SR_cmdGetRegionConfiguration+0x96>
    ad4a:	90 e0       	ldi	r25, 0x00	; 0
    ad4c:	f7 01       	movw	r30, r14
    ad4e:	90 83       	st	Z, r25
    ad50:	40 e0       	ldi	r20, 0x00	; 0
    ad52:	30 e0       	ldi	r19, 0x00	; 0
    ad54:	20 e0       	ldi	r18, 0x00	; 0
    ad56:	90 e0       	ldi	r25, 0x00	; 0
    ad58:	15 c0       	rjmp	.+42     	; 0xad84 <TMR_SR_cmdGetRegionConfiguration+0xce>
    ad5a:	90 e0       	ldi	r25, 0x00	; 0
    ad5c:	98 2f       	mov	r25, r24
    ad5e:	88 27       	eor	r24, r24
    ad60:	2a 85       	ldd	r18, Y+10	; 0x0a
    ad62:	82 2b       	or	r24, r18
    ad64:	f7 01       	movw	r30, r14
    ad66:	91 83       	std	Z+1, r25	; 0x01
    ad68:	80 83       	st	Z, r24
    ad6a:	40 e0       	ldi	r20, 0x00	; 0
    ad6c:	30 e0       	ldi	r19, 0x00	; 0
    ad6e:	20 e0       	ldi	r18, 0x00	; 0
    ad70:	90 e0       	ldi	r25, 0x00	; 0
    ad72:	08 c0       	rjmp	.+16     	; 0xad84 <TMR_SR_cmdGetRegionConfiguration+0xce>
    ad74:	46 2f       	mov	r20, r22
    ad76:	37 2f       	mov	r19, r23
    ad78:	28 2f       	mov	r18, r24
    ad7a:	04 c0       	rjmp	.+8      	; 0xad84 <TMR_SR_cmdGetRegionConfiguration+0xce>
    ad7c:	49 e0       	ldi	r20, 0x09	; 9
    ad7e:	30 e0       	ldi	r19, 0x00	; 0
    ad80:	20 e0       	ldi	r18, 0x00	; 0
    ad82:	93 e0       	ldi	r25, 0x03	; 3
    ad84:	64 2f       	mov	r22, r20
    ad86:	73 2f       	mov	r23, r19
    ad88:	82 2f       	mov	r24, r18
    ad8a:	d3 95       	inc	r29
    ad8c:	0f b6       	in	r0, 0x3f	; 63
    ad8e:	f8 94       	cli
    ad90:	de bf       	out	0x3e, r29	; 62
    ad92:	0f be       	out	0x3f, r0	; 63
    ad94:	cd bf       	out	0x3d, r28	; 61
    ad96:	df 91       	pop	r29
    ad98:	cf 91       	pop	r28
    ad9a:	1f 91       	pop	r17
    ad9c:	ff 90       	pop	r15
    ad9e:	ef 90       	pop	r14
    ada0:	08 95       	ret

0000ada2 <TMR_SR_cmdGetPowerMode>:
    ada2:	0f 93       	push	r16
    ada4:	1f 93       	push	r17
    ada6:	cf 93       	push	r28
    ada8:	df 93       	push	r29
    adaa:	cd b7       	in	r28, 0x3d	; 61
    adac:	de b7       	in	r29, 0x3e	; 62
    adae:	da 95       	dec	r29
    adb0:	0f b6       	in	r0, 0x3f	; 63
    adb2:	f8 94       	cli
    adb4:	de bf       	out	0x3e, r29	; 62
    adb6:	0f be       	out	0x3f, r0	; 63
    adb8:	cd bf       	out	0x3d, r28	; 61
    adba:	8b 01       	movw	r16, r22
    adbc:	48 e6       	ldi	r20, 0x68	; 104
    adbe:	be 01       	movw	r22, r28
    adc0:	6f 5f       	subi	r22, 0xFF	; 255
    adc2:	7f 4f       	sbci	r23, 0xFF	; 255
    adc4:	0e 94 8d 36 	call	0x6d1a	; 0x6d1a <TMR_SR_callSendCmd>
    adc8:	61 15       	cp	r22, r1
    adca:	71 05       	cpc	r23, r1
    adcc:	81 05       	cpc	r24, r1
    adce:	91 05       	cpc	r25, r1
    add0:	41 f4       	brne	.+16     	; 0xade2 <TMR_SR_cmdGetPowerMode+0x40>
    add2:	8e 81       	ldd	r24, Y+6	; 0x06
    add4:	f8 01       	movw	r30, r16
    add6:	80 83       	st	Z, r24
    add8:	40 e0       	ldi	r20, 0x00	; 0
    adda:	30 e0       	ldi	r19, 0x00	; 0
    addc:	20 e0       	ldi	r18, 0x00	; 0
    adde:	90 e0       	ldi	r25, 0x00	; 0
    ade0:	03 c0       	rjmp	.+6      	; 0xade8 <TMR_SR_cmdGetPowerMode+0x46>
    ade2:	46 2f       	mov	r20, r22
    ade4:	37 2f       	mov	r19, r23
    ade6:	28 2f       	mov	r18, r24
    ade8:	64 2f       	mov	r22, r20
    adea:	73 2f       	mov	r23, r19
    adec:	82 2f       	mov	r24, r18
    adee:	d3 95       	inc	r29
    adf0:	0f b6       	in	r0, 0x3f	; 63
    adf2:	f8 94       	cli
    adf4:	de bf       	out	0x3e, r29	; 62
    adf6:	0f be       	out	0x3f, r0	; 63
    adf8:	cd bf       	out	0x3d, r28	; 61
    adfa:	df 91       	pop	r29
    adfc:	cf 91       	pop	r28
    adfe:	1f 91       	pop	r17
    ae00:	0f 91       	pop	r16
    ae02:	08 95       	ret

0000ae04 <TMR_SR_cmdGetUserMode>:
    ae04:	0f 93       	push	r16
    ae06:	1f 93       	push	r17
    ae08:	cf 93       	push	r28
    ae0a:	df 93       	push	r29
    ae0c:	cd b7       	in	r28, 0x3d	; 61
    ae0e:	de b7       	in	r29, 0x3e	; 62
    ae10:	da 95       	dec	r29
    ae12:	0f b6       	in	r0, 0x3f	; 63
    ae14:	f8 94       	cli
    ae16:	de bf       	out	0x3e, r29	; 62
    ae18:	0f be       	out	0x3f, r0	; 63
    ae1a:	cd bf       	out	0x3d, r28	; 61
    ae1c:	8b 01       	movw	r16, r22
    ae1e:	49 e6       	ldi	r20, 0x69	; 105
    ae20:	be 01       	movw	r22, r28
    ae22:	6f 5f       	subi	r22, 0xFF	; 255
    ae24:	7f 4f       	sbci	r23, 0xFF	; 255
    ae26:	0e 94 8d 36 	call	0x6d1a	; 0x6d1a <TMR_SR_callSendCmd>
    ae2a:	61 15       	cp	r22, r1
    ae2c:	71 05       	cpc	r23, r1
    ae2e:	81 05       	cpc	r24, r1
    ae30:	91 05       	cpc	r25, r1
    ae32:	41 f4       	brne	.+16     	; 0xae44 <TMR_SR_cmdGetUserMode+0x40>
    ae34:	8e 81       	ldd	r24, Y+6	; 0x06
    ae36:	f8 01       	movw	r30, r16
    ae38:	80 83       	st	Z, r24
    ae3a:	40 e0       	ldi	r20, 0x00	; 0
    ae3c:	30 e0       	ldi	r19, 0x00	; 0
    ae3e:	20 e0       	ldi	r18, 0x00	; 0
    ae40:	90 e0       	ldi	r25, 0x00	; 0
    ae42:	03 c0       	rjmp	.+6      	; 0xae4a <TMR_SR_cmdGetUserMode+0x46>
    ae44:	46 2f       	mov	r20, r22
    ae46:	37 2f       	mov	r19, r23
    ae48:	28 2f       	mov	r18, r24
    ae4a:	64 2f       	mov	r22, r20
    ae4c:	73 2f       	mov	r23, r19
    ae4e:	82 2f       	mov	r24, r18
    ae50:	d3 95       	inc	r29
    ae52:	0f b6       	in	r0, 0x3f	; 63
    ae54:	f8 94       	cli
    ae56:	de bf       	out	0x3e, r29	; 62
    ae58:	0f be       	out	0x3f, r0	; 63
    ae5a:	cd bf       	out	0x3d, r28	; 61
    ae5c:	df 91       	pop	r29
    ae5e:	cf 91       	pop	r28
    ae60:	1f 91       	pop	r17
    ae62:	0f 91       	pop	r16
    ae64:	08 95       	ret

0000ae66 <TMR_SR_cmdGetReaderConfiguration>:
    ae66:	ef 92       	push	r14
    ae68:	ff 92       	push	r15
    ae6a:	1f 93       	push	r17
    ae6c:	cf 93       	push	r28
    ae6e:	df 93       	push	r29
    ae70:	cd b7       	in	r28, 0x3d	; 61
    ae72:	de b7       	in	r29, 0x3e	; 62
    ae74:	da 95       	dec	r29
    ae76:	0f b6       	in	r0, 0x3f	; 63
    ae78:	f8 94       	cli
    ae7a:	de bf       	out	0x3e, r29	; 62
    ae7c:	0f be       	out	0x3f, r0	; 63
    ae7e:	cd bf       	out	0x3d, r28	; 61
    ae80:	16 2f       	mov	r17, r22
    ae82:	7a 01       	movw	r14, r20
    ae84:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    ae88:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    ae8c:	4a e6       	ldi	r20, 0x6A	; 106
    ae8e:	4b 83       	std	Y+3, r20	; 0x03
    ae90:	41 e0       	ldi	r20, 0x01	; 1
    ae92:	4c 83       	std	Y+4, r20	; 0x04
    ae94:	2d 5f       	subi	r18, 0xFD	; 253
    ae96:	3f 4f       	sbci	r19, 0xFF	; 255
    ae98:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    ae9c:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    aea0:	6d 83       	std	Y+5, r22	; 0x05
    aea2:	45 e0       	ldi	r20, 0x05	; 5
    aea4:	be 01       	movw	r22, r28
    aea6:	6f 5f       	subi	r22, 0xFF	; 255
    aea8:	7f 4f       	sbci	r23, 0xFF	; 255
    aeaa:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    aeae:	61 15       	cp	r22, r1
    aeb0:	71 05       	cpc	r23, r1
    aeb2:	81 05       	cpc	r24, r1
    aeb4:	91 05       	cpc	r25, r1
    aeb6:	09 f0       	breq	.+2      	; 0xaeba <TMR_SR_cmdGetReaderConfiguration+0x54>
    aeb8:	59 c0       	rjmp	.+178    	; 0xaf6c <TMR_SR_cmdGetReaderConfiguration+0x106>
    aeba:	28 85       	ldd	r18, Y+8	; 0x08
    aebc:	81 2f       	mov	r24, r17
    aebe:	90 e0       	ldi	r25, 0x00	; 0
    aec0:	82 32       	cpi	r24, 0x22	; 34
    aec2:	91 05       	cpc	r25, r1
    aec4:	08 f0       	brcs	.+2      	; 0xaec8 <TMR_SR_cmdGetReaderConfiguration+0x62>
    aec6:	56 c0       	rjmp	.+172    	; 0xaf74 <TMR_SR_cmdGetReaderConfiguration+0x10e>
    aec8:	fc 01       	movw	r30, r24
    aeca:	e3 5b       	subi	r30, 0xB3	; 179
    aecc:	fd 4f       	sbci	r31, 0xFD	; 253
    aece:	0c 94 d0 74 	jmp	0xe9a0	; 0xe9a0 <__tablejump2__>
    aed2:	f7 01       	movw	r30, r14
    aed4:	20 83       	st	Z, r18
    aed6:	40 e0       	ldi	r20, 0x00	; 0
    aed8:	30 e0       	ldi	r19, 0x00	; 0
    aeda:	20 e0       	ldi	r18, 0x00	; 0
    aedc:	90 e0       	ldi	r25, 0x00	; 0
    aede:	4e c0       	rjmp	.+156    	; 0xaf7c <TMR_SR_cmdGetReaderConfiguration+0x116>
    aee0:	81 e0       	ldi	r24, 0x01	; 1
    aee2:	21 11       	cpse	r18, r1
    aee4:	80 e0       	ldi	r24, 0x00	; 0
    aee6:	f7 01       	movw	r30, r14
    aee8:	80 83       	st	Z, r24
    aeea:	40 e0       	ldi	r20, 0x00	; 0
    aeec:	30 e0       	ldi	r19, 0x00	; 0
    aeee:	20 e0       	ldi	r18, 0x00	; 0
    aef0:	90 e0       	ldi	r25, 0x00	; 0
    aef2:	44 c0       	rjmp	.+136    	; 0xaf7c <TMR_SR_cmdGetReaderConfiguration+0x116>
    aef4:	81 e0       	ldi	r24, 0x01	; 1
    aef6:	21 30       	cpi	r18, 0x01	; 1
    aef8:	09 f0       	breq	.+2      	; 0xaefc <TMR_SR_cmdGetReaderConfiguration+0x96>
    aefa:	80 e0       	ldi	r24, 0x00	; 0
    aefc:	f7 01       	movw	r30, r14
    aefe:	80 83       	st	Z, r24
    af00:	40 e0       	ldi	r20, 0x00	; 0
    af02:	30 e0       	ldi	r19, 0x00	; 0
    af04:	20 e0       	ldi	r18, 0x00	; 0
    af06:	90 e0       	ldi	r25, 0x00	; 0
    af08:	39 c0       	rjmp	.+114    	; 0xaf7c <TMR_SR_cmdGetReaderConfiguration+0x116>
    af0a:	f7 01       	movw	r30, r14
    af0c:	20 83       	st	Z, r18
    af0e:	40 e0       	ldi	r20, 0x00	; 0
    af10:	30 e0       	ldi	r19, 0x00	; 0
    af12:	20 e0       	ldi	r18, 0x00	; 0
    af14:	90 e0       	ldi	r25, 0x00	; 0
    af16:	32 c0       	rjmp	.+100    	; 0xaf7c <TMR_SR_cmdGetReaderConfiguration+0x116>
    af18:	82 2f       	mov	r24, r18
    af1a:	90 e0       	ldi	r25, 0x00	; 0
    af1c:	a0 e0       	ldi	r26, 0x00	; 0
    af1e:	b0 e0       	ldi	r27, 0x00	; 0
    af20:	f7 01       	movw	r30, r14
    af22:	80 83       	st	Z, r24
    af24:	91 83       	std	Z+1, r25	; 0x01
    af26:	a2 83       	std	Z+2, r26	; 0x02
    af28:	b3 83       	std	Z+3, r27	; 0x03
    af2a:	40 e0       	ldi	r20, 0x00	; 0
    af2c:	30 e0       	ldi	r19, 0x00	; 0
    af2e:	20 e0       	ldi	r18, 0x00	; 0
    af30:	90 e0       	ldi	r25, 0x00	; 0
    af32:	24 c0       	rjmp	.+72     	; 0xaf7c <TMR_SR_cmdGetReaderConfiguration+0x116>
    af34:	82 2f       	mov	r24, r18
    af36:	90 e0       	ldi	r25, 0x00	; 0
    af38:	98 2f       	mov	r25, r24
    af3a:	88 27       	eor	r24, r24
    af3c:	29 85       	ldd	r18, Y+9	; 0x09
    af3e:	82 2b       	or	r24, r18
    af40:	f7 01       	movw	r30, r14
    af42:	91 83       	std	Z+1, r25	; 0x01
    af44:	80 83       	st	Z, r24
    af46:	40 e0       	ldi	r20, 0x00	; 0
    af48:	30 e0       	ldi	r19, 0x00	; 0
    af4a:	20 e0       	ldi	r18, 0x00	; 0
    af4c:	90 e0       	ldi	r25, 0x00	; 0
    af4e:	16 c0       	rjmp	.+44     	; 0xaf7c <TMR_SR_cmdGetReaderConfiguration+0x116>
    af50:	82 2f       	mov	r24, r18
    af52:	90 e0       	ldi	r25, 0x00	; 0
    af54:	98 2f       	mov	r25, r24
    af56:	88 27       	eor	r24, r24
    af58:	29 85       	ldd	r18, Y+9	; 0x09
    af5a:	82 2b       	or	r24, r18
    af5c:	f7 01       	movw	r30, r14
    af5e:	91 83       	std	Z+1, r25	; 0x01
    af60:	80 83       	st	Z, r24
    af62:	40 e0       	ldi	r20, 0x00	; 0
    af64:	30 e0       	ldi	r19, 0x00	; 0
    af66:	20 e0       	ldi	r18, 0x00	; 0
    af68:	90 e0       	ldi	r25, 0x00	; 0
    af6a:	08 c0       	rjmp	.+16     	; 0xaf7c <TMR_SR_cmdGetReaderConfiguration+0x116>
    af6c:	46 2f       	mov	r20, r22
    af6e:	37 2f       	mov	r19, r23
    af70:	28 2f       	mov	r18, r24
    af72:	04 c0       	rjmp	.+8      	; 0xaf7c <TMR_SR_cmdGetReaderConfiguration+0x116>
    af74:	49 e0       	ldi	r20, 0x09	; 9
    af76:	30 e0       	ldi	r19, 0x00	; 0
    af78:	20 e0       	ldi	r18, 0x00	; 0
    af7a:	93 e0       	ldi	r25, 0x03	; 3
    af7c:	64 2f       	mov	r22, r20
    af7e:	73 2f       	mov	r23, r19
    af80:	82 2f       	mov	r24, r18
    af82:	d3 95       	inc	r29
    af84:	0f b6       	in	r0, 0x3f	; 63
    af86:	f8 94       	cli
    af88:	de bf       	out	0x3e, r29	; 62
    af8a:	0f be       	out	0x3f, r0	; 63
    af8c:	cd bf       	out	0x3d, r28	; 61
    af8e:	df 91       	pop	r29
    af90:	cf 91       	pop	r28
    af92:	1f 91       	pop	r17
    af94:	ff 90       	pop	r15
    af96:	ef 90       	pop	r14
    af98:	08 95       	ret

0000af9a <TMR_SR_cmdGetProtocolConfiguration>:
    af9a:	ef 92       	push	r14
    af9c:	ff 92       	push	r15
    af9e:	0f 93       	push	r16
    afa0:	1f 93       	push	r17
    afa2:	cf 93       	push	r28
    afa4:	df 93       	push	r29
    afa6:	cd b7       	in	r28, 0x3d	; 61
    afa8:	de b7       	in	r29, 0x3e	; 62
    afaa:	c8 50       	subi	r28, 0x08	; 8
    afac:	d1 40       	sbci	r29, 0x01	; 1
    afae:	0f b6       	in	r0, 0x3f	; 63
    afb0:	f8 94       	cli
    afb2:	de bf       	out	0x3e, r29	; 62
    afb4:	0f be       	out	0x3f, r0	; 63
    afb6:	cd bf       	out	0x3d, r28	; 61
    afb8:	79 01       	movw	r14, r18
    afba:	a0 91 d6 0b 	lds	r26, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    afbe:	b0 91 d7 0b 	lds	r27, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    afc2:	3b e6       	ldi	r19, 0x6B	; 107
    afc4:	3b 83       	std	Y+3, r19	; 0x03
    afc6:	12 96       	adiw	r26, 0x02	; 2
    afc8:	b0 93 d7 0b 	sts	0x0BD7, r27	; 0x800bd7 <totalMsgIdx+0x1>
    afcc:	a0 93 d6 0b 	sts	0x0BD6, r26	; 0x800bd6 <totalMsgIdx>
    afd0:	6c 83       	std	Y+4, r22	; 0x04
    afd2:	14 2f       	mov	r17, r20
    afd4:	4a 30       	cpi	r20, 0x0A	; 10
    afd6:	91 f0       	breq	.+36     	; 0xaffc <TMR_SR_cmdGetProtocolConfiguration+0x62>
    afd8:	28 f4       	brcc	.+10     	; 0xafe4 <TMR_SR_cmdGetProtocolConfiguration+0x4a>
    afda:	45 30       	cpi	r20, 0x05	; 5
    afdc:	59 f0       	breq	.+22     	; 0xaff4 <TMR_SR_cmdGetProtocolConfiguration+0x5a>
    afde:	49 30       	cpi	r20, 0x09	; 9
    afe0:	59 f0       	breq	.+22     	; 0xaff8 <TMR_SR_cmdGetProtocolConfiguration+0x5e>
    afe2:	42 c2       	rjmp	.+1156   	; 0xb468 <TMR_SR_cmdGetProtocolConfiguration+0x4ce>
    afe4:	44 31       	cpi	r20, 0x14	; 20
    afe6:	71 f0       	breq	.+28     	; 0xb004 <TMR_SR_cmdGetProtocolConfiguration+0x6a>
    afe8:	45 31       	cpi	r20, 0x15	; 21
    afea:	71 f0       	breq	.+28     	; 0xb008 <TMR_SR_cmdGetProtocolConfiguration+0x6e>
    afec:	4b 30       	cpi	r20, 0x0B	; 11
    afee:	09 f0       	breq	.+2      	; 0xaff2 <TMR_SR_cmdGetProtocolConfiguration+0x58>
    aff0:	3b c2       	rjmp	.+1142   	; 0xb468 <TMR_SR_cmdGetProtocolConfiguration+0x4ce>
    aff2:	06 c0       	rjmp	.+12     	; 0xb000 <TMR_SR_cmdGetProtocolConfiguration+0x66>
    aff4:	05 2f       	mov	r16, r21
    aff6:	09 c0       	rjmp	.+18     	; 0xb00a <TMR_SR_cmdGetProtocolConfiguration+0x70>
    aff8:	05 2f       	mov	r16, r21
    affa:	07 c0       	rjmp	.+14     	; 0xb00a <TMR_SR_cmdGetProtocolConfiguration+0x70>
    affc:	05 2f       	mov	r16, r21
    affe:	05 c0       	rjmp	.+10     	; 0xb00a <TMR_SR_cmdGetProtocolConfiguration+0x70>
    b000:	05 2f       	mov	r16, r21
    b002:	03 c0       	rjmp	.+6      	; 0xb00a <TMR_SR_cmdGetProtocolConfiguration+0x70>
    b004:	05 2f       	mov	r16, r21
    b006:	01 c0       	rjmp	.+2      	; 0xb00a <TMR_SR_cmdGetProtocolConfiguration+0x70>
    b008:	05 2f       	mov	r16, r21
    b00a:	11 96       	adiw	r26, 0x01	; 1
    b00c:	b0 93 d7 0b 	sts	0x0BD7, r27	; 0x800bd7 <totalMsgIdx+0x1>
    b010:	a0 93 d6 0b 	sts	0x0BD6, r26	; 0x800bd6 <totalMsgIdx>
    b014:	0d 83       	std	Y+5, r16	; 0x05
    b016:	45 e0       	ldi	r20, 0x05	; 5
    b018:	be 01       	movw	r22, r28
    b01a:	6f 5f       	subi	r22, 0xFF	; 255
    b01c:	7f 4f       	sbci	r23, 0xFF	; 255
    b01e:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    b022:	61 15       	cp	r22, r1
    b024:	71 05       	cpc	r23, r1
    b026:	81 05       	cpc	r24, r1
    b028:	91 05       	cpc	r25, r1
    b02a:	09 f0       	breq	.+2      	; 0xb02e <TMR_SR_cmdGetProtocolConfiguration+0x94>
    b02c:	22 c2       	rjmp	.+1092   	; 0xb472 <TMR_SR_cmdGetProtocolConfiguration+0x4d8>
    b02e:	15 30       	cpi	r17, 0x05	; 5
    b030:	09 f0       	breq	.+2      	; 0xb034 <TMR_SR_cmdGetProtocolConfiguration+0x9a>
    b032:	04 c1       	rjmp	.+520    	; 0xb23c <TMR_SR_cmdGetProtocolConfiguration+0x2a2>
    b034:	88 85       	ldd	r24, Y+8	; 0x08
    b036:	10 e0       	ldi	r17, 0x00	; 0
    b038:	08 31       	cpi	r16, 0x18	; 24
    b03a:	11 05       	cpc	r17, r1
    b03c:	08 f0       	brcs	.+2      	; 0xb040 <TMR_SR_cmdGetProtocolConfiguration+0xa6>
    b03e:	1d c2       	rjmp	.+1082   	; 0xb47a <TMR_SR_cmdGetProtocolConfiguration+0x4e0>
    b040:	f8 01       	movw	r30, r16
    b042:	e1 59       	subi	r30, 0x91	; 145
    b044:	fd 4f       	sbci	r31, 0xFD	; 253
    b046:	0c 94 d0 74 	jmp	0xe9a0	; 0xe9a0 <__tablejump2__>
    b04a:	f7 01       	movw	r30, r14
    b04c:	80 83       	st	Z, r24
    b04e:	40 e0       	ldi	r20, 0x00	; 0
    b050:	30 e0       	ldi	r19, 0x00	; 0
    b052:	20 e0       	ldi	r18, 0x00	; 0
    b054:	90 e0       	ldi	r25, 0x00	; 0
    b056:	1f c2       	rjmp	.+1086   	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b058:	f7 01       	movw	r30, r14
    b05a:	80 83       	st	Z, r24
    b05c:	40 e0       	ldi	r20, 0x00	; 0
    b05e:	30 e0       	ldi	r19, 0x00	; 0
    b060:	20 e0       	ldi	r18, 0x00	; 0
    b062:	90 e0       	ldi	r25, 0x00	; 0
    b064:	18 c2       	rjmp	.+1072   	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b066:	90 e0       	ldi	r25, 0x00	; 0
    b068:	f7 01       	movw	r30, r14
    b06a:	91 83       	std	Z+1, r25	; 0x01
    b06c:	80 83       	st	Z, r24
    b06e:	40 e0       	ldi	r20, 0x00	; 0
    b070:	30 e0       	ldi	r19, 0x00	; 0
    b072:	20 e0       	ldi	r18, 0x00	; 0
    b074:	90 e0       	ldi	r25, 0x00	; 0
    b076:	0f c2       	rjmp	.+1054   	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b078:	f7 01       	movw	r30, r14
    b07a:	80 83       	st	Z, r24
    b07c:	40 e0       	ldi	r20, 0x00	; 0
    b07e:	30 e0       	ldi	r19, 0x00	; 0
    b080:	20 e0       	ldi	r18, 0x00	; 0
    b082:	90 e0       	ldi	r25, 0x00	; 0
    b084:	08 c2       	rjmp	.+1040   	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b086:	f7 01       	movw	r30, r14
    b088:	80 83       	st	Z, r24
    b08a:	40 e0       	ldi	r20, 0x00	; 0
    b08c:	30 e0       	ldi	r19, 0x00	; 0
    b08e:	20 e0       	ldi	r18, 0x00	; 0
    b090:	90 e0       	ldi	r25, 0x00	; 0
    b092:	01 c2       	rjmp	.+1026   	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b094:	f7 01       	movw	r30, r14
    b096:	80 83       	st	Z, r24
    b098:	40 e0       	ldi	r20, 0x00	; 0
    b09a:	30 e0       	ldi	r19, 0x00	; 0
    b09c:	20 e0       	ldi	r18, 0x00	; 0
    b09e:	90 e0       	ldi	r25, 0x00	; 0
    b0a0:	fa c1       	rjmp	.+1012   	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b0a2:	8b 85       	ldd	r24, Y+11	; 0x0b
    b0a4:	90 e0       	ldi	r25, 0x00	; 0
    b0a6:	a0 e0       	ldi	r26, 0x00	; 0
    b0a8:	b0 e0       	ldi	r27, 0x00	; 0
    b0aa:	78 2f       	mov	r23, r24
    b0ac:	66 27       	eor	r22, r22
    b0ae:	55 27       	eor	r21, r21
    b0b0:	44 27       	eor	r20, r20
    b0b2:	9c 85       	ldd	r25, Y+12	; 0x0c
    b0b4:	89 2f       	mov	r24, r25
    b0b6:	90 e0       	ldi	r25, 0x00	; 0
    b0b8:	a0 e0       	ldi	r26, 0x00	; 0
    b0ba:	b0 e0       	ldi	r27, 0x00	; 0
    b0bc:	dc 01       	movw	r26, r24
    b0be:	99 27       	eor	r25, r25
    b0c0:	88 27       	eor	r24, r24
    b0c2:	84 2b       	or	r24, r20
    b0c4:	95 2b       	or	r25, r21
    b0c6:	a6 2b       	or	r26, r22
    b0c8:	b7 2b       	or	r27, r23
    b0ca:	4d 85       	ldd	r20, Y+13	; 0x0d
    b0cc:	50 e0       	ldi	r21, 0x00	; 0
    b0ce:	60 e0       	ldi	r22, 0x00	; 0
    b0d0:	70 e0       	ldi	r23, 0x00	; 0
    b0d2:	76 2f       	mov	r23, r22
    b0d4:	65 2f       	mov	r22, r21
    b0d6:	54 2f       	mov	r21, r20
    b0d8:	44 27       	eor	r20, r20
    b0da:	84 2b       	or	r24, r20
    b0dc:	95 2b       	or	r25, r21
    b0de:	a6 2b       	or	r26, r22
    b0e0:	b7 2b       	or	r27, r23
    b0e2:	2e 85       	ldd	r18, Y+14	; 0x0e
    b0e4:	82 2b       	or	r24, r18
    b0e6:	f7 01       	movw	r30, r14
    b0e8:	80 83       	st	Z, r24
    b0ea:	91 83       	std	Z+1, r25	; 0x01
    b0ec:	a2 83       	std	Z+2, r26	; 0x02
    b0ee:	b3 83       	std	Z+3, r27	; 0x03
    b0f0:	8f 85       	ldd	r24, Y+15	; 0x0f
    b0f2:	90 e0       	ldi	r25, 0x00	; 0
    b0f4:	a0 e0       	ldi	r26, 0x00	; 0
    b0f6:	b0 e0       	ldi	r27, 0x00	; 0
    b0f8:	78 2f       	mov	r23, r24
    b0fa:	66 27       	eor	r22, r22
    b0fc:	55 27       	eor	r21, r21
    b0fe:	44 27       	eor	r20, r20
    b100:	98 89       	ldd	r25, Y+16	; 0x10
    b102:	89 2f       	mov	r24, r25
    b104:	90 e0       	ldi	r25, 0x00	; 0
    b106:	a0 e0       	ldi	r26, 0x00	; 0
    b108:	b0 e0       	ldi	r27, 0x00	; 0
    b10a:	dc 01       	movw	r26, r24
    b10c:	99 27       	eor	r25, r25
    b10e:	88 27       	eor	r24, r24
    b110:	84 2b       	or	r24, r20
    b112:	95 2b       	or	r25, r21
    b114:	a6 2b       	or	r26, r22
    b116:	b7 2b       	or	r27, r23
    b118:	49 89       	ldd	r20, Y+17	; 0x11
    b11a:	50 e0       	ldi	r21, 0x00	; 0
    b11c:	60 e0       	ldi	r22, 0x00	; 0
    b11e:	70 e0       	ldi	r23, 0x00	; 0
    b120:	76 2f       	mov	r23, r22
    b122:	65 2f       	mov	r22, r21
    b124:	54 2f       	mov	r21, r20
    b126:	44 27       	eor	r20, r20
    b128:	84 2b       	or	r24, r20
    b12a:	95 2b       	or	r25, r21
    b12c:	a6 2b       	or	r26, r22
    b12e:	b7 2b       	or	r27, r23
    b130:	2a 89       	ldd	r18, Y+18	; 0x12
    b132:	82 2b       	or	r24, r18
    b134:	84 83       	std	Z+4, r24	; 0x04
    b136:	95 83       	std	Z+5, r25	; 0x05
    b138:	a6 83       	std	Z+6, r26	; 0x06
    b13a:	b7 83       	std	Z+7, r27	; 0x07
    b13c:	40 e0       	ldi	r20, 0x00	; 0
    b13e:	30 e0       	ldi	r19, 0x00	; 0
    b140:	20 e0       	ldi	r18, 0x00	; 0
    b142:	90 e0       	ldi	r25, 0x00	; 0
    b144:	a8 c1       	rjmp	.+848    	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b146:	90 e0       	ldi	r25, 0x00	; 0
    b148:	98 2f       	mov	r25, r24
    b14a:	88 27       	eor	r24, r24
    b14c:	29 85       	ldd	r18, Y+9	; 0x09
    b14e:	82 2b       	or	r24, r18
    b150:	81 30       	cpi	r24, 0x01	; 1
    b152:	91 05       	cpc	r25, r1
    b154:	01 f1       	breq	.+64     	; 0xb196 <TMR_SR_cmdGetProtocolConfiguration+0x1fc>
    b156:	b8 f0       	brcs	.+46     	; 0xb186 <TMR_SR_cmdGetProtocolConfiguration+0x1ec>
    b158:	81 15       	cp	r24, r1
    b15a:	f1 e0       	ldi	r31, 0x01	; 1
    b15c:	9f 07       	cpc	r25, r31
    b15e:	21 f0       	breq	.+8      	; 0xb168 <TMR_SR_cmdGetProtocolConfiguration+0x1ce>
    b160:	81 30       	cpi	r24, 0x01	; 1
    b162:	91 40       	sbci	r25, 0x01	; 1
    b164:	41 f0       	breq	.+16     	; 0xb176 <TMR_SR_cmdGetProtocolConfiguration+0x1dc>
    b166:	1f c0       	rjmp	.+62     	; 0xb1a6 <TMR_SR_cmdGetProtocolConfiguration+0x20c>
    b168:	f7 01       	movw	r30, r14
    b16a:	10 82       	st	Z, r1
    b16c:	40 e0       	ldi	r20, 0x00	; 0
    b16e:	30 e0       	ldi	r19, 0x00	; 0
    b170:	20 e0       	ldi	r18, 0x00	; 0
    b172:	90 e0       	ldi	r25, 0x00	; 0
    b174:	90 c1       	rjmp	.+800    	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b176:	81 e0       	ldi	r24, 0x01	; 1
    b178:	f7 01       	movw	r30, r14
    b17a:	80 83       	st	Z, r24
    b17c:	40 e0       	ldi	r20, 0x00	; 0
    b17e:	30 e0       	ldi	r19, 0x00	; 0
    b180:	20 e0       	ldi	r18, 0x00	; 0
    b182:	90 e0       	ldi	r25, 0x00	; 0
    b184:	88 c1       	rjmp	.+784    	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b186:	82 e0       	ldi	r24, 0x02	; 2
    b188:	f7 01       	movw	r30, r14
    b18a:	80 83       	st	Z, r24
    b18c:	40 e0       	ldi	r20, 0x00	; 0
    b18e:	30 e0       	ldi	r19, 0x00	; 0
    b190:	20 e0       	ldi	r18, 0x00	; 0
    b192:	90 e0       	ldi	r25, 0x00	; 0
    b194:	80 c1       	rjmp	.+768    	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b196:	83 e0       	ldi	r24, 0x03	; 3
    b198:	f7 01       	movw	r30, r14
    b19a:	80 83       	st	Z, r24
    b19c:	40 e0       	ldi	r20, 0x00	; 0
    b19e:	30 e0       	ldi	r19, 0x00	; 0
    b1a0:	20 e0       	ldi	r18, 0x00	; 0
    b1a2:	90 e0       	ldi	r25, 0x00	; 0
    b1a4:	78 c1       	rjmp	.+752    	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b1a6:	84 e0       	ldi	r24, 0x04	; 4
    b1a8:	f7 01       	movw	r30, r14
    b1aa:	80 83       	st	Z, r24
    b1ac:	40 e0       	ldi	r20, 0x00	; 0
    b1ae:	30 e0       	ldi	r19, 0x00	; 0
    b1b0:	20 e0       	ldi	r18, 0x00	; 0
    b1b2:	90 e0       	ldi	r25, 0x00	; 0
    b1b4:	70 c1       	rjmp	.+736    	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b1b6:	f7 01       	movw	r30, r14
    b1b8:	80 83       	st	Z, r24
    b1ba:	81 30       	cpi	r24, 0x01	; 1
    b1bc:	09 f0       	breq	.+2      	; 0xb1c0 <TMR_SR_cmdGetProtocolConfiguration+0x226>
    b1be:	62 c1       	rjmp	.+708    	; 0xb484 <TMR_SR_cmdGetProtocolConfiguration+0x4ea>
    b1c0:	89 85       	ldd	r24, Y+9	; 0x09
    b1c2:	81 83       	std	Z+1, r24	; 0x01
    b1c4:	40 e0       	ldi	r20, 0x00	; 0
    b1c6:	30 e0       	ldi	r19, 0x00	; 0
    b1c8:	20 e0       	ldi	r18, 0x00	; 0
    b1ca:	90 e0       	ldi	r25, 0x00	; 0
    b1cc:	64 c1       	rjmp	.+712    	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b1ce:	90 e0       	ldi	r25, 0x00	; 0
    b1d0:	a0 e0       	ldi	r26, 0x00	; 0
    b1d2:	b0 e0       	ldi	r27, 0x00	; 0
    b1d4:	b8 2f       	mov	r27, r24
    b1d6:	aa 27       	eor	r26, r26
    b1d8:	99 27       	eor	r25, r25
    b1da:	88 27       	eor	r24, r24
    b1dc:	49 85       	ldd	r20, Y+9	; 0x09
    b1de:	50 e0       	ldi	r21, 0x00	; 0
    b1e0:	60 e0       	ldi	r22, 0x00	; 0
    b1e2:	70 e0       	ldi	r23, 0x00	; 0
    b1e4:	ba 01       	movw	r22, r20
    b1e6:	55 27       	eor	r21, r21
    b1e8:	44 27       	eor	r20, r20
    b1ea:	84 2b       	or	r24, r20
    b1ec:	95 2b       	or	r25, r21
    b1ee:	a6 2b       	or	r26, r22
    b1f0:	b7 2b       	or	r27, r23
    b1f2:	4a 85       	ldd	r20, Y+10	; 0x0a
    b1f4:	50 e0       	ldi	r21, 0x00	; 0
    b1f6:	60 e0       	ldi	r22, 0x00	; 0
    b1f8:	70 e0       	ldi	r23, 0x00	; 0
    b1fa:	76 2f       	mov	r23, r22
    b1fc:	65 2f       	mov	r22, r21
    b1fe:	54 2f       	mov	r21, r20
    b200:	44 27       	eor	r20, r20
    b202:	84 2b       	or	r24, r20
    b204:	95 2b       	or	r25, r21
    b206:	a6 2b       	or	r26, r22
    b208:	b7 2b       	or	r27, r23
    b20a:	2b 85       	ldd	r18, Y+11	; 0x0b
    b20c:	82 2b       	or	r24, r18
    b20e:	f7 01       	movw	r30, r14
    b210:	80 83       	st	Z, r24
    b212:	91 83       	std	Z+1, r25	; 0x01
    b214:	a2 83       	std	Z+2, r26	; 0x02
    b216:	b3 83       	std	Z+3, r27	; 0x03
    b218:	40 e0       	ldi	r20, 0x00	; 0
    b21a:	30 e0       	ldi	r19, 0x00	; 0
    b21c:	20 e0       	ldi	r18, 0x00	; 0
    b21e:	90 e0       	ldi	r25, 0x00	; 0
    b220:	3a c1       	rjmp	.+628    	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b222:	91 e0       	ldi	r25, 0x01	; 1
    b224:	81 11       	cpse	r24, r1
    b226:	01 c0       	rjmp	.+2      	; 0xb22a <TMR_SR_cmdGetProtocolConfiguration+0x290>
    b228:	90 e0       	ldi	r25, 0x00	; 0
    b22a:	f7 01       	movw	r30, r14
    b22c:	90 83       	st	Z, r25
    b22e:	89 85       	ldd	r24, Y+9	; 0x09
    b230:	81 83       	std	Z+1, r24	; 0x01
    b232:	40 e0       	ldi	r20, 0x00	; 0
    b234:	30 e0       	ldi	r19, 0x00	; 0
    b236:	20 e0       	ldi	r18, 0x00	; 0
    b238:	90 e0       	ldi	r25, 0x00	; 0
    b23a:	2d c1       	rjmp	.+602    	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b23c:	19 30       	cpi	r17, 0x09	; 9
    b23e:	e9 f5       	brne	.+122    	; 0xb2ba <TMR_SR_cmdGetProtocolConfiguration+0x320>
    b240:	01 30       	cpi	r16, 0x01	; 1
    b242:	88 f1       	brcs	.+98     	; 0xb2a6 <TMR_SR_cmdGetProtocolConfiguration+0x30c>
    b244:	03 30       	cpi	r16, 0x03	; 3
    b246:	18 f0       	brcs	.+6      	; 0xb24e <TMR_SR_cmdGetProtocolConfiguration+0x2b4>
    b248:	03 30       	cpi	r16, 0x03	; 3
    b24a:	b9 f0       	breq	.+46     	; 0xb27a <TMR_SR_cmdGetProtocolConfiguration+0x2e0>
    b24c:	2c c0       	rjmp	.+88     	; 0xb2a6 <TMR_SR_cmdGetProtocolConfiguration+0x30c>
    b24e:	4a 81       	ldd	r20, Y+2	; 0x02
    b250:	50 e0       	ldi	r21, 0x00	; 0
    b252:	42 50       	subi	r20, 0x02	; 2
    b254:	51 09       	sbc	r21, r1
    b256:	be 01       	movw	r22, r28
    b258:	68 5f       	subi	r22, 0xF8	; 248
    b25a:	7f 4f       	sbci	r23, 0xFF	; 255
    b25c:	ce 01       	movw	r24, r28
    b25e:	8f 5f       	subi	r24, 0xFF	; 255
    b260:	9e 4f       	sbci	r25, 0xFE	; 254
    b262:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    b266:	6a 81       	ldd	r22, Y+2	; 0x02
    b268:	62 50       	subi	r22, 0x02	; 2
    b26a:	ce 01       	movw	r24, r28
    b26c:	8f 5f       	subi	r24, 0xFF	; 255
    b26e:	9e 4f       	sbci	r25, 0xFE	; 254
    b270:	0e 94 3a 6f 	call	0xde74	; 0xde74 <TMR_SR_convertFromEBV>
    b274:	f7 01       	movw	r30, r14
    b276:	20 83       	st	Z, r18
    b278:	1b c0       	rjmp	.+54     	; 0xb2b0 <TMR_SR_cmdGetProtocolConfiguration+0x316>
    b27a:	4a 81       	ldd	r20, Y+2	; 0x02
    b27c:	50 e0       	ldi	r21, 0x00	; 0
    b27e:	42 50       	subi	r20, 0x02	; 2
    b280:	51 09       	sbc	r21, r1
    b282:	be 01       	movw	r22, r28
    b284:	68 5f       	subi	r22, 0xF8	; 248
    b286:	7f 4f       	sbci	r23, 0xFF	; 255
    b288:	ce 01       	movw	r24, r28
    b28a:	8f 5f       	subi	r24, 0xFF	; 255
    b28c:	9e 4f       	sbci	r25, 0xFE	; 254
    b28e:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    b292:	6a 81       	ldd	r22, Y+2	; 0x02
    b294:	62 50       	subi	r22, 0x02	; 2
    b296:	ce 01       	movw	r24, r28
    b298:	8f 5f       	subi	r24, 0xFF	; 255
    b29a:	9e 4f       	sbci	r25, 0xFE	; 254
    b29c:	0e 94 3a 6f 	call	0xde74	; 0xde74 <TMR_SR_convertFromEBV>
    b2a0:	f7 01       	movw	r30, r14
    b2a2:	20 83       	st	Z, r18
    b2a4:	05 c0       	rjmp	.+10     	; 0xb2b0 <TMR_SR_cmdGetProtocolConfiguration+0x316>
    b2a6:	49 e0       	ldi	r20, 0x09	; 9
    b2a8:	30 e0       	ldi	r19, 0x00	; 0
    b2aa:	20 e0       	ldi	r18, 0x00	; 0
    b2ac:	93 e0       	ldi	r25, 0x03	; 3
    b2ae:	f3 c0       	rjmp	.+486    	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b2b0:	40 e0       	ldi	r20, 0x00	; 0
    b2b2:	30 e0       	ldi	r19, 0x00	; 0
    b2b4:	20 e0       	ldi	r18, 0x00	; 0
    b2b6:	90 e0       	ldi	r25, 0x00	; 0
    b2b8:	ee c0       	rjmp	.+476    	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b2ba:	1a 30       	cpi	r17, 0x0A	; 10
    b2bc:	21 f5       	brne	.+72     	; 0xb306 <TMR_SR_cmdGetProtocolConfiguration+0x36c>
    b2be:	5f ef       	ldi	r21, 0xFF	; 255
    b2c0:	50 0f       	add	r21, r16
    b2c2:	52 30       	cpi	r21, 0x02	; 2
    b2c4:	d8 f4       	brcc	.+54     	; 0xb2fc <TMR_SR_cmdGetProtocolConfiguration+0x362>
    b2c6:	4a 81       	ldd	r20, Y+2	; 0x02
    b2c8:	50 e0       	ldi	r21, 0x00	; 0
    b2ca:	42 50       	subi	r20, 0x02	; 2
    b2cc:	51 09       	sbc	r21, r1
    b2ce:	be 01       	movw	r22, r28
    b2d0:	68 5f       	subi	r22, 0xF8	; 248
    b2d2:	7f 4f       	sbci	r23, 0xFF	; 255
    b2d4:	ce 01       	movw	r24, r28
    b2d6:	8f 5f       	subi	r24, 0xFF	; 255
    b2d8:	9e 4f       	sbci	r25, 0xFE	; 254
    b2da:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    b2de:	6a 81       	ldd	r22, Y+2	; 0x02
    b2e0:	62 50       	subi	r22, 0x02	; 2
    b2e2:	ce 01       	movw	r24, r28
    b2e4:	8f 5f       	subi	r24, 0xFF	; 255
    b2e6:	9e 4f       	sbci	r25, 0xFE	; 254
    b2e8:	0e 94 3a 6f 	call	0xde74	; 0xde74 <TMR_SR_convertFromEBV>
    b2ec:	f7 01       	movw	r30, r14
    b2ee:	20 83       	st	Z, r18
    b2f0:	31 83       	std	Z+1, r19	; 0x01
    b2f2:	40 e0       	ldi	r20, 0x00	; 0
    b2f4:	30 e0       	ldi	r19, 0x00	; 0
    b2f6:	20 e0       	ldi	r18, 0x00	; 0
    b2f8:	90 e0       	ldi	r25, 0x00	; 0
    b2fa:	cd c0       	rjmp	.+410    	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b2fc:	49 e0       	ldi	r20, 0x09	; 9
    b2fe:	30 e0       	ldi	r19, 0x00	; 0
    b300:	20 e0       	ldi	r18, 0x00	; 0
    b302:	93 e0       	ldi	r25, 0x03	; 3
    b304:	c8 c0       	rjmp	.+400    	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b306:	1b 30       	cpi	r17, 0x0B	; 11
    b308:	09 f0       	breq	.+2      	; 0xb30c <TMR_SR_cmdGetProtocolConfiguration+0x372>
    b30a:	40 c0       	rjmp	.+128    	; 0xb38c <TMR_SR_cmdGetProtocolConfiguration+0x3f2>
    b30c:	01 30       	cpi	r16, 0x01	; 1
    b30e:	a0 f1       	brcs	.+104    	; 0xb378 <TMR_SR_cmdGetProtocolConfiguration+0x3de>
    b310:	03 30       	cpi	r16, 0x03	; 3
    b312:	18 f0       	brcs	.+6      	; 0xb31a <TMR_SR_cmdGetProtocolConfiguration+0x380>
    b314:	03 30       	cpi	r16, 0x03	; 3
    b316:	d1 f0       	breq	.+52     	; 0xb34c <TMR_SR_cmdGetProtocolConfiguration+0x3b2>
    b318:	2f c0       	rjmp	.+94     	; 0xb378 <TMR_SR_cmdGetProtocolConfiguration+0x3de>
    b31a:	4a 81       	ldd	r20, Y+2	; 0x02
    b31c:	50 e0       	ldi	r21, 0x00	; 0
    b31e:	42 50       	subi	r20, 0x02	; 2
    b320:	51 09       	sbc	r21, r1
    b322:	be 01       	movw	r22, r28
    b324:	68 5f       	subi	r22, 0xF8	; 248
    b326:	7f 4f       	sbci	r23, 0xFF	; 255
    b328:	ce 01       	movw	r24, r28
    b32a:	8f 5f       	subi	r24, 0xFF	; 255
    b32c:	9e 4f       	sbci	r25, 0xFE	; 254
    b32e:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    b332:	6a 81       	ldd	r22, Y+2	; 0x02
    b334:	62 50       	subi	r22, 0x02	; 2
    b336:	ce 01       	movw	r24, r28
    b338:	8f 5f       	subi	r24, 0xFF	; 255
    b33a:	9e 4f       	sbci	r25, 0xFE	; 254
    b33c:	0e 94 3a 6f 	call	0xde74	; 0xde74 <TMR_SR_convertFromEBV>
    b340:	f7 01       	movw	r30, r14
    b342:	20 83       	st	Z, r18
    b344:	31 83       	std	Z+1, r19	; 0x01
    b346:	42 83       	std	Z+2, r20	; 0x02
    b348:	53 83       	std	Z+3, r21	; 0x03
    b34a:	1b c0       	rjmp	.+54     	; 0xb382 <TMR_SR_cmdGetProtocolConfiguration+0x3e8>
    b34c:	4a 81       	ldd	r20, Y+2	; 0x02
    b34e:	50 e0       	ldi	r21, 0x00	; 0
    b350:	42 50       	subi	r20, 0x02	; 2
    b352:	51 09       	sbc	r21, r1
    b354:	be 01       	movw	r22, r28
    b356:	68 5f       	subi	r22, 0xF8	; 248
    b358:	7f 4f       	sbci	r23, 0xFF	; 255
    b35a:	ce 01       	movw	r24, r28
    b35c:	8f 5f       	subi	r24, 0xFF	; 255
    b35e:	9e 4f       	sbci	r25, 0xFE	; 254
    b360:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    b364:	6a 81       	ldd	r22, Y+2	; 0x02
    b366:	62 50       	subi	r22, 0x02	; 2
    b368:	ce 01       	movw	r24, r28
    b36a:	8f 5f       	subi	r24, 0xFF	; 255
    b36c:	9e 4f       	sbci	r25, 0xFE	; 254
    b36e:	0e 94 3a 6f 	call	0xde74	; 0xde74 <TMR_SR_convertFromEBV>
    b372:	f7 01       	movw	r30, r14
    b374:	20 83       	st	Z, r18
    b376:	05 c0       	rjmp	.+10     	; 0xb382 <TMR_SR_cmdGetProtocolConfiguration+0x3e8>
    b378:	49 e0       	ldi	r20, 0x09	; 9
    b37a:	30 e0       	ldi	r19, 0x00	; 0
    b37c:	20 e0       	ldi	r18, 0x00	; 0
    b37e:	93 e0       	ldi	r25, 0x03	; 3
    b380:	8a c0       	rjmp	.+276    	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b382:	40 e0       	ldi	r20, 0x00	; 0
    b384:	30 e0       	ldi	r19, 0x00	; 0
    b386:	20 e0       	ldi	r18, 0x00	; 0
    b388:	90 e0       	ldi	r25, 0x00	; 0
    b38a:	85 c0       	rjmp	.+266    	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b38c:	14 31       	cpi	r17, 0x14	; 20
    b38e:	09 f0       	breq	.+2      	; 0xb392 <TMR_SR_cmdGetProtocolConfiguration+0x3f8>
    b390:	46 c0       	rjmp	.+140    	; 0xb41e <TMR_SR_cmdGetProtocolConfiguration+0x484>
    b392:	03 30       	cpi	r16, 0x03	; 3
    b394:	01 f1       	breq	.+64     	; 0xb3d6 <TMR_SR_cmdGetProtocolConfiguration+0x43c>
    b396:	18 f4       	brcc	.+6      	; 0xb39e <TMR_SR_cmdGetProtocolConfiguration+0x404>
    b398:	01 30       	cpi	r16, 0x01	; 1
    b39a:	20 f4       	brcc	.+8      	; 0xb3a4 <TMR_SR_cmdGetProtocolConfiguration+0x40a>
    b39c:	36 c0       	rjmp	.+108    	; 0xb40a <TMR_SR_cmdGetProtocolConfiguration+0x470>
    b39e:	04 30       	cpi	r16, 0x04	; 4
    b3a0:	81 f1       	breq	.+96     	; 0xb402 <TMR_SR_cmdGetProtocolConfiguration+0x468>
    b3a2:	33 c0       	rjmp	.+102    	; 0xb40a <TMR_SR_cmdGetProtocolConfiguration+0x470>
    b3a4:	4a 81       	ldd	r20, Y+2	; 0x02
    b3a6:	50 e0       	ldi	r21, 0x00	; 0
    b3a8:	42 50       	subi	r20, 0x02	; 2
    b3aa:	51 09       	sbc	r21, r1
    b3ac:	be 01       	movw	r22, r28
    b3ae:	68 5f       	subi	r22, 0xF8	; 248
    b3b0:	7f 4f       	sbci	r23, 0xFF	; 255
    b3b2:	ce 01       	movw	r24, r28
    b3b4:	8f 5f       	subi	r24, 0xFF	; 255
    b3b6:	9e 4f       	sbci	r25, 0xFE	; 254
    b3b8:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    b3bc:	6a 81       	ldd	r22, Y+2	; 0x02
    b3be:	62 50       	subi	r22, 0x02	; 2
    b3c0:	ce 01       	movw	r24, r28
    b3c2:	8f 5f       	subi	r24, 0xFF	; 255
    b3c4:	9e 4f       	sbci	r25, 0xFE	; 254
    b3c6:	0e 94 3a 6f 	call	0xde74	; 0xde74 <TMR_SR_convertFromEBV>
    b3ca:	f7 01       	movw	r30, r14
    b3cc:	20 83       	st	Z, r18
    b3ce:	31 83       	std	Z+1, r19	; 0x01
    b3d0:	42 83       	std	Z+2, r20	; 0x02
    b3d2:	53 83       	std	Z+3, r21	; 0x03
    b3d4:	1f c0       	rjmp	.+62     	; 0xb414 <TMR_SR_cmdGetProtocolConfiguration+0x47a>
    b3d6:	4a 81       	ldd	r20, Y+2	; 0x02
    b3d8:	50 e0       	ldi	r21, 0x00	; 0
    b3da:	42 50       	subi	r20, 0x02	; 2
    b3dc:	51 09       	sbc	r21, r1
    b3de:	be 01       	movw	r22, r28
    b3e0:	68 5f       	subi	r22, 0xF8	; 248
    b3e2:	7f 4f       	sbci	r23, 0xFF	; 255
    b3e4:	ce 01       	movw	r24, r28
    b3e6:	8f 5f       	subi	r24, 0xFF	; 255
    b3e8:	9e 4f       	sbci	r25, 0xFE	; 254
    b3ea:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    b3ee:	6a 81       	ldd	r22, Y+2	; 0x02
    b3f0:	62 50       	subi	r22, 0x02	; 2
    b3f2:	ce 01       	movw	r24, r28
    b3f4:	8f 5f       	subi	r24, 0xFF	; 255
    b3f6:	9e 4f       	sbci	r25, 0xFE	; 254
    b3f8:	0e 94 3a 6f 	call	0xde74	; 0xde74 <TMR_SR_convertFromEBV>
    b3fc:	f7 01       	movw	r30, r14
    b3fe:	20 83       	st	Z, r18
    b400:	09 c0       	rjmp	.+18     	; 0xb414 <TMR_SR_cmdGetProtocolConfiguration+0x47a>
    b402:	88 85       	ldd	r24, Y+8	; 0x08
    b404:	f7 01       	movw	r30, r14
    b406:	80 83       	st	Z, r24
    b408:	05 c0       	rjmp	.+10     	; 0xb414 <TMR_SR_cmdGetProtocolConfiguration+0x47a>
    b40a:	49 e0       	ldi	r20, 0x09	; 9
    b40c:	30 e0       	ldi	r19, 0x00	; 0
    b40e:	20 e0       	ldi	r18, 0x00	; 0
    b410:	93 e0       	ldi	r25, 0x03	; 3
    b412:	41 c0       	rjmp	.+130    	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b414:	40 e0       	ldi	r20, 0x00	; 0
    b416:	30 e0       	ldi	r19, 0x00	; 0
    b418:	20 e0       	ldi	r18, 0x00	; 0
    b41a:	90 e0       	ldi	r25, 0x00	; 0
    b41c:	3c c0       	rjmp	.+120    	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b41e:	15 31       	cpi	r17, 0x15	; 21
    b420:	b1 f5       	brne	.+108    	; 0xb48e <TMR_SR_cmdGetProtocolConfiguration+0x4f4>
    b422:	5f ef       	ldi	r21, 0xFF	; 255
    b424:	50 0f       	add	r21, r16
    b426:	52 30       	cpi	r21, 0x02	; 2
    b428:	d0 f4       	brcc	.+52     	; 0xb45e <TMR_SR_cmdGetProtocolConfiguration+0x4c4>
    b42a:	4a 81       	ldd	r20, Y+2	; 0x02
    b42c:	50 e0       	ldi	r21, 0x00	; 0
    b42e:	42 50       	subi	r20, 0x02	; 2
    b430:	51 09       	sbc	r21, r1
    b432:	be 01       	movw	r22, r28
    b434:	68 5f       	subi	r22, 0xF8	; 248
    b436:	7f 4f       	sbci	r23, 0xFF	; 255
    b438:	ce 01       	movw	r24, r28
    b43a:	8f 5f       	subi	r24, 0xFF	; 255
    b43c:	9e 4f       	sbci	r25, 0xFE	; 254
    b43e:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    b442:	6a 81       	ldd	r22, Y+2	; 0x02
    b444:	62 50       	subi	r22, 0x02	; 2
    b446:	ce 01       	movw	r24, r28
    b448:	8f 5f       	subi	r24, 0xFF	; 255
    b44a:	9e 4f       	sbci	r25, 0xFE	; 254
    b44c:	0e 94 3a 6f 	call	0xde74	; 0xde74 <TMR_SR_convertFromEBV>
    b450:	f7 01       	movw	r30, r14
    b452:	20 83       	st	Z, r18
    b454:	40 e0       	ldi	r20, 0x00	; 0
    b456:	30 e0       	ldi	r19, 0x00	; 0
    b458:	20 e0       	ldi	r18, 0x00	; 0
    b45a:	90 e0       	ldi	r25, 0x00	; 0
    b45c:	1c c0       	rjmp	.+56     	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b45e:	49 e0       	ldi	r20, 0x09	; 9
    b460:	30 e0       	ldi	r19, 0x00	; 0
    b462:	20 e0       	ldi	r18, 0x00	; 0
    b464:	93 e0       	ldi	r25, 0x03	; 3
    b466:	17 c0       	rjmp	.+46     	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b468:	41 e0       	ldi	r20, 0x01	; 1
    b46a:	30 e0       	ldi	r19, 0x00	; 0
    b46c:	20 e0       	ldi	r18, 0x00	; 0
    b46e:	93 e0       	ldi	r25, 0x03	; 3
    b470:	12 c0       	rjmp	.+36     	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b472:	46 2f       	mov	r20, r22
    b474:	37 2f       	mov	r19, r23
    b476:	28 2f       	mov	r18, r24
    b478:	0e c0       	rjmp	.+28     	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b47a:	49 e0       	ldi	r20, 0x09	; 9
    b47c:	30 e0       	ldi	r19, 0x00	; 0
    b47e:	20 e0       	ldi	r18, 0x00	; 0
    b480:	93 e0       	ldi	r25, 0x03	; 3
    b482:	09 c0       	rjmp	.+18     	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b484:	40 e0       	ldi	r20, 0x00	; 0
    b486:	30 e0       	ldi	r19, 0x00	; 0
    b488:	20 e0       	ldi	r18, 0x00	; 0
    b48a:	90 e0       	ldi	r25, 0x00	; 0
    b48c:	04 c0       	rjmp	.+8      	; 0xb496 <TMR_SR_cmdGetProtocolConfiguration+0x4fc>
    b48e:	41 e0       	ldi	r20, 0x01	; 1
    b490:	30 e0       	ldi	r19, 0x00	; 0
    b492:	20 e0       	ldi	r18, 0x00	; 0
    b494:	93 e0       	ldi	r25, 0x03	; 3
    b496:	64 2f       	mov	r22, r20
    b498:	73 2f       	mov	r23, r19
    b49a:	82 2f       	mov	r24, r18
    b49c:	c8 5f       	subi	r28, 0xF8	; 248
    b49e:	de 4f       	sbci	r29, 0xFE	; 254
    b4a0:	0f b6       	in	r0, 0x3f	; 63
    b4a2:	f8 94       	cli
    b4a4:	de bf       	out	0x3e, r29	; 62
    b4a6:	0f be       	out	0x3f, r0	; 63
    b4a8:	cd bf       	out	0x3d, r28	; 61
    b4aa:	df 91       	pop	r29
    b4ac:	cf 91       	pop	r28
    b4ae:	1f 91       	pop	r17
    b4b0:	0f 91       	pop	r16
    b4b2:	ff 90       	pop	r15
    b4b4:	ef 90       	pop	r14
    b4b6:	08 95       	ret

0000b4b8 <TMR_SR_msgSetupMultipleProtocolSearch>:
    b4b8:	2f 92       	push	r2
    b4ba:	3f 92       	push	r3
    b4bc:	4f 92       	push	r4
    b4be:	5f 92       	push	r5
    b4c0:	6f 92       	push	r6
    b4c2:	7f 92       	push	r7
    b4c4:	8f 92       	push	r8
    b4c6:	9f 92       	push	r9
    b4c8:	af 92       	push	r10
    b4ca:	bf 92       	push	r11
    b4cc:	cf 92       	push	r12
    b4ce:	df 92       	push	r13
    b4d0:	ef 92       	push	r14
    b4d2:	ff 92       	push	r15
    b4d4:	0f 93       	push	r16
    b4d6:	1f 93       	push	r17
    b4d8:	cf 93       	push	r28
    b4da:	df 93       	push	r29
    b4dc:	cd b7       	in	r28, 0x3d	; 61
    b4de:	de b7       	in	r29, 0x3e	; 62
    b4e0:	69 97       	sbiw	r28, 0x19	; 25
    b4e2:	0f b6       	in	r0, 0x3f	; 63
    b4e4:	f8 94       	cli
    b4e6:	de bf       	out	0x3e, r29	; 62
    b4e8:	0f be       	out	0x3f, r0	; 63
    b4ea:	cd bf       	out	0x3d, r28	; 61
    b4ec:	2c 01       	movw	r4, r24
    b4ee:	1b 01       	movw	r2, r22
    b4f0:	49 87       	std	Y+9, r20	; 0x09
    b4f2:	3e 83       	std	Y+6, r19	; 0x06
    b4f4:	2d 83       	std	Y+5, r18	; 0x05
    b4f6:	0c 8b       	std	Y+20, r16	; 0x14
    b4f8:	1d 8b       	std	Y+21, r17	; 0x15
    b4fa:	ff 8a       	std	Y+23, r15	; 0x17
    b4fc:	ee 8a       	std	Y+22, r14	; 0x16
    b4fe:	d9 8e       	std	Y+25, r13	; 0x19
    b500:	c8 8e       	std	Y+24, r12	; 0x18
    b502:	aa 8a       	std	Y+18, r10	; 0x12
    b504:	bb 8a       	std	Y+19, r11	; 0x13
    b506:	dc 01       	movw	r26, r24
    b508:	1c 96       	adiw	r26, 0x0c	; 12
    b50a:	8d 91       	ld	r24, X+
    b50c:	9d 91       	ld	r25, X+
    b50e:	0d 90       	ld	r0, X+
    b510:	bc 91       	ld	r27, X
    b512:	a0 2d       	mov	r26, r0
    b514:	8e 87       	std	Y+14, r24	; 0x0e
    b516:	9f 87       	std	Y+15, r25	; 0x0f
    b518:	a8 8b       	std	Y+16, r26	; 0x10
    b51a:	b9 8b       	std	Y+17, r27	; 0x11
    b51c:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    b520:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    b524:	01 96       	adiw	r24, 0x01	; 1
    b526:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    b52a:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    b52e:	83 e0       	ldi	r24, 0x03	; 3
    b530:	89 83       	std	Y+1, r24	; 0x01
    b532:	8f e2       	ldi	r24, 0x2F	; 47
    b534:	fb 01       	movw	r30, r22
    b536:	82 83       	std	Z+2, r24	; 0x02
    b538:	f2 01       	movw	r30, r4
    b53a:	ea 58       	subi	r30, 0x8A	; 138
    b53c:	ff 4f       	sbci	r31, 0xFF	; 255
    b53e:	80 81       	ld	r24, Z
    b540:	88 23       	and	r24, r24
    b542:	41 f1       	breq	.+80     	; 0xb594 <TMR_SR_msgSetupMultipleProtocolSearch+0xdc>
    b544:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    b548:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    b54c:	02 96       	adiw	r24, 0x02	; 2
    b54e:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    b552:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    b556:	99 81       	ldd	r25, Y+1	; 0x01
    b558:	81 e0       	ldi	r24, 0x01	; 1
    b55a:	89 0f       	add	r24, r25
    b55c:	fb 01       	movw	r30, r22
    b55e:	e9 0f       	add	r30, r25
    b560:	f1 1d       	adc	r31, r1
    b562:	10 82       	st	Z, r1
    b564:	21 e0       	ldi	r18, 0x01	; 1
    b566:	28 0f       	add	r18, r24
    b568:	fb 01       	movw	r30, r22
    b56a:	e8 0f       	add	r30, r24
    b56c:	f1 1d       	adc	r31, r1
    b56e:	10 82       	st	Z, r1
    b570:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    b574:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    b578:	01 96       	adiw	r24, 0x01	; 1
    b57a:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    b57e:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    b582:	81 e0       	ldi	r24, 0x01	; 1
    b584:	82 0f       	add	r24, r18
    b586:	89 83       	std	Y+1, r24	; 0x01
    b588:	fb 01       	movw	r30, r22
    b58a:	e2 0f       	add	r30, r18
    b58c:	f1 1d       	adc	r31, r1
    b58e:	81 e0       	ldi	r24, 0x01	; 1
    b590:	80 83       	st	Z, r24
    b592:	40 c0       	rjmp	.+128    	; 0xb614 <TMR_SR_msgSetupMultipleProtocolSearch+0x15c>
    b594:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    b598:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    b59c:	02 96       	adiw	r24, 0x02	; 2
    b59e:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    b5a2:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    b5a6:	99 81       	ldd	r25, Y+1	; 0x01
    b5a8:	81 e0       	ldi	r24, 0x01	; 1
    b5aa:	89 0f       	add	r24, r25
    b5ac:	fb 01       	movw	r30, r22
    b5ae:	e9 0f       	add	r30, r25
    b5b0:	f1 1d       	adc	r31, r1
    b5b2:	9b 89       	ldd	r25, Y+19	; 0x13
    b5b4:	90 83       	st	Z, r25
    b5b6:	31 e0       	ldi	r19, 0x01	; 1
    b5b8:	38 0f       	add	r19, r24
    b5ba:	fb 01       	movw	r30, r22
    b5bc:	e8 0f       	add	r30, r24
    b5be:	f1 1d       	adc	r31, r1
    b5c0:	aa 89       	ldd	r26, Y+18	; 0x12
    b5c2:	a0 83       	st	Z, r26
    b5c4:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    b5c8:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    b5cc:	01 96       	adiw	r24, 0x01	; 1
    b5ce:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    b5d2:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    b5d6:	21 e0       	ldi	r18, 0x01	; 1
    b5d8:	23 0f       	add	r18, r19
    b5da:	fb 01       	movw	r30, r22
    b5dc:	e3 0f       	add	r30, r19
    b5de:	f1 1d       	adc	r31, r1
    b5e0:	81 e1       	ldi	r24, 0x11	; 17
    b5e2:	80 83       	st	Z, r24
    b5e4:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    b5e8:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    b5ec:	02 96       	adiw	r24, 0x02	; 2
    b5ee:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    b5f2:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    b5f6:	81 e0       	ldi	r24, 0x01	; 1
    b5f8:	82 0f       	add	r24, r18
    b5fa:	fb 01       	movw	r30, r22
    b5fc:	e2 0f       	add	r30, r18
    b5fe:	f1 1d       	adc	r31, r1
    b600:	bd 89       	ldd	r27, Y+21	; 0x15
    b602:	b0 83       	st	Z, r27
    b604:	91 e0       	ldi	r25, 0x01	; 1
    b606:	98 0f       	add	r25, r24
    b608:	99 83       	std	Y+1, r25	; 0x01
    b60a:	fb 01       	movw	r30, r22
    b60c:	e8 0f       	add	r30, r24
    b60e:	f1 1d       	adc	r31, r1
    b610:	8c 89       	ldd	r24, Y+20	; 0x14
    b612:	80 83       	st	Z, r24
    b614:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    b618:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    b61c:	01 96       	adiw	r24, 0x01	; 1
    b61e:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    b622:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    b626:	89 81       	ldd	r24, Y+1	; 0x01
    b628:	91 e0       	ldi	r25, 0x01	; 1
    b62a:	98 0f       	add	r25, r24
    b62c:	99 83       	std	Y+1, r25	; 0x01
    b62e:	f1 01       	movw	r30, r2
    b630:	e8 0f       	add	r30, r24
    b632:	f1 1d       	adc	r31, r1
    b634:	99 85       	ldd	r25, Y+9	; 0x09
    b636:	90 83       	st	Z, r25
    b638:	f2 01       	movw	r30, r4
    b63a:	a2 a9       	ldd	r26, Z+50	; 0x32
    b63c:	b3 a9       	ldd	r27, Z+51	; 0x33
    b63e:	8c 91       	ld	r24, X
    b640:	82 30       	cpi	r24, 0x02	; 2
    b642:	91 f5       	brne	.+100    	; 0xb6a8 <TMR_SR_msgSetupMultipleProtocolSearch+0x1f0>
    b644:	e4 50       	subi	r30, 0x04	; 4
    b646:	fa 4f       	sbci	r31, 0xFA	; 250
    b648:	10 82       	st	Z, r1
    b64a:	20 e0       	ldi	r18, 0x00	; 0
    b64c:	27 c0       	rjmp	.+78     	; 0xb69c <TMR_SR_msgSetupMultipleProtocolSearch+0x1e4>
    b64e:	16 96       	adiw	r26, 0x06	; 6
    b650:	8d 91       	ld	r24, X+
    b652:	9c 91       	ld	r25, X
    b654:	17 97       	sbiw	r26, 0x07	; 7
    b656:	e2 2f       	mov	r30, r18
    b658:	f0 e0       	ldi	r31, 0x00	; 0
    b65a:	ee 0f       	add	r30, r30
    b65c:	ff 1f       	adc	r31, r31
    b65e:	e8 0f       	add	r30, r24
    b660:	f9 1f       	adc	r31, r25
    b662:	01 90       	ld	r0, Z+
    b664:	f0 81       	ld	r31, Z
    b666:	e0 2d       	mov	r30, r0
    b668:	82 89       	ldd	r24, Z+18	; 0x12
    b66a:	88 23       	and	r24, r24
    b66c:	b1 f0       	breq	.+44     	; 0xb69a <TMR_SR_msgSetupMultipleProtocolSearch+0x1e2>
    b66e:	43 89       	ldd	r20, Z+19	; 0x13
    b670:	54 89       	ldd	r21, Z+20	; 0x14
    b672:	65 89       	ldd	r22, Z+21	; 0x15
    b674:	76 89       	ldd	r23, Z+22	; 0x16
    b676:	f2 01       	movw	r30, r4
    b678:	e3 50       	subi	r30, 0x03	; 3
    b67a:	fa 4f       	sbci	r31, 0xFA	; 250
    b67c:	c0 80       	ld	r12, Z
    b67e:	d1 80       	ldd	r13, Z+1	; 0x01
    b680:	e2 80       	ldd	r14, Z+2	; 0x02
    b682:	f3 80       	ldd	r15, Z+3	; 0x03
    b684:	4c 0d       	add	r20, r12
    b686:	5d 1d       	adc	r21, r13
    b688:	6e 1d       	adc	r22, r14
    b68a:	7f 1d       	adc	r23, r15
    b68c:	40 83       	st	Z, r20
    b68e:	51 83       	std	Z+1, r21	; 0x01
    b690:	62 83       	std	Z+2, r22	; 0x02
    b692:	73 83       	std	Z+3, r23	; 0x03
    b694:	81 e0       	ldi	r24, 0x01	; 1
    b696:	31 97       	sbiw	r30, 0x01	; 1
    b698:	80 83       	st	Z, r24
    b69a:	2f 5f       	subi	r18, 0xFF	; 255
    b69c:	1c 96       	adiw	r26, 0x0c	; 12
    b69e:	8c 91       	ld	r24, X
    b6a0:	1c 97       	sbiw	r26, 0x0c	; 12
    b6a2:	28 17       	cp	r18, r24
    b6a4:	a0 f2       	brcs	.-88     	; 0xb64e <TMR_SR_msgSetupMultipleProtocolSearch+0x196>
    b6a6:	0d c0       	rjmp	.+26     	; 0xb6c2 <TMR_SR_msgSetupMultipleProtocolSearch+0x20a>
    b6a8:	53 96       	adiw	r26, 0x13	; 19
    b6aa:	8d 91       	ld	r24, X+
    b6ac:	9d 91       	ld	r25, X+
    b6ae:	0d 90       	ld	r0, X+
    b6b0:	bc 91       	ld	r27, X
    b6b2:	a0 2d       	mov	r26, r0
    b6b4:	f2 01       	movw	r30, r4
    b6b6:	e3 50       	subi	r30, 0x03	; 3
    b6b8:	fa 4f       	sbci	r31, 0xFA	; 250
    b6ba:	80 83       	st	Z, r24
    b6bc:	91 83       	std	Z+1, r25	; 0x01
    b6be:	a2 83       	std	Z+2, r26	; 0x02
    b6c0:	b3 83       	std	Z+3, r27	; 0x03
    b6c2:	f2 01       	movw	r30, r4
    b6c4:	ee 5d       	subi	r30, 0xDE	; 222
    b6c6:	f9 4f       	sbci	r31, 0xF9	; 249
    b6c8:	80 81       	ld	r24, Z
    b6ca:	81 11       	cpse	r24, r1
    b6cc:	03 c0       	rjmp	.+6      	; 0xb6d4 <TMR_SR_msgSetupMultipleProtocolSearch+0x21c>
    b6ce:	80 e0       	ldi	r24, 0x00	; 0
    b6d0:	90 e0       	ldi	r25, 0x00	; 0
    b6d2:	02 c0       	rjmp	.+4      	; 0xb6d8 <TMR_SR_msgSetupMultipleProtocolSearch+0x220>
    b6d4:	80 e0       	ldi	r24, 0x00	; 0
    b6d6:	98 e0       	ldi	r25, 0x08	; 8
    b6d8:	f2 01       	movw	r30, r4
    b6da:	e4 50       	subi	r30, 0x04	; 4
    b6dc:	fa 4f       	sbci	r31, 0xFA	; 250
    b6de:	20 81       	ld	r18, Z
    b6e0:	21 11       	cpse	r18, r1
    b6e2:	80 64       	ori	r24, 0x40	; 64
    b6e4:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    b6e8:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    b6ec:	2e 5f       	subi	r18, 0xFE	; 254
    b6ee:	3f 4f       	sbci	r19, 0xFF	; 255
    b6f0:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    b6f4:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    b6f8:	39 81       	ldd	r19, Y+1	; 0x01
    b6fa:	21 e0       	ldi	r18, 0x01	; 1
    b6fc:	23 0f       	add	r18, r19
    b6fe:	f1 01       	movw	r30, r2
    b700:	e3 0f       	add	r30, r19
    b702:	f1 1d       	adc	r31, r1
    b704:	90 83       	st	Z, r25
    b706:	91 e0       	ldi	r25, 0x01	; 1
    b708:	92 0f       	add	r25, r18
    b70a:	99 83       	std	Y+1, r25	; 0x01
    b70c:	f1 01       	movw	r30, r2
    b70e:	e2 0f       	add	r30, r18
    b710:	f1 1d       	adc	r31, r1
    b712:	80 83       	st	Z, r24
    b714:	f2 01       	movw	r30, r4
    b716:	e4 50       	subi	r30, 0x04	; 4
    b718:	fa 4f       	sbci	r31, 0xFA	; 250
    b71a:	80 81       	ld	r24, Z
    b71c:	88 23       	and	r24, r24
    b71e:	41 f1       	breq	.+80     	; 0xb770 <TMR_SR_msgSetupMultipleProtocolSearch+0x2b8>
    b720:	31 96       	adiw	r30, 0x01	; 1
    b722:	20 81       	ld	r18, Z
    b724:	31 81       	ldd	r19, Z+1	; 0x01
    b726:	42 81       	ldd	r20, Z+2	; 0x02
    b728:	53 81       	ldd	r21, Z+3	; 0x03
    b72a:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    b72e:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    b732:	04 96       	adiw	r24, 0x04	; 4
    b734:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    b738:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    b73c:	99 81       	ldd	r25, Y+1	; 0x01
    b73e:	81 e0       	ldi	r24, 0x01	; 1
    b740:	89 0f       	add	r24, r25
    b742:	f1 01       	movw	r30, r2
    b744:	e9 0f       	add	r30, r25
    b746:	f1 1d       	adc	r31, r1
    b748:	50 83       	st	Z, r21
    b74a:	91 e0       	ldi	r25, 0x01	; 1
    b74c:	98 0f       	add	r25, r24
    b74e:	f1 01       	movw	r30, r2
    b750:	e8 0f       	add	r30, r24
    b752:	f1 1d       	adc	r31, r1
    b754:	40 83       	st	Z, r20
    b756:	81 e0       	ldi	r24, 0x01	; 1
    b758:	89 0f       	add	r24, r25
    b75a:	f1 01       	movw	r30, r2
    b75c:	e9 0f       	add	r30, r25
    b75e:	f1 1d       	adc	r31, r1
    b760:	30 83       	st	Z, r19
    b762:	91 e0       	ldi	r25, 0x01	; 1
    b764:	98 0f       	add	r25, r24
    b766:	99 83       	std	Y+1, r25	; 0x01
    b768:	f1 01       	movw	r30, r2
    b76a:	e8 0f       	add	r30, r24
    b76c:	f1 1d       	adc	r31, r1
    b76e:	20 83       	st	Z, r18
    b770:	ad 81       	ldd	r26, Y+5	; 0x05
    b772:	be 81       	ldd	r27, Y+6	; 0x06
    b774:	13 96       	adiw	r26, 0x03	; 3
    b776:	6c 91       	ld	r22, X
    b778:	70 e0       	ldi	r23, 0x00	; 0
    b77a:	8a 89       	ldd	r24, Y+18	; 0x12
    b77c:	9b 89       	ldd	r25, Y+19	; 0x13
    b77e:	0e 94 87 74 	call	0xe90e	; 0xe90e <__udivmodhi4>
    b782:	78 87       	std	Y+8, r23	; 0x08
    b784:	6f 83       	std	Y+7, r22	; 0x07
    b786:	61 2c       	mov	r6, r1
    b788:	60 e0       	ldi	r22, 0x00	; 0
    b78a:	70 e0       	ldi	r23, 0x00	; 0
    b78c:	80 e0       	ldi	r24, 0x00	; 0
    b78e:	90 e0       	ldi	r25, 0x00	; 0
    b790:	31 c1       	rjmp	.+610    	; 0xb9f4 <TMR_SR_msgSetupMultipleProtocolSearch+0x53c>
    b792:	ad 81       	ldd	r26, Y+5	; 0x05
    b794:	be 81       	ldd	r27, Y+6	; 0x06
    b796:	ed 91       	ld	r30, X+
    b798:	fc 91       	ld	r31, X
    b79a:	06 2d       	mov	r16, r6
    b79c:	10 e0       	ldi	r17, 0x00	; 0
    b79e:	e0 0f       	add	r30, r16
    b7a0:	f1 1f       	adc	r31, r17
    b7a2:	a0 80       	ld	r10, Z
    b7a4:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    b7a8:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    b7ac:	01 96       	adiw	r24, 0x01	; 1
    b7ae:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    b7b2:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    b7b6:	89 81       	ldd	r24, Y+1	; 0x01
    b7b8:	77 24       	eor	r7, r7
    b7ba:	73 94       	inc	r7
    b7bc:	78 0e       	add	r7, r24
    b7be:	f1 01       	movw	r30, r2
    b7c0:	e8 0f       	add	r30, r24
    b7c2:	f1 1d       	adc	r31, r1
    b7c4:	a0 82       	st	Z, r10
    b7c6:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    b7ca:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    b7ce:	01 96       	adiw	r24, 0x01	; 1
    b7d0:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    b7d4:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    b7d8:	81 e0       	ldi	r24, 0x01	; 1
    b7da:	87 0d       	add	r24, r7
    b7dc:	89 83       	std	Y+1, r24	; 0x01
    b7de:	f1 01       	movw	r30, r2
    b7e0:	e7 0d       	add	r30, r7
    b7e2:	f1 1d       	adc	r31, r1
    b7e4:	fc 83       	std	Y+4, r31	; 0x04
    b7e6:	eb 83       	std	Y+3, r30	; 0x03
    b7e8:	10 82       	st	Z, r1
    b7ea:	d2 01       	movw	r26, r4
    b7ec:	d2 96       	adiw	r26, 0x32	; 50
    b7ee:	8d 90       	ld	r8, X+
    b7f0:	9c 90       	ld	r9, X
    b7f2:	d3 97       	sbiw	r26, 0x33	; 51
    b7f4:	f4 01       	movw	r30, r8
    b7f6:	80 81       	ld	r24, Z
    b7f8:	82 30       	cpi	r24, 0x02	; 2
    b7fa:	09 f0       	breq	.+2      	; 0xb7fe <TMR_SR_msgSetupMultipleProtocolSearch+0x346>
    b7fc:	9f c0       	rjmp	.+318    	; 0xb93c <TMR_SR_msgSetupMultipleProtocolSearch+0x484>
    b7fe:	c0 84       	ldd	r12, Z+8	; 0x08
    b800:	d1 84       	ldd	r13, Z+9	; 0x09
    b802:	e2 84       	ldd	r14, Z+10	; 0x0a
    b804:	f3 84       	ldd	r15, Z+11	; 0x0b
    b806:	c1 14       	cp	r12, r1
    b808:	d1 04       	cpc	r13, r1
    b80a:	e1 04       	cpc	r14, r1
    b80c:	f1 04       	cpc	r15, r1
    b80e:	d9 f1       	breq	.+118    	; 0xb886 <TMR_SR_msgSetupMultipleProtocolSearch+0x3ce>
    b810:	26 81       	ldd	r18, Z+6	; 0x06
    b812:	37 81       	ldd	r19, Z+7	; 0x07
    b814:	c8 01       	movw	r24, r16
    b816:	88 0f       	add	r24, r24
    b818:	99 1f       	adc	r25, r25
    b81a:	f9 01       	movw	r30, r18
    b81c:	e8 0f       	add	r30, r24
    b81e:	f9 1f       	adc	r31, r25
    b820:	01 90       	ld	r0, Z+
    b822:	f0 81       	ld	r31, Z
    b824:	e0 2d       	mov	r30, r0
    b826:	81 81       	ldd	r24, Z+1	; 0x01
    b828:	92 81       	ldd	r25, Z+2	; 0x02
    b82a:	a3 81       	ldd	r26, Z+3	; 0x03
    b82c:	b4 81       	ldd	r27, Z+4	; 0x04
    b82e:	8a 87       	std	Y+10, r24	; 0x0a
    b830:	9b 87       	std	Y+11, r25	; 0x0b
    b832:	ac 87       	std	Y+12, r26	; 0x0c
    b834:	bd 87       	std	Y+13, r27	; 0x0d
    b836:	aa 89       	ldd	r26, Y+18	; 0x12
    b838:	bb 89       	ldd	r27, Y+19	; 0x13
    b83a:	2a 85       	ldd	r18, Y+10	; 0x0a
    b83c:	3b 85       	ldd	r19, Y+11	; 0x0b
    b83e:	4c 85       	ldd	r20, Y+12	; 0x0c
    b840:	5d 85       	ldd	r21, Y+13	; 0x0d
    b842:	0e 94 d9 74 	call	0xe9b2	; 0xe9b2 <__muluhisi3>
    b846:	a7 01       	movw	r20, r14
    b848:	96 01       	movw	r18, r12
    b84a:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    b84e:	38 87       	std	Y+8, r19	; 0x08
    b850:	2f 83       	std	Y+7, r18	; 0x07
    b852:	2e 85       	ldd	r18, Y+14	; 0x0e
    b854:	3f 85       	ldd	r19, Y+15	; 0x0f
    b856:	48 89       	ldd	r20, Y+16	; 0x10
    b858:	59 89       	ldd	r21, Y+17	; 0x11
    b85a:	6a 85       	ldd	r22, Y+10	; 0x0a
    b85c:	7b 85       	ldd	r23, Y+11	; 0x0b
    b85e:	8c 85       	ldd	r24, Y+12	; 0x0c
    b860:	9d 85       	ldd	r25, Y+13	; 0x0d
    b862:	0e 94 78 74 	call	0xe8f0	; 0xe8f0 <__mulsi3>
    b866:	a7 01       	movw	r20, r14
    b868:	96 01       	movw	r18, r12
    b86a:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    b86e:	f2 01       	movw	r30, r4
    b870:	e4 58       	subi	r30, 0x84	; 132
    b872:	fe 4f       	sbci	r31, 0xFE	; 254
    b874:	da 01       	movw	r26, r20
    b876:	c9 01       	movw	r24, r18
    b878:	aa 27       	eor	r26, r26
    b87a:	bb 27       	eor	r27, r27
    b87c:	80 83       	st	Z, r24
    b87e:	91 83       	std	Z+1, r25	; 0x01
    b880:	a2 83       	std	Z+2, r26	; 0x02
    b882:	b3 83       	std	Z+3, r27	; 0x03
    b884:	18 c0       	rjmp	.+48     	; 0xb8b6 <TMR_SR_msgSetupMultipleProtocolSearch+0x3fe>
    b886:	ad 81       	ldd	r26, Y+5	; 0x05
    b888:	be 81       	ldd	r27, Y+6	; 0x06
    b88a:	13 96       	adiw	r26, 0x03	; 3
    b88c:	2c 91       	ld	r18, X
    b88e:	30 e0       	ldi	r19, 0x00	; 0
    b890:	40 e0       	ldi	r20, 0x00	; 0
    b892:	50 e0       	ldi	r21, 0x00	; 0
    b894:	6e 85       	ldd	r22, Y+14	; 0x0e
    b896:	7f 85       	ldd	r23, Y+15	; 0x0f
    b898:	88 89       	ldd	r24, Y+16	; 0x10
    b89a:	99 89       	ldd	r25, Y+17	; 0x11
    b89c:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    b8a0:	f2 01       	movw	r30, r4
    b8a2:	e4 58       	subi	r30, 0x84	; 132
    b8a4:	fe 4f       	sbci	r31, 0xFE	; 254
    b8a6:	da 01       	movw	r26, r20
    b8a8:	c9 01       	movw	r24, r18
    b8aa:	aa 27       	eor	r26, r26
    b8ac:	bb 27       	eor	r27, r27
    b8ae:	80 83       	st	Z, r24
    b8b0:	91 83       	std	Z+1, r25	; 0x01
    b8b2:	a2 83       	std	Z+2, r26	; 0x02
    b8b4:	b3 83       	std	Z+3, r27	; 0x03
    b8b6:	d4 01       	movw	r26, r8
    b8b8:	16 96       	adiw	r26, 0x06	; 6
    b8ba:	ed 91       	ld	r30, X+
    b8bc:	fc 91       	ld	r31, X
    b8be:	17 97       	sbiw	r26, 0x07	; 7
    b8c0:	c8 01       	movw	r24, r16
    b8c2:	88 0f       	add	r24, r24
    b8c4:	99 1f       	adc	r25, r25
    b8c6:	e8 0f       	add	r30, r24
    b8c8:	f9 1f       	adc	r31, r25
    b8ca:	01 90       	ld	r0, Z+
    b8cc:	f0 81       	ld	r31, Z
    b8ce:	e0 2d       	mov	r30, r0
    b8d0:	27 89       	ldd	r18, Z+23	; 0x17
    b8d2:	f2 01       	movw	r30, r4
    b8d4:	e7 58       	subi	r30, 0x87	; 135
    b8d6:	ff 4f       	sbci	r31, 0xFF	; 255
    b8d8:	20 83       	st	Z, r18
    b8da:	16 96       	adiw	r26, 0x06	; 6
    b8dc:	ed 91       	ld	r30, X+
    b8de:	fc 91       	ld	r31, X
    b8e0:	17 97       	sbiw	r26, 0x07	; 7
    b8e2:	e8 0f       	add	r30, r24
    b8e4:	f9 1f       	adc	r31, r25
    b8e6:	01 90       	ld	r0, Z+
    b8e8:	f0 81       	ld	r31, Z
    b8ea:	e0 2d       	mov	r30, r0
    b8ec:	21 89       	ldd	r18, Z+17	; 0x11
    b8ee:	f2 01       	movw	r30, r4
    b8f0:	e4 5f       	subi	r30, 0xF4	; 244
    b8f2:	f9 4f       	sbci	r31, 0xF9	; 249
    b8f4:	20 83       	st	Z, r18
    b8f6:	16 96       	adiw	r26, 0x06	; 6
    b8f8:	ed 91       	ld	r30, X+
    b8fa:	fc 91       	ld	r31, X
    b8fc:	17 97       	sbiw	r26, 0x07	; 7
    b8fe:	e8 0f       	add	r30, r24
    b900:	f9 1f       	adc	r31, r25
    b902:	01 90       	ld	r0, Z+
    b904:	f0 81       	ld	r31, Z
    b906:	e0 2d       	mov	r30, r0
    b908:	22 89       	ldd	r18, Z+18	; 0x12
    b90a:	f2 01       	movw	r30, r4
    b90c:	e4 50       	subi	r30, 0x04	; 4
    b90e:	fa 4f       	sbci	r31, 0xFA	; 250
    b910:	20 83       	st	Z, r18
    b912:	16 96       	adiw	r26, 0x06	; 6
    b914:	2d 91       	ld	r18, X+
    b916:	3c 91       	ld	r19, X
    b918:	17 97       	sbiw	r26, 0x07	; 7
    b91a:	f9 01       	movw	r30, r18
    b91c:	e8 0f       	add	r30, r24
    b91e:	f9 1f       	adc	r31, r25
    b920:	01 90       	ld	r0, Z+
    b922:	f0 81       	ld	r31, Z
    b924:	e0 2d       	mov	r30, r0
    b926:	83 89       	ldd	r24, Z+19	; 0x13
    b928:	94 89       	ldd	r25, Z+20	; 0x14
    b92a:	a5 89       	ldd	r26, Z+21	; 0x15
    b92c:	b6 89       	ldd	r27, Z+22	; 0x16
    b92e:	f2 01       	movw	r30, r4
    b930:	e3 50       	subi	r30, 0x03	; 3
    b932:	fa 4f       	sbci	r31, 0xFA	; 250
    b934:	80 83       	st	Z, r24
    b936:	91 83       	std	Z+1, r25	; 0x01
    b938:	a2 83       	std	Z+2, r26	; 0x02
    b93a:	b3 83       	std	Z+3, r27	; 0x03
    b93c:	b9 85       	ldd	r27, Y+9	; 0x09
    b93e:	b2 32       	cpi	r27, 0x22	; 34
    b940:	09 f0       	breq	.+2      	; 0xb944 <TMR_SR_msgSetupMultipleProtocolSearch+0x48c>
    b942:	60 c0       	rjmp	.+192    	; 0xba04 <TMR_SR_msgSetupMultipleProtocolSearch+0x54c>
    b944:	f4 01       	movw	r30, r8
    b946:	80 81       	ld	r24, Z
    b948:	82 30       	cpi	r24, 0x02	; 2
    b94a:	51 f4       	brne	.+20     	; 0xb960 <TMR_SR_msgSetupMultipleProtocolSearch+0x4a8>
    b94c:	06 80       	ldd	r0, Z+6	; 0x06
    b94e:	f7 81       	ldd	r31, Z+7	; 0x07
    b950:	e0 2d       	mov	r30, r0
    b952:	c8 01       	movw	r24, r16
    b954:	88 0f       	add	r24, r24
    b956:	99 1f       	adc	r25, r25
    b958:	e8 0f       	add	r30, r24
    b95a:	f9 1f       	adc	r31, r25
    b95c:	80 80       	ld	r8, Z
    b95e:	91 80       	ldd	r9, Z+1	; 0x01
    b960:	d4 01       	movw	r26, r8
    b962:	1f 96       	adiw	r26, 0x0f	; 15
    b964:	6d 91       	ld	r22, X+
    b966:	7c 91       	ld	r23, X
    b968:	50 97       	sbiw	r26, 0x10	; 16
    b96a:	61 15       	cp	r22, r1
    b96c:	71 05       	cpc	r23, r1
    b96e:	d1 f0       	breq	.+52     	; 0xb9a4 <TMR_SR_msgSetupMultipleProtocolSearch+0x4ec>
    b970:	ef 81       	ldd	r30, Y+7	; 0x07
    b972:	f8 85       	ldd	r31, Y+8	; 0x08
    b974:	6f 01       	movw	r12, r30
    b976:	e1 2c       	mov	r14, r1
    b978:	f1 2c       	mov	r15, r1
    b97a:	1a 82       	std	Y+2, r1	; 0x02
    b97c:	ce 01       	movw	r24, r28
    b97e:	02 96       	adiw	r24, 0x02	; 2
    b980:	5c 01       	movw	r10, r24
    b982:	8e 01       	movw	r16, r28
    b984:	0f 5f       	subi	r16, 0xFF	; 255
    b986:	1f 4f       	sbci	r17, 0xFF	; 255
    b988:	91 01       	movw	r18, r2
    b98a:	a4 01       	movw	r20, r8
    b98c:	c2 01       	movw	r24, r4
    b98e:	0e 94 3b 25 	call	0x4a76	; 0x4a76 <TMR_SR_addTagOp>
    b992:	3a 81       	ldd	r19, Y+2	; 0x02
    b994:	f1 01       	movw	r30, r2
    b996:	e3 0f       	add	r30, r19
    b998:	f1 1d       	adc	r31, r1
    b99a:	29 81       	ldd	r18, Y+1	; 0x01
    b99c:	23 1b       	sub	r18, r19
    b99e:	22 50       	subi	r18, 0x02	; 2
    b9a0:	20 83       	st	Z, r18
    b9a2:	1d c0       	rjmp	.+58     	; 0xb9de <TMR_SR_msgSetupMultipleProtocolSearch+0x526>
    b9a4:	00 0f       	add	r16, r16
    b9a6:	11 1f       	adc	r17, r17
    b9a8:	e8 8d       	ldd	r30, Y+24	; 0x18
    b9aa:	f9 8d       	ldd	r31, Y+25	; 0x19
    b9ac:	e0 0f       	add	r30, r16
    b9ae:	f1 1f       	adc	r31, r17
    b9b0:	c0 80       	ld	r12, Z
    b9b2:	d1 80       	ldd	r13, Z+1	; 0x01
    b9b4:	1f 92       	push	r1
    b9b6:	1f 92       	push	r1
    b9b8:	1f 92       	push	r1
    b9ba:	1f 92       	push	r1
    b9bc:	ec 88       	ldd	r14, Y+20	; 0x14
    b9be:	fd 88       	ldd	r15, Y+21	; 0x15
    b9c0:	0e 89       	ldd	r16, Y+22	; 0x16
    b9c2:	1f 89       	ldd	r17, Y+23	; 0x17
    b9c4:	2f 81       	ldd	r18, Y+7	; 0x07
    b9c6:	38 85       	ldd	r19, Y+8	; 0x08
    b9c8:	ae 01       	movw	r20, r28
    b9ca:	4f 5f       	subi	r20, 0xFF	; 255
    b9cc:	5f 4f       	sbci	r21, 0xFF	; 255
    b9ce:	b1 01       	movw	r22, r2
    b9d0:	c2 01       	movw	r24, r4
    b9d2:	0e 94 81 38 	call	0x7102	; 0x7102 <TMR_SR_msgSetupReadTagMultipleWithMetadata>
    b9d6:	0f 90       	pop	r0
    b9d8:	0f 90       	pop	r0
    b9da:	0f 90       	pop	r0
    b9dc:	0f 90       	pop	r0
    b9de:	29 81       	ldd	r18, Y+1	; 0x01
    b9e0:	32 2f       	mov	r19, r18
    b9e2:	37 19       	sub	r19, r7
    b9e4:	32 50       	subi	r19, 0x02	; 2
    b9e6:	ab 81       	ldd	r26, Y+3	; 0x03
    b9e8:	bc 81       	ldd	r27, Y+4	; 0x04
    b9ea:	3c 93       	st	X, r19
    b9ec:	23 50       	subi	r18, 0x03	; 3
    b9ee:	f1 01       	movw	r30, r2
    b9f0:	21 83       	std	Z+1, r18	; 0x01
    b9f2:	63 94       	inc	r6
    b9f4:	ad 81       	ldd	r26, Y+5	; 0x05
    b9f6:	be 81       	ldd	r27, Y+6	; 0x06
    b9f8:	13 96       	adiw	r26, 0x03	; 3
    b9fa:	2c 91       	ld	r18, X
    b9fc:	62 16       	cp	r6, r18
    b9fe:	08 f4       	brcc	.+2      	; 0xba02 <TMR_SR_msgSetupMultipleProtocolSearch+0x54a>
    ba00:	c8 ce       	rjmp	.-624    	; 0xb792 <TMR_SR_msgSetupMultipleProtocolSearch+0x2da>
    ba02:	04 c0       	rjmp	.+8      	; 0xba0c <TMR_SR_msgSetupMultipleProtocolSearch+0x554>
    ba04:	61 e0       	ldi	r22, 0x01	; 1
    ba06:	71 e0       	ldi	r23, 0x01	; 1
    ba08:	80 e0       	ldi	r24, 0x00	; 0
    ba0a:	92 e0       	ldi	r25, 0x02	; 2
    ba0c:	69 96       	adiw	r28, 0x19	; 25
    ba0e:	0f b6       	in	r0, 0x3f	; 63
    ba10:	f8 94       	cli
    ba12:	de bf       	out	0x3e, r29	; 62
    ba14:	0f be       	out	0x3f, r0	; 63
    ba16:	cd bf       	out	0x3d, r28	; 61
    ba18:	df 91       	pop	r29
    ba1a:	cf 91       	pop	r28
    ba1c:	1f 91       	pop	r17
    ba1e:	0f 91       	pop	r16
    ba20:	ff 90       	pop	r15
    ba22:	ef 90       	pop	r14
    ba24:	df 90       	pop	r13
    ba26:	cf 90       	pop	r12
    ba28:	bf 90       	pop	r11
    ba2a:	af 90       	pop	r10
    ba2c:	9f 90       	pop	r9
    ba2e:	8f 90       	pop	r8
    ba30:	7f 90       	pop	r7
    ba32:	6f 90       	pop	r6
    ba34:	5f 90       	pop	r5
    ba36:	4f 90       	pop	r4
    ba38:	3f 90       	pop	r3
    ba3a:	2f 90       	pop	r2
    ba3c:	08 95       	ret

0000ba3e <TMR_SR_cmdSetUserProfile>:
    ba3e:	5f 92       	push	r5
    ba40:	6f 92       	push	r6
    ba42:	7f 92       	push	r7
    ba44:	8f 92       	push	r8
    ba46:	9f 92       	push	r9
    ba48:	af 92       	push	r10
    ba4a:	bf 92       	push	r11
    ba4c:	cf 92       	push	r12
    ba4e:	df 92       	push	r13
    ba50:	ef 92       	push	r14
    ba52:	ff 92       	push	r15
    ba54:	0f 93       	push	r16
    ba56:	1f 93       	push	r17
    ba58:	cf 93       	push	r28
    ba5a:	df 93       	push	r29
    ba5c:	cd b7       	in	r28, 0x3d	; 61
    ba5e:	de b7       	in	r29, 0x3e	; 62
    ba60:	c4 56       	subi	r28, 0x64	; 100
    ba62:	d2 40       	sbci	r29, 0x02	; 2
    ba64:	0f b6       	in	r0, 0x3f	; 63
    ba66:	f8 94       	cli
    ba68:	de bf       	out	0x3e, r29	; 62
    ba6a:	0f be       	out	0x3f, r0	; 63
    ba6c:	cd bf       	out	0x3d, r28	; 61
    ba6e:	4c 01       	movw	r8, r24
    ba70:	56 2e       	mov	r5, r22
    ba72:	3c 01       	movw	r6, r24
    ba74:	80 e8       	ldi	r24, 0x80	; 128
    ba76:	68 1a       	sub	r6, r24
    ba78:	8e ef       	ldi	r24, 0xFE	; 254
    ba7a:	78 0a       	sbc	r7, r24
    ba7c:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    ba80:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    ba84:	3d e9       	ldi	r19, 0x9D	; 157
    ba86:	3b 83       	std	Y+3, r19	; 0x03
    ba88:	6c 83       	std	Y+4, r22	; 0x04
    ba8a:	4d 83       	std	Y+5, r20	; 0x05
    ba8c:	04 96       	adiw	r24, 0x04	; 4
    ba8e:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    ba92:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    ba96:	2e 83       	std	Y+6, r18	; 0x06
    ba98:	a4 e0       	ldi	r26, 0x04	; 4
    ba9a:	6a 13       	cpse	r22, r26
    ba9c:	04 c0       	rjmp	.+8      	; 0xbaa6 <TMR_SR_cmdSetUserProfile+0x68>
    ba9e:	f4 01       	movw	r30, r8
    baa0:	e0 51       	subi	r30, 0x10	; 16
    baa2:	fa 4f       	sbci	r31, 0xFA	; 250
    baa4:	10 82       	st	Z, r1
    baa6:	b5 e0       	ldi	r27, 0x05	; 5
    baa8:	5b 12       	cpse	r5, r27
    baaa:	50 c1       	rjmp	.+672    	; 0xbd4c <TMR_SR_cmdSetUserProfile+0x30e>
    baac:	f4 01       	movw	r30, r8
    baae:	02 a9       	ldd	r16, Z+50	; 0x32
    bab0:	13 a9       	ldd	r17, Z+51	; 0x33
    bab2:	21 e0       	ldi	r18, 0x01	; 1
    bab4:	ea 58       	subi	r30, 0x8A	; 138
    bab6:	ff 4f       	sbci	r31, 0xFF	; 255
    bab8:	20 83       	st	Z, r18
    baba:	d8 01       	movw	r26, r16
    babc:	15 96       	adiw	r26, 0x05	; 5
    babe:	2c 91       	ld	r18, X
    bac0:	15 97       	sbiw	r26, 0x05	; 5
    bac2:	e6 58       	subi	r30, 0x86	; 134
    bac4:	fa 4f       	sbci	r31, 0xFA	; 250
    bac6:	20 83       	st	Z, r18
    bac8:	01 96       	adiw	r24, 0x01	; 1
    baca:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    bace:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    bad2:	15 96       	adiw	r26, 0x05	; 5
    bad4:	8c 91       	ld	r24, X
    bad6:	15 97       	sbiw	r26, 0x05	; 5
    bad8:	8f 83       	std	Y+7, r24	; 0x07
    bada:	8c 91       	ld	r24, X
    badc:	82 30       	cpi	r24, 0x02	; 2
    bade:	09 f0       	breq	.+2      	; 0xbae2 <TMR_SR_cmdSetUserProfile+0xa4>
    bae0:	8f c0       	rjmp	.+286    	; 0xbc00 <TMR_SR_cmdSetUserProfile+0x1c2>
    bae2:	1c 96       	adiw	r26, 0x0c	; 12
    bae4:	8c 91       	ld	r24, X
    bae6:	81 32       	cpi	r24, 0x21	; 33
    bae8:	08 f0       	brcs	.+2      	; 0xbaec <TMR_SR_cmdSetUserProfile+0xae>
    baea:	0c c1       	rjmp	.+536    	; 0xbd04 <TMR_SR_cmdSetUserProfile+0x2c6>
    baec:	cc 59       	subi	r28, 0x9C	; 156
    baee:	dd 4f       	sbci	r29, 0xFD	; 253
    baf0:	88 83       	st	Y, r24
    baf2:	c4 56       	subi	r28, 0x64	; 100
    baf4:	d2 40       	sbci	r29, 0x02	; 2
    baf6:	cd 59       	subi	r28, 0x9D	; 157
    baf8:	dd 4f       	sbci	r29, 0xFD	; 253
    bafa:	88 83       	st	Y, r24
    bafc:	c3 56       	subi	r28, 0x63	; 99
    bafe:	d2 40       	sbci	r29, 0x02	; 2
    bb00:	ce 01       	movw	r24, r28
    bb02:	8f 5b       	subi	r24, 0xBF	; 191
    bb04:	9d 4f       	sbci	r25, 0xFD	; 253
    bb06:	cf 59       	subi	r28, 0x9F	; 159
    bb08:	dd 4f       	sbci	r29, 0xFD	; 253
    bb0a:	99 83       	std	Y+1, r25	; 0x01
    bb0c:	88 83       	st	Y, r24
    bb0e:	c1 56       	subi	r28, 0x61	; 97
    bb10:	d2 40       	sbci	r29, 0x02	; 2
    bb12:	20 e0       	ldi	r18, 0x00	; 0
    bb14:	2c c0       	rjmp	.+88     	; 0xbb6e <TMR_SR_cmdSetUserProfile+0x130>
    bb16:	cf 59       	subi	r28, 0x9F	; 159
    bb18:	dd 4f       	sbci	r29, 0xFD	; 253
    bb1a:	e8 81       	ld	r30, Y
    bb1c:	f9 81       	ldd	r31, Y+1	; 0x01
    bb1e:	c1 56       	subi	r28, 0x61	; 97
    bb20:	d2 40       	sbci	r29, 0x02	; 2
    bb22:	82 2f       	mov	r24, r18
    bb24:	90 e0       	ldi	r25, 0x00	; 0
    bb26:	af 01       	movw	r20, r30
    bb28:	48 0f       	add	r20, r24
    bb2a:	59 1f       	adc	r21, r25
    bb2c:	f8 01       	movw	r30, r16
    bb2e:	a6 81       	ldd	r26, Z+6	; 0x06
    bb30:	b7 81       	ldd	r27, Z+7	; 0x07
    bb32:	88 0f       	add	r24, r24
    bb34:	99 1f       	adc	r25, r25
    bb36:	a8 0f       	add	r26, r24
    bb38:	b9 1f       	adc	r27, r25
    bb3a:	0d 90       	ld	r0, X+
    bb3c:	bc 91       	ld	r27, X
    bb3e:	a0 2d       	mov	r26, r0
    bb40:	1c 96       	adiw	r26, 0x0c	; 12
    bb42:	3c 91       	ld	r19, X
    bb44:	da 01       	movw	r26, r20
    bb46:	3c 93       	st	X, r19
    bb48:	06 80       	ldd	r0, Z+6	; 0x06
    bb4a:	f7 81       	ldd	r31, Z+7	; 0x07
    bb4c:	e0 2d       	mov	r30, r0
    bb4e:	e8 0f       	add	r30, r24
    bb50:	f9 1f       	adc	r31, r25
    bb52:	01 90       	ld	r0, Z+
    bb54:	f0 81       	ld	r31, Z
    bb56:	e0 2d       	mov	r30, r0
    bb58:	45 85       	ldd	r20, Z+13	; 0x0d
    bb5a:	56 85       	ldd	r21, Z+14	; 0x0e
    bb5c:	e1 e0       	ldi	r30, 0x01	; 1
    bb5e:	f2 e0       	ldi	r31, 0x02	; 2
    bb60:	ec 0f       	add	r30, r28
    bb62:	fd 1f       	adc	r31, r29
    bb64:	e8 0f       	add	r30, r24
    bb66:	f9 1f       	adc	r31, r25
    bb68:	51 83       	std	Z+1, r21	; 0x01
    bb6a:	40 83       	st	Z, r20
    bb6c:	2f 5f       	subi	r18, 0xFF	; 255
    bb6e:	f8 01       	movw	r30, r16
    bb70:	84 85       	ldd	r24, Z+12	; 0x0c
    bb72:	28 17       	cp	r18, r24
    bb74:	80 f2       	brcs	.-96     	; 0xbb16 <TMR_SR_cmdSetUserProfile+0xd8>
    bb76:	88 23       	and	r24, r24
    bb78:	09 f4       	brne	.+2      	; 0xbb7c <TMR_SR_cmdSetUserProfile+0x13e>
    bb7a:	c9 c0       	rjmp	.+402    	; 0xbd0e <TMR_SR_cmdSetUserProfile+0x2d0>
    bb7c:	06 80       	ldd	r0, Z+6	; 0x06
    bb7e:	f7 81       	ldd	r31, Z+7	; 0x07
    bb80:	e0 2d       	mov	r30, r0
    bb82:	01 90       	ld	r0, Z+
    bb84:	f0 81       	ld	r31, Z
    bb86:	e0 2d       	mov	r30, r0
    bb88:	80 81       	ld	r24, Z
    bb8a:	81 30       	cpi	r24, 0x01	; 1
    bb8c:	09 f0       	breq	.+2      	; 0xbb90 <TMR_SR_cmdSetUserProfile+0x152>
    bb8e:	c4 c0       	rjmp	.+392    	; 0xbd18 <TMR_SR_cmdSetUserProfile+0x2da>
    bb90:	c8 01       	movw	r24, r16
    bb92:	06 96       	adiw	r24, 0x06	; 6
    bb94:	0e 94 34 15 	call	0x2a68	; 0x2a68 <compareAntennas>
    bb98:	88 23       	and	r24, r24
    bb9a:	09 f4       	brne	.+2      	; 0xbb9e <TMR_SR_cmdSetUserProfile+0x160>
    bb9c:	c2 c0       	rjmp	.+388    	; 0xbd22 <TMR_SR_cmdSetUserProfile+0x2e4>
    bb9e:	b8 01       	movw	r22, r16
    bba0:	c4 01       	movw	r24, r8
    bba2:	0e 94 99 15 	call	0x2b32	; 0x2b32 <prepForSearch>
    bba6:	6b 01       	movw	r12, r22
    bba8:	7c 01       	movw	r14, r24
    bbaa:	61 15       	cp	r22, r1
    bbac:	71 05       	cpc	r23, r1
    bbae:	81 05       	cpc	r24, r1
    bbb0:	91 05       	cpc	r25, r1
    bbb2:	09 f0       	breq	.+2      	; 0xbbb6 <TMR_SR_cmdSetUserProfile+0x178>
    bbb4:	bb c0       	rjmp	.+374    	; 0xbd2c <TMR_SR_cmdSetUserProfile+0x2ee>
    bbb6:	f4 01       	movw	r30, r8
    bbb8:	e7 5e       	subi	r30, 0xE7	; 231
    bbba:	f9 4f       	sbci	r31, 0xF9	; 249
    bbbc:	00 81       	ld	r16, Z
    bbbe:	11 81       	ldd	r17, Z+1	; 0x01
    bbc0:	0f 2e       	mov	r0, r31
    bbc2:	fa ef       	ldi	r31, 0xFA	; 250
    bbc4:	af 2e       	mov	r10, r31
    bbc6:	b1 2c       	mov	r11, r1
    bbc8:	f0 2d       	mov	r31, r0
    bbca:	ce 01       	movw	r24, r28
    bbcc:	8f 5f       	subi	r24, 0xFF	; 255
    bbce:	9d 4f       	sbci	r25, 0xFD	; 253
    bbd0:	6c 01       	movw	r12, r24
    bbd2:	0f 2e       	mov	r0, r31
    bbd4:	fb e0       	ldi	r31, 0x0B	; 11
    bbd6:	ef 2e       	mov	r14, r31
    bbd8:	f1 2c       	mov	r15, r1
    bbda:	f0 2d       	mov	r31, r0
    bbdc:	9e 01       	movw	r18, r28
    bbde:	2f 59       	subi	r18, 0x9F	; 159
    bbe0:	3d 4f       	sbci	r19, 0xFD	; 253
    bbe2:	42 e2       	ldi	r20, 0x22	; 34
    bbe4:	be 01       	movw	r22, r28
    bbe6:	6f 5f       	subi	r22, 0xFF	; 255
    bbe8:	7e 4f       	sbci	r23, 0xFE	; 254
    bbea:	c4 01       	movw	r24, r8
    bbec:	65 dc       	rcall	.-1846   	; 0xb4b8 <TMR_SR_msgSetupMultipleProtocolSearch>
    bbee:	6b 01       	movw	r12, r22
    bbf0:	7c 01       	movw	r14, r24
    bbf2:	61 15       	cp	r22, r1
    bbf4:	71 05       	cpc	r23, r1
    bbf6:	81 05       	cpc	r24, r1
    bbf8:	91 05       	cpc	r25, r1
    bbfa:	09 f4       	brne	.+2      	; 0xbbfe <TMR_SR_cmdSetUserProfile+0x1c0>
    bbfc:	66 c0       	rjmp	.+204    	; 0xbcca <TMR_SR_cmdSetUserProfile+0x28c>
    bbfe:	9a c0       	rjmp	.+308    	; 0xbd34 <TMR_SR_cmdSetUserProfile+0x2f6>
    bc00:	d8 01       	movw	r26, r16
    bc02:	51 96       	adiw	r26, 0x11	; 17
    bc04:	8c 91       	ld	r24, X
    bc06:	51 97       	sbiw	r26, 0x11	; 17
    bc08:	f4 01       	movw	r30, r8
    bc0a:	e4 5f       	subi	r30, 0xF4	; 244
    bc0c:	f9 4f       	sbci	r31, 0xF9	; 249
    bc0e:	80 83       	st	Z, r24
    bc10:	57 96       	adiw	r26, 0x17	; 23
    bc12:	8c 91       	ld	r24, X
    bc14:	e3 59       	subi	r30, 0x93	; 147
    bc16:	f5 40       	sbci	r31, 0x05	; 5
    bc18:	80 83       	st	Z, r24
    bc1a:	81 e0       	ldi	r24, 0x01	; 1
    bc1c:	cc 59       	subi	r28, 0x9C	; 156
    bc1e:	dd 4f       	sbci	r29, 0xFD	; 253
    bc20:	88 83       	st	Y, r24
    bc22:	c4 56       	subi	r28, 0x64	; 100
    bc24:	d2 40       	sbci	r29, 0x02	; 2
    bc26:	cd 59       	subi	r28, 0x9D	; 157
    bc28:	dd 4f       	sbci	r29, 0xFD	; 253
    bc2a:	88 83       	st	Y, r24
    bc2c:	c3 56       	subi	r28, 0x63	; 99
    bc2e:	d2 40       	sbci	r29, 0x02	; 2
    bc30:	ce 01       	movw	r24, r28
    bc32:	8f 5b       	subi	r24, 0xBF	; 191
    bc34:	9d 4f       	sbci	r25, 0xFD	; 253
    bc36:	cf 59       	subi	r28, 0x9F	; 159
    bc38:	dd 4f       	sbci	r29, 0xFD	; 253
    bc3a:	99 83       	std	Y+1, r25	; 0x01
    bc3c:	88 83       	st	Y, r24
    bc3e:	c1 56       	subi	r28, 0x61	; 97
    bc40:	d2 40       	sbci	r29, 0x02	; 2
    bc42:	b8 01       	movw	r22, r16
    bc44:	c4 01       	movw	r24, r8
    bc46:	0e 94 99 15 	call	0x2b32	; 0x2b32 <prepForSearch>
    bc4a:	6b 01       	movw	r12, r22
    bc4c:	7c 01       	movw	r14, r24
    bc4e:	61 15       	cp	r22, r1
    bc50:	71 05       	cpc	r23, r1
    bc52:	81 05       	cpc	r24, r1
    bc54:	91 05       	cpc	r25, r1
    bc56:	09 f0       	breq	.+2      	; 0xbc5a <TMR_SR_cmdSetUserProfile+0x21c>
    bc58:	71 c0       	rjmp	.+226    	; 0xbd3c <TMR_SR_cmdSetUserProfile+0x2fe>
    bc5a:	cf 59       	subi	r28, 0x9F	; 159
    bc5c:	dd 4f       	sbci	r29, 0xFD	; 253
    bc5e:	e8 81       	ld	r30, Y
    bc60:	f9 81       	ldd	r31, Y+1	; 0x01
    bc62:	c1 56       	subi	r28, 0x61	; 97
    bc64:	d2 40       	sbci	r29, 0x02	; 2
    bc66:	d8 01       	movw	r26, r16
    bc68:	1c 96       	adiw	r26, 0x0c	; 12
    bc6a:	8c 91       	ld	r24, X
    bc6c:	1c 97       	sbiw	r26, 0x0c	; 12
    bc6e:	80 83       	st	Z, r24
    bc70:	1d 96       	adiw	r26, 0x0d	; 13
    bc72:	8d 91       	ld	r24, X+
    bc74:	9c 91       	ld	r25, X
    bc76:	1e 97       	sbiw	r26, 0x0e	; 14
    bc78:	cf 5f       	subi	r28, 0xFF	; 255
    bc7a:	dd 4f       	sbci	r29, 0xFD	; 253
    bc7c:	99 83       	std	Y+1, r25	; 0x01
    bc7e:	88 83       	st	Y, r24
    bc80:	c1 50       	subi	r28, 0x01	; 1
    bc82:	d2 40       	sbci	r29, 0x02	; 2
    bc84:	f4 01       	movw	r30, r8
    bc86:	e7 5e       	subi	r30, 0xE7	; 231
    bc88:	f9 4f       	sbci	r31, 0xF9	; 249
    bc8a:	00 81       	ld	r16, Z
    bc8c:	11 81       	ldd	r17, Z+1	; 0x01
    bc8e:	0f 2e       	mov	r0, r31
    bc90:	fa ef       	ldi	r31, 0xFA	; 250
    bc92:	af 2e       	mov	r10, r31
    bc94:	b1 2c       	mov	r11, r1
    bc96:	f0 2d       	mov	r31, r0
    bc98:	fe 01       	movw	r30, r28
    bc9a:	ef 5f       	subi	r30, 0xFF	; 255
    bc9c:	fd 4f       	sbci	r31, 0xFD	; 253
    bc9e:	6f 01       	movw	r12, r30
    bca0:	0f 2e       	mov	r0, r31
    bca2:	fb e0       	ldi	r31, 0x0B	; 11
    bca4:	ef 2e       	mov	r14, r31
    bca6:	f1 2c       	mov	r15, r1
    bca8:	f0 2d       	mov	r31, r0
    bcaa:	9e 01       	movw	r18, r28
    bcac:	2f 59       	subi	r18, 0x9F	; 159
    bcae:	3d 4f       	sbci	r19, 0xFD	; 253
    bcb0:	42 e2       	ldi	r20, 0x22	; 34
    bcb2:	be 01       	movw	r22, r28
    bcb4:	6f 5f       	subi	r22, 0xFF	; 255
    bcb6:	7e 4f       	sbci	r23, 0xFE	; 254
    bcb8:	c4 01       	movw	r24, r8
    bcba:	fe db       	rcall	.-2052   	; 0xb4b8 <TMR_SR_msgSetupMultipleProtocolSearch>
    bcbc:	6b 01       	movw	r12, r22
    bcbe:	7c 01       	movw	r14, r24
    bcc0:	61 15       	cp	r22, r1
    bcc2:	71 05       	cpc	r23, r1
    bcc4:	81 05       	cpc	r24, r1
    bcc6:	91 05       	cpc	r25, r1
    bcc8:	e9 f5       	brne	.+122    	; 0xbd44 <TMR_SR_cmdSetUserProfile+0x306>
    bcca:	ce 5f       	subi	r28, 0xFE	; 254
    bccc:	de 4f       	sbci	r29, 0xFE	; 254
    bcce:	48 81       	ld	r20, Y
    bcd0:	c2 50       	subi	r28, 0x02	; 2
    bcd2:	d1 40       	sbci	r29, 0x01	; 1
    bcd4:	50 e0       	ldi	r21, 0x00	; 0
    bcd6:	4e 5f       	subi	r20, 0xFE	; 254
    bcd8:	5f 4f       	sbci	r21, 0xFF	; 255
    bcda:	61 e0       	ldi	r22, 0x01	; 1
    bcdc:	71 e0       	ldi	r23, 0x01	; 1
    bcde:	6c 0f       	add	r22, r28
    bce0:	7d 1f       	adc	r23, r29
    bce2:	6f 5f       	subi	r22, 0xFF	; 255
    bce4:	7f 4f       	sbci	r23, 0xFF	; 255
    bce6:	ce 01       	movw	r24, r28
    bce8:	08 96       	adiw	r24, 0x08	; 8
    bcea:	0e 94 4e 6a 	call	0xd49c	; 0xd49c <tm_memcpy>
    bcee:	ce 5f       	subi	r28, 0xFE	; 254
    bcf0:	de 4f       	sbci	r29, 0xFE	; 254
    bcf2:	48 81       	ld	r20, Y
    bcf4:	c2 50       	subi	r28, 0x02	; 2
    bcf6:	d1 40       	sbci	r29, 0x01	; 1
    bcf8:	47 5f       	subi	r20, 0xF7	; 247
    bcfa:	f4 01       	movw	r30, r8
    bcfc:	ea 58       	subi	r30, 0x8A	; 138
    bcfe:	ff 4f       	sbci	r31, 0xFF	; 255
    bd00:	10 82       	st	Z, r1
    bd02:	25 c0       	rjmp	.+74     	; 0xbd4e <TMR_SR_cmdSetUserProfile+0x310>
    bd04:	66 e0       	ldi	r22, 0x06	; 6
    bd06:	70 e0       	ldi	r23, 0x00	; 0
    bd08:	80 e0       	ldi	r24, 0x00	; 0
    bd0a:	93 e0       	ldi	r25, 0x03	; 3
    bd0c:	c5 c0       	rjmp	.+394    	; 0xbe98 <TMR_SR_cmdSetUserProfile+0x45a>
    bd0e:	63 e0       	ldi	r22, 0x03	; 3
    bd10:	70 e0       	ldi	r23, 0x00	; 0
    bd12:	80 e0       	ldi	r24, 0x00	; 0
    bd14:	93 e0       	ldi	r25, 0x03	; 3
    bd16:	c0 c0       	rjmp	.+384    	; 0xbe98 <TMR_SR_cmdSetUserProfile+0x45a>
    bd18:	63 e0       	ldi	r22, 0x03	; 3
    bd1a:	70 e0       	ldi	r23, 0x00	; 0
    bd1c:	80 e0       	ldi	r24, 0x00	; 0
    bd1e:	93 e0       	ldi	r25, 0x03	; 3
    bd20:	bb c0       	rjmp	.+374    	; 0xbe98 <TMR_SR_cmdSetUserProfile+0x45a>
    bd22:	63 e0       	ldi	r22, 0x03	; 3
    bd24:	70 e0       	ldi	r23, 0x00	; 0
    bd26:	80 e0       	ldi	r24, 0x00	; 0
    bd28:	93 e0       	ldi	r25, 0x03	; 3
    bd2a:	b6 c0       	rjmp	.+364    	; 0xbe98 <TMR_SR_cmdSetUserProfile+0x45a>
    bd2c:	7d 2d       	mov	r23, r13
    bd2e:	8e 2d       	mov	r24, r14
    bd30:	9f 2d       	mov	r25, r15
    bd32:	b2 c0       	rjmp	.+356    	; 0xbe98 <TMR_SR_cmdSetUserProfile+0x45a>
    bd34:	7d 2d       	mov	r23, r13
    bd36:	8e 2d       	mov	r24, r14
    bd38:	9f 2d       	mov	r25, r15
    bd3a:	ae c0       	rjmp	.+348    	; 0xbe98 <TMR_SR_cmdSetUserProfile+0x45a>
    bd3c:	7d 2d       	mov	r23, r13
    bd3e:	8e 2d       	mov	r24, r14
    bd40:	9f 2d       	mov	r25, r15
    bd42:	aa c0       	rjmp	.+340    	; 0xbe98 <TMR_SR_cmdSetUserProfile+0x45a>
    bd44:	7d 2d       	mov	r23, r13
    bd46:	8e 2d       	mov	r24, r14
    bd48:	9f 2d       	mov	r25, r15
    bd4a:	a6 c0       	rjmp	.+332    	; 0xbe98 <TMR_SR_cmdSetUserProfile+0x45a>
    bd4c:	46 e0       	ldi	r20, 0x06	; 6
    bd4e:	be 01       	movw	r22, r28
    bd50:	6f 5f       	subi	r22, 0xFF	; 255
    bd52:	7f 4f       	sbci	r23, 0xFF	; 255
    bd54:	c4 01       	movw	r24, r8
    bd56:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    bd5a:	5b 01       	movw	r10, r22
    bd5c:	6c 01       	movw	r12, r24
    bd5e:	61 15       	cp	r22, r1
    bd60:	71 05       	cpc	r23, r1
    bd62:	81 05       	cpc	r24, r1
    bd64:	91 05       	cpc	r25, r1
    bd66:	09 f0       	breq	.+2      	; 0xbd6a <TMR_SR_cmdSetUserProfile+0x32c>
    bd68:	7a c0       	rjmp	.+244    	; 0xbe5e <TMR_SR_cmdSetUserProfile+0x420>
    bd6a:	f4 01       	movw	r30, r8
    bd6c:	e0 51       	subi	r30, 0x10	; 16
    bd6e:	fa 4f       	sbci	r31, 0xFA	; 250
    bd70:	80 81       	ld	r24, Z
    bd72:	81 11       	cpse	r24, r1
    bd74:	78 c0       	rjmp	.+240    	; 0xbe66 <TMR_SR_cmdSetUserProfile+0x428>
    bd76:	f2 e0       	ldi	r31, 0x02	; 2
    bd78:	5f 16       	cp	r5, r31
    bd7a:	19 f0       	breq	.+6      	; 0xbd82 <TMR_SR_cmdSetUserProfile+0x344>
    bd7c:	24 e0       	ldi	r18, 0x04	; 4
    bd7e:	52 12       	cpse	r5, r18
    bd80:	31 c0       	rjmp	.+98     	; 0xbde4 <TMR_SR_cmdSetUserProfile+0x3a6>
    bd82:	d4 01       	movw	r26, r8
    bd84:	15 96       	adiw	r26, 0x05	; 5
    bd86:	8c 91       	ld	r24, X
    bd88:	81 11       	cpse	r24, r1
    bd8a:	10 c0       	rjmp	.+32     	; 0xbdac <TMR_SR_cmdSetUserProfile+0x36e>
    bd8c:	f4 01       	movw	r30, r8
    bd8e:	e0 58       	subi	r30, 0x80	; 128
    bd90:	fe 4f       	sbci	r31, 0xFE	; 254
    bd92:	02 80       	ldd	r0, Z+2	; 0x02
    bd94:	f3 81       	ldd	r31, Z+3	; 0x03
    bd96:	e0 2d       	mov	r30, r0
    bd98:	c3 01       	movw	r24, r6
    bd9a:	09 95       	icall
    bd9c:	8b 01       	movw	r16, r22
    bd9e:	9c 01       	movw	r18, r24
    bda0:	61 15       	cp	r22, r1
    bda2:	71 05       	cpc	r23, r1
    bda4:	81 05       	cpc	r24, r1
    bda6:	91 05       	cpc	r25, r1
    bda8:	09 f0       	breq	.+2      	; 0xbdac <TMR_SR_cmdSetUserProfile+0x36e>
    bdaa:	62 c0       	rjmp	.+196    	; 0xbe70 <TMR_SR_cmdSetUserProfile+0x432>
    bdac:	b4 e0       	ldi	r27, 0x04	; 4
    bdae:	5b 12       	cpse	r5, r27
    bdb0:	0b c0       	rjmp	.+22     	; 0xbdc8 <TMR_SR_cmdSetUserProfile+0x38a>
    bdb2:	80 e0       	ldi	r24, 0x00	; 0
    bdb4:	92 ec       	ldi	r25, 0xC2	; 194
    bdb6:	a1 e0       	ldi	r26, 0x01	; 1
    bdb8:	b0 e0       	ldi	r27, 0x00	; 0
    bdba:	f4 01       	movw	r30, r8
    bdbc:	e0 53       	subi	r30, 0x30	; 48
    bdbe:	fe 4f       	sbci	r31, 0xFE	; 254
    bdc0:	80 83       	st	Z, r24
    bdc2:	91 83       	std	Z+1, r25	; 0x01
    bdc4:	a2 83       	std	Z+2, r26	; 0x02
    bdc6:	b3 83       	std	Z+3, r27	; 0x03
    bdc8:	c4 01       	movw	r24, r8
    bdca:	0e 94 c0 11 	call	0x2380	; 0x2380 <TMR_SR_getVersion>
    bdce:	8b 01       	movw	r16, r22
    bdd0:	9c 01       	movw	r18, r24
    bdd2:	61 15       	cp	r22, r1
    bdd4:	71 05       	cpc	r23, r1
    bdd6:	81 05       	cpc	r24, r1
    bdd8:	91 05       	cpc	r25, r1
    bdda:	09 f0       	breq	.+2      	; 0xbdde <TMR_SR_cmdSetUserProfile+0x3a0>
    bddc:	4d c0       	rjmp	.+154    	; 0xbe78 <TMR_SR_cmdSetUserProfile+0x43a>
    bdde:	81 e0       	ldi	r24, 0x01	; 1
    bde0:	f4 01       	movw	r30, r8
    bde2:	85 83       	std	Z+5, r24	; 0x05
    bde4:	f2 e0       	ldi	r31, 0x02	; 2
    bde6:	5f 16       	cp	r5, r31
    bde8:	19 f0       	breq	.+6      	; 0xbdf0 <TMR_SR_cmdSetUserProfile+0x3b2>
    bdea:	24 e0       	ldi	r18, 0x04	; 4
    bdec:	52 12       	cpse	r5, r18
    bdee:	21 c0       	rjmp	.+66     	; 0xbe32 <TMR_SR_cmdSetUserProfile+0x3f4>
    bdf0:	b4 01       	movw	r22, r8
    bdf2:	6c 51       	subi	r22, 0x1C	; 28
    bdf4:	7e 4f       	sbci	r23, 0xFE	; 254
    bdf6:	c4 01       	movw	r24, r8
    bdf8:	0e 94 2a 56 	call	0xac54	; 0xac54 <TMR_SR_cmdGetRegion>
    bdfc:	8b 01       	movw	r16, r22
    bdfe:	9c 01       	movw	r18, r24
    be00:	61 15       	cp	r22, r1
    be02:	71 05       	cpc	r23, r1
    be04:	81 05       	cpc	r24, r1
    be06:	91 05       	cpc	r25, r1
    be08:	d9 f5       	brne	.+118    	; 0xbe80 <TMR_SR_cmdSetUserProfile+0x442>
    be0a:	b4 01       	movw	r22, r8
    be0c:	6b 5c       	subi	r22, 0xCB	; 203
    be0e:	7f 4f       	sbci	r23, 0xFF	; 255
    be10:	c4 01       	movw	r24, r8
    be12:	0e 94 f9 55 	call	0xabf2	; 0xabf2 <TMR_SR_cmdGetCurrentProtocol>
    be16:	8b 01       	movw	r16, r22
    be18:	9c 01       	movw	r18, r24
    be1a:	61 15       	cp	r22, r1
    be1c:	71 05       	cpc	r23, r1
    be1e:	81 05       	cpc	r24, r1
    be20:	91 05       	cpc	r25, r1
    be22:	91 f5       	brne	.+100    	; 0xbe88 <TMR_SR_cmdSetUserProfile+0x44a>
    be24:	d4 01       	movw	r26, r8
    be26:	d5 96       	adiw	r26, 0x35	; 53
    be28:	8c 91       	ld	r24, X
    be2a:	f4 01       	movw	r30, r8
    be2c:	ee 57       	subi	r30, 0x7E	; 126
    be2e:	fc 4f       	sbci	r31, 0xFC	; 252
    be30:	80 83       	st	Z, r24
    be32:	b4 e0       	ldi	r27, 0x04	; 4
    be34:	5b 12       	cpse	r5, r27
    be36:	2c c0       	rjmp	.+88     	; 0xbe90 <TMR_SR_cmdSetUserProfile+0x452>
    be38:	f4 01       	movw	r30, r8
    be3a:	ee 57       	subi	r30, 0x7E	; 126
    be3c:	fc 4f       	sbci	r31, 0xFC	; 252
    be3e:	e1 2c       	mov	r14, r1
    be40:	f1 2c       	mov	r15, r1
    be42:	87 01       	movw	r16, r14
    be44:	20 81       	ld	r18, Z
    be46:	40 e0       	ldi	r20, 0x00	; 0
    be48:	50 e0       	ldi	r21, 0x00	; 0
    be4a:	60 e0       	ldi	r22, 0x00	; 0
    be4c:	c4 01       	movw	r24, r8
    be4e:	44 96       	adiw	r24, 0x14	; 20
    be50:	0e 94 5e 6c 	call	0xd8bc	; 0xd8bc <TMR_RP_init_simple>
    be54:	6a 2d       	mov	r22, r10
    be56:	7b 2d       	mov	r23, r11
    be58:	8c 2d       	mov	r24, r12
    be5a:	9d 2d       	mov	r25, r13
    be5c:	1d c0       	rjmp	.+58     	; 0xbe98 <TMR_SR_cmdSetUserProfile+0x45a>
    be5e:	7b 2d       	mov	r23, r11
    be60:	8c 2d       	mov	r24, r12
    be62:	9d 2d       	mov	r25, r13
    be64:	19 c0       	rjmp	.+50     	; 0xbe98 <TMR_SR_cmdSetUserProfile+0x45a>
    be66:	6a 2d       	mov	r22, r10
    be68:	7b 2d       	mov	r23, r11
    be6a:	8c 2d       	mov	r24, r12
    be6c:	9d 2d       	mov	r25, r13
    be6e:	14 c0       	rjmp	.+40     	; 0xbe98 <TMR_SR_cmdSetUserProfile+0x45a>
    be70:	71 2f       	mov	r23, r17
    be72:	82 2f       	mov	r24, r18
    be74:	93 2f       	mov	r25, r19
    be76:	10 c0       	rjmp	.+32     	; 0xbe98 <TMR_SR_cmdSetUserProfile+0x45a>
    be78:	71 2f       	mov	r23, r17
    be7a:	82 2f       	mov	r24, r18
    be7c:	93 2f       	mov	r25, r19
    be7e:	0c c0       	rjmp	.+24     	; 0xbe98 <TMR_SR_cmdSetUserProfile+0x45a>
    be80:	71 2f       	mov	r23, r17
    be82:	82 2f       	mov	r24, r18
    be84:	93 2f       	mov	r25, r19
    be86:	08 c0       	rjmp	.+16     	; 0xbe98 <TMR_SR_cmdSetUserProfile+0x45a>
    be88:	71 2f       	mov	r23, r17
    be8a:	82 2f       	mov	r24, r18
    be8c:	93 2f       	mov	r25, r19
    be8e:	04 c0       	rjmp	.+8      	; 0xbe98 <TMR_SR_cmdSetUserProfile+0x45a>
    be90:	6a 2d       	mov	r22, r10
    be92:	7b 2d       	mov	r23, r11
    be94:	8c 2d       	mov	r24, r12
    be96:	9d 2d       	mov	r25, r13
    be98:	cc 59       	subi	r28, 0x9C	; 156
    be9a:	dd 4f       	sbci	r29, 0xFD	; 253
    be9c:	0f b6       	in	r0, 0x3f	; 63
    be9e:	f8 94       	cli
    bea0:	de bf       	out	0x3e, r29	; 62
    bea2:	0f be       	out	0x3f, r0	; 63
    bea4:	cd bf       	out	0x3d, r28	; 61
    bea6:	df 91       	pop	r29
    bea8:	cf 91       	pop	r28
    beaa:	1f 91       	pop	r17
    beac:	0f 91       	pop	r16
    beae:	ff 90       	pop	r15
    beb0:	ef 90       	pop	r14
    beb2:	df 90       	pop	r13
    beb4:	cf 90       	pop	r12
    beb6:	bf 90       	pop	r11
    beb8:	af 90       	pop	r10
    beba:	9f 90       	pop	r9
    bebc:	8f 90       	pop	r8
    bebe:	7f 90       	pop	r7
    bec0:	6f 90       	pop	r6
    bec2:	5f 90       	pop	r5
    bec4:	08 95       	ret

0000bec6 <TMR_SR_cmdMultipleProtocolSearch>:
    bec6:	3f 92       	push	r3
    bec8:	4f 92       	push	r4
    beca:	5f 92       	push	r5
    becc:	6f 92       	push	r6
    bece:	7f 92       	push	r7
    bed0:	8f 92       	push	r8
    bed2:	9f 92       	push	r9
    bed4:	af 92       	push	r10
    bed6:	bf 92       	push	r11
    bed8:	cf 92       	push	r12
    beda:	df 92       	push	r13
    bedc:	ef 92       	push	r14
    bede:	ff 92       	push	r15
    bee0:	0f 93       	push	r16
    bee2:	1f 93       	push	r17
    bee4:	cf 93       	push	r28
    bee6:	df 93       	push	r29
    bee8:	cd b7       	in	r28, 0x3d	; 61
    beea:	de b7       	in	r29, 0x3e	; 62
    beec:	c2 50       	subi	r28, 0x02	; 2
    beee:	d1 40       	sbci	r29, 0x01	; 1
    bef0:	0f b6       	in	r0, 0x3f	; 63
    bef2:	f8 94       	cli
    bef4:	de bf       	out	0x3e, r29	; 62
    bef6:	0f be       	out	0x3f, r0	; 63
    bef8:	cd bf       	out	0x3d, r28	; 61
    befa:	4c 01       	movw	r8, r24
    befc:	36 2e       	mov	r3, r22
    befe:	36 01       	movw	r6, r12
    bf00:	25 01       	movw	r4, r10
    bf02:	f5 01       	movw	r30, r10
    bf04:	10 82       	st	Z, r1
    bf06:	11 82       	std	Z+1, r1	; 0x01
    bf08:	12 82       	std	Z+2, r1	; 0x02
    bf0a:	13 82       	std	Z+3, r1	; 0x03
    bf0c:	56 01       	movw	r10, r12
    bf0e:	67 01       	movw	r12, r14
    bf10:	78 01       	movw	r14, r16
    bf12:	89 01       	movw	r16, r18
    bf14:	9a 01       	movw	r18, r20
    bf16:	46 2f       	mov	r20, r22
    bf18:	be 01       	movw	r22, r28
    bf1a:	6f 5f       	subi	r22, 0xFF	; 255
    bf1c:	7f 4f       	sbci	r23, 0xFF	; 255
    bf1e:	cc da       	rcall	.-2664   	; 0xb4b8 <TMR_SR_msgSetupMultipleProtocolSearch>
    bf20:	61 15       	cp	r22, r1
    bf22:	71 05       	cpc	r23, r1
    bf24:	81 05       	cpc	r24, r1
    bf26:	91 05       	cpc	r25, r1
    bf28:	09 f0       	breq	.+2      	; 0xbf2c <TMR_SR_cmdMultipleProtocolSearch+0x66>
    bf2a:	bf c0       	rjmp	.+382    	; 0xc0aa <TMR_SR_cmdMultipleProtocolSearch+0x1e4>
    bf2c:	f2 e2       	ldi	r31, 0x22	; 34
    bf2e:	3f 12       	cpse	r3, r31
    bf30:	c0 c0       	rjmp	.+384    	; 0xc0b2 <TMR_SR_cmdMultipleProtocolSearch+0x1ec>
    bf32:	f4 01       	movw	r30, r8
    bf34:	e0 54       	subi	r30, 0x40	; 64
    bf36:	fb 4f       	sbci	r31, 0xFB	; 251
    bf38:	30 82       	st	Z, r3
    bf3a:	ea 54       	subi	r30, 0x4A	; 74
    bf3c:	f4 40       	sbci	r31, 0x04	; 4
    bf3e:	80 81       	ld	r24, Z
    bf40:	88 23       	and	r24, r24
    bf42:	29 f1       	breq	.+74     	; 0xbf8e <TMR_SR_cmdMultipleProtocolSearch+0xc8>
    bf44:	83 01       	movw	r16, r6
    bf46:	20 e0       	ldi	r18, 0x00	; 0
    bf48:	30 e0       	ldi	r19, 0x00	; 0
    bf4a:	ae 01       	movw	r20, r28
    bf4c:	4f 5f       	subi	r20, 0xFF	; 255
    bf4e:	5e 4f       	sbci	r21, 0xFE	; 254
    bf50:	be 01       	movw	r22, r28
    bf52:	6f 5f       	subi	r22, 0xFF	; 255
    bf54:	7f 4f       	sbci	r23, 0xFF	; 255
    bf56:	c4 01       	movw	r24, r8
    bf58:	0e 94 c1 32 	call	0x6582	; 0x6582 <TMR_SR_sendMessage>
    bf5c:	61 15       	cp	r22, r1
    bf5e:	71 05       	cpc	r23, r1
    bf60:	81 05       	cpc	r24, r1
    bf62:	91 05       	cpc	r25, r1
    bf64:	21 f0       	breq	.+8      	; 0xbf6e <TMR_SR_cmdMultipleProtocolSearch+0xa8>
    bf66:	46 2f       	mov	r20, r22
    bf68:	37 2f       	mov	r19, r23
    bf6a:	28 2f       	mov	r18, r24
    bf6c:	b0 c0       	rjmp	.+352    	; 0xc0ce <TMR_SR_cmdMultipleProtocolSearch+0x208>
    bf6e:	f4 01       	movw	r30, r8
    bf70:	e5 58       	subi	r30, 0x85	; 133
    bf72:	fe 4f       	sbci	r31, 0xFE	; 254
    bf74:	81 e0       	ldi	r24, 0x01	; 1
    bf76:	80 83       	st	Z, r24
    bf78:	ef 5b       	subi	r30, 0xBF	; 191
    bf7a:	fd 4f       	sbci	r31, 0xFD	; 253
    bf7c:	81 e0       	ldi	r24, 0x01	; 1
    bf7e:	90 e0       	ldi	r25, 0x00	; 0
    bf80:	91 83       	std	Z+1, r25	; 0x01
    bf82:	80 83       	st	Z, r24
    bf84:	40 e0       	ldi	r20, 0x00	; 0
    bf86:	30 e0       	ldi	r19, 0x00	; 0
    bf88:	20 e0       	ldi	r18, 0x00	; 0
    bf8a:	90 e0       	ldi	r25, 0x00	; 0
    bf8c:	a0 c0       	rjmp	.+320    	; 0xc0ce <TMR_SR_cmdMultipleProtocolSearch+0x208>
    bf8e:	93 01       	movw	r18, r6
    bf90:	40 e0       	ldi	r20, 0x00	; 0
    bf92:	50 e0       	ldi	r21, 0x00	; 0
    bf94:	be 01       	movw	r22, r28
    bf96:	6f 5f       	subi	r22, 0xFF	; 255
    bf98:	7f 4f       	sbci	r23, 0xFF	; 255
    bf9a:	c4 01       	movw	r24, r8
    bf9c:	0e 94 e3 35 	call	0x6bc6	; 0x6bc6 <TMR_SR_sendTimeout>
    bfa0:	6b 01       	movw	r12, r22
    bfa2:	7c 01       	movw	r14, r24
    bfa4:	c1 14       	cp	r12, r1
    bfa6:	84 e0       	ldi	r24, 0x04	; 4
    bfa8:	d8 06       	cpc	r13, r24
    bfaa:	e1 04       	cpc	r14, r1
    bfac:	82 e0       	ldi	r24, 0x02	; 2
    bfae:	f8 06       	cpc	r15, r24
    bfb0:	79 f4       	brne	.+30     	; 0xbfd0 <TMR_SR_cmdMultipleProtocolSearch+0x10a>
    bfb2:	f2 01       	movw	r30, r4
    bfb4:	10 82       	st	Z, r1
    bfb6:	11 82       	std	Z+1, r1	; 0x01
    bfb8:	12 82       	std	Z+2, r1	; 0x02
    bfba:	13 82       	std	Z+3, r1	; 0x03
    bfbc:	f4 01       	movw	r30, r8
    bfbe:	e4 54       	subi	r30, 0x44	; 68
    bfc0:	fc 4f       	sbci	r31, 0xFC	; 252
    bfc2:	11 82       	std	Z+1, r1	; 0x01
    bfc4:	10 82       	st	Z, r1
    bfc6:	4c 2d       	mov	r20, r12
    bfc8:	3d 2d       	mov	r19, r13
    bfca:	2e 2d       	mov	r18, r14
    bfcc:	9f 2d       	mov	r25, r15
    bfce:	7f c0       	rjmp	.+254    	; 0xc0ce <TMR_SR_cmdMultipleProtocolSearch+0x208>
    bfd0:	f1 e0       	ldi	r31, 0x01	; 1
    bfd2:	cf 16       	cp	r12, r31
    bfd4:	ff e7       	ldi	r31, 0x7F	; 127
    bfd6:	df 06       	cpc	r13, r31
    bfd8:	e1 04       	cpc	r14, r1
    bfda:	f2 e0       	ldi	r31, 0x02	; 2
    bfdc:	ff 06       	cpc	r15, r31
    bfde:	09 f4       	brne	.+2      	; 0xbfe2 <TMR_SR_cmdMultipleProtocolSearch+0x11c>
    bfe0:	6d c0       	rjmp	.+218    	; 0xc0bc <TMR_SR_cmdMultipleProtocolSearch+0x1f6>
    bfe2:	81 e0       	ldi	r24, 0x01	; 1
    bfe4:	c8 16       	cp	r12, r24
    bfe6:	d1 04       	cpc	r13, r1
    bfe8:	e1 04       	cpc	r14, r1
    bfea:	f8 06       	cpc	r15, r24
    bfec:	09 f4       	brne	.+2      	; 0xbff0 <TMR_SR_cmdMultipleProtocolSearch+0x12a>
    bfee:	6b c0       	rjmp	.+214    	; 0xc0c6 <TMR_SR_cmdMultipleProtocolSearch+0x200>
    bff0:	c1 14       	cp	r12, r1
    bff2:	d1 04       	cpc	r13, r1
    bff4:	e1 04       	cpc	r14, r1
    bff6:	f1 04       	cpc	r15, r1
    bff8:	39 f1       	breq	.+78     	; 0xc048 <TMR_SR_cmdMultipleProtocolSearch+0x182>
    bffa:	be 01       	movw	r22, r28
    bffc:	6f 5f       	subi	r22, 0xFF	; 255
    bffe:	7e 4f       	sbci	r23, 0xFE	; 254
    c000:	c4 01       	movw	r24, r8
    c002:	0e 94 c3 43 	call	0x8786	; 0x8786 <TMR_SR_cmdGetTagsRemaining>
    c006:	61 15       	cp	r22, r1
    c008:	71 05       	cpc	r23, r1
    c00a:	81 05       	cpc	r24, r1
    c00c:	91 05       	cpc	r25, r1
    c00e:	c1 f4       	brne	.+48     	; 0xc040 <TMR_SR_cmdMultipleProtocolSearch+0x17a>
    c010:	cf 5f       	subi	r28, 0xFF	; 255
    c012:	de 4f       	sbci	r29, 0xFE	; 254
    c014:	88 81       	ld	r24, Y
    c016:	99 81       	ldd	r25, Y+1	; 0x01
    c018:	c1 50       	subi	r28, 0x01	; 1
    c01a:	d1 40       	sbci	r29, 0x01	; 1
    c01c:	ac 01       	movw	r20, r24
    c01e:	60 e0       	ldi	r22, 0x00	; 0
    c020:	70 e0       	ldi	r23, 0x00	; 0
    c022:	f2 01       	movw	r30, r4
    c024:	40 83       	st	Z, r20
    c026:	51 83       	std	Z+1, r21	; 0x01
    c028:	62 83       	std	Z+2, r22	; 0x02
    c02a:	73 83       	std	Z+3, r23	; 0x03
    c02c:	f4 01       	movw	r30, r8
    c02e:	e4 54       	subi	r30, 0x44	; 68
    c030:	fc 4f       	sbci	r31, 0xFC	; 252
    c032:	91 83       	std	Z+1, r25	; 0x01
    c034:	80 83       	st	Z, r24
    c036:	4c 2d       	mov	r20, r12
    c038:	3d 2d       	mov	r19, r13
    c03a:	2e 2d       	mov	r18, r14
    c03c:	9f 2d       	mov	r25, r15
    c03e:	47 c0       	rjmp	.+142    	; 0xc0ce <TMR_SR_cmdMultipleProtocolSearch+0x208>
    c040:	46 2f       	mov	r20, r22
    c042:	37 2f       	mov	r19, r23
    c044:	28 2f       	mov	r18, r24
    c046:	43 c0       	rjmp	.+134    	; 0xc0ce <TMR_SR_cmdMultipleProtocolSearch+0x208>
    c048:	8a 85       	ldd	r24, Y+10	; 0x0a
    c04a:	90 e0       	ldi	r25, 0x00	; 0
    c04c:	a0 e0       	ldi	r26, 0x00	; 0
    c04e:	b0 e0       	ldi	r27, 0x00	; 0
    c050:	78 2f       	mov	r23, r24
    c052:	66 27       	eor	r22, r22
    c054:	55 27       	eor	r21, r21
    c056:	44 27       	eor	r20, r20
    c058:	9b 85       	ldd	r25, Y+11	; 0x0b
    c05a:	89 2f       	mov	r24, r25
    c05c:	90 e0       	ldi	r25, 0x00	; 0
    c05e:	a0 e0       	ldi	r26, 0x00	; 0
    c060:	b0 e0       	ldi	r27, 0x00	; 0
    c062:	dc 01       	movw	r26, r24
    c064:	99 27       	eor	r25, r25
    c066:	88 27       	eor	r24, r24
    c068:	84 2b       	or	r24, r20
    c06a:	95 2b       	or	r25, r21
    c06c:	a6 2b       	or	r26, r22
    c06e:	b7 2b       	or	r27, r23
    c070:	4c 85       	ldd	r20, Y+12	; 0x0c
    c072:	50 e0       	ldi	r21, 0x00	; 0
    c074:	60 e0       	ldi	r22, 0x00	; 0
    c076:	70 e0       	ldi	r23, 0x00	; 0
    c078:	76 2f       	mov	r23, r22
    c07a:	65 2f       	mov	r22, r21
    c07c:	54 2f       	mov	r21, r20
    c07e:	44 27       	eor	r20, r20
    c080:	84 2b       	or	r24, r20
    c082:	95 2b       	or	r25, r21
    c084:	a6 2b       	or	r26, r22
    c086:	b7 2b       	or	r27, r23
    c088:	2d 85       	ldd	r18, Y+13	; 0x0d
    c08a:	82 2b       	or	r24, r18
    c08c:	f2 01       	movw	r30, r4
    c08e:	80 83       	st	Z, r24
    c090:	91 83       	std	Z+1, r25	; 0x01
    c092:	a2 83       	std	Z+2, r26	; 0x02
    c094:	b3 83       	std	Z+3, r27	; 0x03
    c096:	f4 01       	movw	r30, r8
    c098:	e4 54       	subi	r30, 0x44	; 68
    c09a:	fc 4f       	sbci	r31, 0xFC	; 252
    c09c:	91 83       	std	Z+1, r25	; 0x01
    c09e:	80 83       	st	Z, r24
    c0a0:	40 e0       	ldi	r20, 0x00	; 0
    c0a2:	30 e0       	ldi	r19, 0x00	; 0
    c0a4:	20 e0       	ldi	r18, 0x00	; 0
    c0a6:	90 e0       	ldi	r25, 0x00	; 0
    c0a8:	12 c0       	rjmp	.+36     	; 0xc0ce <TMR_SR_cmdMultipleProtocolSearch+0x208>
    c0aa:	46 2f       	mov	r20, r22
    c0ac:	37 2f       	mov	r19, r23
    c0ae:	28 2f       	mov	r18, r24
    c0b0:	0e c0       	rjmp	.+28     	; 0xc0ce <TMR_SR_cmdMultipleProtocolSearch+0x208>
    c0b2:	40 e0       	ldi	r20, 0x00	; 0
    c0b4:	30 e0       	ldi	r19, 0x00	; 0
    c0b6:	20 e0       	ldi	r18, 0x00	; 0
    c0b8:	90 e0       	ldi	r25, 0x00	; 0
    c0ba:	09 c0       	rjmp	.+18     	; 0xc0ce <TMR_SR_cmdMultipleProtocolSearch+0x208>
    c0bc:	4c 2d       	mov	r20, r12
    c0be:	3d 2d       	mov	r19, r13
    c0c0:	2e 2d       	mov	r18, r14
    c0c2:	9f 2d       	mov	r25, r15
    c0c4:	04 c0       	rjmp	.+8      	; 0xc0ce <TMR_SR_cmdMultipleProtocolSearch+0x208>
    c0c6:	4c 2d       	mov	r20, r12
    c0c8:	3d 2d       	mov	r19, r13
    c0ca:	2e 2d       	mov	r18, r14
    c0cc:	9f 2d       	mov	r25, r15
    c0ce:	64 2f       	mov	r22, r20
    c0d0:	73 2f       	mov	r23, r19
    c0d2:	82 2f       	mov	r24, r18
    c0d4:	ce 5f       	subi	r28, 0xFE	; 254
    c0d6:	de 4f       	sbci	r29, 0xFE	; 254
    c0d8:	0f b6       	in	r0, 0x3f	; 63
    c0da:	f8 94       	cli
    c0dc:	de bf       	out	0x3e, r29	; 62
    c0de:	0f be       	out	0x3f, r0	; 63
    c0e0:	cd bf       	out	0x3d, r28	; 61
    c0e2:	df 91       	pop	r29
    c0e4:	cf 91       	pop	r28
    c0e6:	1f 91       	pop	r17
    c0e8:	0f 91       	pop	r16
    c0ea:	ff 90       	pop	r15
    c0ec:	ef 90       	pop	r14
    c0ee:	df 90       	pop	r13
    c0f0:	cf 90       	pop	r12
    c0f2:	bf 90       	pop	r11
    c0f4:	af 90       	pop	r10
    c0f6:	9f 90       	pop	r9
    c0f8:	8f 90       	pop	r8
    c0fa:	7f 90       	pop	r7
    c0fc:	6f 90       	pop	r6
    c0fe:	5f 90       	pop	r5
    c100:	4f 90       	pop	r4
    c102:	3f 90       	pop	r3
    c104:	08 95       	ret

0000c106 <TMR_SR_cmdGetAvailableProtocols>:
    c106:	8f 92       	push	r8
    c108:	9f 92       	push	r9
    c10a:	af 92       	push	r10
    c10c:	bf 92       	push	r11
    c10e:	ef 92       	push	r14
    c110:	ff 92       	push	r15
    c112:	0f 93       	push	r16
    c114:	1f 93       	push	r17
    c116:	cf 93       	push	r28
    c118:	df 93       	push	r29
    c11a:	cd b7       	in	r28, 0x3d	; 61
    c11c:	de b7       	in	r29, 0x3e	; 62
    c11e:	da 95       	dec	r29
    c120:	0f b6       	in	r0, 0x3f	; 63
    c122:	f8 94       	cli
    c124:	de bf       	out	0x3e, r29	; 62
    c126:	0f be       	out	0x3f, r0	; 63
    c128:	cd bf       	out	0x3d, r28	; 61
    c12a:	7c 01       	movw	r14, r24
    c12c:	8b 01       	movw	r16, r22
    c12e:	40 e7       	ldi	r20, 0x70	; 112
    c130:	be 01       	movw	r22, r28
    c132:	6f 5f       	subi	r22, 0xFF	; 255
    c134:	7f 4f       	sbci	r23, 0xFF	; 255
    c136:	0e 94 8d 36 	call	0x6d1a	; 0x6d1a <TMR_SR_callSendCmd>
    c13a:	61 15       	cp	r22, r1
    c13c:	71 05       	cpc	r23, r1
    c13e:	81 05       	cpc	r24, r1
    c140:	91 05       	cpc	r25, r1
    c142:	09 f0       	breq	.+2      	; 0xc146 <TMR_SR_cmdGetAvailableProtocols+0x40>
    c144:	5f c0       	rjmp	.+190    	; 0xc204 <TMR_SR_cmdGetAvailableProtocols+0xfe>
    c146:	d8 01       	movw	r26, r16
    c148:	13 96       	adiw	r26, 0x03	; 3
    c14a:	1c 92       	st	X, r1
    c14c:	90 e0       	ldi	r25, 0x00	; 0
    c14e:	21 c0       	rjmp	.+66     	; 0xc192 <TMR_SR_cmdGetAvailableProtocols+0x8c>
    c150:	d8 01       	movw	r26, r16
    c152:	13 96       	adiw	r26, 0x03	; 3
    c154:	ec 91       	ld	r30, X
    c156:	13 97       	sbiw	r26, 0x03	; 3
    c158:	81 e0       	ldi	r24, 0x01	; 1
    c15a:	8e 0f       	add	r24, r30
    c15c:	13 96       	adiw	r26, 0x03	; 3
    c15e:	8c 93       	st	X, r24
    c160:	13 97       	sbiw	r26, 0x03	; 3
    c162:	12 96       	adiw	r26, 0x02	; 2
    c164:	2c 91       	ld	r18, X
    c166:	12 97       	sbiw	r26, 0x02	; 2
    c168:	28 17       	cp	r18, r24
    c16a:	90 f0       	brcs	.+36     	; 0xc190 <TMR_SR_cmdGetAvailableProtocols+0x8a>
    c16c:	2d 91       	ld	r18, X+
    c16e:	3c 91       	ld	r19, X
    c170:	e8 2f       	mov	r30, r24
    c172:	f0 e0       	ldi	r31, 0x00	; 0
    c174:	31 97       	sbiw	r30, 0x01	; 1
    c176:	e2 0f       	add	r30, r18
    c178:	f3 1f       	adc	r31, r19
    c17a:	a9 2f       	mov	r26, r25
    c17c:	b0 e0       	ldi	r27, 0x00	; 0
    c17e:	16 96       	adiw	r26, 0x06	; 6
    c180:	21 e0       	ldi	r18, 0x01	; 1
    c182:	30 e0       	ldi	r19, 0x00	; 0
    c184:	2c 0f       	add	r18, r28
    c186:	3d 1f       	adc	r19, r29
    c188:	a2 0f       	add	r26, r18
    c18a:	b3 1f       	adc	r27, r19
    c18c:	8c 91       	ld	r24, X
    c18e:	80 83       	st	Z, r24
    c190:	9e 5f       	subi	r25, 0xFE	; 254
    c192:	8a 81       	ldd	r24, Y+2	; 0x02
    c194:	98 17       	cp	r25, r24
    c196:	e0 f2       	brcs	.-72     	; 0xc150 <TMR_SR_cmdGetAvailableProtocols+0x4a>
    c198:	f7 01       	movw	r30, r14
    c19a:	e3 58       	subi	r30, 0x83	; 131
    c19c:	fc 4f       	sbci	r31, 0xFC	; 252
    c19e:	10 82       	st	Z, r1
    c1a0:	11 82       	std	Z+1, r1	; 0x01
    c1a2:	12 82       	std	Z+2, r1	; 0x02
    c1a4:	13 82       	std	Z+3, r1	; 0x03
    c1a6:	40 e0       	ldi	r20, 0x00	; 0
    c1a8:	24 c0       	rjmp	.+72     	; 0xc1f2 <TMR_SR_cmdGetAvailableProtocols+0xec>
    c1aa:	d8 01       	movw	r26, r16
    c1ac:	ed 91       	ld	r30, X+
    c1ae:	fc 91       	ld	r31, X
    c1b0:	e4 0f       	add	r30, r20
    c1b2:	f1 1d       	adc	r31, r1
    c1b4:	20 81       	ld	r18, Z
    c1b6:	30 e0       	ldi	r19, 0x00	; 0
    c1b8:	21 50       	subi	r18, 0x01	; 1
    c1ba:	31 09       	sbc	r19, r1
    c1bc:	81 e0       	ldi	r24, 0x01	; 1
    c1be:	90 e0       	ldi	r25, 0x00	; 0
    c1c0:	02 c0       	rjmp	.+4      	; 0xc1c6 <TMR_SR_cmdGetAvailableProtocols+0xc0>
    c1c2:	88 0f       	add	r24, r24
    c1c4:	99 1f       	adc	r25, r25
    c1c6:	2a 95       	dec	r18
    c1c8:	e2 f7       	brpl	.-8      	; 0xc1c2 <TMR_SR_cmdGetAvailableProtocols+0xbc>
    c1ca:	f7 01       	movw	r30, r14
    c1cc:	e3 58       	subi	r30, 0x83	; 131
    c1ce:	fc 4f       	sbci	r31, 0xFC	; 252
    c1d0:	09 2e       	mov	r0, r25
    c1d2:	00 0c       	add	r0, r0
    c1d4:	aa 0b       	sbc	r26, r26
    c1d6:	bb 0b       	sbc	r27, r27
    c1d8:	80 80       	ld	r8, Z
    c1da:	91 80       	ldd	r9, Z+1	; 0x01
    c1dc:	a2 80       	ldd	r10, Z+2	; 0x02
    c1de:	b3 80       	ldd	r11, Z+3	; 0x03
    c1e0:	88 29       	or	r24, r8
    c1e2:	99 29       	or	r25, r9
    c1e4:	aa 29       	or	r26, r10
    c1e6:	bb 29       	or	r27, r11
    c1e8:	80 83       	st	Z, r24
    c1ea:	91 83       	std	Z+1, r25	; 0x01
    c1ec:	a2 83       	std	Z+2, r26	; 0x02
    c1ee:	b3 83       	std	Z+3, r27	; 0x03
    c1f0:	4f 5f       	subi	r20, 0xFF	; 255
    c1f2:	f8 01       	movw	r30, r16
    c1f4:	83 81       	ldd	r24, Z+3	; 0x03
    c1f6:	48 17       	cp	r20, r24
    c1f8:	c0 f2       	brcs	.-80     	; 0xc1aa <TMR_SR_cmdGetAvailableProtocols+0xa4>
    c1fa:	40 e0       	ldi	r20, 0x00	; 0
    c1fc:	30 e0       	ldi	r19, 0x00	; 0
    c1fe:	20 e0       	ldi	r18, 0x00	; 0
    c200:	90 e0       	ldi	r25, 0x00	; 0
    c202:	03 c0       	rjmp	.+6      	; 0xc20a <TMR_SR_cmdGetAvailableProtocols+0x104>
    c204:	46 2f       	mov	r20, r22
    c206:	37 2f       	mov	r19, r23
    c208:	28 2f       	mov	r18, r24
    c20a:	64 2f       	mov	r22, r20
    c20c:	73 2f       	mov	r23, r19
    c20e:	82 2f       	mov	r24, r18
    c210:	d3 95       	inc	r29
    c212:	0f b6       	in	r0, 0x3f	; 63
    c214:	f8 94       	cli
    c216:	de bf       	out	0x3e, r29	; 62
    c218:	0f be       	out	0x3f, r0	; 63
    c21a:	cd bf       	out	0x3d, r28	; 61
    c21c:	df 91       	pop	r29
    c21e:	cf 91       	pop	r28
    c220:	1f 91       	pop	r17
    c222:	0f 91       	pop	r16
    c224:	ff 90       	pop	r15
    c226:	ef 90       	pop	r14
    c228:	bf 90       	pop	r11
    c22a:	af 90       	pop	r10
    c22c:	9f 90       	pop	r9
    c22e:	8f 90       	pop	r8
    c230:	08 95       	ret

0000c232 <TMR_SR_cmdGetAvailableRegions>:
    c232:	0f 93       	push	r16
    c234:	1f 93       	push	r17
    c236:	cf 93       	push	r28
    c238:	df 93       	push	r29
    c23a:	cd b7       	in	r28, 0x3d	; 61
    c23c:	de b7       	in	r29, 0x3e	; 62
    c23e:	da 95       	dec	r29
    c240:	0f b6       	in	r0, 0x3f	; 63
    c242:	f8 94       	cli
    c244:	de bf       	out	0x3e, r29	; 62
    c246:	0f be       	out	0x3f, r0	; 63
    c248:	cd bf       	out	0x3d, r28	; 61
    c24a:	8b 01       	movw	r16, r22
    c24c:	41 e7       	ldi	r20, 0x71	; 113
    c24e:	be 01       	movw	r22, r28
    c250:	6f 5f       	subi	r22, 0xFF	; 255
    c252:	7f 4f       	sbci	r23, 0xFF	; 255
    c254:	0e 94 8d 36 	call	0x6d1a	; 0x6d1a <TMR_SR_callSendCmd>
    c258:	61 15       	cp	r22, r1
    c25a:	71 05       	cpc	r23, r1
    c25c:	81 05       	cpc	r24, r1
    c25e:	91 05       	cpc	r25, r1
    c260:	71 f5       	brne	.+92     	; 0xc2be <TMR_SR_cmdGetAvailableRegions+0x8c>
    c262:	d8 01       	movw	r26, r16
    c264:	13 96       	adiw	r26, 0x03	; 3
    c266:	1c 92       	st	X, r1
    c268:	90 e0       	ldi	r25, 0x00	; 0
    c26a:	21 c0       	rjmp	.+66     	; 0xc2ae <TMR_SR_cmdGetAvailableRegions+0x7c>
    c26c:	d8 01       	movw	r26, r16
    c26e:	13 96       	adiw	r26, 0x03	; 3
    c270:	ec 91       	ld	r30, X
    c272:	13 97       	sbiw	r26, 0x03	; 3
    c274:	81 e0       	ldi	r24, 0x01	; 1
    c276:	8e 0f       	add	r24, r30
    c278:	13 96       	adiw	r26, 0x03	; 3
    c27a:	8c 93       	st	X, r24
    c27c:	13 97       	sbiw	r26, 0x03	; 3
    c27e:	12 96       	adiw	r26, 0x02	; 2
    c280:	2c 91       	ld	r18, X
    c282:	12 97       	sbiw	r26, 0x02	; 2
    c284:	28 17       	cp	r18, r24
    c286:	90 f0       	brcs	.+36     	; 0xc2ac <TMR_SR_cmdGetAvailableRegions+0x7a>
    c288:	2d 91       	ld	r18, X+
    c28a:	3c 91       	ld	r19, X
    c28c:	e8 2f       	mov	r30, r24
    c28e:	f0 e0       	ldi	r31, 0x00	; 0
    c290:	31 97       	sbiw	r30, 0x01	; 1
    c292:	e2 0f       	add	r30, r18
    c294:	f3 1f       	adc	r31, r19
    c296:	a9 2f       	mov	r26, r25
    c298:	b0 e0       	ldi	r27, 0x00	; 0
    c29a:	15 96       	adiw	r26, 0x05	; 5
    c29c:	21 e0       	ldi	r18, 0x01	; 1
    c29e:	30 e0       	ldi	r19, 0x00	; 0
    c2a0:	2c 0f       	add	r18, r28
    c2a2:	3d 1f       	adc	r19, r29
    c2a4:	a2 0f       	add	r26, r18
    c2a6:	b3 1f       	adc	r27, r19
    c2a8:	8c 91       	ld	r24, X
    c2aa:	80 83       	st	Z, r24
    c2ac:	9f 5f       	subi	r25, 0xFF	; 255
    c2ae:	8a 81       	ldd	r24, Y+2	; 0x02
    c2b0:	98 17       	cp	r25, r24
    c2b2:	e0 f2       	brcs	.-72     	; 0xc26c <TMR_SR_cmdGetAvailableRegions+0x3a>
    c2b4:	40 e0       	ldi	r20, 0x00	; 0
    c2b6:	30 e0       	ldi	r19, 0x00	; 0
    c2b8:	20 e0       	ldi	r18, 0x00	; 0
    c2ba:	90 e0       	ldi	r25, 0x00	; 0
    c2bc:	03 c0       	rjmp	.+6      	; 0xc2c4 <TMR_SR_cmdGetAvailableRegions+0x92>
    c2be:	46 2f       	mov	r20, r22
    c2c0:	37 2f       	mov	r19, r23
    c2c2:	28 2f       	mov	r18, r24
    c2c4:	64 2f       	mov	r22, r20
    c2c6:	73 2f       	mov	r23, r19
    c2c8:	82 2f       	mov	r24, r18
    c2ca:	d3 95       	inc	r29
    c2cc:	0f b6       	in	r0, 0x3f	; 63
    c2ce:	f8 94       	cli
    c2d0:	de bf       	out	0x3e, r29	; 62
    c2d2:	0f be       	out	0x3f, r0	; 63
    c2d4:	cd bf       	out	0x3d, r28	; 61
    c2d6:	df 91       	pop	r29
    c2d8:	cf 91       	pop	r28
    c2da:	1f 91       	pop	r17
    c2dc:	0f 91       	pop	r16
    c2de:	08 95       	ret

0000c2e0 <TMR_SR_cmdGetTemperature>:
    c2e0:	0f 93       	push	r16
    c2e2:	1f 93       	push	r17
    c2e4:	cf 93       	push	r28
    c2e6:	df 93       	push	r29
    c2e8:	cd b7       	in	r28, 0x3d	; 61
    c2ea:	de b7       	in	r29, 0x3e	; 62
    c2ec:	da 95       	dec	r29
    c2ee:	0f b6       	in	r0, 0x3f	; 63
    c2f0:	f8 94       	cli
    c2f2:	de bf       	out	0x3e, r29	; 62
    c2f4:	0f be       	out	0x3f, r0	; 63
    c2f6:	cd bf       	out	0x3d, r28	; 61
    c2f8:	8b 01       	movw	r16, r22
    c2fa:	42 e7       	ldi	r20, 0x72	; 114
    c2fc:	be 01       	movw	r22, r28
    c2fe:	6f 5f       	subi	r22, 0xFF	; 255
    c300:	7f 4f       	sbci	r23, 0xFF	; 255
    c302:	0e 94 8d 36 	call	0x6d1a	; 0x6d1a <TMR_SR_callSendCmd>
    c306:	61 15       	cp	r22, r1
    c308:	71 05       	cpc	r23, r1
    c30a:	81 05       	cpc	r24, r1
    c30c:	91 05       	cpc	r25, r1
    c30e:	41 f4       	brne	.+16     	; 0xc320 <TMR_SR_cmdGetTemperature+0x40>
    c310:	8e 81       	ldd	r24, Y+6	; 0x06
    c312:	f8 01       	movw	r30, r16
    c314:	80 83       	st	Z, r24
    c316:	40 e0       	ldi	r20, 0x00	; 0
    c318:	30 e0       	ldi	r19, 0x00	; 0
    c31a:	20 e0       	ldi	r18, 0x00	; 0
    c31c:	90 e0       	ldi	r25, 0x00	; 0
    c31e:	03 c0       	rjmp	.+6      	; 0xc326 <TMR_SR_cmdGetTemperature+0x46>
    c320:	46 2f       	mov	r20, r22
    c322:	37 2f       	mov	r19, r23
    c324:	28 2f       	mov	r18, r24
    c326:	64 2f       	mov	r22, r20
    c328:	73 2f       	mov	r23, r19
    c32a:	82 2f       	mov	r24, r18
    c32c:	d3 95       	inc	r29
    c32e:	0f b6       	in	r0, 0x3f	; 63
    c330:	f8 94       	cli
    c332:	de bf       	out	0x3e, r29	; 62
    c334:	0f be       	out	0x3f, r0	; 63
    c336:	cd bf       	out	0x3d, r28	; 61
    c338:	df 91       	pop	r29
    c33a:	cf 91       	pop	r28
    c33c:	1f 91       	pop	r17
    c33e:	0f 91       	pop	r16
    c340:	08 95       	ret

0000c342 <TMR_SR_cmdGetReaderStatistics>:
    c342:	8f 92       	push	r8
    c344:	9f 92       	push	r9
    c346:	af 92       	push	r10
    c348:	bf 92       	push	r11
    c34a:	cf 92       	push	r12
    c34c:	df 92       	push	r13
    c34e:	ef 92       	push	r14
    c350:	ff 92       	push	r15
    c352:	0f 93       	push	r16
    c354:	1f 93       	push	r17
    c356:	cf 93       	push	r28
    c358:	df 93       	push	r29
    c35a:	cd b7       	in	r28, 0x3d	; 61
    c35c:	de b7       	in	r29, 0x3e	; 62
    c35e:	da 95       	dec	r29
    c360:	0f b6       	in	r0, 0x3f	; 63
    c362:	f8 94       	cli
    c364:	de bf       	out	0x3e, r29	; 62
    c366:	0f be       	out	0x3f, r0	; 63
    c368:	cd bf       	out	0x3d, r28	; 61
    c36a:	7c 01       	movw	r14, r24
    c36c:	8a 01       	movw	r16, r20
    c36e:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    c372:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    c376:	2c e6       	ldi	r18, 0x6C	; 108
    c378:	2b 83       	std	Y+3, r18	; 0x03
    c37a:	22 e0       	ldi	r18, 0x02	; 2
    c37c:	2c 83       	std	Y+4, r18	; 0x04
    c37e:	03 96       	adiw	r24, 0x03	; 3
    c380:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    c384:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    c388:	6d 83       	std	Y+5, r22	; 0x05
    c38a:	2a 83       	std	Y+2, r18	; 0x02
    c38c:	f7 01       	movw	r30, r14
    c38e:	e0 52       	subi	r30, 0x20	; 32
    c390:	fe 4f       	sbci	r31, 0xFE	; 254
    c392:	20 81       	ld	r18, Z
    c394:	31 81       	ldd	r19, Z+1	; 0x01
    c396:	42 81       	ldd	r20, Z+2	; 0x02
    c398:	53 81       	ldd	r21, Z+3	; 0x03
    c39a:	be 01       	movw	r22, r28
    c39c:	6f 5f       	subi	r22, 0xFF	; 255
    c39e:	7f 4f       	sbci	r23, 0xFF	; 255
    c3a0:	c7 01       	movw	r24, r14
    c3a2:	0e 94 e3 35 	call	0x6bc6	; 0x6bc6 <TMR_SR_sendTimeout>
    c3a6:	61 15       	cp	r22, r1
    c3a8:	71 05       	cpc	r23, r1
    c3aa:	81 05       	cpc	r24, r1
    c3ac:	91 05       	cpc	r25, r1
    c3ae:	09 f0       	breq	.+2      	; 0xc3b2 <TMR_SR_cmdGetReaderStatistics+0x70>
    c3b0:	14 c1       	rjmp	.+552    	; 0xc5da <TMR_SR_cmdGetReaderStatistics+0x298>
    c3b2:	01 15       	cp	r16, r1
    c3b4:	11 05       	cpc	r17, r1
    c3b6:	09 f4       	brne	.+2      	; 0xc3ba <TMR_SR_cmdGetReaderStatistics+0x78>
    c3b8:	14 c1       	rjmp	.+552    	; 0xc5e2 <TMR_SR_cmdGetReaderStatistics+0x2a0>
    c3ba:	f7 01       	movw	r30, r14
    c3bc:	ec 52       	subi	r30, 0x2C	; 44
    c3be:	fe 4f       	sbci	r31, 0xFE	; 254
    c3c0:	01 90       	ld	r0, Z+
    c3c2:	f0 81       	ld	r31, Z
    c3c4:	e0 2d       	mov	r30, r0
    c3c6:	53 81       	ldd	r21, Z+3	; 0x03
    c3c8:	47 e0       	ldi	r20, 0x07	; 7
    c3ca:	f9 c0       	rjmp	.+498    	; 0xc5be <TMR_SR_cmdGetReaderStatistics+0x27c>
    c3cc:	e1 e0       	ldi	r30, 0x01	; 1
    c3ce:	f0 e0       	ldi	r31, 0x00	; 0
    c3d0:	ec 0f       	add	r30, r28
    c3d2:	fd 1f       	adc	r31, r29
    c3d4:	e2 0f       	add	r30, r18
    c3d6:	f3 1f       	adc	r31, r19
    c3d8:	80 81       	ld	r24, Z
    c3da:	80 ff       	sbrs	r24, 0
    c3dc:	6b c0       	rjmp	.+214    	; 0xc4b4 <TMR_SR_cmdGetReaderStatistics+0x172>
    c3de:	4e 5f       	subi	r20, 0xFE	; 254
    c3e0:	60 e0       	ldi	r22, 0x00	; 0
    c3e2:	62 c0       	rjmp	.+196    	; 0xc4a8 <TMR_SR_cmdGetReaderStatistics+0x166>
    c3e4:	e1 e0       	ldi	r30, 0x01	; 1
    c3e6:	f0 e0       	ldi	r31, 0x00	; 0
    c3e8:	ec 0f       	add	r30, r28
    c3ea:	fd 1f       	adc	r31, r29
    c3ec:	e4 0f       	add	r30, r20
    c3ee:	f1 1d       	adc	r31, r1
    c3f0:	20 81       	ld	r18, Z
    c3f2:	86 2f       	mov	r24, r22
    c3f4:	90 e0       	ldi	r25, 0x00	; 0
    c3f6:	30 e0       	ldi	r19, 0x00	; 0
    c3f8:	21 50       	subi	r18, 0x01	; 1
    c3fa:	31 09       	sbc	r19, r1
    c3fc:	82 17       	cp	r24, r18
    c3fe:	93 07       	cpc	r25, r19
    c400:	09 f0       	breq	.+2      	; 0xc404 <TMR_SR_cmdGetReaderStatistics+0xc2>
    c402:	46 c0       	rjmp	.+140    	; 0xc490 <TMR_SR_cmdGetReaderStatistics+0x14e>
    c404:	4b 5f       	subi	r20, 0xFB	; 251
    c406:	24 2f       	mov	r18, r20
    c408:	30 e0       	ldi	r19, 0x00	; 0
    c40a:	f9 01       	movw	r30, r18
    c40c:	34 97       	sbiw	r30, 0x04	; 4
    c40e:	a1 e0       	ldi	r26, 0x01	; 1
    c410:	b0 e0       	ldi	r27, 0x00	; 0
    c412:	ac 0f       	add	r26, r28
    c414:	bd 1f       	adc	r27, r29
    c416:	ea 0f       	add	r30, r26
    c418:	fb 1f       	adc	r31, r27
    c41a:	c0 80       	ld	r12, Z
    c41c:	d1 2c       	mov	r13, r1
    c41e:	e1 2c       	mov	r14, r1
    c420:	f1 2c       	mov	r15, r1
    c422:	bc 2c       	mov	r11, r12
    c424:	aa 24       	eor	r10, r10
    c426:	99 24       	eor	r9, r9
    c428:	88 24       	eor	r8, r8
    c42a:	f9 01       	movw	r30, r18
    c42c:	33 97       	sbiw	r30, 0x03	; 3
    c42e:	ea 0f       	add	r30, r26
    c430:	fb 1f       	adc	r31, r27
    c432:	70 81       	ld	r23, Z
    c434:	c7 2e       	mov	r12, r23
    c436:	d1 2c       	mov	r13, r1
    c438:	e1 2c       	mov	r14, r1
    c43a:	f1 2c       	mov	r15, r1
    c43c:	76 01       	movw	r14, r12
    c43e:	dd 24       	eor	r13, r13
    c440:	cc 24       	eor	r12, r12
    c442:	c8 28       	or	r12, r8
    c444:	d9 28       	or	r13, r9
    c446:	ea 28       	or	r14, r10
    c448:	fb 28       	or	r15, r11
    c44a:	f9 01       	movw	r30, r18
    c44c:	32 97       	sbiw	r30, 0x02	; 2
    c44e:	ea 0f       	add	r30, r26
    c450:	fb 1f       	adc	r31, r27
    c452:	80 80       	ld	r8, Z
    c454:	91 2c       	mov	r9, r1
    c456:	a1 2c       	mov	r10, r1
    c458:	b1 2c       	mov	r11, r1
    c45a:	ba 2c       	mov	r11, r10
    c45c:	a9 2c       	mov	r10, r9
    c45e:	98 2c       	mov	r9, r8
    c460:	88 24       	eor	r8, r8
    c462:	c8 28       	or	r12, r8
    c464:	d9 28       	or	r13, r9
    c466:	ea 28       	or	r14, r10
    c468:	fb 28       	or	r15, r11
    c46a:	21 50       	subi	r18, 0x01	; 1
    c46c:	31 09       	sbc	r19, r1
    c46e:	fd 01       	movw	r30, r26
    c470:	e2 0f       	add	r30, r18
    c472:	f3 1f       	adc	r31, r19
    c474:	20 81       	ld	r18, Z
    c476:	c2 2a       	or	r12, r18
    c478:	88 0f       	add	r24, r24
    c47a:	99 1f       	adc	r25, r25
    c47c:	88 0f       	add	r24, r24
    c47e:	99 1f       	adc	r25, r25
    c480:	f8 01       	movw	r30, r16
    c482:	e8 0f       	add	r30, r24
    c484:	f9 1f       	adc	r31, r25
    c486:	c1 82       	std	Z+1, r12	; 0x01
    c488:	d2 82       	std	Z+2, r13	; 0x02
    c48a:	e3 82       	std	Z+3, r14	; 0x03
    c48c:	f4 82       	std	Z+4, r15	; 0x04
    c48e:	0b c0       	rjmp	.+22     	; 0xc4a6 <TMR_SR_cmdGetReaderStatistics+0x164>
    c490:	88 0f       	add	r24, r24
    c492:	99 1f       	adc	r25, r25
    c494:	88 0f       	add	r24, r24
    c496:	99 1f       	adc	r25, r25
    c498:	f8 01       	movw	r30, r16
    c49a:	e8 0f       	add	r30, r24
    c49c:	f9 1f       	adc	r31, r25
    c49e:	11 82       	std	Z+1, r1	; 0x01
    c4a0:	12 82       	std	Z+2, r1	; 0x02
    c4a2:	13 82       	std	Z+3, r1	; 0x03
    c4a4:	14 82       	std	Z+4, r1	; 0x04
    c4a6:	6f 5f       	subi	r22, 0xFF	; 255
    c4a8:	65 17       	cp	r22, r21
    c4aa:	08 f4       	brcc	.+2      	; 0xc4ae <TMR_SR_cmdGetReaderStatistics+0x16c>
    c4ac:	9b cf       	rjmp	.-202    	; 0xc3e4 <TMR_SR_cmdGetReaderStatistics+0xa2>
    c4ae:	f8 01       	movw	r30, r16
    c4b0:	50 83       	st	Z, r21
    c4b2:	85 c0       	rjmp	.+266    	; 0xc5be <TMR_SR_cmdGetReaderStatistics+0x27c>
    c4b4:	81 ff       	sbrs	r24, 1
    c4b6:	41 c0       	rjmp	.+130    	; 0xc53a <TMR_SR_cmdGetReaderStatistics+0x1f8>
    c4b8:	4e 5f       	subi	r20, 0xFE	; 254
    c4ba:	60 e0       	ldi	r22, 0x00	; 0
    c4bc:	39 c0       	rjmp	.+114    	; 0xc530 <TMR_SR_cmdGetReaderStatistics+0x1ee>
    c4be:	e1 e0       	ldi	r30, 0x01	; 1
    c4c0:	f0 e0       	ldi	r31, 0x00	; 0
    c4c2:	ec 0f       	add	r30, r28
    c4c4:	fd 1f       	adc	r31, r29
    c4c6:	e4 0f       	add	r30, r20
    c4c8:	f1 1d       	adc	r31, r1
    c4ca:	20 81       	ld	r18, Z
    c4cc:	86 2f       	mov	r24, r22
    c4ce:	90 e0       	ldi	r25, 0x00	; 0
    c4d0:	30 e0       	ldi	r19, 0x00	; 0
    c4d2:	21 50       	subi	r18, 0x01	; 1
    c4d4:	31 09       	sbc	r19, r1
    c4d6:	82 17       	cp	r24, r18
    c4d8:	93 07       	cpc	r25, r19
    c4da:	e1 f4       	brne	.+56     	; 0xc514 <TMR_SR_cmdGetReaderStatistics+0x1d2>
    c4dc:	21 e0       	ldi	r18, 0x01	; 1
    c4de:	24 0f       	add	r18, r20
    c4e0:	e1 e0       	ldi	r30, 0x01	; 1
    c4e2:	f0 e0       	ldi	r31, 0x00	; 0
    c4e4:	ec 0f       	add	r30, r28
    c4e6:	fd 1f       	adc	r31, r29
    c4e8:	e2 0f       	add	r30, r18
    c4ea:	f1 1d       	adc	r31, r1
    c4ec:	4e 5f       	subi	r20, 0xFE	; 254
    c4ee:	20 81       	ld	r18, Z
    c4f0:	fc 01       	movw	r30, r24
    c4f2:	ee 0f       	add	r30, r30
    c4f4:	ff 1f       	adc	r31, r31
    c4f6:	ee 0f       	add	r30, r30
    c4f8:	ff 1f       	adc	r31, r31
    c4fa:	e0 0f       	add	r30, r16
    c4fc:	f1 1f       	adc	r31, r17
    c4fe:	ef 5f       	subi	r30, 0xFF	; 255
    c500:	fe 4f       	sbci	r31, 0xFE	; 254
    c502:	82 2f       	mov	r24, r18
    c504:	90 e0       	ldi	r25, 0x00	; 0
    c506:	a0 e0       	ldi	r26, 0x00	; 0
    c508:	b0 e0       	ldi	r27, 0x00	; 0
    c50a:	80 83       	st	Z, r24
    c50c:	91 83       	std	Z+1, r25	; 0x01
    c50e:	a2 83       	std	Z+2, r26	; 0x02
    c510:	b3 83       	std	Z+3, r27	; 0x03
    c512:	0d c0       	rjmp	.+26     	; 0xc52e <TMR_SR_cmdGetReaderStatistics+0x1ec>
    c514:	fc 01       	movw	r30, r24
    c516:	ee 0f       	add	r30, r30
    c518:	ff 1f       	adc	r31, r31
    c51a:	ee 0f       	add	r30, r30
    c51c:	ff 1f       	adc	r31, r31
    c51e:	e0 0f       	add	r30, r16
    c520:	f1 1f       	adc	r31, r17
    c522:	ef 5f       	subi	r30, 0xFF	; 255
    c524:	fe 4f       	sbci	r31, 0xFE	; 254
    c526:	10 82       	st	Z, r1
    c528:	11 82       	std	Z+1, r1	; 0x01
    c52a:	12 82       	std	Z+2, r1	; 0x02
    c52c:	13 82       	std	Z+3, r1	; 0x03
    c52e:	6f 5f       	subi	r22, 0xFF	; 255
    c530:	65 17       	cp	r22, r21
    c532:	28 f2       	brcs	.-118    	; 0xc4be <TMR_SR_cmdGetReaderStatistics+0x17c>
    c534:	d8 01       	movw	r26, r16
    c536:	5c 93       	st	X, r21
    c538:	42 c0       	rjmp	.+132    	; 0xc5be <TMR_SR_cmdGetReaderStatistics+0x27c>
    c53a:	83 ff       	sbrs	r24, 3
    c53c:	40 c0       	rjmp	.+128    	; 0xc5be <TMR_SR_cmdGetReaderStatistics+0x27c>
    c53e:	4e 5f       	subi	r20, 0xFE	; 254
    c540:	60 e0       	ldi	r22, 0x00	; 0
    c542:	39 c0       	rjmp	.+114    	; 0xc5b6 <TMR_SR_cmdGetReaderStatistics+0x274>
    c544:	e1 e0       	ldi	r30, 0x01	; 1
    c546:	f0 e0       	ldi	r31, 0x00	; 0
    c548:	ec 0f       	add	r30, r28
    c54a:	fd 1f       	adc	r31, r29
    c54c:	e4 0f       	add	r30, r20
    c54e:	f1 1d       	adc	r31, r1
    c550:	20 81       	ld	r18, Z
    c552:	86 2f       	mov	r24, r22
    c554:	90 e0       	ldi	r25, 0x00	; 0
    c556:	30 e0       	ldi	r19, 0x00	; 0
    c558:	21 50       	subi	r18, 0x01	; 1
    c55a:	31 09       	sbc	r19, r1
    c55c:	82 17       	cp	r24, r18
    c55e:	93 07       	cpc	r25, r19
    c560:	e1 f4       	brne	.+56     	; 0xc59a <TMR_SR_cmdGetReaderStatistics+0x258>
    c562:	21 e0       	ldi	r18, 0x01	; 1
    c564:	24 0f       	add	r18, r20
    c566:	e1 e0       	ldi	r30, 0x01	; 1
    c568:	f0 e0       	ldi	r31, 0x00	; 0
    c56a:	ec 0f       	add	r30, r28
    c56c:	fd 1f       	adc	r31, r29
    c56e:	e2 0f       	add	r30, r18
    c570:	f1 1d       	adc	r31, r1
    c572:	4e 5f       	subi	r20, 0xFE	; 254
    c574:	20 81       	ld	r18, Z
    c576:	fc 01       	movw	r30, r24
    c578:	ee 0f       	add	r30, r30
    c57a:	ff 1f       	adc	r31, r31
    c57c:	ee 0f       	add	r30, r30
    c57e:	ff 1f       	adc	r31, r31
    c580:	e0 0f       	add	r30, r16
    c582:	f1 1f       	adc	r31, r17
    c584:	ef 5f       	subi	r30, 0xFF	; 255
    c586:	fd 4f       	sbci	r31, 0xFD	; 253
    c588:	82 2f       	mov	r24, r18
    c58a:	90 e0       	ldi	r25, 0x00	; 0
    c58c:	a0 e0       	ldi	r26, 0x00	; 0
    c58e:	b0 e0       	ldi	r27, 0x00	; 0
    c590:	80 83       	st	Z, r24
    c592:	91 83       	std	Z+1, r25	; 0x01
    c594:	a2 83       	std	Z+2, r26	; 0x02
    c596:	b3 83       	std	Z+3, r27	; 0x03
    c598:	0d c0       	rjmp	.+26     	; 0xc5b4 <TMR_SR_cmdGetReaderStatistics+0x272>
    c59a:	fc 01       	movw	r30, r24
    c59c:	ee 0f       	add	r30, r30
    c59e:	ff 1f       	adc	r31, r31
    c5a0:	ee 0f       	add	r30, r30
    c5a2:	ff 1f       	adc	r31, r31
    c5a4:	e0 0f       	add	r30, r16
    c5a6:	f1 1f       	adc	r31, r17
    c5a8:	ef 5f       	subi	r30, 0xFF	; 255
    c5aa:	fd 4f       	sbci	r31, 0xFD	; 253
    c5ac:	10 82       	st	Z, r1
    c5ae:	11 82       	std	Z+1, r1	; 0x01
    c5b0:	12 82       	std	Z+2, r1	; 0x02
    c5b2:	13 82       	std	Z+3, r1	; 0x03
    c5b4:	6f 5f       	subi	r22, 0xFF	; 255
    c5b6:	65 17       	cp	r22, r21
    c5b8:	28 f2       	brcs	.-118    	; 0xc544 <TMR_SR_cmdGetReaderStatistics+0x202>
    c5ba:	f8 01       	movw	r30, r16
    c5bc:	50 83       	st	Z, r21
    c5be:	24 2f       	mov	r18, r20
    c5c0:	30 e0       	ldi	r19, 0x00	; 0
    c5c2:	8a 81       	ldd	r24, Y+2	; 0x02
    c5c4:	90 e0       	ldi	r25, 0x00	; 0
    c5c6:	02 96       	adiw	r24, 0x02	; 2
    c5c8:	28 17       	cp	r18, r24
    c5ca:	39 07       	cpc	r19, r25
    c5cc:	0c f4       	brge	.+2      	; 0xc5d0 <TMR_SR_cmdGetReaderStatistics+0x28e>
    c5ce:	fe ce       	rjmp	.-516    	; 0xc3cc <TMR_SR_cmdGetReaderStatistics+0x8a>
    c5d0:	40 e0       	ldi	r20, 0x00	; 0
    c5d2:	30 e0       	ldi	r19, 0x00	; 0
    c5d4:	20 e0       	ldi	r18, 0x00	; 0
    c5d6:	90 e0       	ldi	r25, 0x00	; 0
    c5d8:	08 c0       	rjmp	.+16     	; 0xc5ea <TMR_SR_cmdGetReaderStatistics+0x2a8>
    c5da:	46 2f       	mov	r20, r22
    c5dc:	37 2f       	mov	r19, r23
    c5de:	28 2f       	mov	r18, r24
    c5e0:	04 c0       	rjmp	.+8      	; 0xc5ea <TMR_SR_cmdGetReaderStatistics+0x2a8>
    c5e2:	40 e0       	ldi	r20, 0x00	; 0
    c5e4:	30 e0       	ldi	r19, 0x00	; 0
    c5e6:	20 e0       	ldi	r18, 0x00	; 0
    c5e8:	90 e0       	ldi	r25, 0x00	; 0
    c5ea:	64 2f       	mov	r22, r20
    c5ec:	73 2f       	mov	r23, r19
    c5ee:	82 2f       	mov	r24, r18
    c5f0:	d3 95       	inc	r29
    c5f2:	0f b6       	in	r0, 0x3f	; 63
    c5f4:	f8 94       	cli
    c5f6:	de bf       	out	0x3e, r29	; 62
    c5f8:	0f be       	out	0x3f, r0	; 63
    c5fa:	cd bf       	out	0x3d, r28	; 61
    c5fc:	df 91       	pop	r29
    c5fe:	cf 91       	pop	r28
    c600:	1f 91       	pop	r17
    c602:	0f 91       	pop	r16
    c604:	ff 90       	pop	r15
    c606:	ef 90       	pop	r14
    c608:	df 90       	pop	r13
    c60a:	cf 90       	pop	r12
    c60c:	bf 90       	pop	r11
    c60e:	af 90       	pop	r10
    c610:	9f 90       	pop	r9
    c612:	8f 90       	pop	r8
    c614:	08 95       	ret

0000c616 <TMR_SR_cmdResetReaderStatistics>:
    c616:	cf 93       	push	r28
    c618:	df 93       	push	r29
    c61a:	cd b7       	in	r28, 0x3d	; 61
    c61c:	de b7       	in	r29, 0x3e	; 62
    c61e:	da 95       	dec	r29
    c620:	0f b6       	in	r0, 0x3f	; 63
    c622:	f8 94       	cli
    c624:	de bf       	out	0x3e, r29	; 62
    c626:	0f be       	out	0x3f, r0	; 63
    c628:	cd bf       	out	0x3d, r28	; 61
    c62a:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    c62e:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    c632:	4c e6       	ldi	r20, 0x6C	; 108
    c634:	4b 83       	std	Y+3, r20	; 0x03
    c636:	41 e0       	ldi	r20, 0x01	; 1
    c638:	4c 83       	std	Y+4, r20	; 0x04
    c63a:	2d 5f       	subi	r18, 0xFD	; 253
    c63c:	3f 4f       	sbci	r19, 0xFF	; 255
    c63e:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    c642:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    c646:	6d 83       	std	Y+5, r22	; 0x05
    c648:	22 e0       	ldi	r18, 0x02	; 2
    c64a:	2a 83       	std	Y+2, r18	; 0x02
    c64c:	fc 01       	movw	r30, r24
    c64e:	e0 52       	subi	r30, 0x20	; 32
    c650:	fe 4f       	sbci	r31, 0xFE	; 254
    c652:	20 81       	ld	r18, Z
    c654:	31 81       	ldd	r19, Z+1	; 0x01
    c656:	42 81       	ldd	r20, Z+2	; 0x02
    c658:	53 81       	ldd	r21, Z+3	; 0x03
    c65a:	be 01       	movw	r22, r28
    c65c:	6f 5f       	subi	r22, 0xFF	; 255
    c65e:	7f 4f       	sbci	r23, 0xFF	; 255
    c660:	0e 94 e3 35 	call	0x6bc6	; 0x6bc6 <TMR_SR_sendTimeout>
    c664:	61 15       	cp	r22, r1
    c666:	71 05       	cpc	r23, r1
    c668:	81 05       	cpc	r24, r1
    c66a:	91 05       	cpc	r25, r1
    c66c:	29 f4       	brne	.+10     	; 0xc678 <TMR_SR_cmdResetReaderStatistics+0x62>
    c66e:	40 e0       	ldi	r20, 0x00	; 0
    c670:	30 e0       	ldi	r19, 0x00	; 0
    c672:	20 e0       	ldi	r18, 0x00	; 0
    c674:	90 e0       	ldi	r25, 0x00	; 0
    c676:	03 c0       	rjmp	.+6      	; 0xc67e <TMR_SR_cmdResetReaderStatistics+0x68>
    c678:	46 2f       	mov	r20, r22
    c67a:	37 2f       	mov	r19, r23
    c67c:	28 2f       	mov	r18, r24
    c67e:	64 2f       	mov	r22, r20
    c680:	73 2f       	mov	r23, r19
    c682:	82 2f       	mov	r24, r18
    c684:	d3 95       	inc	r29
    c686:	0f b6       	in	r0, 0x3f	; 63
    c688:	f8 94       	cli
    c68a:	de bf       	out	0x3e, r29	; 62
    c68c:	0f be       	out	0x3f, r0	; 63
    c68e:	cd bf       	out	0x3d, r28	; 61
    c690:	df 91       	pop	r29
    c692:	cf 91       	pop	r28
    c694:	08 95       	ret

0000c696 <TMR_fillReaderStats>:
    c696:	6f 92       	push	r6
    c698:	7f 92       	push	r7
    c69a:	8f 92       	push	r8
    c69c:	9f 92       	push	r9
    c69e:	af 92       	push	r10
    c6a0:	bf 92       	push	r11
    c6a2:	cf 92       	push	r12
    c6a4:	df 92       	push	r13
    c6a6:	ef 92       	push	r14
    c6a8:	ff 92       	push	r15
    c6aa:	0f 93       	push	r16
    c6ac:	1f 93       	push	r17
    c6ae:	cf 93       	push	r28
    c6b0:	df 93       	push	r29
    c6b2:	cd b7       	in	r28, 0x3d	; 61
    c6b4:	de b7       	in	r29, 0x3e	; 62
    c6b6:	29 97       	sbiw	r28, 0x09	; 9
    c6b8:	0f b6       	in	r0, 0x3f	; 63
    c6ba:	f8 94       	cli
    c6bc:	de bf       	out	0x3e, r29	; 62
    c6be:	0f be       	out	0x3f, r0	; 63
    c6c0:	cd bf       	out	0x3d, r28	; 61
    c6c2:	7c 01       	movw	r14, r24
    c6c4:	3b 01       	movw	r6, r22
    c6c6:	69 01       	movw	r12, r18
    c6c8:	b7 c1       	rjmp	.+878    	; 0xca38 <TMR_fillReaderStats+0x3a2>
    c6ca:	09 83       	std	Y+1, r16	; 0x01
    c6cc:	ae 01       	movw	r20, r28
    c6ce:	4f 5f       	subi	r20, 0xFF	; 255
    c6d0:	5f 4f       	sbci	r21, 0xFF	; 255
    c6d2:	be 01       	movw	r22, r28
    c6d4:	6e 5f       	subi	r22, 0xFE	; 254
    c6d6:	7f 4f       	sbci	r23, 0xFF	; 255
    c6d8:	c6 01       	movw	r24, r12
    c6da:	0e 94 4d 32 	call	0x649a	; 0x649a <parseEBVdata>
    c6de:	68 2f       	mov	r22, r24
    c6e0:	ce 01       	movw	r24, r28
    c6e2:	02 96       	adiw	r24, 0x02	; 2
    c6e4:	0e 94 3a 6f 	call	0xde74	; 0xde74 <TMR_SR_convertFromEBV>
    c6e8:	20 ff       	sbrs	r18, 0
    c6ea:	70 c0       	rjmp	.+224    	; 0xc7cc <TMR_fillReaderStats+0x136>
    c6ec:	81 e0       	ldi	r24, 0x01	; 1
    c6ee:	80 0f       	add	r24, r16
    c6f0:	0e 5f       	subi	r16, 0xFE	; 254
    c6f2:	f6 01       	movw	r30, r12
    c6f4:	e8 0f       	add	r30, r24
    c6f6:	f1 1d       	adc	r31, r1
    c6f8:	10 81       	ld	r17, Z
    c6fa:	10 0f       	add	r17, r16
    c6fc:	63 c0       	rjmp	.+198    	; 0xc7c4 <TMR_fillReaderStats+0x12e>
    c6fe:	f6 01       	movw	r30, r12
    c700:	e0 0f       	add	r30, r16
    c702:	f1 1d       	adc	r31, r1
    c704:	30 81       	ld	r19, Z
    c706:	0b 5f       	subi	r16, 0xFB	; 251
    c708:	c6 01       	movw	r24, r12
    c70a:	80 0f       	add	r24, r16
    c70c:	91 1d       	adc	r25, r1
    c70e:	fc 01       	movw	r30, r24
    c710:	34 97       	sbiw	r30, 0x04	; 4
    c712:	80 80       	ld	r8, Z
    c714:	91 2c       	mov	r9, r1
    c716:	a1 2c       	mov	r10, r1
    c718:	b1 2c       	mov	r11, r1
    c71a:	b8 2c       	mov	r11, r8
    c71c:	aa 24       	eor	r10, r10
    c71e:	99 24       	eor	r9, r9
    c720:	88 24       	eor	r8, r8
    c722:	31 96       	adiw	r30, 0x01	; 1
    c724:	40 81       	ld	r20, Z
    c726:	50 e0       	ldi	r21, 0x00	; 0
    c728:	60 e0       	ldi	r22, 0x00	; 0
    c72a:	70 e0       	ldi	r23, 0x00	; 0
    c72c:	ba 01       	movw	r22, r20
    c72e:	55 27       	eor	r21, r21
    c730:	44 27       	eor	r20, r20
    c732:	84 2a       	or	r8, r20
    c734:	95 2a       	or	r9, r21
    c736:	a6 2a       	or	r10, r22
    c738:	b7 2a       	or	r11, r23
    c73a:	31 96       	adiw	r30, 0x01	; 1
    c73c:	40 81       	ld	r20, Z
    c73e:	50 e0       	ldi	r21, 0x00	; 0
    c740:	60 e0       	ldi	r22, 0x00	; 0
    c742:	70 e0       	ldi	r23, 0x00	; 0
    c744:	76 2f       	mov	r23, r22
    c746:	65 2f       	mov	r22, r21
    c748:	54 2f       	mov	r21, r20
    c74a:	44 27       	eor	r20, r20
    c74c:	84 2a       	or	r8, r20
    c74e:	95 2a       	or	r9, r21
    c750:	a6 2a       	or	r10, r22
    c752:	b7 2a       	or	r11, r23
    c754:	31 96       	adiw	r30, 0x01	; 1
    c756:	80 81       	ld	r24, Z
    c758:	88 2a       	or	r8, r24
    c75a:	20 e0       	ldi	r18, 0x00	; 0
    c75c:	2a c0       	rjmp	.+84     	; 0xc7b2 <TMR_fillReaderStats+0x11c>
    c75e:	40 81       	ld	r20, Z
    c760:	51 81       	ldd	r21, Z+1	; 0x01
    c762:	82 2f       	mov	r24, r18
    c764:	90 e0       	ldi	r25, 0x00	; 0
    c766:	fc 01       	movw	r30, r24
    c768:	ee 0f       	add	r30, r30
    c76a:	ff 1f       	adc	r31, r31
    c76c:	e8 0f       	add	r30, r24
    c76e:	f9 1f       	adc	r31, r25
    c770:	e4 0f       	add	r30, r20
    c772:	f5 1f       	adc	r31, r21
    c774:	41 81       	ldd	r20, Z+1	; 0x01
    c776:	34 13       	cpse	r19, r20
    c778:	1b c0       	rjmp	.+54     	; 0xc7b0 <TMR_fillReaderStats+0x11a>
    c77a:	d3 01       	movw	r26, r6
    c77c:	a0 5b       	subi	r26, 0xB0	; 176
    c77e:	bf 4f       	sbci	r27, 0xFF	; 255
    c780:	6d 91       	ld	r22, X+
    c782:	7c 91       	ld	r23, X
    c784:	11 97       	sbiw	r26, 0x01	; 1
    c786:	ac 01       	movw	r20, r24
    c788:	44 0f       	add	r20, r20
    c78a:	55 1f       	adc	r21, r21
    c78c:	84 0f       	add	r24, r20
    c78e:	95 1f       	adc	r25, r21
    c790:	88 0f       	add	r24, r24
    c792:	99 1f       	adc	r25, r25
    c794:	68 0f       	add	r22, r24
    c796:	79 1f       	adc	r23, r25
    c798:	40 81       	ld	r20, Z
    c79a:	fb 01       	movw	r30, r22
    c79c:	40 83       	st	Z, r20
    c79e:	4d 91       	ld	r20, X+
    c7a0:	5c 91       	ld	r21, X
    c7a2:	fa 01       	movw	r30, r20
    c7a4:	e8 0f       	add	r30, r24
    c7a6:	f9 1f       	adc	r31, r25
    c7a8:	81 82       	std	Z+1, r8	; 0x01
    c7aa:	92 82       	std	Z+2, r9	; 0x02
    c7ac:	a3 82       	std	Z+3, r10	; 0x03
    c7ae:	b4 82       	std	Z+4, r11	; 0x04
    c7b0:	2f 5f       	subi	r18, 0xFF	; 255
    c7b2:	f7 01       	movw	r30, r14
    c7b4:	ec 52       	subi	r30, 0x2C	; 44
    c7b6:	fe 4f       	sbci	r31, 0xFE	; 254
    c7b8:	01 90       	ld	r0, Z+
    c7ba:	f0 81       	ld	r31, Z
    c7bc:	e0 2d       	mov	r30, r0
    c7be:	83 81       	ldd	r24, Z+3	; 0x03
    c7c0:	28 17       	cp	r18, r24
    c7c2:	68 f2       	brcs	.-102    	; 0xc75e <TMR_fillReaderStats+0xc8>
    c7c4:	01 17       	cp	r16, r17
    c7c6:	08 f4       	brcc	.+2      	; 0xc7ca <TMR_fillReaderStats+0x134>
    c7c8:	9a cf       	rjmp	.-204    	; 0xc6fe <TMR_fillReaderStats+0x68>
    c7ca:	36 c1       	rjmp	.+620    	; 0xca38 <TMR_fillReaderStats+0x3a2>
    c7cc:	26 ff       	sbrs	r18, 6
    c7ce:	58 c0       	rjmp	.+176    	; 0xc880 <TMR_fillReaderStats+0x1ea>
    c7d0:	81 e0       	ldi	r24, 0x01	; 1
    c7d2:	80 0f       	add	r24, r16
    c7d4:	f6 01       	movw	r30, r12
    c7d6:	e8 0f       	add	r30, r24
    c7d8:	f1 1d       	adc	r31, r1
    c7da:	0e 5f       	subi	r16, 0xFE	; 254
    c7dc:	10 81       	ld	r17, Z
    c7de:	4d c0       	rjmp	.+154    	; 0xc87a <TMR_fillReaderStats+0x1e4>
    c7e0:	91 e0       	ldi	r25, 0x01	; 1
    c7e2:	90 0f       	add	r25, r16
    c7e4:	f6 01       	movw	r30, r12
    c7e6:	e0 0f       	add	r30, r16
    c7e8:	f1 1d       	adc	r31, r1
    c7ea:	50 81       	ld	r21, Z
    c7ec:	f7 01       	movw	r30, r14
    c7ee:	e6 50       	subi	r30, 0x06	; 6
    c7f0:	fa 4f       	sbci	r31, 0xFA	; 250
    c7f2:	80 81       	ld	r24, Z
    c7f4:	88 23       	and	r24, r24
    c7f6:	39 f0       	breq	.+14     	; 0xc806 <TMR_fillReaderStats+0x170>
    c7f8:	0e 5f       	subi	r16, 0xFE	; 254
    c7fa:	f6 01       	movw	r30, r12
    c7fc:	e9 0f       	add	r30, r25
    c7fe:	f1 1d       	adc	r31, r1
    c800:	50 81       	ld	r21, Z
    c802:	11 50       	subi	r17, 0x01	; 1
    c804:	01 c0       	rjmp	.+2      	; 0xc808 <TMR_fillReaderStats+0x172>
    c806:	09 2f       	mov	r16, r25
    c808:	40 e0       	ldi	r20, 0x00	; 0
    c80a:	2e c0       	rjmp	.+92     	; 0xc868 <TMR_fillReaderStats+0x1d2>
    c80c:	20 81       	ld	r18, Z
    c80e:	31 81       	ldd	r19, Z+1	; 0x01
    c810:	84 2f       	mov	r24, r20
    c812:	90 e0       	ldi	r25, 0x00	; 0
    c814:	fc 01       	movw	r30, r24
    c816:	ee 0f       	add	r30, r30
    c818:	ff 1f       	adc	r31, r31
    c81a:	e8 0f       	add	r30, r24
    c81c:	f9 1f       	adc	r31, r25
    c81e:	e2 0f       	add	r30, r18
    c820:	f3 1f       	adc	r31, r19
    c822:	21 81       	ldd	r18, Z+1	; 0x01
    c824:	52 13       	cpse	r21, r18
    c826:	1f c0       	rjmp	.+62     	; 0xc866 <TMR_fillReaderStats+0x1d0>
    c828:	d3 01       	movw	r26, r6
    c82a:	a0 5b       	subi	r26, 0xB0	; 176
    c82c:	bf 4f       	sbci	r27, 0xFF	; 255
    c82e:	2d 91       	ld	r18, X+
    c830:	3c 91       	ld	r19, X
    c832:	11 97       	sbiw	r26, 0x01	; 1
    c834:	bc 01       	movw	r22, r24
    c836:	66 0f       	add	r22, r22
    c838:	77 1f       	adc	r23, r23
    c83a:	86 0f       	add	r24, r22
    c83c:	97 1f       	adc	r25, r23
    c83e:	88 0f       	add	r24, r24
    c840:	99 1f       	adc	r25, r25
    c842:	28 0f       	add	r18, r24
    c844:	39 1f       	adc	r19, r25
    c846:	60 81       	ld	r22, Z
    c848:	f9 01       	movw	r30, r18
    c84a:	60 83       	st	Z, r22
    c84c:	2d 91       	ld	r18, X+
    c84e:	3c 91       	ld	r19, X
    c850:	d9 01       	movw	r26, r18
    c852:	a8 0f       	add	r26, r24
    c854:	b9 1f       	adc	r27, r25
    c856:	f6 01       	movw	r30, r12
    c858:	e0 0f       	add	r30, r16
    c85a:	f1 1d       	adc	r31, r1
    c85c:	20 81       	ld	r18, Z
    c85e:	15 96       	adiw	r26, 0x05	; 5
    c860:	2c 93       	st	X, r18
    c862:	12 50       	subi	r17, 0x02	; 2
    c864:	0f 5f       	subi	r16, 0xFF	; 255
    c866:	4f 5f       	subi	r20, 0xFF	; 255
    c868:	f7 01       	movw	r30, r14
    c86a:	ec 52       	subi	r30, 0x2C	; 44
    c86c:	fe 4f       	sbci	r31, 0xFE	; 254
    c86e:	01 90       	ld	r0, Z+
    c870:	f0 81       	ld	r31, Z
    c872:	e0 2d       	mov	r30, r0
    c874:	83 81       	ldd	r24, Z+3	; 0x03
    c876:	48 17       	cp	r20, r24
    c878:	48 f2       	brcs	.-110    	; 0xc80c <TMR_fillReaderStats+0x176>
    c87a:	11 11       	cpse	r17, r1
    c87c:	b1 cf       	rjmp	.-158    	; 0xc7e0 <TMR_fillReaderStats+0x14a>
    c87e:	dc c0       	rjmp	.+440    	; 0xca38 <TMR_fillReaderStats+0x3a2>
    c880:	27 ff       	sbrs	r18, 7
    c882:	24 c0       	rjmp	.+72     	; 0xc8cc <TMR_fillReaderStats+0x236>
    c884:	0a 5f       	subi	r16, 0xFA	; 250
    c886:	96 01       	movw	r18, r12
    c888:	20 0f       	add	r18, r16
    c88a:	31 1d       	adc	r19, r1
    c88c:	f9 01       	movw	r30, r18
    c88e:	33 97       	sbiw	r30, 0x03	; 3
    c890:	80 81       	ld	r24, Z
    c892:	90 e0       	ldi	r25, 0x00	; 0
    c894:	a0 e0       	ldi	r26, 0x00	; 0
    c896:	b0 e0       	ldi	r27, 0x00	; 0
    c898:	bc 01       	movw	r22, r24
    c89a:	55 27       	eor	r21, r21
    c89c:	44 27       	eor	r20, r20
    c89e:	31 96       	adiw	r30, 0x01	; 1
    c8a0:	90 81       	ld	r25, Z
    c8a2:	89 2f       	mov	r24, r25
    c8a4:	90 e0       	ldi	r25, 0x00	; 0
    c8a6:	a0 e0       	ldi	r26, 0x00	; 0
    c8a8:	b0 e0       	ldi	r27, 0x00	; 0
    c8aa:	ba 2f       	mov	r27, r26
    c8ac:	a9 2f       	mov	r26, r25
    c8ae:	98 2f       	mov	r25, r24
    c8b0:	88 27       	eor	r24, r24
    c8b2:	84 2b       	or	r24, r20
    c8b4:	95 2b       	or	r25, r21
    c8b6:	a6 2b       	or	r26, r22
    c8b8:	b7 2b       	or	r27, r23
    c8ba:	31 96       	adiw	r30, 0x01	; 1
    c8bc:	20 81       	ld	r18, Z
    c8be:	82 2b       	or	r24, r18
    c8c0:	f3 01       	movw	r30, r6
    c8c2:	86 83       	std	Z+6, r24	; 0x06
    c8c4:	97 83       	std	Z+7, r25	; 0x07
    c8c6:	a0 87       	std	Z+8, r26	; 0x08
    c8c8:	b1 87       	std	Z+9, r27	; 0x09
    c8ca:	b6 c0       	rjmp	.+364    	; 0xca38 <TMR_fillReaderStats+0x3a2>
    c8cc:	30 ff       	sbrs	r19, 0
    c8ce:	0b c0       	rjmp	.+22     	; 0xc8e6 <TMR_fillReaderStats+0x250>
    c8d0:	83 e0       	ldi	r24, 0x03	; 3
    c8d2:	80 0f       	add	r24, r16
    c8d4:	f6 01       	movw	r30, r12
    c8d6:	e8 0f       	add	r30, r24
    c8d8:	f1 1d       	adc	r31, r1
    c8da:	0c 5f       	subi	r16, 0xFC	; 252
    c8dc:	80 81       	ld	r24, Z
    c8de:	d3 01       	movw	r26, r6
    c8e0:	12 96       	adiw	r26, 0x02	; 2
    c8e2:	8c 93       	st	X, r24
    c8e4:	a9 c0       	rjmp	.+338    	; 0xca38 <TMR_fillReaderStats+0x3a2>
    c8e6:	32 ff       	sbrs	r19, 2
    c8e8:	0a c0       	rjmp	.+20     	; 0xc8fe <TMR_fillReaderStats+0x268>
    c8ea:	83 e0       	ldi	r24, 0x03	; 3
    c8ec:	80 0f       	add	r24, r16
    c8ee:	f6 01       	movw	r30, r12
    c8f0:	e8 0f       	add	r30, r24
    c8f2:	f1 1d       	adc	r31, r1
    c8f4:	0c 5f       	subi	r16, 0xFC	; 252
    c8f6:	80 81       	ld	r24, Z
    c8f8:	f3 01       	movw	r30, r6
    c8fa:	83 83       	std	Z+3, r24	; 0x03
    c8fc:	9d c0       	rjmp	.+314    	; 0xca38 <TMR_fillReaderStats+0x3a2>
    c8fe:	31 ff       	sbrs	r19, 1
    c900:	3a c0       	rjmp	.+116    	; 0xc976 <TMR_fillReaderStats+0x2e0>
    c902:	34 e0       	ldi	r19, 0x04	; 4
    c904:	30 0f       	add	r19, r16
    c906:	83 e0       	ldi	r24, 0x03	; 3
    c908:	80 0f       	add	r24, r16
    c90a:	f6 01       	movw	r30, r12
    c90c:	e8 0f       	add	r30, r24
    c90e:	f1 1d       	adc	r31, r1
    c910:	60 81       	ld	r22, Z
    c912:	f7 01       	movw	r30, r14
    c914:	e6 50       	subi	r30, 0x06	; 6
    c916:	fa 4f       	sbci	r31, 0xFA	; 250
    c918:	80 81       	ld	r24, Z
    c91a:	88 23       	and	r24, r24
    c91c:	31 f0       	breq	.+12     	; 0xc92a <TMR_fillReaderStats+0x294>
    c91e:	f6 01       	movw	r30, r12
    c920:	e3 0f       	add	r30, r19
    c922:	f1 1d       	adc	r31, r1
    c924:	60 81       	ld	r22, Z
    c926:	35 e0       	ldi	r19, 0x05	; 5
    c928:	30 0f       	add	r19, r16
    c92a:	20 e0       	ldi	r18, 0x00	; 0
    c92c:	19 c0       	rjmp	.+50     	; 0xc960 <TMR_fillReaderStats+0x2ca>
    c92e:	40 81       	ld	r20, Z
    c930:	51 81       	ldd	r21, Z+1	; 0x01
    c932:	82 2f       	mov	r24, r18
    c934:	90 e0       	ldi	r25, 0x00	; 0
    c936:	fc 01       	movw	r30, r24
    c938:	ee 0f       	add	r30, r30
    c93a:	ff 1f       	adc	r31, r31
    c93c:	8e 0f       	add	r24, r30
    c93e:	9f 1f       	adc	r25, r31
    c940:	fa 01       	movw	r30, r20
    c942:	e8 0f       	add	r30, r24
    c944:	f9 1f       	adc	r31, r25
    c946:	81 81       	ldd	r24, Z+1	; 0x01
    c948:	68 13       	cpse	r22, r24
    c94a:	09 c0       	rjmp	.+18     	; 0xc95e <TMR_fillReaderStats+0x2c8>
    c94c:	80 81       	ld	r24, Z
    c94e:	90 e0       	ldi	r25, 0x00	; 0
    c950:	d3 01       	movw	r26, r6
    c952:	15 96       	adiw	r26, 0x05	; 5
    c954:	9c 93       	st	X, r25
    c956:	8e 93       	st	-X, r24
    c958:	14 97       	sbiw	r26, 0x04	; 4
    c95a:	03 2f       	mov	r16, r19
    c95c:	6d c0       	rjmp	.+218    	; 0xca38 <TMR_fillReaderStats+0x3a2>
    c95e:	2f 5f       	subi	r18, 0xFF	; 255
    c960:	f7 01       	movw	r30, r14
    c962:	ec 52       	subi	r30, 0x2C	; 44
    c964:	fe 4f       	sbci	r31, 0xFE	; 254
    c966:	01 90       	ld	r0, Z+
    c968:	f0 81       	ld	r31, Z
    c96a:	e0 2d       	mov	r30, r0
    c96c:	83 81       	ldd	r24, Z+3	; 0x03
    c96e:	28 17       	cp	r18, r24
    c970:	f0 f2       	brcs	.-68     	; 0xc92e <TMR_fillReaderStats+0x298>
    c972:	03 2f       	mov	r16, r19
    c974:	61 c0       	rjmp	.+194    	; 0xca38 <TMR_fillReaderStats+0x3a2>
    c976:	33 ff       	sbrs	r19, 3
    c978:	5a c0       	rjmp	.+180    	; 0xca2e <TMR_fillReaderStats+0x398>
    c97a:	0d 5f       	subi	r16, 0xFD	; 253
    c97c:	f6 01       	movw	r30, r12
    c97e:	e0 0f       	add	r30, r16
    c980:	f1 1d       	adc	r31, r1
    c982:	31 97       	sbiw	r30, 0x01	; 1
    c984:	80 81       	ld	r24, Z
    c986:	90 e0       	ldi	r25, 0x00	; 0
    c988:	f3 01       	movw	r30, r6
    c98a:	97 87       	std	Z+15, r25	; 0x0f
    c98c:	86 87       	std	Z+14, r24	; 0x0e
    c98e:	30 e0       	ldi	r19, 0x00	; 0
    c990:	44 c0       	rjmp	.+136    	; 0xca1a <TMR_fillReaderStats+0x384>
    c992:	d3 01       	movw	r26, r6
    c994:	1a 96       	adiw	r26, 0x0a	; 10
    c996:	ed 91       	ld	r30, X+
    c998:	fc 91       	ld	r31, X
    c99a:	1b 97       	sbiw	r26, 0x0b	; 11
    c99c:	e4 0f       	add	r30, r20
    c99e:	f5 1f       	adc	r31, r21
    c9a0:	61 e0       	ldi	r22, 0x01	; 1
    c9a2:	60 0f       	add	r22, r16
    c9a4:	d6 01       	movw	r26, r12
    c9a6:	a0 0f       	add	r26, r16
    c9a8:	b1 1d       	adc	r27, r1
    c9aa:	8c 91       	ld	r24, X
    c9ac:	80 83       	st	Z, r24
    c9ae:	30 ff       	sbrs	r19, 0
    c9b0:	26 c0       	rjmp	.+76     	; 0xc9fe <TMR_fillReaderStats+0x368>
    c9b2:	33 23       	and	r19, r19
    c9b4:	31 f1       	breq	.+76     	; 0xca02 <TMR_fillReaderStats+0x36c>
    c9b6:	2f c0       	rjmp	.+94     	; 0xca16 <TMR_fillReaderStats+0x380>
    c9b8:	a0 81       	ld	r26, Z
    c9ba:	b1 81       	ldd	r27, Z+1	; 0x01
    c9bc:	82 2f       	mov	r24, r18
    c9be:	90 e0       	ldi	r25, 0x00	; 0
    c9c0:	fc 01       	movw	r30, r24
    c9c2:	ee 0f       	add	r30, r30
    c9c4:	ff 1f       	adc	r31, r31
    c9c6:	8e 0f       	add	r24, r30
    c9c8:	9f 1f       	adc	r25, r31
    c9ca:	fd 01       	movw	r30, r26
    c9cc:	e8 0f       	add	r30, r24
    c9ce:	f9 1f       	adc	r31, r25
    c9d0:	91 81       	ldd	r25, Z+1	; 0x01
    c9d2:	d3 01       	movw	r26, r6
    c9d4:	1a 96       	adiw	r26, 0x0a	; 10
    c9d6:	0d 91       	ld	r16, X+
    c9d8:	1c 91       	ld	r17, X
    c9da:	1b 97       	sbiw	r26, 0x0b	; 11
    c9dc:	d8 01       	movw	r26, r16
    c9de:	a4 0f       	add	r26, r20
    c9e0:	b5 1f       	adc	r27, r21
    c9e2:	8c 91       	ld	r24, X
    c9e4:	98 13       	cpse	r25, r24
    c9e6:	09 c0       	rjmp	.+18     	; 0xc9fa <TMR_fillReaderStats+0x364>
    c9e8:	80 81       	ld	r24, Z
    c9ea:	8c 93       	st	X, r24
    c9ec:	f7 01       	movw	r30, r14
    c9ee:	ec 52       	subi	r30, 0x2C	; 44
    c9f0:	fe 4f       	sbci	r31, 0xFE	; 254
    c9f2:	01 90       	ld	r0, Z+
    c9f4:	f0 81       	ld	r31, Z
    c9f6:	e0 2d       	mov	r30, r0
    c9f8:	23 81       	ldd	r18, Z+3	; 0x03
    c9fa:	2f 5f       	subi	r18, 0xFF	; 255
    c9fc:	03 c0       	rjmp	.+6      	; 0xca04 <TMR_fillReaderStats+0x36e>
    c9fe:	20 e0       	ldi	r18, 0x00	; 0
    ca00:	01 c0       	rjmp	.+2      	; 0xca04 <TMR_fillReaderStats+0x36e>
    ca02:	20 e0       	ldi	r18, 0x00	; 0
    ca04:	f7 01       	movw	r30, r14
    ca06:	ec 52       	subi	r30, 0x2C	; 44
    ca08:	fe 4f       	sbci	r31, 0xFE	; 254
    ca0a:	01 90       	ld	r0, Z+
    ca0c:	f0 81       	ld	r31, Z
    ca0e:	e0 2d       	mov	r30, r0
    ca10:	83 81       	ldd	r24, Z+3	; 0x03
    ca12:	28 17       	cp	r18, r24
    ca14:	88 f2       	brcs	.-94     	; 0xc9b8 <TMR_fillReaderStats+0x322>
    ca16:	3f 5f       	subi	r19, 0xFF	; 255
    ca18:	06 2f       	mov	r16, r22
    ca1a:	43 2f       	mov	r20, r19
    ca1c:	50 e0       	ldi	r21, 0x00	; 0
    ca1e:	f3 01       	movw	r30, r6
    ca20:	86 85       	ldd	r24, Z+14	; 0x0e
    ca22:	97 85       	ldd	r25, Z+15	; 0x0f
    ca24:	48 17       	cp	r20, r24
    ca26:	59 07       	cpc	r21, r25
    ca28:	08 f4       	brcc	.+2      	; 0xca2c <TMR_fillReaderStats+0x396>
    ca2a:	b3 cf       	rjmp	.-154    	; 0xc992 <TMR_fillReaderStats+0x2fc>
    ca2c:	05 c0       	rjmp	.+10     	; 0xca38 <TMR_fillReaderStats+0x3a2>
    ca2e:	61 e0       	ldi	r22, 0x01	; 1
    ca30:	70 e0       	ldi	r23, 0x00	; 0
    ca32:	80 e0       	ldi	r24, 0x00	; 0
    ca34:	93 e0       	ldi	r25, 0x03	; 3
    ca36:	0e c0       	rjmp	.+28     	; 0xca54 <TMR_fillReaderStats+0x3be>
    ca38:	20 2f       	mov	r18, r16
    ca3a:	30 e0       	ldi	r19, 0x00	; 0
    ca3c:	d6 01       	movw	r26, r12
    ca3e:	11 96       	adiw	r26, 0x01	; 1
    ca40:	8c 91       	ld	r24, X
    ca42:	90 e0       	ldi	r25, 0x00	; 0
    ca44:	02 96       	adiw	r24, 0x02	; 2
    ca46:	28 17       	cp	r18, r24
    ca48:	39 07       	cpc	r19, r25
    ca4a:	0c f4       	brge	.+2      	; 0xca4e <TMR_fillReaderStats+0x3b8>
    ca4c:	3e ce       	rjmp	.-900    	; 0xc6ca <TMR_fillReaderStats+0x34>
    ca4e:	60 e0       	ldi	r22, 0x00	; 0
    ca50:	70 e0       	ldi	r23, 0x00	; 0
    ca52:	cb 01       	movw	r24, r22
    ca54:	29 96       	adiw	r28, 0x09	; 9
    ca56:	0f b6       	in	r0, 0x3f	; 63
    ca58:	f8 94       	cli
    ca5a:	de bf       	out	0x3e, r29	; 62
    ca5c:	0f be       	out	0x3f, r0	; 63
    ca5e:	cd bf       	out	0x3d, r28	; 61
    ca60:	df 91       	pop	r29
    ca62:	cf 91       	pop	r28
    ca64:	1f 91       	pop	r17
    ca66:	0f 91       	pop	r16
    ca68:	ff 90       	pop	r15
    ca6a:	ef 90       	pop	r14
    ca6c:	df 90       	pop	r13
    ca6e:	cf 90       	pop	r12
    ca70:	bf 90       	pop	r11
    ca72:	af 90       	pop	r10
    ca74:	9f 90       	pop	r9
    ca76:	8f 90       	pop	r8
    ca78:	7f 90       	pop	r7
    ca7a:	6f 90       	pop	r6
    ca7c:	08 95       	ret

0000ca7e <TMR_SR_cmdGetReaderStats>:
    ca7e:	af 92       	push	r10
    ca80:	bf 92       	push	r11
    ca82:	cf 92       	push	r12
    ca84:	df 92       	push	r13
    ca86:	ef 92       	push	r14
    ca88:	ff 92       	push	r15
    ca8a:	0f 93       	push	r16
    ca8c:	1f 93       	push	r17
    ca8e:	cf 93       	push	r28
    ca90:	df 93       	push	r29
    ca92:	cd b7       	in	r28, 0x3d	; 61
    ca94:	de b7       	in	r29, 0x3e	; 62
    ca96:	c6 50       	subi	r28, 0x06	; 6
    ca98:	d1 40       	sbci	r29, 0x01	; 1
    ca9a:	0f b6       	in	r0, 0x3f	; 63
    ca9c:	f8 94       	cli
    ca9e:	de bf       	out	0x3e, r29	; 62
    caa0:	0f be       	out	0x3f, r0	; 63
    caa2:	cd bf       	out	0x3d, r28	; 61
    caa4:	5c 01       	movw	r10, r24
    caa6:	6a 01       	movw	r12, r20
    caa8:	86 e0       	ldi	r24, 0x06	; 6
    caaa:	ce 5f       	subi	r28, 0xFE	; 254
    caac:	de 4f       	sbci	r29, 0xFE	; 254
    caae:	88 83       	st	Y, r24
    cab0:	c2 50       	subi	r28, 0x02	; 2
    cab2:	d1 40       	sbci	r29, 0x01	; 1
    cab4:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    cab8:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    cabc:	2c e6       	ldi	r18, 0x6C	; 108
    cabe:	2b 83       	std	Y+3, r18	; 0x03
    cac0:	02 96       	adiw	r24, 0x02	; 2
    cac2:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    cac6:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    caca:	84 e0       	ldi	r24, 0x04	; 4
    cacc:	cf 5f       	subi	r28, 0xFF	; 255
    cace:	de 4f       	sbci	r29, 0xFE	; 254
    cad0:	88 83       	st	Y, r24
    cad2:	c1 50       	subi	r28, 0x01	; 1
    cad4:	d1 40       	sbci	r29, 0x01	; 1
    cad6:	82 e0       	ldi	r24, 0x02	; 2
    cad8:	8c 83       	std	Y+4, r24	; 0x04
    cada:	8b 01       	movw	r16, r22
    cadc:	e0 2e       	mov	r14, r16
    cade:	f1 2e       	mov	r15, r17
    cae0:	00 e0       	ldi	r16, 0x00	; 0
    cae2:	10 e0       	ldi	r17, 0x00	; 0
    cae4:	20 e0       	ldi	r18, 0x00	; 0
    cae6:	30 e0       	ldi	r19, 0x00	; 0
    cae8:	40 e0       	ldi	r20, 0x00	; 0
    caea:	50 e0       	ldi	r21, 0x00	; 0
    caec:	be 01       	movw	r22, r28
    caee:	6f 5f       	subi	r22, 0xFF	; 255
    caf0:	7e 4f       	sbci	r23, 0xFE	; 254
    caf2:	ce 01       	movw	r24, r28
    caf4:	01 96       	adiw	r24, 0x01	; 1
    caf6:	0e 94 93 6d 	call	0xdb26	; 0xdb26 <TMR_SR_convertToEBV>
    cafa:	cf 5f       	subi	r28, 0xFF	; 255
    cafc:	de 4f       	sbci	r29, 0xFE	; 254
    cafe:	88 81       	ld	r24, Y
    cb00:	c1 50       	subi	r28, 0x01	; 1
    cb02:	d1 40       	sbci	r29, 0x01	; 1
    cb04:	83 50       	subi	r24, 0x03	; 3
    cb06:	8a 83       	std	Y+2, r24	; 0x02
    cb08:	f5 01       	movw	r30, r10
    cb0a:	e0 52       	subi	r30, 0x20	; 32
    cb0c:	fe 4f       	sbci	r31, 0xFE	; 254
    cb0e:	20 81       	ld	r18, Z
    cb10:	31 81       	ldd	r19, Z+1	; 0x01
    cb12:	42 81       	ldd	r20, Z+2	; 0x02
    cb14:	53 81       	ldd	r21, Z+3	; 0x03
    cb16:	be 01       	movw	r22, r28
    cb18:	6f 5f       	subi	r22, 0xFF	; 255
    cb1a:	7f 4f       	sbci	r23, 0xFF	; 255
    cb1c:	c5 01       	movw	r24, r10
    cb1e:	0e 94 e3 35 	call	0x6bc6	; 0x6bc6 <TMR_SR_sendTimeout>
    cb22:	61 15       	cp	r22, r1
    cb24:	71 05       	cpc	r23, r1
    cb26:	81 05       	cpc	r24, r1
    cb28:	91 05       	cpc	r25, r1
    cb2a:	09 f0       	breq	.+2      	; 0xcb2e <TMR_SR_cmdGetReaderStats+0xb0>
    cb2c:	24 c1       	rjmp	.+584    	; 0xcd76 <TMR_SR_cmdGetReaderStats+0x2f8>
    cb2e:	c1 14       	cp	r12, r1
    cb30:	d1 04       	cpc	r13, r1
    cb32:	09 f4       	brne	.+2      	; 0xcb36 <TMR_SR_cmdGetReaderStats+0xb8>
    cb34:	13 c1       	rjmp	.+550    	; 0xcd5c <TMR_SR_cmdGetReaderStats+0x2de>
    cb36:	cf 5f       	subi	r28, 0xFF	; 255
    cb38:	de 4f       	sbci	r29, 0xFE	; 254
    cb3a:	18 82       	st	Y, r1
    cb3c:	c1 50       	subi	r28, 0x01	; 1
    cb3e:	d1 40       	sbci	r29, 0x01	; 1
    cb40:	33 c0       	rjmp	.+102    	; 0xcba8 <TMR_SR_cmdGetReaderStats+0x12a>
    cb42:	d6 01       	movw	r26, r12
    cb44:	a0 5b       	subi	r26, 0xB0	; 176
    cb46:	bf 4f       	sbci	r27, 0xFF	; 255
    cb48:	ed 91       	ld	r30, X+
    cb4a:	fc 91       	ld	r31, X
    cb4c:	11 97       	sbiw	r26, 0x01	; 1
    cb4e:	9c 01       	movw	r18, r24
    cb50:	22 0f       	add	r18, r18
    cb52:	33 1f       	adc	r19, r19
    cb54:	82 0f       	add	r24, r18
    cb56:	93 1f       	adc	r25, r19
    cb58:	88 0f       	add	r24, r24
    cb5a:	99 1f       	adc	r25, r25
    cb5c:	e8 0f       	add	r30, r24
    cb5e:	f9 1f       	adc	r31, r25
    cb60:	10 82       	st	Z, r1
    cb62:	ed 91       	ld	r30, X+
    cb64:	fc 91       	ld	r31, X
    cb66:	11 97       	sbiw	r26, 0x01	; 1
    cb68:	cf 5f       	subi	r28, 0xFF	; 255
    cb6a:	de 4f       	sbci	r29, 0xFE	; 254
    cb6c:	28 81       	ld	r18, Y
    cb6e:	c1 50       	subi	r28, 0x01	; 1
    cb70:	d1 40       	sbci	r29, 0x01	; 1
    cb72:	82 2f       	mov	r24, r18
    cb74:	90 e0       	ldi	r25, 0x00	; 0
    cb76:	ac 01       	movw	r20, r24
    cb78:	44 0f       	add	r20, r20
    cb7a:	55 1f       	adc	r21, r21
    cb7c:	84 0f       	add	r24, r20
    cb7e:	95 1f       	adc	r25, r21
    cb80:	88 0f       	add	r24, r24
    cb82:	99 1f       	adc	r25, r25
    cb84:	e8 0f       	add	r30, r24
    cb86:	f9 1f       	adc	r31, r25
    cb88:	11 82       	std	Z+1, r1	; 0x01
    cb8a:	12 82       	std	Z+2, r1	; 0x02
    cb8c:	13 82       	std	Z+3, r1	; 0x03
    cb8e:	14 82       	std	Z+4, r1	; 0x04
    cb90:	4d 91       	ld	r20, X+
    cb92:	5c 91       	ld	r21, X
    cb94:	fa 01       	movw	r30, r20
    cb96:	e8 0f       	add	r30, r24
    cb98:	f9 1f       	adc	r31, r25
    cb9a:	15 82       	std	Z+5, r1	; 0x05
    cb9c:	2f 5f       	subi	r18, 0xFF	; 255
    cb9e:	cf 5f       	subi	r28, 0xFF	; 255
    cba0:	de 4f       	sbci	r29, 0xFE	; 254
    cba2:	28 83       	st	Y, r18
    cba4:	c1 50       	subi	r28, 0x01	; 1
    cba6:	d1 40       	sbci	r29, 0x01	; 1
    cba8:	cf 5f       	subi	r28, 0xFF	; 255
    cbaa:	de 4f       	sbci	r29, 0xFE	; 254
    cbac:	88 81       	ld	r24, Y
    cbae:	c1 50       	subi	r28, 0x01	; 1
    cbb0:	d1 40       	sbci	r29, 0x01	; 1
    cbb2:	90 e0       	ldi	r25, 0x00	; 0
    cbb4:	f6 01       	movw	r30, r12
    cbb6:	ee 5a       	subi	r30, 0xAE	; 174
    cbb8:	ff 4f       	sbci	r31, 0xFF	; 255
    cbba:	20 81       	ld	r18, Z
    cbbc:	31 81       	ldd	r19, Z+1	; 0x01
    cbbe:	82 17       	cp	r24, r18
    cbc0:	93 07       	cpc	r25, r19
    cbc2:	08 f4       	brcc	.+2      	; 0xcbc6 <TMR_SR_cmdGetReaderStats+0x148>
    cbc4:	be cf       	rjmp	.-132    	; 0xcb42 <TMR_SR_cmdGetReaderStats+0xc4>
    cbc6:	ae 01       	movw	r20, r28
    cbc8:	4e 5f       	subi	r20, 0xFE	; 254
    cbca:	5e 4f       	sbci	r21, 0xFE	; 254
    cbcc:	be 01       	movw	r22, r28
    cbce:	6d 5f       	subi	r22, 0xFD	; 253
    cbd0:	7e 4f       	sbci	r23, 0xFE	; 254
    cbd2:	ce 01       	movw	r24, r28
    cbd4:	01 96       	adiw	r24, 0x01	; 1
    cbd6:	0e 94 4d 32 	call	0x649a	; 0x649a <parseEBVdata>
    cbda:	68 2f       	mov	r22, r24
    cbdc:	ce 01       	movw	r24, r28
    cbde:	8d 5f       	subi	r24, 0xFD	; 253
    cbe0:	9e 4f       	sbci	r25, 0xFE	; 254
    cbe2:	0e 94 3a 6f 	call	0xde74	; 0xde74 <TMR_SR_convertFromEBV>
    cbe6:	42 2f       	mov	r20, r18
    cbe8:	53 2f       	mov	r21, r19
    cbea:	f5 01       	movw	r30, r10
    cbec:	eb 5e       	subi	r30, 0xEB	; 235
    cbee:	f9 4f       	sbci	r31, 0xF9	; 249
    cbf0:	20 83       	st	Z, r18
    cbf2:	31 83       	std	Z+1, r19	; 0x01
    cbf4:	ce 5f       	subi	r28, 0xFE	; 254
    cbf6:	de 4f       	sbci	r29, 0xFE	; 254
    cbf8:	08 81       	ld	r16, Y
    cbfa:	c2 50       	subi	r28, 0x02	; 2
    cbfc:	d1 40       	sbci	r29, 0x01	; 1
    cbfe:	9e 01       	movw	r18, r28
    cc00:	2f 5f       	subi	r18, 0xFF	; 255
    cc02:	3f 4f       	sbci	r19, 0xFF	; 255
    cc04:	b6 01       	movw	r22, r12
    cc06:	c5 01       	movw	r24, r10
    cc08:	46 dd       	rcall	.-1396   	; 0xc696 <TMR_fillReaderStats>
    cc0a:	61 15       	cp	r22, r1
    cc0c:	71 05       	cpc	r23, r1
    cc0e:	81 05       	cpc	r24, r1
    cc10:	91 05       	cpc	r25, r1
    cc12:	09 f0       	breq	.+2      	; 0xcc16 <TMR_SR_cmdGetReaderStats+0x198>
    cc14:	b4 c0       	rjmp	.+360    	; 0xcd7e <TMR_SR_cmdGetReaderStats+0x300>
    cc16:	cf 5f       	subi	r28, 0xFF	; 255
    cc18:	de 4f       	sbci	r29, 0xFE	; 254
    cc1a:	18 82       	st	Y, r1
    cc1c:	c1 50       	subi	r28, 0x01	; 1
    cc1e:	d1 40       	sbci	r29, 0x01	; 1
    cc20:	8e c0       	rjmp	.+284    	; 0xcd3e <TMR_SR_cmdGetReaderStats+0x2c0>
    cc22:	f6 01       	movw	r30, r12
    cc24:	e0 5b       	subi	r30, 0xB0	; 176
    cc26:	ff 4f       	sbci	r31, 0xFF	; 255
    cc28:	40 81       	ld	r20, Z
    cc2a:	51 81       	ldd	r21, Z+1	; 0x01
    cc2c:	82 2f       	mov	r24, r18
    cc2e:	90 e0       	ldi	r25, 0x00	; 0
    cc30:	fc 01       	movw	r30, r24
    cc32:	ee 0f       	add	r30, r30
    cc34:	ff 1f       	adc	r31, r31
    cc36:	e8 0f       	add	r30, r24
    cc38:	f9 1f       	adc	r31, r25
    cc3a:	ee 0f       	add	r30, r30
    cc3c:	ff 1f       	adc	r31, r31
    cc3e:	e4 0f       	add	r30, r20
    cc40:	f5 1f       	adc	r31, r21
    cc42:	80 81       	ld	r24, Z
    cc44:	81 11       	cpse	r24, r1
    cc46:	68 c0       	rjmp	.+208    	; 0xcd18 <TMR_SR_cmdGetReaderStats+0x29a>
    cc48:	2f 5f       	subi	r18, 0xFF	; 255
    cc4a:	62 c0       	rjmp	.+196    	; 0xcd10 <TMR_SR_cmdGetReaderStats+0x292>
    cc4c:	82 2f       	mov	r24, r18
    cc4e:	90 e0       	ldi	r25, 0x00	; 0
    cc50:	bc 01       	movw	r22, r24
    cc52:	66 0f       	add	r22, r22
    cc54:	77 1f       	adc	r23, r23
    cc56:	86 0f       	add	r24, r22
    cc58:	97 1f       	adc	r25, r23
    cc5a:	88 0f       	add	r24, r24
    cc5c:	99 1f       	adc	r25, r25
    cc5e:	bc 01       	movw	r22, r24
    cc60:	da 01       	movw	r26, r20
    cc62:	a8 0f       	add	r26, r24
    cc64:	b9 1f       	adc	r27, r25
    cc66:	8c 91       	ld	r24, X
    cc68:	88 23       	and	r24, r24
    cc6a:	09 f4       	brne	.+2      	; 0xcc6e <TMR_SR_cmdGetReaderStats+0x1f0>
    cc6c:	50 c0       	rjmp	.+160    	; 0xcd0e <TMR_SR_cmdGetReaderStats+0x290>
    cc6e:	80 83       	st	Z, r24
    cc70:	f6 01       	movw	r30, r12
    cc72:	e0 5b       	subi	r30, 0xB0	; 176
    cc74:	ff 4f       	sbci	r31, 0xFF	; 255
    cc76:	20 81       	ld	r18, Z
    cc78:	31 81       	ldd	r19, Z+1	; 0x01
    cc7a:	cf 5f       	subi	r28, 0xFF	; 255
    cc7c:	de 4f       	sbci	r29, 0xFE	; 254
    cc7e:	88 81       	ld	r24, Y
    cc80:	c1 50       	subi	r28, 0x01	; 1
    cc82:	d1 40       	sbci	r29, 0x01	; 1
    cc84:	90 e0       	ldi	r25, 0x00	; 0
    cc86:	ac 01       	movw	r20, r24
    cc88:	44 0f       	add	r20, r20
    cc8a:	55 1f       	adc	r21, r21
    cc8c:	84 0f       	add	r24, r20
    cc8e:	95 1f       	adc	r25, r21
    cc90:	88 0f       	add	r24, r24
    cc92:	99 1f       	adc	r25, r25
    cc94:	a9 01       	movw	r20, r18
    cc96:	48 0f       	add	r20, r24
    cc98:	59 1f       	adc	r21, r25
    cc9a:	26 0f       	add	r18, r22
    cc9c:	37 1f       	adc	r19, r23
    cc9e:	d9 01       	movw	r26, r18
    cca0:	11 96       	adiw	r26, 0x01	; 1
    cca2:	0d 91       	ld	r16, X+
    cca4:	1d 91       	ld	r17, X+
    cca6:	2d 91       	ld	r18, X+
    cca8:	3c 91       	ld	r19, X
    ccaa:	14 97       	sbiw	r26, 0x04	; 4
    ccac:	da 01       	movw	r26, r20
    ccae:	11 96       	adiw	r26, 0x01	; 1
    ccb0:	0d 93       	st	X+, r16
    ccb2:	1d 93       	st	X+, r17
    ccb4:	2d 93       	st	X+, r18
    ccb6:	3c 93       	st	X, r19
    ccb8:	14 97       	sbiw	r26, 0x04	; 4
    ccba:	20 81       	ld	r18, Z
    ccbc:	31 81       	ldd	r19, Z+1	; 0x01
    ccbe:	82 0f       	add	r24, r18
    ccc0:	93 1f       	adc	r25, r19
    ccc2:	26 0f       	add	r18, r22
    ccc4:	37 1f       	adc	r19, r23
    ccc6:	d9 01       	movw	r26, r18
    ccc8:	15 96       	adiw	r26, 0x05	; 5
    ccca:	2c 91       	ld	r18, X
    cccc:	dc 01       	movw	r26, r24
    ccce:	15 96       	adiw	r26, 0x05	; 5
    ccd0:	2c 93       	st	X, r18
    ccd2:	a0 81       	ld	r26, Z
    ccd4:	b1 81       	ldd	r27, Z+1	; 0x01
    ccd6:	a6 0f       	add	r26, r22
    ccd8:	b7 1f       	adc	r27, r23
    ccda:	1c 92       	st	X, r1
    ccdc:	a0 81       	ld	r26, Z
    ccde:	b1 81       	ldd	r27, Z+1	; 0x01
    cce0:	a6 0f       	add	r26, r22
    cce2:	b7 1f       	adc	r27, r23
    cce4:	11 96       	adiw	r26, 0x01	; 1
    cce6:	1d 92       	st	X+, r1
    cce8:	1d 92       	st	X+, r1
    ccea:	1d 92       	st	X+, r1
    ccec:	1c 92       	st	X, r1
    ccee:	14 97       	sbiw	r26, 0x04	; 4
    ccf0:	80 81       	ld	r24, Z
    ccf2:	91 81       	ldd	r25, Z+1	; 0x01
    ccf4:	fc 01       	movw	r30, r24
    ccf6:	e6 0f       	add	r30, r22
    ccf8:	f7 1f       	adc	r31, r23
    ccfa:	15 82       	std	Z+5, r1	; 0x05
    ccfc:	f6 01       	movw	r30, r12
    ccfe:	ec 5a       	subi	r30, 0xAC	; 172
    cd00:	ff 4f       	sbci	r31, 0xFF	; 255
    cd02:	80 81       	ld	r24, Z
    cd04:	91 81       	ldd	r25, Z+1	; 0x01
    cd06:	01 96       	adiw	r24, 0x01	; 1
    cd08:	91 83       	std	Z+1, r25	; 0x01
    cd0a:	80 83       	st	Z, r24
    cd0c:	0d c0       	rjmp	.+26     	; 0xcd28 <TMR_SR_cmdGetReaderStats+0x2aa>
    cd0e:	2f 5f       	subi	r18, 0xFF	; 255
    cd10:	23 17       	cp	r18, r19
    cd12:	08 f4       	brcc	.+2      	; 0xcd16 <TMR_SR_cmdGetReaderStats+0x298>
    cd14:	9b cf       	rjmp	.-202    	; 0xcc4c <TMR_SR_cmdGetReaderStats+0x1ce>
    cd16:	08 c0       	rjmp	.+16     	; 0xcd28 <TMR_SR_cmdGetReaderStats+0x2aa>
    cd18:	f6 01       	movw	r30, r12
    cd1a:	ec 5a       	subi	r30, 0xAC	; 172
    cd1c:	ff 4f       	sbci	r31, 0xFF	; 255
    cd1e:	80 81       	ld	r24, Z
    cd20:	91 81       	ldd	r25, Z+1	; 0x01
    cd22:	01 96       	adiw	r24, 0x01	; 1
    cd24:	91 83       	std	Z+1, r25	; 0x01
    cd26:	80 83       	st	Z, r24
    cd28:	cf 5f       	subi	r28, 0xFF	; 255
    cd2a:	de 4f       	sbci	r29, 0xFE	; 254
    cd2c:	88 81       	ld	r24, Y
    cd2e:	c1 50       	subi	r28, 0x01	; 1
    cd30:	d1 40       	sbci	r29, 0x01	; 1
    cd32:	8f 5f       	subi	r24, 0xFF	; 255
    cd34:	cf 5f       	subi	r28, 0xFF	; 255
    cd36:	de 4f       	sbci	r29, 0xFE	; 254
    cd38:	88 83       	st	Y, r24
    cd3a:	c1 50       	subi	r28, 0x01	; 1
    cd3c:	d1 40       	sbci	r29, 0x01	; 1
    cd3e:	f5 01       	movw	r30, r10
    cd40:	ec 52       	subi	r30, 0x2C	; 44
    cd42:	fe 4f       	sbci	r31, 0xFE	; 254
    cd44:	01 90       	ld	r0, Z+
    cd46:	f0 81       	ld	r31, Z
    cd48:	e0 2d       	mov	r30, r0
    cd4a:	33 81       	ldd	r19, Z+3	; 0x03
    cd4c:	cf 5f       	subi	r28, 0xFF	; 255
    cd4e:	de 4f       	sbci	r29, 0xFE	; 254
    cd50:	28 81       	ld	r18, Y
    cd52:	c1 50       	subi	r28, 0x01	; 1
    cd54:	d1 40       	sbci	r29, 0x01	; 1
    cd56:	23 17       	cp	r18, r19
    cd58:	08 f4       	brcc	.+2      	; 0xcd5c <TMR_SR_cmdGetReaderStats+0x2de>
    cd5a:	63 cf       	rjmp	.-314    	; 0xcc22 <TMR_SR_cmdGetReaderStats+0x1a4>
    cd5c:	f5 01       	movw	r30, r10
    cd5e:	eb 5e       	subi	r30, 0xEB	; 235
    cd60:	f9 4f       	sbci	r31, 0xF9	; 249
    cd62:	80 81       	ld	r24, Z
    cd64:	91 81       	ldd	r25, Z+1	; 0x01
    cd66:	f6 01       	movw	r30, r12
    cd68:	91 83       	std	Z+1, r25	; 0x01
    cd6a:	80 83       	st	Z, r24
    cd6c:	40 e0       	ldi	r20, 0x00	; 0
    cd6e:	30 e0       	ldi	r19, 0x00	; 0
    cd70:	20 e0       	ldi	r18, 0x00	; 0
    cd72:	90 e0       	ldi	r25, 0x00	; 0
    cd74:	07 c0       	rjmp	.+14     	; 0xcd84 <TMR_SR_cmdGetReaderStats+0x306>
    cd76:	46 2f       	mov	r20, r22
    cd78:	37 2f       	mov	r19, r23
    cd7a:	28 2f       	mov	r18, r24
    cd7c:	03 c0       	rjmp	.+6      	; 0xcd84 <TMR_SR_cmdGetReaderStats+0x306>
    cd7e:	46 2f       	mov	r20, r22
    cd80:	37 2f       	mov	r19, r23
    cd82:	28 2f       	mov	r18, r24
    cd84:	64 2f       	mov	r22, r20
    cd86:	73 2f       	mov	r23, r19
    cd88:	82 2f       	mov	r24, r18
    cd8a:	ca 5f       	subi	r28, 0xFA	; 250
    cd8c:	de 4f       	sbci	r29, 0xFE	; 254
    cd8e:	0f b6       	in	r0, 0x3f	; 63
    cd90:	f8 94       	cli
    cd92:	de bf       	out	0x3e, r29	; 62
    cd94:	0f be       	out	0x3f, r0	; 63
    cd96:	cd bf       	out	0x3d, r28	; 61
    cd98:	df 91       	pop	r29
    cd9a:	cf 91       	pop	r28
    cd9c:	1f 91       	pop	r17
    cd9e:	0f 91       	pop	r16
    cda0:	ff 90       	pop	r15
    cda2:	ef 90       	pop	r14
    cda4:	df 90       	pop	r13
    cda6:	cf 90       	pop	r12
    cda8:	bf 90       	pop	r11
    cdaa:	af 90       	pop	r10
    cdac:	08 95       	ret

0000cdae <TMR_SR_cmdResetReaderStats>:
    cdae:	cf 93       	push	r28
    cdb0:	df 93       	push	r29
    cdb2:	cd b7       	in	r28, 0x3d	; 61
    cdb4:	de b7       	in	r29, 0x3e	; 62
    cdb6:	da 95       	dec	r29
    cdb8:	0f b6       	in	r0, 0x3f	; 63
    cdba:	f8 94       	cli
    cdbc:	de bf       	out	0x3e, r29	; 62
    cdbe:	0f be       	out	0x3f, r0	; 63
    cdc0:	cd bf       	out	0x3d, r28	; 61
    cdc2:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    cdc6:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    cdca:	4c e6       	ldi	r20, 0x6C	; 108
    cdcc:	4b 83       	std	Y+3, r20	; 0x03
    cdce:	2e 5f       	subi	r18, 0xFE	; 254
    cdd0:	3f 4f       	sbci	r19, 0xFF	; 255
    cdd2:	41 e0       	ldi	r20, 0x01	; 1
    cdd4:	4c 83       	std	Y+4, r20	; 0x04
    cdd6:	60 38       	cpi	r22, 0x80	; 128
    cdd8:	71 05       	cpc	r23, r1
    cdda:	48 f4       	brcc	.+18     	; 0xcdee <TMR_SR_cmdResetReaderStats+0x40>
    cddc:	2f 5f       	subi	r18, 0xFF	; 255
    cdde:	3f 4f       	sbci	r19, 0xFF	; 255
    cde0:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    cde4:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    cde8:	6d 83       	std	Y+5, r22	; 0x05
    cdea:	25 e0       	ldi	r18, 0x05	; 5
    cdec:	12 c0       	rjmp	.+36     	; 0xce12 <TMR_SR_cmdResetReaderStats+0x64>
    cdee:	ab 01       	movw	r20, r22
    cdf0:	4f 77       	andi	r20, 0x7F	; 127
    cdf2:	55 27       	eor	r21, r21
    cdf4:	60 78       	andi	r22, 0x80	; 128
    cdf6:	66 0f       	add	r22, r22
    cdf8:	77 1f       	adc	r23, r23
    cdfa:	64 2b       	or	r22, r20
    cdfc:	75 2b       	or	r23, r21
    cdfe:	70 68       	ori	r23, 0x80	; 128
    ce00:	2e 5f       	subi	r18, 0xFE	; 254
    ce02:	3f 4f       	sbci	r19, 0xFF	; 255
    ce04:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    ce08:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    ce0c:	7d 83       	std	Y+5, r23	; 0x05
    ce0e:	6e 83       	std	Y+6, r22	; 0x06
    ce10:	26 e0       	ldi	r18, 0x06	; 6
    ce12:	23 50       	subi	r18, 0x03	; 3
    ce14:	2a 83       	std	Y+2, r18	; 0x02
    ce16:	fc 01       	movw	r30, r24
    ce18:	e0 52       	subi	r30, 0x20	; 32
    ce1a:	fe 4f       	sbci	r31, 0xFE	; 254
    ce1c:	20 81       	ld	r18, Z
    ce1e:	31 81       	ldd	r19, Z+1	; 0x01
    ce20:	42 81       	ldd	r20, Z+2	; 0x02
    ce22:	53 81       	ldd	r21, Z+3	; 0x03
    ce24:	be 01       	movw	r22, r28
    ce26:	6f 5f       	subi	r22, 0xFF	; 255
    ce28:	7f 4f       	sbci	r23, 0xFF	; 255
    ce2a:	0e 94 e3 35 	call	0x6bc6	; 0x6bc6 <TMR_SR_sendTimeout>
    ce2e:	61 15       	cp	r22, r1
    ce30:	71 05       	cpc	r23, r1
    ce32:	81 05       	cpc	r24, r1
    ce34:	91 05       	cpc	r25, r1
    ce36:	29 f4       	brne	.+10     	; 0xce42 <TMR_SR_cmdResetReaderStats+0x94>
    ce38:	40 e0       	ldi	r20, 0x00	; 0
    ce3a:	30 e0       	ldi	r19, 0x00	; 0
    ce3c:	20 e0       	ldi	r18, 0x00	; 0
    ce3e:	90 e0       	ldi	r25, 0x00	; 0
    ce40:	03 c0       	rjmp	.+6      	; 0xce48 <TMR_SR_cmdResetReaderStats+0x9a>
    ce42:	46 2f       	mov	r20, r22
    ce44:	37 2f       	mov	r19, r23
    ce46:	28 2f       	mov	r18, r24
    ce48:	64 2f       	mov	r22, r20
    ce4a:	73 2f       	mov	r23, r19
    ce4c:	82 2f       	mov	r24, r18
    ce4e:	d3 95       	inc	r29
    ce50:	0f b6       	in	r0, 0x3f	; 63
    ce52:	f8 94       	cli
    ce54:	de bf       	out	0x3e, r29	; 62
    ce56:	0f be       	out	0x3f, r0	; 63
    ce58:	cd bf       	out	0x3d, r28	; 61
    ce5a:	df 91       	pop	r29
    ce5c:	cf 91       	pop	r28
    ce5e:	08 95       	ret

0000ce60 <TMR_SR_cmdStopReading>:
    ce60:	0f 93       	push	r16
    ce62:	1f 93       	push	r17
    ce64:	cf 93       	push	r28
    ce66:	df 93       	push	r29
    ce68:	cd b7       	in	r28, 0x3d	; 61
    ce6a:	de b7       	in	r29, 0x3e	; 62
    ce6c:	c1 50       	subi	r28, 0x01	; 1
    ce6e:	d1 40       	sbci	r29, 0x01	; 1
    ce70:	0f b6       	in	r0, 0x3f	; 63
    ce72:	f8 94       	cli
    ce74:	de bf       	out	0x3e, r29	; 62
    ce76:	0f be       	out	0x3f, r0	; 63
    ce78:	cd bf       	out	0x3d, r28	; 61
    ce7a:	fc 01       	movw	r30, r24
    ce7c:	e5 58       	subi	r30, 0x85	; 133
    ce7e:	fe 4f       	sbci	r31, 0xFE	; 254
    ce80:	10 82       	st	Z, r1
    ce82:	4f e2       	ldi	r20, 0x2F	; 47
    ce84:	cf 5f       	subi	r28, 0xFF	; 255
    ce86:	de 4f       	sbci	r29, 0xFE	; 254
    ce88:	48 83       	st	Y, r20
    ce8a:	c1 50       	subi	r28, 0x01	; 1
    ce8c:	d1 40       	sbci	r29, 0x01	; 1
    ce8e:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    ce92:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    ce96:	4b 83       	std	Y+3, r20	; 0x03
    ce98:	1c 82       	std	Y+4, r1	; 0x04
    ce9a:	1d 82       	std	Y+5, r1	; 0x05
    ce9c:	2c 5f       	subi	r18, 0xFC	; 252
    ce9e:	3f 4f       	sbci	r19, 0xFF	; 255
    cea0:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    cea4:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    cea8:	22 e0       	ldi	r18, 0x02	; 2
    ceaa:	2e 83       	std	Y+6, r18	; 0x06
    ceac:	23 e0       	ldi	r18, 0x03	; 3
    ceae:	2a 83       	std	Y+2, r18	; 0x02
    ceb0:	eb 59       	subi	r30, 0x9B	; 155
    ceb2:	ff 4f       	sbci	r31, 0xFF	; 255
    ceb4:	00 81       	ld	r16, Z
    ceb6:	11 81       	ldd	r17, Z+1	; 0x01
    ceb8:	22 81       	ldd	r18, Z+2	; 0x02
    ceba:	33 81       	ldd	r19, Z+3	; 0x03
    cebc:	ae 01       	movw	r20, r28
    cebe:	4f 5f       	subi	r20, 0xFF	; 255
    cec0:	5e 4f       	sbci	r21, 0xFE	; 254
    cec2:	be 01       	movw	r22, r28
    cec4:	6f 5f       	subi	r22, 0xFF	; 255
    cec6:	7f 4f       	sbci	r23, 0xFF	; 255
    cec8:	0e 94 c1 32 	call	0x6582	; 0x6582 <TMR_SR_sendMessage>
    cecc:	cf 5f       	subi	r28, 0xFF	; 255
    cece:	de 4f       	sbci	r29, 0xFE	; 254
    ced0:	0f b6       	in	r0, 0x3f	; 63
    ced2:	f8 94       	cli
    ced4:	de bf       	out	0x3e, r29	; 62
    ced6:	0f be       	out	0x3f, r0	; 63
    ced8:	cd bf       	out	0x3d, r28	; 61
    ceda:	df 91       	pop	r29
    cedc:	cf 91       	pop	r28
    cede:	1f 91       	pop	r17
    cee0:	0f 91       	pop	r16
    cee2:	08 95       	ret

0000cee4 <TMR_SR_cmdGetReaderWriteTimeOut>:
    cee4:	0f 93       	push	r16
    cee6:	1f 93       	push	r17
    cee8:	cf 93       	push	r28
    ceea:	df 93       	push	r29
    ceec:	cd b7       	in	r28, 0x3d	; 61
    ceee:	de b7       	in	r29, 0x3e	; 62
    cef0:	da 95       	dec	r29
    cef2:	0f b6       	in	r0, 0x3f	; 63
    cef4:	f8 94       	cli
    cef6:	de bf       	out	0x3e, r29	; 62
    cef8:	0f be       	out	0x3f, r0	; 63
    cefa:	cd bf       	out	0x3d, r28	; 61
    cefc:	8a 01       	movw	r16, r20
    cefe:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    cf02:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    cf06:	4b e6       	ldi	r20, 0x6B	; 107
    cf08:	4b 83       	std	Y+3, r20	; 0x03
    cf0a:	6c 83       	std	Y+4, r22	; 0x04
    cf0c:	2d 5f       	subi	r18, 0xFD	; 253
    cf0e:	3f 4f       	sbci	r19, 0xFF	; 255
    cf10:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    cf14:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    cf18:	2f e3       	ldi	r18, 0x3F	; 63
    cf1a:	2d 83       	std	Y+5, r18	; 0x05
    cf1c:	45 e0       	ldi	r20, 0x05	; 5
    cf1e:	be 01       	movw	r22, r28
    cf20:	6f 5f       	subi	r22, 0xFF	; 255
    cf22:	7f 4f       	sbci	r23, 0xFF	; 255
    cf24:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    cf28:	61 15       	cp	r22, r1
    cf2a:	71 05       	cpc	r23, r1
    cf2c:	81 05       	cpc	r24, r1
    cf2e:	91 05       	cpc	r25, r1
    cf30:	a1 f4       	brne	.+40     	; 0xcf5a <TMR_SR_cmdGetReaderWriteTimeOut+0x76>
    cf32:	81 e0       	ldi	r24, 0x01	; 1
    cf34:	98 85       	ldd	r25, Y+8	; 0x08
    cf36:	91 11       	cpse	r25, r1
    cf38:	01 c0       	rjmp	.+2      	; 0xcf3c <TMR_SR_cmdGetReaderWriteTimeOut+0x58>
    cf3a:	80 e0       	ldi	r24, 0x00	; 0
    cf3c:	f8 01       	movw	r30, r16
    cf3e:	80 83       	st	Z, r24
    cf40:	89 85       	ldd	r24, Y+9	; 0x09
    cf42:	90 e0       	ldi	r25, 0x00	; 0
    cf44:	98 2f       	mov	r25, r24
    cf46:	88 27       	eor	r24, r24
    cf48:	2a 85       	ldd	r18, Y+10	; 0x0a
    cf4a:	82 2b       	or	r24, r18
    cf4c:	92 83       	std	Z+2, r25	; 0x02
    cf4e:	81 83       	std	Z+1, r24	; 0x01
    cf50:	40 e0       	ldi	r20, 0x00	; 0
    cf52:	30 e0       	ldi	r19, 0x00	; 0
    cf54:	20 e0       	ldi	r18, 0x00	; 0
    cf56:	90 e0       	ldi	r25, 0x00	; 0
    cf58:	03 c0       	rjmp	.+6      	; 0xcf60 <TMR_SR_cmdGetReaderWriteTimeOut+0x7c>
    cf5a:	46 2f       	mov	r20, r22
    cf5c:	37 2f       	mov	r19, r23
    cf5e:	28 2f       	mov	r18, r24
    cf60:	64 2f       	mov	r22, r20
    cf62:	73 2f       	mov	r23, r19
    cf64:	82 2f       	mov	r24, r18
    cf66:	d3 95       	inc	r29
    cf68:	0f b6       	in	r0, 0x3f	; 63
    cf6a:	f8 94       	cli
    cf6c:	de bf       	out	0x3e, r29	; 62
    cf6e:	0f be       	out	0x3f, r0	; 63
    cf70:	cd bf       	out	0x3d, r28	; 61
    cf72:	df 91       	pop	r29
    cf74:	cf 91       	pop	r28
    cf76:	1f 91       	pop	r17
    cf78:	0f 91       	pop	r16
    cf7a:	08 95       	ret

0000cf7c <TMR_SR_cmdSetReaderWriteTimeOut>:
    cf7c:	cf 93       	push	r28
    cf7e:	df 93       	push	r29
    cf80:	cd b7       	in	r28, 0x3d	; 61
    cf82:	de b7       	in	r29, 0x3e	; 62
    cf84:	da 95       	dec	r29
    cf86:	0f b6       	in	r0, 0x3f	; 63
    cf88:	f8 94       	cli
    cf8a:	de bf       	out	0x3e, r29	; 62
    cf8c:	0f be       	out	0x3f, r0	; 63
    cf8e:	cd bf       	out	0x3d, r28	; 61
    cf90:	fa 01       	movw	r30, r20
    cf92:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    cf96:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    cf9a:	4b e9       	ldi	r20, 0x9B	; 155
    cf9c:	4b 83       	std	Y+3, r20	; 0x03
    cf9e:	6c 83       	std	Y+4, r22	; 0x04
    cfa0:	2d 5f       	subi	r18, 0xFD	; 253
    cfa2:	3f 4f       	sbci	r19, 0xFF	; 255
    cfa4:	4f e3       	ldi	r20, 0x3F	; 63
    cfa6:	4d 83       	std	Y+5, r20	; 0x05
    cfa8:	a9 01       	movw	r20, r18
    cfaa:	4f 5f       	subi	r20, 0xFF	; 255
    cfac:	5f 4f       	sbci	r21, 0xFF	; 255
    cfae:	50 93 d7 0b 	sts	0x0BD7, r21	; 0x800bd7 <totalMsgIdx+0x1>
    cfb2:	40 93 d6 0b 	sts	0x0BD6, r20	; 0x800bd6 <totalMsgIdx>
    cfb6:	40 81       	ld	r20, Z
    cfb8:	4e 83       	std	Y+6, r20	; 0x06
    cfba:	41 81       	ldd	r20, Z+1	; 0x01
    cfbc:	52 81       	ldd	r21, Z+2	; 0x02
    cfbe:	2d 5f       	subi	r18, 0xFD	; 253
    cfc0:	3f 4f       	sbci	r19, 0xFF	; 255
    cfc2:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    cfc6:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    cfca:	5f 83       	std	Y+7, r21	; 0x07
    cfcc:	48 87       	std	Y+8, r20	; 0x08
    cfce:	48 e0       	ldi	r20, 0x08	; 8
    cfd0:	be 01       	movw	r22, r28
    cfd2:	6f 5f       	subi	r22, 0xFF	; 255
    cfd4:	7f 4f       	sbci	r23, 0xFF	; 255
    cfd6:	0e 94 88 36 	call	0x6d10	; 0x6d10 <TMR_SR_sendCmd>
    cfda:	d3 95       	inc	r29
    cfdc:	0f b6       	in	r0, 0x3f	; 63
    cfde:	f8 94       	cli
    cfe0:	de bf       	out	0x3e, r29	; 62
    cfe2:	0f be       	out	0x3f, r0	; 63
    cfe4:	cd bf       	out	0x3d, r28	; 61
    cfe6:	df 91       	pop	r29
    cfe8:	cf 91       	pop	r28
    cfea:	08 95       	ret

0000cfec <TMR_SR_msgAddAccessPassword>:
    cfec:	0f 93       	push	r16
    cfee:	1f 93       	push	r17
    cff0:	cf 93       	push	r28
    cff2:	df 93       	push	r29
    cff4:	21 15       	cp	r18, r1
    cff6:	31 05       	cpc	r19, r1
    cff8:	61 f1       	breq	.+88     	; 0xd052 <TMR_SR_msgAddAccessPassword+0x66>
    cffa:	e9 01       	movw	r28, r18
    cffc:	fa 01       	movw	r30, r20
    cffe:	8b 01       	movw	r16, r22
    d000:	20 81       	ld	r18, Z
    d002:	fc 01       	movw	r30, r24
    d004:	e2 0f       	add	r30, r18
    d006:	f1 1d       	adc	r31, r1
    d008:	20 81       	ld	r18, Z
    d00a:	20 64       	ori	r18, 0x40	; 64
    d00c:	20 83       	st	Z, r18
    d00e:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    d012:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    d016:	2f 5f       	subi	r18, 0xFF	; 255
    d018:	3f 4f       	sbci	r19, 0xFF	; 255
    d01a:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    d01e:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    d022:	fb 01       	movw	r30, r22
    d024:	20 81       	ld	r18, Z
    d026:	31 e0       	ldi	r19, 0x01	; 1
    d028:	32 0f       	add	r19, r18
    d02a:	30 83       	st	Z, r19
    d02c:	fc 01       	movw	r30, r24
    d02e:	e2 0f       	add	r30, r18
    d030:	f1 1d       	adc	r31, r1
    d032:	2c 81       	ldd	r18, Y+4	; 0x04
    d034:	20 83       	st	Z, r18
    d036:	68 81       	ld	r22, Y
    d038:	79 81       	ldd	r23, Y+1	; 0x01
    d03a:	f8 01       	movw	r30, r16
    d03c:	20 81       	ld	r18, Z
    d03e:	4c 81       	ldd	r20, Y+4	; 0x04
    d040:	5d 81       	ldd	r21, Y+5	; 0x05
    d042:	82 0f       	add	r24, r18
    d044:	91 1d       	adc	r25, r1
    d046:	2a d2       	rcall	.+1108   	; 0xd49c <tm_memcpy>
    d048:	8c 81       	ldd	r24, Y+4	; 0x04
    d04a:	f8 01       	movw	r30, r16
    d04c:	90 81       	ld	r25, Z
    d04e:	89 0f       	add	r24, r25
    d050:	80 83       	st	Z, r24
    d052:	df 91       	pop	r29
    d054:	cf 91       	pop	r28
    d056:	1f 91       	pop	r17
    d058:	0f 91       	pop	r16
    d05a:	08 95       	ret

0000d05c <TMR_SR_msgAddExtendedParams>:
    d05c:	0f 93       	push	r16
    d05e:	1f 93       	push	r17
    d060:	cf 93       	push	r28
    d062:	df 93       	push	r29
    d064:	d9 01       	movw	r26, r18
    d066:	14 96       	adiw	r26, 0x04	; 4
    d068:	ed 91       	ld	r30, X+
    d06a:	fc 91       	ld	r31, X
    d06c:	15 97       	sbiw	r26, 0x05	; 5
    d06e:	30 97       	sbiw	r30, 0x00	; 0
    d070:	09 f4       	brne	.+2      	; 0xd074 <TMR_SR_msgAddExtendedParams+0x18>
    d072:	3e c0       	rjmp	.+124    	; 0xd0f0 <TMR_SR_msgAddExtendedParams+0x94>
    d074:	0d 90       	ld	r0, X+
    d076:	bc 91       	ld	r27, X
    d078:	a0 2d       	mov	r26, r0
    d07a:	ac 91       	ld	r26, X
    d07c:	aa 23       	and	r26, r26
    d07e:	e1 f1       	breq	.+120    	; 0xd0f8 <TMR_SR_msgAddExtendedParams+0x9c>
    d080:	eb 01       	movw	r28, r22
    d082:	a8 81       	ld	r26, Y
    d084:	ea 0f       	add	r30, r26
    d086:	f1 1d       	adc	r31, r1
    d088:	31 96       	adiw	r30, 0x01	; 1
    d08a:	e1 30       	cpi	r30, 0x01	; 1
    d08c:	f1 40       	sbci	r31, 0x01	; 1
    d08e:	c0 f5       	brcc	.+112    	; 0xd100 <TMR_SR_msgAddExtendedParams+0xa4>
    d090:	e9 01       	movw	r28, r18
    d092:	fa 01       	movw	r30, r20
    d094:	8b 01       	movw	r16, r22
    d096:	20 81       	ld	r18, Z
    d098:	fc 01       	movw	r30, r24
    d09a:	e2 0f       	add	r30, r18
    d09c:	f1 1d       	adc	r31, r1
    d09e:	20 81       	ld	r18, Z
    d0a0:	24 60       	ori	r18, 0x04	; 4
    d0a2:	20 83       	st	Z, r18
    d0a4:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    d0a8:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    d0ac:	2f 5f       	subi	r18, 0xFF	; 255
    d0ae:	3f 4f       	sbci	r19, 0xFF	; 255
    d0b0:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    d0b4:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    d0b8:	fb 01       	movw	r30, r22
    d0ba:	20 81       	ld	r18, Z
    d0bc:	31 e0       	ldi	r19, 0x01	; 1
    d0be:	32 0f       	add	r19, r18
    d0c0:	30 83       	st	Z, r19
    d0c2:	fc 01       	movw	r30, r24
    d0c4:	e2 0f       	add	r30, r18
    d0c6:	f1 1d       	adc	r31, r1
    d0c8:	2c 81       	ldd	r18, Y+4	; 0x04
    d0ca:	20 83       	st	Z, r18
    d0cc:	68 81       	ld	r22, Y
    d0ce:	79 81       	ldd	r23, Y+1	; 0x01
    d0d0:	d8 01       	movw	r26, r16
    d0d2:	2c 91       	ld	r18, X
    d0d4:	4c 81       	ldd	r20, Y+4	; 0x04
    d0d6:	5d 81       	ldd	r21, Y+5	; 0x05
    d0d8:	82 0f       	add	r24, r18
    d0da:	91 1d       	adc	r25, r1
    d0dc:	df d1       	rcall	.+958    	; 0xd49c <tm_memcpy>
    d0de:	8c 81       	ldd	r24, Y+4	; 0x04
    d0e0:	e8 01       	movw	r28, r16
    d0e2:	98 81       	ld	r25, Y
    d0e4:	89 0f       	add	r24, r25
    d0e6:	88 83       	st	Y, r24
    d0e8:	60 e0       	ldi	r22, 0x00	; 0
    d0ea:	70 e0       	ldi	r23, 0x00	; 0
    d0ec:	cb 01       	movw	r24, r22
    d0ee:	0c c0       	rjmp	.+24     	; 0xd108 <TMR_SR_msgAddExtendedParams+0xac>
    d0f0:	60 e0       	ldi	r22, 0x00	; 0
    d0f2:	70 e0       	ldi	r23, 0x00	; 0
    d0f4:	cb 01       	movw	r24, r22
    d0f6:	08 c0       	rjmp	.+16     	; 0xd108 <TMR_SR_msgAddExtendedParams+0xac>
    d0f8:	60 e0       	ldi	r22, 0x00	; 0
    d0fa:	70 e0       	ldi	r23, 0x00	; 0
    d0fc:	cb 01       	movw	r24, r22
    d0fe:	04 c0       	rjmp	.+8      	; 0xd108 <TMR_SR_msgAddExtendedParams+0xac>
    d100:	66 e0       	ldi	r22, 0x06	; 6
    d102:	70 e0       	ldi	r23, 0x00	; 0
    d104:	80 e0       	ldi	r24, 0x00	; 0
    d106:	93 e0       	ldi	r25, 0x03	; 3
    d108:	df 91       	pop	r29
    d10a:	cf 91       	pop	r28
    d10c:	1f 91       	pop	r17
    d10e:	0f 91       	pop	r16
    d110:	08 95       	ret

0000d112 <TMR_SR_msgAddWriteMemory>:
    d112:	ef 92       	push	r14
    d114:	ff 92       	push	r15
    d116:	0f 93       	push	r16
    d118:	1f 93       	push	r17
    d11a:	fb 01       	movw	r30, r22
    d11c:	60 91 d6 0b 	lds	r22, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    d120:	70 91 d7 0b 	lds	r23, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    d124:	6f 5f       	subi	r22, 0xFF	; 255
    d126:	7f 4f       	sbci	r23, 0xFF	; 255
    d128:	70 93 d7 0b 	sts	0x0BD7, r23	; 0x800bd7 <totalMsgIdx+0x1>
    d12c:	60 93 d6 0b 	sts	0x0BD6, r22	; 0x800bd6 <totalMsgIdx>
    d130:	30 81       	ld	r19, Z
    d132:	61 e0       	ldi	r22, 0x01	; 1
    d134:	63 0f       	add	r22, r19
    d136:	60 83       	st	Z, r22
    d138:	dc 01       	movw	r26, r24
    d13a:	a3 0f       	add	r26, r19
    d13c:	b1 1d       	adc	r27, r1
    d13e:	34 e2       	ldi	r19, 0x24	; 36
    d140:	3c 93       	st	X, r19
    d142:	60 91 d6 0b 	lds	r22, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    d146:	70 91 d7 0b 	lds	r23, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    d14a:	6e 5f       	subi	r22, 0xFE	; 254
    d14c:	7f 4f       	sbci	r23, 0xFF	; 255
    d14e:	70 93 d7 0b 	sts	0x0BD7, r23	; 0x800bd7 <totalMsgIdx+0x1>
    d152:	60 93 d6 0b 	sts	0x0BD6, r22	; 0x800bd6 <totalMsgIdx>
    d156:	30 81       	ld	r19, Z
    d158:	61 e0       	ldi	r22, 0x01	; 1
    d15a:	63 0f       	add	r22, r19
    d15c:	60 83       	st	Z, r22
    d15e:	dc 01       	movw	r26, r24
    d160:	a3 0f       	add	r26, r19
    d162:	b1 1d       	adc	r27, r1
    d164:	5c 93       	st	X, r21
    d166:	30 81       	ld	r19, Z
    d168:	51 e0       	ldi	r21, 0x01	; 1
    d16a:	53 0f       	add	r21, r19
    d16c:	50 83       	st	Z, r21
    d16e:	dc 01       	movw	r26, r24
    d170:	a3 0f       	add	r26, r19
    d172:	b1 1d       	adc	r27, r1
    d174:	4c 93       	st	X, r20
    d176:	40 91 d6 0b 	lds	r20, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    d17a:	50 91 d7 0b 	lds	r21, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    d17e:	4f 5f       	subi	r20, 0xFF	; 255
    d180:	5f 4f       	sbci	r21, 0xFF	; 255
    d182:	50 93 d7 0b 	sts	0x0BD7, r21	; 0x800bd7 <totalMsgIdx+0x1>
    d186:	40 93 d6 0b 	sts	0x0BD6, r20	; 0x800bd6 <totalMsgIdx>
    d18a:	30 81       	ld	r19, Z
    d18c:	41 e0       	ldi	r20, 0x01	; 1
    d18e:	43 0f       	add	r20, r19
    d190:	40 83       	st	Z, r20
    d192:	dc 01       	movw	r26, r24
    d194:	a3 0f       	add	r26, r19
    d196:	b1 1d       	adc	r27, r1
    d198:	1c 92       	st	X, r1
    d19a:	40 91 d6 0b 	lds	r20, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    d19e:	50 91 d7 0b 	lds	r21, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    d1a2:	4f 5f       	subi	r20, 0xFF	; 255
    d1a4:	5f 4f       	sbci	r21, 0xFF	; 255
    d1a6:	50 93 d7 0b 	sts	0x0BD7, r21	; 0x800bd7 <totalMsgIdx+0x1>
    d1aa:	40 93 d6 0b 	sts	0x0BD6, r20	; 0x800bd6 <totalMsgIdx>
    d1ae:	30 81       	ld	r19, Z
    d1b0:	41 e0       	ldi	r20, 0x01	; 1
    d1b2:	43 0f       	add	r20, r19
    d1b4:	40 83       	st	Z, r20
    d1b6:	dc 01       	movw	r26, r24
    d1b8:	a3 0f       	add	r26, r19
    d1ba:	b1 1d       	adc	r27, r1
    d1bc:	2c 93       	st	X, r18
    d1be:	20 91 d8 0b 	lds	r18, 0x0BD8	; 0x800bd8 <isAddrByteExtended>
    d1c2:	22 23       	and	r18, r18
    d1c4:	59 f1       	breq	.+86     	; 0xd21c <TMR_SR_msgAddWriteMemory+0x10a>
    d1c6:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    d1ca:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    d1ce:	2c 5f       	subi	r18, 0xFC	; 252
    d1d0:	3f 4f       	sbci	r19, 0xFF	; 255
    d1d2:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    d1d6:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    d1da:	20 81       	ld	r18, Z
    d1dc:	31 e0       	ldi	r19, 0x01	; 1
    d1de:	32 0f       	add	r19, r18
    d1e0:	30 83       	st	Z, r19
    d1e2:	dc 01       	movw	r26, r24
    d1e4:	a2 0f       	add	r26, r18
    d1e6:	b1 1d       	adc	r27, r1
    d1e8:	1c 93       	st	X, r17
    d1ea:	20 81       	ld	r18, Z
    d1ec:	31 e0       	ldi	r19, 0x01	; 1
    d1ee:	32 0f       	add	r19, r18
    d1f0:	30 83       	st	Z, r19
    d1f2:	dc 01       	movw	r26, r24
    d1f4:	a2 0f       	add	r26, r18
    d1f6:	b1 1d       	adc	r27, r1
    d1f8:	0c 93       	st	X, r16
    d1fa:	20 81       	ld	r18, Z
    d1fc:	31 e0       	ldi	r19, 0x01	; 1
    d1fe:	32 0f       	add	r19, r18
    d200:	30 83       	st	Z, r19
    d202:	dc 01       	movw	r26, r24
    d204:	a2 0f       	add	r26, r18
    d206:	b1 1d       	adc	r27, r1
    d208:	fc 92       	st	X, r15
    d20a:	20 81       	ld	r18, Z
    d20c:	31 e0       	ldi	r19, 0x01	; 1
    d20e:	32 0f       	add	r19, r18
    d210:	30 83       	st	Z, r19
    d212:	fc 01       	movw	r30, r24
    d214:	e2 0f       	add	r30, r18
    d216:	f1 1d       	adc	r31, r1
    d218:	e0 82       	st	Z, r14
    d21a:	12 c0       	rjmp	.+36     	; 0xd240 <TMR_SR_msgAddWriteMemory+0x12e>
    d21c:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    d220:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    d224:	2f 5f       	subi	r18, 0xFF	; 255
    d226:	3f 4f       	sbci	r19, 0xFF	; 255
    d228:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    d22c:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    d230:	20 81       	ld	r18, Z
    d232:	31 e0       	ldi	r19, 0x01	; 1
    d234:	32 0f       	add	r19, r18
    d236:	30 83       	st	Z, r19
    d238:	fc 01       	movw	r30, r24
    d23a:	e2 0f       	add	r30, r18
    d23c:	f1 1d       	adc	r31, r1
    d23e:	e0 82       	st	Z, r14
    d240:	1f 91       	pop	r17
    d242:	0f 91       	pop	r16
    d244:	ff 90       	pop	r15
    d246:	ef 90       	pop	r14
    d248:	08 95       	ret

0000d24a <TMR_SR_msgAddReadMemory>:

void
TMR_SR_msgAddReadMemory(uint8_t *msg, uint8_t *i, uint16_t timeout, TMR_Memory_Type memType, uint32_t address,
                        uint8_t len, bool withMetaData)
{
    d24a:	af 92       	push	r10
    d24c:	cf 92       	push	r12
    d24e:	ef 92       	push	r14
    d250:	ff 92       	push	r15
    d252:	0f 93       	push	r16
    d254:	1f 93       	push	r17
    d256:	fb 01       	movw	r30, r22
  SETU8(msg, *i, TMR_SR_OPCODE_READ_TAG_DATA); //0x28 command
    d258:	60 91 d6 0b 	lds	r22, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    d25c:	70 91 d7 0b 	lds	r23, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    d260:	6f 5f       	subi	r22, 0xFF	; 255
    d262:	7f 4f       	sbci	r23, 0xFF	; 255
    d264:	70 93 d7 0b 	sts	0x0BD7, r23	; 0x800bd7 <totalMsgIdx+0x1>
    d268:	60 93 d6 0b 	sts	0x0BD6, r22	; 0x800bd6 <totalMsgIdx>
    d26c:	30 81       	ld	r19, Z
    d26e:	61 e0       	ldi	r22, 0x01	; 1
    d270:	63 0f       	add	r22, r19
    d272:	60 83       	st	Z, r22
    d274:	dc 01       	movw	r26, r24
    d276:	a3 0f       	add	r26, r19
    d278:	b1 1d       	adc	r27, r1
    d27a:	38 e2       	ldi	r19, 0x28	; 40
    d27c:	3c 93       	st	X, r19
  SETU16(msg, *i, timeout);
    d27e:	60 91 d6 0b 	lds	r22, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    d282:	70 91 d7 0b 	lds	r23, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    d286:	6e 5f       	subi	r22, 0xFE	; 254
    d288:	7f 4f       	sbci	r23, 0xFF	; 255
    d28a:	70 93 d7 0b 	sts	0x0BD7, r23	; 0x800bd7 <totalMsgIdx+0x1>
    d28e:	60 93 d6 0b 	sts	0x0BD6, r22	; 0x800bd6 <totalMsgIdx>
    d292:	30 81       	ld	r19, Z
    d294:	61 e0       	ldi	r22, 0x01	; 1
    d296:	63 0f       	add	r22, r19
    d298:	60 83       	st	Z, r22
    d29a:	dc 01       	movw	r26, r24
    d29c:	a3 0f       	add	r26, r19
    d29e:	b1 1d       	adc	r27, r1
    d2a0:	5c 93       	st	X, r21
    d2a2:	30 81       	ld	r19, Z
    d2a4:	51 e0       	ldi	r21, 0x01	; 1
    d2a6:	53 0f       	add	r21, r19
    d2a8:	50 83       	st	Z, r21
    d2aa:	dc 01       	movw	r26, r24
    d2ac:	a3 0f       	add	r26, r19
    d2ae:	b1 1d       	adc	r27, r1
    d2b0:	4c 93       	st	X, r20
  SETU8(msg, *i, 0x00); //option
    d2b2:	40 91 d6 0b 	lds	r20, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    d2b6:	50 91 d7 0b 	lds	r21, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    d2ba:	4f 5f       	subi	r20, 0xFF	; 255
    d2bc:	5f 4f       	sbci	r21, 0xFF	; 255
    d2be:	50 93 d7 0b 	sts	0x0BD7, r21	; 0x800bd7 <totalMsgIdx+0x1>
    d2c2:	40 93 d6 0b 	sts	0x0BD6, r20	; 0x800bd6 <totalMsgIdx>
    d2c6:	30 81       	ld	r19, Z
    d2c8:	41 e0       	ldi	r20, 0x01	; 1
    d2ca:	43 0f       	add	r20, r19
    d2cc:	40 83       	st	Z, r20
    d2ce:	dc 01       	movw	r26, r24
    d2d0:	a3 0f       	add	r26, r19
    d2d2:	b1 1d       	adc	r27, r1
    d2d4:	1c 92       	st	X, r1
  if (withMetaData)
    d2d6:	aa 20       	and	r10, r10
    d2d8:	d1 f0       	breq	.+52     	; 0xd30e <TMR_SR_msgAddReadMemory+0xc4>
  {
    SETU16(msg, *i, 0); // metadata flags - initialize
    d2da:	40 91 d6 0b 	lds	r20, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    d2de:	50 91 d7 0b 	lds	r21, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    d2e2:	4e 5f       	subi	r20, 0xFE	; 254
    d2e4:	5f 4f       	sbci	r21, 0xFF	; 255
    d2e6:	50 93 d7 0b 	sts	0x0BD7, r21	; 0x800bd7 <totalMsgIdx+0x1>
    d2ea:	40 93 d6 0b 	sts	0x0BD6, r20	; 0x800bd6 <totalMsgIdx>
    d2ee:	30 81       	ld	r19, Z
    d2f0:	41 e0       	ldi	r20, 0x01	; 1
    d2f2:	43 0f       	add	r20, r19
    d2f4:	40 83       	st	Z, r20
    d2f6:	dc 01       	movw	r26, r24
    d2f8:	a3 0f       	add	r26, r19
    d2fa:	b1 1d       	adc	r27, r1
    d2fc:	1c 92       	st	X, r1
    d2fe:	30 81       	ld	r19, Z
    d300:	41 e0       	ldi	r20, 0x01	; 1
    d302:	43 0f       	add	r20, r19
    d304:	40 83       	st	Z, r20
    d306:	dc 01       	movw	r26, r24
    d308:	a3 0f       	add	r26, r19
    d30a:	b1 1d       	adc	r27, r1
    d30c:	1c 92       	st	X, r1
  }
  SETU8(msg, *i, memType);
    d30e:	40 91 d6 0b 	lds	r20, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    d312:	50 91 d7 0b 	lds	r21, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    d316:	4f 5f       	subi	r20, 0xFF	; 255
    d318:	5f 4f       	sbci	r21, 0xFF	; 255
    d31a:	50 93 d7 0b 	sts	0x0BD7, r21	; 0x800bd7 <totalMsgIdx+0x1>
    d31e:	40 93 d6 0b 	sts	0x0BD6, r20	; 0x800bd6 <totalMsgIdx>
    d322:	30 81       	ld	r19, Z
    d324:	41 e0       	ldi	r20, 0x01	; 1
    d326:	43 0f       	add	r20, r19
    d328:	40 83       	st	Z, r20
    d32a:	dc 01       	movw	r26, r24
    d32c:	a3 0f       	add	r26, r19
    d32e:	b1 1d       	adc	r27, r1
    d330:	2c 93       	st	X, r18
  if(isAddrByteExtended)
    d332:	20 91 d8 0b 	lds	r18, 0x0BD8	; 0x800bd8 <isAddrByteExtended>
    d336:	22 23       	and	r18, r18
    d338:	59 f1       	breq	.+86     	; 0xd390 <TMR_SR_msgAddReadMemory+0x146>
  {
    SETU32(msg, *i, address);
    d33a:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    d33e:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    d342:	2c 5f       	subi	r18, 0xFC	; 252
    d344:	3f 4f       	sbci	r19, 0xFF	; 255
    d346:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    d34a:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    d34e:	20 81       	ld	r18, Z
    d350:	31 e0       	ldi	r19, 0x01	; 1
    d352:	32 0f       	add	r19, r18
    d354:	30 83       	st	Z, r19
    d356:	dc 01       	movw	r26, r24
    d358:	a2 0f       	add	r26, r18
    d35a:	b1 1d       	adc	r27, r1
    d35c:	1c 93       	st	X, r17
    d35e:	20 81       	ld	r18, Z
    d360:	31 e0       	ldi	r19, 0x01	; 1
    d362:	32 0f       	add	r19, r18
    d364:	30 83       	st	Z, r19
    d366:	dc 01       	movw	r26, r24
    d368:	a2 0f       	add	r26, r18
    d36a:	b1 1d       	adc	r27, r1
    d36c:	0c 93       	st	X, r16
    d36e:	20 81       	ld	r18, Z
    d370:	31 e0       	ldi	r19, 0x01	; 1
    d372:	32 0f       	add	r19, r18
    d374:	30 83       	st	Z, r19
    d376:	dc 01       	movw	r26, r24
    d378:	a2 0f       	add	r26, r18
    d37a:	b1 1d       	adc	r27, r1
    d37c:	fc 92       	st	X, r15
    d37e:	20 81       	ld	r18, Z
    d380:	31 e0       	ldi	r19, 0x01	; 1
    d382:	32 0f       	add	r19, r18
    d384:	30 83       	st	Z, r19
    d386:	dc 01       	movw	r26, r24
    d388:	a2 0f       	add	r26, r18
    d38a:	b1 1d       	adc	r27, r1
    d38c:	ec 92       	st	X, r14
    d38e:	12 c0       	rjmp	.+36     	; 0xd3b4 <TMR_SR_msgAddReadMemory+0x16a>
  }
  else
  {
    SETU8(msg, *i, address);
    d390:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    d394:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    d398:	2f 5f       	subi	r18, 0xFF	; 255
    d39a:	3f 4f       	sbci	r19, 0xFF	; 255
    d39c:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    d3a0:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    d3a4:	20 81       	ld	r18, Z
    d3a6:	31 e0       	ldi	r19, 0x01	; 1
    d3a8:	32 0f       	add	r19, r18
    d3aa:	30 83       	st	Z, r19
    d3ac:	dc 01       	movw	r26, r24
    d3ae:	a2 0f       	add	r26, r18
    d3b0:	b1 1d       	adc	r27, r1
    d3b2:	ec 92       	st	X, r14
  }
  SETU8(msg, *i, len);
    d3b4:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    d3b8:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    d3bc:	2f 5f       	subi	r18, 0xFF	; 255
    d3be:	3f 4f       	sbci	r19, 0xFF	; 255
    d3c0:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    d3c4:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    d3c8:	20 81       	ld	r18, Z
    d3ca:	31 e0       	ldi	r19, 0x01	; 1
    d3cc:	32 0f       	add	r19, r18
    d3ce:	30 83       	st	Z, r19
    d3d0:	fc 01       	movw	r30, r24
    d3d2:	e2 0f       	add	r30, r18
    d3d4:	f1 1d       	adc	r31, r1
    d3d6:	c0 82       	st	Z, r12
}
    d3d8:	1f 91       	pop	r17
    d3da:	0f 91       	pop	r16
    d3dc:	ff 90       	pop	r15
    d3de:	ef 90       	pop	r14
    d3e0:	cf 90       	pop	r12
    d3e2:	af 90       	pop	r10
    d3e4:	08 95       	ret

0000d3e6 <s_flush>:
   * nothing.
   */
static TMR_Status s_flush(TMR_SR_SerialTransport *this)
{
	(void)this; /*This parameter is unused in this function*/
	UART0_flush();
    d3e6:	0e 94 de 73 	call	0xe7bc	; 0xe7bc <UART0_flush>
	return TMR_SUCCESS; /*Dummy return, as no status is calculated regarding flush operation of buffer*/
}
    d3ea:	60 e0       	ldi	r22, 0x00	; 0
    d3ec:	70 e0       	ldi	r23, 0x00	; 0
    d3ee:	cb 01       	movw	r24, r22
    d3f0:	08 95       	ret

0000d3f2 <s_shutdown>:
   * acquired resources.
   */
static TMR_Status s_shutdown(TMR_SR_SerialTransport *this)
{
	(void)this; /*This parameter is unused in this function*/
	UART0_DeInit();
    d3f2:	0e 94 ed 73 	call	0xe7da	; 0xe7da <UART0_DeInit>
	return TMR_SUCCESS; /*Dummy return, as no status is calculated regarding flush operation of buffer*/
}
    d3f6:	60 e0       	ldi	r22, 0x00	; 0
    d3f8:	70 e0       	ldi	r23, 0x00	; 0
    d3fa:	cb 01       	movw	r24, r22
    d3fc:	08 95       	ret

0000d3fe <s_setBaudRate>:
   */
static TMR_Status s_setBaudRate(TMR_SR_SerialTransport *this, uint32_t rate)
{
	TMR_Status baud_status;
	(void) this; /*This parameter is unused in this function*/
	baud_status = UART0_change_BAUD(rate);
    d3fe:	cb 01       	movw	r24, r22
    d400:	ba 01       	movw	r22, r20
    d402:	0c 94 cf 72 	jmp	0xe59e	; 0xe59e <UART0_change_BAUD>
	return baud_status;
}
    d406:	08 95       	ret

0000d408 <s_receiveBytes>:
   * connection and store them into the memory pointed to by
   * message. If the required number of bytes are not received in
   * timeoutMs milliseconds, it should return TMR_ERROR_TIMEOUT.
   */
static TMR_Status s_receiveBytes(TMR_SR_SerialTransport *this, uint32_t length, uint32_t* messageLength, uint8_t* message, const uint32_t timeoutMs)
{
    d408:	cf 92       	push	r12
    d40a:	df 92       	push	r13
    d40c:	ef 92       	push	r14
    d40e:	ff 92       	push	r15
    d410:	0f 93       	push	r16
    d412:	1f 93       	push	r17
    d414:	c8 01       	movw	r24, r16
	TMR_Status RX_status;
	(void) this; /*This parameter is unused in this function*/
	RX_status = UART0_ReceiveMessage(message, length, messageLength, timeoutMs);
    d416:	87 01       	movw	r16, r14
    d418:	76 01       	movw	r14, r12
    d41a:	0e 94 f6 73 	call	0xe7ec	; 0xe7ec <UART0_ReceiveMessage>
	return RX_status;
 }
    d41e:	1f 91       	pop	r17
    d420:	0f 91       	pop	r16
    d422:	ff 90       	pop	r15
    d424:	ef 90       	pop	r14
    d426:	df 90       	pop	r13
    d428:	cf 90       	pop	r12
    d42a:	08 95       	ret

0000d42c <s_sendBytes>:
/* This routine should send length bytes, pointed to by message on
   * the serial connection. If the transmission does not complete in
   * timeoutMs milliseconds, it should return TMR_ERROR_TIMEOUT.
   */
static TMR_Status s_sendBytes(TMR_SR_SerialTransport *this, uint32_t length, uint8_t* message, const uint32_t timeoutMs)
{  
    d42c:	ef 92       	push	r14
    d42e:	ff 92       	push	r15
    d430:	0f 93       	push	r16
    d432:	1f 93       	push	r17
    d434:	c9 01       	movw	r24, r18
    d436:	98 01       	movw	r18, r16
    d438:	87 01       	movw	r16, r14
	TMR_Status TX_status;
	(void) this; /*This parameter is unused in this function*/
	
	TX_status = UART0_SendMessage(message, length, timeoutMs);
    d43a:	0e 94 42 73 	call	0xe684	; 0xe684 <UART0_SendMessage>
	
	
	return TX_status;
}
    d43e:	1f 91       	pop	r17
    d440:	0f 91       	pop	r16
    d442:	ff 90       	pop	r15
    d444:	ef 90       	pop	r14
    d446:	08 95       	ret

0000d448 <s_open>:

/* This routine should open the serial connection */
static TMR_Status s_open(TMR_SR_SerialTransport *this)
{
	(void) this; /*This parameter is unused in this function*/
	UART_init(115200U, READER_INTERFACE); /*UART is initialized with BAUD = 115200 bps*/
    d448:	41 e0       	ldi	r20, 0x01	; 1
    d44a:	60 e0       	ldi	r22, 0x00	; 0
    d44c:	72 ec       	ldi	r23, 0xC2	; 194
    d44e:	81 e0       	ldi	r24, 0x01	; 1
    d450:	90 e0       	ldi	r25, 0x00	; 0
    d452:	0e 94 9f 72 	call	0xe53e	; 0xe53e <UART_init>
	return TMR_SUCCESS; /*Dummy return, as no status is calculated regarding flush operation of buffer*/
}
    d456:	60 e0       	ldi	r22, 0x00	; 0
    d458:	70 e0       	ldi	r23, 0x00	; 0
    d45a:	cb 01       	movw	r24, r22
    d45c:	08 95       	ret

0000d45e <TMR_SR_SerialTransportDummyInit>:
 * The initialization should not actually open a communication channel
 * or acquire other communication resources at this time.
 */
TMR_Status TMR_SR_SerialTransportDummyInit(TMR_SR_SerialTransport *transport,
								TMR_SR_SerialPortNativeContext *context, void *other)
{
    d45e:	fc 01       	movw	r30, r24
  /* Each of the callback functions will be passed the transport
   * pointer, and they can use the "cookie" member of the transport
   * structure to store the information specific to the transport,
   * such as a file handle or the memory address of the FIFO.
   */
  transport->cookie = other;
    d460:	51 83       	std	Z+1, r21	; 0x01
    d462:	40 83       	st	Z, r20

  transport->open = s_open;
    d464:	84 e2       	ldi	r24, 0x24	; 36
    d466:	9a e6       	ldi	r25, 0x6A	; 106
    d468:	93 83       	std	Z+3, r25	; 0x03
    d46a:	82 83       	std	Z+2, r24	; 0x02
  transport->sendBytes = s_sendBytes;
    d46c:	86 e1       	ldi	r24, 0x16	; 22
    d46e:	9a e6       	ldi	r25, 0x6A	; 106
    d470:	95 83       	std	Z+5, r25	; 0x05
    d472:	84 83       	std	Z+4, r24	; 0x04
  transport->receiveBytes = s_receiveBytes;
    d474:	84 e0       	ldi	r24, 0x04	; 4
    d476:	9a e6       	ldi	r25, 0x6A	; 106
    d478:	97 83       	std	Z+7, r25	; 0x07
    d47a:	86 83       	std	Z+6, r24	; 0x06
  transport->setBaudRate = s_setBaudRate;
    d47c:	8f ef       	ldi	r24, 0xFF	; 255
    d47e:	99 e6       	ldi	r25, 0x69	; 105
    d480:	91 87       	std	Z+9, r25	; 0x09
    d482:	80 87       	std	Z+8, r24	; 0x08
  transport->shutdown = s_shutdown;
    d484:	89 ef       	ldi	r24, 0xF9	; 249
    d486:	99 e6       	ldi	r25, 0x69	; 105
    d488:	93 87       	std	Z+11, r25	; 0x0b
    d48a:	82 87       	std	Z+10, r24	; 0x0a
  transport->flush = s_flush;
    d48c:	83 ef       	ldi	r24, 0xF3	; 243
    d48e:	99 e6       	ldi	r25, 0x69	; 105
    d490:	95 87       	std	Z+13, r25	; 0x0d
    d492:	84 87       	std	Z+12, r24	; 0x0c

  return TMR_SUCCESS;
}
    d494:	60 e0       	ldi	r22, 0x00	; 0
    d496:	70 e0       	ldi	r23, 0x00	; 0
    d498:	cb 01       	movw	r24, r22
    d49a:	08 95       	ret

0000d49c <tm_memcpy>:
{
  if (end >= start)
    return end - start;
  else
    return (UINT32_MAX - start) + end;
}
    d49c:	db 01       	movw	r26, r22
    d49e:	e8 2f       	mov	r30, r24
    d4a0:	f9 2f       	mov	r31, r25
    d4a2:	04 c0       	rjmp	.+8      	; 0xd4ac <tm_memcpy+0x10>
    d4a4:	2d 91       	ld	r18, X+
    d4a6:	21 93       	st	Z+, r18
    d4a8:	41 50       	subi	r20, 0x01	; 1
    d4aa:	51 09       	sbc	r21, r1
    d4ac:	41 15       	cp	r20, r1
    d4ae:	51 05       	cpc	r21, r1
    d4b0:	c9 f7       	brne	.-14     	; 0xd4a4 <tm_memcpy+0x8>
    d4b2:	08 95       	ret

0000d4b4 <tm_gettime_consistent>:
    d4b4:	cf 92       	push	r12
    d4b6:	df 92       	push	r13
    d4b8:	ef 92       	push	r14
    d4ba:	ff 92       	push	r15
    d4bc:	0f 93       	push	r16
    d4be:	1f 93       	push	r17
    d4c0:	cf 93       	push	r28
    d4c2:	df 93       	push	r29
    d4c4:	ec 01       	movw	r28, r24
    d4c6:	8b 01       	movw	r16, r22
    d4c8:	0e 94 13 03 	call	0x626	; 0x626 <tmr_gettime_high>
    d4cc:	68 83       	st	Y, r22
    d4ce:	79 83       	std	Y+1, r23	; 0x01
    d4d0:	8a 83       	std	Y+2, r24	; 0x02
    d4d2:	9b 83       	std	Y+3, r25	; 0x03
    d4d4:	0e 94 0f 03 	call	0x61e	; 0x61e <tmr_gettime_low>
    d4d8:	f8 01       	movw	r30, r16
    d4da:	60 83       	st	Z, r22
    d4dc:	71 83       	std	Z+1, r23	; 0x01
    d4de:	82 83       	std	Z+2, r24	; 0x02
    d4e0:	93 83       	std	Z+3, r25	; 0x03
    d4e2:	0e 94 13 03 	call	0x626	; 0x626 <tmr_gettime_high>
    d4e6:	c8 80       	ld	r12, Y
    d4e8:	d9 80       	ldd	r13, Y+1	; 0x01
    d4ea:	ea 80       	ldd	r14, Y+2	; 0x02
    d4ec:	fb 80       	ldd	r15, Y+3	; 0x03
    d4ee:	6c 15       	cp	r22, r12
    d4f0:	7d 05       	cpc	r23, r13
    d4f2:	8e 05       	cpc	r24, r14
    d4f4:	9f 05       	cpc	r25, r15
    d4f6:	59 f0       	breq	.+22     	; 0xd50e <tm_gettime_consistent+0x5a>
    d4f8:	68 83       	st	Y, r22
    d4fa:	79 83       	std	Y+1, r23	; 0x01
    d4fc:	8a 83       	std	Y+2, r24	; 0x02
    d4fe:	9b 83       	std	Y+3, r25	; 0x03
    d500:	0e 94 0f 03 	call	0x61e	; 0x61e <tmr_gettime_low>
    d504:	f8 01       	movw	r30, r16
    d506:	60 83       	st	Z, r22
    d508:	71 83       	std	Z+1, r23	; 0x01
    d50a:	82 83       	std	Z+2, r24	; 0x02
    d50c:	93 83       	std	Z+3, r25	; 0x03
    d50e:	df 91       	pop	r29
    d510:	cf 91       	pop	r28
    d512:	1f 91       	pop	r17
    d514:	0f 91       	pop	r16
    d516:	ff 90       	pop	r15
    d518:	ef 90       	pop	r14
    d51a:	df 90       	pop	r13
    d51c:	cf 90       	pop	r12
    d51e:	08 95       	ret

0000d520 <tm_u8s_per_bits>:
 * @param bitCount  number of bits to hold
 * @return  Minimum length of bytes that can contain that many bits
 */
int tm_u8s_per_bits(int bitCount) 
{
	return ((0<bitCount) ?((((bitCount)-1)>>3)+1) :0);
    d520:	18 16       	cp	r1, r24
    d522:	19 06       	cpc	r1, r25
    d524:	4c f4       	brge	.+18     	; 0xd538 <tm_u8s_per_bits+0x18>
    d526:	01 97       	sbiw	r24, 0x01	; 1
    d528:	95 95       	asr	r25
    d52a:	87 95       	ror	r24
    d52c:	95 95       	asr	r25
    d52e:	87 95       	ror	r24
    d530:	95 95       	asr	r25
    d532:	87 95       	ror	r24
    d534:	01 96       	adiw	r24, 0x01	; 1
    d536:	08 95       	ret
    d538:	80 e0       	ldi	r24, 0x00	; 0
    d53a:	90 e0       	ldi	r25, 0x00	; 0
}
    d53c:	08 95       	ret

0000d53e <TMR_stringCopy>:

void
TMR_stringCopy(TMR_String *dest, const char *src, int len)
{
    d53e:	0f 93       	push	r16
    d540:	1f 93       	push	r17
    d542:	cf 93       	push	r28
    d544:	df 93       	push	r29
    d546:	8c 01       	movw	r16, r24
    d548:	ea 01       	movw	r28, r20
  if (dest->max - 1 < len)
    d54a:	fc 01       	movw	r30, r24
    d54c:	82 81       	ldd	r24, Z+2	; 0x02
    d54e:	93 81       	ldd	r25, Z+3	; 0x03
    d550:	9c 01       	movw	r18, r24
    d552:	21 50       	subi	r18, 0x01	; 1
    d554:	31 09       	sbc	r19, r1
    d556:	24 17       	cp	r18, r20
    d558:	35 07       	cpc	r19, r21
    d55a:	08 f4       	brcc	.+2      	; 0xd55e <TMR_stringCopy+0x20>
  {
    len = dest->max - 1;
    d55c:	e9 01       	movw	r28, r18
  }
  if (dest->max > 0)
    d55e:	89 2b       	or	r24, r25
    d560:	59 f0       	breq	.+22     	; 0xd578 <TMR_stringCopy+0x3a>
  {
    memcpy(dest->value, src, len);
    d562:	ae 01       	movw	r20, r28
    d564:	f8 01       	movw	r30, r16
    d566:	80 81       	ld	r24, Z
    d568:	91 81       	ldd	r25, Z+1	; 0x01
    d56a:	98 df       	rcall	.-208    	; 0xd49c <tm_memcpy>
    dest->value[len] = '\0';
    d56c:	f8 01       	movw	r30, r16
    d56e:	80 81       	ld	r24, Z
    d570:	91 81       	ldd	r25, Z+1	; 0x01
    d572:	c8 0f       	add	r28, r24
    d574:	d9 1f       	adc	r29, r25
    d576:	18 82       	st	Y, r1
  }
}
    d578:	df 91       	pop	r29
    d57a:	cf 91       	pop	r28
    d57c:	1f 91       	pop	r17
    d57e:	0f 91       	pop	r16
    d580:	08 95       	ret

0000d582 <validateReadPlan>:
{
  filter->type = TMR_FILTER_TYPE_TAGTYPE_SELECT;
  filter->u.tagtypeSelect.tagType = tagType;

  return TMR_SUCCESS;
}
    d582:	fb 01       	movw	r30, r22
    d584:	80 81       	ld	r24, Z
    d586:	82 30       	cpi	r24, 0x02	; 2
    d588:	51 f5       	brne	.+84     	; 0xd5de <validateReadPlan+0x5c>
    d58a:	10 86       	std	Z+8, r1	; 0x08
    d58c:	11 86       	std	Z+9, r1	; 0x09
    d58e:	12 86       	std	Z+10, r1	; 0x0a
    d590:	13 86       	std	Z+11, r1	; 0x0b
    d592:	20 e0       	ldi	r18, 0x00	; 0
    d594:	30 e0       	ldi	r19, 0x00	; 0
    d596:	1e c0       	rjmp	.+60     	; 0xd5d4 <validateReadPlan+0x52>
    d598:	a6 81       	ldd	r26, Z+6	; 0x06
    d59a:	b7 81       	ldd	r27, Z+7	; 0x07
    d59c:	c9 01       	movw	r24, r18
    d59e:	88 0f       	add	r24, r24
    d5a0:	99 1f       	adc	r25, r25
    d5a2:	a8 0f       	add	r26, r24
    d5a4:	b9 1f       	adc	r27, r25
    d5a6:	0d 90       	ld	r0, X+
    d5a8:	bc 91       	ld	r27, X
    d5aa:	a0 2d       	mov	r26, r0
    d5ac:	11 96       	adiw	r26, 0x01	; 1
    d5ae:	8d 91       	ld	r24, X+
    d5b0:	9d 91       	ld	r25, X+
    d5b2:	0d 90       	ld	r0, X+
    d5b4:	bc 91       	ld	r27, X
    d5b6:	a0 2d       	mov	r26, r0
    d5b8:	40 85       	ldd	r20, Z+8	; 0x08
    d5ba:	51 85       	ldd	r21, Z+9	; 0x09
    d5bc:	62 85       	ldd	r22, Z+10	; 0x0a
    d5be:	73 85       	ldd	r23, Z+11	; 0x0b
    d5c0:	84 0f       	add	r24, r20
    d5c2:	95 1f       	adc	r25, r21
    d5c4:	a6 1f       	adc	r26, r22
    d5c6:	b7 1f       	adc	r27, r23
    d5c8:	80 87       	std	Z+8, r24	; 0x08
    d5ca:	91 87       	std	Z+9, r25	; 0x09
    d5cc:	a2 87       	std	Z+10, r26	; 0x0a
    d5ce:	b3 87       	std	Z+11, r27	; 0x0b
    d5d0:	2f 5f       	subi	r18, 0xFF	; 255
    d5d2:	3f 4f       	sbci	r19, 0xFF	; 255
    d5d4:	84 85       	ldd	r24, Z+12	; 0x0c
    d5d6:	90 e0       	ldi	r25, 0x00	; 0
    d5d8:	28 17       	cp	r18, r24
    d5da:	39 07       	cpc	r19, r25
    d5dc:	ec f2       	brlt	.-70     	; 0xd598 <validateReadPlan+0x16>
    d5de:	60 e0       	ldi	r22, 0x00	; 0
    d5e0:	70 e0       	ldi	r23, 0x00	; 0
    d5e2:	cb 01       	movw	r24, r22
    d5e4:	08 95       	ret

0000d5e6 <versionCompare>:
    d5e6:	fc 01       	movw	r30, r24
    d5e8:	20 81       	ld	r18, Z
    d5ea:	db 01       	movw	r26, r22
    d5ec:	9c 91       	ld	r25, X
    d5ee:	29 17       	cp	r18, r25
    d5f0:	c8 f0       	brcs	.+50     	; 0xd624 <versionCompare+0x3e>
    d5f2:	29 13       	cpse	r18, r25
    d5f4:	19 c0       	rjmp	.+50     	; 0xd628 <versionCompare+0x42>
    d5f6:	91 81       	ldd	r25, Z+1	; 0x01
    d5f8:	11 96       	adiw	r26, 0x01	; 1
    d5fa:	8c 91       	ld	r24, X
    d5fc:	11 97       	sbiw	r26, 0x01	; 1
    d5fe:	98 17       	cp	r25, r24
    d600:	a8 f0       	brcs	.+42     	; 0xd62c <versionCompare+0x46>
    d602:	98 13       	cpse	r25, r24
    d604:	15 c0       	rjmp	.+42     	; 0xd630 <versionCompare+0x4a>
    d606:	92 81       	ldd	r25, Z+2	; 0x02
    d608:	12 96       	adiw	r26, 0x02	; 2
    d60a:	8c 91       	ld	r24, X
    d60c:	12 97       	sbiw	r26, 0x02	; 2
    d60e:	98 17       	cp	r25, r24
    d610:	88 f0       	brcs	.+34     	; 0xd634 <versionCompare+0x4e>
    d612:	98 13       	cpse	r25, r24
    d614:	11 c0       	rjmp	.+34     	; 0xd638 <versionCompare+0x52>
    d616:	93 81       	ldd	r25, Z+3	; 0x03
    d618:	13 96       	adiw	r26, 0x03	; 3
    d61a:	8c 91       	ld	r24, X
    d61c:	98 17       	cp	r25, r24
    d61e:	70 f0       	brcs	.+28     	; 0xd63c <versionCompare+0x56>
    d620:	81 e0       	ldi	r24, 0x01	; 1
    d622:	08 95       	ret
    d624:	80 e0       	ldi	r24, 0x00	; 0
    d626:	08 95       	ret
    d628:	81 e0       	ldi	r24, 0x01	; 1
    d62a:	08 95       	ret
    d62c:	80 e0       	ldi	r24, 0x00	; 0
    d62e:	08 95       	ret
    d630:	81 e0       	ldi	r24, 0x01	; 1
    d632:	08 95       	ret
    d634:	80 e0       	ldi	r24, 0x00	; 0
    d636:	08 95       	ret
    d638:	81 e0       	ldi	r24, 0x01	; 1
    d63a:	08 95       	ret
    d63c:	80 e0       	ldi	r24, 0x00	; 0
    d63e:	08 95       	ret

0000d640 <getAddrByteExtEnabledVersion>:
    d640:	fb 01       	movw	r30, r22
    d642:	8f 58       	subi	r24, 0x8F	; 143
    d644:	9c 4f       	sbci	r25, 0xFC	; 252
    d646:	dc 01       	movw	r26, r24
    d648:	8c 91       	ld	r24, X
    d64a:	80 38       	cpi	r24, 0x80	; 128
    d64c:	41 f4       	brne	.+16     	; 0xd65e <getAddrByteExtEnabledVersion+0x1e>
    d64e:	81 e0       	ldi	r24, 0x01	; 1
    d650:	80 83       	st	Z, r24
    d652:	81 83       	std	Z+1, r24	; 0x01
    d654:	82 e0       	ldi	r24, 0x02	; 2
    d656:	82 83       	std	Z+2, r24	; 0x02
    d658:	86 e1       	ldi	r24, 0x16	; 22
    d65a:	83 83       	std	Z+3, r24	; 0x03
    d65c:	08 95       	ret
    d65e:	8f ef       	ldi	r24, 0xFF	; 255
    d660:	80 83       	st	Z, r24
    d662:	81 83       	std	Z+1, r24	; 0x01
    d664:	82 83       	std	Z+2, r24	; 0x02
    d666:	83 83       	std	Z+3, r24	; 0x03
    d668:	08 95       	ret

0000d66a <checkForAvailableFeatures>:
    d66a:	af 92       	push	r10
    d66c:	bf 92       	push	r11
    d66e:	cf 92       	push	r12
    d670:	df 92       	push	r13
    d672:	ef 92       	push	r14
    d674:	ff 92       	push	r15
    d676:	1f 93       	push	r17
    d678:	cf 93       	push	r28
    d67a:	df 93       	push	r29
    d67c:	00 d0       	rcall	.+0      	; 0xd67e <checkForAvailableFeatures+0x14>
    d67e:	00 d0       	rcall	.+0      	; 0xd680 <checkForAvailableFeatures+0x16>
    d680:	cd b7       	in	r28, 0x3d	; 61
    d682:	de b7       	in	r29, 0x3e	; 62
    d684:	6c 01       	movw	r12, r24
    d686:	19 82       	std	Y+1, r1	; 0x01
    d688:	1a 82       	std	Y+2, r1	; 0x02
    d68a:	1b 82       	std	Y+3, r1	; 0x03
    d68c:	1c 82       	std	Y+4, r1	; 0x04
    d68e:	5c 01       	movw	r10, r24
    d690:	87 e8       	ldi	r24, 0x87	; 135
    d692:	a8 1a       	sub	r10, r24
    d694:	8c ef       	ldi	r24, 0xFC	; 252
    d696:	b8 0a       	sbc	r11, r24
    d698:	10 e0       	ldi	r17, 0x00	; 0
    d69a:	20 c0       	rjmp	.+64     	; 0xd6dc <checkForAvailableFeatures+0x72>
    d69c:	81 e0       	ldi	r24, 0x01	; 1
    d69e:	90 e0       	ldi	r25, 0x00	; 0
    d6a0:	7c 01       	movw	r14, r24
    d6a2:	01 2e       	mov	r0, r17
    d6a4:	02 c0       	rjmp	.+4      	; 0xd6aa <checkForAvailableFeatures+0x40>
    d6a6:	ee 0c       	add	r14, r14
    d6a8:	ff 1c       	adc	r15, r15
    d6aa:	0a 94       	dec	r0
    d6ac:	e2 f7       	brpl	.-8      	; 0xd6a6 <checkForAvailableFeatures+0x3c>
    d6ae:	81 e0       	ldi	r24, 0x01	; 1
    d6b0:	e8 16       	cp	r14, r24
    d6b2:	f1 04       	cpc	r15, r1
    d6b4:	29 f4       	brne	.+10     	; 0xd6c0 <checkForAvailableFeatures+0x56>
    d6b6:	be 01       	movw	r22, r28
    d6b8:	6f 5f       	subi	r22, 0xFF	; 255
    d6ba:	7f 4f       	sbci	r23, 0xFF	; 255
    d6bc:	c6 01       	movw	r24, r12
    d6be:	c0 df       	rcall	.-128    	; 0xd640 <getAddrByteExtEnabledVersion>
    d6c0:	be 01       	movw	r22, r28
    d6c2:	6f 5f       	subi	r22, 0xFF	; 255
    d6c4:	7f 4f       	sbci	r23, 0xFF	; 255
    d6c6:	c5 01       	movw	r24, r10
    d6c8:	8e df       	rcall	.-228    	; 0xd5e6 <versionCompare>
    d6ca:	88 23       	and	r24, r24
    d6cc:	31 f0       	breq	.+12     	; 0xd6da <checkForAvailableFeatures+0x70>
    d6ce:	f6 01       	movw	r30, r12
    d6d0:	e5 5e       	subi	r30, 0xE5	; 229
    d6d2:	f9 4f       	sbci	r31, 0xF9	; 249
    d6d4:	80 81       	ld	r24, Z
    d6d6:	e8 2a       	or	r14, r24
    d6d8:	e0 82       	st	Z, r14
    d6da:	1f 5f       	subi	r17, 0xFF	; 255
    d6dc:	11 23       	and	r17, r17
    d6de:	f1 f2       	breq	.-68     	; 0xd69c <checkForAvailableFeatures+0x32>
    d6e0:	0f 90       	pop	r0
    d6e2:	0f 90       	pop	r0
    d6e4:	0f 90       	pop	r0
    d6e6:	0f 90       	pop	r0
    d6e8:	df 91       	pop	r29
    d6ea:	cf 91       	pop	r28
    d6ec:	1f 91       	pop	r17
    d6ee:	ff 90       	pop	r15
    d6f0:	ef 90       	pop	r14
    d6f2:	df 90       	pop	r13
    d6f4:	cf 90       	pop	r12
    d6f6:	bf 90       	pop	r11
    d6f8:	af 90       	pop	r10
    d6fa:	08 95       	ret

0000d6fc <TMR_paramSet>:
    d6fc:	60 32       	cpi	r22, 0x20	; 32
    d6fe:	19 f0       	breq	.+6      	; 0xd706 <TMR_paramSet+0xa>
    d700:	61 32       	cpi	r22, 0x21	; 33
    d702:	f9 f0       	breq	.+62     	; 0xd742 <TMR_paramSet+0x46>
    d704:	3c c0       	rjmp	.+120    	; 0xd77e <TMR_paramSet+0x82>
    d706:	fc 01       	movw	r30, r24
    d708:	24 81       	ldd	r18, Z+4	; 0x04
    d70a:	23 30       	cpi	r18, 0x03	; 3
    d70c:	d1 f0       	breq	.+52     	; 0xd742 <TMR_paramSet+0x46>
    d70e:	fa 01       	movw	r30, r20
    d710:	40 81       	ld	r20, Z
    d712:	51 81       	ldd	r21, Z+1	; 0x01
    d714:	62 81       	ldd	r22, Z+2	; 0x02
    d716:	73 81       	ldd	r23, Z+3	; 0x03
    d718:	41 15       	cp	r20, r1
    d71a:	51 05       	cpc	r21, r1
    d71c:	f1 e0       	ldi	r31, 0x01	; 1
    d71e:	6f 07       	cpc	r22, r31
    d720:	71 05       	cpc	r23, r1
    d722:	a8 f5       	brcc	.+106    	; 0xd78e <TMR_paramSet+0x92>
    d724:	fc 01       	movw	r30, r24
    d726:	ea 58       	subi	r30, 0x8A	; 138
    d728:	ff 4f       	sbci	r31, 0xFF	; 255
    d72a:	20 81       	ld	r18, Z
    d72c:	21 11       	cpse	r18, r1
    d72e:	34 c0       	rjmp	.+104    	; 0xd798 <TMR_paramSet+0x9c>
    d730:	fc 01       	movw	r30, r24
    d732:	44 87       	std	Z+12, r20	; 0x0c
    d734:	55 87       	std	Z+13, r21	; 0x0d
    d736:	66 87       	std	Z+14, r22	; 0x0e
    d738:	77 87       	std	Z+15, r23	; 0x0f
    d73a:	60 e0       	ldi	r22, 0x00	; 0
    d73c:	70 e0       	ldi	r23, 0x00	; 0
    d73e:	cb 01       	movw	r24, r22
    d740:	08 95       	ret
    d742:	fc 01       	movw	r30, r24
    d744:	24 81       	ldd	r18, Z+4	; 0x04
    d746:	23 30       	cpi	r18, 0x03	; 3
    d748:	d1 f0       	breq	.+52     	; 0xd77e <TMR_paramSet+0x82>
    d74a:	fa 01       	movw	r30, r20
    d74c:	40 81       	ld	r20, Z
    d74e:	51 81       	ldd	r21, Z+1	; 0x01
    d750:	62 81       	ldd	r22, Z+2	; 0x02
    d752:	73 81       	ldd	r23, Z+3	; 0x03
    d754:	41 15       	cp	r20, r1
    d756:	51 05       	cpc	r21, r1
    d758:	f1 e0       	ldi	r31, 0x01	; 1
    d75a:	6f 07       	cpc	r22, r31
    d75c:	71 05       	cpc	r23, r1
    d75e:	08 f5       	brcc	.+66     	; 0xd7a2 <TMR_paramSet+0xa6>
    d760:	fc 01       	movw	r30, r24
    d762:	ea 58       	subi	r30, 0x8A	; 138
    d764:	ff 4f       	sbci	r31, 0xFF	; 255
    d766:	20 81       	ld	r18, Z
    d768:	21 11       	cpse	r18, r1
    d76a:	20 c0       	rjmp	.+64     	; 0xd7ac <TMR_paramSet+0xb0>
    d76c:	fc 01       	movw	r30, r24
    d76e:	40 87       	std	Z+8, r20	; 0x08
    d770:	51 87       	std	Z+9, r21	; 0x09
    d772:	62 87       	std	Z+10, r22	; 0x0a
    d774:	73 87       	std	Z+11, r23	; 0x0b
    d776:	60 e0       	ldi	r22, 0x00	; 0
    d778:	70 e0       	ldi	r23, 0x00	; 0
    d77a:	cb 01       	movw	r24, r22
    d77c:	08 95       	ret
    d77e:	fc 01       	movw	r30, r24
    d780:	e2 5e       	subi	r30, 0xE2	; 226
    d782:	f9 4f       	sbci	r31, 0xF9	; 249
    d784:	01 90       	ld	r0, Z+
    d786:	f0 81       	ld	r31, Z
    d788:	e0 2d       	mov	r30, r0
    d78a:	09 95       	icall
    d78c:	08 95       	ret
    d78e:	67 e1       	ldi	r22, 0x17	; 23
    d790:	70 e0       	ldi	r23, 0x00	; 0
    d792:	80 e0       	ldi	r24, 0x00	; 0
    d794:	93 e0       	ldi	r25, 0x03	; 3
    d796:	08 95       	ret
    d798:	63 e0       	ldi	r22, 0x03	; 3
    d79a:	70 e0       	ldi	r23, 0x00	; 0
    d79c:	80 e0       	ldi	r24, 0x00	; 0
    d79e:	93 e0       	ldi	r25, 0x03	; 3
    d7a0:	08 95       	ret
    d7a2:	67 e1       	ldi	r22, 0x17	; 23
    d7a4:	70 e0       	ldi	r23, 0x00	; 0
    d7a6:	80 e0       	ldi	r24, 0x00	; 0
    d7a8:	93 e0       	ldi	r25, 0x03	; 3
    d7aa:	08 95       	ret
    d7ac:	63 e0       	ldi	r22, 0x03	; 3
    d7ae:	70 e0       	ldi	r23, 0x00	; 0
    d7b0:	80 e0       	ldi	r24, 0x00	; 0
    d7b2:	93 e0       	ldi	r25, 0x03	; 3
    d7b4:	08 95       	ret

0000d7b6 <TMR_paramGet>:
    d7b6:	61 32       	cpi	r22, 0x21	; 33
    d7b8:	29 f1       	breq	.+74     	; 0xd804 <TMR_paramGet+0x4e>
    d7ba:	62 32       	cpi	r22, 0x22	; 34
    d7bc:	19 f0       	breq	.+6      	; 0xd7c4 <TMR_paramGet+0xe>
    d7be:	60 32       	cpi	r22, 0x20	; 32
    d7c0:	b1 f5       	brne	.+108    	; 0xd82e <TMR_paramGet+0x78>
    d7c2:	0f c0       	rjmp	.+30     	; 0xd7e2 <TMR_paramGet+0x2c>
    d7c4:	dc 01       	movw	r26, r24
    d7c6:	d2 96       	adiw	r26, 0x32	; 50
    d7c8:	ed 91       	ld	r30, X+
    d7ca:	fc 91       	ld	r31, X
    d7cc:	d3 97       	sbiw	r26, 0x33	; 51
    d7ce:	8e e1       	ldi	r24, 0x1E	; 30
    d7d0:	da 01       	movw	r26, r20
    d7d2:	01 90       	ld	r0, Z+
    d7d4:	0d 92       	st	X+, r0
    d7d6:	8a 95       	dec	r24
    d7d8:	e1 f7       	brne	.-8      	; 0xd7d2 <TMR_paramGet+0x1c>
    d7da:	60 e0       	ldi	r22, 0x00	; 0
    d7dc:	70 e0       	ldi	r23, 0x00	; 0
    d7de:	cb 01       	movw	r24, r22
    d7e0:	08 95       	ret
    d7e2:	fc 01       	movw	r30, r24
    d7e4:	24 81       	ldd	r18, Z+4	; 0x04
    d7e6:	23 30       	cpi	r18, 0x03	; 3
    d7e8:	69 f0       	breq	.+26     	; 0xd804 <TMR_paramGet+0x4e>
    d7ea:	84 85       	ldd	r24, Z+12	; 0x0c
    d7ec:	95 85       	ldd	r25, Z+13	; 0x0d
    d7ee:	a6 85       	ldd	r26, Z+14	; 0x0e
    d7f0:	b7 85       	ldd	r27, Z+15	; 0x0f
    d7f2:	fa 01       	movw	r30, r20
    d7f4:	80 83       	st	Z, r24
    d7f6:	91 83       	std	Z+1, r25	; 0x01
    d7f8:	a2 83       	std	Z+2, r26	; 0x02
    d7fa:	b3 83       	std	Z+3, r27	; 0x03
    d7fc:	60 e0       	ldi	r22, 0x00	; 0
    d7fe:	70 e0       	ldi	r23, 0x00	; 0
    d800:	cb 01       	movw	r24, r22
    d802:	08 95       	ret
    d804:	dc 01       	movw	r26, r24
    d806:	14 96       	adiw	r26, 0x04	; 4
    d808:	2c 91       	ld	r18, X
    d80a:	14 97       	sbiw	r26, 0x04	; 4
    d80c:	23 30       	cpi	r18, 0x03	; 3
    d80e:	79 f0       	breq	.+30     	; 0xd82e <TMR_paramGet+0x78>
    d810:	18 96       	adiw	r26, 0x08	; 8
    d812:	8d 91       	ld	r24, X+
    d814:	9d 91       	ld	r25, X+
    d816:	0d 90       	ld	r0, X+
    d818:	bc 91       	ld	r27, X
    d81a:	a0 2d       	mov	r26, r0
    d81c:	fa 01       	movw	r30, r20
    d81e:	80 83       	st	Z, r24
    d820:	91 83       	std	Z+1, r25	; 0x01
    d822:	a2 83       	std	Z+2, r26	; 0x02
    d824:	b3 83       	std	Z+3, r27	; 0x03
    d826:	60 e0       	ldi	r22, 0x00	; 0
    d828:	70 e0       	ldi	r23, 0x00	; 0
    d82a:	cb 01       	movw	r24, r22
    d82c:	08 95       	ret
    d82e:	fc 01       	movw	r30, r24
    d830:	e4 5e       	subi	r30, 0xE4	; 228
    d832:	f9 4f       	sbci	r31, 0xF9	; 249
    d834:	01 90       	ld	r0, Z+
    d836:	f0 81       	ld	r31, Z
    d838:	e0 2d       	mov	r30, r0
    d83a:	09 95       	icall
    d83c:	08 95       	ret

0000d83e <TMR__notifyTransportListeners>:
    d83e:	2f 92       	push	r2
    d840:	3f 92       	push	r3
    d842:	4f 92       	push	r4
    d844:	5f 92       	push	r5
    d846:	6f 92       	push	r6
    d848:	7f 92       	push	r7
    d84a:	9f 92       	push	r9
    d84c:	af 92       	push	r10
    d84e:	bf 92       	push	r11
    d850:	cf 92       	push	r12
    d852:	df 92       	push	r13
    d854:	ef 92       	push	r14
    d856:	ff 92       	push	r15
    d858:	0f 93       	push	r16
    d85a:	1f 93       	push	r17
    d85c:	cf 93       	push	r28
    d85e:	df 93       	push	r29
    d860:	96 2e       	mov	r9, r22
    d862:	29 01       	movw	r4, r18
    d864:	3a 01       	movw	r6, r20
    d866:	18 01       	movw	r2, r16
    d868:	57 01       	movw	r10, r14
    d86a:	fc 01       	movw	r30, r24
    d86c:	c6 81       	ldd	r28, Z+6	; 0x06
    d86e:	d7 81       	ldd	r29, Z+7	; 0x07
    d870:	11 c0       	rjmp	.+34     	; 0xd894 <TMR__notifyTransportListeners+0x56>
    d872:	e8 81       	ld	r30, Y
    d874:	f9 81       	ldd	r31, Y+1	; 0x01
    d876:	ca 80       	ldd	r12, Y+2	; 0x02
    d878:	db 80       	ldd	r13, Y+3	; 0x03
    d87a:	75 01       	movw	r14, r10
    d87c:	0b 2c       	mov	r0, r11
    d87e:	00 0c       	add	r0, r0
    d880:	00 0b       	sbc	r16, r16
    d882:	11 0b       	sbc	r17, r17
    d884:	91 01       	movw	r18, r2
    d886:	b3 01       	movw	r22, r6
    d888:	a2 01       	movw	r20, r4
    d88a:	89 2d       	mov	r24, r9
    d88c:	09 95       	icall
    d88e:	0c 80       	ldd	r0, Y+4	; 0x04
    d890:	dd 81       	ldd	r29, Y+5	; 0x05
    d892:	c0 2d       	mov	r28, r0
    d894:	20 97       	sbiw	r28, 0x00	; 0
    d896:	69 f7       	brne	.-38     	; 0xd872 <TMR__notifyTransportListeners+0x34>
    d898:	df 91       	pop	r29
    d89a:	cf 91       	pop	r28
    d89c:	1f 91       	pop	r17
    d89e:	0f 91       	pop	r16
    d8a0:	ff 90       	pop	r15
    d8a2:	ef 90       	pop	r14
    d8a4:	df 90       	pop	r13
    d8a6:	cf 90       	pop	r12
    d8a8:	bf 90       	pop	r11
    d8aa:	af 90       	pop	r10
    d8ac:	9f 90       	pop	r9
    d8ae:	7f 90       	pop	r7
    d8b0:	6f 90       	pop	r6
    d8b2:	5f 90       	pop	r5
    d8b4:	4f 90       	pop	r4
    d8b6:	3f 90       	pop	r3
    d8b8:	2f 90       	pop	r2
    d8ba:	08 95       	ret

0000d8bc <TMR_RP_init_simple>:
    d8bc:	ef 92       	push	r14
    d8be:	ff 92       	push	r15
    d8c0:	0f 93       	push	r16
    d8c2:	1f 93       	push	r17
    d8c4:	fc 01       	movw	r30, r24
    d8c6:	81 e0       	ldi	r24, 0x01	; 1
    d8c8:	80 83       	st	Z, r24
    d8ca:	70 e0       	ldi	r23, 0x00	; 0
    d8cc:	71 87       	std	Z+9, r23	; 0x09
    d8ce:	60 87       	std	Z+8, r22	; 0x08
    d8d0:	73 87       	std	Z+11, r23	; 0x0b
    d8d2:	62 87       	std	Z+10, r22	; 0x0a
    d8d4:	57 83       	std	Z+7, r21	; 0x07
    d8d6:	46 83       	std	Z+6, r20	; 0x06
    d8d8:	24 87       	std	Z+12, r18	; 0x0c
    d8da:	16 86       	std	Z+14, r1	; 0x0e
    d8dc:	15 86       	std	Z+13, r1	; 0x0d
    d8de:	10 8a       	std	Z+16, r1	; 0x10
    d8e0:	17 86       	std	Z+15, r1	; 0x0f
    d8e2:	e1 82       	std	Z+1, r14	; 0x01
    d8e4:	f2 82       	std	Z+2, r15	; 0x02
    d8e6:	03 83       	std	Z+3, r16	; 0x03
    d8e8:	14 83       	std	Z+4, r17	; 0x04
    d8ea:	11 8a       	std	Z+17, r1	; 0x11
    d8ec:	12 8a       	std	Z+18, r1	; 0x12
    d8ee:	13 8a       	std	Z+19, r1	; 0x13
    d8f0:	14 8a       	std	Z+20, r1	; 0x14
    d8f2:	15 8a       	std	Z+21, r1	; 0x15
    d8f4:	16 8a       	std	Z+22, r1	; 0x16
    d8f6:	17 8a       	std	Z+23, r1	; 0x17
    d8f8:	15 8e       	std	Z+29, r1	; 0x1d
    d8fa:	14 8e       	std	Z+28, r1	; 0x1c
    d8fc:	11 8e       	std	Z+25, r1	; 0x19
    d8fe:	10 8e       	std	Z+24, r1	; 0x18
    d900:	13 8e       	std	Z+27, r1	; 0x1b
    d902:	12 8e       	std	Z+26, r1	; 0x1a
    d904:	15 82       	std	Z+5, r1	; 0x05
    d906:	60 e0       	ldi	r22, 0x00	; 0
    d908:	70 e0       	ldi	r23, 0x00	; 0
    d90a:	cb 01       	movw	r24, r22
    d90c:	1f 91       	pop	r17
    d90e:	0f 91       	pop	r16
    d910:	ff 90       	pop	r15
    d912:	ef 90       	pop	r14
    d914:	08 95       	ret

0000d916 <TMR_reader_init_internal>:
    d916:	af 92       	push	r10
    d918:	bf 92       	push	r11
    d91a:	cf 92       	push	r12
    d91c:	df 92       	push	r13
    d91e:	ef 92       	push	r14
    d920:	ff 92       	push	r15
    d922:	0f 93       	push	r16
    d924:	1f 93       	push	r17
    d926:	cf 93       	push	r28
    d928:	df 93       	push	r29
    d92a:	cd b7       	in	r28, 0x3d	; 61
    d92c:	de b7       	in	r29, 0x3e	; 62
    d92e:	da 95       	dec	r29
    d930:	0f b6       	in	r0, 0x3f	; 63
    d932:	f8 94       	cli
    d934:	de bf       	out	0x3e, r29	; 62
    d936:	0f be       	out	0x3f, r0	; 63
    d938:	cd bf       	out	0x3d, r28	; 61
    d93a:	6c 01       	movw	r12, r24
    d93c:	5c 01       	movw	r10, r24
    d93e:	84 e1       	ldi	r24, 0x14	; 20
    d940:	a8 0e       	add	r10, r24
    d942:	b1 1c       	adc	r11, r1
    d944:	e1 2c       	mov	r14, r1
    d946:	f1 2c       	mov	r15, r1
    d948:	87 01       	movw	r16, r14
    d94a:	20 e0       	ldi	r18, 0x00	; 0
    d94c:	40 e0       	ldi	r20, 0x00	; 0
    d94e:	50 e0       	ldi	r21, 0x00	; 0
    d950:	60 e0       	ldi	r22, 0x00	; 0
    d952:	c5 01       	movw	r24, r10
    d954:	b3 df       	rcall	.-154    	; 0xd8bc <TMR_RP_init_simple>
    d956:	f6 01       	movw	r30, r12
    d958:	b3 aa       	std	Z+51, r11	; 0x33
    d95a:	a2 aa       	std	Z+50, r10	; 0x32
    d95c:	15 82       	std	Z+5, r1	; 0x05
    d95e:	17 82       	std	Z+7, r1	; 0x07
    d960:	16 82       	std	Z+6, r1	; 0x06
    d962:	10 8a       	std	Z+16, r1	; 0x10
    d964:	11 8a       	std	Z+17, r1	; 0x11
    d966:	12 8a       	std	Z+18, r1	; 0x12
    d968:	13 8a       	std	Z+19, r1	; 0x13
    d96a:	8a ef       	ldi	r24, 0xFA	; 250
    d96c:	90 e0       	ldi	r25, 0x00	; 0
    d96e:	a0 e0       	ldi	r26, 0x00	; 0
    d970:	b0 e0       	ldi	r27, 0x00	; 0
    d972:	80 87       	std	Z+8, r24	; 0x08
    d974:	91 87       	std	Z+9, r25	; 0x09
    d976:	a2 87       	std	Z+10, r26	; 0x0a
    d978:	b3 87       	std	Z+11, r27	; 0x0b
    d97a:	14 86       	std	Z+12, r1	; 0x0c
    d97c:	15 86       	std	Z+13, r1	; 0x0d
    d97e:	16 86       	std	Z+14, r1	; 0x0e
    d980:	17 86       	std	Z+15, r1	; 0x0f
    d982:	e8 5e       	subi	r30, 0xE8	; 232
    d984:	f9 4f       	sbci	r31, 0xF9	; 249
    d986:	10 82       	st	Z, r1
    d988:	33 97       	sbiw	r30, 0x03	; 3
    d98a:	11 82       	std	Z+1, r1	; 0x01
    d98c:	10 82       	st	Z, r1
    d98e:	e9 59       	subi	r30, 0x99	; 153
    d990:	f4 40       	sbci	r31, 0x04	; 4
    d992:	10 82       	st	Z, r1
    d994:	11 82       	std	Z+1, r1	; 0x01
    d996:	12 82       	std	Z+2, r1	; 0x02
    d998:	13 82       	std	Z+3, r1	; 0x03
    d99a:	e6 50       	subi	r30, 0x06	; 6
    d99c:	f1 40       	sbci	r31, 0x01	; 1
    d99e:	10 82       	st	Z, r1
    d9a0:	e9 57       	subi	r30, 0x79	; 121
    d9a2:	fa 4f       	sbci	r31, 0xFA	; 250
    d9a4:	10 82       	st	Z, r1
    d9a6:	11 82       	std	Z+1, r1	; 0x01
    d9a8:	12 82       	std	Z+2, r1	; 0x02
    d9aa:	13 82       	std	Z+3, r1	; 0x03
    d9ac:	7e 96       	adiw	r30, 0x1e	; 30
    d9ae:	10 82       	st	Z, r1
    d9b0:	e2 5a       	subi	r30, 0xA2	; 162
    d9b2:	f5 40       	sbci	r31, 0x05	; 5
    d9b4:	10 82       	st	Z, r1
    d9b6:	ed 57       	subi	r30, 0x7D	; 125
    d9b8:	fa 4f       	sbci	r31, 0xFA	; 250
    d9ba:	10 82       	st	Z, r1
    d9bc:	35 96       	adiw	r30, 0x05	; 5
    d9be:	10 82       	st	Z, r1
    d9c0:	3b 96       	adiw	r30, 0x0b	; 11
    d9c2:	10 82       	st	Z, r1
    d9c4:	31 96       	adiw	r30, 0x01	; 1
    d9c6:	10 82       	st	Z, r1
    d9c8:	31 96       	adiw	r30, 0x01	; 1
    d9ca:	10 82       	st	Z, r1
    d9cc:	39 96       	adiw	r30, 0x09	; 9
    d9ce:	10 82       	st	Z, r1
    d9d0:	32 96       	adiw	r30, 0x02	; 2
    d9d2:	8f ef       	ldi	r24, 0xFF	; 255
    d9d4:	9f e2       	ldi	r25, 0x2F	; 47
    d9d6:	91 83       	std	Z+1, r25	; 0x01
    d9d8:	80 83       	st	Z, r24
    d9da:	39 96       	adiw	r30, 0x09	; 9
    d9dc:	10 82       	st	Z, r1
    d9de:	8e e0       	ldi	r24, 0x0E	; 14
    d9e0:	e3 e4       	ldi	r30, 0x43	; 67
    d9e2:	f2 e0       	ldi	r31, 0x02	; 2
    d9e4:	de 01       	movw	r26, r28
    d9e6:	11 96       	adiw	r26, 0x01	; 1
    d9e8:	01 90       	ld	r0, Z+
    d9ea:	0d 92       	st	X+, r0
    d9ec:	8a 95       	dec	r24
    d9ee:	e1 f7       	brne	.-8      	; 0xd9e8 <TMR_reader_init_internal+0xd2>
    d9f0:	f6 01       	movw	r30, r12
    d9f2:	84 81       	ldd	r24, Z+4	; 0x04
    d9f4:	82 30       	cpi	r24, 0x02	; 2
    d9f6:	41 f4       	brne	.+16     	; 0xda08 <TMR_reader_init_internal+0xf2>
    d9f8:	be 01       	movw	r22, r28
    d9fa:	6f 5f       	subi	r22, 0xFF	; 255
    d9fc:	7f 4f       	sbci	r23, 0xFF	; 255
    d9fe:	c6 01       	movw	r24, r12
    da00:	8f 53       	subi	r24, 0x3F	; 63
    da02:	9b 4f       	sbci	r25, 0xFB	; 251
    da04:	0e 94 61 75 	call	0xeac2	; 0xeac2 <strcpy>
    da08:	60 e0       	ldi	r22, 0x00	; 0
    da0a:	70 e0       	ldi	r23, 0x00	; 0
    da0c:	cb 01       	movw	r24, r22
    da0e:	d3 95       	inc	r29
    da10:	0f b6       	in	r0, 0x3f	; 63
    da12:	f8 94       	cli
    da14:	de bf       	out	0x3e, r29	; 62
    da16:	0f be       	out	0x3f, r0	; 63
    da18:	cd bf       	out	0x3d, r28	; 61
    da1a:	df 91       	pop	r29
    da1c:	cf 91       	pop	r28
    da1e:	1f 91       	pop	r17
    da20:	0f 91       	pop	r16
    da22:	ff 90       	pop	r15
    da24:	ef 90       	pop	r14
    da26:	df 90       	pop	r13
    da28:	cf 90       	pop	r12
    da2a:	bf 90       	pop	r11
    da2c:	af 90       	pop	r10
    da2e:	08 95       	ret

0000da30 <TMR_paramProbe>:
    da30:	af 92       	push	r10
    da32:	bf 92       	push	r11
    da34:	cf 92       	push	r12
    da36:	df 92       	push	r13
    da38:	ef 92       	push	r14
    da3a:	ff 92       	push	r15
    da3c:	0f 93       	push	r16
    da3e:	1f 93       	push	r17
    da40:	cf 93       	push	r28
    da42:	df 93       	push	r29
    da44:	cd b7       	in	r28, 0x3d	; 61
    da46:	de b7       	in	r29, 0x3e	; 62
    da48:	a0 97       	sbiw	r28, 0x20	; 32
    da4a:	0f b6       	in	r0, 0x3f	; 63
    da4c:	f8 94       	cli
    da4e:	de bf       	out	0x3e, r29	; 62
    da50:	0f be       	out	0x3f, r0	; 63
    da52:	cd bf       	out	0x3d, r28	; 61
    da54:	8c 01       	movw	r16, r24
    da56:	f6 2e       	mov	r15, r22
    da58:	ae 01       	movw	r20, r28
    da5a:	4f 5f       	subi	r20, 0xFF	; 255
    da5c:	5f 4f       	sbci	r21, 0xFF	; 255
    da5e:	80 e2       	ldi	r24, 0x20	; 32
    da60:	fa 01       	movw	r30, r20
    da62:	11 92       	st	Z+, r1
    da64:	8a 95       	dec	r24
    da66:	e9 f7       	brne	.-6      	; 0xda62 <TMR_paramProbe+0x32>
    da68:	c8 01       	movw	r24, r16
    da6a:	a5 de       	rcall	.-694    	; 0xd7b6 <TMR_paramGet>
    da6c:	67 2b       	or	r22, r23
    da6e:	68 2b       	or	r22, r24
    da70:	69 2b       	or	r22, r25
    da72:	09 f0       	breq	.+2      	; 0xda76 <TMR_paramProbe+0x46>
    da74:	47 c0       	rjmp	.+142    	; 0xdb04 <TMR_paramProbe+0xd4>
    da76:	f8 01       	movw	r30, r16
    da78:	84 81       	ldd	r24, Z+4	; 0x04
    da7a:	82 30       	cpi	r24, 0x02	; 2
    da7c:	09 f0       	breq	.+2      	; 0xda80 <TMR_paramProbe+0x50>
    da7e:	42 c0       	rjmp	.+132    	; 0xdb04 <TMR_paramProbe+0xd4>
    da80:	ef 2d       	mov	r30, r15
    da82:	e2 95       	swap	r30
    da84:	e6 95       	lsr	r30
    da86:	e7 70       	andi	r30, 0x07	; 7
    da88:	ae 2e       	mov	r10, r30
    da8a:	b1 2c       	mov	r11, r1
    da8c:	8f 2d       	mov	r24, r15
    da8e:	8f 71       	andi	r24, 0x1F	; 31
    da90:	41 e0       	ldi	r20, 0x01	; 1
    da92:	50 e0       	ldi	r21, 0x00	; 0
    da94:	60 e0       	ldi	r22, 0x00	; 0
    da96:	70 e0       	ldi	r23, 0x00	; 0
    da98:	6a 01       	movw	r12, r20
    da9a:	7b 01       	movw	r14, r22
    da9c:	04 c0       	rjmp	.+8      	; 0xdaa6 <TMR_paramProbe+0x76>
    da9e:	cc 0c       	add	r12, r12
    daa0:	dd 1c       	adc	r13, r13
    daa2:	ee 1c       	adc	r14, r14
    daa4:	ff 1c       	adc	r15, r15
    daa6:	8a 95       	dec	r24
    daa8:	d2 f7       	brpl	.-12     	; 0xda9e <TMR_paramProbe+0x6e>
    daaa:	d7 01       	movw	r26, r14
    daac:	c6 01       	movw	r24, r12
    daae:	95 01       	movw	r18, r10
    dab0:	2b 51       	subi	r18, 0x1B	; 27
    dab2:	3f 4f       	sbci	r19, 0xFF	; 255
    dab4:	22 0f       	add	r18, r18
    dab6:	33 1f       	adc	r19, r19
    dab8:	22 0f       	add	r18, r18
    daba:	33 1f       	adc	r19, r19
    dabc:	20 0f       	add	r18, r16
    dabe:	31 1f       	adc	r19, r17
    dac0:	f9 01       	movw	r30, r18
    dac2:	40 81       	ld	r20, Z
    dac4:	51 81       	ldd	r21, Z+1	; 0x01
    dac6:	62 81       	ldd	r22, Z+2	; 0x02
    dac8:	73 81       	ldd	r23, Z+3	; 0x03
    daca:	4c 29       	or	r20, r12
    dacc:	5d 29       	or	r21, r13
    dace:	6e 29       	or	r22, r14
    dad0:	7f 29       	or	r23, r15
    dad2:	40 83       	st	Z, r20
    dad4:	51 83       	std	Z+1, r21	; 0x01
    dad6:	62 83       	std	Z+2, r22	; 0x02
    dad8:	73 83       	std	Z+3, r23	; 0x03
    dada:	f5 01       	movw	r30, r10
    dadc:	ef 51       	subi	r30, 0x1F	; 31
    dade:	ff 4f       	sbci	r31, 0xFF	; 255
    dae0:	ee 0f       	add	r30, r30
    dae2:	ff 1f       	adc	r31, r31
    dae4:	ee 0f       	add	r30, r30
    dae6:	ff 1f       	adc	r31, r31
    dae8:	e0 0f       	add	r30, r16
    daea:	f1 1f       	adc	r31, r17
    daec:	40 81       	ld	r20, Z
    daee:	51 81       	ldd	r21, Z+1	; 0x01
    daf0:	62 81       	ldd	r22, Z+2	; 0x02
    daf2:	73 81       	ldd	r23, Z+3	; 0x03
    daf4:	84 2b       	or	r24, r20
    daf6:	95 2b       	or	r25, r21
    daf8:	a6 2b       	or	r26, r22
    dafa:	b7 2b       	or	r27, r23
    dafc:	80 83       	st	Z, r24
    dafe:	91 83       	std	Z+1, r25	; 0x01
    db00:	a2 83       	std	Z+2, r26	; 0x02
    db02:	b3 83       	std	Z+3, r27	; 0x03
    db04:	a0 96       	adiw	r28, 0x20	; 32
    db06:	0f b6       	in	r0, 0x3f	; 63
    db08:	f8 94       	cli
    db0a:	de bf       	out	0x3e, r29	; 62
    db0c:	0f be       	out	0x3f, r0	; 63
    db0e:	cd bf       	out	0x3d, r28	; 61
    db10:	df 91       	pop	r29
    db12:	cf 91       	pop	r28
    db14:	1f 91       	pop	r17
    db16:	0f 91       	pop	r16
    db18:	ff 90       	pop	r15
    db1a:	ef 90       	pop	r14
    db1c:	df 90       	pop	r13
    db1e:	cf 90       	pop	r12
    db20:	bf 90       	pop	r11
    db22:	af 90       	pop	r10
    db24:	08 95       	ret

0000db26 <TMR_SR_convertToEBV>:
/** Convert value to Extensible bit vectors(EBV) format 
  * Set value in 1/2/3/4/5 bytes, dynamically based on value 
  */
TMR_Status
TMR_SR_convertToEBV(uint8_t *msg, uint8_t *i, uint64_t value)
{
    db26:	af 92       	push	r10
    db28:	bf 92       	push	r11
    db2a:	cf 92       	push	r12
    db2c:	df 92       	push	r13
    db2e:	ef 92       	push	r14
    db30:	ff 92       	push	r15
    db32:	0f 93       	push	r16
    db34:	1f 93       	push	r17
    db36:	cf 93       	push	r28
    db38:	df 93       	push	r29
    db3a:	ec 01       	movw	r28, r24
    db3c:	fb 01       	movw	r30, r22
    db3e:	b2 2e       	mov	r11, r18
    db40:	c3 2e       	mov	r12, r19
    db42:	d4 2e       	mov	r13, r20
    db44:	b5 2f       	mov	r27, r21
  uint64_t temp = 0;

  /* 1 byte is sufficient */
  if ((0x80) > value)
    db46:	2e 2d       	mov	r18, r14
    db48:	3f 2d       	mov	r19, r15
    db4a:	40 2f       	mov	r20, r16
    db4c:	51 2f       	mov	r21, r17
    db4e:	6b 2d       	mov	r22, r11
    db50:	7c 2d       	mov	r23, r12
    db52:	8d 2d       	mov	r24, r13
    db54:	9b 2f       	mov	r25, r27
    db56:	af e7       	ldi	r26, 0x7F	; 127
    db58:	7f d7       	rcall	.+3838   	; 0xea58 <__cmpdi2_s8>
    db5a:	09 f0       	breq	.+2      	; 0xdb5e <TMR_SR_convertToEBV+0x38>
    db5c:	a0 f4       	brcc	.+40     	; 0xdb86 <TMR_SR_convertToEBV+0x60>
  {
    SETU8(msg, *i, (uint8_t)value);
    db5e:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    db62:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    db66:	01 96       	adiw	r24, 0x01	; 1
    db68:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    db6c:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    db70:	80 81       	ld	r24, Z
    db72:	91 e0       	ldi	r25, 0x01	; 1
    db74:	98 0f       	add	r25, r24
    db76:	90 83       	st	Z, r25
    db78:	c8 0f       	add	r28, r24
    db7a:	d1 1d       	adc	r29, r1
    db7c:	e8 82       	st	Y, r14
  }
  else
  {
    return TMR_ERROR_INVALID;
  }
  return TMR_SUCCESS;
    db7e:	60 e0       	ldi	r22, 0x00	; 0
    db80:	70 e0       	ldi	r23, 0x00	; 0
    db82:	cb 01       	movw	r24, r22
    db84:	6c c1       	rjmp	.+728    	; 0xde5e <TMR_SR_convertToEBV+0x338>
  if ((0x80) > value)
  {
    SETU8(msg, *i, (uint8_t)value);
  }
  /* 2 bytes are sufficient */
  else if((0x4000) > value)
    db86:	2e 2d       	mov	r18, r14
    db88:	3f 2d       	mov	r19, r15
    db8a:	40 2f       	mov	r20, r16
    db8c:	51 2f       	mov	r21, r17
    db8e:	6b 2d       	mov	r22, r11
    db90:	7c 2d       	mov	r23, r12
    db92:	8d 2d       	mov	r24, r13
    db94:	9b 2f       	mov	r25, r27
    db96:	2f 3f       	cpi	r18, 0xFF	; 255
    db98:	af e3       	ldi	r26, 0x3F	; 63
    db9a:	3a 07       	cpc	r19, r26
    db9c:	41 05       	cpc	r20, r1
    db9e:	51 05       	cpc	r21, r1
    dba0:	61 05       	cpc	r22, r1
    dba2:	71 05       	cpc	r23, r1
    dba4:	81 05       	cpc	r24, r1
    dba6:	91 05       	cpc	r25, r1
    dba8:	09 f0       	breq	.+2      	; 0xdbac <TMR_SR_convertToEBV+0x86>
    dbaa:	60 f5       	brcc	.+88     	; 0xdc04 <TMR_SR_convertToEBV+0xde>
  {
    temp = (value & 0x7F);
    dbac:	ae 2d       	mov	r26, r14
    dbae:	af 77       	andi	r26, 0x7F	; 127
    value &= 0xFF80;
    dbb0:	20 78       	andi	r18, 0x80	; 128
    value = ((value << 1) | temp);
    dbb2:	40 e0       	ldi	r20, 0x00	; 0
    dbb4:	50 e0       	ldi	r21, 0x00	; 0
    dbb6:	60 e0       	ldi	r22, 0x00	; 0
    dbb8:	70 e0       	ldi	r23, 0x00	; 0
    dbba:	80 e0       	ldi	r24, 0x00	; 0
    dbbc:	90 e0       	ldi	r25, 0x00	; 0
    dbbe:	01 e0       	ldi	r16, 0x01	; 1
    dbc0:	02 d7       	rcall	.+3588   	; 0xe9c6 <__ashldi3>

    SETU16(msg, *i, (uint16_t)(0x8000 | value));
    dbc2:	8a 2f       	mov	r24, r26
    dbc4:	82 2b       	or	r24, r18
    dbc6:	93 2f       	mov	r25, r19
    dbc8:	90 68       	ori	r25, 0x80	; 128
    dbca:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    dbce:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    dbd2:	2e 5f       	subi	r18, 0xFE	; 254
    dbd4:	3f 4f       	sbci	r19, 0xFF	; 255
    dbd6:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    dbda:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    dbde:	20 81       	ld	r18, Z
    dbe0:	31 e0       	ldi	r19, 0x01	; 1
    dbe2:	32 0f       	add	r19, r18
    dbe4:	30 83       	st	Z, r19
    dbe6:	de 01       	movw	r26, r28
    dbe8:	a2 0f       	add	r26, r18
    dbea:	b1 1d       	adc	r27, r1
    dbec:	9c 93       	st	X, r25
    dbee:	90 81       	ld	r25, Z
    dbf0:	21 e0       	ldi	r18, 0x01	; 1
    dbf2:	29 0f       	add	r18, r25
    dbf4:	20 83       	st	Z, r18
    dbf6:	c9 0f       	add	r28, r25
    dbf8:	d1 1d       	adc	r29, r1
    dbfa:	88 83       	st	Y, r24
  }
  else
  {
    return TMR_ERROR_INVALID;
  }
  return TMR_SUCCESS;
    dbfc:	60 e0       	ldi	r22, 0x00	; 0
    dbfe:	70 e0       	ldi	r23, 0x00	; 0
    dc00:	cb 01       	movw	r24, r22
    dc02:	2d c1       	rjmp	.+602    	; 0xde5e <TMR_SR_convertToEBV+0x338>
    value = ((value << 1) | temp);

    SETU16(msg, *i, (uint16_t)(0x8000 | value));
  }
  /* 3 bytes are sufficient */
  else if((0x200000) > value)
    dc04:	2e 2d       	mov	r18, r14
    dc06:	3f 2d       	mov	r19, r15
    dc08:	40 2f       	mov	r20, r16
    dc0a:	51 2f       	mov	r21, r17
    dc0c:	6b 2d       	mov	r22, r11
    dc0e:	7c 2d       	mov	r23, r12
    dc10:	8d 2d       	mov	r24, r13
    dc12:	9b 2f       	mov	r25, r27
    dc14:	2f 3f       	cpi	r18, 0xFF	; 255
    dc16:	af ef       	ldi	r26, 0xFF	; 255
    dc18:	3a 07       	cpc	r19, r26
    dc1a:	af e1       	ldi	r26, 0x1F	; 31
    dc1c:	4a 07       	cpc	r20, r26
    dc1e:	51 05       	cpc	r21, r1
    dc20:	61 05       	cpc	r22, r1
    dc22:	71 05       	cpc	r23, r1
    dc24:	81 05       	cpc	r24, r1
    dc26:	91 05       	cpc	r25, r1
    dc28:	09 f0       	breq	.+2      	; 0xdc2c <TMR_SR_convertToEBV+0x106>
  {
    temp = (value & 0x7F);
    value = (value << 1);
    dc2a:	b0 f5       	brcc	.+108    	; 0xdc98 <TMR_SR_convertToEBV+0x172>
    dc2c:	01 e0       	ldi	r16, 0x01	; 1
    dc2e:	cb d6       	rcall	.+3478   	; 0xe9c6 <__ashldi3>
    temp |= (value & 0x7f00);
    value = (((value << 1) & 0xff0000) | temp);
    dc30:	13 2f       	mov	r17, r19
    dc32:	c9 d6       	rcall	.+3474   	; 0xe9c6 <__ashldi3>

    SETU24(msg, *i, (uint32_t)(0x808000 | value));
    dc34:	8e 2d       	mov	r24, r14
    dc36:	8f 77       	andi	r24, 0x7F	; 127
    dc38:	91 2f       	mov	r25, r17
    dc3a:	9f 77       	andi	r25, 0x7F	; 127
    dc3c:	a4 2f       	mov	r26, r20
    dc3e:	b0 e0       	ldi	r27, 0x00	; 0
    dc40:	6c 01       	movw	r12, r24
    dc42:	7d 01       	movw	r14, r26
    dc44:	68 94       	set
    dc46:	d7 f8       	bld	r13, 7
    dc48:	e7 f8       	bld	r14, 7
    dc4a:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    dc4e:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    dc52:	2d 5f       	subi	r18, 0xFD	; 253
    dc54:	3f 4f       	sbci	r19, 0xFF	; 255
    dc56:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    dc5a:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    dc5e:	20 81       	ld	r18, Z
    dc60:	31 e0       	ldi	r19, 0x01	; 1
    dc62:	32 0f       	add	r19, r18
    dc64:	30 83       	st	Z, r19
    dc66:	ae 01       	movw	r20, r28
    dc68:	42 0f       	add	r20, r18
    dc6a:	51 1d       	adc	r21, r1
    dc6c:	da 01       	movw	r26, r20
    dc6e:	ec 92       	st	X, r14
    dc70:	20 81       	ld	r18, Z
    dc72:	31 e0       	ldi	r19, 0x01	; 1
    dc74:	32 0f       	add	r19, r18
    dc76:	30 83       	st	Z, r19
    dc78:	ae 01       	movw	r20, r28
    dc7a:	42 0f       	add	r20, r18
    dc7c:	51 1d       	adc	r21, r1
    dc7e:	da 01       	movw	r26, r20
    dc80:	dc 92       	st	X, r13
    dc82:	20 81       	ld	r18, Z
    dc84:	31 e0       	ldi	r19, 0x01	; 1
    dc86:	32 0f       	add	r19, r18
    dc88:	30 83       	st	Z, r19
    dc8a:	c2 0f       	add	r28, r18
    dc8c:	d1 1d       	adc	r29, r1
    dc8e:	c8 82       	st	Y, r12
  }
  else
  {
    return TMR_ERROR_INVALID;
  }
  return TMR_SUCCESS;
    dc90:	60 e0       	ldi	r22, 0x00	; 0
    dc92:	70 e0       	ldi	r23, 0x00	; 0
    dc94:	cb 01       	movw	r24, r22
    dc96:	e3 c0       	rjmp	.+454    	; 0xde5e <TMR_SR_convertToEBV+0x338>
    value = (((value << 1) & 0xff0000) | temp);

    SETU24(msg, *i, (uint32_t)(0x808000 | value));
  }
  /* 4 bytes are sufficient */
  else if((0x10000000) > value)
    dc98:	2e 2d       	mov	r18, r14
    dc9a:	3f 2d       	mov	r19, r15
    dc9c:	40 2f       	mov	r20, r16
    dc9e:	51 2f       	mov	r21, r17
    dca0:	6b 2d       	mov	r22, r11
    dca2:	7c 2d       	mov	r23, r12
    dca4:	8d 2d       	mov	r24, r13
    dca6:	9b 2f       	mov	r25, r27
    dca8:	2f 3f       	cpi	r18, 0xFF	; 255
    dcaa:	af ef       	ldi	r26, 0xFF	; 255
    dcac:	3a 07       	cpc	r19, r26
    dcae:	4a 07       	cpc	r20, r26
    dcb0:	af e0       	ldi	r26, 0x0F	; 15
    dcb2:	5a 07       	cpc	r21, r26
    dcb4:	61 05       	cpc	r22, r1
    dcb6:	71 05       	cpc	r23, r1
    dcb8:	81 05       	cpc	r24, r1
    dcba:	91 05       	cpc	r25, r1
    dcbc:	11 f0       	breq	.+4      	; 0xdcc2 <TMR_SR_convertToEBV+0x19c>
    dcbe:	08 f0       	brcs	.+2      	; 0xdcc2 <TMR_SR_convertToEBV+0x19c>
  {
    temp = (value & 0x7f);
    value = (value << 1);
    dcc0:	43 c0       	rjmp	.+134    	; 0xdd48 <TMR_SR_convertToEBV+0x222>
    dcc2:	01 e0       	ldi	r16, 0x01	; 1
    dcc4:	80 d6       	rcall	.+3328   	; 0xe9c6 <__ashldi3>
    temp |= (value & 0x7f00);
    value = (value << 1);
    dcc6:	f3 2e       	mov	r15, r19
    dcc8:	7e d6       	rcall	.+3324   	; 0xe9c6 <__ashldi3>
    dcca:	14 2f       	mov	r17, r20
    temp |= (value & 0x7f0000);
    value = (((value << 1) & 0xff000000) | temp);
    dccc:	7c d6       	rcall	.+3320   	; 0xe9c6 <__ashldi3>
    dcce:	8e 2d       	mov	r24, r14
    
    SETU32(msg, *i, (uint32_t)(0x80808000 | value));
    dcd0:	8f 77       	andi	r24, 0x7F	; 127
    dcd2:	9f 2d       	mov	r25, r15
    dcd4:	9f 77       	andi	r25, 0x7F	; 127
    dcd6:	a1 2f       	mov	r26, r17
    dcd8:	af 77       	andi	r26, 0x7F	; 127
    dcda:	b5 2f       	mov	r27, r21
    dcdc:	6c 01       	movw	r12, r24
    dcde:	7d 01       	movw	r14, r26
    dce0:	68 94       	set
    dce2:	d7 f8       	bld	r13, 7
    dce4:	e7 f8       	bld	r14, 7
    dce6:	f7 f8       	bld	r15, 7
    dce8:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    dcec:	30 91 d7 0b 	lds	r19, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    dcf0:	2c 5f       	subi	r18, 0xFC	; 252
    dcf2:	3f 4f       	sbci	r19, 0xFF	; 255
    dcf4:	30 93 d7 0b 	sts	0x0BD7, r19	; 0x800bd7 <totalMsgIdx+0x1>
    dcf8:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <totalMsgIdx>
    dcfc:	20 81       	ld	r18, Z
    dcfe:	31 e0       	ldi	r19, 0x01	; 1
    dd00:	32 0f       	add	r19, r18
    dd02:	30 83       	st	Z, r19
    dd04:	ae 01       	movw	r20, r28
    dd06:	42 0f       	add	r20, r18
    dd08:	51 1d       	adc	r21, r1
    dd0a:	da 01       	movw	r26, r20
    dd0c:	fc 92       	st	X, r15
    dd0e:	20 81       	ld	r18, Z
    dd10:	31 e0       	ldi	r19, 0x01	; 1
    dd12:	32 0f       	add	r19, r18
    dd14:	30 83       	st	Z, r19
    dd16:	ae 01       	movw	r20, r28
    dd18:	42 0f       	add	r20, r18
    dd1a:	51 1d       	adc	r21, r1
    dd1c:	da 01       	movw	r26, r20
    dd1e:	ec 92       	st	X, r14
    dd20:	20 81       	ld	r18, Z
    dd22:	31 e0       	ldi	r19, 0x01	; 1
    dd24:	32 0f       	add	r19, r18
    dd26:	30 83       	st	Z, r19
    dd28:	ae 01       	movw	r20, r28
    dd2a:	42 0f       	add	r20, r18
    dd2c:	51 1d       	adc	r21, r1
    dd2e:	da 01       	movw	r26, r20
    dd30:	dc 92       	st	X, r13
    dd32:	20 81       	ld	r18, Z
    dd34:	31 e0       	ldi	r19, 0x01	; 1
    dd36:	32 0f       	add	r19, r18
    dd38:	30 83       	st	Z, r19
    dd3a:	c2 0f       	add	r28, r18
    dd3c:	d1 1d       	adc	r29, r1
    dd3e:	c8 82       	st	Y, r12
    dd40:	60 e0       	ldi	r22, 0x00	; 0
  }
  else
  {
    return TMR_ERROR_INVALID;
  }
  return TMR_SUCCESS;
    dd42:	70 e0       	ldi	r23, 0x00	; 0
    dd44:	cb 01       	movw	r24, r22
    dd46:	8b c0       	rjmp	.+278    	; 0xde5e <TMR_SR_convertToEBV+0x338>
    dd48:	2e 2d       	mov	r18, r14
    value = (((value << 1) & 0xff000000) | temp);
    
    SETU32(msg, *i, (uint32_t)(0x80808000 | value));
  }
  /* 5 bytes are sufficient */
  else if((0x800000000ULL) > value)
    dd4a:	3f 2d       	mov	r19, r15
    dd4c:	40 2f       	mov	r20, r16
    dd4e:	51 2f       	mov	r21, r17
    dd50:	6b 2d       	mov	r22, r11
    dd52:	7c 2d       	mov	r23, r12
    dd54:	8d 2d       	mov	r24, r13
    dd56:	9b 2f       	mov	r25, r27
    dd58:	2f 3f       	cpi	r18, 0xFF	; 255
    dd5a:	af ef       	ldi	r26, 0xFF	; 255
    dd5c:	3a 07       	cpc	r19, r26
    dd5e:	4a 07       	cpc	r20, r26
    dd60:	5a 07       	cpc	r21, r26
    dd62:	a7 e0       	ldi	r26, 0x07	; 7
    dd64:	6a 07       	cpc	r22, r26
    dd66:	71 05       	cpc	r23, r1
    dd68:	81 05       	cpc	r24, r1
    dd6a:	91 05       	cpc	r25, r1
    dd6c:	11 f0       	breq	.+4      	; 0xdd72 <TMR_SR_convertToEBV+0x24c>
    dd6e:	08 f0       	brcs	.+2      	; 0xdd72 <TMR_SR_convertToEBV+0x24c>
    dd70:	72 c0       	rjmp	.+228    	; 0xde56 <TMR_SR_convertToEBV+0x330>
  {
    temp = (value & 0x7f);
    dd72:	4e 2d       	mov	r20, r14
    dd74:	4f 77       	andi	r20, 0x7F	; 127
    value = (value << 1);
    dd76:	a4 2e       	mov	r10, r20
    dd78:	40 2f       	mov	r20, r16
    dd7a:	01 e0       	ldi	r16, 0x01	; 1
    dd7c:	24 d6       	rcall	.+3144   	; 0xe9c6 <__ashldi3>
    temp |= (value & 0x7f00);
    value = (value << 1);
    dd7e:	b3 2f       	mov	r27, r19
    dd80:	22 d6       	rcall	.+3140   	; 0xe9c6 <__ashldi3>
    dd82:	14 2f       	mov	r17, r20
    temp |= (value & 0x7f0000);
    value = (value << 1);
    dd84:	20 d6       	rcall	.+3136   	; 0xe9c6 <__ashldi3>
    dd86:	a5 2f       	mov	r26, r21
    dd88:	1e d6       	rcall	.+3132   	; 0xe9c6 <__ashldi3>
    temp |= (value & 0x7f000000);
    value = (((value << 1) & 0xff00000000ULL) | temp);
    dd8a:	b0 68       	ori	r27, 0x80	; 128
    dd8c:	fb 2e       	mov	r15, r27
    
    SETU40(msg, *i, (uint64_t)(0x8080808000ULL | value));
    dd8e:	10 68       	ori	r17, 0x80	; 128
    dd90:	a0 68       	ori	r26, 0x80	; 128
    dd92:	ea 2e       	mov	r14, r26
    dd94:	60 68       	ori	r22, 0x80	; 128
    dd96:	b6 2e       	mov	r11, r22
    dd98:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <totalMsgIdx>
    dd9c:	90 91 d7 0b 	lds	r25, 0x0BD7	; 0x800bd7 <totalMsgIdx+0x1>
    dda0:	05 96       	adiw	r24, 0x05	; 5
    dda2:	90 93 d7 0b 	sts	0x0BD7, r25	; 0x800bd7 <totalMsgIdx+0x1>
    dda6:	80 93 d6 0b 	sts	0x0BD6, r24	; 0x800bd6 <totalMsgIdx>
    ddaa:	80 81       	ld	r24, Z
    ddac:	91 e0       	ldi	r25, 0x01	; 1
    ddae:	98 0f       	add	r25, r24
    ddb0:	90 83       	st	Z, r25
    ddb2:	6e 01       	movw	r12, r28
    ddb4:	c8 0e       	add	r12, r24
    ddb6:	d1 1c       	adc	r13, r1
    ddb8:	2a 2d       	mov	r18, r10
    ddba:	3b 2f       	mov	r19, r27
    ddbc:	41 2f       	mov	r20, r17
    ddbe:	5a 2f       	mov	r21, r26
    ddc0:	70 e0       	ldi	r23, 0x00	; 0
    ddc2:	80 e0       	ldi	r24, 0x00	; 0
    ddc4:	90 e0       	ldi	r25, 0x00	; 0
    ddc6:	00 e2       	ldi	r16, 0x20	; 32
    ddc8:	19 d6       	rcall	.+3122   	; 0xe9fc <__lshrdi3>
    ddca:	d6 01       	movw	r26, r12
    ddcc:	2c 93       	st	X, r18
    ddce:	80 81       	ld	r24, Z
    ddd0:	91 e0       	ldi	r25, 0x01	; 1
    ddd2:	98 0f       	add	r25, r24
    ddd4:	90 83       	st	Z, r25
    ddd6:	6e 01       	movw	r12, r28
    ddd8:	c8 0e       	add	r12, r24
    ddda:	d1 1c       	adc	r13, r1
    dddc:	2a 2d       	mov	r18, r10
    ddde:	3f 2d       	mov	r19, r15
    dde0:	41 2f       	mov	r20, r17
    dde2:	5e 2d       	mov	r21, r14
    dde4:	6b 2d       	mov	r22, r11
    dde6:	70 e0       	ldi	r23, 0x00	; 0
    dde8:	80 e0       	ldi	r24, 0x00	; 0
    ddea:	90 e0       	ldi	r25, 0x00	; 0
    ddec:	08 e1       	ldi	r16, 0x18	; 24
    ddee:	06 d6       	rcall	.+3084   	; 0xe9fc <__lshrdi3>
    ddf0:	d6 01       	movw	r26, r12
    ddf2:	2c 93       	st	X, r18
    ddf4:	80 81       	ld	r24, Z
    ddf6:	91 e0       	ldi	r25, 0x01	; 1
    ddf8:	98 0f       	add	r25, r24
    ddfa:	90 83       	st	Z, r25
    ddfc:	6e 01       	movw	r12, r28
    ddfe:	c8 0e       	add	r12, r24
    de00:	d1 1c       	adc	r13, r1
    de02:	2a 2d       	mov	r18, r10
    de04:	3f 2d       	mov	r19, r15
    de06:	41 2f       	mov	r20, r17
    de08:	5e 2d       	mov	r21, r14
    de0a:	6b 2d       	mov	r22, r11
    de0c:	70 e0       	ldi	r23, 0x00	; 0
    de0e:	80 e0       	ldi	r24, 0x00	; 0
    de10:	90 e0       	ldi	r25, 0x00	; 0
    de12:	00 e1       	ldi	r16, 0x10	; 16
    de14:	f3 d5       	rcall	.+3046   	; 0xe9fc <__lshrdi3>
    de16:	d6 01       	movw	r26, r12
    de18:	2c 93       	st	X, r18
    de1a:	80 81       	ld	r24, Z
    de1c:	91 e0       	ldi	r25, 0x01	; 1
    de1e:	98 0f       	add	r25, r24
    de20:	90 83       	st	Z, r25
    de22:	6e 01       	movw	r12, r28
    de24:	c8 0e       	add	r12, r24
    de26:	d1 1c       	adc	r13, r1
    de28:	2a 2d       	mov	r18, r10
    de2a:	3f 2d       	mov	r19, r15
    de2c:	41 2f       	mov	r20, r17
    de2e:	5e 2d       	mov	r21, r14
    de30:	6b 2d       	mov	r22, r11
    de32:	70 e0       	ldi	r23, 0x00	; 0
    de34:	80 e0       	ldi	r24, 0x00	; 0
    de36:	90 e0       	ldi	r25, 0x00	; 0
    de38:	08 e0       	ldi	r16, 0x08	; 8
    de3a:	e0 d5       	rcall	.+3008   	; 0xe9fc <__lshrdi3>
    de3c:	d6 01       	movw	r26, r12
    de3e:	2c 93       	st	X, r18
    de40:	80 81       	ld	r24, Z
    de42:	91 e0       	ldi	r25, 0x01	; 1
    de44:	98 0f       	add	r25, r24
    de46:	90 83       	st	Z, r25
    de48:	c8 0f       	add	r28, r24
    de4a:	d1 1d       	adc	r29, r1
    de4c:	a8 82       	st	Y, r10
    de4e:	60 e0       	ldi	r22, 0x00	; 0
    de50:	70 e0       	ldi	r23, 0x00	; 0
  }
  else
  {
    return TMR_ERROR_INVALID;
  }
  return TMR_SUCCESS;
    de52:	cb 01       	movw	r24, r22
    de54:	04 c0       	rjmp	.+8      	; 0xde5e <TMR_SR_convertToEBV+0x338>
    de56:	61 e0       	ldi	r22, 0x01	; 1
    de58:	70 e0       	ldi	r23, 0x00	; 0
    
    SETU40(msg, *i, (uint64_t)(0x8080808000ULL | value));
  }
  else
  {
    return TMR_ERROR_INVALID;
    de5a:	80 e0       	ldi	r24, 0x00	; 0
    de5c:	93 e0       	ldi	r25, 0x03	; 3
    de5e:	df 91       	pop	r29
    de60:	cf 91       	pop	r28
  }
  return TMR_SUCCESS;
}
    de62:	1f 91       	pop	r17
    de64:	0f 91       	pop	r16
    de66:	ff 90       	pop	r15
    de68:	ef 90       	pop	r14
    de6a:	df 90       	pop	r13
    de6c:	cf 90       	pop	r12
    de6e:	bf 90       	pop	r11
    de70:	af 90       	pop	r10
    de72:	08 95       	ret

0000de74 <TMR_SR_convertFromEBV>:
    de74:	6f 92       	push	r6
    de76:	7f 92       	push	r7

/** Convert from 1/2/3/4/5 bytes of EBV formated value */
uint64_t
TMR_SR_convertFromEBV(uint8_t *msg, uint8_t length)
{
    de78:	8f 92       	push	r8
    de7a:	9f 92       	push	r9
    de7c:	af 92       	push	r10
    de7e:	bf 92       	push	r11
    de80:	cf 92       	push	r12
    de82:	df 92       	push	r13
    de84:	ef 92       	push	r14
    de86:	ff 92       	push	r15
    de88:	0f 93       	push	r16
    de8a:	1f 93       	push	r17
    de8c:	cf 93       	push	r28
    de8e:	df 93       	push	r29
    de90:	cd b7       	in	r28, 0x3d	; 61
    de92:	de b7       	in	r29, 0x3e	; 62
    de94:	60 97       	sbiw	r28, 0x10	; 16
    de96:	0f b6       	in	r0, 0x3f	; 63
    de98:	f8 94       	cli
    de9a:	de bf       	out	0x3e, r29	; 62
    de9c:	0f be       	out	0x3f, r0	; 63
    de9e:	cd bf       	out	0x3d, r28	; 61
    dea0:	3c 01       	movw	r6, r24
    dea2:	a6 2f       	mov	r26, r22
  uint64_t value = 0, temp = 0;

  switch (length)
    dea4:	63 30       	cpi	r22, 0x03	; 3
    dea6:	e9 f1       	breq	.+122    	; 0xdf22 <TMR_SR_convertFromEBV+0xae>
    dea8:	28 f4       	brcc	.+10     	; 0xdeb4 <TMR_SR_convertFromEBV+0x40>
    deaa:	61 30       	cpi	r22, 0x01	; 1
    deac:	61 f0       	breq	.+24     	; 0xdec6 <TMR_SR_convertFromEBV+0x52>
    deae:	62 30       	cpi	r22, 0x02	; 2
    deb0:	99 f0       	breq	.+38     	; 0xded8 <TMR_SR_convertFromEBV+0x64>
    deb2:	9a c1       	rjmp	.+820    	; 0xe1e8 <TMR_SR_convertFromEBV+0x374>
    deb4:	65 30       	cpi	r22, 0x05	; 5
    deb6:	09 f4       	brne	.+2      	; 0xdeba <TMR_SR_convertFromEBV+0x46>
    deb8:	ec c0       	rjmp	.+472    	; 0xe092 <TMR_SR_convertFromEBV+0x21e>
    deba:	08 f4       	brcc	.+2      	; 0xdebe <TMR_SR_convertFromEBV+0x4a>
    debc:	7f c0       	rjmp	.+254    	; 0xdfbc <TMR_SR_convertFromEBV+0x148>
    debe:	68 30       	cpi	r22, 0x08	; 8
    dec0:	09 f4       	brne	.+2      	; 0xdec4 <TMR_SR_convertFromEBV+0x50>
    dec2:	87 c1       	rjmp	.+782    	; 0xe1d2 <TMR_SR_convertFromEBV+0x35e>
    dec4:	91 c1       	rjmp	.+802    	; 0xe1e8 <TMR_SR_convertFromEBV+0x374>
  {
    case 0x01:
    {
      value = msg[0];
    dec6:	fc 01       	movw	r30, r24
    dec8:	80 80       	ld	r8, Z
    deca:	91 2c       	mov	r9, r1
    decc:	a1 2c       	mov	r10, r1
    dece:	b1 2c       	mov	r11, r1
    ded0:	c1 2c       	mov	r12, r1
    ded2:	d1 2c       	mov	r13, r1
    ded4:	76 01       	movw	r14, r12
      break;
    ded6:	90 c1       	rjmp	.+800    	; 0xe1f8 <TMR_SR_convertFromEBV+0x384>
    }
    case 0x02:
    {
      value = GETU16AT(msg, 0);
    ded8:	fc 01       	movw	r30, r24
    deda:	80 81       	ld	r24, Z
    dedc:	90 e0       	ldi	r25, 0x00	; 0
    dede:	98 2f       	mov	r25, r24
    dee0:	88 27       	eor	r24, r24
    dee2:	21 81       	ldd	r18, Z+1	; 0x01
    dee4:	82 2b       	or	r24, r18

      temp = (value & 0x7f);
    dee6:	9c 01       	movw	r18, r24
    dee8:	2f 77       	andi	r18, 0x7F	; 127
    deea:	33 27       	eor	r19, r19
    deec:	59 01       	movw	r10, r18
    deee:	29 83       	std	Y+1, r18	; 0x01
    def0:	ba 82       	std	Y+2, r11	; 0x02
      value &= 0x7fff;
    def2:	9f 77       	andi	r25, 0x7F	; 127
    def4:	6c 01       	movw	r12, r24
      value = (((value >> 1) & 0xff80) | temp);
    def6:	28 2f       	mov	r18, r24
    def8:	3d 2d       	mov	r19, r13
    defa:	40 e0       	ldi	r20, 0x00	; 0
    defc:	50 e0       	ldi	r21, 0x00	; 0
    defe:	60 e0       	ldi	r22, 0x00	; 0
    df00:	70 e0       	ldi	r23, 0x00	; 0
    df02:	80 e0       	ldi	r24, 0x00	; 0
    df04:	90 e0       	ldi	r25, 0x00	; 0
    df06:	01 e0       	ldi	r16, 0x01	; 1
    df08:	79 d5       	rcall	.+2802   	; 0xe9fc <__lshrdi3>
    df0a:	20 78       	andi	r18, 0x80	; 128
    df0c:	a1 2c       	mov	r10, r1
    df0e:	b1 2c       	mov	r11, r1
    df10:	c1 2c       	mov	r12, r1
    df12:	d1 2c       	mov	r13, r1
    df14:	e1 2c       	mov	r14, r1
    df16:	f1 2c       	mov	r15, r1
    df18:	89 80       	ldd	r8, Y+1	; 0x01
    df1a:	82 2a       	or	r8, r18
    df1c:	9a 80       	ldd	r9, Y+2	; 0x02
    df1e:	93 2a       	or	r9, r19
      break;
    df20:	6b c1       	rjmp	.+726    	; 0xe1f8 <TMR_SR_convertFromEBV+0x384>
    }
    case 0x03:
    {
      value = GETU24AT(msg, 0);
    df22:	fc 01       	movw	r30, r24
    df24:	80 81       	ld	r24, Z
    df26:	90 e0       	ldi	r25, 0x00	; 0
    df28:	a0 e0       	ldi	r26, 0x00	; 0
    df2a:	b0 e0       	ldi	r27, 0x00	; 0
    df2c:	bc 01       	movw	r22, r24
    df2e:	55 27       	eor	r21, r21
    df30:	44 27       	eor	r20, r20
    df32:	91 81       	ldd	r25, Z+1	; 0x01
    df34:	89 2f       	mov	r24, r25
    df36:	90 e0       	ldi	r25, 0x00	; 0
    df38:	a0 e0       	ldi	r26, 0x00	; 0
    df3a:	b0 e0       	ldi	r27, 0x00	; 0
    df3c:	ba 2f       	mov	r27, r26
    df3e:	a9 2f       	mov	r26, r25
    df40:	98 2f       	mov	r25, r24
    df42:	88 27       	eor	r24, r24
    df44:	84 2b       	or	r24, r20
    df46:	95 2b       	or	r25, r21
    df48:	a6 2b       	or	r26, r22
    df4a:	b7 2b       	or	r27, r23
    df4c:	22 81       	ldd	r18, Z+2	; 0x02
    df4e:	82 2b       	or	r24, r18

      value &= 0x7f7f7f;
    df50:	4c 01       	movw	r8, r24
    df52:	5d 01       	movw	r10, r26
    df54:	e8 94       	clt
    df56:	87 f8       	bld	r8, 7
    df58:	97 f8       	bld	r9, 7
    df5a:	a7 f8       	bld	r10, 7
    df5c:	bb 24       	eor	r11, r11
      temp = (value & 0x7f);
    df5e:	8f 77       	andi	r24, 0x7F	; 127
    df60:	99 27       	eor	r25, r25
    df62:	aa 27       	eor	r26, r26
    df64:	bb 27       	eor	r27, r27
    df66:	8c 01       	movw	r16, r24
    df68:	9d 01       	movw	r18, r26
    df6a:	89 83       	std	Y+1, r24	; 0x01
    df6c:	1a 83       	std	Y+2, r17	; 0x02
    df6e:	2b 83       	std	Y+3, r18	; 0x03
    df70:	3c 83       	std	Y+4, r19	; 0x04
      value = ((value >> 1) | temp);
    df72:	28 2d       	mov	r18, r8
    df74:	39 2d       	mov	r19, r9
    df76:	4a 2d       	mov	r20, r10
    df78:	5b 2d       	mov	r21, r11
    df7a:	60 e0       	ldi	r22, 0x00	; 0
    df7c:	70 e0       	ldi	r23, 0x00	; 0
    df7e:	80 e0       	ldi	r24, 0x00	; 0
    df80:	90 e0       	ldi	r25, 0x00	; 0
    df82:	01 e0       	ldi	r16, 0x01	; 1
    df84:	3b d5       	rcall	.+2678   	; 0xe9fc <__lshrdi3>
    df86:	19 81       	ldd	r17, Y+1	; 0x01
    df88:	21 2b       	or	r18, r17
    df8a:	aa 81       	ldd	r26, Y+2	; 0x02
    df8c:	3a 2b       	or	r19, r26
    df8e:	eb 81       	ldd	r30, Y+3	; 0x03
    df90:	4e 2b       	or	r20, r30
    df92:	fc 81       	ldd	r31, Y+4	; 0x04
    df94:	5f 2b       	or	r21, r31
      temp |= (value & 0x3f80);
    df96:	f2 2f       	mov	r31, r18
    df98:	f0 78       	andi	r31, 0x80	; 128
    df9a:	e3 2f       	mov	r30, r19
    df9c:	ef 73       	andi	r30, 0x3F	; 63
      value = (((value >> 1) & 0xffc000) | temp);
    df9e:	ea 2b       	or	r30, r26
    dfa0:	2d d5       	rcall	.+2650   	; 0xe9fc <__lshrdi3>
    dfa2:	30 7c       	andi	r19, 0xC0	; 192
    dfa4:	c1 2c       	mov	r12, r1
    dfa6:	d1 2c       	mov	r13, r1
    dfa8:	e1 2c       	mov	r14, r1
    dfaa:	f1 2c       	mov	r15, r1
    dfac:	81 2e       	mov	r8, r17
    dfae:	8f 2a       	or	r8, r31
    dfb0:	9e 2e       	mov	r9, r30
    dfb2:	93 2a       	or	r9, r19
    dfb4:	ab 80       	ldd	r10, Y+3	; 0x03
    dfb6:	a4 2a       	or	r10, r20
    dfb8:	bc 80       	ldd	r11, Y+4	; 0x04
      break;
    dfba:	1e c1       	rjmp	.+572    	; 0xe1f8 <TMR_SR_convertFromEBV+0x384>
    }
    case 0x04:
    {
      value = GETU32AT(msg, 0);
    dfbc:	fc 01       	movw	r30, r24
    dfbe:	80 81       	ld	r24, Z
    dfc0:	90 e0       	ldi	r25, 0x00	; 0
    dfc2:	a0 e0       	ldi	r26, 0x00	; 0
    dfc4:	b0 e0       	ldi	r27, 0x00	; 0
    dfc6:	78 2f       	mov	r23, r24
    dfc8:	66 27       	eor	r22, r22
    dfca:	55 27       	eor	r21, r21
    dfcc:	44 27       	eor	r20, r20
    dfce:	91 81       	ldd	r25, Z+1	; 0x01
    dfd0:	89 2f       	mov	r24, r25
    dfd2:	90 e0       	ldi	r25, 0x00	; 0
    dfd4:	a0 e0       	ldi	r26, 0x00	; 0
    dfd6:	b0 e0       	ldi	r27, 0x00	; 0
    dfd8:	dc 01       	movw	r26, r24
    dfda:	99 27       	eor	r25, r25
    dfdc:	88 27       	eor	r24, r24
    dfde:	84 2b       	or	r24, r20
    dfe0:	95 2b       	or	r25, r21
    dfe2:	a6 2b       	or	r26, r22
    dfe4:	b7 2b       	or	r27, r23
    dfe6:	42 81       	ldd	r20, Z+2	; 0x02
    dfe8:	50 e0       	ldi	r21, 0x00	; 0
    dfea:	60 e0       	ldi	r22, 0x00	; 0
    dfec:	70 e0       	ldi	r23, 0x00	; 0
    dfee:	76 2f       	mov	r23, r22
    dff0:	65 2f       	mov	r22, r21
    dff2:	54 2f       	mov	r21, r20
    dff4:	44 27       	eor	r20, r20
    dff6:	84 2b       	or	r24, r20
    dff8:	95 2b       	or	r25, r21
    dffa:	a6 2b       	or	r26, r22
    dffc:	b7 2b       	or	r27, r23
    dffe:	23 81       	ldd	r18, Z+3	; 0x03
    e000:	82 2b       	or	r24, r18
      value &= 0x7f7f7f7f;
    e002:	4c 01       	movw	r8, r24
    e004:	5d 01       	movw	r10, r26
    e006:	e8 94       	clt
    e008:	87 f8       	bld	r8, 7
    e00a:	97 f8       	bld	r9, 7
    e00c:	a7 f8       	bld	r10, 7
    e00e:	b7 f8       	bld	r11, 7
      temp = (value & 0x7f);
    e010:	8f 77       	andi	r24, 0x7F	; 127
    e012:	99 27       	eor	r25, r25
    e014:	aa 27       	eor	r26, r26
    e016:	bb 27       	eor	r27, r27
    e018:	8c 01       	movw	r16, r24
    e01a:	9d 01       	movw	r18, r26
    e01c:	89 83       	std	Y+1, r24	; 0x01
    e01e:	1a 83       	std	Y+2, r17	; 0x02
    e020:	2b 83       	std	Y+3, r18	; 0x03
    e022:	3c 83       	std	Y+4, r19	; 0x04
      value = ((value >> 1) | temp);
    e024:	28 2d       	mov	r18, r8
    e026:	39 2d       	mov	r19, r9
    e028:	4a 2d       	mov	r20, r10
    e02a:	5b 2d       	mov	r21, r11
    e02c:	60 e0       	ldi	r22, 0x00	; 0
    e02e:	70 e0       	ldi	r23, 0x00	; 0
    e030:	80 e0       	ldi	r24, 0x00	; 0
    e032:	90 e0       	ldi	r25, 0x00	; 0
    e034:	01 e0       	ldi	r16, 0x01	; 1
    e036:	e2 d4       	rcall	.+2500   	; 0xe9fc <__lshrdi3>
    e038:	19 81       	ldd	r17, Y+1	; 0x01
    e03a:	21 2b       	or	r18, r17
    e03c:	aa 81       	ldd	r26, Y+2	; 0x02
    e03e:	3a 2b       	or	r19, r26
    e040:	eb 81       	ldd	r30, Y+3	; 0x03
    e042:	4e 2b       	or	r20, r30
    e044:	fc 81       	ldd	r31, Y+4	; 0x04
    e046:	5f 2b       	or	r21, r31
      temp |= (value & 0x3f80);
    e048:	f2 2f       	mov	r31, r18
    e04a:	f0 78       	andi	r31, 0x80	; 128
    e04c:	e3 2f       	mov	r30, r19
    e04e:	ef 73       	andi	r30, 0x3F	; 63
    e050:	f1 2b       	or	r31, r17
      value = (((value >> 1) & 0xffffc000) | temp);
    e052:	ea 2b       	or	r30, r26
    e054:	d3 d4       	rcall	.+2470   	; 0xe9fc <__lshrdi3>
    e056:	30 7c       	andi	r19, 0xC0	; 192
    e058:	3e 2b       	or	r19, r30
    e05a:	ab 80       	ldd	r10, Y+3	; 0x03
    e05c:	4a 29       	or	r20, r10
    e05e:	bc 80       	ldd	r11, Y+4	; 0x04
    e060:	5b 29       	or	r21, r11
      temp |= (value & 0x1fc000);
    e062:	b3 2f       	mov	r27, r19
    e064:	b0 7c       	andi	r27, 0xC0	; 192
    e066:	a4 2f       	mov	r26, r20
    e068:	af 71       	andi	r26, 0x1F	; 31
    e06a:	aa 29       	or	r26, r10
      value = (((value >> 1) & 0xffe00000) | temp);
    e06c:	2f 2f       	mov	r18, r31
    e06e:	60 e0       	ldi	r22, 0x00	; 0
    e070:	70 e0       	ldi	r23, 0x00	; 0
    e072:	80 e0       	ldi	r24, 0x00	; 0
    e074:	90 e0       	ldi	r25, 0x00	; 0
    e076:	c2 d4       	rcall	.+2436   	; 0xe9fc <__lshrdi3>
    e078:	40 7e       	andi	r20, 0xE0	; 224
    e07a:	c1 2c       	mov	r12, r1
    e07c:	d1 2c       	mov	r13, r1
    e07e:	e1 2c       	mov	r14, r1
    e080:	f1 2c       	mov	r15, r1
    e082:	8f 2e       	mov	r8, r31
    e084:	9e 2e       	mov	r9, r30
    e086:	9b 2a       	or	r9, r27
    e088:	aa 2e       	mov	r10, r26
    e08a:	a4 2a       	or	r10, r20
    e08c:	bc 80       	ldd	r11, Y+4	; 0x04
    e08e:	b5 2a       	or	r11, r21
      break;
    e090:	b3 c0       	rjmp	.+358    	; 0xe1f8 <TMR_SR_convertFromEBV+0x384>
    }
    case 0x05:
    {
      value = GETU40AT(msg, 0);
    e092:	fc 01       	movw	r30, r24
    e094:	20 81       	ld	r18, Z
    e096:	30 e0       	ldi	r19, 0x00	; 0
    e098:	40 e0       	ldi	r20, 0x00	; 0
    e09a:	50 e0       	ldi	r21, 0x00	; 0
    e09c:	60 e0       	ldi	r22, 0x00	; 0
    e09e:	70 e0       	ldi	r23, 0x00	; 0
    e0a0:	80 e0       	ldi	r24, 0x00	; 0
    e0a2:	90 e0       	ldi	r25, 0x00	; 0
    e0a4:	00 e2       	ldi	r16, 0x20	; 32
    e0a6:	8f d4       	rcall	.+2334   	; 0xe9c6 <__ashldi3>
    e0a8:	12 2f       	mov	r17, r18
    e0aa:	f3 2e       	mov	r15, r19
    e0ac:	e4 2e       	mov	r14, r20
    e0ae:	b5 2f       	mov	r27, r21
    e0b0:	a6 2f       	mov	r26, r22
    e0b2:	21 81       	ldd	r18, Z+1	; 0x01
    e0b4:	30 e0       	ldi	r19, 0x00	; 0
    e0b6:	40 e0       	ldi	r20, 0x00	; 0
    e0b8:	50 e0       	ldi	r21, 0x00	; 0
    e0ba:	60 e0       	ldi	r22, 0x00	; 0
    e0bc:	70 e0       	ldi	r23, 0x00	; 0
    e0be:	80 e0       	ldi	r24, 0x00	; 0
    e0c0:	90 e0       	ldi	r25, 0x00	; 0
    e0c2:	08 e1       	ldi	r16, 0x18	; 24
    e0c4:	80 d4       	rcall	.+2304   	; 0xe9c6 <__ashldi3>
    e0c6:	12 2b       	or	r17, r18
    e0c8:	f3 2a       	or	r15, r19
    e0ca:	e4 2a       	or	r14, r20
    e0cc:	b5 2b       	or	r27, r21
    e0ce:	a6 2b       	or	r26, r22
    e0d0:	22 81       	ldd	r18, Z+2	; 0x02
    e0d2:	30 e0       	ldi	r19, 0x00	; 0
    e0d4:	40 e0       	ldi	r20, 0x00	; 0
    e0d6:	50 e0       	ldi	r21, 0x00	; 0
    e0d8:	60 e0       	ldi	r22, 0x00	; 0
    e0da:	70 e0       	ldi	r23, 0x00	; 0
    e0dc:	80 e0       	ldi	r24, 0x00	; 0
    e0de:	90 e0       	ldi	r25, 0x00	; 0
    e0e0:	00 e1       	ldi	r16, 0x10	; 16
    e0e2:	71 d4       	rcall	.+2274   	; 0xe9c6 <__ashldi3>
    e0e4:	12 2b       	or	r17, r18
    e0e6:	f3 2a       	or	r15, r19
    e0e8:	e4 2a       	or	r14, r20
    e0ea:	b5 2b       	or	r27, r21
    e0ec:	a6 2b       	or	r26, r22
    e0ee:	23 81       	ldd	r18, Z+3	; 0x03
    e0f0:	30 e0       	ldi	r19, 0x00	; 0
    e0f2:	40 e0       	ldi	r20, 0x00	; 0
    e0f4:	50 e0       	ldi	r21, 0x00	; 0
    e0f6:	60 e0       	ldi	r22, 0x00	; 0
    e0f8:	70 e0       	ldi	r23, 0x00	; 0
    e0fa:	80 e0       	ldi	r24, 0x00	; 0
    e0fc:	90 e0       	ldi	r25, 0x00	; 0
    e0fe:	08 e0       	ldi	r16, 0x08	; 8
    e100:	62 d4       	rcall	.+2244   	; 0xe9c6 <__ashldi3>
    e102:	21 2b       	or	r18, r17
    e104:	3f 29       	or	r19, r15
    e106:	4e 29       	or	r20, r14
    e108:	5b 2b       	or	r21, r27
    e10a:	6a 2b       	or	r22, r26
    e10c:	84 81       	ldd	r24, Z+4	; 0x04
    e10e:	e2 2f       	mov	r30, r18
    e110:	e8 2b       	or	r30, r24
      value &= 0x7f7f7f7f7fULL;
    e112:	ef 77       	andi	r30, 0x7F	; 127
    e114:	3f 77       	andi	r19, 0x7F	; 127
    e116:	4f 77       	andi	r20, 0x7F	; 127
    e118:	5f 77       	andi	r21, 0x7F	; 127

      temp = (value & 0x7f);
      value = ((value >> 1) | temp);
    e11a:	6f 77       	andi	r22, 0x7F	; 127
    e11c:	2e 2f       	mov	r18, r30
    e11e:	70 e0       	ldi	r23, 0x00	; 0
    e120:	80 e0       	ldi	r24, 0x00	; 0
    e122:	90 e0       	ldi	r25, 0x00	; 0
    e124:	01 e0       	ldi	r16, 0x01	; 1
    e126:	6a d4       	rcall	.+2260   	; 0xe9fc <__lshrdi3>
      temp |= (value & 0x3f80);
    e128:	2e 2b       	or	r18, r30
    e12a:	a2 2f       	mov	r26, r18
    e12c:	a0 78       	andi	r26, 0x80	; 128
    e12e:	f3 2f       	mov	r31, r19
    e130:	ff 73       	andi	r31, 0x3F	; 63
      value = (((value >> 1) & 0xffffffc000ULL) | temp);
    e132:	ea 2b       	or	r30, r26
    e134:	63 d4       	rcall	.+2246   	; 0xe9fc <__lshrdi3>
    e136:	30 7c       	andi	r19, 0xC0	; 192
      temp |= (value & 0x1fc000);
    e138:	3f 2b       	or	r19, r31
    e13a:	83 2f       	mov	r24, r19
    e13c:	80 7c       	andi	r24, 0xC0	; 192
    e13e:	a4 2f       	mov	r26, r20
    e140:	af 71       	andi	r26, 0x1F	; 31
      value = (((value >> 1) & 0xffffe00000ULL) | temp);
    e142:	f8 2b       	or	r31, r24
    e144:	2e 2f       	mov	r18, r30
    e146:	70 e0       	ldi	r23, 0x00	; 0
    e148:	80 e0       	ldi	r24, 0x00	; 0
    e14a:	90 e0       	ldi	r25, 0x00	; 0
    e14c:	57 d4       	rcall	.+2222   	; 0xe9fc <__lshrdi3>
    e14e:	40 7e       	andi	r20, 0xE0	; 224
      temp |= (value & 0x1fe00000);
    e150:	4a 2b       	or	r20, r26
    e152:	14 2f       	mov	r17, r20
    e154:	10 7e       	andi	r17, 0xE0	; 224
    e156:	b5 2f       	mov	r27, r21
      value = (((value >> 1) & 0xfff0000000ULL) | temp);
    e158:	bf 71       	andi	r27, 0x1F	; 31
    e15a:	2e 2f       	mov	r18, r30
    e15c:	3f 2f       	mov	r19, r31
    e15e:	70 e0       	ldi	r23, 0x00	; 0
    e160:	80 e0       	ldi	r24, 0x00	; 0
    e162:	90 e0       	ldi	r25, 0x00	; 0
    e164:	4b d4       	rcall	.+2198   	; 0xe9fc <__lshrdi3>
    e166:	50 7f       	andi	r21, 0xF0	; 240
    e168:	d1 2c       	mov	r13, r1
    e16a:	e1 2c       	mov	r14, r1
    e16c:	f1 2c       	mov	r15, r1
    e16e:	8e 2e       	mov	r8, r30
    e170:	9f 2e       	mov	r9, r31
    e172:	a1 2e       	mov	r10, r17
    e174:	aa 2a       	or	r10, r26
    e176:	bb 2e       	mov	r11, r27
    e178:	b5 2a       	or	r11, r21
    e17a:	c6 2e       	mov	r12, r22
      break;
    e17c:	3d c0       	rjmp	.+122    	; 0xe1f8 <TMR_SR_convertFromEBV+0x384>
    }
    case 0x08:
    {
      while(length)
      {
        temp = msg[8-length];
    e17e:	28 e0       	ldi	r18, 0x08	; 8
    e180:	30 e0       	ldi	r19, 0x00	; 0
    e182:	2a 1b       	sub	r18, r26
    e184:	31 09       	sbc	r19, r1
    e186:	26 0d       	add	r18, r6
    e188:	37 1d       	adc	r19, r7
    e18a:	f9 01       	movw	r30, r18
    e18c:	20 81       	ld	r18, Z
        length--;
    e18e:	a1 50       	subi	r26, 0x01	; 1
        value |= (temp << (length*8));
    e190:	0a 2f       	mov	r16, r26
    e192:	10 e0       	ldi	r17, 0x00	; 0
    e194:	00 0f       	add	r16, r16
    e196:	11 1f       	adc	r17, r17
    e198:	00 0f       	add	r16, r16
    e19a:	11 1f       	adc	r17, r17
    e19c:	00 0f       	add	r16, r16
    e19e:	11 1f       	adc	r17, r17
    e1a0:	30 e0       	ldi	r19, 0x00	; 0
    e1a2:	40 e0       	ldi	r20, 0x00	; 0
    e1a4:	50 e0       	ldi	r21, 0x00	; 0
    e1a6:	60 e0       	ldi	r22, 0x00	; 0
    e1a8:	70 e0       	ldi	r23, 0x00	; 0
    e1aa:	80 e0       	ldi	r24, 0x00	; 0
    e1ac:	90 e0       	ldi	r25, 0x00	; 0
    e1ae:	0b d4       	rcall	.+2070   	; 0xe9c6 <__ashldi3>
    e1b0:	28 29       	or	r18, r8
    e1b2:	39 29       	or	r19, r9
    e1b4:	4a 29       	or	r20, r10
    e1b6:	5b 29       	or	r21, r11
    e1b8:	6c 29       	or	r22, r12
    e1ba:	7d 29       	or	r23, r13
    e1bc:	8e 29       	or	r24, r14
    e1be:	9f 29       	or	r25, r15
    e1c0:	82 2e       	mov	r8, r18
    e1c2:	93 2e       	mov	r9, r19
    e1c4:	a4 2e       	mov	r10, r20
    e1c6:	b5 2e       	mov	r11, r21
    e1c8:	c6 2e       	mov	r12, r22
    e1ca:	d7 2e       	mov	r13, r23
    e1cc:	e8 2e       	mov	r14, r24
    e1ce:	f9 2e       	mov	r15, r25
    e1d0:	08 c0       	rjmp	.+16     	; 0xe1e2 <TMR_SR_convertFromEBV+0x36e>
uint64_t
TMR_SR_convertFromEBV(uint8_t *msg, uint8_t length)
{
  uint64_t value = 0, temp = 0;

  switch (length)
    e1d2:	81 2c       	mov	r8, r1
    e1d4:	91 2c       	mov	r9, r1
    e1d6:	a1 2c       	mov	r10, r1
    e1d8:	b1 2c       	mov	r11, r1
    e1da:	c1 2c       	mov	r12, r1
    e1dc:	d1 2c       	mov	r13, r1
    e1de:	e1 2c       	mov	r14, r1
    e1e0:	f1 2c       	mov	r15, r1
      value = (((value >> 1) & 0xfff0000000ULL) | temp);
      break;
    }
    case 0x08:
    {
      while(length)
    e1e2:	a1 11       	cpse	r26, r1
    e1e4:	cc cf       	rjmp	.-104    	; 0xe17e <TMR_SR_convertFromEBV+0x30a>
    e1e6:	08 c0       	rjmp	.+16     	; 0xe1f8 <TMR_SR_convertFromEBV+0x384>

/** Convert from 1/2/3/4/5 bytes of EBV formated value */
uint64_t
TMR_SR_convertFromEBV(uint8_t *msg, uint8_t length)
{
  uint64_t value = 0, temp = 0;
    e1e8:	81 2c       	mov	r8, r1
    e1ea:	91 2c       	mov	r9, r1
    e1ec:	a1 2c       	mov	r10, r1
    e1ee:	b1 2c       	mov	r11, r1
    e1f0:	c1 2c       	mov	r12, r1
    e1f2:	d1 2c       	mov	r13, r1
    e1f4:	e1 2c       	mov	r14, r1
    e1f6:	f1 2c       	mov	r15, r1
    }
    default:
      break;
  }
  return value;
}
    e1f8:	28 2d       	mov	r18, r8
    e1fa:	39 2d       	mov	r19, r9
    e1fc:	4a 2d       	mov	r20, r10
    e1fe:	5b 2d       	mov	r21, r11
    e200:	6c 2d       	mov	r22, r12
    e202:	7d 2d       	mov	r23, r13
    e204:	8e 2d       	mov	r24, r14
    e206:	9f 2d       	mov	r25, r15
    e208:	60 96       	adiw	r28, 0x10	; 16
    e20a:	0f b6       	in	r0, 0x3f	; 63
    e20c:	f8 94       	cli
    e20e:	de bf       	out	0x3e, r29	; 62
    e210:	0f be       	out	0x3f, r0	; 63
    e212:	cd bf       	out	0x3d, r28	; 61
    e214:	df 91       	pop	r29
    e216:	cf 91       	pop	r28
    e218:	1f 91       	pop	r17
    e21a:	0f 91       	pop	r16
    e21c:	ff 90       	pop	r15
    e21e:	ef 90       	pop	r14
    e220:	df 90       	pop	r13
    e222:	cf 90       	pop	r12
    e224:	bf 90       	pop	r11
    e226:	af 90       	pop	r10
    e228:	9f 90       	pop	r9
    e22a:	8f 90       	pop	r8
    e22c:	7f 90       	pop	r7
    e22e:	6f 90       	pop	r6
    e230:	08 95       	ret

0000e232 <TMR_startReading>:
    reader->fetchTagReads = false;
#endif /* TMR_ENABLE_BACKGROUND_READS */
    reader->subOffTime = 0;
  }
  return TMR_SUCCESS;
}
    e232:	0f 93       	push	r16
    e234:	1f 93       	push	r17
    e236:	cf 93       	push	r28
    e238:	df 93       	push	r29
    e23a:	00 d0       	rcall	.+0      	; 0xe23c <TMR_startReading+0xa>
    e23c:	00 d0       	rcall	.+0      	; 0xe23e <TMR_startReading+0xc>
    e23e:	cd b7       	in	r28, 0x3d	; 61
    e240:	de b7       	in	r29, 0x3e	; 62
    e242:	00 97       	sbiw	r24, 0x00	; 0
    e244:	11 f1       	breq	.+68     	; 0xe28a <TMR_startReading+0x58>
    e246:	8c 01       	movw	r16, r24
    e248:	ae 01       	movw	r20, r28
    e24a:	4f 5f       	subi	r20, 0xFF	; 255
    e24c:	5f 4f       	sbci	r21, 0xFF	; 255
    e24e:	61 e2       	ldi	r22, 0x21	; 33
    e250:	b2 da       	rcall	.-2716   	; 0xd7b6 <TMR_paramGet>
    e252:	f8 01       	movw	r30, r16
    e254:	ea 58       	subi	r30, 0x8A	; 138
    e256:	ff 4f       	sbci	r31, 0xFF	; 255
    e258:	81 e0       	ldi	r24, 0x01	; 1
    e25a:	80 83       	st	Z, r24
    e25c:	49 81       	ldd	r20, Y+1	; 0x01
    e25e:	5a 81       	ldd	r21, Y+2	; 0x02
    e260:	6b 81       	ldd	r22, Y+3	; 0x03
    e262:	7c 81       	ldd	r23, Y+4	; 0x04
    e264:	20 e0       	ldi	r18, 0x00	; 0
    e266:	30 e0       	ldi	r19, 0x00	; 0
    e268:	c8 01       	movw	r24, r16
    e26a:	0e 94 e6 2d 	call	0x5bcc	; 0x5bcc <TMR_SR_read>
    e26e:	61 15       	cp	r22, r1
    e270:	71 05       	cpc	r23, r1
    e272:	81 05       	cpc	r24, r1
    e274:	91 05       	cpc	r25, r1
    e276:	21 f0       	breq	.+8      	; 0xe280 <TMR_startReading+0x4e>
    e278:	46 2f       	mov	r20, r22
    e27a:	37 2f       	mov	r19, r23
    e27c:	28 2f       	mov	r18, r24
    e27e:	09 c0       	rjmp	.+18     	; 0xe292 <TMR_startReading+0x60>
    e280:	40 e0       	ldi	r20, 0x00	; 0
    e282:	30 e0       	ldi	r19, 0x00	; 0
    e284:	20 e0       	ldi	r18, 0x00	; 0
    e286:	90 e0       	ldi	r25, 0x00	; 0
    e288:	04 c0       	rjmp	.+8      	; 0xe292 <TMR_startReading+0x60>
    e28a:	41 e0       	ldi	r20, 0x01	; 1
    e28c:	30 e0       	ldi	r19, 0x00	; 0
    e28e:	20 e0       	ldi	r18, 0x00	; 0
    e290:	93 e0       	ldi	r25, 0x03	; 3
    e292:	64 2f       	mov	r22, r20
    e294:	73 2f       	mov	r23, r19
    e296:	82 2f       	mov	r24, r18
    e298:	0f 90       	pop	r0
    e29a:	0f 90       	pop	r0
    e29c:	0f 90       	pop	r0
    e29e:	0f 90       	pop	r0
    e2a0:	df 91       	pop	r29
    e2a2:	cf 91       	pop	r28
    e2a4:	1f 91       	pop	r17
    e2a6:	0f 91       	pop	r16
    e2a8:	08 95       	ret

0000e2aa <notify_read_listeners>:

void
notify_read_listeners(TMR_Reader *reader, TMR_TagReadData *trd)
{
    e2aa:	ef 92       	push	r14
    e2ac:	ff 92       	push	r15
    e2ae:	0f 93       	push	r16
    e2b0:	1f 93       	push	r17
    e2b2:	cf 93       	push	r28
    e2b4:	df 93       	push	r29
  TMR_ReadListenerBlock *rlb;

  /* notify tag read to listener */
  if (NULL != reader)
    e2b6:	00 97       	sbiw	r24, 0x00	; 0
    e2b8:	a1 f0       	breq	.+40     	; 0xe2e2 <notify_read_listeners+0x38>
    e2ba:	7b 01       	movw	r14, r22
    e2bc:	8c 01       	movw	r16, r24
  {
#if !defined(SINGLE_THREAD_ASYNC_READ) && defined(TMR_ENABLE_BACKGROUND_READS)
    pthread_mutex_lock(&reader->listenerLock);
#endif
	rlb = reader->readListeners;
    e2be:	fc 01       	movw	r30, r24
    e2c0:	e1 5f       	subi	r30, 0xF1	; 241
    e2c2:	f9 4f       	sbci	r31, 0xF9	; 249
    e2c4:	c0 81       	ld	r28, Z
    e2c6:	d1 81       	ldd	r29, Z+1	; 0x01
    while (rlb)
    e2c8:	0a c0       	rjmp	.+20     	; 0xe2de <notify_read_listeners+0x34>
    {
      rlb->listener(reader, trd, rlb->cookie);
    e2ca:	e8 81       	ld	r30, Y
    e2cc:	f9 81       	ldd	r31, Y+1	; 0x01
    e2ce:	4a 81       	ldd	r20, Y+2	; 0x02
    e2d0:	5b 81       	ldd	r21, Y+3	; 0x03
    e2d2:	b7 01       	movw	r22, r14
    e2d4:	c8 01       	movw	r24, r16
    e2d6:	09 95       	icall
      rlb = rlb->next;
    e2d8:	0c 80       	ldd	r0, Y+4	; 0x04
    e2da:	dd 81       	ldd	r29, Y+5	; 0x05
    e2dc:	c0 2d       	mov	r28, r0
  {
#if !defined(SINGLE_THREAD_ASYNC_READ) && defined(TMR_ENABLE_BACKGROUND_READS)
    pthread_mutex_lock(&reader->listenerLock);
#endif
	rlb = reader->readListeners;
    while (rlb)
    e2de:	20 97       	sbiw	r28, 0x00	; 0
    e2e0:	a1 f7       	brne	.-24     	; 0xe2ca <notify_read_listeners+0x20>
    }
#if !defined(SINGLE_THREAD_ASYNC_READ) && defined(TMR_ENABLE_BACKGROUND_READS)
    pthread_mutex_unlock(&reader->listenerLock);
#endif
  }
}
    e2e2:	df 91       	pop	r29
    e2e4:	cf 91       	pop	r28
    e2e6:	1f 91       	pop	r17
    e2e8:	0f 91       	pop	r16
    e2ea:	ff 90       	pop	r15
    e2ec:	ef 90       	pop	r14
    e2ee:	08 95       	ret

0000e2f0 <enable_timer1>:
}

static void enable_timer1(const u32 value_ms)
{
	u16 ocr1a_value = 0u;
	if((TIMER_NO_REASON != timer1.start_reason) && (TIMER_IN_PROGRESS != timer1.status_timer))
    e2f0:	20 91 eb 0b 	lds	r18, 0x0BEB	; 0x800beb <timer1+0x1>
    e2f4:	22 23       	and	r18, r18
    e2f6:	19 f1       	breq	.+70     	; 0xe33e <enable_timer1+0x4e>
    e2f8:	20 91 ea 0b 	lds	r18, 0x0BEA	; 0x800bea <timer1>
    e2fc:	21 30       	cpi	r18, 0x01	; 1
    e2fe:	f9 f0       	breq	.+62     	; 0xe33e <enable_timer1+0x4e>
	{
		timer1.status_timer = TIMER_IN_PROGRESS;
    e300:	21 e0       	ldi	r18, 0x01	; 1
    e302:	20 93 ea 0b 	sts	0x0BEA, r18	; 0x800bea <timer1>
		
		/*Reset counter value so we start from "0"*/
		TIFR = (u8)0x00U;
    e306:	16 be       	out	0x36, r1	; 54
		TCNT1H = (u8)0x00U; /*This is done for robustness*/
    e308:	1d bc       	out	0x2d, r1	; 45
		TCNT1L = (u8)0x00U; /*This is done for robustness*/
    e30a:	1c bc       	out	0x2c, r1	; 44
			sprintf(text, "enable_timer1: %lu is too large (bigger then 16 bits)", value_ms);
			UART1_SendMessage_DEBUG(text);
		}
		#endif
		
		TCCR1A = (u8)0x00U; /*This is done for robustness*/
    e30c:	1f bc       	out	0x2f, r1	; 47
		TCCR1B = ((u8)1<<(u8)WGM12); /*Set CTC mode*/
    e30e:	28 e0       	ldi	r18, 0x08	; 8
    e310:	2e bd       	out	0x2e, r18	; 46
		
		ocr1a_value = (value_ms * F_CPU) / 1024u;
    e312:	9b 01       	movw	r18, r22
    e314:	ac 01       	movw	r20, r24
    e316:	60 e0       	ldi	r22, 0x00	; 0
    e318:	70 ec       	ldi	r23, 0xC0	; 192
    e31a:	88 ea       	ldi	r24, 0xA8	; 168
    e31c:	90 e0       	ldi	r25, 0x00	; 0
    e31e:	e8 d2       	rcall	.+1488   	; 0xe8f0 <__mulsi3>
    e320:	dc 01       	movw	r26, r24
    e322:	cb 01       	movw	r24, r22
    e324:	07 2e       	mov	r0, r23
    e326:	7a e0       	ldi	r23, 0x0A	; 10
    e328:	b6 95       	lsr	r27
    e32a:	a7 95       	ror	r26
    e32c:	97 95       	ror	r25
    e32e:	87 95       	ror	r24
    e330:	7a 95       	dec	r23
    e332:	d1 f7       	brne	.-12     	; 0xe328 <enable_timer1+0x38>
    e334:	70 2d       	mov	r23, r0
		OCR1AH = (u8)((ocr1a_value >> 8u) & 0xFFu);
    e336:	9b bd       	out	0x2b, r25	; 43
		OCR1AL = (u8)(ocr1a_value & 0xFFu);
    e338:	8a bd       	out	0x2a, r24	; 42
		TCCR1B = (u8)((u8)1 << (u8)CS12) | ((u8)1 << (u8)CS10); /*Prescaler is 1024 according to maximum value possible for timeout (6s)*/
    e33a:	85 e0       	ldi	r24, 0x05	; 5
    e33c:	8e bd       	out	0x2e, r24	; 46
    e33e:	08 95       	ret

0000e340 <enable_timer3>:
}

static void enable_timer3(const u32 value_ms)
{
	u16 ocr3a_value = 0u;
	if((TIMER_NO_REASON != timer3.start_reason) && (TIMER_IN_PROGRESS != timer3.status_timer))
    e340:	20 91 e9 0b 	lds	r18, 0x0BE9	; 0x800be9 <timer3+0x1>
    e344:	22 23       	and	r18, r18
    e346:	59 f1       	breq	.+86     	; 0xe39e <enable_timer3+0x5e>
    e348:	20 91 e8 0b 	lds	r18, 0x0BE8	; 0x800be8 <timer3>
    e34c:	21 30       	cpi	r18, 0x01	; 1
    e34e:	39 f1       	breq	.+78     	; 0xe39e <enable_timer3+0x5e>
	{
		timer3.status_timer = TIMER_IN_PROGRESS;
    e350:	21 e0       	ldi	r18, 0x01	; 1
    e352:	20 93 e8 0b 	sts	0x0BE8, r18	; 0x800be8 <timer3>
		
		/*Reset counter value so we start from "0"*/
		ETIFR = (u8)0x00U;
    e356:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
		TCNT3H = (u8)0x00U; /*This is done for robustness*/
    e35a:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
		TCNT3L = (u8)0x00U; /*This is done for robustness*/
    e35e:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
			sprintf(text, "enable_timer3: %lu is too large (bigger then 16 bits)", value_ms);
			UART1_SendMessage_DEBUG(text);
		}
		#endif
		
		TCCR3A = (u8)0x00U; /*This is done for robustness*/
    e362:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
		TCCR3B = ((u8)1<<(u8)WGM32); /*Set CTC mode*/
    e366:	ea e8       	ldi	r30, 0x8A	; 138
    e368:	f0 e0       	ldi	r31, 0x00	; 0
    e36a:	28 e0       	ldi	r18, 0x08	; 8
    e36c:	20 83       	st	Z, r18
		
		ocr3a_value = (value_ms * F_CPU) / 1024u;
    e36e:	9b 01       	movw	r18, r22
    e370:	ac 01       	movw	r20, r24
    e372:	60 e0       	ldi	r22, 0x00	; 0
    e374:	70 ec       	ldi	r23, 0xC0	; 192
    e376:	88 ea       	ldi	r24, 0xA8	; 168
    e378:	90 e0       	ldi	r25, 0x00	; 0
    e37a:	ba d2       	rcall	.+1396   	; 0xe8f0 <__mulsi3>
    e37c:	dc 01       	movw	r26, r24
    e37e:	cb 01       	movw	r24, r22
    e380:	07 2e       	mov	r0, r23
    e382:	7a e0       	ldi	r23, 0x0A	; 10
    e384:	b6 95       	lsr	r27
    e386:	a7 95       	ror	r26
    e388:	97 95       	ror	r25
    e38a:	87 95       	ror	r24
    e38c:	7a 95       	dec	r23
    e38e:	d1 f7       	brne	.-12     	; 0xe384 <enable_timer3+0x44>
    e390:	70 2d       	mov	r23, r0
		OCR3AH = (u8)((ocr3a_value >> 8u) & 0xFFu);
    e392:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
		OCR3AL = (u8)(ocr3a_value & 0xFFu);
    e396:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
		TCCR3B = (u8)((u8)1 << (u8)CS32) | ((u8)1 << (u8)CS30); /*Prescaler is 1024 according to maximum value possible for timeout (6s)*/
    e39a:	85 e0       	ldi	r24, 0x05	; 5
    e39c:	80 83       	st	Z, r24
    e39e:	08 95       	ret

0000e3a0 <start_timer>:
	}
	#endif
}

 void start_timer(const TIMER_NO_EN timer_no, const u32 value_ms) {
	 if(TIMER1 == timer_no)
    e3a0:	81 11       	cpse	r24, r1
    e3a2:	04 c0       	rjmp	.+8      	; 0xe3ac <start_timer+0xc>
	 {
		 enable_timer1(value_ms);
    e3a4:	cb 01       	movw	r24, r22
    e3a6:	ba 01       	movw	r22, r20
    e3a8:	a3 cf       	rjmp	.-186    	; 0xe2f0 <enable_timer1>
    e3aa:	08 95       	ret
	 }
	 else if(TIMER3 == timer_no)
    e3ac:	81 30       	cpi	r24, 0x01	; 1
    e3ae:	19 f4       	brne	.+6      	; 0xe3b6 <start_timer+0x16>
	 {
		 enable_timer3(value_ms);
    e3b0:	cb 01       	movw	r24, r22
    e3b2:	ba 01       	movw	r22, r20
    e3b4:	c5 cf       	rjmp	.-118    	; 0xe340 <enable_timer3>
    e3b6:	08 95       	ret

0000e3b8 <get_timer_status>:
 
TIMER_STATUS_EN get_timer_status(const TIMER_NO_EN timer_no)
{
	TIMER_STATUS_EN result;
	
	if(TIMER1 == timer_no)
    e3b8:	81 11       	cpse	r24, r1
    e3ba:	23 c0       	rjmp	.+70     	; 0xe402 <get_timer_status+0x4a>
static Timer timer3 = (Timer){TIMER_IDLE, TIMER_NO_REASON};

static inline TIMER_STATUS_EN check_timer_compare_done(TIMER_NO_EN timer_no)
{
	TIMER_STATUS_EN result;
	if(TIMER1 == timer_no)
    e3bc:	81 11       	cpse	r24, r1
    e3be:	09 c0       	rjmp	.+18     	; 0xe3d2 <get_timer_status+0x1a>
	{
		if((u8)TIFR & ((u8)1U << (u8)OCF1A))
    e3c0:	06 b6       	in	r0, 0x36	; 54
    e3c2:	04 fe       	sbrs	r0, 4
    e3c4:	03 c0       	rjmp	.+6      	; 0xe3cc <get_timer_status+0x14>
		{
			timer1.status_timer = TIMER_FINISHED;
    e3c6:	82 e0       	ldi	r24, 0x02	; 2
    e3c8:	80 93 ea 0b 	sts	0x0BEA, r24	; 0x800bea <timer1>
		}
		result = timer1.status_timer;
    e3cc:	80 91 ea 0b 	lds	r24, 0x0BEA	; 0x800bea <timer1>
    e3d0:	0d c0       	rjmp	.+26     	; 0xe3ec <get_timer_status+0x34>
	}
	else if( TIMER3 == timer_no)
    e3d2:	81 30       	cpi	r24, 0x01	; 1
    e3d4:	51 f4       	brne	.+20     	; 0xe3ea <get_timer_status+0x32>
	{
		if((u8)ETIFR & ((u8)1U << (u8)OCF3A))
    e3d6:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    e3da:	84 ff       	sbrs	r24, 4
    e3dc:	03 c0       	rjmp	.+6      	; 0xe3e4 <get_timer_status+0x2c>
		{
			timer3.status_timer = TIMER_FINISHED;
    e3de:	82 e0       	ldi	r24, 0x02	; 2
    e3e0:	80 93 e8 0b 	sts	0x0BE8, r24	; 0x800be8 <timer3>
		}
		result = timer3.status_timer;
    e3e4:	80 91 e8 0b 	lds	r24, 0x0BE8	; 0x800be8 <timer3>
    e3e8:	01 c0       	rjmp	.+2      	; 0xe3ec <get_timer_status+0x34>
	}
	else
	{
		result = TIMER_UNKNOWN_STATE;
    e3ea:	83 e0       	ldi	r24, 0x03	; 3
{
	TIMER_STATUS_EN result;
	
	if(TIMER1 == timer_no)
	{
		if(TIMER_FINISHED == check_timer_compare_done(timer_no))
    e3ec:	82 30       	cpi	r24, 0x02	; 2
    e3ee:	31 f4       	brne	.+12     	; 0xe3fc <get_timer_status+0x44>
		{
			TCCR1B = (u8)0x00U; /*Stop the timer*/
    e3f0:	1e bc       	out	0x2e, r1	; 46
			TCNT1H = (u8)0x00U;/*Reset acutal value from the counter*/
    e3f2:	1d bc       	out	0x2d, r1	; 45
			TCNT1L = (u8)0x00U;
    e3f4:	1c bc       	out	0x2c, r1	; 44
			TIFR |= ((u8)1U << (u8)OCF1A); /*Clear OCF1A flag*/
    e3f6:	86 b7       	in	r24, 0x36	; 54
    e3f8:	80 61       	ori	r24, 0x10	; 16
    e3fa:	86 bf       	out	0x36, r24	; 54
		}
		result = timer1.status_timer;
    e3fc:	80 91 ea 0b 	lds	r24, 0x0BEA	; 0x800bea <timer1>
    e400:	08 95       	ret
	}
	else if(TIMER3 == timer_no)
    e402:	81 30       	cpi	r24, 0x01	; 1
    e404:	41 f5       	brne	.+80     	; 0xe456 <get_timer_status+0x9e>
static Timer timer3 = (Timer){TIMER_IDLE, TIMER_NO_REASON};

static inline TIMER_STATUS_EN check_timer_compare_done(TIMER_NO_EN timer_no)
{
	TIMER_STATUS_EN result;
	if(TIMER1 == timer_no)
    e406:	81 11       	cpse	r24, r1
    e408:	09 c0       	rjmp	.+18     	; 0xe41c <get_timer_status+0x64>
	{
		if((u8)TIFR & ((u8)1U << (u8)OCF1A))
    e40a:	06 b6       	in	r0, 0x36	; 54
    e40c:	04 fe       	sbrs	r0, 4
    e40e:	03 c0       	rjmp	.+6      	; 0xe416 <get_timer_status+0x5e>
		{
			timer1.status_timer = TIMER_FINISHED;
    e410:	82 e0       	ldi	r24, 0x02	; 2
    e412:	80 93 ea 0b 	sts	0x0BEA, r24	; 0x800bea <timer1>
		}
		result = timer1.status_timer;
    e416:	80 91 ea 0b 	lds	r24, 0x0BEA	; 0x800bea <timer1>
    e41a:	0d c0       	rjmp	.+26     	; 0xe436 <get_timer_status+0x7e>
	}
	else if( TIMER3 == timer_no)
    e41c:	81 30       	cpi	r24, 0x01	; 1
    e41e:	51 f4       	brne	.+20     	; 0xe434 <get_timer_status+0x7c>
	{
		if((u8)ETIFR & ((u8)1U << (u8)OCF3A))
    e420:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    e424:	84 ff       	sbrs	r24, 4
    e426:	03 c0       	rjmp	.+6      	; 0xe42e <get_timer_status+0x76>
		{
			timer3.status_timer = TIMER_FINISHED;
    e428:	82 e0       	ldi	r24, 0x02	; 2
    e42a:	80 93 e8 0b 	sts	0x0BE8, r24	; 0x800be8 <timer3>
		}
		result = timer3.status_timer;
    e42e:	80 91 e8 0b 	lds	r24, 0x0BE8	; 0x800be8 <timer3>
    e432:	01 c0       	rjmp	.+2      	; 0xe436 <get_timer_status+0x7e>
	}
	else
	{
		result = TIMER_UNKNOWN_STATE;
    e434:	83 e0       	ldi	r24, 0x03	; 3
		}
		result = timer1.status_timer;
	}
	else if(TIMER3 == timer_no)
	{
		if(TIMER_FINISHED == check_timer_compare_done(timer_no))
    e436:	82 30       	cpi	r24, 0x02	; 2
    e438:	59 f4       	brne	.+22     	; 0xe450 <get_timer_status+0x98>
		{
			TCCR3B = (u8)0x00U; /*Stop the timer*/
    e43a:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
			TCNT3H = (u8)0x00U;/*Reset acutal value from the counter*/
    e43e:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
			TCNT3L = (u8)0x00U;
    e442:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
			ETIFR |= ((u8)1U << (u8)OCF3A); /*Clear OCF3A flag*/
    e446:	ec e7       	ldi	r30, 0x7C	; 124
    e448:	f0 e0       	ldi	r31, 0x00	; 0
    e44a:	80 81       	ld	r24, Z
    e44c:	80 61       	ori	r24, 0x10	; 16
    e44e:	80 83       	st	Z, r24
		}
		result = timer1.status_timer;
    e450:	80 91 ea 0b 	lds	r24, 0x0BEA	; 0x800bea <timer1>
    e454:	08 95       	ret
	}
	else
	{
		result = TIMER_UNKNOWN_STATE;
    e456:	83 e0       	ldi	r24, 0x03	; 3
		UART1_SendMessage_DEBUG("get_timer_status: Timer number is wrong");
		#endif
	}
	
	return result;
}
    e458:	08 95       	ret

0000e45a <disable_timer>:

void disable_timer(const TIMER_NO_EN timer_no)
{
	if(TIMER1 == timer_no)
    e45a:	81 11       	cpse	r24, r1
    e45c:	0b c0       	rjmp	.+22     	; 0xe474 <disable_timer+0x1a>
	{
		timer1.status_timer = TIMER_IDLE;
    e45e:	ea ee       	ldi	r30, 0xEA	; 234
    e460:	fb e0       	ldi	r31, 0x0B	; 11
    e462:	10 82       	st	Z, r1
		timer1.start_reason = TIMER_NO_REASON;
    e464:	11 82       	std	Z+1, r1	; 0x01
		TCCR1B = (u8)0x00U; /*Stop the timer*/
    e466:	1e bc       	out	0x2e, r1	; 46
		TCNT1H = (u8)0x00U;/*Reset acutal value from the counter*/
    e468:	1d bc       	out	0x2d, r1	; 45
		TCNT1L = (u8)0x00U;
    e46a:	1c bc       	out	0x2c, r1	; 44
		TIFR |= ((u8)1U << (u8)OCF1A); /*Clear OCF1A flag*/
    e46c:	86 b7       	in	r24, 0x36	; 54
    e46e:	80 61       	ori	r24, 0x10	; 16
    e470:	86 bf       	out	0x36, r24	; 54
    e472:	08 95       	ret
	}
	else if(TIMER3 == timer_no)
    e474:	81 30       	cpi	r24, 0x01	; 1
    e476:	79 f4       	brne	.+30     	; 0xe496 <disable_timer+0x3c>
	{
		timer3.status_timer = TIMER_IDLE;
    e478:	e8 ee       	ldi	r30, 0xE8	; 232
    e47a:	fb e0       	ldi	r31, 0x0B	; 11
    e47c:	10 82       	st	Z, r1
		timer3.start_reason = TIMER_NO_REASON;
    e47e:	11 82       	std	Z+1, r1	; 0x01
		TCCR3B = (u8)0x00U; /*Stop the timer*/
    e480:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
		TCNT3H = (u8)0x00U;/*Reset acutal value from the counter*/
    e484:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
		TCNT3L = (u8)0x00U;
    e488:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		ETIFR |= ((u8)1U << (u8)OCF3A); /*Clear OCF1A flag*/
    e48c:	ec e7       	ldi	r30, 0x7C	; 124
    e48e:	f0 e0       	ldi	r31, 0x00	; 0
    e490:	80 81       	ld	r24, Z
    e492:	80 61       	ori	r24, 0x10	; 16
    e494:	80 83       	st	Z, r24
    e496:	08 95       	ret

0000e498 <set_start_reason_timer>:
	
}

void set_start_reason_timer(const TIMER_NO_EN timer_no, const TIMER_START_REASON_EN reason)
{
	if(TIMER1 == timer_no)
    e498:	81 11       	cpse	r24, r1
    e49a:	03 c0       	rjmp	.+6      	; 0xe4a2 <set_start_reason_timer+0xa>
	{
		timer1.start_reason = reason;
    e49c:	60 93 eb 0b 	sts	0x0BEB, r22	; 0x800beb <timer1+0x1>
    e4a0:	08 95       	ret
	}
	else if (TIMER3 == timer_no)
    e4a2:	81 30       	cpi	r24, 0x01	; 1
    e4a4:	11 f4       	brne	.+4      	; 0xe4aa <set_start_reason_timer+0x12>
	{
		timer3.start_reason = reason;
    e4a6:	60 93 e9 0b 	sts	0x0BE9, r22	; 0x800be9 <timer3+0x1>
    e4aa:	08 95       	ret

0000e4ac <get_start_reason_timer>:
}

TIMER_START_REASON_EN get_start_reason_timer(const TIMER_NO_EN timer_no)
{
	TIMER_START_REASON_EN reason;
	if(TIMER1 == timer_no)
    e4ac:	81 11       	cpse	r24, r1
    e4ae:	03 c0       	rjmp	.+6      	; 0xe4b6 <get_start_reason_timer+0xa>
	{
		reason = timer1.start_reason;
    e4b0:	80 91 eb 0b 	lds	r24, 0x0BEB	; 0x800beb <timer1+0x1>
    e4b4:	08 95       	ret
	}
	else if(TIMER3 == timer_no)
    e4b6:	81 30       	cpi	r24, 0x01	; 1
    e4b8:	19 f4       	brne	.+6      	; 0xe4c0 <get_start_reason_timer+0x14>
	{
		reason = timer3.start_reason;
    e4ba:	80 91 e9 0b 	lds	r24, 0x0BE9	; 0x800be9 <timer3+0x1>
    e4be:	08 95       	ret
	}
	else
	{
		reason = TIMER_REASON_UNKNOWN;
    e4c0:	83 e0       	ldi	r24, 0x03	; 3
		#ifdef DEBUG
		UART1_SendMessage_DEBUG("get_start_reason_timer1: Unknown timer number given");
		#endif
	}
	return reason;
}
    e4c2:	08 95       	ret

0000e4c4 <__vector_18>:
		while(FALSE == UART1_isBufferEmpty()) {} /*Wait for buffer to become empty*/
		if(FALSE != UART1_isBufferEmpty()) {
			UDR1 = (unsigned char)text[i];
		}
	}
}
    e4c4:	1f 92       	push	r1
    e4c6:	0f 92       	push	r0
    e4c8:	0f b6       	in	r0, 0x3f	; 63
    e4ca:	0f 92       	push	r0
    e4cc:	11 24       	eor	r1, r1
    e4ce:	0b b6       	in	r0, 0x3b	; 59
    e4d0:	0f 92       	push	r0
    e4d2:	8f 93       	push	r24
    e4d4:	9f 93       	push	r25
    e4d6:	ef 93       	push	r30
    e4d8:	ff 93       	push	r31
    e4da:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <ISR_end_index>
    e4de:	90 91 ed 0b 	lds	r25, 0x0BED	; 0x800bed <ISR_end_index+0x1>
    e4e2:	8f 3f       	cpi	r24, 0xFF	; 255
    e4e4:	91 05       	cpc	r25, r1
    e4e6:	20 f0       	brcs	.+8      	; 0xe4f0 <__vector_18+0x2c>
    e4e8:	10 92 ed 0b 	sts	0x0BED, r1	; 0x800bed <ISR_end_index+0x1>
    e4ec:	10 92 ec 0b 	sts	0x0BEC, r1	; 0x800bec <ISR_end_index>
    e4f0:	e0 91 ec 0b 	lds	r30, 0x0BEC	; 0x800bec <ISR_end_index>
    e4f4:	f0 91 ed 0b 	lds	r31, 0x0BED	; 0x800bed <ISR_end_index+0x1>
    e4f8:	8c b1       	in	r24, 0x0c	; 12
    e4fa:	e2 51       	subi	r30, 0x12	; 18
    e4fc:	f4 4f       	sbci	r31, 0xF4	; 244
    e4fe:	80 83       	st	Z, r24
    e500:	08 c0       	rjmp	.+16     	; 0xe512 <__vector_18+0x4e>
    e502:	e0 91 ec 0b 	lds	r30, 0x0BEC	; 0x800bec <ISR_end_index>
    e506:	f0 91 ed 0b 	lds	r31, 0x0BED	; 0x800bed <ISR_end_index+0x1>
    e50a:	8c b1       	in	r24, 0x0c	; 12
    e50c:	e2 51       	subi	r30, 0x12	; 18
    e50e:	f4 4f       	sbci	r31, 0xF4	; 244
    e510:	80 83       	st	Z, r24
    e512:	5f 99       	sbic	0x0b, 7	; 11
    e514:	f6 cf       	rjmp	.-20     	; 0xe502 <__vector_18+0x3e>
    e516:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <ISR_end_index>
    e51a:	90 91 ed 0b 	lds	r25, 0x0BED	; 0x800bed <ISR_end_index+0x1>
    e51e:	01 96       	adiw	r24, 0x01	; 1
    e520:	90 93 ed 0b 	sts	0x0BED, r25	; 0x800bed <ISR_end_index+0x1>
    e524:	80 93 ec 0b 	sts	0x0BEC, r24	; 0x800bec <ISR_end_index>
    e528:	ff 91       	pop	r31
    e52a:	ef 91       	pop	r30
    e52c:	9f 91       	pop	r25
    e52e:	8f 91       	pop	r24
    e530:	0f 90       	pop	r0
    e532:	0b be       	out	0x3b, r0	; 59
    e534:	0f 90       	pop	r0
    e536:	0f be       	out	0x3f, r0	; 63
    e538:	0f 90       	pop	r0
    e53a:	1f 90       	pop	r1
    e53c:	18 95       	reti

0000e53e <UART_init>:
    e53e:	0f 93       	push	r16
    e540:	1f 93       	push	r17
    e542:	8b 01       	movw	r16, r22
    e544:	9c 01       	movw	r18, r24
    e546:	41 11       	cpse	r20, r1
    e548:	14 c0       	rjmp	.+40     	; 0xe572 <UART_init+0x34>
    e54a:	81 b3       	in	r24, 0x11	; 17
    e54c:	88 60       	ori	r24, 0x08	; 8
    e54e:	81 bb       	out	0x11, r24	; 17
    e550:	60 e0       	ldi	r22, 0x00	; 0
    e552:	7c e8       	ldi	r23, 0x8C	; 140
    e554:	8a e0       	ldi	r24, 0x0A	; 10
    e556:	90 e0       	ldi	r25, 0x00	; 0
    e558:	a9 01       	movw	r20, r18
    e55a:	98 01       	movw	r18, r16
    e55c:	ff d1       	rcall	.+1022   	; 0xe95c <__udivmodsi4>
    e55e:	21 50       	subi	r18, 0x01	; 1
    e560:	20 93 99 00 	sts	0x0099, r18	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
    e564:	86 e0       	ldi	r24, 0x06	; 6
    e566:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
    e56a:	88 e1       	ldi	r24, 0x18	; 24
    e56c:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    e570:	13 c0       	rjmp	.+38     	; 0xe598 <UART_init+0x5a>
    e572:	41 30       	cpi	r20, 0x01	; 1
    e574:	89 f4       	brne	.+34     	; 0xe598 <UART_init+0x5a>
    e576:	82 b1       	in	r24, 0x02	; 2
    e578:	82 60       	ori	r24, 0x02	; 2
    e57a:	82 b9       	out	0x02, r24	; 2
    e57c:	60 e0       	ldi	r22, 0x00	; 0
    e57e:	7c e8       	ldi	r23, 0x8C	; 140
    e580:	8a e0       	ldi	r24, 0x0A	; 10
    e582:	90 e0       	ldi	r25, 0x00	; 0
    e584:	a9 01       	movw	r20, r18
    e586:	98 01       	movw	r18, r16
    e588:	e9 d1       	rcall	.+978    	; 0xe95c <__udivmodsi4>
    e58a:	21 50       	subi	r18, 0x01	; 1
    e58c:	29 b9       	out	0x09, r18	; 9
    e58e:	86 e0       	ldi	r24, 0x06	; 6
    e590:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
    e594:	88 e1       	ldi	r24, 0x18	; 24
    e596:	8a b9       	out	0x0a, r24	; 10
    e598:	1f 91       	pop	r17
    e59a:	0f 91       	pop	r16
    e59c:	08 95       	ret

0000e59e <UART0_change_BAUD>:
    e59e:	cf 92       	push	r12
    e5a0:	df 92       	push	r13
    e5a2:	ef 92       	push	r14
    e5a4:	ff 92       	push	r15
    e5a6:	9b 01       	movw	r18, r22
    e5a8:	ac 01       	movw	r20, r24
    e5aa:	20 38       	cpi	r18, 0x80	; 128
    e5ac:	85 e2       	ldi	r24, 0x25	; 37
    e5ae:	38 07       	cpc	r19, r24
    e5b0:	41 05       	cpc	r20, r1
    e5b2:	51 05       	cpc	r21, r1
    e5b4:	b9 f1       	breq	.+110    	; 0xe624 <UART0_change_BAUD+0x86>
    e5b6:	21 15       	cp	r18, r1
    e5b8:	82 ec       	ldi	r24, 0xC2	; 194
    e5ba:	38 07       	cpc	r19, r24
    e5bc:	81 e0       	ldi	r24, 0x01	; 1
    e5be:	48 07       	cpc	r20, r24
    e5c0:	51 05       	cpc	r21, r1
    e5c2:	a1 f1       	breq	.+104    	; 0xe62c <UART0_change_BAUD+0x8e>
    e5c4:	21 15       	cp	r18, r1
    e5c6:	80 e1       	ldi	r24, 0x10	; 16
    e5c8:	38 07       	cpc	r19, r24
    e5ca:	8e e0       	ldi	r24, 0x0E	; 14
    e5cc:	48 07       	cpc	r20, r24
    e5ce:	51 05       	cpc	r21, r1
    e5d0:	89 f1       	breq	.+98     	; 0xe634 <UART0_change_BAUD+0x96>
    e5d2:	21 15       	cp	r18, r1
    e5d4:	8b e4       	ldi	r24, 0x4B	; 75
    e5d6:	38 07       	cpc	r19, r24
    e5d8:	41 05       	cpc	r20, r1
    e5da:	51 05       	cpc	r21, r1
    e5dc:	79 f1       	breq	.+94     	; 0xe63c <UART0_change_BAUD+0x9e>
    e5de:	21 15       	cp	r18, r1
    e5e0:	86 e9       	ldi	r24, 0x96	; 150
    e5e2:	38 07       	cpc	r19, r24
    e5e4:	41 05       	cpc	r20, r1
    e5e6:	51 05       	cpc	r21, r1
    e5e8:	69 f1       	breq	.+90     	; 0xe644 <UART0_change_BAUD+0xa6>
    e5ea:	21 15       	cp	r18, r1
    e5ec:	81 ee       	ldi	r24, 0xE1	; 225
    e5ee:	38 07       	cpc	r19, r24
    e5f0:	41 05       	cpc	r20, r1
    e5f2:	51 05       	cpc	r21, r1
    e5f4:	59 f1       	breq	.+86     	; 0xe64c <UART0_change_BAUD+0xae>
    e5f6:	21 15       	cp	r18, r1
    e5f8:	84 e8       	ldi	r24, 0x84	; 132
    e5fa:	38 07       	cpc	r19, r24
    e5fc:	83 e0       	ldi	r24, 0x03	; 3
    e5fe:	48 07       	cpc	r20, r24
    e600:	51 05       	cpc	r21, r1
    e602:	41 f1       	breq	.+80     	; 0xe654 <UART0_change_BAUD+0xb6>
    e604:	21 15       	cp	r18, r1
    e606:	88 e0       	ldi	r24, 0x08	; 8
    e608:	38 07       	cpc	r19, r24
    e60a:	87 e0       	ldi	r24, 0x07	; 7
    e60c:	48 07       	cpc	r20, r24
    e60e:	51 05       	cpc	r21, r1
    e610:	29 f1       	breq	.+74     	; 0xe65c <UART0_change_BAUD+0xbe>
    e612:	0f 2e       	mov	r0, r31
    e614:	cc 24       	eor	r12, r12
    e616:	c3 94       	inc	r12
    e618:	d1 2c       	mov	r13, r1
    e61a:	e1 2c       	mov	r14, r1
    e61c:	f3 e0       	ldi	r31, 0x03	; 3
    e61e:	ff 2e       	mov	r15, r31
    e620:	f0 2d       	mov	r31, r0
    e622:	1f c0       	rjmp	.+62     	; 0xe662 <UART0_change_BAUD+0xc4>
    e624:	c1 2c       	mov	r12, r1
    e626:	d1 2c       	mov	r13, r1
    e628:	76 01       	movw	r14, r12
    e62a:	1b c0       	rjmp	.+54     	; 0xe662 <UART0_change_BAUD+0xc4>
    e62c:	c1 2c       	mov	r12, r1
    e62e:	d1 2c       	mov	r13, r1
    e630:	76 01       	movw	r14, r12
    e632:	17 c0       	rjmp	.+46     	; 0xe662 <UART0_change_BAUD+0xc4>
    e634:	c1 2c       	mov	r12, r1
    e636:	d1 2c       	mov	r13, r1
    e638:	76 01       	movw	r14, r12
    e63a:	13 c0       	rjmp	.+38     	; 0xe662 <UART0_change_BAUD+0xc4>
    e63c:	c1 2c       	mov	r12, r1
    e63e:	d1 2c       	mov	r13, r1
    e640:	76 01       	movw	r14, r12
    e642:	0f c0       	rjmp	.+30     	; 0xe662 <UART0_change_BAUD+0xc4>
    e644:	c1 2c       	mov	r12, r1
    e646:	d1 2c       	mov	r13, r1
    e648:	76 01       	movw	r14, r12
    e64a:	0b c0       	rjmp	.+22     	; 0xe662 <UART0_change_BAUD+0xc4>
    e64c:	c1 2c       	mov	r12, r1
    e64e:	d1 2c       	mov	r13, r1
    e650:	76 01       	movw	r14, r12
    e652:	07 c0       	rjmp	.+14     	; 0xe662 <UART0_change_BAUD+0xc4>
    e654:	c1 2c       	mov	r12, r1
    e656:	d1 2c       	mov	r13, r1
    e658:	76 01       	movw	r14, r12
    e65a:	03 c0       	rjmp	.+6      	; 0xe662 <UART0_change_BAUD+0xc4>
    e65c:	c1 2c       	mov	r12, r1
    e65e:	d1 2c       	mov	r13, r1
    e660:	76 01       	movw	r14, r12
    e662:	1a b8       	out	0x0a, r1	; 10
    e664:	60 e0       	ldi	r22, 0x00	; 0
    e666:	7c e8       	ldi	r23, 0x8C	; 140
    e668:	8a e0       	ldi	r24, 0x0A	; 10
    e66a:	90 e0       	ldi	r25, 0x00	; 0
    e66c:	77 d1       	rcall	.+750    	; 0xe95c <__udivmodsi4>
    e66e:	21 50       	subi	r18, 0x01	; 1
    e670:	29 b9       	out	0x09, r18	; 9
    e672:	88 e1       	ldi	r24, 0x18	; 24
    e674:	8a b9       	out	0x0a, r24	; 10
    e676:	c7 01       	movw	r24, r14
    e678:	b6 01       	movw	r22, r12
    e67a:	ff 90       	pop	r15
    e67c:	ef 90       	pop	r14
    e67e:	df 90       	pop	r13
    e680:	cf 90       	pop	r12
    e682:	08 95       	ret

0000e684 <UART0_SendMessage>:
 
TMR_Status UART0_SendMessage(const u8 *message, const u32 length, const u32 timeout_ms)
{
    e684:	8f 92       	push	r8
    e686:	9f 92       	push	r9
    e688:	af 92       	push	r10
    e68a:	bf 92       	push	r11
    e68c:	cf 92       	push	r12
    e68e:	df 92       	push	r13
    e690:	ef 92       	push	r14
    e692:	ff 92       	push	r15
    e694:	0f 93       	push	r16
    e696:	1f 93       	push	r17
    e698:	cf 93       	push	r28
    e69a:	df 93       	push	r29
    e69c:	ec 01       	movw	r28, r24
    e69e:	4a 01       	movw	r8, r20
    e6a0:	5b 01       	movw	r10, r22
    e6a2:	68 01       	movw	r12, r16
    e6a4:	79 01       	movw	r14, r18
	
	u32 i = (u32)0;
	TMR_Status result_status = TMR_SUCCESS;
	if(TIMER_NO_REASON == get_start_reason_timer(TIMER1))
    e6a6:	80 e0       	ldi	r24, 0x00	; 0
    e6a8:	01 df       	rcall	.-510    	; 0xe4ac <get_start_reason_timer>
    e6aa:	81 11       	cpse	r24, r1
    e6ac:	70 c0       	rjmp	.+224    	; 0xe78e <UART0_SendMessage+0x10a>
	{
		if((TIMER_IN_PROGRESS == get_timer_status(TIMER1)) || (TIMER_FINISHED == get_timer_status(TIMER1)))
    e6ae:	84 de       	rcall	.-760    	; 0xe3b8 <get_timer_status>
    e6b0:	81 30       	cpi	r24, 0x01	; 1
    e6b2:	21 f0       	breq	.+8      	; 0xe6bc <UART0_SendMessage+0x38>
    e6b4:	80 e0       	ldi	r24, 0x00	; 0
    e6b6:	80 de       	rcall	.-768    	; 0xe3b8 <get_timer_status>
    e6b8:	82 30       	cpi	r24, 0x02	; 2
    e6ba:	11 f4       	brne	.+4      	; 0xe6c0 <UART0_SendMessage+0x3c>
		{
			disable_timer(TIMER1);
    e6bc:	80 e0       	ldi	r24, 0x00	; 0
    e6be:	cd de       	rcall	.-614    	; 0xe45a <disable_timer>
    e6c0:	78 94       	sei
		}
		sei();
    e6c2:	8a b1       	in	r24, 0x0a	; 10
		UCSR0B |= ((u8)1U << (u8)RXCIE0);
    e6c4:	80 68       	ori	r24, 0x80	; 128
    e6c6:	8a b9       	out	0x0a, r24	; 10
		set_start_reason_timer(TIMER1, TIMER_UART0_TX);
    e6c8:	61 e0       	ldi	r22, 0x01	; 1
    e6ca:	80 e0       	ldi	r24, 0x00	; 0
    e6cc:	e5 de       	rcall	.-566    	; 0xe498 <set_start_reason_timer>
 		start_timer(TIMER1, timeout_ms);
    e6ce:	b7 01       	movw	r22, r14
    e6d0:	a6 01       	movw	r20, r12
    e6d2:	80 e0       	ldi	r24, 0x00	; 0
    e6d4:	65 de       	rcall	.-822    	; 0xe3a0 <start_timer>
    e6d6:	c1 2c       	mov	r12, r1
		for(i = (u32)0U; i <  length; i++)
    e6d8:	d1 2c       	mov	r13, r1
    e6da:	76 01       	movw	r14, r12
    e6dc:	23 c0       	rjmp	.+70     	; 0xe724 <UART0_SendMessage+0xa0>
		{
			/*Wait for buffer to become empty*/
			while(FALSE == UART0_isBufferEmpty()) 
    e6de:	5d 9b       	sbis	0x0b, 5	; 11
    e6e0:	fe cf       	rjmp	.-4      	; 0xe6de <UART0_SendMessage+0x5a>
					break;
				}*/
			} 
		
			/*Check if Buffer is finally empty*/
			if(FALSE != UART0_isBufferEmpty()) 
    e6e2:	5d 9b       	sbis	0x0b, 5	; 11
			{
				/*Firstly we have to check for timer*/
				if(TIMER_FINISHED == get_timer_status(TIMER1))
    e6e4:	1a c0       	rjmp	.+52     	; 0xe71a <UART0_SendMessage+0x96>
    e6e6:	80 e0       	ldi	r24, 0x00	; 0
    e6e8:	67 de       	rcall	.-818    	; 0xe3b8 <get_timer_status>
    e6ea:	82 30       	cpi	r24, 0x02	; 2
    e6ec:	41 f4       	brne	.+16     	; 0xe6fe <UART0_SendMessage+0x7a>
				{
					disable_timer(TIMER1);
    e6ee:	80 e0       	ldi	r24, 0x00	; 0
    e6f0:	b4 de       	rcall	.-664    	; 0xe45a <disable_timer>
    e6f2:	cc 24       	eor	r12, r12
					result_status = TMR_ERROR_TIMEOUT;
    e6f4:	c3 94       	inc	r12
    e6f6:	d1 2c       	mov	r13, r1
    e6f8:	e1 2c       	mov	r14, r1
    e6fa:	fc 2c       	mov	r15, r12
    e6fc:	1b c0       	rjmp	.+54     	; 0xe734 <UART0_SendMessage+0xb0>
					break;
    e6fe:	fe 01       	movw	r30, r28
				}
				else
				{
					UDR0 = (u8)message[i];
    e700:	ec 0d       	add	r30, r12
    e702:	fd 1d       	adc	r31, r13
    e704:	80 81       	ld	r24, Z
    e706:	8c b9       	out	0x0c, r24	; 12
    e708:	8b b1       	in	r24, 0x0b	; 11
					while(FALSE == UART0_isTxComplete()) /*Wait for current byte to be sent*/
    e70a:	80 76       	andi	r24, 0x60	; 96
    e70c:	e9 f3       	breq	.-6      	; 0xe708 <UART0_SendMessage+0x84>
    e70e:	8b b1       	in	r24, 0x0b	; 11
					{
						/*Do nothing*/
					}
					if(FALSE != UART0_isTxComplete())
    e710:	80 76       	andi	r24, 0x60	; 96
    e712:	19 f0       	breq	.+6      	; 0xe71a <UART0_SendMessage+0x96>
    e714:	8b b1       	in	r24, 0x0b	; 11
					{
						UCSR0A |= ((u8)1U << (u8)TXC0); /*Clear the TX Flag*/
    e716:	80 64       	ori	r24, 0x40	; 64
    e718:	8b b9       	out	0x0b, r24	; 11
    e71a:	8f ef       	ldi	r24, 0xFF	; 255
		}
		sei();
		UCSR0B |= ((u8)1U << (u8)RXCIE0);
		set_start_reason_timer(TIMER1, TIMER_UART0_TX);
 		start_timer(TIMER1, timeout_ms);
		for(i = (u32)0U; i <  length; i++)
    e71c:	c8 1a       	sub	r12, r24
    e71e:	d8 0a       	sbc	r13, r24
    e720:	e8 0a       	sbc	r14, r24
    e722:	f8 0a       	sbc	r15, r24
    e724:	c8 14       	cp	r12, r8
    e726:	d9 04       	cpc	r13, r9
    e728:	ea 04       	cpc	r14, r10
    e72a:	fb 04       	cpc	r15, r11
    e72c:	c0 f2       	brcs	.-80     	; 0xe6de <UART0_SendMessage+0x5a>
    e72e:	c1 2c       	mov	r12, r1
 
TMR_Status UART0_SendMessage(const u8 *message, const u32 length, const u32 timeout_ms)
{
	
	u32 i = (u32)0;
	TMR_Status result_status = TMR_SUCCESS;
    e730:	d1 2c       	mov	r13, r1
    e732:	76 01       	movw	r14, r12
    e734:	81 e0       	ldi	r24, 0x01	; 1
					}
				}
			}
		}
	
		if(TMR_ERROR_TIMEOUT != result_status)
    e736:	c8 16       	cp	r12, r24
    e738:	d1 04       	cpc	r13, r1
    e73a:	e1 04       	cpc	r14, r1
    e73c:	f8 06       	cpc	r15, r24
    e73e:	b1 f0       	breq	.+44     	; 0xe76c <UART0_SendMessage+0xe8>
    e740:	5c 99       	sbic	0x0b, 4	; 11
		{
			if(FALSE != UART0_isCommErrorDetected())
    e742:	05 c0       	rjmp	.+10     	; 0xe74e <UART0_SendMessage+0xca>
    e744:	5b 9b       	sbis	0x0b, 3	; 11
    e746:	06 c0       	rjmp	.+12     	; 0xe754 <UART0_SendMessage+0xd0>
    e748:	81 e0       	ldi	r24, 0x01	; 1
    e74a:	90 e0       	ldi	r25, 0x00	; 0
    e74c:	05 c0       	rjmp	.+10     	; 0xe758 <UART0_SendMessage+0xd4>
    e74e:	81 e0       	ldi	r24, 0x01	; 1
    e750:	90 e0       	ldi	r25, 0x00	; 0
    e752:	02 c0       	rjmp	.+4      	; 0xe758 <UART0_SendMessage+0xd4>
    e754:	80 e0       	ldi	r24, 0x00	; 0
    e756:	90 e0       	ldi	r25, 0x00	; 0
    e758:	89 2b       	or	r24, r25
    e75a:	41 f0       	breq	.+16     	; 0xe76c <UART0_SendMessage+0xe8>
    e75c:	0f 2e       	mov	r0, r31
			{
				result_status = TMR_ERROR_INVALID_VALUE;
    e75e:	f7 e1       	ldi	r31, 0x17	; 23
    e760:	cf 2e       	mov	r12, r31
    e762:	d1 2c       	mov	r13, r1
    e764:	e1 2c       	mov	r14, r1
    e766:	f3 e0       	ldi	r31, 0x03	; 3
    e768:	ff 2e       	mov	r15, r31
			}
		}
	
		if((TIMER_IN_PROGRESS == get_timer_status(TIMER1)) || (TIMER_FINISHED == get_timer_status(TIMER1)))
    e76a:	f0 2d       	mov	r31, r0
    e76c:	80 e0       	ldi	r24, 0x00	; 0
    e76e:	24 de       	rcall	.-952    	; 0xe3b8 <get_timer_status>
    e770:	81 30       	cpi	r24, 0x01	; 1
    e772:	21 f0       	breq	.+8      	; 0xe77c <UART0_SendMessage+0xf8>
    e774:	80 e0       	ldi	r24, 0x00	; 0
    e776:	20 de       	rcall	.-960    	; 0xe3b8 <get_timer_status>
    e778:	82 30       	cpi	r24, 0x02	; 2
    e77a:	11 f4       	brne	.+4      	; 0xe780 <UART0_SendMessage+0xfc>
		{
			disable_timer(TIMER1);
    e77c:	80 e0       	ldi	r24, 0x00	; 0
    e77e:	6d de       	rcall	.-806    	; 0xe45a <disable_timer>
    e780:	8b b1       	in	r24, 0x0b	; 11
		}
	
		if(FALSE != UART0_isTxComplete())
    e782:	80 76       	andi	r24, 0x60	; 96
    e784:	61 f0       	breq	.+24     	; 0xe79e <UART0_SendMessage+0x11a>
    e786:	8b b1       	in	r24, 0x0b	; 11
		{
			UCSR0A |= ((u8)1U << (u8)TXC0); /*Clear the TX Flag*/
    e788:	80 64       	ori	r24, 0x40	; 64
    e78a:	8b b9       	out	0x0b, r24	; 11
    e78c:	08 c0       	rjmp	.+16     	; 0xe79e <UART0_SendMessage+0x11a>
    e78e:	0f 2e       	mov	r0, r31
		}
	}
	else /*Timer reason not OK*/
	{
		result_status = TMR_ERROR_INVALID_VALUE;
    e790:	f7 e1       	ldi	r31, 0x17	; 23
    e792:	cf 2e       	mov	r12, r31
    e794:	d1 2c       	mov	r13, r1
    e796:	e1 2c       	mov	r14, r1
    e798:	f3 e0       	ldi	r31, 0x03	; 3
    e79a:	ff 2e       	mov	r15, r31
    e79c:	f0 2d       	mov	r31, r0
    e79e:	c7 01       	movw	r24, r14
		#ifdef DEBUG
		UART1_SendMessage_DEBUG("UART0_SendMessage: Timer1 must be deactivated first");
		#endif // DEBUG
	}
	return result_status;
}
    e7a0:	b6 01       	movw	r22, r12
    e7a2:	df 91       	pop	r29
    e7a4:	cf 91       	pop	r28
    e7a6:	1f 91       	pop	r17
    e7a8:	0f 91       	pop	r16
    e7aa:	ff 90       	pop	r15
    e7ac:	ef 90       	pop	r14
    e7ae:	df 90       	pop	r13
    e7b0:	cf 90       	pop	r12
    e7b2:	bf 90       	pop	r11
    e7b4:	af 90       	pop	r10
    e7b6:	9f 90       	pop	r9
    e7b8:	8f 90       	pop	r8
    e7ba:	08 95       	ret

0000e7bc <UART0_flush>:
    e7bc:	5d 9b       	sbis	0x0b, 5	; 11

void UART0_flush(void) {
	u8 tmp_buffer_dummy;
	
	/*Buffer is not empty, so we must clear it*/
	if(FALSE == UART0_isBufferEmpty())
    e7be:	02 c0       	rjmp	.+4      	; 0xe7c4 <UART0_flush+0x8>
    e7c0:	08 95       	ret
	{
		while((FALSE != UART0_isRxComplete()) || (FALSE == UART0_isBufferEmpty()))
		{
			tmp_buffer_dummy = (u8)UDR0; /*Reading buffer will eventually clear RXC0 flag*/
    e7c2:	8c b1       	in	r24, 0x0c	; 12
	u8 tmp_buffer_dummy;
	
	/*Buffer is not empty, so we must clear it*/
	if(FALSE == UART0_isBufferEmpty())
	{
		while((FALSE != UART0_isRxComplete()) || (FALSE == UART0_isBufferEmpty()))
    e7c4:	5f 99       	sbic	0x0b, 7	; 11
    e7c6:	fd cf       	rjmp	.-6      	; 0xe7c2 <UART0_flush+0x6>
    e7c8:	5d 9b       	sbis	0x0b, 5	; 11
    e7ca:	fb cf       	rjmp	.-10     	; 0xe7c2 <UART0_flush+0x6>
			tmp_buffer_dummy = (u8)UDR0; /*Reading buffer will eventually clear RXC0 flag*/
		}
		(void)tmp_buffer_dummy; /*Dummy code with no functional impact. This was added in order to erase unused parameter warning*/

		/*Disabling RX will clear the buffer. This was added for robustness*/
		UCSR0B = (u8)UCSR0B & (~((u8)1U << (u8)RXEN0)); /*Disable RX of UART0*/
    e7cc:	8a b1       	in	r24, 0x0a	; 10
    e7ce:	8f 7e       	andi	r24, 0xEF	; 239
    e7d0:	8a b9       	out	0x0a, r24	; 10
		UCSR0B = (u8)UCSR0B | ((u8)1U << (u8)RXEN0);/*Enable RX of UART0*/
    e7d2:	8a b1       	in	r24, 0x0a	; 10
    e7d4:	80 61       	ori	r24, 0x10	; 16
    e7d6:	8a b9       	out	0x0a, r24	; 10
    e7d8:	08 95       	ret

0000e7da <UART0_DeInit>:
	}
}
void UART0_DeInit(void) 
{
	UART0_flush();
    e7da:	f0 df       	rcall	.-32     	; 0xe7bc <UART0_flush>
	UCSR0B = (u8)0x00U; /*This will also disable RXEN and TXEN, so UART will be closed*/
    e7dc:	1a b8       	out	0x0a, r1	; 10
	UCSR0A = (u8)0x00U;
    e7de:	1b b8       	out	0x0b, r1	; 11
	UCSR0C = (u8)0x00U;
    e7e0:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
	
	/* Even if clearing baud was not necessary to disable UART, it's done for robustness. Init function will set it again*/
	UBRR0H = (u8)0x00U;
    e7e4:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = (u8)0x00U;
    e7e8:	19 b8       	out	0x09, r1	; 9
    e7ea:	08 95       	ret

0000e7ec <UART0_ReceiveMessage>:
	} 
	
	#endif
}

TMR_Status UART0_ReceiveMessage(u8* message, const u32 length, u32* messageLength, const u32 timeoutMs) {
    e7ec:	8f 92       	push	r8
    e7ee:	9f 92       	push	r9
    e7f0:	af 92       	push	r10
    e7f2:	bf 92       	push	r11
    e7f4:	cf 92       	push	r12
    e7f6:	df 92       	push	r13
    e7f8:	ef 92       	push	r14
    e7fa:	ff 92       	push	r15
    e7fc:	0f 93       	push	r16
    e7fe:	1f 93       	push	r17
    e800:	cf 93       	push	r28
    e802:	df 93       	push	r29
	TMR_Status result_status = TMR_SUCCESS;
	
	if((messageLength == NULL) || (message == NULL))
    e804:	21 15       	cp	r18, r1
    e806:	31 05       	cpc	r19, r1
    e808:	09 f4       	brne	.+2      	; 0xe80c <UART0_ReceiveMessage+0x20>
    e80a:	57 c0       	rjmp	.+174    	; 0xe8ba <UART0_ReceiveMessage+0xce>
    e80c:	00 97       	sbiw	r24, 0x00	; 0
    e80e:	09 f4       	brne	.+2      	; 0xe812 <UART0_ReceiveMessage+0x26>
    e810:	59 c0       	rjmp	.+178    	; 0xe8c4 <UART0_ReceiveMessage+0xd8>
    e812:	67 01       	movw	r12, r14
    e814:	78 01       	movw	r14, r16
    e816:	e9 01       	movw	r28, r18
    e818:	4a 01       	movw	r8, r20
    e81a:	5b 01       	movw	r10, r22
    e81c:	8c 01       	movw	r16, r24
		result_status = TMR_ERROR_INVALID_VALUE;
		#ifdef _DEBUG
		UART1_SendMessage_DEBUG("UART0_ReceiveMessage: Null argument");
		#endif // _DEBUG
	}
	else if(TIMER_NO_REASON == get_start_reason_timer(TIMER3))
    e81e:	81 e0       	ldi	r24, 0x01	; 1
    e820:	45 de       	rcall	.-886    	; 0xe4ac <get_start_reason_timer>
    e822:	81 11       	cpse	r24, r1
    e824:	54 c0       	rjmp	.+168    	; 0xe8ce <UART0_ReceiveMessage+0xe2>
	{
		set_start_reason_timer(TIMER3, TIMER_UART0_RX);
    e826:	62 e0       	ldi	r22, 0x02	; 2
    e828:	81 e0       	ldi	r24, 0x01	; 1
    e82a:	36 de       	rcall	.-916    	; 0xe498 <set_start_reason_timer>
		start_timer(TIMER3, timeoutMs);
    e82c:	b7 01       	movw	r22, r14
    e82e:	a6 01       	movw	r20, r12
    e830:	81 e0       	ldi	r24, 0x01	; 1
    e832:	b6 dd       	rcall	.-1172   	; 0xe3a0 <start_timer>
		
		while(TIMER_FINISHED != get_timer_status(TIMER3))
    e834:	12 c0       	rjmp	.+36     	; 0xe85a <UART0_ReceiveMessage+0x6e>
		{
			*messageLength = ISR_end_index;
    e836:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <ISR_end_index>
    e83a:	90 91 ed 0b 	lds	r25, 0x0BED	; 0x800bed <ISR_end_index+0x1>
    e83e:	a0 e0       	ldi	r26, 0x00	; 0
    e840:	b0 e0       	ldi	r27, 0x00	; 0
    e842:	88 83       	st	Y, r24
    e844:	99 83       	std	Y+1, r25	; 0x01
    e846:	aa 83       	std	Y+2, r26	; 0x02
    e848:	bb 83       	std	Y+3, r27	; 0x03
			if(*messageLength == length)
    e84a:	88 15       	cp	r24, r8
    e84c:	99 05       	cpc	r25, r9
    e84e:	aa 05       	cpc	r26, r10
    e850:	bb 05       	cpc	r27, r11
			{
				disable_timer(TIMER3);
    e852:	19 f4       	brne	.+6      	; 0xe85a <UART0_ReceiveMessage+0x6e>
    e854:	81 e0       	ldi	r24, 0x01	; 1
				break;
    e856:	01 de       	rcall	.-1022   	; 0xe45a <disable_timer>
	else if(TIMER_NO_REASON == get_start_reason_timer(TIMER3))
	{
		set_start_reason_timer(TIMER3, TIMER_UART0_RX);
		start_timer(TIMER3, timeoutMs);
		
		while(TIMER_FINISHED != get_timer_status(TIMER3))
    e858:	04 c0       	rjmp	.+8      	; 0xe862 <UART0_ReceiveMessage+0x76>
    e85a:	81 e0       	ldi	r24, 0x01	; 1
    e85c:	ad dd       	rcall	.-1190   	; 0xe3b8 <get_timer_status>
    e85e:	82 30       	cpi	r24, 0x02	; 2
    e860:	51 f7       	brne	.-44     	; 0xe836 <UART0_ReceiveMessage+0x4a>
				disable_timer(TIMER3);
				break;
			}
		}
		
		if(length == *messageLength)
    e862:	88 81       	ld	r24, Y
    e864:	99 81       	ldd	r25, Y+1	; 0x01
    e866:	aa 81       	ldd	r26, Y+2	; 0x02
    e868:	bb 81       	ldd	r27, Y+3	; 0x03
    e86a:	88 16       	cp	r8, r24
    e86c:	99 06       	cpc	r9, r25
    e86e:	aa 06       	cpc	r10, r26
    e870:	bb 06       	cpc	r11, r27
    e872:	89 f0       	breq	.+34     	; 0xe896 <UART0_ReceiveMessage+0xaa>
			}
			ISR_end_index = (u8)0U; /*Clear index of ISR buffer, for a new transmission*/
		}
		else
		{
			result_status = TMR_ERROR_TIMEOUT;
    e874:	61 e0       	ldi	r22, 0x01	; 1
    e876:	70 e0       	ldi	r23, 0x00	; 0
    e878:	80 e0       	ldi	r24, 0x00	; 0
    e87a:	91 e0       	ldi	r25, 0x01	; 1
    e87c:	2c c0       	rjmp	.+88     	; 0xe8d6 <UART0_ReceiveMessage+0xea>
		
		if(length == *messageLength)
		{
			for(u8 i = (u8)0U; i < length; i++)
			{
				message[i] = ISR_Buffer[i];
    e87e:	e8 2f       	mov	r30, r24
    e880:	f0 e0       	ldi	r31, 0x00	; 0
    e882:	d8 01       	movw	r26, r16
    e884:	ae 0f       	add	r26, r30
    e886:	bf 1f       	adc	r27, r31
    e888:	e2 51       	subi	r30, 0x12	; 18
    e88a:	f4 4f       	sbci	r31, 0xF4	; 244
    e88c:	90 81       	ld	r25, Z
    e88e:	9c 93       	st	X, r25
				ISR_Buffer[i] = (u8)0U; /*After setting value in Official buffer, reset it*/
    e890:	10 82       	st	Z, r1
			}
		}
		
		if(length == *messageLength)
		{
			for(u8 i = (u8)0U; i < length; i++)
    e892:	8f 5f       	subi	r24, 0xFF	; 255
    e894:	01 c0       	rjmp	.+2      	; 0xe898 <UART0_ReceiveMessage+0xac>
    e896:	80 e0       	ldi	r24, 0x00	; 0
    e898:	48 2f       	mov	r20, r24
    e89a:	50 e0       	ldi	r21, 0x00	; 0
    e89c:	60 e0       	ldi	r22, 0x00	; 0
    e89e:	70 e0       	ldi	r23, 0x00	; 0
    e8a0:	48 15       	cp	r20, r8
    e8a2:	59 05       	cpc	r21, r9
    e8a4:	6a 05       	cpc	r22, r10
    e8a6:	7b 05       	cpc	r23, r11
    e8a8:	50 f3       	brcs	.-44     	; 0xe87e <UART0_ReceiveMessage+0x92>
			{
				message[i] = ISR_Buffer[i];
				ISR_Buffer[i] = (u8)0U; /*After setting value in Official buffer, reset it*/
			}
			ISR_end_index = (u8)0U; /*Clear index of ISR buffer, for a new transmission*/
    e8aa:	10 92 ed 0b 	sts	0x0BED, r1	; 0x800bed <ISR_end_index+0x1>
    e8ae:	10 92 ec 0b 	sts	0x0BEC, r1	; 0x800bec <ISR_end_index>
	
	#endif
}

TMR_Status UART0_ReceiveMessage(u8* message, const u32 length, u32* messageLength, const u32 timeoutMs) {
	TMR_Status result_status = TMR_SUCCESS;
    e8b2:	60 e0       	ldi	r22, 0x00	; 0
    e8b4:	70 e0       	ldi	r23, 0x00	; 0
    e8b6:	cb 01       	movw	r24, r22
    e8b8:	0e c0       	rjmp	.+28     	; 0xe8d6 <UART0_ReceiveMessage+0xea>
	
	if((messageLength == NULL) || (message == NULL))
	{
		result_status = TMR_ERROR_INVALID_VALUE;
    e8ba:	67 e1       	ldi	r22, 0x17	; 23
    e8bc:	70 e0       	ldi	r23, 0x00	; 0
    e8be:	80 e0       	ldi	r24, 0x00	; 0
    e8c0:	93 e0       	ldi	r25, 0x03	; 3
    e8c2:	09 c0       	rjmp	.+18     	; 0xe8d6 <UART0_ReceiveMessage+0xea>
    e8c4:	67 e1       	ldi	r22, 0x17	; 23
    e8c6:	70 e0       	ldi	r23, 0x00	; 0
    e8c8:	80 e0       	ldi	r24, 0x00	; 0
    e8ca:	93 e0       	ldi	r25, 0x03	; 3
    e8cc:	04 c0       	rjmp	.+8      	; 0xe8d6 <UART0_ReceiveMessage+0xea>
			result_status = TMR_ERROR_TIMEOUT;
		}
	}
	else
	{
		result_status = TMR_ERROR_INVALID_VALUE;
    e8ce:	67 e1       	ldi	r22, 0x17	; 23
    e8d0:	70 e0       	ldi	r23, 0x00	; 0
    e8d2:	80 e0       	ldi	r24, 0x00	; 0
    e8d4:	93 e0       	ldi	r25, 0x03	; 3
		#ifdef DEBUG
		UART1_SendMessage_DEBUG("UART0_ReceiveMessage: Timer3 is in use");
		#endif // DEBUG
	}
	return result_status;
    e8d6:	df 91       	pop	r29
    e8d8:	cf 91       	pop	r28
    e8da:	1f 91       	pop	r17
    e8dc:	0f 91       	pop	r16
    e8de:	ff 90       	pop	r15
    e8e0:	ef 90       	pop	r14
    e8e2:	df 90       	pop	r13
    e8e4:	cf 90       	pop	r12
    e8e6:	bf 90       	pop	r11
    e8e8:	af 90       	pop	r10
    e8ea:	9f 90       	pop	r9
    e8ec:	8f 90       	pop	r8
    e8ee:	08 95       	ret

0000e8f0 <__mulsi3>:
    e8f0:	db 01       	movw	r26, r22
    e8f2:	8f 93       	push	r24
    e8f4:	9f 93       	push	r25
    e8f6:	5d d0       	rcall	.+186    	; 0xe9b2 <__muluhisi3>
    e8f8:	bf 91       	pop	r27
    e8fa:	af 91       	pop	r26
    e8fc:	a2 9f       	mul	r26, r18
    e8fe:	80 0d       	add	r24, r0
    e900:	91 1d       	adc	r25, r1
    e902:	a3 9f       	mul	r26, r19
    e904:	90 0d       	add	r25, r0
    e906:	b2 9f       	mul	r27, r18
    e908:	90 0d       	add	r25, r0
    e90a:	11 24       	eor	r1, r1
    e90c:	08 95       	ret

0000e90e <__udivmodhi4>:
    e90e:	aa 1b       	sub	r26, r26
    e910:	bb 1b       	sub	r27, r27
    e912:	51 e1       	ldi	r21, 0x11	; 17
    e914:	07 c0       	rjmp	.+14     	; 0xe924 <__udivmodhi4_ep>

0000e916 <__udivmodhi4_loop>:
    e916:	aa 1f       	adc	r26, r26
    e918:	bb 1f       	adc	r27, r27
    e91a:	a6 17       	cp	r26, r22
    e91c:	b7 07       	cpc	r27, r23
    e91e:	10 f0       	brcs	.+4      	; 0xe924 <__udivmodhi4_ep>
    e920:	a6 1b       	sub	r26, r22
    e922:	b7 0b       	sbc	r27, r23

0000e924 <__udivmodhi4_ep>:
    e924:	88 1f       	adc	r24, r24
    e926:	99 1f       	adc	r25, r25
    e928:	5a 95       	dec	r21
    e92a:	a9 f7       	brne	.-22     	; 0xe916 <__udivmodhi4_loop>
    e92c:	80 95       	com	r24
    e92e:	90 95       	com	r25
    e930:	bc 01       	movw	r22, r24
    e932:	cd 01       	movw	r24, r26
    e934:	08 95       	ret

0000e936 <__divmodhi4>:
    e936:	97 fb       	bst	r25, 7
    e938:	07 2e       	mov	r0, r23
    e93a:	16 f4       	brtc	.+4      	; 0xe940 <__divmodhi4+0xa>
    e93c:	00 94       	com	r0
    e93e:	06 d0       	rcall	.+12     	; 0xe94c <__divmodhi4_neg1>
    e940:	77 fd       	sbrc	r23, 7
    e942:	08 d0       	rcall	.+16     	; 0xe954 <__divmodhi4_neg2>
    e944:	e4 df       	rcall	.-56     	; 0xe90e <__udivmodhi4>
    e946:	07 fc       	sbrc	r0, 7
    e948:	05 d0       	rcall	.+10     	; 0xe954 <__divmodhi4_neg2>
    e94a:	3e f4       	brtc	.+14     	; 0xe95a <__divmodhi4_exit>

0000e94c <__divmodhi4_neg1>:
    e94c:	90 95       	com	r25
    e94e:	81 95       	neg	r24
    e950:	9f 4f       	sbci	r25, 0xFF	; 255
    e952:	08 95       	ret

0000e954 <__divmodhi4_neg2>:
    e954:	70 95       	com	r23
    e956:	61 95       	neg	r22
    e958:	7f 4f       	sbci	r23, 0xFF	; 255

0000e95a <__divmodhi4_exit>:
    e95a:	08 95       	ret

0000e95c <__udivmodsi4>:
    e95c:	a1 e2       	ldi	r26, 0x21	; 33
    e95e:	1a 2e       	mov	r1, r26
    e960:	aa 1b       	sub	r26, r26
    e962:	bb 1b       	sub	r27, r27
    e964:	fd 01       	movw	r30, r26
    e966:	0d c0       	rjmp	.+26     	; 0xe982 <__udivmodsi4_ep>

0000e968 <__udivmodsi4_loop>:
    e968:	aa 1f       	adc	r26, r26
    e96a:	bb 1f       	adc	r27, r27
    e96c:	ee 1f       	adc	r30, r30
    e96e:	ff 1f       	adc	r31, r31
    e970:	a2 17       	cp	r26, r18
    e972:	b3 07       	cpc	r27, r19
    e974:	e4 07       	cpc	r30, r20
    e976:	f5 07       	cpc	r31, r21
    e978:	20 f0       	brcs	.+8      	; 0xe982 <__udivmodsi4_ep>
    e97a:	a2 1b       	sub	r26, r18
    e97c:	b3 0b       	sbc	r27, r19
    e97e:	e4 0b       	sbc	r30, r20
    e980:	f5 0b       	sbc	r31, r21

0000e982 <__udivmodsi4_ep>:
    e982:	66 1f       	adc	r22, r22
    e984:	77 1f       	adc	r23, r23
    e986:	88 1f       	adc	r24, r24
    e988:	99 1f       	adc	r25, r25
    e98a:	1a 94       	dec	r1
    e98c:	69 f7       	brne	.-38     	; 0xe968 <__udivmodsi4_loop>
    e98e:	60 95       	com	r22
    e990:	70 95       	com	r23
    e992:	80 95       	com	r24
    e994:	90 95       	com	r25
    e996:	9b 01       	movw	r18, r22
    e998:	ac 01       	movw	r20, r24
    e99a:	bd 01       	movw	r22, r26
    e99c:	cf 01       	movw	r24, r30
    e99e:	08 95       	ret

0000e9a0 <__tablejump2__>:
    e9a0:	ee 0f       	add	r30, r30
    e9a2:	ff 1f       	adc	r31, r31
    e9a4:	00 24       	eor	r0, r0
    e9a6:	00 1c       	adc	r0, r0
    e9a8:	0b be       	out	0x3b, r0	; 59
    e9aa:	07 90       	elpm	r0, Z+
    e9ac:	f6 91       	elpm	r31, Z
    e9ae:	e0 2d       	mov	r30, r0
    e9b0:	09 94       	ijmp

0000e9b2 <__muluhisi3>:
    e9b2:	5e d0       	rcall	.+188    	; 0xea70 <__umulhisi3>
    e9b4:	a5 9f       	mul	r26, r21
    e9b6:	90 0d       	add	r25, r0
    e9b8:	b4 9f       	mul	r27, r20
    e9ba:	90 0d       	add	r25, r0
    e9bc:	a4 9f       	mul	r26, r20
    e9be:	80 0d       	add	r24, r0
    e9c0:	91 1d       	adc	r25, r1
    e9c2:	11 24       	eor	r1, r1
    e9c4:	08 95       	ret

0000e9c6 <__ashldi3>:
    e9c6:	0f 93       	push	r16
    e9c8:	08 30       	cpi	r16, 0x08	; 8
    e9ca:	90 f0       	brcs	.+36     	; 0xe9f0 <__ashldi3+0x2a>
    e9cc:	98 2f       	mov	r25, r24
    e9ce:	87 2f       	mov	r24, r23
    e9d0:	76 2f       	mov	r23, r22
    e9d2:	65 2f       	mov	r22, r21
    e9d4:	54 2f       	mov	r21, r20
    e9d6:	43 2f       	mov	r20, r19
    e9d8:	32 2f       	mov	r19, r18
    e9da:	22 27       	eor	r18, r18
    e9dc:	08 50       	subi	r16, 0x08	; 8
    e9de:	f4 cf       	rjmp	.-24     	; 0xe9c8 <__ashldi3+0x2>
    e9e0:	22 0f       	add	r18, r18
    e9e2:	33 1f       	adc	r19, r19
    e9e4:	44 1f       	adc	r20, r20
    e9e6:	55 1f       	adc	r21, r21
    e9e8:	66 1f       	adc	r22, r22
    e9ea:	77 1f       	adc	r23, r23
    e9ec:	88 1f       	adc	r24, r24
    e9ee:	99 1f       	adc	r25, r25
    e9f0:	0a 95       	dec	r16
    e9f2:	b2 f7       	brpl	.-20     	; 0xe9e0 <__ashldi3+0x1a>
    e9f4:	0f 91       	pop	r16
    e9f6:	08 95       	ret

0000e9f8 <__ashrdi3>:
    e9f8:	97 fb       	bst	r25, 7
    e9fa:	10 f8       	bld	r1, 0

0000e9fc <__lshrdi3>:
    e9fc:	16 94       	lsr	r1
    e9fe:	00 08       	sbc	r0, r0
    ea00:	0f 93       	push	r16
    ea02:	08 30       	cpi	r16, 0x08	; 8
    ea04:	98 f0       	brcs	.+38     	; 0xea2c <__lshrdi3+0x30>
    ea06:	08 50       	subi	r16, 0x08	; 8
    ea08:	23 2f       	mov	r18, r19
    ea0a:	34 2f       	mov	r19, r20
    ea0c:	45 2f       	mov	r20, r21
    ea0e:	56 2f       	mov	r21, r22
    ea10:	67 2f       	mov	r22, r23
    ea12:	78 2f       	mov	r23, r24
    ea14:	89 2f       	mov	r24, r25
    ea16:	90 2d       	mov	r25, r0
    ea18:	f4 cf       	rjmp	.-24     	; 0xea02 <__lshrdi3+0x6>
    ea1a:	05 94       	asr	r0
    ea1c:	97 95       	ror	r25
    ea1e:	87 95       	ror	r24
    ea20:	77 95       	ror	r23
    ea22:	67 95       	ror	r22
    ea24:	57 95       	ror	r21
    ea26:	47 95       	ror	r20
    ea28:	37 95       	ror	r19
    ea2a:	27 95       	ror	r18
    ea2c:	0a 95       	dec	r16
    ea2e:	aa f7       	brpl	.-22     	; 0xea1a <__lshrdi3+0x1e>
    ea30:	0f 91       	pop	r16
    ea32:	08 95       	ret

0000ea34 <__subdi3>:
    ea34:	2a 19       	sub	r18, r10
    ea36:	3b 09       	sbc	r19, r11
    ea38:	4c 09       	sbc	r20, r12
    ea3a:	5d 09       	sbc	r21, r13
    ea3c:	6e 09       	sbc	r22, r14
    ea3e:	7f 09       	sbc	r23, r15
    ea40:	80 0b       	sbc	r24, r16
    ea42:	91 0b       	sbc	r25, r17
    ea44:	08 95       	ret

0000ea46 <__cmpdi2>:
    ea46:	2a 15       	cp	r18, r10
    ea48:	3b 05       	cpc	r19, r11
    ea4a:	4c 05       	cpc	r20, r12
    ea4c:	5d 05       	cpc	r21, r13
    ea4e:	6e 05       	cpc	r22, r14
    ea50:	7f 05       	cpc	r23, r15
    ea52:	80 07       	cpc	r24, r16
    ea54:	91 07       	cpc	r25, r17
    ea56:	08 95       	ret

0000ea58 <__cmpdi2_s8>:
    ea58:	00 24       	eor	r0, r0
    ea5a:	a7 fd       	sbrc	r26, 7
    ea5c:	00 94       	com	r0
    ea5e:	2a 17       	cp	r18, r26
    ea60:	30 05       	cpc	r19, r0
    ea62:	40 05       	cpc	r20, r0
    ea64:	50 05       	cpc	r21, r0
    ea66:	60 05       	cpc	r22, r0
    ea68:	70 05       	cpc	r23, r0
    ea6a:	80 05       	cpc	r24, r0
    ea6c:	90 05       	cpc	r25, r0
    ea6e:	08 95       	ret

0000ea70 <__umulhisi3>:
    ea70:	a2 9f       	mul	r26, r18
    ea72:	b0 01       	movw	r22, r0
    ea74:	b3 9f       	mul	r27, r19
    ea76:	c0 01       	movw	r24, r0
    ea78:	a3 9f       	mul	r26, r19
    ea7a:	70 0d       	add	r23, r0
    ea7c:	81 1d       	adc	r24, r1
    ea7e:	11 24       	eor	r1, r1
    ea80:	91 1d       	adc	r25, r1
    ea82:	b2 9f       	mul	r27, r18
    ea84:	70 0d       	add	r23, r0
    ea86:	81 1d       	adc	r24, r1
    ea88:	11 24       	eor	r1, r1
    ea8a:	91 1d       	adc	r25, r1
    ea8c:	08 95       	ret

0000ea8e <memcpy>:
    ea8e:	fb 01       	movw	r30, r22
    ea90:	dc 01       	movw	r26, r24
    ea92:	02 c0       	rjmp	.+4      	; 0xea98 <memcpy+0xa>
    ea94:	01 90       	ld	r0, Z+
    ea96:	0d 92       	st	X+, r0
    ea98:	41 50       	subi	r20, 0x01	; 1
    ea9a:	50 40       	sbci	r21, 0x00	; 0
    ea9c:	d8 f7       	brcc	.-10     	; 0xea94 <memcpy+0x6>
    ea9e:	08 95       	ret

0000eaa0 <memmove>:
    eaa0:	68 17       	cp	r22, r24
    eaa2:	79 07       	cpc	r23, r25
    eaa4:	68 f4       	brcc	.+26     	; 0xeac0 <memmove+0x20>
    eaa6:	fb 01       	movw	r30, r22
    eaa8:	dc 01       	movw	r26, r24
    eaaa:	e4 0f       	add	r30, r20
    eaac:	f5 1f       	adc	r31, r21
    eaae:	a4 0f       	add	r26, r20
    eab0:	b5 1f       	adc	r27, r21
    eab2:	02 c0       	rjmp	.+4      	; 0xeab8 <memmove+0x18>
    eab4:	02 90       	ld	r0, -Z
    eab6:	0e 92       	st	-X, r0
    eab8:	41 50       	subi	r20, 0x01	; 1
    eaba:	50 40       	sbci	r21, 0x00	; 0
    eabc:	d8 f7       	brcc	.-10     	; 0xeab4 <memmove+0x14>
    eabe:	08 95       	ret
    eac0:	e6 cf       	rjmp	.-52     	; 0xea8e <memcpy>

0000eac2 <strcpy>:
    eac2:	fb 01       	movw	r30, r22
    eac4:	dc 01       	movw	r26, r24
    eac6:	01 90       	ld	r0, Z+
    eac8:	0d 92       	st	X+, r0
    eaca:	00 20       	and	r0, r0
    eacc:	e1 f7       	brne	.-8      	; 0xeac6 <strcpy+0x4>
    eace:	08 95       	ret

0000ead0 <sprintf>:
    ead0:	0f 93       	push	r16
    ead2:	1f 93       	push	r17
    ead4:	cf 93       	push	r28
    ead6:	df 93       	push	r29
    ead8:	cd b7       	in	r28, 0x3d	; 61
    eada:	de b7       	in	r29, 0x3e	; 62
    eadc:	2e 97       	sbiw	r28, 0x0e	; 14
    eade:	0f b6       	in	r0, 0x3f	; 63
    eae0:	f8 94       	cli
    eae2:	de bf       	out	0x3e, r29	; 62
    eae4:	0f be       	out	0x3f, r0	; 63
    eae6:	cd bf       	out	0x3d, r28	; 61
    eae8:	0d 89       	ldd	r16, Y+21	; 0x15
    eaea:	1e 89       	ldd	r17, Y+22	; 0x16
    eaec:	86 e0       	ldi	r24, 0x06	; 6
    eaee:	8c 83       	std	Y+4, r24	; 0x04
    eaf0:	1a 83       	std	Y+2, r17	; 0x02
    eaf2:	09 83       	std	Y+1, r16	; 0x01
    eaf4:	8f ef       	ldi	r24, 0xFF	; 255
    eaf6:	9f e7       	ldi	r25, 0x7F	; 127
    eaf8:	9e 83       	std	Y+6, r25	; 0x06
    eafa:	8d 83       	std	Y+5, r24	; 0x05
    eafc:	ae 01       	movw	r20, r28
    eafe:	47 5e       	subi	r20, 0xE7	; 231
    eb00:	5f 4f       	sbci	r21, 0xFF	; 255
    eb02:	6f 89       	ldd	r22, Y+23	; 0x17
    eb04:	78 8d       	ldd	r23, Y+24	; 0x18
    eb06:	ce 01       	movw	r24, r28
    eb08:	01 96       	adiw	r24, 0x01	; 1
    eb0a:	10 d0       	rcall	.+32     	; 0xeb2c <vfprintf>
    eb0c:	ef 81       	ldd	r30, Y+7	; 0x07
    eb0e:	f8 85       	ldd	r31, Y+8	; 0x08
    eb10:	e0 0f       	add	r30, r16
    eb12:	f1 1f       	adc	r31, r17
    eb14:	10 82       	st	Z, r1
    eb16:	2e 96       	adiw	r28, 0x0e	; 14
    eb18:	0f b6       	in	r0, 0x3f	; 63
    eb1a:	f8 94       	cli
    eb1c:	de bf       	out	0x3e, r29	; 62
    eb1e:	0f be       	out	0x3f, r0	; 63
    eb20:	cd bf       	out	0x3d, r28	; 61
    eb22:	df 91       	pop	r29
    eb24:	cf 91       	pop	r28
    eb26:	1f 91       	pop	r17
    eb28:	0f 91       	pop	r16
    eb2a:	08 95       	ret

0000eb2c <vfprintf>:
    eb2c:	2f 92       	push	r2
    eb2e:	3f 92       	push	r3
    eb30:	4f 92       	push	r4
    eb32:	5f 92       	push	r5
    eb34:	6f 92       	push	r6
    eb36:	7f 92       	push	r7
    eb38:	8f 92       	push	r8
    eb3a:	9f 92       	push	r9
    eb3c:	af 92       	push	r10
    eb3e:	bf 92       	push	r11
    eb40:	cf 92       	push	r12
    eb42:	df 92       	push	r13
    eb44:	ef 92       	push	r14
    eb46:	ff 92       	push	r15
    eb48:	0f 93       	push	r16
    eb4a:	1f 93       	push	r17
    eb4c:	cf 93       	push	r28
    eb4e:	df 93       	push	r29
    eb50:	cd b7       	in	r28, 0x3d	; 61
    eb52:	de b7       	in	r29, 0x3e	; 62
    eb54:	2b 97       	sbiw	r28, 0x0b	; 11
    eb56:	0f b6       	in	r0, 0x3f	; 63
    eb58:	f8 94       	cli
    eb5a:	de bf       	out	0x3e, r29	; 62
    eb5c:	0f be       	out	0x3f, r0	; 63
    eb5e:	cd bf       	out	0x3d, r28	; 61
    eb60:	6c 01       	movw	r12, r24
    eb62:	7b 01       	movw	r14, r22
    eb64:	8a 01       	movw	r16, r20
    eb66:	fc 01       	movw	r30, r24
    eb68:	17 82       	std	Z+7, r1	; 0x07
    eb6a:	16 82       	std	Z+6, r1	; 0x06
    eb6c:	83 81       	ldd	r24, Z+3	; 0x03
    eb6e:	81 ff       	sbrs	r24, 1
    eb70:	bf c1       	rjmp	.+894    	; 0xeef0 <vfprintf+0x3c4>
    eb72:	ce 01       	movw	r24, r28
    eb74:	01 96       	adiw	r24, 0x01	; 1
    eb76:	3c 01       	movw	r6, r24
    eb78:	f6 01       	movw	r30, r12
    eb7a:	93 81       	ldd	r25, Z+3	; 0x03
    eb7c:	f7 01       	movw	r30, r14
    eb7e:	93 fd       	sbrc	r25, 3
    eb80:	85 91       	lpm	r24, Z+
    eb82:	93 ff       	sbrs	r25, 3
    eb84:	81 91       	ld	r24, Z+
    eb86:	7f 01       	movw	r14, r30
    eb88:	88 23       	and	r24, r24
    eb8a:	09 f4       	brne	.+2      	; 0xeb8e <vfprintf+0x62>
    eb8c:	ad c1       	rjmp	.+858    	; 0xeee8 <vfprintf+0x3bc>
    eb8e:	85 32       	cpi	r24, 0x25	; 37
    eb90:	39 f4       	brne	.+14     	; 0xeba0 <vfprintf+0x74>
    eb92:	93 fd       	sbrc	r25, 3
    eb94:	85 91       	lpm	r24, Z+
    eb96:	93 ff       	sbrs	r25, 3
    eb98:	81 91       	ld	r24, Z+
    eb9a:	7f 01       	movw	r14, r30
    eb9c:	85 32       	cpi	r24, 0x25	; 37
    eb9e:	21 f4       	brne	.+8      	; 0xeba8 <vfprintf+0x7c>
    eba0:	b6 01       	movw	r22, r12
    eba2:	90 e0       	ldi	r25, 0x00	; 0
    eba4:	d6 d1       	rcall	.+940    	; 0xef52 <fputc>
    eba6:	e8 cf       	rjmp	.-48     	; 0xeb78 <vfprintf+0x4c>
    eba8:	91 2c       	mov	r9, r1
    ebaa:	21 2c       	mov	r2, r1
    ebac:	31 2c       	mov	r3, r1
    ebae:	ff e1       	ldi	r31, 0x1F	; 31
    ebb0:	f3 15       	cp	r31, r3
    ebb2:	d8 f0       	brcs	.+54     	; 0xebea <vfprintf+0xbe>
    ebb4:	8b 32       	cpi	r24, 0x2B	; 43
    ebb6:	79 f0       	breq	.+30     	; 0xebd6 <vfprintf+0xaa>
    ebb8:	38 f4       	brcc	.+14     	; 0xebc8 <vfprintf+0x9c>
    ebba:	80 32       	cpi	r24, 0x20	; 32
    ebbc:	79 f0       	breq	.+30     	; 0xebdc <vfprintf+0xb0>
    ebbe:	83 32       	cpi	r24, 0x23	; 35
    ebc0:	a1 f4       	brne	.+40     	; 0xebea <vfprintf+0xbe>
    ebc2:	23 2d       	mov	r18, r3
    ebc4:	20 61       	ori	r18, 0x10	; 16
    ebc6:	1d c0       	rjmp	.+58     	; 0xec02 <vfprintf+0xd6>
    ebc8:	8d 32       	cpi	r24, 0x2D	; 45
    ebca:	61 f0       	breq	.+24     	; 0xebe4 <vfprintf+0xb8>
    ebcc:	80 33       	cpi	r24, 0x30	; 48
    ebce:	69 f4       	brne	.+26     	; 0xebea <vfprintf+0xbe>
    ebd0:	23 2d       	mov	r18, r3
    ebd2:	21 60       	ori	r18, 0x01	; 1
    ebd4:	16 c0       	rjmp	.+44     	; 0xec02 <vfprintf+0xd6>
    ebd6:	83 2d       	mov	r24, r3
    ebd8:	82 60       	ori	r24, 0x02	; 2
    ebda:	38 2e       	mov	r3, r24
    ebdc:	e3 2d       	mov	r30, r3
    ebde:	e4 60       	ori	r30, 0x04	; 4
    ebe0:	3e 2e       	mov	r3, r30
    ebe2:	2a c0       	rjmp	.+84     	; 0xec38 <vfprintf+0x10c>
    ebe4:	f3 2d       	mov	r31, r3
    ebe6:	f8 60       	ori	r31, 0x08	; 8
    ebe8:	1d c0       	rjmp	.+58     	; 0xec24 <vfprintf+0xf8>
    ebea:	37 fc       	sbrc	r3, 7
    ebec:	2d c0       	rjmp	.+90     	; 0xec48 <vfprintf+0x11c>
    ebee:	20 ed       	ldi	r18, 0xD0	; 208
    ebf0:	28 0f       	add	r18, r24
    ebf2:	2a 30       	cpi	r18, 0x0A	; 10
    ebf4:	40 f0       	brcs	.+16     	; 0xec06 <vfprintf+0xda>
    ebf6:	8e 32       	cpi	r24, 0x2E	; 46
    ebf8:	b9 f4       	brne	.+46     	; 0xec28 <vfprintf+0xfc>
    ebfa:	36 fc       	sbrc	r3, 6
    ebfc:	75 c1       	rjmp	.+746    	; 0xeee8 <vfprintf+0x3bc>
    ebfe:	23 2d       	mov	r18, r3
    ec00:	20 64       	ori	r18, 0x40	; 64
    ec02:	32 2e       	mov	r3, r18
    ec04:	19 c0       	rjmp	.+50     	; 0xec38 <vfprintf+0x10c>
    ec06:	36 fe       	sbrs	r3, 6
    ec08:	06 c0       	rjmp	.+12     	; 0xec16 <vfprintf+0xea>
    ec0a:	8a e0       	ldi	r24, 0x0A	; 10
    ec0c:	98 9e       	mul	r9, r24
    ec0e:	20 0d       	add	r18, r0
    ec10:	11 24       	eor	r1, r1
    ec12:	92 2e       	mov	r9, r18
    ec14:	11 c0       	rjmp	.+34     	; 0xec38 <vfprintf+0x10c>
    ec16:	ea e0       	ldi	r30, 0x0A	; 10
    ec18:	2e 9e       	mul	r2, r30
    ec1a:	20 0d       	add	r18, r0
    ec1c:	11 24       	eor	r1, r1
    ec1e:	22 2e       	mov	r2, r18
    ec20:	f3 2d       	mov	r31, r3
    ec22:	f0 62       	ori	r31, 0x20	; 32
    ec24:	3f 2e       	mov	r3, r31
    ec26:	08 c0       	rjmp	.+16     	; 0xec38 <vfprintf+0x10c>
    ec28:	8c 36       	cpi	r24, 0x6C	; 108
    ec2a:	21 f4       	brne	.+8      	; 0xec34 <vfprintf+0x108>
    ec2c:	83 2d       	mov	r24, r3
    ec2e:	80 68       	ori	r24, 0x80	; 128
    ec30:	38 2e       	mov	r3, r24
    ec32:	02 c0       	rjmp	.+4      	; 0xec38 <vfprintf+0x10c>
    ec34:	88 36       	cpi	r24, 0x68	; 104
    ec36:	41 f4       	brne	.+16     	; 0xec48 <vfprintf+0x11c>
    ec38:	f7 01       	movw	r30, r14
    ec3a:	93 fd       	sbrc	r25, 3
    ec3c:	85 91       	lpm	r24, Z+
    ec3e:	93 ff       	sbrs	r25, 3
    ec40:	81 91       	ld	r24, Z+
    ec42:	7f 01       	movw	r14, r30
    ec44:	81 11       	cpse	r24, r1
    ec46:	b3 cf       	rjmp	.-154    	; 0xebae <vfprintf+0x82>
    ec48:	98 2f       	mov	r25, r24
    ec4a:	9f 7d       	andi	r25, 0xDF	; 223
    ec4c:	95 54       	subi	r25, 0x45	; 69
    ec4e:	93 30       	cpi	r25, 0x03	; 3
    ec50:	28 f4       	brcc	.+10     	; 0xec5c <vfprintf+0x130>
    ec52:	0c 5f       	subi	r16, 0xFC	; 252
    ec54:	1f 4f       	sbci	r17, 0xFF	; 255
    ec56:	9f e3       	ldi	r25, 0x3F	; 63
    ec58:	99 83       	std	Y+1, r25	; 0x01
    ec5a:	0d c0       	rjmp	.+26     	; 0xec76 <vfprintf+0x14a>
    ec5c:	83 36       	cpi	r24, 0x63	; 99
    ec5e:	31 f0       	breq	.+12     	; 0xec6c <vfprintf+0x140>
    ec60:	83 37       	cpi	r24, 0x73	; 115
    ec62:	71 f0       	breq	.+28     	; 0xec80 <vfprintf+0x154>
    ec64:	83 35       	cpi	r24, 0x53	; 83
    ec66:	09 f0       	breq	.+2      	; 0xec6a <vfprintf+0x13e>
    ec68:	55 c0       	rjmp	.+170    	; 0xed14 <vfprintf+0x1e8>
    ec6a:	20 c0       	rjmp	.+64     	; 0xecac <vfprintf+0x180>
    ec6c:	f8 01       	movw	r30, r16
    ec6e:	80 81       	ld	r24, Z
    ec70:	89 83       	std	Y+1, r24	; 0x01
    ec72:	0e 5f       	subi	r16, 0xFE	; 254
    ec74:	1f 4f       	sbci	r17, 0xFF	; 255
    ec76:	88 24       	eor	r8, r8
    ec78:	83 94       	inc	r8
    ec7a:	91 2c       	mov	r9, r1
    ec7c:	53 01       	movw	r10, r6
    ec7e:	12 c0       	rjmp	.+36     	; 0xeca4 <vfprintf+0x178>
    ec80:	28 01       	movw	r4, r16
    ec82:	f2 e0       	ldi	r31, 0x02	; 2
    ec84:	4f 0e       	add	r4, r31
    ec86:	51 1c       	adc	r5, r1
    ec88:	f8 01       	movw	r30, r16
    ec8a:	a0 80       	ld	r10, Z
    ec8c:	b1 80       	ldd	r11, Z+1	; 0x01
    ec8e:	36 fe       	sbrs	r3, 6
    ec90:	03 c0       	rjmp	.+6      	; 0xec98 <vfprintf+0x16c>
    ec92:	69 2d       	mov	r22, r9
    ec94:	70 e0       	ldi	r23, 0x00	; 0
    ec96:	02 c0       	rjmp	.+4      	; 0xec9c <vfprintf+0x170>
    ec98:	6f ef       	ldi	r22, 0xFF	; 255
    ec9a:	7f ef       	ldi	r23, 0xFF	; 255
    ec9c:	c5 01       	movw	r24, r10
    ec9e:	4e d1       	rcall	.+668    	; 0xef3c <strnlen>
    eca0:	4c 01       	movw	r8, r24
    eca2:	82 01       	movw	r16, r4
    eca4:	f3 2d       	mov	r31, r3
    eca6:	ff 77       	andi	r31, 0x7F	; 127
    eca8:	3f 2e       	mov	r3, r31
    ecaa:	15 c0       	rjmp	.+42     	; 0xecd6 <vfprintf+0x1aa>
    ecac:	28 01       	movw	r4, r16
    ecae:	22 e0       	ldi	r18, 0x02	; 2
    ecb0:	42 0e       	add	r4, r18
    ecb2:	51 1c       	adc	r5, r1
    ecb4:	f8 01       	movw	r30, r16
    ecb6:	a0 80       	ld	r10, Z
    ecb8:	b1 80       	ldd	r11, Z+1	; 0x01
    ecba:	36 fe       	sbrs	r3, 6
    ecbc:	03 c0       	rjmp	.+6      	; 0xecc4 <vfprintf+0x198>
    ecbe:	69 2d       	mov	r22, r9
    ecc0:	70 e0       	ldi	r23, 0x00	; 0
    ecc2:	02 c0       	rjmp	.+4      	; 0xecc8 <vfprintf+0x19c>
    ecc4:	6f ef       	ldi	r22, 0xFF	; 255
    ecc6:	7f ef       	ldi	r23, 0xFF	; 255
    ecc8:	c5 01       	movw	r24, r10
    ecca:	2d d1       	rcall	.+602    	; 0xef26 <strnlen_P>
    eccc:	4c 01       	movw	r8, r24
    ecce:	f3 2d       	mov	r31, r3
    ecd0:	f0 68       	ori	r31, 0x80	; 128
    ecd2:	3f 2e       	mov	r3, r31
    ecd4:	82 01       	movw	r16, r4
    ecd6:	33 fc       	sbrc	r3, 3
    ecd8:	19 c0       	rjmp	.+50     	; 0xed0c <vfprintf+0x1e0>
    ecda:	82 2d       	mov	r24, r2
    ecdc:	90 e0       	ldi	r25, 0x00	; 0
    ecde:	88 16       	cp	r8, r24
    ece0:	99 06       	cpc	r9, r25
    ece2:	a0 f4       	brcc	.+40     	; 0xed0c <vfprintf+0x1e0>
    ece4:	b6 01       	movw	r22, r12
    ece6:	80 e2       	ldi	r24, 0x20	; 32
    ece8:	90 e0       	ldi	r25, 0x00	; 0
    ecea:	33 d1       	rcall	.+614    	; 0xef52 <fputc>
    ecec:	2a 94       	dec	r2
    ecee:	f5 cf       	rjmp	.-22     	; 0xecda <vfprintf+0x1ae>
    ecf0:	f5 01       	movw	r30, r10
    ecf2:	37 fc       	sbrc	r3, 7
    ecf4:	85 91       	lpm	r24, Z+
    ecf6:	37 fe       	sbrs	r3, 7
    ecf8:	81 91       	ld	r24, Z+
    ecfa:	5f 01       	movw	r10, r30
    ecfc:	b6 01       	movw	r22, r12
    ecfe:	90 e0       	ldi	r25, 0x00	; 0
    ed00:	28 d1       	rcall	.+592    	; 0xef52 <fputc>
    ed02:	21 10       	cpse	r2, r1
    ed04:	2a 94       	dec	r2
    ed06:	21 e0       	ldi	r18, 0x01	; 1
    ed08:	82 1a       	sub	r8, r18
    ed0a:	91 08       	sbc	r9, r1
    ed0c:	81 14       	cp	r8, r1
    ed0e:	91 04       	cpc	r9, r1
    ed10:	79 f7       	brne	.-34     	; 0xecf0 <vfprintf+0x1c4>
    ed12:	e1 c0       	rjmp	.+450    	; 0xeed6 <vfprintf+0x3aa>
    ed14:	84 36       	cpi	r24, 0x64	; 100
    ed16:	11 f0       	breq	.+4      	; 0xed1c <vfprintf+0x1f0>
    ed18:	89 36       	cpi	r24, 0x69	; 105
    ed1a:	39 f5       	brne	.+78     	; 0xed6a <vfprintf+0x23e>
    ed1c:	f8 01       	movw	r30, r16
    ed1e:	37 fe       	sbrs	r3, 7
    ed20:	07 c0       	rjmp	.+14     	; 0xed30 <vfprintf+0x204>
    ed22:	60 81       	ld	r22, Z
    ed24:	71 81       	ldd	r23, Z+1	; 0x01
    ed26:	82 81       	ldd	r24, Z+2	; 0x02
    ed28:	93 81       	ldd	r25, Z+3	; 0x03
    ed2a:	0c 5f       	subi	r16, 0xFC	; 252
    ed2c:	1f 4f       	sbci	r17, 0xFF	; 255
    ed2e:	08 c0       	rjmp	.+16     	; 0xed40 <vfprintf+0x214>
    ed30:	60 81       	ld	r22, Z
    ed32:	71 81       	ldd	r23, Z+1	; 0x01
    ed34:	07 2e       	mov	r0, r23
    ed36:	00 0c       	add	r0, r0
    ed38:	88 0b       	sbc	r24, r24
    ed3a:	99 0b       	sbc	r25, r25
    ed3c:	0e 5f       	subi	r16, 0xFE	; 254
    ed3e:	1f 4f       	sbci	r17, 0xFF	; 255
    ed40:	f3 2d       	mov	r31, r3
    ed42:	ff 76       	andi	r31, 0x6F	; 111
    ed44:	3f 2e       	mov	r3, r31
    ed46:	97 ff       	sbrs	r25, 7
    ed48:	09 c0       	rjmp	.+18     	; 0xed5c <vfprintf+0x230>
    ed4a:	90 95       	com	r25
    ed4c:	80 95       	com	r24
    ed4e:	70 95       	com	r23
    ed50:	61 95       	neg	r22
    ed52:	7f 4f       	sbci	r23, 0xFF	; 255
    ed54:	8f 4f       	sbci	r24, 0xFF	; 255
    ed56:	9f 4f       	sbci	r25, 0xFF	; 255
    ed58:	f0 68       	ori	r31, 0x80	; 128
    ed5a:	3f 2e       	mov	r3, r31
    ed5c:	2a e0       	ldi	r18, 0x0A	; 10
    ed5e:	30 e0       	ldi	r19, 0x00	; 0
    ed60:	a3 01       	movw	r20, r6
    ed62:	33 d1       	rcall	.+614    	; 0xefca <__ultoa_invert>
    ed64:	88 2e       	mov	r8, r24
    ed66:	86 18       	sub	r8, r6
    ed68:	44 c0       	rjmp	.+136    	; 0xedf2 <vfprintf+0x2c6>
    ed6a:	85 37       	cpi	r24, 0x75	; 117
    ed6c:	31 f4       	brne	.+12     	; 0xed7a <vfprintf+0x24e>
    ed6e:	23 2d       	mov	r18, r3
    ed70:	2f 7e       	andi	r18, 0xEF	; 239
    ed72:	b2 2e       	mov	r11, r18
    ed74:	2a e0       	ldi	r18, 0x0A	; 10
    ed76:	30 e0       	ldi	r19, 0x00	; 0
    ed78:	25 c0       	rjmp	.+74     	; 0xedc4 <vfprintf+0x298>
    ed7a:	93 2d       	mov	r25, r3
    ed7c:	99 7f       	andi	r25, 0xF9	; 249
    ed7e:	b9 2e       	mov	r11, r25
    ed80:	8f 36       	cpi	r24, 0x6F	; 111
    ed82:	c1 f0       	breq	.+48     	; 0xedb4 <vfprintf+0x288>
    ed84:	18 f4       	brcc	.+6      	; 0xed8c <vfprintf+0x260>
    ed86:	88 35       	cpi	r24, 0x58	; 88
    ed88:	79 f0       	breq	.+30     	; 0xeda8 <vfprintf+0x27c>
    ed8a:	ae c0       	rjmp	.+348    	; 0xeee8 <vfprintf+0x3bc>
    ed8c:	80 37       	cpi	r24, 0x70	; 112
    ed8e:	19 f0       	breq	.+6      	; 0xed96 <vfprintf+0x26a>
    ed90:	88 37       	cpi	r24, 0x78	; 120
    ed92:	21 f0       	breq	.+8      	; 0xed9c <vfprintf+0x270>
    ed94:	a9 c0       	rjmp	.+338    	; 0xeee8 <vfprintf+0x3bc>
    ed96:	e9 2f       	mov	r30, r25
    ed98:	e0 61       	ori	r30, 0x10	; 16
    ed9a:	be 2e       	mov	r11, r30
    ed9c:	b4 fe       	sbrs	r11, 4
    ed9e:	0d c0       	rjmp	.+26     	; 0xedba <vfprintf+0x28e>
    eda0:	fb 2d       	mov	r31, r11
    eda2:	f4 60       	ori	r31, 0x04	; 4
    eda4:	bf 2e       	mov	r11, r31
    eda6:	09 c0       	rjmp	.+18     	; 0xedba <vfprintf+0x28e>
    eda8:	34 fe       	sbrs	r3, 4
    edaa:	0a c0       	rjmp	.+20     	; 0xedc0 <vfprintf+0x294>
    edac:	29 2f       	mov	r18, r25
    edae:	26 60       	ori	r18, 0x06	; 6
    edb0:	b2 2e       	mov	r11, r18
    edb2:	06 c0       	rjmp	.+12     	; 0xedc0 <vfprintf+0x294>
    edb4:	28 e0       	ldi	r18, 0x08	; 8
    edb6:	30 e0       	ldi	r19, 0x00	; 0
    edb8:	05 c0       	rjmp	.+10     	; 0xedc4 <vfprintf+0x298>
    edba:	20 e1       	ldi	r18, 0x10	; 16
    edbc:	30 e0       	ldi	r19, 0x00	; 0
    edbe:	02 c0       	rjmp	.+4      	; 0xedc4 <vfprintf+0x298>
    edc0:	20 e1       	ldi	r18, 0x10	; 16
    edc2:	32 e0       	ldi	r19, 0x02	; 2
    edc4:	f8 01       	movw	r30, r16
    edc6:	b7 fe       	sbrs	r11, 7
    edc8:	07 c0       	rjmp	.+14     	; 0xedd8 <vfprintf+0x2ac>
    edca:	60 81       	ld	r22, Z
    edcc:	71 81       	ldd	r23, Z+1	; 0x01
    edce:	82 81       	ldd	r24, Z+2	; 0x02
    edd0:	93 81       	ldd	r25, Z+3	; 0x03
    edd2:	0c 5f       	subi	r16, 0xFC	; 252
    edd4:	1f 4f       	sbci	r17, 0xFF	; 255
    edd6:	06 c0       	rjmp	.+12     	; 0xede4 <vfprintf+0x2b8>
    edd8:	60 81       	ld	r22, Z
    edda:	71 81       	ldd	r23, Z+1	; 0x01
    eddc:	80 e0       	ldi	r24, 0x00	; 0
    edde:	90 e0       	ldi	r25, 0x00	; 0
    ede0:	0e 5f       	subi	r16, 0xFE	; 254
    ede2:	1f 4f       	sbci	r17, 0xFF	; 255
    ede4:	a3 01       	movw	r20, r6
    ede6:	f1 d0       	rcall	.+482    	; 0xefca <__ultoa_invert>
    ede8:	88 2e       	mov	r8, r24
    edea:	86 18       	sub	r8, r6
    edec:	fb 2d       	mov	r31, r11
    edee:	ff 77       	andi	r31, 0x7F	; 127
    edf0:	3f 2e       	mov	r3, r31
    edf2:	36 fe       	sbrs	r3, 6
    edf4:	0d c0       	rjmp	.+26     	; 0xee10 <vfprintf+0x2e4>
    edf6:	23 2d       	mov	r18, r3
    edf8:	2e 7f       	andi	r18, 0xFE	; 254
    edfa:	a2 2e       	mov	r10, r18
    edfc:	89 14       	cp	r8, r9
    edfe:	58 f4       	brcc	.+22     	; 0xee16 <vfprintf+0x2ea>
    ee00:	34 fe       	sbrs	r3, 4
    ee02:	0b c0       	rjmp	.+22     	; 0xee1a <vfprintf+0x2ee>
    ee04:	32 fc       	sbrc	r3, 2
    ee06:	09 c0       	rjmp	.+18     	; 0xee1a <vfprintf+0x2ee>
    ee08:	83 2d       	mov	r24, r3
    ee0a:	8e 7e       	andi	r24, 0xEE	; 238
    ee0c:	a8 2e       	mov	r10, r24
    ee0e:	05 c0       	rjmp	.+10     	; 0xee1a <vfprintf+0x2ee>
    ee10:	b8 2c       	mov	r11, r8
    ee12:	a3 2c       	mov	r10, r3
    ee14:	03 c0       	rjmp	.+6      	; 0xee1c <vfprintf+0x2f0>
    ee16:	b8 2c       	mov	r11, r8
    ee18:	01 c0       	rjmp	.+2      	; 0xee1c <vfprintf+0x2f0>
    ee1a:	b9 2c       	mov	r11, r9
    ee1c:	a4 fe       	sbrs	r10, 4
    ee1e:	0f c0       	rjmp	.+30     	; 0xee3e <vfprintf+0x312>
    ee20:	fe 01       	movw	r30, r28
    ee22:	e8 0d       	add	r30, r8
    ee24:	f1 1d       	adc	r31, r1
    ee26:	80 81       	ld	r24, Z
    ee28:	80 33       	cpi	r24, 0x30	; 48
    ee2a:	21 f4       	brne	.+8      	; 0xee34 <vfprintf+0x308>
    ee2c:	9a 2d       	mov	r25, r10
    ee2e:	99 7e       	andi	r25, 0xE9	; 233
    ee30:	a9 2e       	mov	r10, r25
    ee32:	09 c0       	rjmp	.+18     	; 0xee46 <vfprintf+0x31a>
    ee34:	a2 fe       	sbrs	r10, 2
    ee36:	06 c0       	rjmp	.+12     	; 0xee44 <vfprintf+0x318>
    ee38:	b3 94       	inc	r11
    ee3a:	b3 94       	inc	r11
    ee3c:	04 c0       	rjmp	.+8      	; 0xee46 <vfprintf+0x31a>
    ee3e:	8a 2d       	mov	r24, r10
    ee40:	86 78       	andi	r24, 0x86	; 134
    ee42:	09 f0       	breq	.+2      	; 0xee46 <vfprintf+0x31a>
    ee44:	b3 94       	inc	r11
    ee46:	a3 fc       	sbrc	r10, 3
    ee48:	10 c0       	rjmp	.+32     	; 0xee6a <vfprintf+0x33e>
    ee4a:	a0 fe       	sbrs	r10, 0
    ee4c:	06 c0       	rjmp	.+12     	; 0xee5a <vfprintf+0x32e>
    ee4e:	b2 14       	cp	r11, r2
    ee50:	80 f4       	brcc	.+32     	; 0xee72 <vfprintf+0x346>
    ee52:	28 0c       	add	r2, r8
    ee54:	92 2c       	mov	r9, r2
    ee56:	9b 18       	sub	r9, r11
    ee58:	0d c0       	rjmp	.+26     	; 0xee74 <vfprintf+0x348>
    ee5a:	b2 14       	cp	r11, r2
    ee5c:	58 f4       	brcc	.+22     	; 0xee74 <vfprintf+0x348>
    ee5e:	b6 01       	movw	r22, r12
    ee60:	80 e2       	ldi	r24, 0x20	; 32
    ee62:	90 e0       	ldi	r25, 0x00	; 0
    ee64:	76 d0       	rcall	.+236    	; 0xef52 <fputc>
    ee66:	b3 94       	inc	r11
    ee68:	f8 cf       	rjmp	.-16     	; 0xee5a <vfprintf+0x32e>
    ee6a:	b2 14       	cp	r11, r2
    ee6c:	18 f4       	brcc	.+6      	; 0xee74 <vfprintf+0x348>
    ee6e:	2b 18       	sub	r2, r11
    ee70:	02 c0       	rjmp	.+4      	; 0xee76 <vfprintf+0x34a>
    ee72:	98 2c       	mov	r9, r8
    ee74:	21 2c       	mov	r2, r1
    ee76:	a4 fe       	sbrs	r10, 4
    ee78:	0f c0       	rjmp	.+30     	; 0xee98 <vfprintf+0x36c>
    ee7a:	b6 01       	movw	r22, r12
    ee7c:	80 e3       	ldi	r24, 0x30	; 48
    ee7e:	90 e0       	ldi	r25, 0x00	; 0
    ee80:	68 d0       	rcall	.+208    	; 0xef52 <fputc>
    ee82:	a2 fe       	sbrs	r10, 2
    ee84:	16 c0       	rjmp	.+44     	; 0xeeb2 <vfprintf+0x386>
    ee86:	a1 fc       	sbrc	r10, 1
    ee88:	03 c0       	rjmp	.+6      	; 0xee90 <vfprintf+0x364>
    ee8a:	88 e7       	ldi	r24, 0x78	; 120
    ee8c:	90 e0       	ldi	r25, 0x00	; 0
    ee8e:	02 c0       	rjmp	.+4      	; 0xee94 <vfprintf+0x368>
    ee90:	88 e5       	ldi	r24, 0x58	; 88
    ee92:	90 e0       	ldi	r25, 0x00	; 0
    ee94:	b6 01       	movw	r22, r12
    ee96:	0c c0       	rjmp	.+24     	; 0xeeb0 <vfprintf+0x384>
    ee98:	8a 2d       	mov	r24, r10
    ee9a:	86 78       	andi	r24, 0x86	; 134
    ee9c:	51 f0       	breq	.+20     	; 0xeeb2 <vfprintf+0x386>
    ee9e:	a1 fe       	sbrs	r10, 1
    eea0:	02 c0       	rjmp	.+4      	; 0xeea6 <vfprintf+0x37a>
    eea2:	8b e2       	ldi	r24, 0x2B	; 43
    eea4:	01 c0       	rjmp	.+2      	; 0xeea8 <vfprintf+0x37c>
    eea6:	80 e2       	ldi	r24, 0x20	; 32
    eea8:	a7 fc       	sbrc	r10, 7
    eeaa:	8d e2       	ldi	r24, 0x2D	; 45
    eeac:	b6 01       	movw	r22, r12
    eeae:	90 e0       	ldi	r25, 0x00	; 0
    eeb0:	50 d0       	rcall	.+160    	; 0xef52 <fputc>
    eeb2:	89 14       	cp	r8, r9
    eeb4:	30 f4       	brcc	.+12     	; 0xeec2 <vfprintf+0x396>
    eeb6:	b6 01       	movw	r22, r12
    eeb8:	80 e3       	ldi	r24, 0x30	; 48
    eeba:	90 e0       	ldi	r25, 0x00	; 0
    eebc:	4a d0       	rcall	.+148    	; 0xef52 <fputc>
    eebe:	9a 94       	dec	r9
    eec0:	f8 cf       	rjmp	.-16     	; 0xeeb2 <vfprintf+0x386>
    eec2:	8a 94       	dec	r8
    eec4:	f3 01       	movw	r30, r6
    eec6:	e8 0d       	add	r30, r8
    eec8:	f1 1d       	adc	r31, r1
    eeca:	80 81       	ld	r24, Z
    eecc:	b6 01       	movw	r22, r12
    eece:	90 e0       	ldi	r25, 0x00	; 0
    eed0:	40 d0       	rcall	.+128    	; 0xef52 <fputc>
    eed2:	81 10       	cpse	r8, r1
    eed4:	f6 cf       	rjmp	.-20     	; 0xeec2 <vfprintf+0x396>
    eed6:	22 20       	and	r2, r2
    eed8:	09 f4       	brne	.+2      	; 0xeedc <vfprintf+0x3b0>
    eeda:	4e ce       	rjmp	.-868    	; 0xeb78 <vfprintf+0x4c>
    eedc:	b6 01       	movw	r22, r12
    eede:	80 e2       	ldi	r24, 0x20	; 32
    eee0:	90 e0       	ldi	r25, 0x00	; 0
    eee2:	37 d0       	rcall	.+110    	; 0xef52 <fputc>
    eee4:	2a 94       	dec	r2
    eee6:	f7 cf       	rjmp	.-18     	; 0xeed6 <vfprintf+0x3aa>
    eee8:	f6 01       	movw	r30, r12
    eeea:	86 81       	ldd	r24, Z+6	; 0x06
    eeec:	97 81       	ldd	r25, Z+7	; 0x07
    eeee:	02 c0       	rjmp	.+4      	; 0xeef4 <vfprintf+0x3c8>
    eef0:	8f ef       	ldi	r24, 0xFF	; 255
    eef2:	9f ef       	ldi	r25, 0xFF	; 255
    eef4:	2b 96       	adiw	r28, 0x0b	; 11
    eef6:	0f b6       	in	r0, 0x3f	; 63
    eef8:	f8 94       	cli
    eefa:	de bf       	out	0x3e, r29	; 62
    eefc:	0f be       	out	0x3f, r0	; 63
    eefe:	cd bf       	out	0x3d, r28	; 61
    ef00:	df 91       	pop	r29
    ef02:	cf 91       	pop	r28
    ef04:	1f 91       	pop	r17
    ef06:	0f 91       	pop	r16
    ef08:	ff 90       	pop	r15
    ef0a:	ef 90       	pop	r14
    ef0c:	df 90       	pop	r13
    ef0e:	cf 90       	pop	r12
    ef10:	bf 90       	pop	r11
    ef12:	af 90       	pop	r10
    ef14:	9f 90       	pop	r9
    ef16:	8f 90       	pop	r8
    ef18:	7f 90       	pop	r7
    ef1a:	6f 90       	pop	r6
    ef1c:	5f 90       	pop	r5
    ef1e:	4f 90       	pop	r4
    ef20:	3f 90       	pop	r3
    ef22:	2f 90       	pop	r2
    ef24:	08 95       	ret

0000ef26 <strnlen_P>:
    ef26:	fc 01       	movw	r30, r24
    ef28:	05 90       	lpm	r0, Z+
    ef2a:	61 50       	subi	r22, 0x01	; 1
    ef2c:	70 40       	sbci	r23, 0x00	; 0
    ef2e:	01 10       	cpse	r0, r1
    ef30:	d8 f7       	brcc	.-10     	; 0xef28 <strnlen_P+0x2>
    ef32:	80 95       	com	r24
    ef34:	90 95       	com	r25
    ef36:	8e 0f       	add	r24, r30
    ef38:	9f 1f       	adc	r25, r31
    ef3a:	08 95       	ret

0000ef3c <strnlen>:
    ef3c:	fc 01       	movw	r30, r24
    ef3e:	61 50       	subi	r22, 0x01	; 1
    ef40:	70 40       	sbci	r23, 0x00	; 0
    ef42:	01 90       	ld	r0, Z+
    ef44:	01 10       	cpse	r0, r1
    ef46:	d8 f7       	brcc	.-10     	; 0xef3e <strnlen+0x2>
    ef48:	80 95       	com	r24
    ef4a:	90 95       	com	r25
    ef4c:	8e 0f       	add	r24, r30
    ef4e:	9f 1f       	adc	r25, r31
    ef50:	08 95       	ret

0000ef52 <fputc>:
    ef52:	0f 93       	push	r16
    ef54:	1f 93       	push	r17
    ef56:	cf 93       	push	r28
    ef58:	df 93       	push	r29
    ef5a:	fb 01       	movw	r30, r22
    ef5c:	23 81       	ldd	r18, Z+3	; 0x03
    ef5e:	21 fd       	sbrc	r18, 1
    ef60:	03 c0       	rjmp	.+6      	; 0xef68 <fputc+0x16>
    ef62:	8f ef       	ldi	r24, 0xFF	; 255
    ef64:	9f ef       	ldi	r25, 0xFF	; 255
    ef66:	2c c0       	rjmp	.+88     	; 0xefc0 <fputc+0x6e>
    ef68:	22 ff       	sbrs	r18, 2
    ef6a:	16 c0       	rjmp	.+44     	; 0xef98 <fputc+0x46>
    ef6c:	46 81       	ldd	r20, Z+6	; 0x06
    ef6e:	57 81       	ldd	r21, Z+7	; 0x07
    ef70:	24 81       	ldd	r18, Z+4	; 0x04
    ef72:	35 81       	ldd	r19, Z+5	; 0x05
    ef74:	42 17       	cp	r20, r18
    ef76:	53 07       	cpc	r21, r19
    ef78:	44 f4       	brge	.+16     	; 0xef8a <fputc+0x38>
    ef7a:	a0 81       	ld	r26, Z
    ef7c:	b1 81       	ldd	r27, Z+1	; 0x01
    ef7e:	9d 01       	movw	r18, r26
    ef80:	2f 5f       	subi	r18, 0xFF	; 255
    ef82:	3f 4f       	sbci	r19, 0xFF	; 255
    ef84:	31 83       	std	Z+1, r19	; 0x01
    ef86:	20 83       	st	Z, r18
    ef88:	8c 93       	st	X, r24
    ef8a:	26 81       	ldd	r18, Z+6	; 0x06
    ef8c:	37 81       	ldd	r19, Z+7	; 0x07
    ef8e:	2f 5f       	subi	r18, 0xFF	; 255
    ef90:	3f 4f       	sbci	r19, 0xFF	; 255
    ef92:	37 83       	std	Z+7, r19	; 0x07
    ef94:	26 83       	std	Z+6, r18	; 0x06
    ef96:	14 c0       	rjmp	.+40     	; 0xefc0 <fputc+0x6e>
    ef98:	8b 01       	movw	r16, r22
    ef9a:	ec 01       	movw	r28, r24
    ef9c:	fb 01       	movw	r30, r22
    ef9e:	00 84       	ldd	r0, Z+8	; 0x08
    efa0:	f1 85       	ldd	r31, Z+9	; 0x09
    efa2:	e0 2d       	mov	r30, r0
    efa4:	09 95       	icall
    efa6:	89 2b       	or	r24, r25
    efa8:	e1 f6       	brne	.-72     	; 0xef62 <fputc+0x10>
    efaa:	d8 01       	movw	r26, r16
    efac:	16 96       	adiw	r26, 0x06	; 6
    efae:	8d 91       	ld	r24, X+
    efb0:	9c 91       	ld	r25, X
    efb2:	17 97       	sbiw	r26, 0x07	; 7
    efb4:	01 96       	adiw	r24, 0x01	; 1
    efb6:	17 96       	adiw	r26, 0x07	; 7
    efb8:	9c 93       	st	X, r25
    efba:	8e 93       	st	-X, r24
    efbc:	16 97       	sbiw	r26, 0x06	; 6
    efbe:	ce 01       	movw	r24, r28
    efc0:	df 91       	pop	r29
    efc2:	cf 91       	pop	r28
    efc4:	1f 91       	pop	r17
    efc6:	0f 91       	pop	r16
    efc8:	08 95       	ret

0000efca <__ultoa_invert>:
    efca:	fa 01       	movw	r30, r20
    efcc:	aa 27       	eor	r26, r26
    efce:	28 30       	cpi	r18, 0x08	; 8
    efd0:	51 f1       	breq	.+84     	; 0xf026 <__ultoa_invert+0x5c>
    efd2:	20 31       	cpi	r18, 0x10	; 16
    efd4:	81 f1       	breq	.+96     	; 0xf036 <__ultoa_invert+0x6c>
    efd6:	e8 94       	clt
    efd8:	6f 93       	push	r22
    efda:	6e 7f       	andi	r22, 0xFE	; 254
    efdc:	6e 5f       	subi	r22, 0xFE	; 254
    efde:	7f 4f       	sbci	r23, 0xFF	; 255
    efe0:	8f 4f       	sbci	r24, 0xFF	; 255
    efe2:	9f 4f       	sbci	r25, 0xFF	; 255
    efe4:	af 4f       	sbci	r26, 0xFF	; 255
    efe6:	b1 e0       	ldi	r27, 0x01	; 1
    efe8:	3e d0       	rcall	.+124    	; 0xf066 <__ultoa_invert+0x9c>
    efea:	b4 e0       	ldi	r27, 0x04	; 4
    efec:	3c d0       	rcall	.+120    	; 0xf066 <__ultoa_invert+0x9c>
    efee:	67 0f       	add	r22, r23
    eff0:	78 1f       	adc	r23, r24
    eff2:	89 1f       	adc	r24, r25
    eff4:	9a 1f       	adc	r25, r26
    eff6:	a1 1d       	adc	r26, r1
    eff8:	68 0f       	add	r22, r24
    effa:	79 1f       	adc	r23, r25
    effc:	8a 1f       	adc	r24, r26
    effe:	91 1d       	adc	r25, r1
    f000:	a1 1d       	adc	r26, r1
    f002:	6a 0f       	add	r22, r26
    f004:	71 1d       	adc	r23, r1
    f006:	81 1d       	adc	r24, r1
    f008:	91 1d       	adc	r25, r1
    f00a:	a1 1d       	adc	r26, r1
    f00c:	20 d0       	rcall	.+64     	; 0xf04e <__ultoa_invert+0x84>
    f00e:	09 f4       	brne	.+2      	; 0xf012 <__ultoa_invert+0x48>
    f010:	68 94       	set
    f012:	3f 91       	pop	r19
    f014:	2a e0       	ldi	r18, 0x0A	; 10
    f016:	26 9f       	mul	r18, r22
    f018:	11 24       	eor	r1, r1
    f01a:	30 19       	sub	r19, r0
    f01c:	30 5d       	subi	r19, 0xD0	; 208
    f01e:	31 93       	st	Z+, r19
    f020:	de f6       	brtc	.-74     	; 0xefd8 <__ultoa_invert+0xe>
    f022:	cf 01       	movw	r24, r30
    f024:	08 95       	ret
    f026:	46 2f       	mov	r20, r22
    f028:	47 70       	andi	r20, 0x07	; 7
    f02a:	40 5d       	subi	r20, 0xD0	; 208
    f02c:	41 93       	st	Z+, r20
    f02e:	b3 e0       	ldi	r27, 0x03	; 3
    f030:	0f d0       	rcall	.+30     	; 0xf050 <__ultoa_invert+0x86>
    f032:	c9 f7       	brne	.-14     	; 0xf026 <__ultoa_invert+0x5c>
    f034:	f6 cf       	rjmp	.-20     	; 0xf022 <__ultoa_invert+0x58>
    f036:	46 2f       	mov	r20, r22
    f038:	4f 70       	andi	r20, 0x0F	; 15
    f03a:	40 5d       	subi	r20, 0xD0	; 208
    f03c:	4a 33       	cpi	r20, 0x3A	; 58
    f03e:	18 f0       	brcs	.+6      	; 0xf046 <__ultoa_invert+0x7c>
    f040:	49 5d       	subi	r20, 0xD9	; 217
    f042:	31 fd       	sbrc	r19, 1
    f044:	40 52       	subi	r20, 0x20	; 32
    f046:	41 93       	st	Z+, r20
    f048:	02 d0       	rcall	.+4      	; 0xf04e <__ultoa_invert+0x84>
    f04a:	a9 f7       	brne	.-22     	; 0xf036 <__ultoa_invert+0x6c>
    f04c:	ea cf       	rjmp	.-44     	; 0xf022 <__ultoa_invert+0x58>
    f04e:	b4 e0       	ldi	r27, 0x04	; 4
    f050:	a6 95       	lsr	r26
    f052:	97 95       	ror	r25
    f054:	87 95       	ror	r24
    f056:	77 95       	ror	r23
    f058:	67 95       	ror	r22
    f05a:	ba 95       	dec	r27
    f05c:	c9 f7       	brne	.-14     	; 0xf050 <__ultoa_invert+0x86>
    f05e:	00 97       	sbiw	r24, 0x00	; 0
    f060:	61 05       	cpc	r22, r1
    f062:	71 05       	cpc	r23, r1
    f064:	08 95       	ret
    f066:	9b 01       	movw	r18, r22
    f068:	ac 01       	movw	r20, r24
    f06a:	0a 2e       	mov	r0, r26
    f06c:	06 94       	lsr	r0
    f06e:	57 95       	ror	r21
    f070:	47 95       	ror	r20
    f072:	37 95       	ror	r19
    f074:	27 95       	ror	r18
    f076:	ba 95       	dec	r27
    f078:	c9 f7       	brne	.-14     	; 0xf06c <__ultoa_invert+0xa2>
    f07a:	62 0f       	add	r22, r18
    f07c:	73 1f       	adc	r23, r19
    f07e:	84 1f       	adc	r24, r20
    f080:	95 1f       	adc	r25, r21
    f082:	a0 1d       	adc	r26, r0
    f084:	08 95       	ret

0000f086 <_exit>:
    f086:	f8 94       	cli

0000f088 <__stop_program>:
    f088:	ff cf       	rjmp	.-2      	; 0xf088 <__stop_program>
